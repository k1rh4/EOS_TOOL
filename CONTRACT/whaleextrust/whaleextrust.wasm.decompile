(data (i32.const 4) "@\9b\00\00")
(data (i32.const 16) "\00")
(data (i32.const 288) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 352) "last bucket was initialized\00")
(data (i32.const 384) "bucket time should be at minute begin\00")
(data (i32.const 432) "cannot create objects in table of another contract\00")
(data (i32.const 496) "write\00")
(data (i32.const 512) "error reading iterator\00")
(data (i32.const 544) "read\00")
(data (i32.const 560) "account not existed\00")
(data (i32.const 592) "unable to find key\00")
(data (i32.const 624) "inconsistent account type\00")
(data (i32.const 656) "get\00")
(data (i32.const 672) "singleton does not exist\00")
(data (i32.const 704) "last bucket was not initialized\00")
(data (i32.const 736) "cannot pass end iterator to erase\00")
(data (i32.const 784) "cannot increment end iterator\00")
(data (i32.const 816) "no bucket is updated\00")
(data (i32.const 848) "object passed to modify is not in multi_index\00")
(data (i32.const 896) "cannot modify objects in table of another contract\00")
(data (i32.const 960) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1024) "object passed to erase is not in multi_index\00")
(data (i32.const 1072) "cannot erase objects in table of another contract\00")
(data (i32.const 1136) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1200) "can\'t complete bucket before last bucket\00")
(data (i32.const 1248) "bucket can\'t be completed in fixed miniutes\00")
(data (i32.const 1296) "bucket is already completed\00")
(data (i32.const 1328) "cannot pass end iterator to modify\00")
(data (i32.const 1376) "the action is not used anymore\00")
(data (i32.const 1408) "string contains invalid characters\00")
(data (i32.const 1456) "unable to find secondary key\00")
(data (i32.const 1488) "can\'t withdraw this order\00")
(data (i32.const 1520) "user doesn\'t have the public key\00")
(data (i32.const 1584) "buy\00")
(data (i32.const 1600) "sell\00")
(data (i32.const 1616) "market\00")
(data (i32.const 1632) "limit\00")
(data (i32.const 1648) " | \00")
(data (i32.const 1664) " \00")
(data (i32.const 1668) "\90\06\00\00")
(data (i32.const 1680) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 1728) "\e4\b8\84\00")
(data (i32.const 1744) "hash memo\00")
(data (i32.const 1760) "can\'t add order before last bucket\00")
(data (i32.const 1808) "can\'t add order with negative amount\00")
(data (i32.const 1856) "can\'t add order to completed bucket\00")
(data (i32.const 1904) "real memo\00")
(data (i32.const 1920) "can\'t withdraw with this order\00")
(data (i32.const 1952) "order extend order id not found\00")
(data (i32.const 1984) "buyer order extend hash is not consistent\00")
(data (i32.const 2032) "can\'t withdraw to an non eos account\00")
(data (i32.const 2080) "withdraw\00")
(data (i32.const 2096) "account=\00")
(data (i32.const 2112) "&type=\00")
(data (i32.const 2128) "&value=\00")
(data (i32.const 2144) "active\00")
(data (i32.const 2160) "dfuseiohooks\00")
(data (i32.const 2176) "event\00")
(data (i32.const 2192) "next primary key in table is at autoincrement limit\00")
(data (i32.const 2256) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 2320) "cannot decrement iterator at beginning of table\00")
(data (i32.const 2368) "invalid account\00")
(data (i32.const 2384) "not an ibc symbol\00")
(data (i32.const 2416) "can only withdraw to eos account\00")
(data (i32.const 2464) "eos account can\'t withdraw to ibc proxy\00")
(data (i32.const 2512) "no or invalid eos account is specified to withdraw\00")
(data (i32.const 2576) "no orders can be cleared\00")
(data (i32.const 2608) "should be impossible that no bucket found when clear\00")
(data (i32.const 2672) "this should be impossible\00")
(data (i32.const 2704) "invalid token\00")
(data (i32.const 2720) "unknown asset contract\00")
(data (i32.const 2752) "invalid amount\00")
(data (i32.const 2768) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 2832) "invalid symbol name\00")
(data (i32.const 2864) "can\'t delete base token fee\00")
(data (i32.const 2896) "invalid quantity in withdraw\00")
(data (i32.const 2928) "non positive quantity is disallowed in withdraw\00")
(data (i32.const 2976) "negative fee quantity is disallowed in withdraw\00")
(data (i32.const 3024) "can\'t withdraw to other account for not using owner key\00")
(data (i32.const 3088) "unsupported id type\00")
(data (i32.const 3120) "whaleexadmin\00")
(data (i32.const 3136) "eos account not found\00")
(data (i32.const 3168) "from account not founded\00")
(data (i32.const 3200) "to account not founded\00")
(data (i32.const 3232) "can\'t send to contract\00")
(data (i32.const 3264) "memo has more than 256 bytes\00")
(data (i32.const 3296) "1,\00")
(data (i32.const 3312) "2,\00")
(data (i32.const 3328) "3,\00")
(data (i32.const 3344) "pretransfer\00")
(data (i32.const 3360) "transfer\00")
(data (i32.const 3376) "rebalance\00")
(data (i32.const 3392) "type mismatch\00")
(data (i32.const 3408) "attempt to add asset with different symbol\00")
(data (i32.const 3456) "addition underflow\00")
(data (i32.const 3488) "addition overflow\00")
(data (i32.const 3520) "overdrawn balance 2\00")
(data (i32.const 3552) "overdrawn balance 1\00")
(data (i32.const 3584) "symbol precision mismatch\00")
(data (i32.const 3616) "overdraw balance 2\00")
(data (i32.const 3648) "already destroyed\00")
(data (i32.const 3680) "no withdraw request object from the exchange\00")
(data (i32.const 3728) "withdraw back is not available yet\00")
(data (i32.const 3776) "Withdraw From WhaleEx\00")
(data (i32.const 3808) "invalid trade_id\00")
(data (i32.const 3840) "invalid base_amount\00")
(data (i32.const 3872) "user is not in exchange\'s airdrop list\00")
(data (i32.const 3920) "airdrop\00")
(data (i32.const 3936) "buyer memo has more than 256 bytes\00")
(data (i32.const 3984) "seller memo has more than 256 bytes\00")
(data (i32.const 4032) "invalid base token\00")
(data (i32.const 4064) "invalid quote token\00")
(data (i32.const 4096) "invalid buyer_base_amount\00")
(data (i32.const 4128) "invalid buyer_quote_amount\00")
(data (i32.const 4160) "invalid seller_base_amount\00")
(data (i32.const 4192) "invalid seller_quote_amount\00")
(data (i32.const 4224) "invalid quote_amount\00")
(data (i32.const 4256) "invalid buyer_fee_amount\00")
(data (i32.const 4288) "invalid seller_fee_amount\00")
(data (i32.const 4320) "max ratio should be <= 1\00")
(data (i32.const 4352) "buyer receive exceeded\00")
(data (i32.const 4384) "seller receive exceeded\00")
(data (i32.const 4416) "buyer fee exceeded\00")
(data (i32.const 4448) "seller fee exceeded\00")
(data (i32.const 4480) "can\'t withdraw this buy order\00")
(data (i32.const 4512) "buyer order extend order id not found\00")
(data (i32.const 4560) "can\'t withdraw this sell order\00")
(data (i32.const 4592) "seller order extend order id not found\00")
(data (i32.const 4640) "seller order extend hash is not consistent\00")
(data (i32.const 4688) "order is not found on user active buy\00")
(data (i32.const 4736) "order is not found on user active sell\00")
(data (i32.const 4784) "buyget\00")
(data (i32.const 4800) "buypay\00")
(data (i32.const 4816) "sellget\00")
(data (i32.const 4832) "sellpay\00")
(data (i32.const 4848) "trade\00")
(data (i32.const 4864) "-\00")
(data (i32.const 4880) "digital account stake for an non-existed eos account\00")
(data (i32.const 4944) "order is not found when update\00")
(data (i32.const 4976) "can\'t update order with negative amount\00")
(data (i32.const 5024) "can\'t update order leaving amount to negative\00")
(data (i32.const 5072) "order is not found when clear\00")
(data (i32.const 5104) "should be impossible that can\'t get bucket\00")
(data (i32.const 5152) "trade already existed, can\'t be skipped\00")
(data (i32.const 5200) "invalid clearing nonce\00")
(data (i32.const 5232) "no available record\00")
(data (i32.const 5264) "clearing nonce not existed\00")
(data (i32.const 5296) "invalid settlement nonce\00")
(data (i32.const 5328) "CPU\00")
(data (i32.const 5344) "asset\00")
(data (i32.const 5360) ",\00")
(data (i32.const 5376) "stat\00")
(data (i32.const 5392) "stake\00")
(data (i32.const 5408) "stake stat\00")
(data (i32.const 5424) "overdraw stake stat 2\00")
(data (i32.const 5456) "overdraw stake stat 1\00")
(data (i32.const 5488) "overdraw stake balance 2\00")
(data (i32.const 5520) "overdraw stake balance 1\00")
(data (i32.const 5552) "order is not found when cancel\00")
(data (i32.const 5584) "order is already canceled\00")
(data (i32.const 5616) "sendback\00")
(data (i32.const 5632) "no symbol map found\00")
(data (i32.const 5664) "delegate\00")
(data (i32.const 5680) "settlement nonce not existed\00")
(data (i32.const 5712) "confirmor can only airdrop for exchange\00")
(data (i32.const 5760) "can\'t airdrop by confirmor to current user\00")
(data (i32.const 5808) "from is not an account\00")
(data (i32.const 5840) "invalid quantity in airdrop\00")
(data (i32.const 5872) "non positive quantity is disallowed in airdrop\00")
(data (i32.const 5920) "can\'t airdrop to self\00")
(data (i32.const 5952) "not eos account or digital account\00")
(data (i32.const 6000) "can\'t create eos account\00")
(data (i32.const 6032) "non positive quantity is disallowed in retransfer\00")
(data (i32.const 6096) "cannot register self\00")
(data (i32.const 6128) "exchange account does not exist\00")
(data (i32.const 6160) "invalid exchange_desc len\00")
(data (i32.const 6192) "invalid exchange_desc\00")
(data (i32.const 6224) "can\'t bind the contract\00")
(data (i32.const 6256) "public key can\'t be default\00")
(data (i32.const 6288) "exceeded max bind times\00")
(data (i32.const 6320) "exceeded max keys\00")
(data (i32.const 6352) "public key not found\00")
(data (i32.const 6384) "can\'t register contract self to airdroper\00")
(data (i32.const 6432) "account does not exist\00")
(data (i32.const 6464) "user is not an account\00")
(data (i32.const 6496) "can\'t add self to black list\00")
(data (i32.const 6528) "user not in black list\00")
(data (i32.const 6560) "can\'t add self to airdrop list\00")
(data (i32.const 6592) "user not in airdrop list\00")
(data (i32.const 6624) "token_contract is not an account\00")
(data (i32.const 6672) "token_contract not in black list\00")
(data (i32.const 6720) "token contract is not an account\00")
(data (i32.const 6768) "symbol precision mismatch2\00")
(data (i32.const 6800) "invalid symbol\00")
(data (i32.const 6816) "token not found\00")
(data (i32.const 6832) "token not in whitelist\00")
(data (i32.const 6864) "transfer token amount is too small\00")
(data (i32.const 6912) "stake account is not on chain\00")
(data (i32.const 6944) "non positive quantity is disallowed in stake\00")
(data (i32.const 6992) "function not supported now\00")
(data (i32.const 7024) "no destroy request object from the exchange\00")
(data (i32.const 7072) "unstake back is not available yet\00")
(data (i32.const 7120) "invalid order memo\00")
(data (i32.const 7152) "buy or sell needed\00")
(data (i32.const 7184) "limit or market needed\00")
(data (i32.const 7216) "base symbol not exists\00")
(data (i32.const 7248) "quote symbol not exists\00")
(data (i32.const 7280) "no symbol pair found\00")
(data (i32.const 7312) "invalid base amount\00")
(data (i32.const 7344) "invalid quote amount\00")
(data (i32.const 7376) "invalid base or quote amount for limit order\00")
(data (i32.const 7424) "invalid base or quote amount for market order\00")
(data (i32.const 7472) "max maker ratio should be <= 1\00")
(data (i32.const 7504) "max taker ratio should be <= 1\00")
(data (i32.const 7536) "maker fee rate is too small\00")
(data (i32.const 7568) "taker fee rate is too small\00")
(data (i32.const 7600) "invalid exchange\00")
(data (i32.const 7632) "invalid order time\00")
(data (i32.const 7664) "invalid order id\00")
(data (i32.const 7696) "only ibc proxy account can withdraw with order\00")
(data (i32.const 7744) "invalid cpu stake for\00")
(data (i32.const 7776) "can only place order to self\00")
(data (i32.const 7808) "transfer amount is less than quote amount\00")
(data (i32.const 7856) "transfer amount is less than base amount\00")
(data (i32.const 7904) "symbol is not same to transfer token\00")
(data (i32.const 7952) "base amount is too large or too small\00")
(data (i32.const 8000) "quote amount is too small\00")
(data (i32.const 8032) "read_transaction failed\00")
(data (i32.const 8064) "eosio.token\00")
(data (i32.const 8080) "eos symbol not found\00")
(data (i32.const 8112) "eosio\00")
(data (i32.const 8128) "no available left to claim\00")
(data (i32.const 8160) "whaleairdrop\00")
(data (i32.const 8176) "please use claimeos action\00")
(data (i32.const 8208) "not an eos account\00")
(data (i32.const 8240) "escrow account is not in list\00")
(data (i32.const 8272) "symbol not found\00")
(data (i32.const 8304) "no record can be removed\00")
(data (i32.const 8336) "record should be removed first\00")
(data (i32.const 8368) "Refund Back\00")
(data (i32.const 8384) "not supported\00")
(data (i32.const 8400) "this action not used anymore\00")
(data (i32.const 8432) "no creditors\00")
(data (i32.const 8448) "no available creditor now\00")
(data (i32.const 8480) "trade_id,\00")
(data (i32.const 8496) "undelegate\00")
(data (i32.const 8512) "refund available\00")
(data (i32.const 8544) "refund\00")
(data (i32.const 8560) "trade id not found\00")
(data (i32.const 8592) "creditor is not in turn\00")
(data (i32.const 8624) "undelegatebw\00")
(data (i32.const 8640) "expire,\00")
(data (i32.const 8656) "symbol map not existed\00")
(data (i32.const 8688) "user delegate not found\00")
(data (i32.const 8720) "can\'t find delegate id\00")
(data (i32.const 8752) "already delegated\00")
(data (i32.const 8784) "transfer for delegate\00")
(data (i32.const 8816) "delegatebw\00")
(data (i32.const 8832) ".\00")
(data (i32.const 8848) "scheduled,\00")
(data (i32.const 8864) "undelegate time,\00")
(data (i32.const 8896) "no creditor found\00")
(data (i32.const 8928) "find creditor, \00")
(data (i32.const 8944) "trade id not existed\00")
(data (i32.const 8976) "trade hasn\'t been undelegated\00")
(data (i32.const 9008) "does not arrived to refund time\00")
(data (i32.const 9040) "from has no delegate to account\00")
(data (i32.const 9072) "proxy is not an eos account\00")
(data (i32.const 9104) "invalid chain\00")
(data (i32.const 9120) "invalid proxy\00")
(data (i32.const 9136) "already existed\00")
(data (i32.const 9152) "contract is not an eos account\00")
(data (i32.const 9184) "symbol not exists\00")
(data (i32.const 9216) "no chain proxy id\00")
(data (i32.const 9248) "suffix already exists\00")
(data (i32.const 9280) "suffix not found\00")
(data (i32.const 9312) "user asset is not empty\00")
(data (i32.const 9344) "already have an eos account\00")
(data (i32.const 9376) "can\'t create digital account\00")
(data (i32.const 9408) "owner key not found\00")
(data (i32.const 9440) "trade key can\'t be default\00")
(data (i32.const 9472) "EOS\00")
(data (i32.const 9488) "PUB_R1_\00")
(data (i32.const 9504) "unrecognized public key format\00")
(data (i32.const 9536) "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\00")
(data (i32.const 9600) "invalid base-58 value\00")
(data (i32.const 9632) "base-58 value is out of range\00")
(data (i32.const 9664) "owner key can\'t be default\00")
(data (i32.const 9696) "owner key inconsistent\00")
(data (i32.const 9728) "can\'t execute for reset key is forbidden\00")
(data (i32.const 9776) "can\'t bind eos account with suffix wal\00")
(data (i32.const 9824) "invalid digital account\00")
(data (i32.const 9856) "digital account already exists\00")
(data (i32.const 9888) "digital account is already binded\00")
(data (i32.const 9936) "can\'t bind eos account with suffix wal to other digital account\00")
(data (i32.const 10000) "eos account is already existed\00")
(data (i32.const 10032) "owner key not exist\00")
(data (i32.const 10064) "already binded an account\00")
(data (i32.const 10096) "account is not in whitelist\00")
(data (i32.const 10128) "account is already in whitelist\00")
(data (i32.const 10160) "SIG_K1_\00")
(data (i32.const 10176) "SIG_R1_\00")
(data (i32.const 10192) "unrecognized signature format\00")
(data (i32.const 10224) "already inited\00")
(data (i32.const 10240) "invalid wal token\00")
(data (i32.const 10272) "invalid exchange_fee_ratio\00")
(data (i32.const 10304) "invalid no_charge_stake_ratio\00")
(data (i32.const 10336) "ex_stake_account not existed\00")
(data (i32.const 10368) "validator not existed\00")
(data (i32.const 10400) "confirmor not existed\00")
(data (i32.const 10432) "executor not existed\00")
(data (i32.const 10464) "invalid settings\00")
(data (i32.const 10496) "base contract is not an account\00")
(data (i32.const 10528) "quote contract is not an account\00")
(data (i32.const 10576) "invalid fee rate\00")
(data (i32.const 10608) "pair_id,\00")
(data (i32.const 10624) "out symbol already exists\00")
(data (i32.const 10656) "inner symbol doesn\'t exist\00")
(data (i32.const 10688) "out symbol doesn\'t exist\00")
(data (i32.const 10720) "attempt to subtract asset with different symbol\00")
(data (i32.const 10768) "subtraction underflow\00")
(data (i32.const 10800) "subtraction overflow\00")
(data (i32.const 10832) "sellrex\00")
(data (i32.const 10848) "don\'t allow account to directly transfer to contract\00")
(data (i32.const 10912) "can\'t transfer to self\00")
(data (i32.const 10944) "eosio.rex\00")
(data (i32.const 10960) "creditors is not listened\00")
(data (i32.const 10992) "the token contract is in black list\00")
(data (i32.const 11040) "invalid quantity in transfer\00")
(data (i32.const 11072) "non positive quantity is disallowed in transfer\00")
(data (i32.const 11120) "invalid format of memo\00")
(data (i32.const 11152) ".wal\00")
(data (i32.const 11168) "unbind\00")
(data (i32.const 11184) "bind\00")
(data (i32.const 11200) "bindeos\00")
(data (i32.const 11216) "reset\00")
(data (i32.const 11232) "order\00")
(data (i32.const 11248) "sendto\00")
(data (i32.const 11264) "to\00")
(data (i32.const 11280) "invalid format of memo2\00")
(data (i32.const 11312) "invalid reset memo\00")
(data (i32.const 11344) "1\00")
(data (i32.const 11360) "invalid bindeos memo\00")
(data (i32.const 11392) "user is not bind when place order\00")
(data (i32.const 11440) "exchange can\'t send order\00")
(data (i32.const 11472) "can\'t transfer to \00")
(data (i32.const 11504) "user has destroyed from the exchange\00")
(data (i32.const 11552) "invalid memo\00")
(data (i32.const 11568) "withdraw from REX fund\00")
(data (i32.const 11600) "order:\00")
(data (i32.const 11616) "deposit\00")
(data (i32.const 11632) "whaleex\00")
(data (i32.const 11648) "no exchange found\00")
(data (i32.const 11680) "init\00")
(data (i32.const 11696) "cleartable\00")
(data (i32.const 11712) "only receive transfer of recipient\00")
(data (i32.const 11760) "onerror\00")
(data (i32.const 11776) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 20240) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 20336) "stoi\00")
(data (i32.const 20352) ": no conversion\00")
(data (i32.const 20368) ": out of range\00")
(data (i32.const 20384) "stol\00")
(data (i32.const 20400) "stoll\00")
(data (i32.const 20416) "stoull\00")
(data (i32.const 20432) "%d\00")
(data (i32.const 20448) "%lu\00")
(data (i32.const 20464) "%lld\00")
(data (i32.const 20480) "%llu\00")
(data (i32.const 20496) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 20512) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 20528) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(data (i32.const 20544) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 21008) "0123456789ABCDEF")
(data (i32.const 21024) "-+   0X0x\00")
(data (i32.const 21040) "(null)\00")
(data (i32.const 21056) "-0X+0X 0X-0x+0x 0x\00")
(data (i32.const 21088) "inf\00")
(data (i32.const 21104) "INF\00")
(data (i32.const 21120) "nan\00")
(data (i32.const 21136) "NAN\00")
(data (i32.const 21152) ".\00")
(data (i32.const 21168) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 21264) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(data (i32.const 23072) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 23344) "\00\01\02\04\07\03\06\05\00")
(import "env" "__addtf3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "__eqtf2" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "__extenddftf2" (func $fimport$2 (param i32 f64)))
(import "env" "__fixtfsi" (func $fimport$3 (param i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$4 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$5 (param i32 i32)))
(import "env" "__floatunsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__multi3" (func $fimport$8 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$9 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__udivti3" (func $fimport$11 (param i32 i64 i64 i64 i64)))
(import "env" "__unordtf2" (func $fimport$12 (param i64 i64 i64 i64) (result i32)))
(import "env" "abort" (func $fimport$13))
(import "env" "action_data_size" (func $fimport$14 (result i32)))
(import "env" "assert_recover_key" (func $fimport$15 (param i32 i32 i32 i32 i32)))
(import "env" "current_receiver" (func $fimport$16 (result i64)))
(import "env" "current_time" (func $fimport$17 (result i64)))
(import "env" "db_end_i64" (func $fimport$18 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$19 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$20 (param i32 i32 i32) (result i32)))
(import "env" "db_idx128_find_primary" (func $fimport$21 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx128_lowerbound" (func $fimport$22 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx128_next" (func $fimport$23 (param i32 i32) (result i32)))
(import "env" "db_idx128_remove" (func $fimport$24 (param i32)))
(import "env" "db_idx128_store" (func $fimport$25 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx128_update" (func $fimport$26 (param i32 i64 i32)))
(import "env" "db_idx256_find_primary" (func $fimport$27 (param i64 i64 i64 i32 i32 i64) (result i32)))
(import "env" "db_idx256_remove" (func $fimport$28 (param i32)))
(import "env" "db_idx256_store" (func $fimport$29 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$30 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$31 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$32 (param i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$33 (param i32)))
(import "env" "db_idx64_store" (func $fimport$34 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$35 (param i32 i64 i32)))
(import "env" "db_idx64_upperbound" (func $fimport$36 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$37 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$38 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$39 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$40 (param i32)))
(import "env" "db_store_i64" (func $fimport$41 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$42 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$43 (param i32 i32)))
(import "env" "eosio_exit" (func $fimport$44 (param i32)))
(import "env" "has_auth" (func $fimport$45 (param i64) (result i32)))
(import "env" "is_account" (func $fimport$46 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$47 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$48 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$49 (param i32 i32 i32) (result i32)))
(import "env" "printi" (func $fimport$50 (param i64)))
(import "env" "printn" (func $fimport$51 (param i64)))
(import "env" "prints" (func $fimport$52 (param i32)))
(import "env" "prints_l" (func $fimport$53 (param i32 i32)))
(import "env" "printui" (func $fimport$54 (param i64)))
(import "env" "printui128" (func $fimport$55 (param i32)))
(import "env" "read_action_data" (func $fimport$56 (param i32 i32) (result i32)))
(import "env" "read_transaction" (func $fimport$57 (param i32 i32) (result i32)))
(import "env" "recover_key" (func $fimport$58 (param i32 i32 i32 i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$59 (param i64)))
(import "env" "require_auth2" (func $fimport$60 (param i64 i64)))
(import "env" "send_inline" (func $fimport$61 (param i32 i32)))
(import "env" "sha256" (func $fimport$62 (param i32 i32 i32)))
(import "env" "transaction_size" (func $fimport$63 (result i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN11walexchange12wal_exchange12setbucketposEym" (func $5))
(export "_ZN11walexchange24contract_account_manager14get_account_idEyh" (func $6))
(export "_ZN11walexchange13order_manager15set_last_bucketEm" (func $7))
(export "_ZN11walexchange24contract_account_manager15find_account_idEy" (func $10))
(export "_ZN11walexchange24contract_account_manager16get_account_typeEy" (func $17))
(export "_ZN11walexchange12wal_exchange12uptbucketposEy" (func $31))
(export "_ZN11walexchange13order_manager18update_last_bucketEv" (func $32))
(export "_ZN11walexchange12wal_exchange12commitbucketEym" (func $40))
(export "_ZN11walexchange13order_manager15complete_bucketEm" (func $41))
(export "_ZN11walexchange12wal_exchange11verifyorderEyybN5eosio14extended_assetES2_ymtt9signature" (func $42))
(export "_ZN11walexchange12wal_exchange12verifyorder2EyybN5eosio14extended_assetES2_ymttNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE9signaturet" (func $43))
(export "_ZN11walexchange13order_manager12exists_orderEy" (func $45))
(export "_ZN11walexchange13order_manager9add_orderENS_12bucket_orderE" (func $47))
(export "_ZN11walexchange21order_withdraw_helper14get_order_hashEyybN5eosio14extended_assetES2_ymttNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtP11checksum256" (func $48))
(export "_ZN11walexchange12wal_exchange18assert_has_pub_keyERK11checksum256RK9signatureNS_4userE" (func $49))
(export "_Z16symbol_to_stringy" (func $59))
(export "_Z19join_space_with_numNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEi" (func $60))
(export "_Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_RNS_6vectorIS5_NS3_IS5_EEEE" (func $63))
(export "_Z5splitNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEc" (func $69))
(export "_Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE" (func $70))
(export "_ZN11walexchange12wal_exchange11cancelorderEyybN5eosio14extended_assetES2_ymttNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE9signaturetyS2_S2_" (func $71))
(export "_ZN11walexchange12wal_exchange15create_withdrawEyyyyN5eosio15extended_symbolExxbhyNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_bbS9_" (func $74))
(export "_ZN11walexchange21order_withdraw_helper25check_order_withdraw_memoEybbNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEmb" (func $75))
(export "_ZN11walexchange12wal_exchange11clearordersEy" (func $109))
(export "_ZN11walexchange13order_manager12clear_ordersEv" (func $110))
(export "_ZN11walexchange13order_manager22try_clear_order_extendEy" (func $113))
(export "_ZN11walexchange13order_manager16try_clear_bucketEm" (func $116))
(export "_ZN11walexchange12wal_exchange8setwdfeeEN5eosio14extended_assetE" (func $118))
(export "_ZN11walexchange12wal_exchange8verifywdEyyyyN5eosio15extended_symbolExx9signature" (func $124))
(export "_ZN11walexchange12wal_exchange9verifywd2EyyyyN5eosio15extended_symbolExxNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE9signaturet" (func $125))
(export "_ZN11walexchange21order_withdraw_helper17get_withdraw_hashEyyyyN5eosio14extended_assetES2_NSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtP11checksum256" (func $127))
(export "_ZN11walexchange12wal_exchange19assert_has_pub_key3EPK11checksum256PK9signatureyPb" (func $128))
(export "_ZN11walexchange12wal_exchange6add_idEyyt" (func $130))
(export "_Z22is_amount_within_rangex" (func $139))
(export "_ZN11walexchange24contract_account_manager19get_account_by_userEy" (func $140))
(export "_ZN11walexchange12wal_exchange9verifywd3EyyyN5eosio14extended_assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE" (func $141))
(export "_ZN11walexchange24contract_account_manager17get_account_by_idEy" (func $143))
(export "_ZN11walexchange12wal_exchange10withdrawexEyyyN5eosio14extended_assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE" (func $144))
(export "_ZN11walexchange13asset_manager14adjust_balanceEyyN5eosio14extended_assetEy" (func $145))
(export "_ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE" (func $146))
(export "_ZN11walexchange12wal_exchange12out_transferERKyS2_RKN5eosio5assetERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE" (func $147))
(export "_ZN11walexchange12wal_exchange7destroyEyy" (func $166))
(export "_ZN11walexchange12wal_exchange12withdrawbackEyyN5eosio14extended_assetE" (func $169))
(export "_ZN11walexchange12wal_exchange8verifyadEyyyyN5eosio14extended_assetE" (func $171))
(export "_ZN11walexchange12wal_exchange12verifyrelateEyyymNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy9signature" (func $178))
(export "_ZN11walexchange12wal_exchange11verifytradeEyN5eosio15extended_symbolES2_yymxxtt9signatureyymxxttS3_yxxbxx" (func $179))
(export "_ZN11walexchange12wal_exchange12verifytrade2EyN5eosio15extended_symbolES2_yymxxttNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE9signaturetyymxxttS9_SA_tyxxbxx" (func $180))
(export "_ZN11walexchange13order_manager12update_orderEyx" (func $181))
(export "_ZN11walexchange11rex_manager17has_target_ref_idEm" (func $184))
(export "_ZN11walexchange13order_manager15try_clear_orderEy" (func $191))
(export "_ZN11walexchange12wal_exchange9skiptradeEyy" (func $192))
(export "_ZN11walexchange12wal_exchange8clearingEyy" (func $196))
(export "_ZN11walexchange12wal_exchange8rollbackEyy" (func $235))
(export "_ZN11walexchange12wal_exchange10settlementEyyy" (func $247))
(export "_ZN11walexchange12wal_exchange12settle_tradeEyNS_8to_tradeE" (func $251))
(export "_ZN11walexchange12wal_exchange14settle_airdropEyNS_10to_airdropE" (func $255))
(export "_ZN11walexchange12wal_exchange15settle_withdrawEyNS_11to_withdrawE" (func $257))
(export "_ZN11walexchange12wal_exchange12settle_stakeEyNS_8to_stakeE" (func $259))
(export "_ZN11walexchange11rex_manager15add_delegate_toEyy" (func $261))
(export "_ZN11walexchange12wal_exchange13settle_cancelEyNS_9to_cancelE" (func $264))
(export "_ZN11walexchange12wal_exchange7confirmEyy" (func $266))
(export "_ZN11walexchange13stake_manager12adjust_stakeEyyyxy" (func $268))
(export "_ZN11walexchange13stake_manager11adjust_statEyx" (func $269))
(export "_ZN11walexchange13order_manager12cancel_orderEy" (func $286))
(export "_ZN11walexchange12wal_exchange19charge_withdraw_feeEym" (func $293))
(export "_ZN11walexchange12wal_exchange19charge_exchange_feeEymx" (func $294))
(export "_ZN11walexchange11rex_manager15create_delegateENS_8to_tradeE" (func $298))
(export "_ZN11walexchange12wal_exchange13settle_relateEyNS_9to_relateE" (func $301))
(export "_ZN11walexchange12wal_exchange12clearsettresEyy" (func $302))
(export "_ZN11walexchange12wal_exchange8clearidsEy" (func $310))
(export "_ZN11walexchange12wal_exchange8sendbackEyy" (func $324))
(export "_ZN11walexchange12wal_exchange12rollsendbackEyy" (func $329))
(export "_ZN11walexchange11rex_manager18get_ext_symbol_mapEm" (func $330))
(export "_ZN11walexchange12wal_exchange7airdropEyyyN5eosio14extended_assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE" (func $331))
(export "_ZN11walexchange24contract_account_manager25get_or_create_eos_accountEyh" (func $332))
(export "_ZN11walexchange12wal_exchange11airdroptoexEyyN5eosio14extended_assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE" (func $338))
(export "_ZN11walexchange13asset_manager11get_balanceEyyN5eosio15extended_symbolE" (func $339))
(export "_ZN11walexchange12wal_exchange11regexchangeEyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $340))
(export "_ZN11walexchange12wal_exchange4bindEyRKN5eosio10public_keyE" (func $346))
(export "_ZN11walexchange12wal_exchange13add_trade_keyEyN5eosio10public_keyE" (func $348))
(export "_ZN11walexchange12wal_exchange6unbindEyRKN5eosio10public_keyE" (func $355))
(export "_ZN11walexchange12wal_exchange11clearunbindENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $359))
(export "_ZN11walexchange12wal_exchange12regairdroperEy" (func $364))
(export "_ZN11walexchange12wal_exchange12addblacklistEy" (func $365))
(export "_ZN11walexchange12wal_exchange11rmblacklistEy" (func $367))
(export "_ZN11walexchange12wal_exchange9addadlistEyy" (func $371))
(export "_ZN11walexchange12wal_exchange8rmadlistEyy" (func $372))
(export "_ZN11walexchange12wal_exchange12addblackcoinEy" (func $375))
(export "_ZN11walexchange12wal_exchange11rmblackcoinEy" (func $377))
(export "_ZN11walexchange12wal_exchange12addwhitecoinEyN5eosio5assetE" (func $381))
(export "_ZN11walexchange12wal_exchange11rmwhitecoinEyN5eosio11symbol_typeE" (func $390))
(export "_ZN11walexchange12wal_exchange14check_transferEN5eosio14extended_assetE" (func $393))
(export "_Z9my_memcmpPvS_m" (func $394))
(export "_ZN11walexchange12wal_exchange19assert_recover_key2EPK11checksum256PK9signaturePKN5eosio10public_keyE" (func $395))
(export "_ZN11walexchange12wal_exchange11verifystakeEyyyyyx" (func $396))
(export "_ZN11walexchange12wal_exchange10unstakewalEyyyyx" (func $397))
(export "_ZN11walexchange12wal_exchange10stakewalexEyyx" (func $398))
(export "_ZN11walexchange12wal_exchange12unstakewalexEyyx" (func $399))
(export "_ZN11walexchange12wal_exchange11refundwalexEy" (func $400))
(export "_ZN11walexchange12wal_exchange11unstakebackEyyy" (func $401))
(export "_ZN11walexchange13stake_manager16get_stake_amountEyyy" (func $402))
(export "_ZN11walexchange13order_manager15get_bucket_timeEm" (func $403))
(export "_ZN11walexchange13order_manager16add_order_extendEyRN5eosio14extended_assetENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE" (func $404))
(export "_Z10get_trx_idv" (func $409))
(export "_Z15string_to_int64RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE" (func $415))
(export "_Z16string_to_uint16RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE" (func $416))
(export "_Z16string_to_uint64RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE" (func $417))
(export "_Z16string_to_uint32RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE" (func $418))
(export "_ZN11walexchange12wal_exchange8claimeosEy" (func $419))
(export "_ZN11walexchange12wal_exchange16get_eos_receivedERKN5eosio5assetE" (func $422))
(export "_ZN11walexchange12wal_exchange5claimEyN5eosio11symbol_typeEy" (func $432))
(export "_ZN11walexchange12wal_exchange9addescrowEy" (func $433))
(export "_ZN11walexchange12wal_exchange12setsymescrowEyN5eosio11symbol_typeEy" (func $435))
(export "_ZN11walexchange12wal_exchange12setdefiproxyEyN5eosio11symbol_typeEbbyb" (func $438))
(export "_ZN11walexchange12wal_exchange11setcredconfEmmmmm" (func $441))
(export "_ZN11walexchange12wal_exchange12addextsymmapEN5eosio11symbol_typeEyS2_ymt" (func $442))
(export "_ZN11walexchange12wal_exchange12delextsymmapEN5eosio11symbol_typeEy" (func $443))
(export "_ZN11walexchange12wal_exchange11addcreditorEymy" (func $444))
(export "_ZN11walexchange12wal_exchange12setvoteproxyEyy" (func $445))
(export "_ZN11walexchange12wal_exchange11avtcreditorEyb" (func $446))
(export "_ZN11walexchange12wal_exchange10rotatebackEh" (func $447))
(export "_ZN11walexchange12wal_exchange11adddelegatoEyyy" (func $448))
(export "_ZN11walexchange12wal_exchange10rmdelegatoEyy" (func $449))
(export "_ZN11walexchange12wal_exchange9batchdeleEy" (func $450))
(export "_ZN11walexchange12wal_exchange8delegateEyy" (func $451))
(export "_ZN11walexchange12wal_exchange11batchundeleEy" (func $452))
(export "_ZN11walexchange11rex_manager10try_refundEy" (func $455))
(export "_ZN11walexchange12wal_exchange10undelegateEyy" (func $470))
(export "_ZN11walexchange11rex_manager10undelegateEy" (func $471))
(export "_ZN11walexchange12wal_exchange11batchrefundEy" (func $473))
(export "_ZN11walexchange12wal_exchange10refundbackEyyb" (func $474))
(export "_ZN11walexchange11rex_manager18del_ext_symbol_mapEm" (func $475))
(export "_ZN11walexchange11rex_manager18add_ext_symbol_mapEN5eosio11symbol_typeEyS2_ymt" (func $477))
(export "_ZN11walexchange11rex_manager12get_delegateEy" (func $478))
(export "_ZN11walexchange11rex_manager8delegateEy" (func $480))
(export "_ZN11walexchange11rex_manager18find_best_creditorEm" (func $481))
(export "_ZN11walexchange11rex_manager6refundEyb" (func $486))
(export "_ZN11walexchange11rex_manager12add_creditorEymy" (func $489))
(export "_ZN11walexchange11rex_manager14set_vote_proxyEyy" (func $490))
(export "_ZN11walexchange11rex_manager17set_credit_configEmmmmm" (func $491))
(export "_ZN11walexchange11rex_manager17activate_creditorEyb" (func $492))
(export "_ZN11walexchange11rex_manager11rotate_backEh" (func $493))
(export "_ZN11walexchange11rex_manager14rm_delegate_toEy" (func $494))
(export "_ZN11walexchange12wal_exchange8addchainENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $496))
(export "_ZN11walexchange12wal_exchange8addproxyEyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_" (func $499))
(export "_ZN11walexchange12wal_exchange11addchnproxyENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy" (func $503))
(export "_ZN11walexchange12wal_exchange11addsymproxyEN5eosio11symbol_typeEyNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEy" (func $508))
(export "_ZN11walexchange12wal_exchange18get_chain_proxy_idENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy" (func $510))
(export "_ZN11walexchange12wal_exchange9addsuffixEy" (func $511))
(export "_ZN11walexchange12wal_exchange8rmsuffixEy" (func $517))
(export "_ZN11walexchange12wal_exchange11removedigitEy" (func $518))
(export "_ZN11walexchange12wal_exchange11createdigitEyy" (func $522))
(export "_ZN11walexchange24contract_account_manager29get_or_create_digital_accountEy" (func $523))
(export "_ZN11walexchange12wal_exchange7bindkeyEymyN5eosio10public_keyE9signature" (func $524))
(export "_ZN11walexchange12wal_exchange9unbindkeyEymyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE9signature" (func $525))
(export "_ZN6abieos20string_to_public_keyENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE" (func $527))
(export "_ZN11walexchange12wal_exchange20string_to_public_keyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $531))
(export "_ZN11walexchange12wal_exchange9createkeyEymyN5eosio10public_keyE9signatureS2_S3_" (func $532))
(export "_ZN11walexchange12wal_exchange8resetkeyEymyN5eosio10public_keyE9signatureS2_S3_" (func $534))
(export "_ZN11walexchange12wal_exchange9resetkey2EyN5eosio10public_keyES2_b" (func $536))
(export "_ZN11walexchange12wal_exchange11binddigitalEyyy" (func $539))
(export "_ZN11walexchange12wal_exchange7bindeosEyy9signature" (func $540))
(export "_ZN11walexchange24contract_account_manager18exists_eos_accountEy" (func $541))
(export "_ZN11walexchange12wal_exchange11uptwhiteoutEyb" (func $542))
(export "_ZN11walexchange24contract_account_manager22exists_digital_accountEy" (func $544))
(export "_Z4joinRKNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEERKS6_" (func $545))
(export "_Z9is_digitsRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE" (func $546))
(export "_ZN6abieos14get_base58_mapEv" (func $547))
(export "_ZN6abieos19string_to_signatureENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE" (func $548))
(export "_ZN11walexchange12wal_exchange4initEN5eosio15extended_symbolEhhmmddmmymmxyyy" (func $550))
(export "_ZN11walexchange12wal_exchange10cleartableENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy" (func $563))
(export "_ZN11walexchange12wal_exchange10setmaxbindEh" (func $564))
(export "_ZN11walexchange12wal_exchange10setmaxkeysEh" (func $565))
(export "_ZN11walexchange12wal_exchange9setdtwaitEm" (func $566))
(export "_ZN11walexchange12wal_exchange12setmaxubwaitEm" (func $567))
(export "_ZN11walexchange12wal_exchange11setfeeratioEd" (func $568))
(export "_ZN11walexchange12wal_exchange10setncratioEd" (func $569))
(export "_ZN11walexchange12wal_exchange12setstakefactEm" (func $570))
(export "_ZN11walexchange12wal_exchange12setstaketimeEm" (func $571))
(export "_ZN11walexchange12wal_exchange12setstakeacctEy" (func $572))
(export "_ZN11walexchange12wal_exchange10setrfwtimeEm" (func $573))
(export "_ZN11walexchange12wal_exchange10setexptimeEm" (func $574))
(export "_ZN11walexchange12wal_exchange12setvalidatorEy" (func $575))
(export "_ZN11walexchange12wal_exchange12setconfirmorEy" (func $576))
(export "_ZN11walexchange12wal_exchange11setexecutorEy" (func $577))
(export "_ZN11walexchange12wal_exchange11setsettingsEttttttmmb" (func $578))
(export "_ZN11walexchange12wal_exchange10setconfig2Ebyyy" (func $579))
(export "_ZN11walexchange12wal_exchange10settradeidEyy" (func $580))
(export "_ZN11walexchange12wal_exchange10addsympairEyyN5eosio11symbol_typeEyS2_ytyt" (func $581))
(export "_ZN11walexchange12wal_exchange9rmsympairEyN5eosio11symbol_typeEyS2_y" (func $585))
(export "_ZN11walexchange12wal_exchange12addoutsymmapEN5eosio11symbol_typeEyS2_y" (func $587))
(export "_ZN11walexchange12wal_exchange12deloutsymmapEN5eosio11symbol_typeEy" (func $594))
(export "_ZN11walexchange12wal_exchange16get_rex_receivedERKN5eosio5assetE" (func $597))
(export "_ZN11walexchange12wal_exchange12try_sell_rexERKN5eosio5assetE" (func $598))
(export "_ZN11walexchange12wal_exchange11in_transferERKyRKN5eosio5assetE" (func $600))
(export "_ZN11walexchange12wal_exchange2onERNS_8transferEy" (func $601))
(export "_ZN11walexchange12wal_exchange5applyEyy" (func $606))
(export "apply" (func $728))
(export "malloc" (func $730))
(export "realloc" (func $733))
(export "free" (func $736))
(export "_ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji" (func $754))
(export "_ZNSt3__14stolERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji" (func $758))
(export "_ZNSt3__15stollERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji" (func $759))
(export "_ZNSt3__16stoullERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji" (func $760))
(export "_ZNSt3__19to_stringEi" (func $761))
(export "_ZNSt3__19to_stringEm" (func $763))
(export "_ZNSt3__19to_stringEx" (func $764))
(export "_ZNSt3__19to_stringEy" (func $765))
(export "isdigit" (func $769))
(export "tolower" (func $770))
(export "__errno_location" (func $771))
(export "pow" (func $772))
(export "sqrt" (func $773))
(export "fabs" (func $774))
(export "scalbn" (func $775))
(export "snprintf" (func $776))
(export "vsnprintf" (func $777))
(export "vfprintf" (func $779))
(export "__lockfile" (func $781))
(export "__unlockfile" (func $782))
(export "__fwritex" (func $783))
(export "strerror" (func $785))
(export "strnlen" (func $786))
(export "wctomb" (func $787))
(export "__signbitl" (func $788))
(export "__fpclassifyl" (func $789))
(export "frexpl" (func $790))
(export "wcrtomb" (func $791))
(export "memchr" (func $792))
(export "__lctrans" (func $793))
(export "__lctrans_impl" (func $794))
(export "__mo_lookup" (func $795))
(export "strcmp" (func $796))
(export "__towrite" (func $797))
(export "strtoull" (func $798))
(export "__shlim" (func $799))
(export "__intscan" (func $800))
(export "__shgetc" (func $801))
(export "__uflow" (func $802))
(export "__toread" (func $803))
(export "strtoll" (func $804))
(export "strtol" (func $805))
(export "memcmp" (func $806))
(export "strlen" (func $807))
(table $0 108 108 anyfunc)
(elem (i32.const 0) $808 $398 $563 $449 $144 $435 $71 $566 $581 $31 $594 $364 $178 $565 $446 $329 $503 $118 $109 $377 $141 $570 $540 $441 $499 $397 $451 $534 $180 $573 $452 $5 $433 $525 $40 $585 $375 $580 $419 $574 $381 $171 $550 $192 $302 $367 $169 $571 $524 $438 $511 $399 $443 $474 $400 $42 $43 $568 $564 $331 $338 $390 $235 $365 $496 $575 $445 $310 $196 $536 $372 $124 $125 $578 $572 $346 $539 $579 $576 $442 $587 $470 $401 $522 $532 $340 $518 $396 $179 $567 $569 $450 $473 $447 $324 $444 $448 $355 $359 $517 $371 $247 $432 $577 $508 $542 $166 $778)



void .FUNC $220 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$6 = *($4 + [16])
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$1 }
	$6 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-4418693909069692928, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $221($4, $5)
	*($9 + [4]) = [0]
	*($9) = $4
	$6 = *(*(CALL $222($9) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $6
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [2192])
	$6 = *(($4 + [16]))
	*($1 + [8]) = [0]
	*($1) = $6
	*($1 + [16]) = *(*($3 + [4]))
	$4 = $10
	$10 = ($4 + [-32])
	*([0] + [4]) = $10
	CALL eosio_assert([1], [496])
	CALL memcpy($10, $1, [8])
	CALL eosio_assert([1], [496])
	$3 = ($1 + [8])
	CALL memcpy(($4 + [-24]), $3, [1])
	CALL eosio_assert([1], [496])
	$4 = ($1 + [16])
	CALL memcpy(($4 + [-23]), $4, [8])
	$6 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-4418693909069692928, *(*($0 + [8])), $6, $10, [17])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$6 = *(($2 + [8]))
	$7 = *(*(($0 + [8])))
	$8 = *($1)
	*($9 + [8]) = *($3)
	*($9) = *($4)
	*($1 + [32]) = CALL db_idx128_store($6, (int_64)-4418693909069692928, $7, $8, $9)
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $123 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [28]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2320])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)6301537847124808880)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2256])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2256])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $65(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$2 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$6 = *($1)
	$3 = ([0] - $2)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(*($8)) == (int_32)$6) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$2), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
	$7 = *(($1 + [40]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-2039333636190596096, $9, *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx128_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $288 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $221 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [544])
	CALL memcpy(($6 + [8]), ($7 + [8]), [1])
	CALL eosio_assert(((uint_32)($4 + [-9]) > (uint_32)[7]), [544])
	CALL memcpy(($6 + [16]), ($7 + [9]), [8])
	*($6 + [32]) = [-1]
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $202(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $537 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*(($1 + [52])) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [896])
	$3 = *($1)
	CALL memcpy(($1 + [8]), *($2), [37])
	*($1 + [48]) = *(*($2 + [4]))
	CALL eosio_assert([1], [960])
	$8 = *($1 + [8])
	$6 = [43]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($6 <= [513]) ){ goto $label$3 }
	$7 = CALL malloc($6)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$6 > (int_32)[7]), [496])
	CALL memcpy($7, $1, [8])
	$2 = ($7 + [8])
	$4 = ($7 + $6)
	$8 = *(($1 + [8]))
	
.LOOP $label$4:
	$9 = (CASTING uint_32)(uint_64 $8)
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	$5 = ((int_64)$8) != (int_64)0
	*($10 + [15]) = (($5) << [7]) | ($9 & [127]))
	CALL eosio_assert(((int_32)($4 - $2) > (int_32)[0]), [496])
	CALL memcpy($2, ($10 + [15]), [1])
	$2 = ($2 + [1])
	if ( $5 ){ goto $label$4 }
	$9 = [12]
	
.LOOP $label$5:
	$5 = $2
	CALL eosio_assert(((int_32)($4 - $5) > (int_32)[0]), [496])
	CALL memcpy($5, ($1 + $9), [1])
	$2 = ($5 + [1])
	$9 = ($9 + [1])
	if ( ((int_32)$9 != (int_32)[45]) ){ goto $label$5 }
	*($10 + [14]) = *(($1 + [48]))
	CALL eosio_assert(((int_32)($4 - $2) > (int_32)[0]), [496])
	CALL memcpy($2, ($10 + [14]), [1])
	$2 = ($5 + [2])
	CALL eosio_assert(((int_32)($4 - $2) > (int_32)[0]), [496])
	CALL memcpy($2, ($1 + [49]), [1])
	CALL db_update_i64(*($1 + [56]), (int_64)0, $7, $6)
	if ( ($6 <= [513]) ){ goto $label$6 }
	CALL free($7)
	
.LABEL $label$6
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [16])
}

void .FUNC _ZN11walexchange12wal_exchange11addchnproxyENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [192])
	*([0] + [4]) = $12
	*($12 + [160]) = $2
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*((($12 + [120]) + [32])) = [0]
	*($12 + [136]) = (int_64)-1
	*($12 + [144]) = (int_64)0
	$3 = *($0)
	*($12 + [120]) = $3
	*($12 + [128]) = $3
	*((($12 + [80]) + [32])) = [0]
	*($12 + [88]) = $3
	*($12 + [80]) = $3
	*($12 + [96]) = (int_64)-1
	*($12 + [104]) = (int_64)0
	if ( (*($1) & [1]) ){ goto $label$3 }
	$7 = ($1 + [1])
	goto $label$2 
	
.LABEL $label$3
	$7 = *($1 + [8])
	
.LABEL $label$2
	$8 = [-1]
	
.LOOP $label$4:
	$6 = ($7 + $8)
	$4 = ($8 + [1])
	$8 = $4
	if ( *(($6 + [1])) ){ goto $label$4 }
	if ( ($4 == 0) ){ goto $label$6 }
	$9 = (CASTING uint_64)(uint_32 $4)
	$10 = (int_64)8
	$11 = (int_64)0
	
.LOOP $label$7:
	$8 = *($7)
	if ( ((uint_32)(($8 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$11 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$10 & (int_64)4294967288)) | (int_64)$11)
	
.LABEL $label$8
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)8)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)$9 != (int_64)0) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$11 = (int_64)0
	
.LABEL $label$5
	$8 = [0]
	$7 = CALL db_find_i64($3, $3, (int_64)8201287169113849856, (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$9 }
	$8 = CALL $504(($12 + [120]), $7)
	CALL eosio_assert(((int_32)*($8 + [20]) == (int_32)($12 + [120])), [288])
	$2 = *($12 + [160])
	
.LABEL $label$9
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [9104])
	$5 = *(($12 + [104]))
	$6 = *(($12 + [108]))
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	$8 = ($6 + [-24])
	$4 = ([0] - $5)
	
.LOOP $label$11:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$10 }
	$6 = $8
	$7 = ($8 + [-24])
	$8 = $7
	if ( ((int_32)($7 + $4) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$13 }
	$8 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [44]) == (int_32)($12 + [80])), [288])
	goto $label$12 
	
.LABEL $label$13
	$8 = [0]
	$7 = CALL db_find_i64(*($12 + [80]), *(($12 + [88])), (int_64)8201437361402281984, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$12 }
	$8 = CALL $407(($12 + [80]), $7)
	CALL eosio_assert(((int_32)*($8 + [44]) == (int_32)($12 + [80])), [288])
	
.LABEL $label$12
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [9120])
	*(($12 + [72])) = [0]
	*($12 + [56]) = (int_64)-1
	*($12 + [64]) = (int_64)0
	$10 = *($0)
	*($12 + [40]) = $10
	*($12 + [48]) = $10
	*($12 + [76]) = [0]
	*($12 + [32]) = ($12 + [40])
	if ( (*($1) & [1]) ){ goto $label$15 }
	$7 = ($1 + [1])
	goto $label$14 
	
.LABEL $label$15
	$7 = *($1 + [8])
	
.LABEL $label$14
	$8 = [-1]
	
.LOOP $label$16:
	$6 = ($7 + $8)
	$4 = ($8 + [1])
	$8 = $4
	if ( *(($6 + [1])) ){ goto $label$16 }
	if ( ($4 == 0) ){ goto $label$18 }
	$9 = (CASTING uint_64)(uint_32 $4)
	$10 = (int_64)8
	$11 = (int_64)0
	
.LOOP $label$19:
	$8 = *($7)
	if ( ((uint_32)(($8 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$11 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$10 & (int_64)4294967288)) | (int_64)$11)
	
.LABEL $label$20
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)8)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)$9 != (int_64)0) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	$11 = (int_64)0
	
.LABEL $label$17
	*($12 + [16]) = *($12 + [160])
	*($12 + [24]) = (uint_64)$11 >> (uint_64)(int_64)8)
	CALL $505($12, ($12 + [32]), ($12 + [16]))
	$8 = *($12 + [4])
	if ( ($8 == 0) ){ goto $label$22 }
	$8 = ((int_64)((int_64)((int_64)*($12 + [16]) ^ (int_64)*($8 + [16])) | (int_64)((int_64)*($12 + [24]) ^ (int_64)*($8 + [8]))) != (int_64)0)
	goto $label$21 
	
.LABEL $label$22
	$8 = [1]
	
.LABEL $label$21
	CALL eosio_assert($8, [9136])
	$10 = *($0)
	*($12 + [4]) = $1
	*($12) = ($12 + [40])
	*($12 + [8]) = ($12 + [160])
	*($12 + [184]) = $10
	CALL eosio_assert(((int_64)*($12 + [40]) == (int_64)CALL $fimport$16()), [432])
	*($12 + [20]) = $12
	*($12 + [16]) = ($12 + [40])
	*($12 + [24]) = ($12 + [184])
	*(($8 = CALL $737([40])) + [24]) = ($12 + [40])
	CALL $506(($12 + [16]), $8)
	*($12 + [176]) = $8
	$10 = *($8)
	*($12 + [16]) = $10
	$6 = *($8 + [28])
	*($12 + [172]) = $6
	$4 = ($12 + [68])
	$7 = *($4)
	if ( ((uint_32)$7 >= (uint_32)*(($12 + [72]))) ){ goto $label$24 }
	*($7 + [8]) = $10
	*($7 + [16]) = $6
	*($12 + [176]) = [0]
	*($7) = $8
	*($4) = ($7 + [24])
	goto $label$23 
	
.LABEL $label$24
	CALL $104(($12 + [64]), ($12 + [176]), ($12 + [16]), ($12 + [172]))
	
.LABEL $label$23
	$8 = *($12 + [176])
	*($12 + [176]) = [0]
	if ( ($8 == 0) ){ goto $label$25 }
	CALL $738($8)
	
.LABEL $label$25
	$6 = *($12 + [64])
	if ( ($6 == 0) ){ goto $label$26 }
	$4 = ($12 + [68])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$28 }
	
.LOOP $label$29:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$30 }
	CALL $738($7)
	
.LABEL $label$30
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$29 }
	$8 = *(($12 + [64]))
	goto $label$27 
	
.LABEL $label$28
	$8 = $6
	
.LABEL $label$27
	*($4) = $6
	CALL $738($8)
	
.LABEL $label$26
	CALL $408(($12 + [104]))
	$6 = *($12 + [144])
	if ( ($6 == 0) ){ goto $label$31 }
	$4 = ($12 + [148])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$33 }
	
.LOOP $label$34:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$35 }
	if ( ((*($7 + [8]) & [1]) == 0) ){ goto $label$36 }
	CALL $738(*(($7 + [16])))
	
.LABEL $label$36
	CALL $738($7)
	
.LABEL $label$35
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$34 }
	$8 = *(($12 + [144]))
	goto $label$32 
	
.LABEL $label$33
	$8 = $6
	
.LABEL $label$32
	*($4) = $6
	CALL $738($8)
	
.LABEL $label$31
	*([0] + [4]) = ($12 + [192])
}

void .FUNC _ZN11walexchange21order_withdraw_helper17get_withdraw_hashEyyyyN5eosio14extended_assetES2_NSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtP11checksum256 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9)
{
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [240])
	*([0] + [4]) = $13
	CALL $767(($13 + [192]), $7)
	CALL $55(($13 + [208]), $0, ($13 + [192]))
	if ( ((*($13 + [192]) & [1]) == 0) ){ goto $label$1 }
	CALL $738(*($13 + [200]))
	
.LABEL $label$1
	if ( ($8 == 0) ){ goto $label$10 }
	*($13 + [232]) = [0]
	*($13 + [224]) = (int_64)0
	*($13 + [48]) = *($5 + [16])
	CALL $56(($13 + [176]), ($13 + [48]))
	$8 = *($13 + [228])
	if ( ((uint_32)$8 >= (uint_32)*($13 + [232])) ){ goto $label$9 }
	*($8) = *($13 + [176])
	$8 = (($13 + [176]) + [8])
	*(($8 + [8])) = *($8)
	*($8) = [0]
	*($13 + [176]) = [0]
	*($13 + [180]) = [0]
	*($13 + [228]) = (*($13 + [228]) + [12])
	goto $label$8 
	
.LABEL $label$10
	*($13 + [180 align=4]) = (int_64)128
	$7 = CALL malloc([128])
	*($13 + [176]) = $7
	*($13 + [48]) = $1
	CALL $56(($13 + [224]), ($13 + [48]))
	$0 = *($13 + [224])
	$10 = ($0 & [1])
	$11 = ( *($13 + [232]) ? (($13 + [224]) | [1]) : $10 )
	$8 = [0]
	$0 = ( *($13 + [228]) ? uint_32($0 >> [1]) : $10 )
	if ( ($0 <= [129]) ){ goto $label$11 }
	$8 = ($0 + [256])
	*($13 + [180]) = $8
	$7 = CALL realloc($7, $8)
	*($13 + [176]) = $7
	$8 = *(($13 + [184]))
	
.LABEL $label$11
	CALL memcpy(($7 + $8), $11, $0)
	$8 = ($8 + $0)
	*(($7 = (($13 + [176]) + [8]))) = $8
	if ( ((*($13 + [224]) & [1]) == 0) ){ goto $label$12 }
	CALL $738(*((($13 + [224]) + [8])))
	$8 = *($7)
	
.LABEL $label$12
	*($13 + [48]) = $2
	CALL $56(($13 + [224]), ($13 + [48]))
	$0 = *($13 + [224])
	$7 = ($0 & [1])
	$10 = ( *($13 + [232]) ? (($13 + [224]) | [1]) : $7 )
	$7 = *($13 + [180])
	$0 = ( *($13 + [228]) ? uint_32($0 >> [1]) : $7 )
	if ( ((uint_32)($8 + $0) <= (uint_32)$7) ){ goto $label$7 }
	$8 = (($7 << [1]) + $0)
	*($13 + [180]) = $8
	$7 = CALL realloc(*($13 + [176]), $8)
	*($13 + [176]) = $7
	$8 = *(($13 + [184]))
	goto $label$6 
	
.LABEL $label$9
	CALL $58(($13 + [224]), ($13 + [176]))
	if ( ((*($13 + [176]) & [1]) == 0) ){ goto $label$8 }
	CALL $738(*($13 + [184]))
	
.LABEL $label$8
	CALL _Z16symbol_to_stringy(($13 + [176]), *($5 + [8]))
	$8 = *($13 + [228])
	if ( ((uint_32)$8 >= (uint_32)*((($13 + [224]) + [8]))) ){ goto $label$14 }
	*($8) = *($13 + [176])
	$8 = (($13 + [176]) + [8])
	*(($8 + [8])) = *($8)
	*($8) = [0]
	*($13 + [176]) = [0]
	*($13 + [180]) = [0]
	*($13 + [228]) = (*($13 + [228]) + [12])
	goto $label$13 
	
.LABEL $label$14
	CALL $58(($13 + [224]), ($13 + [176]))
	if ( ((*($13 + [176]) & [1]) == 0) ){ goto $label$13 }
	CALL $738(*($13 + [184]))
	
.LABEL $label$13
	CALL _ZNSt3__19to_stringEx(($13 + [96]), *($5))
	CALL _Z19join_space_with_numNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEi(($13 + [176]), ($13 + [96]), [12])
	$5 = *($13 + [228])
	if ( ((uint_32)$5 >= (uint_32)*((($13 + [224]) + [8]))) ){ goto $label$16 }
	*($5) = *($13 + [176])
	$5 = (($13 + [176]) + [8])
	*(($5 + [8])) = *($5)
	*($5) = [0]
	*($13 + [176]) = [0]
	*($13 + [180]) = [0]
	*($13 + [228]) = (*($13 + [228]) + [12])
	goto $label$15 
	
.LABEL $label$16
	CALL $58(($13 + [224]), ($13 + [176]))
	if ( ((*($13 + [176]) & [1]) == 0) ){ goto $label$15 }
	CALL $738(*($13 + [184]))
	
.LABEL $label$15
	if ( ((*($13 + [96]) & [1]) == 0) ){ goto $label$17 }
	CALL $738(*($13 + [104]))
	
.LABEL $label$17
	*($13 + [48]) = $1
	CALL $56(($13 + [176]), ($13 + [48]))
	$5 = *($13 + [228])
	if ( ((uint_32)$5 >= (uint_32)*((($13 + [224]) + [8]))) ){ goto $label$19 }
	*($5) = *($13 + [176])
	$5 = (($13 + [176]) + [8])
	*(($5 + [8])) = *($5)
	*($5) = [0]
	*($13 + [176]) = [0]
	*($13 + [180]) = [0]
	*($13 + [228]) = (*($13 + [228]) + [12])
	goto $label$18 
	
.LABEL $label$19
	CALL $58(($13 + [224]), ($13 + [176]))
	if ( ((*($13 + [176]) & [1]) == 0) ){ goto $label$18 }
	CALL $738(*($13 + [184]))
	
.LABEL $label$18
	*($13 + [48]) = $2
	CALL $56(($13 + [176]), ($13 + [48]))
	$5 = *($13 + [228])
	if ( ((uint_32)$5 >= (uint_32)*((($13 + [224]) + [8]))) ){ goto $label$21 }
	*($5) = *($13 + [176])
	$5 = (($13 + [176]) + [8])
	*(($5 + [8])) = *($5)
	*($5) = [0]
	*($13 + [176]) = [0]
	*($13 + [180]) = [0]
	*($13 + [228]) = (*($13 + [228]) + [12])
	goto $label$20 
	
.LABEL $label$21
	CALL $58(($13 + [224]), ($13 + [176]))
	if ( ((*($13 + [176]) & [1]) == 0) ){ goto $label$20 }
	CALL $738(*($13 + [184]))
	
.LABEL $label$20
	CALL _ZNSt3__19to_stringEy(($13 + [80]), $3)
	CALL _Z19join_space_with_numNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEi(($13 + [176]), ($13 + [80]), [12])
	$5 = *($13 + [228])
	if ( ((uint_32)$5 >= (uint_32)*((($13 + [224]) + [8]))) ){ goto $label$23 }
	*($5) = *($13 + [176])
	$5 = (($13 + [176]) + [8])
	*(($5 + [8])) = *($5)
	*($5) = [0]
	*($13 + [176]) = [0]
	*($13 + [180]) = [0]
	*($13 + [228]) = (*($13 + [228]) + [12])
	goto $label$22 
	
.LABEL $label$23
	CALL $58(($13 + [224]), ($13 + [176]))
	if ( ((*($13 + [176]) & [1]) == 0) ){ goto $label$22 }
	CALL $738(*($13 + [184]))
	
.LABEL $label$22
	if ( ((*($13 + [80]) & [1]) == 0) ){ goto $label$24 }
	CALL $738(*($13 + [88]))
	
.LABEL $label$24
	*($13 + [48]) = *($6 + [16])
	CALL $56(($13 + [176]), ($13 + [48]))
	$5 = *($13 + [228])
	if ( ((uint_32)$5 >= (uint_32)*((($13 + [224]) + [8]))) ){ goto $label$26 }
	*($5) = *($13 + [176])
	$5 = (($13 + [176]) + [8])
	*(($5 + [8])) = *($5)
	*($5) = [0]
	*($13 + [176]) = [0]
	*($13 + [180]) = [0]
	*($13 + [228]) = (*($13 + [228]) + [12])
	goto $label$25 
	
.LABEL $label$26
	CALL $58(($13 + [224]), ($13 + [176]))
	if ( ((*($13 + [176]) & [1]) == 0) ){ goto $label$25 }
	CALL $738(*($13 + [184]))
	
.LABEL $label$25
	CALL _Z16symbol_to_stringy(($13 + [176]), *($6 + [8]))
	$5 = *($13 + [228])
	if ( ((uint_32)$5 >= (uint_32)*((($13 + [224]) + [8]))) ){ goto $label$28 }
	*($5) = *($13 + [176])
	$5 = (($13 + [176]) + [8])
	*(($5 + [8])) = *($5)
	*($5) = [0]
	*($13 + [176]) = [0]
	*($13 + [180]) = [0]
	*($13 + [228]) = (*($13 + [228]) + [12])
	goto $label$27 
	
.LABEL $label$28
	CALL $58(($13 + [224]), ($13 + [176]))
	if ( ((*($13 + [176]) & [1]) == 0) ){ goto $label$27 }
	CALL $738(*($13 + [184]))
	
.LABEL $label$27
	CALL _ZNSt3__19to_stringEx(($13 + [64]), *($6))
	CALL _Z19join_space_with_numNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEi(($13 + [176]), ($13 + [64]), [12])
	$5 = *($13 + [228])
	if ( ((uint_32)$5 >= (uint_32)*((($13 + [224]) + [8]))) ){ goto $label$30 }
	*($5) = *($13 + [176])
	$5 = (($13 + [176]) + [8])
	*(($5 + [8])) = *($5)
	*($5) = [0]
	*($13 + [176]) = [0]
	*($13 + [180]) = [0]
	*($13 + [228]) = (*($13 + [228]) + [12])
	goto $label$29 
	
.LABEL $label$30
	CALL $58(($13 + [224]), ($13 + [176]))
	if ( ((*($13 + [176]) & [1]) == 0) ){ goto $label$29 }
	CALL $738(*($13 + [184]))
	
.LABEL $label$29
	if ( ((*($13 + [64]) & [1]) == 0) ){ goto $label$31 }
	CALL $738(*($13 + [72]))
	
.LABEL $label$31
	$5 = *($13 + [208])
	$6 = CALL strlen([1568])
	if ( ((int_32)$6 != (int_32)( *($13 + [212]) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$33 }
	if ( (CALL $752(($13 + [208]), [0], [-1], [1568], $6) == 0) ){ goto $label$32 }
	
.LABEL $label$33
	$5 = *($13 + [228])
	if ( ((int_32)$5 == (int_32)*(($13 + [232]))) ){ goto $label$34 }
	CALL $767($5, ($13 + [208]))
	*($13 + [228]) = (*($13 + [228]) + [12])
	goto $label$32 
	
.LABEL $label$34
	CALL $61(($13 + [224]), ($13 + [208]))
	
.LABEL $label$32
	*(($13 + [56])) = [0]
	*($13 + [48]) = (int_64)0
	$5 = CALL strlen([1648])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$37 }
	*($13 + [48]) = ($5 << [1])
	$8 = (($13 + [48]) | [1])
	if ( $5 ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$37
	$6 = (($5 + [16]) & [-16])
	$8 = CALL $737($6)
	*($13 + [48]) = ($6 | [1])
	*($13 + [56]) = $8
	*($13 + [52]) = $5
	
.LABEL $label$36
	CALL memcpy($8, [1648], $5)
	
.LABEL $label$35
	$6 = [0]
	*(($8 + $5)) = [0]
	*($13 + [176]) = (int_64)0
	*($13 + [184]) = [0]
	$5 = (*($13 + [228]) - *($13 + [224]))
	$10 = ((int_32)$5 / (int_32)[12])
	if ( ($5 == 0) ){ goto $label$38 }
	$11 = (($13 + [48]) | [1])
	$12 = ($13 + [56])
	$8 = [4]
	
.LOOP $label$39:
	if ( ($6 == 0) ){ goto $label$40 }
	$5 = *($13 + [48])
	$0 = ($5 & [1])
	CALL $744(($13 + [176]), ( *($12) ? $11 : $0 ), ( *($13 + [52]) ? uint_32($5 >> [1]) : $0 ))
	
.LABEL $label$40
	$0 = *(($5 + [-4]))
	$7 = ($0 & [1])
	$5 = (*($13 + [224]) + $8)
	CALL $744(($13 + [176]), ( *(($5 + [4])) ? ($5 + [-3]) : $7 ), ( *($5) ? uint_32($0 >> [1]) : $7 ))
	$8 = ($8 + [12])
	$6 = ($6 + [1])
	if ( ($6 <= $10) ){ goto $label$39 }
	
.LABEL $label$38
	if ( ((*($13 + [48]) & [1]) == 0) ){ goto $label$41 }
	CALL $738(*($13 + [56]))
	
.LABEL $label$41
	$8 = *($13 + [176])
	$0 = ($8 & [1])
	$6 = (($13 + [176]) | [1])
	$5 = ($13 + [184])
	CALL prints_l(( *($5) ? $6 : $0 ), ( *($13 + [180]) ? uint_32($8 >> [1]) : $0 ))
	$8 = *($13 + [176])
	$0 = ($8 & [1])
	CALL sha256(( *($5) ? $6 : $0 ), ( *($13 + [180]) ? uint_32($8 >> [1]) : $0 ), $9)
	if ( ((*($13 + [176]) & [1]) == 0) ){ goto $label$42 }
	CALL $738(*($5))
	
.LABEL $label$42
	$8 = *($13 + [224])
	if ( ($8 == 0) ){ goto $label$3 }
	$5 = *($13 + [228])
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$5 }
	$6 = ([0] - $8)
	$5 = ($5 + [-12])
	
.LOOP $label$43:
	if ( ((*($5) & [1]) == 0) ){ goto $label$44 }
	CALL $738(*(($5 + [8])))
	
.LABEL $label$44
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $6) != (int_32)[-12]) ){ goto $label$43 }
	$5 = *($13 + [224])
	goto $label$4 
	
.LABEL $label$7
	$7 = *($13 + [176])
	
.LABEL $label$6
	CALL memcpy(($7 + $8), $10, $0)
	$8 = ($8 + $0)
	*(($7 = (($13 + [176]) + [8]))) = $8
	if ( ((*($13 + [224]) & [1]) == 0) ){ goto $label$45 }
	CALL $738(*((($13 + [224]) + [8])))
	$8 = *($7)
	
.LABEL $label$45
	*($13 + [224]) = $3
	$0 = *($13 + [180])
	if ( ((uint_32)($8 + [8]) <= (uint_32)$0) ){ goto $label$47 }
	$8 = (($0 << [1]) + [8])
	*($13 + [180]) = $8
	$0 = CALL realloc(*($13 + [176]), $8)
	*($13 + [176]) = $0
	$8 = *((($13 + [176]) + [8]))
	goto $label$46 
	
.LABEL $label$47
	$0 = *($13 + [176])
	
.LABEL $label$46
	CALL memcpy(($0 + $8), ($13 + [224]), [8])
	*(($0 = (($13 + [176]) + [8]))) = ($8 + [8])
	$2 = *(($5 + [16]))
	*((($13 + [152]) + [16])) = $2
	$3 = *(($5 + [8]))
	*((($13 + [152]) + [8])) = $3
	$1 = *($5)
	*((($13 + [24]) + [16])) = $2
	*((($13 + [24]) + [8])) = $3
	*($13 + [152]) = $1
	*($13 + [24]) = $1
	CALL $57(($13 + [176]), ($13 + [24]))
	$2 = *(($6 + [16]))
	*((($13 + [128]) + [16])) = $2
	$3 = *(($6 + [8]))
	*((($13 + [128]) + [8])) = $3
	$1 = *($6)
	*(($13 + [16])) = $2
	*(($13 + [8])) = $3
	*($13 + [128]) = $1
	*($13) = $1
	CALL $57(($13 + [176]), $13)
	$5 = *($13 + [208])
	$6 = CALL strlen([1568])
	if ( ((int_32)$6 != (int_32)( *($13 + [212]) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$49 }
	if ( (CALL $752(($13 + [208]), [0], [-1], [1568], $6) == 0) ){ goto $label$48 }
	
.LABEL $label$49
	CALL $767(($13 + [112]), ($13 + [208]))
	$5 = *($13 + [112])
	$8 = ($5 & [1])
	$7 = ( *($13 + [120]) ? (($13 + [112]) | [1]) : $8 )
	$8 = *($13 + [180])
	$5 = ( *($13 + [116]) ? uint_32($5 >> [1]) : $8 )
	$6 = *($0)
	if ( ((uint_32)($6 + $5) <= (uint_32)$8) ){ goto $label$51 }
	$6 = (($8 << [1]) + $5)
	*($13 + [180]) = $6
	$8 = CALL realloc(*($13 + [176]), $6)
	*($13 + [176]) = $8
	$6 = *(($13 + [184]))
	goto $label$50 
	
.LABEL $label$51
	$8 = *($13 + [176])
	
.LABEL $label$50
	CALL memcpy(($8 + $6), $7, $5)
	*(($6 = (($13 + [176]) + [8]))) = (*($6) + $5)
	if ( ((*($13 + [112]) & [1]) == 0) ){ goto $label$48 }
	CALL $738(*((($13 + [112]) + [8])))
	
.LABEL $label$48
	CALL sha256(*($13 + [176]), *(($13 + [184])), $9)
	goto $label$3 
	
.LABEL $label$5
	$5 = $8
	
.LABEL $label$4
	*($13 + [228]) = $8
	CALL $738($5)
	
.LABEL $label$3
	if ( ((*($13 + [208]) & [1]) == 0) ){ goto $label$52 }
	CALL $738(*($13 + [216]))
	
.LABEL $label$52
	*([0] + [4]) = ($13 + [240])
	return (unreachable)
	
.LABEL $label$2
	CALL $739(($13 + [48]))
}

int_32 .FUNC $502 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	$4 = (*($0) + [8])
	*($0) = $4
	$2 = *($1 + [8])
	$3 = (CASTING uint_64)(uint_32 ( *(($1 + [12])) ? uint_32($2 >> [1]) : ($2 & [1]) ))
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $4
	$2 = *(($1 + [8]))
	$2 = ( *(($1 + [12])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = ($2 + $4)
	*($0) = $4
	
.LABEL $label$2
	$2 = *($1 + [20])
	$3 = (CASTING uint_64)(uint_32 ( *(($1 + [24])) ? uint_32($2 >> [1]) : ($2 & [1]) ))
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $4
	$2 = *(($1 + [20]))
	$2 = ( *(($1 + [24])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	if ( ($2 == 0) ){ goto $label$4 }
	$4 = ($2 + $4)
	*($0) = $4
	
.LABEL $label$4
	$2 = *($1 + [32])
	$3 = (CASTING uint_64)(uint_32 ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) ))
	
.LOOP $label$5:
	$4 = ($4 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$5 }
	*($0) = $4
	$1 = *(($1 + [32]))
	$1 = ( *(($1 + [36])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ($1 == 0) ){ goto $label$6 }
	*($0) = ($1 + $4)
	
.LABEL $label$6
	return $0
}

void .FUNC _ZN11walexchange12wal_exchange20string_to_public_keyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*($0) = [0]
	*($5 + [56]) = [0]
	CALL memset((($5 + [56]) | [1]), [0], [33])
	$3 = *($2)
	$4 = ($3 & [1])
	*($5 + [8]) = ( *($2 + [8]) ? ($2 + [1]) : $4 )
	*($5 + [12]) = ( *($2 + [4]) ? uint_32($3 >> [1]) : $4 )
	*($5) = *($5 + [8])
	CALL _ZN6abieos20string_to_public_keyENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE(($5 + [16]), $5)
	CALL memcpy(($5 + [56]), ($5 + [16]), [34])
	*($0 + [4]) = *($5 + [57])
	*(($0 + [5])) = *($5 + [58])
	*($0) = ((int_32)*($5 + [56]) != (int_32)[0])
	*(($0 + [6])) = *($5 + [59])
	*(($0 + [7])) = *($5 + [60])
	*(($0 + [8])) = *($5 + [61])
	*(($0 + [9])) = *($5 + [62])
	*(($0 + [10])) = *($5 + [63])
	*(($0 + [11])) = *((($5 + [56]) + [8]))
	*(($0 + [12])) = *((($5 + [56]) + [9]))
	*(($0 + [13])) = *((($5 + [56]) + [10]))
	*(($0 + [14])) = *((($5 + [56]) + [11]))
	*(($0 + [15])) = *((($5 + [56]) + [12]))
	*(($0 + [16])) = *((($5 + [56]) + [13]))
	*(($0 + [17])) = *((($5 + [56]) + [14]))
	*(($0 + [18])) = *((($5 + [56]) + [15]))
	*(($0 + [19])) = *((($5 + [56]) + [16]))
	*(($0 + [20])) = *((($5 + [56]) + [17]))
	*(($0 + [21])) = *((($5 + [56]) + [18]))
	*(($0 + [22])) = *((($5 + [56]) + [19]))
	*(($0 + [23])) = *((($5 + [56]) + [20]))
	*(($0 + [24])) = *((($5 + [56]) + [21]))
	*(($0 + [25])) = *((($5 + [56]) + [22]))
	*(($0 + [26])) = *((($5 + [56]) + [23]))
	*(($0 + [27])) = *((($5 + [56]) + [24]))
	*(($0 + [28])) = *((($5 + [56]) + [25]))
	*(($0 + [29])) = *((($5 + [56]) + [26]))
	*(($0 + [30])) = *((($5 + [56]) + [27]))
	*(($0 + [31])) = *((($5 + [56]) + [28]))
	*(($0 + [32])) = *((($5 + [56]) + [29]))
	*(($0 + [33])) = *((($5 + [56]) + [30]))
	*(($0 + [34])) = *((($5 + [56]) + [31]))
	*(($0 + [35])) = *((($5 + [56]) + [32]))
	*(($0 + [36])) = *((($5 + [56]) + [33]))
	*([0] + [4]) = ($5 + [96])
}

void .FUNC _ZN11walexchange12wal_exchange18assert_has_pub_keyERK11checksum256RK9signatureNS_4userE (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [144])
	*([0] + [4]) = $7
	CALL recover_key($1, $2, [66], ($7 + [102]), [34])
	$4 = *(($3 + [16]))
	$2 = *($3 + [12])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$2 }
	$5 = (($7 + [64]) | [1])
	
.LOOP $label$3:
	*($7 + [64]) = *($2)
	CALL memcpy($5, ($2 + [4]), [33])
	$1 = [0]
	
.LOOP $label$5:
	if ( ((int_32)*((($7 + [102]) + $1)) != (int_32)*((($7 + [64]) + $1))) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((uint_32)$1 <= (uint_32)[33]) ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$4
	$2 = ($2 + [40])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$2
	*(($7 + [56])) = [0]
	*($7 + [40]) = (int_64)-1
	*($7 + [48]) = (int_64)0
	$6 = *($0)
	*($7 + [24]) = $6
	*($7 + [32]) = $6
	*($7 + [60]) = [0]
	*($7 + [16]) = ($7 + [24])
	CALL $50(($7 + [136]), ($7 + [16]), $3)
	$1 = *($7 + [140])
	if ( ($1 == 0) ){ goto $label$8 }
	if ( ((int_64)*($3) != (int_64)*($1 + [8])) ){ goto $label$8 }
	$6 = *($7 + [136])
	*($7 + [8]) = $6
	$1 = (CASTING uint_32)(uint_64 (uint_64)$6 >> (uint_64)(int_64)32)
	if ( ($1) == 0) ){ goto $label$7 }
	$2 = (($7 + [64]) | [1])
	
.LOOP $label$9:
	if ( ((int_64)*($1 + [8]) != (int_64)*($3)) ){ goto $label$7 }
	*($7 + [64]) = *($1 + [16])
	CALL memcpy($2, ($1 + [20]), [33])
	$1 = [0]
	
.LOOP $label$11:
	if ( ((int_32)*((($7 + [102]) + $1)) != (int_32)*((($7 + [64]) + $1))) ){ goto $label$10 }
	$1 = ($1 + [1])
	if ( ((uint_32)$1 <= (uint_32)[33]) ){ goto $label$11 }
	goto $label$6 
	
.LABEL $label$10
	CALL $51(($7 + [8]))
	$1 = *($7 + [12])
	if ( $1 ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	*($7 + [12]) = [0]
	*($7 + [8]) = ($7 + [16])
	
.LABEL $label$7
	CALL eosio_assert([0], [1520])
	
.LABEL $label$6
	$3 = *($7 + [48])
	if ( ($3 == 0) ){ goto $label$1 }
	$5 = ($7 + [52])
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$1 = ($1 + [-24])
	$2 = *($1)
	*($1) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	CALL $738($2)
	
.LABEL $label$15
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$14 }
	$1 = *(($7 + [48]))
	goto $label$12 
	
.LABEL $label$13
	$1 = $3
	
.LABEL $label$12
	*($5) = $3
	CALL $738($1)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [144])
}

void .FUNC _ZN11walexchange21order_withdraw_helper14get_order_hashEyybN5eosio14extended_assetES2_ymttNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtP11checksum256 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_64 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12)
{
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [272])
	*([0] + [4]) = $14
	CALL $767(($14 + [224]), $10)
	CALL $55(($14 + [240]), $0, ($14 + [224]))
	if ( ((*($14 + [224]) & [1]) == 0) ){ goto $label$1 }
	CALL $738(*($14 + [232]))
	
.LABEL $label$1
	if ( (uint_64)($6 <= (int_64)281474976710656) ){ goto $label$16 }
	if ( $11 ){ goto $label$16 }
	*($14 + [212 align=4]) = (int_64)128
	*($14 + [208]) = CALL malloc([128])
	*($14 + [48]) = $1
	CALL $56(($14 + [256]), ($14 + [48]))
	$0 = *($14 + [256])
	$3 = ($0 & [1])
	$11 = ( *($14 + [264]) ? (($14 + [256]) | [1]) : $3 )
	$3 = *($14 + [212])
	$0 = ( *($14 + [260]) ? uint_32($0 >> [1]) : $3 )
	$10 = *($14 + [216])
	if ( ((uint_32)($10 + $0) <= (uint_32)$3) ){ goto $label$15 }
	$10 = (($3 << [1]) + $0)
	*($14 + [212]) = $10
	$3 = CALL realloc(*($14 + [208]), $10)
	*($14 + [208]) = $3
	$10 = *(($14 + [216]))
	goto $label$14 
	
.LABEL $label$16
	*($14 + [264]) = [0]
	*($14 + [256]) = (int_64)0
	*($14 + [48]) = $1
	CALL $56(($14 + [208]), ($14 + [48]))
	$0 = *($14 + [260])
	if ( ((uint_32)$0 >= (uint_32)*($14 + [264])) ){ goto $label$18 }
	*($0) = *($14 + [208])
	$0 = (($14 + [208]) + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$17 
	
.LABEL $label$18
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$17 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$17
	*(($14 + [216])) = [0]
	*($14 + [208]) = (int_64)0
	$11 = ( [1584] ? [1600] : $3 )
	$0 = CALL strlen($11)
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$13 }
	*($14 + [208]) = ($0 << [1])
	$10 = (($14 + [208]) | [1])
	if ( $0 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$15
	$3 = *($14 + [208])
	
.LABEL $label$14
	CALL memcpy(($3 + $10), $11, $0)
	*(($10 = (($14 + [208]) + [8]))) = (*($10) + $0)
	if ( ((*($14 + [256]) & [1]) == 0) ){ goto $label$19 }
	CALL $738(*((($14 + [256]) + [8])))
	
.LABEL $label$19
	*($14 + [48]) = $2
	CALL $56(($14 + [256]), ($14 + [48]))
	$0 = *($14 + [256])
	$3 = ($0 & [1])
	$11 = ( *($14 + [264]) ? (($14 + [256]) | [1]) : $3 )
	$3 = *($14 + [212])
	$0 = ( *($14 + [260]) ? uint_32($0 >> [1]) : $3 )
	$10 = *($10)
	if ( ((uint_32)($10 + $0) <= (uint_32)$3) ){ goto $label$21 }
	$10 = (($3 << [1]) + $0)
	*($14 + [212]) = $10
	$3 = CALL realloc(*($14 + [208]), $10)
	*($14 + [208]) = $3
	$10 = *(($14 + [216]))
	goto $label$20 
	
.LABEL $label$21
	$3 = *($14 + [208])
	
.LABEL $label$20
	CALL memcpy(($3 + $10), $11, $0)
	$0 = (*($10) + $0)
	*(($10 = (($14 + [208]) + [8]))) = $0
	if ( ((*($14 + [256]) & [1]) == 0) ){ goto $label$22 }
	CALL $738(*((($14 + [256]) + [8])))
	$0 = *($10)
	
.LABEL $label$22
	*($14 + [256]) = $6
	$10 = *($14 + [212])
	if ( ((uint_32)($0 + [8]) <= (uint_32)$10) ){ goto $label$24 }
	$0 = (($10 << [1]) + [8])
	*($14 + [212]) = $0
	$10 = CALL realloc(*($14 + [208]), $0)
	*($14 + [208]) = $10
	$0 = *((($14 + [208]) + [8]))
	goto $label$23 
	
.LABEL $label$24
	$10 = *($14 + [208])
	
.LABEL $label$23
	CALL memcpy(($10 + $0), ($14 + [256]), [8])
	$3 = *($0)
	$10 = ($3 + [8])
	*(($0 = (($14 + [208]) + [8]))) = $10
	*($14 + [256]) = $7
	$3 = *($14 + [212])
	if ( ((uint_32)($3 + [12]) <= (uint_32)$3) ){ goto $label$26 }
	$10 = (($3 << [1]) + [4])
	*($14 + [212]) = $10
	$3 = CALL realloc(*($14 + [208]), $10)
	*($14 + [208]) = $3
	$10 = *($0)
	goto $label$25 
	
.LABEL $label$26
	$3 = *($14 + [208])
	
.LABEL $label$25
	CALL memcpy(($3 + $10), ($14 + [256]), [4])
	*(($0 = (($14 + [208]) + [8]))) = (*($0) + [4])
	$1 = *(($4 + [16]))
	*((($14 + [184]) + [16])) = $1
	$2 = *(($4 + [8]))
	*((($14 + [184]) + [8])) = $2
	$6 = *($4)
	*((($14 + [24]) + [16])) = $1
	*((($14 + [24]) + [8])) = $2
	*($14 + [184]) = $6
	*($14 + [24]) = $6
	CALL $57(($14 + [208]), ($14 + [24]))
	$1 = *(($5 + [16]))
	*((($14 + [160]) + [16])) = $1
	$2 = *(($5 + [8]))
	*((($14 + [160]) + [8])) = $2
	$6 = *($5)
	*(($14 + [16])) = $1
	*(($14 + [8])) = $2
	*($14 + [160]) = $6
	*($14) = $6
	CALL $57(($14 + [208]), $14)
	*($14 + [256]) = $8
	$5 = *($14 + [212])
	$4 = *($0)
	if ( ((uint_32)($4 + [2]) <= (uint_32)$5) ){ goto $label$28 }
	$4 = (($5 << [1]) + [2])
	*($14 + [212]) = $4
	$5 = CALL realloc(*($14 + [208]), $4)
	*($14 + [208]) = $5
	$4 = *($0)
	goto $label$27 
	
.LABEL $label$28
	$5 = *($14 + [208])
	
.LABEL $label$27
	CALL memcpy(($5 + $4), ($14 + [256]), [2])
	$0 = *($4)
	$5 = ($0 + [2])
	*(($4 = ($14 + [216]))) = $5
	*($14 + [256]) = $9
	$0 = *($14 + [212])
	if ( ((uint_32)($0 + [4]) <= (uint_32)$0) ){ goto $label$30 }
	$5 = (($0 << [1]) + [2])
	*($14 + [212]) = $5
	$0 = CALL realloc(*($14 + [208]), $5)
	*($14 + [208]) = $0
	$5 = *($4)
	goto $label$29 
	
.LABEL $label$30
	$0 = *($14 + [208])
	
.LABEL $label$29
	CALL memcpy(($0 + $5), ($14 + [256]), [2])
	*(($4 = ($14 + [216]))) = (*($4) + [2])
	$5 = *($14 + [240])
	$0 = CALL strlen([1568])
	if ( ((int_32)$0 != (int_32)( *($14 + [244]) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$31 }
	if ( (CALL $752(($14 + [240]), [0], [-1], [1568], $0) == 0) ){ goto $label$8 }
	
.LABEL $label$31
	CALL $767(($14 + [144]), ($14 + [240]))
	$0 = *($14 + [144])
	$10 = ($0 & [1])
	$3 = ( *($14 + [152]) ? (($14 + [144]) | [1]) : $10 )
	$0 = *($14 + [212])
	$4 = ( *($14 + [148]) ? uint_32($0 >> [1]) : $10 )
	$5 = *($4)
	if ( ((uint_32)($5 + $4) <= (uint_32)$0) ){ goto $label$10 }
	$5 = (($0 << [1]) + $4)
	*($14 + [212]) = $5
	$0 = CALL realloc(*($14 + [208]), $5)
	*($14 + [208]) = $0
	$5 = *(($14 + [216]))
	goto $label$9 
	
.LABEL $label$13
	$13 = (($0 + [16]) & [-16])
	$10 = CALL $737($13)
	*($14 + [208]) = ($13 | [1])
	*($14 + [216]) = $10
	*($14 + [212]) = $0
	
.LABEL $label$12
	CALL memcpy($10, $11, $0)
	
.LABEL $label$11
	*(($10 + $0)) = [0]
	$0 = *($14 + [260])
	if ( ((uint_32)$0 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$33 }
	*($0) = *($14 + [208])
	$0 = (($14 + [208]) + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$32 
	
.LABEL $label$33
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$32 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$32
	if ( (int_64)(*($4) == 0) ){ goto $label$7 }
	$11 = ( [1616] ? [1632] : (int_64)(*($5) == 0) )
	goto $label$6 
	
.LABEL $label$10
	$0 = *($14 + [208])
	
.LABEL $label$9
	CALL memcpy(($0 + $5), $3, $4)
	*(($5 = (($14 + [208]) + [8]))) = (*($5) + $4)
	if ( ((*($14 + [144]) & [1]) == 0) ){ goto $label$8 }
	CALL $738(*((($14 + [144]) + [8])))
	
.LABEL $label$8
	CALL sha256(*($14 + [208]), *(($14 + [216])), $12)
	goto $label$5 
	
.LABEL $label$7
	$11 = [1616]
	
.LABEL $label$6
	*(($14 + [216])) = [0]
	*($14 + [208]) = (int_64)0
	$0 = CALL strlen($11)
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$36 }
	*($14 + [208]) = ($0 << [1])
	$10 = (($14 + [208]) | [1])
	if ( $0 ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	$13 = (($0 + [16]) & [-16])
	$10 = CALL $737($13)
	*($14 + [208]) = ($13 | [1])
	*($14 + [216]) = $10
	*($14 + [212]) = $0
	
.LABEL $label$35
	CALL memcpy($10, $11, $0)
	
.LABEL $label$34
	*(($10 + $0)) = [0]
	$0 = *($14 + [260])
	if ( ((uint_32)$0 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$64 }
	*($0) = *($14 + [208])
	$0 = (($14 + [208]) + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	if ( $3 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$64
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$65 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$65
	if ( ($3 == 0) ){ goto $label$62 }
	
.LABEL $label$63
	*($14 + [48]) = *($5 + [16])
	CALL $56(($14 + [208]), ($14 + [48]))
	$0 = *($14 + [260])
	if ( ((uint_32)$0 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$61 }
	*($0) = *($14 + [208])
	$0 = (($14 + [208]) + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$60 
	
.LABEL $label$62
	*($14 + [48]) = *($4 + [16])
	CALL $56(($14 + [208]), ($14 + [48]))
	$0 = *($14 + [260])
	if ( ((uint_32)$0 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$59 }
	*($0) = *($14 + [208])
	$0 = (($14 + [208]) + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$58 
	
.LABEL $label$61
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$60 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$60
	CALL _Z16symbol_to_stringy(($14 + [208]), *($5 + [8]))
	$0 = *($14 + [260])
	if ( ((uint_32)$0 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$57 }
	*($0) = *($14 + [208])
	$0 = (($14 + [208]) + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$56 
	
.LABEL $label$59
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$58 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$58
	CALL _Z16symbol_to_stringy(($14 + [208]), *($4 + [8]))
	$0 = *($14 + [260])
	if ( ((uint_32)$0 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$55 }
	*($0) = *($14 + [208])
	$0 = (($14 + [208]) + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$54 
	
.LABEL $label$57
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$56 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$56
	CALL _ZNSt3__19to_stringEx(($14 + [128]), *($5))
	CALL _Z19join_space_with_numNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEi(($14 + [208]), ($14 + [128]), [12])
	$5 = *($14 + [260])
	if ( ((uint_32)$5 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$53 }
	*($5) = *($14 + [208])
	$5 = (($14 + [208]) + [8])
	*(($5 + [8])) = *($5)
	*($5) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$52 
	
.LABEL $label$55
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$54 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$54
	CALL _ZNSt3__19to_stringEx(($14 + [96]), *($4))
	CALL _Z19join_space_with_numNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEi(($14 + [208]), ($14 + [96]), [12])
	$4 = *($14 + [260])
	if ( ((uint_32)$4 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$51 }
	*($4) = *($14 + [208])
	$4 = (($14 + [208]) + [8])
	*(($4 + [8])) = *($4)
	*($4) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$50 
	
.LABEL $label$53
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$52 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$52
	if ( ((*($14 + [128]) & [1]) == 0) ){ goto $label$66 }
	CALL $738(*($14 + [136]))
	
.LABEL $label$66
	*($14 + [48]) = *($4 + [16])
	CALL $56(($14 + [208]), ($14 + [48]))
	$5 = *($14 + [260])
	if ( ((uint_32)$5 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$49 }
	*($5) = *($14 + [208])
	$5 = (($14 + [208]) + [8])
	*(($5 + [8])) = *($5)
	*($5) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$48 
	
.LABEL $label$51
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$50 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$50
	if ( ((*($14 + [96]) & [1]) == 0) ){ goto $label$67 }
	CALL $738(*($14 + [104]))
	
.LABEL $label$67
	*($14 + [48]) = *($5 + [16])
	CALL $56(($14 + [208]), ($14 + [48]))
	$4 = *($14 + [260])
	if ( ((uint_32)$4 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$47 }
	*($4) = *($14 + [208])
	$4 = (($14 + [208]) + [8])
	*(($4 + [8])) = *($4)
	*($4) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$46 
	
.LABEL $label$49
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$48 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$48
	CALL _Z16symbol_to_stringy(($14 + [208]), *($4 + [8]))
	$5 = *($14 + [260])
	if ( ((uint_32)$5 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$45 }
	*($5) = *($14 + [208])
	$5 = (($14 + [208]) + [8])
	*(($5 + [8])) = *($5)
	*($5) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$44 
	
.LABEL $label$47
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$46 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$46
	CALL _Z16symbol_to_stringy(($14 + [208]), *($5 + [8]))
	$4 = *($14 + [260])
	if ( ((uint_32)$4 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$43 }
	*($4) = *($14 + [208])
	$4 = (($14 + [208]) + [8])
	*(($4 + [8])) = *($4)
	*($4) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$42 
	
.LABEL $label$45
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$44 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$44
	CALL _ZNSt3__19to_stringEx(($14 + [112]), *($4))
	CALL _Z19join_space_with_numNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEi(($14 + [208]), ($14 + [112]), [12])
	$4 = *($14 + [260])
	if ( ((uint_32)$4 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$41 }
	*($4) = *($14 + [208])
	$4 = (($14 + [208]) + [8])
	*(($4 + [8])) = *($4)
	*($4) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$40 
	
.LABEL $label$43
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$42 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$42
	CALL _ZNSt3__19to_stringEx(($14 + [80]), *($5))
	CALL _Z19join_space_with_numNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEi(($14 + [208]), ($14 + [80]), [12])
	$4 = *($14 + [260])
	if ( ((uint_32)$4 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$39 }
	*($4) = *($14 + [208])
	$4 = (($14 + [208]) + [8])
	*(($4 + [8])) = *($4)
	*($4) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$38 
	
.LABEL $label$41
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$40 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$40
	if ( ((*($14 + [112]) & [1]) == 0) ){ goto $label$37 }
	CALL $738(*($14 + [120]))
	goto $label$37 
	
.LABEL $label$39
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$38 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$38
	if ( ((*($14 + [80]) & [1]) == 0) ){ goto $label$37 }
	CALL $738(*($14 + [88]))
	
.LABEL $label$37
	CALL _ZNSt3__19to_stringEi(($14 + [208]), $8)
	$4 = *($14 + [260])
	if ( ((uint_32)$4 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$69 }
	*($4) = *($14 + [208])
	$4 = (($14 + [208]) + [8])
	*(($4 + [8])) = *($4)
	*($4) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$68 
	
.LABEL $label$69
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$68 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$68
	CALL _ZNSt3__19to_stringEi(($14 + [208]), $9)
	$4 = *($14 + [260])
	if ( ((uint_32)$4 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$71 }
	*($4) = *($14 + [208])
	$4 = (($14 + [208]) + [8])
	*(($4 + [8])) = *($4)
	*($4) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$70 
	
.LABEL $label$71
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$70 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$70
	*($14 + [48]) = $2
	CALL $56(($14 + [208]), ($14 + [48]))
	$4 = *($14 + [260])
	if ( ((uint_32)$4 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$73 }
	*($4) = *($14 + [208])
	$4 = (($14 + [208]) + [8])
	*(($4 + [8])) = *($4)
	*($4) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$72 
	
.LABEL $label$73
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$72 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$72
	CALL _ZNSt3__19to_stringEy(($14 + [64]), $6)
	CALL _Z19join_space_with_numNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEi(($14 + [208]), ($14 + [64]), [12])
	$4 = *($14 + [260])
	if ( ((uint_32)$4 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$75 }
	*($4) = *($14 + [208])
	$4 = (($14 + [208]) + [8])
	*(($4 + [8])) = *($4)
	*($4) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$74 
	
.LABEL $label$75
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$74 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$74
	if ( ((*($14 + [64]) & [1]) == 0) ){ goto $label$76 }
	CALL $738(*($14 + [72]))
	
.LABEL $label$76
	CALL _ZNSt3__19to_stringEm(($14 + [208]), $7)
	$4 = *($14 + [260])
	if ( ((uint_32)$4 >= (uint_32)*((($14 + [256]) + [8]))) ){ goto $label$78 }
	*($4) = *($14 + [208])
	$4 = (($14 + [208]) + [8])
	*(($4 + [8])) = *($4)
	*($4) = [0]
	*($14 + [208]) = [0]
	*($14 + [212]) = [0]
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$77 
	
.LABEL $label$78
	CALL $58(($14 + [256]), ($14 + [208]))
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$77 }
	CALL $738(*($14 + [216]))
	
.LABEL $label$77
	$4 = *($14 + [260])
	if ( ((int_32)$4 == (int_32)*(($14 + [264]))) ){ goto $label$80 }
	CALL $767($4, ($14 + [240]))
	*($14 + [260]) = (*($14 + [260]) + [12])
	goto $label$79 
	
.LABEL $label$80
	CALL $61(($14 + [256]), ($14 + [240]))
	
.LABEL $label$79
	*(($14 + [56])) = [0]
	*($14 + [48]) = (int_64)0
	$4 = CALL strlen([1648])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$83 }
	*($14 + [48]) = ($4 << [1])
	$0 = (($14 + [48]) | [1])
	if ( $4 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$83
	$5 = (($4 + [16]) & [-16])
	$0 = CALL $737($5)
	*($14 + [48]) = ($5 | [1])
	*($14 + [56]) = $0
	*($14 + [52]) = $4
	
.LABEL $label$82
	CALL memcpy($0, [1648], $4)
	
.LABEL $label$81
	$5 = [0]
	*(($0 + $4)) = [0]
	*($14 + [208]) = (int_64)0
	*($14 + [216]) = [0]
	$4 = (*($14 + [260]) - *($14 + [256]))
	$7 = ((int_32)$4 / (int_32)[12])
	if ( ($4 == 0) ){ goto $label$84 }
	$8 = (($14 + [48]) | [1])
	$9 = ($14 + [56])
	$0 = [4]
	
.LOOP $label$85:
	if ( ($5 == 0) ){ goto $label$86 }
	$4 = *($14 + [48])
	$10 = ($4 & [1])
	CALL $744(($14 + [208]), ( *($9) ? $8 : $10 ), ( *($14 + [52]) ? uint_32($4 >> [1]) : $10 ))
	
.LABEL $label$86
	$10 = *(($4 + [-4]))
	$3 = ($10 & [1])
	$4 = (*($14 + [256]) + $0)
	CALL $744(($14 + [208]), ( *(($4 + [4])) ? ($4 + [-3]) : $3 ), ( *($4) ? uint_32($10 >> [1]) : $3 ))
	$0 = ($0 + [12])
	$5 = ($5 + [1])
	if ( ($5 <= $7) ){ goto $label$85 }
	
.LABEL $label$84
	if ( ((*($14 + [48]) & [1]) == 0) ){ goto $label$87 }
	CALL $738(*($14 + [56]))
	
.LABEL $label$87
	$0 = *($14 + [208])
	$10 = ($0 & [1])
	$5 = (($14 + [208]) | [1])
	$4 = ($14 + [216])
	CALL prints_l(( *($4) ? $5 : $10 ), ( *($14 + [212]) ? uint_32($0 >> [1]) : $10 ))
	$0 = *($14 + [208])
	$10 = ($0 & [1])
	CALL sha256(( *($4) ? $5 : $10 ), ( *($14 + [212]) ? uint_32($0 >> [1]) : $10 ), $12)
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$88 }
	CALL $738(*($4))
	
.LABEL $label$88
	$0 = *($14 + [256])
	if ( ($0 == 0) ){ goto $label$5 }
	$4 = *($14 + [260])
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$90 }
	$5 = ([0] - $0)
	$4 = ($4 + [-12])
	
.LOOP $label$91:
	if ( ((*($4) & [1]) == 0) ){ goto $label$92 }
	CALL $738(*(($4 + [8])))
	
.LABEL $label$92
	$4 = ($4 + [-12])
	if ( ((int_32)($4 + $5) != (int_32)[-12]) ){ goto $label$91 }
	$4 = *($14 + [256])
	goto $label$89 
	
.LABEL $label$90
	$4 = $0
	
.LABEL $label$89
	*($14 + [260]) = $0
	CALL $738($4)
	
.LABEL $label$5
	if ( ((*($14 + [240]) & [1]) == 0) ){ goto $label$93 }
	CALL $738(*($14 + [248]))
	
.LABEL $label$93
	*([0] + [4]) = ($14 + [272])
	return (unreachable)
	
.LABEL $label$4
	CALL $739(($14 + [208]))
	
.LABEL $label$3
	CALL $739(($14 + [208]))
	
.LABEL $label$2
	CALL $739(($14 + [48]))
	(unreachable)
	(unreachable)
}

void .FUNC _ZN11walexchange12wal_exchange9verifywd2EyyyyN5eosio15extended_symbolExxNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE9signaturet (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_64 $6, int_64 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_32 $19
	int_32 $20
	$20 = (*([0] + [4]) - [384])
	*([0] + [4]) = $20
	if ( CALL has_auth(*(($0 + [240]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [200])))
	
.LABEL $label$1
	*($20 + [376]) = *($0)
	*($20 + [368]) = [0]
	*($20 + [360]) = (int_64)0
	*($20 + [352]) = [0]
	*($20 + [344]) = (int_64)0
	*($20 + [336]) = [0]
	*($20 + [328]) = (int_64)0
	*($20 + [320]) = [0]
	*($20 + [312]) = (int_64)0
	*($20 + [304]) = [0]
	*($20 + [296]) = (int_64)0
	CALL $767(($20 + [280]), $8)
	CALL $126(($20 + [376]), ($20 + [280]), ($20 + [360]), ($20 + [344]), ($20 + [328]), ($20 + [312]), ($20 + [296]))
	$17 = [1]
	if ( ((*($20 + [280]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*($20 + [288]))
	
.LABEL $label$2
	*($20 + [272]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($20 + [272]), $2, [1])
	$16 = ($19 & [1])
	$19 = *($20 + [312])
	$19 = ( *($20 + [316]) ? uint_32($19 >> [1]) : $16 )
	if ( ($19 == 0) ){ goto $label$3 }
	$17 = ( *(($20 + [320])) ? (($20 + [312]) | [1]) : $16 )
	
.LOOP $label$5:
	if ( (CALL isdigit(*($17)) == 0) ){ goto $label$4 }
	$17 = ($17 + [1])
	$19 = ($19 + [-1])
	if ( $19 ){ goto $label$5 }
	$17 = [1]
	goto $label$3 
	
.LABEL $label$4
	$17 = [0]
	
.LABEL $label$3
	CALL eosio_assert($17, [1408])
	$19 = [0]
	$14 = [0]
	$17 = *($20 + [312])
	if ( (( *($20 + [316]) ? uint_32($17 >> [1]) : ($17 & [1]) ) == 0) ){ goto $label$6 }
	$14 = ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($20 + [312]), [0], [10]) & [65535]) == (int_32)[1])
	
.LABEL $label$6
	$11 = *($5)
	$18 = (uint_64)$11 >> (uint_64)(int_64)8
	$15 = $18)
	
.LOOP $label$9:
	$17 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$16 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$16 = [0]
	
.LABEL $label$7
	CALL eosio_assert($16, [2896])
	$19 = (uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)
	CALL eosio_assert((((int_64)$6 > (int_64)0) & $19), [2928])
	$12 = ((int_64)$7 + (int_64)4611686018427387903)
	CALL eosio_assert((((int_64)$7 > (int_64)-1) & (uint_64)($12 <= (int_64)9223372036854775807)), [2976])
	$13 = *($5 + [8])
	CALL eosio_assert($19, [2768])
	$15 = $18
	
.LOOP $label$14:
	$19 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$16 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$16 = [0]
	
.LABEL $label$12
	CALL eosio_assert($16, [2832])
	CALL eosio_assert((uint_64)($12 <= (int_64)9223372036854775807), [2768])
	
.LOOP $label$18:
	$17 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$17 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	CALL eosio_assert($17, [2832])
	*($20 + [224]) = $11
	*($20 + [232]) = $13
	*($20 + [216]) = $6
	*($20 + [200]) = $11
	*($20 + [208]) = $13
	*($20 + [192]) = $7
	CALL $767(($20 + [176]), $8)
	*((($20 + [40]) + [16])) = *($20 + [232])
	*((($20 + [40]) + [8])) = *($20 + [224])
	*((($20 + [16]) + [16])) = *($20 + [208])
	*((($20 + [16]) + [8])) = *($20 + [200])
	*($20 + [40]) = *($20 + [216])
	*($20 + [16]) = *($20 + [192])
	CALL _ZN11walexchange21order_withdraw_helper17get_withdraw_hashEyyyyN5eosio14extended_assetES2_NSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtP11checksum256(($20 + [376]), $1, $2, $3, $18, ($20 + [40]), ($20 + [16]), ($20 + [176]), $10, ($20 + [240]))
	if ( ((*($20 + [176]) & [1]) == 0) ){ goto $label$21 }
	CALL $738(*($20 + [184]))
	
.LABEL $label$21
	CALL _ZN11walexchange12wal_exchange19assert_has_pub_key3EPK11checksum256PK9signatureyPb($0, ($20 + [240]), $9, CALL $6(($20 + [272]), $1, [0]), ($20 + [175]))
	if ( ($14 == 0) ){ goto $label$25 }
	$8 = (($20 + [328]) | [1])
	$17 = [1]
	$16 = ($19 & [1])
	$19 = *($20 + [328])
	$19 = ( *($20 + [332]) ? uint_32($19 >> [1]) : $16 )
	if ( ($19 == 0) ){ goto $label$23 }
	$17 = ( *(($20 + [336])) ? $8 : $16 )
	
.LOOP $label$26:
	if ( (CALL isdigit(*($17)) == 0) ){ goto $label$24 }
	$17 = ($17 + [1])
	$19 = ($19 + [-1])
	if ( $19 ){ goto $label$26 }
	$17 = [1]
	goto $label$23 
	
.LABEL $label$25
	$8 = (($20 + [328]) | [1])
	goto $label$22 
	
.LABEL $label$24
	$17 = [0]
	
.LABEL $label$23
	CALL eosio_assert($17, [1408])
	$17 = *($20 + [328])
	if ( (( *($20 + [332]) ? uint_32($17 >> [1]) : ($17 & [1]) ) == 0) ){ goto $label$28 }
	if ( ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($20 + [328]), [0], [10]) & [65535]) == (int_32)[1]) ){ goto $label$27 }
	
.LABEL $label$28
	$15 = CALL $76(($20 + [376]), ($20 + [360]))
	CALL eosio_assert(CALL $fimport$46($15), [2032])
	*(($20 + [160])) = [0]
	*($20 + [144]) = (int_64)-1
	*($20 + [152]) = (int_64)0
	$18 = *($0)
	*($20 + [128]) = $18
	*($20 + [136]) = $18
	$17 = CALL db_find_i64($18, $18, (int_64)-2063328869057822720, $15)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$29 }
	CALL eosio_assert(((int_32)*(CALL $129(($20 + [128]), $17) + [8]) == (int_32)($20 + [128])), [288])
	*($20 + [175]) = [1]
	
.LABEL $label$29
	$16 = *($20 + [152])
	if ( ($16 == 0) ){ goto $label$27 }
	$9 = ($20 + [156])
	$17 = *($9)
	if ( ((int_32)$17 == (int_32)$16) ){ goto $label$31 }
	
.LOOP $label$32:
	$17 = ($17 + [-24])
	$19 = *($17)
	*($17) = [0]
	if ( ($19 == 0) ){ goto $label$33 }
	CALL $738($19)
	
.LABEL $label$33
	if ( ((int_32)$16 != (int_32)$17) ){ goto $label$32 }
	$17 = *(($20 + [152]))
	goto $label$30 
	
.LABEL $label$31
	$17 = $16
	
.LABEL $label$30
	*($9) = $16
	CALL $738($17)
	
.LABEL $label$27
	CALL eosio_assert(*($20 + [175]), [3024])
	
.LABEL $label$22
	*((($20 + [112]) + [8])) = *(($5 + [8]))
	*($20 + [112]) = *($5)
	CALL $767(($20 + [96]), ($20 + [360]))
	CALL $767(($20 + [80]), ($20 + [344]))
	$17 = [1]
	$16 = ($19 & [1])
	$19 = *($20 + [328])
	$19 = ( *($20 + [332]) ? uint_32($19 >> [1]) : $16 )
	if ( ($19 == 0) ){ goto $label$34 }
	$17 = ( *((($20 + [328]) + [8])) ? $8 : $16 )
	
.LOOP $label$36:
	if ( (CALL isdigit(*($17)) == 0) ){ goto $label$35 }
	$17 = ($17 + [1])
	$19 = ($19 + [-1])
	if ( $19 ){ goto $label$36 }
	$17 = [1]
	goto $label$34 
	
.LABEL $label$35
	$17 = [0]
	
.LABEL $label$34
	CALL eosio_assert($17, [1408])
	$17 = [0]
	$19 = *($20 + [328])
	if ( (( *($20 + [332]) ? uint_32($19 >> [1]) : ($19 & [1]) ) == 0) ){ goto $label$37 }
	$17 = ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($20 + [328]), [0], [10]) & [65535]) == (int_32)[1])
	
.LABEL $label$37
	CALL $767(($20 + [64]), ($20 + [296]))
	*(($20 + [8])) = *((($20 + [112]) + [8]))
	*($20) = *($20 + [112])
	CALL _ZN11walexchange12wal_exchange15create_withdrawEyyyyN5eosio15extended_symbolExxbhyNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_bbS9_($0, $1, $2, $3, $4, $20, $6, $7, [0], [0], (int_64)0, ($20 + [96]), ($20 + [80]), $17, $14, ($20 + [64]))
	if ( ((*($20 + [64]) & [1]) == 0) ){ goto $label$38 }
	CALL $738(*($20 + [72]))
	
.LABEL $label$38
	if ( ((*($20 + [80]) & [1]) == 0) ){ goto $label$39 }
	CALL $738(*($20 + [88]))
	
.LABEL $label$39
	if ( ((*($20 + [96]) & [1]) == 0) ){ goto $label$40 }
	CALL $738(*($20 + [104]))
	
.LABEL $label$40
	CALL _ZN11walexchange12wal_exchange6add_idEyyt($0, $2, $3, [3])
	if ( ((*($20 + [296]) & [1]) == 0) ){ goto $label$41 }
	CALL $738(*(($20 + [304])))
	
.LABEL $label$41
	if ( ((*($20 + [312]) & [1]) == 0) ){ goto $label$42 }
	CALL $738(*(($20 + [320])))
	
.LABEL $label$42
	if ( ((*($20 + [328]) & [1]) == 0) ){ goto $label$43 }
	CALL $738(*(($20 + [336])))
	
.LABEL $label$43
	if ( ((*($20 + [344]) & [1]) == 0) ){ goto $label$44 }
	CALL $738(*(($20 + [352])))
	
.LABEL $label$44
	if ( ((*($20 + [360]) & [1]) == 0) ){ goto $label$45 }
	CALL $738(*(($20 + [368])))
	
.LABEL $label$45
	*([0] + [4]) = ($20 + [384])
}

void .FUNC _ZN11walexchange12wal_exchange12verifyorder2EyybN5eosio14extended_assetES2_ymttNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE9signaturet (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_64 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12)
{
	int_64 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$19 = (*([0] + [4]) - [544])
	*([0] + [4]) = $19
	if ( CALL has_auth(*(($0 + [240]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [200])))
	
.LABEL $label$1
	*($19 + [536]) = *($0)
	$18 = [1]
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($19 + [536]), $1, [1])
	*($19 + [528]) = *($0)
	*($19 + [520]) = [0]
	*($19 + [512]) = (int_64)0
	*($19 + [504]) = [0]
	*($19 + [496]) = (int_64)0
	*($19 + [488]) = [0]
	*($19 + [480]) = (int_64)0
	*($19 + [472]) = [0]
	*($19 + [464]) = (int_64)0
	*($19 + [456]) = [0]
	*($19 + [448]) = (int_64)0
	*($19 + [440]) = [0]
	*($19 + [432]) = (int_64)0
	*($19 + [424]) = [0]
	*($19 + [416]) = (int_64)0
	CALL $767(($19 + [400]), $10)
	CALL $44(($19 + [528]), ($19 + [400]), ($19 + [512]), ($19 + [496]), ($19 + [480]), ($19 + [464]), ($19 + [448]), ($19 + [432]), ($19 + [416]))
	if ( ((*($19 + [400]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*($19 + [408]))
	
.LABEL $label$2
	$15 = ($14 & [1])
	$14 = *($19 + [432])
	$14 = ( *($19 + [436]) ? uint_32($14 >> [1]) : $15 )
	if ( ($14 == 0) ){ goto $label$3 }
	$18 = ( *(($19 + [440])) ? (($19 + [432]) | [1]) : $15 )
	
.LOOP $label$5:
	if ( (CALL isdigit(*($18)) == 0) ){ goto $label$4 }
	$18 = ($18 + [1])
	$14 = ($14 + [-1])
	if ( $14 ){ goto $label$5 }
	$18 = [1]
	goto $label$3 
	
.LABEL $label$4
	$18 = [0]
	
.LABEL $label$3
	CALL eosio_assert($18, [1408])
	$18 = *($19 + [432])
	if ( (( *($19 + [436]) ? uint_32($18 >> [1]) : ($18 & [1]) ) == 0) ){ goto $label$6 }
	CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($19 + [432]), [0], [10])
	
.LABEL $label$6
	$18 = [0]
	$13 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($19 + [536]), $2, [0])
	*($19 + [384]) = $1
	*($19 + [392]) = [60]
	*($19 + [376]) = *($0)
	if ( CALL _ZN11walexchange13order_manager12exists_orderEy(($19 + [376]), $6) ){ goto $label$8 }
	*(($19 + [368])) = [0]
	*($19 + [352]) = (int_64)-1
	*($19 + [360]) = (int_64)0
	$16 = *($0)
	*($19 + [336]) = $16
	*($19 + [344]) = $16
	*($19 + [372]) = [0]
	*($19 + [328]) = ($19 + [336])
	*($19 + [136]) = *($5 + [16])
	*($19 + [128]) = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8)
	CALL $46(($19 + [240]), ($19 + [328]), ($19 + [128]))
	$14 = *($19 + [244])
	if ( ($14 == 0) ){ goto $label$9 }
	$18 = ( $14 ? [0] : (int_64)(((int_64)((int_64)*($19 + [128]) ^ (int_64)(uint_64)*($14 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($19 + [136]) ^ (int_64)*(($14 + [16])))) == 0) )
	
.LABEL $label$9
	$15 = [0]
	CALL eosio_assert(((int_32)$18 != (int_32)[0]), [1456])
	$18 = [1]
	$17 = ($14 & [1])
	$14 = *($19 + [496])
	$14 = ( *($19 + [500]) ? uint_32($14 >> [1]) : $17 )
	if ( ($14 == 0) ){ goto $label$10 }
	$18 = ( *(($19 + [504])) ? (($19 + [496]) | [1]) : $17 )
	
.LOOP $label$12:
	if ( (CALL isdigit(*($18)) == 0) ){ goto $label$11 }
	$18 = ($18 + [1])
	$14 = ($14 + [-1])
	if ( $14 ){ goto $label$12 }
	$18 = [1]
	goto $label$10 
	
.LABEL $label$11
	$18 = [0]
	
.LABEL $label$10
	CALL eosio_assert($18, [1408])
	$18 = *($19 + [496])
	if ( (( *($19 + [500]) ? uint_32($18 >> [1]) : ($18 & [1]) ) == 0) ){ goto $label$13 }
	$15 = ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($19 + [496]), [0], [10]) & [65535]) == (int_32)[1])
	
.LABEL $label$13
	CALL eosio_assert(((int_32)$15 ^ (int_32)[1]), [1488])
	if ( ($3 == 0) ){ goto $label$15 }
	$16 = *($5)
	if ( (int_64)($16 == 0) ){ goto $label$15 }
	*($19 + [312]) = $16
	*((($19 + [80]) + [12])) = *((($19 + [304]) + [12]))
	*($19 + [320]) = $7
	*(($19 + [96])) = $7
	*((($19 + [80]) + [20])) = *((($19 + [304]) + [20]))
	*(($19 + [88])) = *($19 + [312])
	*($19 + [304]) = $6
	*($19 + [84]) = *($19 + [308])
	*($19 + [80]) = *($19 + [304])
	CALL _ZN11walexchange13order_manager9add_orderENS_12bucket_orderE(($19 + [376]), ($19 + [80]))
	goto $label$14 
	
.LABEL $label$15
	$16 = *($4)
	*((($19 + [56]) + [20])) = *((($19 + [280]) + [20]))
	*($19 + [296]) = $7
	*(($19 + [72])) = $7
	*($19 + [288]) = $16
	*((($19 + [56]) + [12])) = *((($19 + [280]) + [12]))
	*(($19 + [64])) = *($19 + [288])
	*($19 + [280]) = $6
	*($19 + [60]) = *($19 + [284])
	*($19 + [56]) = *($19 + [280])
	CALL _ZN11walexchange13order_manager9add_orderENS_12bucket_orderE(($19 + [376]), ($19 + [56]))
	
.LABEL $label$14
	*(($18 = (($19 + [216]) + [16]))) = *(($4 + [16]))
	*(($14 = (($19 + [216]) + [8]))) = *(($4 + [8]))
	*($19 + [216]) = *($4)
	*(($4 = (($19 + [192]) + [16]))) = *(($5 + [16]))
	*(($15 = (($19 + [192]) + [8]))) = *(($5 + [8]))
	*($19 + [192]) = *($5)
	CALL $767(($19 + [176]), $10)
	*((($19 + [32]) + [16])) = *($18)
	*((($19 + [32]) + [8])) = *($14)
	*((($19 + [8]) + [16])) = *($4)
	*((($19 + [8]) + [8])) = *($15)
	*($19 + [32]) = *($19 + [216])
	*($19 + [8]) = *($19 + [192])
	CALL _ZN11walexchange21order_withdraw_helper14get_order_hashEyybN5eosio14extended_assetES2_ymttNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtP11checksum256(($19 + [528]), $2, $1, $3, ($19 + [32]), ($19 + [8]), $6, $7, $8, $9, ($19 + [176]), $12, ($19 + [240]))
	if ( ((*($19 + [176]) & [1]) == 0) ){ goto $label$16 }
	CALL $738(*($19 + [184]))
	
.LABEL $label$16
	*(($19 + [160])) = [0]
	*($19 + [144]) = (int_64)-1
	*($19 + [152]) = (int_64)0
	$1 = *($0)
	*($19 + [128]) = $1
	*($19 + [136]) = $1
	$18 = CALL $19(($19 + [128]), $13, [592])
	$1 = *($18)
	$14 = *(($18 + [8]))
	*((($19 + [104]) + [16])) = (int_64)0
	*((($19 + [104]) + [8])) = $14
	*($19 + [116]) = [0]
	*($19 + [104]) = $1
	$14 = (*(($18 + [16])) - *($18 + [12]))
	$5 = ((int_32)$14 / (int_32)[40])
	if ( ($14 == 0) ){ goto $label$17 }
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$7 }
	$14 = CALL $737($14)
	*((($19 + [104]) + [12])) = $14
	*(($19 + [124])) = ($14 + ((int_32)$5 * (int_32)[40]))
	*(($5 = (($19 + [104]) + [16]))) = $14
	$4 = *(($18 + [12]))
	$18 = (*(($18 + [16])) - $4)
	if ( ((int_32)$18 < (int_32)[1]) ){ goto $label$17 }
	CALL memcpy($14, $4, $18)
	*($5) = (*($5) + ((int_32)((uint_32)$18 / (uint_32)[40]) * (int_32)[40]))
	
.LABEL $label$17
	CALL _ZN11walexchange12wal_exchange18assert_has_pub_keyERK11checksum256RK9signatureNS_4userE($0, ($19 + [240]), $11, ($19 + [104]))
	$18 = *($19 + [116])
	if ( ($18 == 0) ){ goto $label$18 }
	*(($19 + [120])) = $18
	CALL $738($18)
	
.LABEL $label$18
	$5 = *($19 + [152])
	if ( ($5 == 0) ){ goto $label$19 }
	$4 = ($19 + [156])
	$18 = *($4)
	if ( ((int_32)$18 == (int_32)$5) ){ goto $label$21 }
	
.LOOP $label$22:
	$18 = ($18 + [-24])
	$14 = *($18)
	*($18) = [0]
	if ( ($14 == 0) ){ goto $label$23 }
	$0 = *($14 + [12])
	if ( ($0 == 0) ){ goto $label$24 }
	*(($14 + [16])) = $0
	CALL $738($0)
	
.LABEL $label$24
	CALL $738($14)
	
.LABEL $label$23
	if ( ((int_32)$5 != (int_32)$18) ){ goto $label$22 }
	$18 = *(($19 + [152]))
	goto $label$20 
	
.LABEL $label$21
	$18 = $5
	
.LABEL $label$20
	*($4) = $5
	CALL $738($18)
	
.LABEL $label$19
	$0 = *($19 + [360])
	if ( ($0 == 0) ){ goto $label$8 }
	$5 = ($19 + [364])
	$18 = *($5)
	if ( ((int_32)$18 == (int_32)$0) ){ goto $label$26 }
	
.LOOP $label$27:
	$18 = ($18 + [-24])
	$14 = *($18)
	*($18) = [0]
	if ( ($14 == 0) ){ goto $label$28 }
	CALL $738($14)
	
.LABEL $label$28
	if ( ((int_32)$0 != (int_32)$18) ){ goto $label$27 }
	$18 = *(($19 + [360]))
	goto $label$25 
	
.LABEL $label$26
	$18 = $0
	
.LABEL $label$25
	*($5) = $0
	CALL $738($18)
	
.LABEL $label$8
	if ( ((*($19 + [416]) & [1]) == 0) ){ goto $label$29 }
	CALL $738(*(($19 + [424])))
	
.LABEL $label$29
	if ( ((*($19 + [432]) & [1]) == 0) ){ goto $label$30 }
	CALL $738(*(($19 + [440])))
	
.LABEL $label$30
	if ( ((*($19 + [448]) & [1]) == 0) ){ goto $label$31 }
	CALL $738(*(($19 + [456])))
	
.LABEL $label$31
	if ( ((*($19 + [464]) & [1]) == 0) ){ goto $label$32 }
	CALL $738(*(($19 + [472])))
	
.LABEL $label$32
	if ( ((*($19 + [480]) & [1]) == 0) ){ goto $label$33 }
	CALL $738(*(($19 + [488])))
	
.LABEL $label$33
	if ( ((*($19 + [496]) & [1]) == 0) ){ goto $label$34 }
	CALL $738(*(($19 + [504])))
	
.LABEL $label$34
	if ( ((*($19 + [512]) & [1]) == 0) ){ goto $label$35 }
	CALL $738(*(($19 + [520])))
	
.LABEL $label$35
	*([0] + [4]) = ($19 + [544])
	return (unreachable)
	
.LABEL $label$7
	CALL $766(($19 + [116]))
}

void .FUNC _ZN11walexchange12wal_exchange11verifyorderEyybN5eosio14extended_assetES2_ymtt9signature (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_64 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	CALL require_auth(*(($0 + [200])))
	CALL eosio_assert([0], [1376])
}

void .FUNC _ZN11walexchange13order_manager15complete_bucketEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [160])
	*([0] + [4]) = $6
	*((($6 + [88]) + [32])) = [0]
	*($6 + [104]) = (int_64)-1
	*($6 + [112]) = (int_64)0
	$4 = *($0)
	*($6 + [88]) = $4
	*($6 + [96]) = $4
	$3 = [0]
	$2 = CALL db_find_i64($4, $4, (int_64)-4417020450001911808, (int_64)-4417020450001911808)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $33(($6 + [88]), $2)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)($6 + [88])), [288])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [672])
	$3 = *($3 + [12])
	*((($6 + [48]) + [32])) = [0]
	*($6 + [64]) = (int_64)-1
	*($6 + [72]) = (int_64)0
	$4 = *($0)
	*($6 + [48]) = $4
	*($6 + [56]) = $4
	CALL eosio_assert(((uint_32)*(CALL $34(($6 + [48]), *($0 + [8]), [704]) + [8]) <= (uint_32)$1), [1200])
	CALL eosio_assert((((uint_32)$1 % (uint_32)*($0 + [16])) == 0), [384])
	CALL eosio_assert(((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$17() / (uint_64)(int_64)1000000)) - $1) > (uint_32)$3), [1248])
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = [0]
	$4 = *($0)
	*($6 + [8]) = $4
	$5 = *($0 + [8])
	*($6 + [16]) = $5
	*(($6 + [36])) = [0]
	*((($6 + [8]) + [32])) = [0]
	$3 = CALL db_find_i64($4, $5, (int_64)4508390629029445632, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	$0 = CALL $35(($6 + [8]), $3)
	CALL eosio_assert(((int_32)*($0 + [12]) == (int_32)($6 + [8])), [288])
	CALL eosio_assert(((int_32)*($0 + [8]) ^ (int_32)[1]), [1296])
	CALL eosio_assert([1], [1328])
	CALL eosio_assert(((int_32)*($0 + [12]) == (int_32)($6 + [8])), [848])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)CALL $fimport$16()), [896])
	*($0 + [8]) = [1]
	$4 = *($0)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($6 + [144]), $0, [4])
	CALL eosio_assert([1], [496])
	CALL memcpy((($6 + [144]) | [4]), ($0 + [4]), [4])
	*($6 + [136]) = *($0 + [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($6 + [144]) | [8]), ($6 + [136]), [1])
	CALL db_update_i64(*(($0 + [16])), (int_64)0, ($6 + [144]), [9])
	$0 = (($6 + [8]) + [16])
	if ( (uint_64)($4 <= *($0)) ){ goto $label$4 }
	*($0) = ((int_64)$4 + (int_64)1)
	$3 = *($6 + [32])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = *($0)
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([24])) + [12]) = ($6 + [8])
	*($0 + [4]) = [0]
	*($0) = $1
	*($0 + [8]) = [1]
	CALL eosio_assert([1], [496])
	CALL memcpy(($6 + [144]), $0, [4])
	CALL eosio_assert([1], [496])
	CALL memcpy((($6 + [144]) | [4]), ($0 + [4]), [4])
	*($6 + [136]) = *($0 + [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($6 + [144]) | [8]), ($6 + [136]), [1])
	$4 = *($0)
	$3 = CALL db_store_i64(*((($6 + [8]) + [8])), (int_64)4508390629029445632, $5, $4, ($6 + [144]), [9])
	*($0 + [16]) = $3
	$1 = ($6 + [24])
	if ( (uint_64)($4 <= *($1)) ){ goto $label$6 }
	*($1) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$6
	*($6 + [136]) = $0
	$4 = *($0)
	*($6 + [144]) = $4
	*($6 + [132]) = $3
	$2 = ($6 + [36])
	$1 = *($2)
	if ( ((uint_32)$1 >= (uint_32)*(($6 + [40]))) ){ goto $label$8 }
	*($1 + [8]) = $4
	*($1 + [16]) = $3
	*($6 + [136]) = [0]
	*($1) = $0
	*($2) = ($1 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $37(($6 + [32]), ($6 + [136]), ($6 + [144]), ($6 + [132]))
	
.LABEL $label$7
	$0 = *($6 + [136])
	*($6 + [136]) = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	CALL $738($0)
	
.LABEL $label$4
	$3 = *($6 + [32])
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = ($6 + [36])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $738($1)
	
.LABEL $label$12
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($6 + [32]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $3
	
.LABEL $label$9
	*($2) = $3
	CALL $738($0)
	
.LABEL $label$2
	$3 = *($6 + [72])
	if ( ($3 == 0) ){ goto $label$13 }
	$2 = ($6 + [76])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$15 }
	
.LOOP $label$16:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$17 }
	CALL $738($1)
	
.LABEL $label$17
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$16 }
	$0 = *(($6 + [72]))
	goto $label$14 
	
.LABEL $label$15
	$0 = $3
	
.LABEL $label$14
	*($2) = $3
	CALL $738($0)
	
.LABEL $label$13
	$3 = *($6 + [112])
	if ( ($3 == 0) ){ goto $label$18 }
	$2 = ($6 + [116])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$20 }
	
.LOOP $label$21:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$22 }
	CALL $738($1)
	
.LABEL $label$22
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$21 }
	$0 = *(($6 + [112]))
	goto $label$19 
	
.LABEL $label$20
	$0 = $3
	
.LABEL $label$19
	*($2) = $3
	CALL $738($0)
	
.LABEL $label$18
	*([0] + [4]) = ($6 + [160])
}

void .FUNC _ZN11walexchange12wal_exchange12commitbucketEym (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [32])
	*([0] + [4]) = $3
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	*($3 + [24]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($3 + [24]), $1, [1])
	*($3 + [8]) = $1
	*($3 + [16]) = [60]
	*($3) = *($0)
	CALL _ZN11walexchange13order_manager15complete_bucketEm($3, $2)
	*([0] + [4]) = ($3 + [32])
}

void .FUNC _ZN11walexchange13order_manager9add_orderENS_12bucket_orderE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [208])
	*([0] + [4]) = $10
	*((($10 + [128]) + [32])) = [0]
	*($10 + [144]) = (int_64)-1
	*($10 + [152]) = (int_64)0
	$6 = *($0)
	*($10 + [128]) = $6
	*($10 + [136]) = $6
	$5 = [0]
	$8 = CALL db_find_i64($6, $6, (int_64)-4417020450001911808, (int_64)-4417020450001911808)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $33(($10 + [128]), $8)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($10 + [128])), [288])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [672])
	$2 = *($5 + [20])
	*((($10 + [88]) + [32])) = [0]
	*($10 + [104]) = (int_64)-1
	*($10 + [112]) = (int_64)0
	$6 = *($0)
	*($10 + [88]) = $6
	*($10 + [96]) = $6
	$3 = CALL $34(($10 + [88]), *($0 + [8]), [704])
	$8 = *($1 + [16])
	$4 = ($8 - ((uint_32)$8 % (uint_32)*($0 + [16])))
	CALL eosio_assert((($2 == 0) | ((uint_32)$4 >= (uint_32)*($3 + [8]))), [1760])
	$9 = *($1 + [8])
	CALL eosio_assert((((int_64)$9 > (int_64)-1) & (uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)), [1808])
	*($10 + [64]) = (int_64)-1
	*($10 + [72]) = [0]
	$6 = *($0)
	*($10 + [48]) = $6
	$7 = *($0 + [8])
	*($10 + [56]) = $7
	*(($10 + [76])) = [0]
	*((($10 + [48]) + [32])) = [0]
	$5 = CALL db_find_i64($6, $7, (int_64)4508390629029445632, (CASTING uint_64)(uint_32 $4))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $35(($10 + [48]), $5)
	CALL eosio_assert(((int_32)*($5 + [12]) == (int_32)($10 + [48])), [288])
	CALL eosio_assert(( ((int_32)$2 ^ (int_32)[1]) ? [1] : *($5 + [8]) ), [1856])
	CALL eosio_assert([1], [1328])
	CALL eosio_assert(((int_32)*($5 + [12]) == (int_32)($10 + [48])), [848])
	CALL eosio_assert(((int_64)*($10 + [48]) == (int_64)CALL $fimport$16()), [896])
	*($5 + [4]) = (*($5 + [4]) + [1])
	$6 = *($5)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy($10, $5, [4])
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 | [4]), ($5 + [4]), [4])
	*($10 + [176]) = *($5 + [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 | [8]), ($10 + [176]), [1])
	CALL db_update_i64(*(($5 + [16])), (int_64)0, $10, [9])
	$5 = (($10 + [48]) + [16])
	if ( (uint_64)($6 <= *($5)) ){ goto $label$4 }
	*($5) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$4
	$8 = *(($1 + [16]))
	$9 = *(($1 + [8]))
	goto $label$2 
	
.LABEL $label$3
	$7 = *($0)
	CALL eosio_assert(((int_64)*($10 + [48]) == (int_64)CALL $fimport$16()), [432])
	*(($5 = CALL $737([24])) + [12]) = ($10 + [48])
	*($5 + [4]) = [1]
	*($5) = $4
	*($5 + [8]) = ($4 <= *(($3 + [8])))
	CALL eosio_assert([1], [496])
	CALL memcpy($10, $5, [4])
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 | [4]), ($5 + [4]), [4])
	*($10 + [176]) = *($5 + [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 | [8]), ($10 + [176]), [1])
	$6 = *($5)
	$2 = CALL db_store_i64(*((($10 + [48]) + [8])), (int_64)4508390629029445632, $7, $6, $10, [9])
	*($5 + [16]) = $2
	$4 = ($10 + [64])
	if ( (uint_64)($6 <= *($4)) ){ goto $label$5 }
	*($4) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$5
	*($10 + [176]) = $5
	$6 = *($5)
	*($10) = $6
	*($10 + [200]) = $2
	$3 = ($10 + [76])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($10 + [80]))) ){ goto $label$7 }
	*($4 + [8]) = $6
	*($4 + [16]) = $2
	*($10 + [176]) = [0]
	*($4) = $5
	*($3) = ($4 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $37(($10 + [72]), ($10 + [176]), $10, ($10 + [200]))
	
.LABEL $label$6
	$5 = *($10 + [176])
	*($10 + [176]) = [0]
	if ( ($5 == 0) ){ goto $label$2 }
	CALL $738($5)
	
.LABEL $label$2
	*($10 + [16]) = (int_64)-1
	*($10 + [24]) = [0]
	$6 = *($0)
	*($10) = $6
	*($10 + [8]) = *(($0 + [8]))
	*(($5 = ($10 + [28]))) = [0]
	*(($4 = ($10 + [32]))) = [0]
	*($10 + [36]) = [0]
	CALL eosio_assert(((int_64)$6 == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([40])) + [24]) = $10
	*($0 + [8]) = $9
	*($0 + [16]) = $8
	*($0) = *($1)
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 + [176]), $0, [8])
	CALL eosio_assert([1], [496])
	$1 = ($0 + [8])
	CALL memcpy((($10 + [176]) | [8]), $1, [8])
	CALL eosio_assert([1], [496])
	$8 = ($0 + [16])
	CALL memcpy((($10 + [176]) + [16]), $8, [4])
	$9 = *($0)
	*($0 + [28]) = CALL db_store_i64(*($10 + [8]), (int_64)4508390640157634048, $6, $9, ($10 + [176]), [20])
	if ( (uint_64)($9 <= *($10 + [16])) ){ goto $label$8 }
	*(($10 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$9 = *($0)
	$7 = *(($10 + [8]))
	*($10 + [200]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 ((int_64)*($1) > (int_64)0)) << (int_64)32) | (int_64)*($8))
	*($0 + [32]) = CALL db_idx64_store($7, (int_64)4508390640157634048, $6, $9, ($10 + [200]))
	*($10 + [200]) = $0
	$6 = *($0)
	*($10 + [176]) = $6
	$1 = *(($0 + [28]))
	*($10 + [172]) = $1
	$5 = *($5)
	if ( ((uint_32)$5 >= (uint_32)*($4)) ){ goto $label$10 }
	*($5 + [8]) = $6
	*($5 + [16]) = $1
	*($10 + [200]) = [0]
	*($5) = $0
	*(($10 + [28])) = ($5 + [24])
	goto $label$9 
	
.LABEL $label$10
	CALL $64(($10 + [24]), ($10 + [200]), ($10 + [176]), ($10 + [172]))
	
.LABEL $label$9
	$0 = *($10 + [200])
	*($10 + [200]) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $738($0)
	
.LABEL $label$11
	$1 = *($10 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$8 = ($10 + [28])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$16 }
	CALL $738($5)
	
.LABEL $label$16
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$15 }
	$0 = *(($10 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$0 = $1
	
.LABEL $label$13
	*($8) = $1
	CALL $738($0)
	
.LABEL $label$12
	$1 = *($10 + [72])
	if ( ($1 == 0) ){ goto $label$17 }
	$8 = ($10 + [76])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$19 }
	
.LOOP $label$20:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$21 }
	CALL $738($5)
	
.LABEL $label$21
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$20 }
	$0 = *(($10 + [72]))
	goto $label$18 
	
.LABEL $label$19
	$0 = $1
	
.LABEL $label$18
	*($8) = $1
	CALL $738($0)
	
.LABEL $label$17
	$1 = *($10 + [112])
	if ( ($1 == 0) ){ goto $label$22 }
	$8 = ($10 + [116])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$24 }
	
.LOOP $label$25:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$26 }
	CALL $738($5)
	
.LABEL $label$26
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$25 }
	$0 = *(($10 + [112]))
	goto $label$23 
	
.LABEL $label$24
	$0 = $1
	
.LABEL $label$23
	*($8) = $1
	CALL $738($0)
	
.LABEL $label$22
	$1 = *($10 + [152])
	if ( ($1 == 0) ){ goto $label$27 }
	$8 = ($10 + [156])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$29 }
	
.LOOP $label$30:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$31 }
	CALL $738($5)
	
.LABEL $label$31
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$30 }
	$0 = *(($10 + [152]))
	goto $label$28 
	
.LABEL $label$29
	$0 = $1
	
.LABEL $label$28
	*($8) = $1
	CALL $738($0)
	
.LABEL $label$27
	*([0] + [4]) = ($10 + [208])
}

void .FUNC $46 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*($10 + [24]) = (int_64)0
	*($10 + [8]) = *(($2 + [8]))
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx128_lowerbound(*($8), *($8 + [8]), (int_64)6301537847124808880, $10, ($10 + [24]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [24])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $65($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)6301537847124808880, $5))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [32])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [32])
}

int_32 .FUNC _ZN11walexchange13order_manager12exists_orderEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	*($8 + [24]) = (int_64)-1
	$7 = [0]
	*($8 + [32]) = [0]
	$4 = *($0)
	*($8 + [8]) = $4
	$5 = *($0 + [8])
	*($8 + [16]) = $5
	*(($8 + [36])) = [0]
	*(($8 + [40])) = [0]
	*($8 + [44]) = [0]
	$0 = CALL db_find_i64($4, $5, (int_64)4508390640157634048, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $67(($8 + [8]), $0) + [24]) == (int_32)($8 + [8])), [288])
	$7 = [1]
	$2 = *($8 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	$6 = ($8 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $738($3)
	
.LABEL $label$5
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($8 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $2
	
.LABEL $label$2
	*($6) = $2
	CALL $738($0)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [48])
	return $7
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	*([0] + [4]) = $9
	CALL $767(($9 + [32]), $1)
	CALL $68(($9 + [48]), $0, ($9 + [32]))
	if ( (*($1) & [1]) ){ goto $label$2 }
	*($1) = [0]
	goto $label$1 
	
.LABEL $label$2
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$1
	CALL $742($1, [0])
	$0 = (($9 + [48]) + [8])
	*(($1 + [8])) = *($0)
	*($1) = *($9 + [48])
	*($0) = [0]
	*($9 + [48]) = (int_64)0
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($9 + [40]))
	
.LABEL $label$3
	CALL $767(($9 + [16]), $1)
	CALL _Z5splitNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEc(($9 + [48]), ($9 + [16]), [35])
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$4 }
	CALL $738(*($9 + [24]))
	
.LABEL $label$4
	$0 = *($9 + [48])
	if ( ((int_32)(*($9 + [52]) - $0) != (int_32)[96]) ){ goto $label$5 }
	CALL _Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($9, $0)
	if ( (*($2) & [1]) ){ goto $label$7 }
	*($2) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*($2 + [8])) = [0]
	*($2 + [4]) = [0]
	
.LABEL $label$6
	CALL $742($2, [0])
	*(($2 + [8])) = *(($9 + [8]))
	*($2) = *($9)
	CALL _Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($9, (*($9 + [48]) + [12]))
	if ( (*($3) & [1]) ){ goto $label$9 }
	*($3) = [0]
	goto $label$8 
	
.LABEL $label$9
	*(*($3 + [8])) = [0]
	*($3 + [4]) = [0]
	
.LABEL $label$8
	CALL $742($3, [0])
	*(($3 + [8])) = *(($9 + [8]))
	*($3) = *($9)
	CALL _Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($9, (*($9 + [48]) + [24]))
	if ( (*($4) & [1]) ){ goto $label$11 }
	*($4) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($4 + [8])) = [0]
	*($4 + [4]) = [0]
	
.LABEL $label$10
	CALL $742($4, [0])
	*(($4 + [8])) = *(($9 + [8]))
	*($4) = *($9)
	CALL _Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($9, (*($9 + [48]) + [36]))
	if ( (*($5) & [1]) ){ goto $label$13 }
	*($5) = [0]
	goto $label$12 
	
.LABEL $label$13
	*(*($5 + [8])) = [0]
	*($5 + [4]) = [0]
	
.LABEL $label$12
	CALL $742($5, [0])
	*(($5 + [8])) = *(($9 + [8]))
	*($5) = *($9)
	CALL _Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($9, (*($9 + [48]) + [60]))
	if ( (*($6) & [1]) ){ goto $label$15 }
	*($6) = [0]
	goto $label$14 
	
.LABEL $label$15
	*(*($6 + [8])) = [0]
	*($6 + [4]) = [0]
	
.LABEL $label$14
	CALL $742($6, [0])
	*(($6 + [8])) = *(($9 + [8]))
	*($6) = *($9)
	CALL _Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($9, (*($9 + [48]) + [72]))
	if ( (*($7) & [1]) ){ goto $label$17 }
	*($7) = [0]
	goto $label$16 
	
.LABEL $label$17
	*(*($7 + [8])) = [0]
	*($7 + [4]) = [0]
	
.LABEL $label$16
	CALL $742($7, [0])
	*(($7 + [8])) = *(($9 + [8]))
	*($7) = *($9)
	CALL _Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($9, (*($9 + [48]) + [84]))
	if ( (*($8) & [1]) ){ goto $label$19 }
	*($8) = [0]
	goto $label$18 
	
.LABEL $label$19
	*(*($8 + [8])) = [0]
	*($8 + [4]) = [0]
	
.LABEL $label$18
	CALL $742($8, [0])
	*(($8 + [8])) = *(($9 + [8]))
	*($8) = *($9)
	$0 = *($9 + [48])
	
.LABEL $label$5
	if ( ($0 == 0) ){ goto $label$20 }
	$1 = *($9 + [52])
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$22 }
	$2 = ([0] - $0)
	$1 = ($1 + [-12])
	
.LOOP $label$23:
	if ( ((*($1) & [1]) == 0) ){ goto $label$24 }
	CALL $738(*(($1 + [8])))
	
.LABEL $label$24
	$1 = ($1 + [-12])
	if ( ((int_32)($1 + $2) != (int_32)[-12]) ){ goto $label$23 }
	$1 = *($9 + [48])
	goto $label$21 
	
.LABEL $label$22
	$1 = $0
	
.LABEL $label$21
	*($9 + [52]) = $0
	CALL $738($1)
	
.LABEL $label$20
	*([0] + [4]) = ($9 + [64])
}

int_32 .FUNC $222 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [28]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2320])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-4418693909069692928)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2256])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2256])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $221(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $509 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$2 = *($0)
	$4 = *($0 + [4])
	*($1) = *(*(*($4) + [4]))
	$5 = *($4 + [4])
	$6 = $7
	CALL $767($6, *($4 + [8]))
	*($1 + [8]) = CALL _ZN11walexchange12wal_exchange18get_chain_proxy_idENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy($5, $6, *(*($4 + [12])))
	$5 = ($1 + [8])
	if ( ((*($6) & [1]) == 0) ){ goto $label$1 }
	CALL $738(*($6 + [8]))
	
.LABEL $label$1
	$7 = $7
	$4 = ($7 + [-16])
	*([0] + [4]) = $4
	CALL eosio_assert([1], [496])
	CALL memcpy($4, $1, [4])
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 + [-12]), $5, [8])
	$3 = *($1)
	*($1 + [20]) = CALL db_store_i64(*($2 + [8]), (int_64)8201493947489942528, *(*($0 + [8])), $3, $4, [12])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$2 }
	*(($2 + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $714 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$4 = *($0)
	$6 = *($1)
	CALL eosio_assert(((uint_32)(*($6 + [8]) - *($6 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($4, *($6 + [4]), [8])
	*($6 + [4]) = (*($6 + [4]) + [8])
	$2 = *($0)
	$3 = *($1)
	$6 = *($3 + [4])
	$1 = [0]
	$5 = (int_64)0
	$4 = ($3 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($6 <= *(($3 + [8]))), [656])
	$6 = *($4)
	$0 = *($6)
	$6 = ($6 + [1])
	*($4) = $6
	$1 = ($1 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($0 & [127]) << $1)) | (int_64)$5)
	$1 = ($1 + [7])
	if ( uint_32($0 >> [7]) ){ goto $label$1 }
	*($2 + [8]) = $5
	$0 = [12]
	$4 = ($3 + [8])
	$1 = ($3 + [4])
	
.LOOP $label$2:
	CALL eosio_assert(((int_32)*($4) != (int_32)$6), [544])
	CALL memcpy(($2 + $0), *($1), [1])
	$6 = (*($1) + [1])
	*($1) = $6
	$0 = ($0 + [1])
	if ( ((int_32)$0 != (int_32)[45]) ){ goto $label$2 }
}

void .FUNC _ZN11walexchange12wal_exchange11addsymproxyEN5eosio11symbol_typeEyNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEy (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [160])
	*([0] + [4]) = $8
	*($8 + [112]) = $4
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	CALL eosio_assert(CALL $fimport$46($2), [9152])
	CALL eosio_assert(CALL $fimport$46($4), [9072])
	$6 = [0]
	*(($8 + [104])) = [0]
	*($8 + [88]) = (int_64)-1
	*($8 + [96]) = (int_64)0
	$4 = *($0)
	*($8 + [72]) = $4
	*($8 + [80]) = $4
	*($8 + [108]) = [0]
	*($8 + [64]) = ($8 + [72])
	*($8 + [24]) = $2
	*($8 + [16]) = (uint_64)$1 >> (uint_64)(int_64)8)
	CALL $46($8, ($8 + [64]), ($8 + [16]))
	$5 = *($8 + [4])
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((int_64)(((int_64)((int_64)*($8 + [16]) ^ (int_64)(uint_64)*($5 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($8 + [24]) ^ (int_64)*(($5 + [16])))) == 0) == 0) ){ goto $label$3 }
	$2 = *($8)
	*($8 + [56]) = $2
	$6 = ((uint_64)$2 > (uint_64)(int_64)4294967295)
	goto $label$2 
	
.LABEL $label$4
	*($8 + [60]) = [0]
	*($8 + [56]) = ($8 + [64])
	goto $label$2 
	
.LABEL $label$3
	$6 = [0]
	*($8 + [60]) = [0]
	*($8 + [56]) = ($8 + [64])
	
.LABEL $label$2
	CALL eosio_assert($6, [9184])
	*(($5 = (($8 + [16]) + [32]))) = [0]
	*($8 + [32]) = (int_64)-1
	*($8 + [40]) = (int_64)0
	$2 = *($0)
	*($8 + [16]) = $2
	*($8 + [24]) = $2
	*($8 + [4]) = $0
	*($8 + [8]) = $3
	*($8) = ($8 + [56])
	*($8 + [12]) = ($8 + [112])
	*($8 + [152]) = $2
	CALL eosio_assert(((int_64)$2 == (int_64)CALL $fimport$16()), [432])
	*($8 + [132]) = $8
	*($8 + [128]) = ($8 + [16])
	*($8 + [136]) = ($8 + [152])
	*(($0 = CALL $737([32])) + [16]) = ($8 + [16])
	CALL $509(($8 + [128]), $0)
	*($8 + [144]) = $0
	$2 = *($0)
	*($8 + [128]) = $2
	$3 = *($0 + [20])
	*($8 + [124]) = $3
	$7 = ($8 + [44])
	$6 = *($7)
	if ( ((uint_32)$6 >= (uint_32)*($5)) ){ goto $label$6 }
	*($6 + [8]) = $2
	*($6 + [16]) = $3
	*($8 + [144]) = [0]
	*($6) = $0
	*($7) = ($6 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $106(($8 + [40]), ($8 + [144]), ($8 + [128]), ($8 + [124]))
	
.LABEL $label$5
	$0 = *($8 + [144])
	*($8 + [144]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $738($0)
	
.LABEL $label$7
	$5 = *($8 + [40])
	if ( ($5 == 0) ){ goto $label$8 }
	$3 = ($8 + [44])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $738($6)
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($8 + [40]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $5
	
.LABEL $label$9
	*($3) = $5
	CALL $738($0)
	
.LABEL $label$8
	$5 = *($8 + [96])
	if ( ($5 == 0) ){ goto $label$13 }
	$3 = ($8 + [100])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$15 }
	
.LOOP $label$16:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$17 }
	CALL $738($6)
	
.LABEL $label$17
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$16 }
	$0 = *(($8 + [96]))
	goto $label$14 
	
.LABEL $label$15
	$0 = $5
	
.LABEL $label$14
	*($3) = $5
	CALL $738($0)
	
.LABEL $label$13
	*([0] + [4]) = ($8 + [160])
}

void .FUNC _ZN11walexchange12wal_exchange8verifywdEyyyyN5eosio15extended_symbolExx9signature (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_64 $6, int_64 $7, int_32 $8)
{
	CALL require_auth(*(($0 + [200])))
	CALL eosio_assert([0], [1376])
}

void .FUNC $289 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $3
	if ( $3 ){ goto $label$3 }
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( *($2 + [12]) ){ goto $label$3 }
	$3 = *($2 + [8])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	if ( ($4 == 0) ){ goto $label$8 }
	if ( *($4 + [12]) ){ goto $label$8 }
	$4 = ($4 + [12])
	goto $label$9 
	
.LABEL $label$10
	$4 = *($3 + [4])
	if ( ($4 == 0) ){ goto $label$6 }
	if ( *($4 + [12]) ){ goto $label$6 }
	$4 = ($4 + [12])
	
.LABEL $label$9
	*(($2 + [12])) = [1]
	$2 = ((int_32)$3 == (int_32)$0)
	*($3 + [12]) = $2
	*($4) = [1]
	$1 = $3
	if ( ($2 == 0) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$8
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$5 }
	$4 = $2
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$2 }
	$4 = *($2 + [4])
	$1 = *($4)
	*($2 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$11
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*($4) = $2
	$3 = *($4 + [8])
	goto $label$1 
	
.LABEL $label$5
	$4 = *($2)
	$1 = *($4 + [4])
	*($2) = $1
	if ( ($1 == 0) ){ goto $label$12 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$12
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*(($4 + [4])) = $2
	$3 = *($4 + [8])
	
.LABEL $label$4
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3 + [4])
	$4 = *($2)
	*($3 + [4]) = $4
	if ( ($4 == 0) ){ goto $label$13 }
	*($4 + [8]) = $3
	
.LABEL $label$13
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*($2) = $3
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	$4 = $2
	
.LABEL $label$1
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3)
	$4 = *($2 + [4])
	*($3) = $4
	if ( ($4 == 0) ){ goto $label$14 }
	*($4 + [8]) = $3
	
.LABEL $label$14
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*(($2 + [4])) = $3
}

void .FUNC _ZN11walexchange12wal_exchange10cleartableENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy (int_32 $0, int_32 $1, int_64 $2)
{
	CALL require_auth(*($0))
}

int_32 .FUNC $562 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [544])
	CALL memcpy(($1 + [17]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [20]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [48]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [52]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [64]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [68]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [88]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $561 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $560 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [17]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [20]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [52]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [68]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN11walexchange12wal_exchange12setmaxubwaitEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($0 + [152])) = $1
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$3 = *($0)
	*($5 + [8]) = $3
	*($5 + [16]) = $3
	CALL $552(($5 + [8]), ($0 + [128]), $3)
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $738($1)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange9setdtwaitEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($0 + [148])) = $1
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$3 = *($0)
	*($5 + [8]) = $3
	*($5 + [16]) = $3
	CALL $552(($5 + [8]), ($0 + [128]), $3)
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $738($1)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange10setmaxkeysEh (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($0 + [145])) = $1
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$3 = *($0)
	*($5 + [8]) = $3
	*($5 + [16]) = $3
	CALL $552(($5 + [8]), ($0 + [128]), $3)
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $738($1)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange10setmaxbindEh (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($0 + [144])) = $1
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$3 = *($0)
	*($5 + [8]) = $3
	*($5 + [16]) = $3
	CALL $552(($5 + [8]), ($0 + [128]), $3)
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $738($1)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange10setncratioEd (int_32 $0, float_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL eosio_assert((((float_64)$1 >= (float_64)(float_64)0) & ((float_64)$1 < (float_64)(float_64)1)), [10304])
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($0 + [168])) = $1
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$4 = *($0)
	*($6 + [8]) = $4
	*($6 + [16]) = $4
	CALL $552(($6 + [8]), ($0 + [128]), $4)
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$5 = ($6 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $738($3)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($6 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($5) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange11setfeeratioEd (int_32 $0, float_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL eosio_assert((((float_64)$1 >= (float_64)(float_64)0) & ((float_64)$1 < (float_64)(float_64)1)), [10272])
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($0 + [160])) = $1
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$4 = *($0)
	*($6 + [8]) = $4
	*($6 + [16]) = $4
	CALL $552(($6 + [8]), ($0 + [128]), $4)
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$5 = ($6 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $738($3)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($6 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($5) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange10stakewalexEyyx (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	CALL require_auth($1)
	CALL eosio_assert([0], [6992])
}

void .FUNC _ZN11walexchange12wal_exchange12unstakewalexEyyx (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	CALL require_auth($1)
	CALL eosio_assert([0], [6992])
}

int_32 .FUNC $648 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$6 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($7 + [8]) = (int_64)0
	*($7 + [16]) = (int_64)0
	*($7 + [24]) = [0]
	*($7 + [36]) = $1
	*($7 + [32]) = $1
	*($7 + [40]) = ($1 + $3)
	*($7 + [48]) = ($7 + [32])
	*($7 + [56]) = ($7 + [8])
	CALL $664(($7 + [56]), ($7 + [48]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *(($7 + [24]))
	$8 = *(($7 + [20]))
	$0 = *(($7 + [16]))
	$5 = *($7 + [12])
	$4 = *($7 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($1) + $6))
	
.LABEL $label$5
	CALL void $1((int_32 $4), (int_32 $5), (int_32 $0), (int_32 $8), (int_32 $3), (int_32 $6))
	*([0] + [4]) = ($7 + [64])
	return [1]
}

int_32 .FUNC $649 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [80])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($9 + [32]) = (int_64)0
	*($9 + [16]) = (int_64)0
	*($9 + [40]) = [0]
	*($9 + [44]) = [0]
	*($9 + [52]) = $1
	*($9 + [48]) = $1
	*($9 + [56]) = ($1 + $3)
	*($9 + [64]) = ($9 + [48])
	*($9 + [72]) = ($9 + [8])
	CALL $663(($9 + [72]), ($9 + [64]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *(($9 + [44]))
	$10 = *(($9 + [40]))
	$7 = *(($9 + [32]))
	$5 = *(($9 + [16]))
	$6 = *($9 + [24])
	$4 = *($9 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$8 = *((*($1) + $8))
	
.LABEL $label$5
	CALL void $1((int_32 $4), (int_64 $5), (int_64 $6), (int_64 $7), (int_64 $10), (int_32 ($3 & [65535])), (int_32 $8))
	*([0] + [4]) = ($9 + [80])
	return [1]
}

void .FUNC _ZN11walexchange12wal_exchange11rmwhitecoinEyN5eosio11symbol_typeE (int_32 $0, int_64 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [112])
	*([0] + [4]) = $7
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	CALL eosio_assert(CALL $fimport$46($1), [6720])
	$6 = [0]
	$3 = (uint_64)$2 >> (uint_64)(int_64)8
	$2 = $3)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	CALL eosio_assert($4, [6800])
	*((($7 + [72]) + [32])) = [0]
	*($7 + [88]) = (int_64)-1
	*($7 + [96]) = (int_64)0
	$2 = *($0)
	*($7 + [72]) = $2
	*($7 + [80]) = $2
	*($7 + [108]) = [0]
	*($7 + [64]) = ($7 + [72])
	*($7 + [56]) = $1
	*($7 + [48]) = $3
	CALL $46(($7 + [8]), ($7 + [64]), ($7 + [48]))
	$6 = [0]
	$4 = *($7 + [12])
	if ( ($4 == 0) ){ goto $label$7 }
	$6 = ( $4 ? [0] : (int_64)(((int_64)((int_64)*($7 + [48]) ^ (int_64)(uint_64)*($4 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($7 + [56]) ^ (int_64)*(($4 + [16])))) == 0) )
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [6816])
	*((($7 + [8]) + [32])) = [0]
	*($7 + [32]) = (int_64)0
	*($7 + [24]) = (int_64)-1
	$2 = *($0)
	*($7 + [8]) = $2
	*($7 + [16]) = $2
	CALL $392(($7 + [8]), CALL $391(($7 + [8]), *($6), [6832]))
	$0 = *($7 + [32])
	if ( ($0 == 0) ){ goto $label$8 }
	$5 = ($7 + [36])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $738($4)
	
.LABEL $label$12
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$11 }
	$6 = *(($7 + [32]))
	goto $label$9 
	
.LABEL $label$10
	$6 = $0
	
.LABEL $label$9
	*($5) = $0
	CALL $738($6)
	
.LABEL $label$8
	$0 = *($7 + [96])
	if ( ($0 == 0) ){ goto $label$13 }
	$5 = ($7 + [100])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$17 }
	CALL $738($4)
	
.LABEL $label$17
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$16 }
	$6 = *(($7 + [96]))
	goto $label$14 
	
.LABEL $label$15
	$6 = $0
	
.LABEL $label$14
	*($5) = $0
	CALL $738($6)
	
.LABEL $label$13
	*([0] + [4]) = ($7 + [112])
}

int_32 .FUNC $643 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$11 = (*([0] + [4]) - [160])
	$13 = $11
	*([0] + [4]) = $11
	$2 = *($1 + [4])
	$12 = *($1)
	$1 = [0]
	$9 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$9 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$9 = ($11 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$2
	CALL read_action_data($9, $3)
	
.LABEL $label$1
	*(($13 + [80])) = (int_64)0
	*(($13 + [72])) = (int_64)1398362884
	*($13 + [40]) = (int_64)0
	*($13 + [32]) = (int_64)0
	*($13 + [48]) = (int_64)0
	*($13 + [56]) = (int_64)0
	*($13 + [64]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$10 = (int_64)5462355
	
.LOOP $label$5:
	$11 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$11 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($11, [2832])
	*($13 + [140]) = $9
	*($13 + [136]) = $9
	*($13 + [144]) = ($9 + $3)
	*($13 + [88]) = ($13 + [136])
	*($13 + [112]) = ($13 + [32])
	CALL $670(($13 + [112]), ($13 + [88]))
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($9)
	
.LABEL $label$8
	$10 = *((($13 + [32]) + [16]))
	*(($13 + [108])) = *(($13 + [84]))
	*(($1 = (($13 + [88]) + [16]))) = *(($13 + [80]))
	$5 = *((($13 + [32]) + [8]))
	*(($13 + [100])) = *(($13 + [76]))
	*(($11 = (($13 + [88]) + [8]))) = *(($13 + [72]))
	$4 = *($13 + [32])
	*($13 + [88]) = *($13 + [64])
	*($13 + [92]) = *(($13 + [68]))
	$6 = *(($13 + [56]))
	*((($13 + [112]) + [16])) = *($1)
	*((($13 + [112]) + [8])) = *($11)
	*($13 + [112]) = *($13 + [88])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$12 = *((*($1) + $12))
	
.LABEL $label$9
	$7 = *((($13 + [112]) + [16]))
	*((($13 + [136]) + [16])) = $7
	$8 = *((($13 + [112]) + [8]))
	*((($13 + [136]) + [8])) = $8
	*((($13 + [8]) + [16])) = $7
	*((($13 + [8]) + [8])) = $8
	$7 = *($13 + [112])
	*($13 + [136]) = $7
	*($13 + [8]) = $7
	CALL void $1((int_32 $4), (int_64 $5), (int_64 $10), (int_64 $6), (int_64 ($13 + [8])), (int_32 $12))
	*([0] + [4]) = ($13 + [160])
	return [1]
}

void .FUNC $392 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$2 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$6 = *($1)
	$3 = ([0] - $2)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(*($8)) == (int_32)$6) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$2), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC _ZN11walexchange12wal_exchange14check_transferEN5eosio14extended_assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [112])
	*([0] + [4]) = $5
	*((($5 + [72]) + [32])) = [0]
	*($5 + [88]) = (int_64)-1
	*($5 + [96]) = (int_64)0
	$4 = *($0)
	*($5 + [72]) = $4
	*($5 + [80]) = $4
	*($5 + [108]) = [0]
	*($5 + [64]) = ($5 + [72])
	*($5 + [56]) = *($1 + [16])
	*($5 + [48]) = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8)
	CALL $46(($5 + [8]), ($5 + [64]), ($5 + [48]))
	$3 = [0]
	$2 = *($5 + [12])
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [0] : (int_64)(((int_64)((int_64)*($5 + [48]) ^ (int_64)(uint_64)*($2 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($5 + [56]) ^ (int_64)*(($2 + [16])))) == 0) )
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [6816])
	*((($5 + [8]) + [32])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [24]) = (int_64)-1
	$4 = *($0)
	*($5 + [8]) = $4
	*($5 + [16]) = $4
	$3 = CALL $391(($5 + [8]), *($3), [6832])
	CALL eosio_assert(((int_64)*($1) >= (int_64)*($3 + [8])), [6864])
	$0 = *($5 + [32])
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = ($5 + [36])
	$1 = *($2)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = ($1 + [-24])
	$3 = *($1)
	*($1) = [0]
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $738($3)
	
.LABEL $label$6
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$5 }
	$1 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$1 = $0
	
.LABEL $label$3
	*($2) = $0
	CALL $738($1)
	
.LABEL $label$2
	$0 = *($5 + [96])
	if ( ($0 == 0) ){ goto $label$7 }
	$2 = ($5 + [100])
	$1 = *($2)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = ($1 + [-24])
	$3 = *($1)
	*($1) = [0]
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $738($3)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$10 }
	$1 = *(($5 + [96]))
	goto $label$8 
	
.LABEL $label$9
	$1 = $0
	
.LABEL $label$8
	*($2) = $0
	CALL $738($1)
	
.LABEL $label$7
	*([0] + [4]) = ($5 + [112])
}

int_32 .FUNC _Z9my_memcmpPvS_m (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	if ( ($2 == 0) ){ goto $label$2 }
	$3 = [0]
	
.LOOP $label$3:
	if ( ((int_32)*(($0 + $3)) != (int_32)*(($1 + $3))) ){ goto $label$1 }
	$3 = ($3 + [1])
	if ( ($3 <= $2) ){ goto $label$3 }
	return [1]
	
.LABEL $label$2
	return [1]
	
.LABEL $label$1
	return [0]
}

void .FUNC _ZN11walexchange12wal_exchange19assert_recover_key2EPK11checksum256PK9signaturePKN5eosio10public_keyE (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [48])
	*([0] + [4]) = $4
	*($4 + [8]) = *($3)
	CALL memcpy((($4 + [8]) | [1]), ($3 + [4]), [33])
	CALL assert_recover_key($1, $2, [66], ($4 + [8]), [34])
	*([0] + [4]) = ($4 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange11verifystakeEyyyyyx (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6)
{
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [176])
	*([0] + [4]) = $12
	if ( CALL has_auth(*(($0 + [240]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [200])))
	
.LABEL $label$1
	CALL eosio_assert(CALL $fimport$46($2), [6912])
	CALL eosio_assert((((int_64)$6 > (int_64)0) & (uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)), [6944])
	*($12 + [88]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($12 + [88]), $5, [1])
	$7 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($12 + [88]), $1, [0])
	*((($12 + [48]) + [32])) = [0]
	*($12 + [64]) = (int_64)-1
	*($12 + [72]) = (int_64)0
	$1 = *($0)
	*($12 + [48]) = $1
	*($12 + [56]) = $1
	*($12 + [84]) = [0]
	*($12 + [40]) = ($12 + [48])
	*($12 + [104]) = *(($0 + [136]))
	*($12 + [96]) = (uint_64)*($0 + [128]) >> (uint_64)(int_64)8)
	CALL $46($12, ($12 + [40]), ($12 + [96]))
	$11 = [0]
	$9 = *($12 + [4])
	if ( ($9 == 0) ){ goto $label$2 }
	$11 = ( $9 ? [0] : (int_64)(((int_64)((int_64)*($12 + [96]) ^ (int_64)(uint_64)*($9 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($12 + [104]) ^ (int_64)*(($9 + [16])))) == 0) )
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [1456])
	$9 = *($11)
	*(($12 + [32])) = [0]
	*($12 + [8]) = $5
	*($12 + [16]) = (int_64)-1
	*($12 + [24]) = (int_64)0
	$1 = *($0)
	*($12) = $1
	*($12 + [36]) = [0]
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$16()), [432])
	*(($11 = CALL $737([72])) + [56]) = $12
	*($11 + [8]) = $4
	*($11) = $3
	*($11 + [24]) = $7
	*($11 + [32]) = $2
	*($11 + [40]) = $9
	*($11 + [48]) = $6
	*($12 + [160]) = (($12 + [96]) + [45])
	*($12 + [156]) = ($12 + [96])
	*($12 + [152]) = ($12 + [96])
	CALL $211(($12 + [152]), $11)
	$6 = *($11)
	*($11 + [60]) = CALL db_store_i64(*($12 + [8]), (int_64)-3660983113619603456, $1, $6, ($12 + [96]), [45])
	if ( (uint_64)($6 <= *($12 + [16])) ){ goto $label$3 }
	*(($12 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$6 = *($11)
	$2 = *(($12 + [8]))
	*($12 + [168]) = *(($11 + [8]))
	*($11 + [64]) = CALL db_idx64_store($2, (int_64)-3660983113619603456, $1, $6, ($12 + [168]))
	*($12 + [152]) = $11
	$6 = *($11)
	*($12 + [96]) = $6
	$8 = *(($11 + [60]))
	*($12 + [168]) = $8
	$10 = ($12 + [28])
	$9 = *($10)
	if ( ((uint_32)$9 >= (uint_32)*(($12 + [32]))) ){ goto $label$5 }
	*($9 + [8]) = $6
	*($9 + [16]) = $8
	*($12 + [152]) = [0]
	*($9) = $11
	*($10) = ($9 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $228(($12 + [24]), ($12 + [152]), ($12 + [96]), ($12 + [168]))
	
.LABEL $label$4
	$11 = *($12 + [152])
	*($12 + [152]) = [0]
	if ( ($11 == 0) ){ goto $label$6 }
	CALL $738($11)
	
.LABEL $label$6
	CALL _ZN11walexchange12wal_exchange6add_idEyyt($0, $5, $3, [4])
	$9 = *($12 + [24])
	if ( ($9 == 0) ){ goto $label$7 }
	$8 = ($12 + [28])
	$11 = *($8)
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$9 }
	
.LOOP $label$10:
	$11 = ($11 + [-24])
	$0 = *($11)
	*($11) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $738($0)
	
.LABEL $label$11
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$10 }
	$11 = *(($12 + [24]))
	goto $label$8 
	
.LABEL $label$9
	$11 = $9
	
.LABEL $label$8
	*($8) = $9
	CALL $738($11)
	
.LABEL $label$7
	$9 = *($12 + [72])
	if ( ($9 == 0) ){ goto $label$12 }
	$8 = ($12 + [76])
	$11 = *($8)
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$14 }
	
.LOOP $label$15:
	$11 = ($11 + [-24])
	$0 = *($11)
	*($11) = [0]
	if ( ($0 == 0) ){ goto $label$16 }
	CALL $738($0)
	
.LABEL $label$16
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$15 }
	$11 = *(($12 + [72]))
	goto $label$13 
	
.LABEL $label$14
	$11 = $9
	
.LABEL $label$13
	*($8) = $9
	CALL $738($11)
	
.LABEL $label$12
	*([0] + [4]) = ($12 + [176])
}

void .FUNC _ZN11walexchange12wal_exchange10unstakewalEyyyyx (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5)
{
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [64])
	*([0] + [4]) = $11
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	CALL eosio_assert(CALL $fimport$46($2), [6912])
	$9 = (uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)
	CALL eosio_assert((((int_64)$5 > (int_64)0) & $9), [6944])
	*($11 + [56]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($11 + [56]), $4, [1])
	$6 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($11 + [56]), $1, [0])
	*($11 + [32]) = $5
	$1 = *($0 + [128])
	*($11 + [40]) = $1
	$8 = *(($0 + [136]))
	CALL eosio_assert($9, [2768])
	$7 = ($0 + [256])
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$10 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$10 = [0]
	
.LABEL $label$2
	CALL eosio_assert($10, [2832])
	*((($11 + [8]) + [8])) = *((($11 + [32]) + [8]))
	*($11 + [48]) = $8
	*(($11 + [24])) = $8
	*($11 + [8]) = *($11 + [32])
	CALL _ZN11walexchange13asset_manager14adjust_balanceEyyN5eosio14extended_assetEy($7, $6, $4, ($11 + [8]), (int_64)0)
	$1 = (int_64)
	$9 = ($0 + [264])
	CALL _ZN11walexchange13stake_manager12adjust_stakeEyyyxy($9, $6, $2, $4, $1((int_64)0 - $5)), (int_64)0)
	CALL _ZN11walexchange13stake_manager12adjust_stakeEyyyxy($9, $6, $2, *($0), $1, (int_64)0)
	CALL _ZN11walexchange13stake_manager11adjust_statEyx($9, $2, $1)
	CALL _ZN11walexchange12wal_exchange6add_idEyyt($0, $4, $3, [99])
	*([0] + [4]) = ($11 + [64])
}

int_32 .FUNC $653 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [32])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$7 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	$7 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$2
	CALL read_action_data($7, $1)
	
.LABEL $label$1
	*($9 + [24]) = (int_64)0
	*($9 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [544])
	CALL memcpy(($9 + [8]), $7, [8])
	$6 = ($1 & [-8])
	CALL eosio_assert(((int_32)$6 != (int_32)[8]), [544])
	CALL memcpy((($9 + [8]) + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[16]), [544])
	$6 = (($9 + [8]) + [16])
	CALL memcpy($6, ($7 + [16]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($7)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($6)
	$4 = *($9 + [16])
	$3 = *($9 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$8 = *((*($1) + $8))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $5), (int_64 $8))
	*([0] + [4]) = ($9 + [32])
	return [1]
}

int_32 .FUNC $652 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [32])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$6 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	*($9) = (int_64)0
	*($9 + [16]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [544])
	CALL memcpy($9, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [544])
	$5 = ($9 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[16]), [544])
	CALL memcpy(($9 + [31]), ($6 + [16]), [1])
	$7 = ((int_32)*($9 + [31]) != (int_32)[0])
	*($9 + [16]) = $7
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($6)
	$7 = *(($9 + [16]))
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($9)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$8 = *((*($1) + $8))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 $4), (int_64 ((int_32)($7 & [255]) != (int_32)[0])), (int_32 $8))
	*([0] + [4]) = ($9 + [32])
	return [1]
}

void .FUNC _ZN11walexchange12wal_exchange12addblacklistEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	CALL eosio_assert(CALL $fimport$46($1), [6464])
	CALL eosio_assert(((int_64)*($0) != (int_64)$1), [6496])
	*(($4 = ($7 + [40]))) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($0)
	*($7 + [8]) = $5
	*($7 + [16]) = $5
	CALL eosio_assert(((int_64)$5 == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([24])) + [8]) = ($7 + [8])
	*($0) = $1
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 + [64]), $0, [8])
	$1 = *($0)
	$2 = CALL db_store_i64(*($7 + [16]), (int_64)4344997574076792832, $5, $1, ($7 + [64]), [8])
	*($0 + [12]) = $2
	if ( (uint_64)($1 <= *($7 + [24])) ){ goto $label$2 }
	*(($7 + [24])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($7 + [56]) = $0
	$1 = *($0)
	*($7 + [64]) = $1
	*($7 + [52]) = $2
	$6 = ($7 + [36])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*($4)) ){ goto $label$4 }
	*($3 + [8]) = $1
	*($3 + [16]) = $2
	*($7 + [56]) = [0]
	*($3) = $0
	*($6) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $366(($7 + [32]), ($7 + [56]), ($7 + [64]), ($7 + [52]))
	
.LABEL $label$3
	$0 = *($7 + [56])
	*($7 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	CALL $738($0)
	
.LABEL $label$5
	$2 = *($7 + [32])
	if ( ($2 == 0) ){ goto $label$6 }
	$4 = ($7 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	CALL $738($3)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$9 }
	$0 = *(($7 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$0 = $2
	
.LABEL $label$7
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [80])
}

void .FUNC _ZN11walexchange12wal_exchange12regairdroperEy (int_32 $0, int_64 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	CALL require_auth($1)
	CALL eosio_assert(((int_64)*($0) != (int_64)$1), [6384])
	CALL eosio_assert(CALL $fimport$46($1), [6432])
	*($2 + [8]) = *($0)
	CALL _ZN11walexchange24contract_account_manager25get_or_create_eos_accountEyh(($2 + [8]), $1, [2])
	*([0] + [4]) = ($2 + [16])
}

void .FUNC _ZN11walexchange12wal_exchange11rmblacklistEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$4 = *($0)
	*($6 + [8]) = $4
	*($6 + [16]) = $4
	CALL $369(($6 + [8]), CALL $368(($6 + [8]), $1, [6528]))
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$5 = ($6 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $738($3)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($6 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($5) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $366 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $361 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-3020370205707976704, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [60]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$8 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-3020370205707976704, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$2 = CALL $52($4, $8)
	CALL eosio_assert(((int_32)*($2 + [60]) == (int_32)$4), [288])
	
.LABEL $label$4
	*($2 + [68]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $360 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_upperbound(*($8), *($8 + [8]), (int_64)-3020370205707976704, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [60]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$8 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-3020370205707976704, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$2 = CALL $52($4, $8)
	CALL eosio_assert(((int_32)*($2 + [60]) == (int_32)$4), [288])
	
.LABEL $label$4
	*($2 + [68]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $363 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [60]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [64]))
	$7 = *($1 + [68])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020370205707976704, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	$7 = *(($1 + [72]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020370205707976703, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $362 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$7 = [0]
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [784])
	$8 = *($0 + [4])
	$6 = *($8 + [68])
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$1 }
	$6 = *(*($0))
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-3020370205707976704, ($9 + [8]), *($8))
	*(*(($0 + [4])) + [68]) = $6
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($6, ($9 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$4:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$3 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [60]) == (int_32)$2), [288])
	goto $label$5 
	
.LABEL $label$6
	$7 = CALL $52($2, CALL $fimport$19(*($2), *($2 + [8]), (int_64)-3020370205707976704, $3))
	CALL eosio_assert(((int_32)*($7 + [60]) == (int_32)$2), [288])
	
.LABEL $label$5
	*($7 + [68]) = $1
	
.LABEL $label$2
	*(($0 + [4])) = $7
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $246 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$7 = *(($1 + [32]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-4418693909069692928, $9, *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx128_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _ZN11walexchange12wal_exchange10settlementEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	$21 = (*([0] + [4]) - [1072])
	*([0] + [4]) = $21
	*($21 + [1048]) = $3
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	*($21 + [1040]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($21 + [1040]), $1, [1])
	*(($21 + [1032])) = [0]
	*($21 + [1008]) = $1
	*($21 + [1016]) = (int_64)-1
	*($21 + [1024]) = (int_64)0
	$3 = *($0)
	*($21 + [1000]) = $3
	$12 = CALL db_find_i64($3, $1, (int_64)-7122859525593366528, (int_64)-7122859525593366528)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $197(($21 + [1000]), $12) + [16]) == (int_32)($21 + [1000])), [288])
	goto $label$2 
	
.LABEL $label$3
	*($21 + [952]) = (int_64)0
	*($21 + [944]) = (int_64)0
	CALL $198(($21 + [1000]), ($21 + [944]), *($0))
	
.LABEL $label$2
	$12 = *(($21 + [1028]))
	if ( ((int_32)$12 == (int_32)*(($21 + [1024]))) ){ goto $label$5 }
	$12 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [16]) == (int_32)($21 + [1000])), [288])
	goto $label$4 
	
.LABEL $label$5
	$12 = [0]
	$20 = CALL db_find_i64(*($21 + [1000]), *(($21 + [1008])), (int_64)-7122859525593366528, (int_64)-7122859525593366528)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$4 }
	$12 = CALL $197(($21 + [1000]), $20)
	CALL eosio_assert(((int_32)*($12 + [16]) == (int_32)($21 + [1000])), [288])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [672])
	$3 = *(($12 + [8]))
	*(($20 = (($21 + [984]) + [8]))) = $3
	*($21 + [984]) = *($12)
	$13 = *($21 + [1048])
	CALL eosio_assert(((uint_64)($3 <= $13) & (uint_64)($13 <= ((int_64)$3 + (int_64)100))), [5296])
	*($20) = *($21 + [1048])
	CALL $198(($21 + [1000]), ($21 + [984]), *($0))
	*(($20 = ($21 + [976]))) = [0]
	*($21 + [952]) = $1
	*($21 + [960]) = (int_64)-1
	*($21 + [968]) = (int_64)0
	$3 = *($0)
	*($21 + [944]) = $3
	*($21 + [980]) = [0]
	*($21 + [728]) = ($21 + [1048])
	*($21 + [848]) = $3
	CALL eosio_assert(((int_64)$3 == (int_64)CALL $fimport$16()), [432])
	*($21 + [908]) = ($21 + [728])
	*($21 + [904]) = ($21 + [944])
	*($21 + [912]) = ($21 + [848])
	*(($5 = CALL $737([48])) + [12 align=4]) = (int_64)0
	*($5 + [20 align=4]) = (int_64)0
	*($5 + [28 align=4]) = (int_64)0
	*($5 + [36]) = ($21 + [944])
	CALL $248(($21 + [904]), $5)
	*($21 + [808]) = $5
	$3 = *($5)
	*($21 + [904]) = $3
	$11 = *($5 + [40])
	*($21 + [768]) = $11
	$19 = ($21 + [972])
	$12 = *($19)
	if ( ((uint_32)$12 >= (uint_32)*($20)) ){ goto $label$7 }
	*($12 + [8]) = $3
	*($12 + [16]) = $11
	*($21 + [808]) = [0]
	*($12) = $5
	*($19) = ($12 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $249(($21 + [968]), ($21 + [808]), ($21 + [904]), ($21 + [768]))
	
.LABEL $label$6
	$12 = *($21 + [808])
	$20 = [0]
	*($21 + [808]) = [0]
	if ( ($12 == 0) ){ goto $label$8 }
	$11 = *($12 + [24])
	if ( ($11 == 0) ){ goto $label$9 }
	*(($12 + [28])) = $11
	CALL $738($11)
	
.LABEL $label$9
	$11 = *($12 + [12])
	if ( ($11 == 0) ){ goto $label$10 }
	*(($12 + [16])) = $11
	CALL $738($11)
	
.LABEL $label$10
	CALL $738($12)
	
.LABEL $label$8
	*((($21 + [904]) + [32])) = [0]
	*($21 + [912]) = $1
	*($21 + [920]) = (int_64)-1
	*($21 + [928]) = (int_64)0
	*($21 + [904]) = *($0)
	*($21 + [940]) = [0]
	*($21 + [896]) = ($21 + [904])
	*($21 + [856]) = (int_64)0
	*($21 + [848]) = $2
	CALL printui128(($21 + [848]))
	*($21 + [856]) = (int_64)0
	*($21 + [848]) = $2
	CALL $236(($21 + [808]), ($21 + [896]), ($21 + [848]))
	$12 = *($21 + [812])
	if ( ($12 == 0) ){ goto $label$11 }
	$20 = ( $12 ? [0] : (int_64)(((int_64)((int_64)*($21 + [848]) ^ (int_64)*($12 + [16])) | (int_64)((int_64)*($21 + [856]) ^ (int_64)*($12 + [8]))) == 0) )
	
.LABEL $label$11
	CALL eosio_assert(((int_32)$20 != (int_32)[0]), [5264])
	*((($21 + [848]) + [32])) = [0]
	*($21 + [856]) = $1
	*($21 + [864]) = (int_64)-1
	*($21 + [872]) = (int_64)0
	$3 = *($0)
	*($21 + [848]) = $3
	*((($21 + [808]) + [32])) = [0]
	*($21 + [816]) = $1
	*($21 + [808]) = $3
	*($21 + [824]) = (int_64)-1
	*($21 + [832]) = (int_64)0
	*((($21 + [768]) + [32])) = [0]
	*($21 + [776]) = $1
	*($21 + [768]) = $3
	*($21 + [784]) = (int_64)-1
	*($21 + [792]) = (int_64)0
	*((($21 + [728]) + [32])) = [0]
	*($21 + [736]) = $1
	*($21 + [728]) = $3
	*($21 + [744]) = (int_64)-1
	*($21 + [752]) = (int_64)0
	*($21 + [764]) = [0]
	*((($21 + [688]) + [32])) = [0]
	*($21 + [696]) = $1
	*($21 + [688]) = $3
	*($21 + [704]) = (int_64)-1
	*($21 + [712]) = (int_64)0
	*($21 + [724]) = [0]
	*((($21 + [648]) + [32])) = [0]
	*($21 + [656]) = $1
	*($21 + [648]) = $3
	*($21 + [664]) = (int_64)-1
	*($21 + [672]) = (int_64)0
	*($21 + [684]) = [0]
	*((($21 + [608]) + [32])) = [0]
	*($21 + [616]) = $1
	*($21 + [608]) = $3
	*($21 + [624]) = (int_64)-1
	*($21 + [632]) = (int_64)0
	*((($21 + [568]) + [32])) = [0]
	*($21 + [576]) = $1
	*($21 + [584]) = (int_64)-1
	*($21 + [592]) = (int_64)0
	$3 = *($0)
	*($21 + [568]) = $3
	*((($21 + [528]) + [32])) = [0]
	*($21 + [536]) = $3
	*($21 + [528]) = $3
	*($21 + [544]) = (int_64)-1
	*($21 + [552]) = (int_64)0
	$12 = [0]
	$20 = CALL db_find_i64($3, $3, (int_64)-4417020450001911808, (int_64)-4417020450001911808)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$12 }
	$12 = CALL $33(($21 + [528]), $20)
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)($21 + [528])), [288])
	
.LABEL $label$12
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [672])
	$20 = *($12 + [2])
	$12 = CALL db_lowerbound_i64(*($21 + [904]), *((($21 + [904]) + [8])), (int_64)-4418693909069692928, (int_64)0)
	if ( ((int_32)$12 <= (int_32)[-1]) ){ goto $label$15 }
	$12 = CALL $221(($21 + [904]), $12)
	*($21 + [524]) = $12
	$6 = ((int_32)$5 != (int_32)[0])
	*($21 + [520]) = ($21 + [904])
	$7 = (($21 + [264]) + [24])
	$17 = (($21 + [808]) + [28])
	$18 = (($21 + [808]) + [8])
	$15 = ($21 + [300])
	$16 = ($21 + [296])
	
.LOOP $label$16:
	if ( *($12 + [8]) ){ goto $label$17 }
	if ( ((int_64)*($12 + [16]) == (int_64)$2) ){ goto $label$14 }
	
.LABEL $label$17
	if ( (($20 & [65535]) == 0) ){ goto $label$14 }
	$11 = (*($12 + [8]) + [-1])
	if ( ((uint_32)$11 > (uint_32)[6]) ){ goto $label$18 }
	goto $label$28 
	
.LABEL $label$28
	$8 = CALL $250(($21 + [848]), *($12 + [16]), [592])
	CALL memcpy(($21 + [456]), $8, [64])
	$4 = CALL memcpy($21, ($21 + [456]), [64])
	CALL _ZN11walexchange12wal_exchange12settle_tradeEyNS_8to_tradeE($0, $1, $4)
	$3 = *(*($4 + [524]) + [16])
	$9 = *((($4 + [808]) + [24]))
	$19 = *($17)
	if ( ((int_32)$19 == (int_32)$9) ){ goto $label$29 }
	$12 = ($19 + [-24])
	$10 = ([0] - $9)
	
.LOOP $label$30:
	if ( ((int_64)*(*($12)) == (int_64)$3) ){ goto $label$29 }
	$19 = $12
	$11 = ($12 + [-24])
	$12 = $11
	if ( ((int_32)($11 + $10) != (int_32)[-24]) ){ goto $label$30 }
	
.LABEL $label$29
	if ( ((int_32)$19 == (int_32)$9) ){ goto $label$21 }
	$12 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [36]) == (int_32)($4 + [808])), [288])
	if ( $12 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$27
	$12 = CALL $254(($21 + [768]), *($12 + [16]), [592])
	CALL memcpy(($21 + [416]), $12, [40])
	CALL memcpy(($21 + [64]), ($21 + [416]), [40])
	CALL _ZN11walexchange12wal_exchange14settle_airdropEyNS_10to_airdropE($0, $3, ($21 + [64]))
	CALL $238(($21 + [768]), $12)
	goto $label$18 
	
.LABEL $label$26
	$12 = CALL $256(($21 + [728]), *($12 + [16]), [592])
	CALL memcpy(($21 + [360]), $12, [56])
	CALL memcpy(($21 + [104]), ($21 + [360]), [56])
	CALL _ZN11walexchange12wal_exchange15settle_withdrawEyNS_11to_withdrawE($0, $1, ($21 + [104]))
	CALL $239(($21 + [728]), $12)
	goto $label$18 
	
.LABEL $label$25
	$12 = CALL $258(($21 + [648]), *($12 + [16]), [592])
	CALL memcpy(($21 + [304]), $12, [56])
	CALL memcpy(($21 + [160]), ($21 + [304]), [56])
	CALL _ZN11walexchange12wal_exchange12settle_stakeEyNS_8to_stakeE($0, $3, ($21 + [160]))
	CALL $242(($21 + [648]), $12)
	goto $label$18 
	
.LABEL $label$24
	$12 = CALL $260(($21 + [608]), *($12 + [16]), [592])
	*(($10 = (($21 + [264]) + [16]))) = *(($12 + [16]))
	*(($4 = (($21 + [264]) + [8]))) = *(($12 + [8]))
	*($21 + [264]) = *($12)
	CALL $767($7, ($12 + [24]))
	*($15) = *($12 + [36])
	$11 = *($7)
	$19 = CALL strlen([5328])
	if ( ((int_32)$19 != (int_32)( *((($21 + [264]) + [28])) ? uint_32($11 >> [1]) : ($11 & [1]) )) ){ goto $label$31 }
	if ( CALL $752($7, [0], [-1], [5328], $19) ){ goto $label$31 }
	*((($21 + [1056]) + [8])) = $1
	*($21 + [1056]) = *($0)
	CALL _ZN11walexchange11rex_manager15add_delegate_toEyy(($21 + [1056]), *($4), *($10))
	
.LABEL $label$31
	if ( ((*($7) & [1]) == 0) ){ goto $label$32 }
	CALL $738(*($16))
	
.LABEL $label$32
	CALL $243(($21 + [608]), $12)
	goto $label$18 
	
.LABEL $label$23
	CALL $244(($21 + [568]), CALL $262(($21 + [568]), *($12 + [16]), [592]))
	goto $label$18 
	
.LABEL $label$22
	$12 = CALL $263(($21 + [688]), *($12 + [16]), [592])
	$13 = *(($12 + [16]))
	*((($21 + [240]) + [16])) = $13
	$14 = *(($12 + [8]))
	*((($21 + [240]) + [8])) = $14
	$3 = *($12)
	*((($21 + [216]) + [16])) = $13
	*((($21 + [216]) + [8])) = $14
	*($21 + [240]) = $3
	*($21 + [216]) = $3
	CALL _ZN11walexchange12wal_exchange13settle_cancelEyNS_9to_cancelE($0, $1, ($21 + [216]))
	CALL $245(($21 + [688]), $12)
	goto $label$18 
	
.LABEL $label$21
	$12 = CALL db_find_i64(*($4 + [808]), *($18), (int_64)-3617352385659874816, $3)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$19 }
	$12 = CALL $252(($4 + [808]), $12)
	CALL eosio_assert(((int_32)*($12 + [36]) == (int_32)($4 + [808])), [288])
	
.LABEL $label$20
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$11 = CALL db_next_i64(*($12 + [40]), ($4 + [1056]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$33 }
	CALL $252(($4 + [808]), $11)
	
.LABEL $label$33
	CALL $253(($4 + [808]), $12)
	
.LABEL $label$19
	CALL $237(($4 + [848]), $8)
	
.LABEL $label$18
	if ( (*(*($21 + [524]) + [8]) == 0) ){ goto $label$34 }
	*($21 + [1056]) = ($21 + [520])
	CALL eosio_assert($6, [1328])
	CALL $265(($21 + [944]), $5, ($21 + [1056]))
	
.LABEL $label$34
	$12 = [0]
	$3 = *($21 + [520])
	$11 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	$19 = ((int_32)$11) != (int_32)[0]
	CALL eosio_assert($19), [736])
	CALL eosio_assert($19, [784])
	$19 = CALL db_next_i64(*($11 + [28]), ($21 + [1056]))
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$35 }
	$12 = CALL $221((CASTING uint_32)(uint_64 $3), $19)
	
.LABEL $label$35
	$20 = ($20 + [-1])
	CALL $246(($21 + [904]), $11)
	*($21 + [520]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)32) | (int_64)((int_64)$3 & (int_64)4294967295))
	if ( $12 ){ goto $label$16 }
	goto $label$13 
	
.LABEL $label$15
	*($21 + [524]) = [0]
	*($21 + [520]) = ($21 + [904])
	goto $label$13 
	
.LABEL $label$14
	if ( *($12 + [8]) ){ goto $label$13 }
	$3 = *($21 + [520])
	$12 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	$20 = ((int_32)$12) != (int_32)[0]
	CALL eosio_assert($20), [736])
	CALL eosio_assert($20, [784])
	$20 = CALL db_next_i64(*($12 + [28]), ($21 + [1056]))
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$36 }
	CALL $221((CASTING uint_32)(uint_64 $3), $20)
	
.LABEL $label$36
	CALL $246(($21 + [904]), $12)
	
.LABEL $label$13
	CALL _ZN11walexchange12wal_exchange7confirmEyy($0, $1, $3)
	$11 = *($21 + [552])
	if ( ($11 == 0) ){ goto $label$37 }
	$19 = ($21 + [556])
	$12 = *($19)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$39 }
	
.LOOP $label$40:
	$12 = ($12 + [-24])
	$20 = *($12)
	*($12) = [0]
	if ( ($20 == 0) ){ goto $label$41 }
	CALL $738($20)
	
.LABEL $label$41
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$40 }
	$12 = *(($21 + [552]))
	goto $label$38 
	
.LABEL $label$39
	$12 = $11
	
.LABEL $label$38
	*($19) = $11
	CALL $738($12)
	
.LABEL $label$37
	$11 = *($21 + [592])
	if ( ($11 == 0) ){ goto $label$42 }
	$19 = ($21 + [596])
	$12 = *($19)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$44 }
	
.LOOP $label$45:
	$12 = ($12 + [-24])
	$20 = *($12)
	*($12) = [0]
	if ( ($20 == 0) ){ goto $label$46 }
	CALL $738($20)
	
.LABEL $label$46
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$45 }
	$12 = *(($21 + [592]))
	goto $label$43 
	
.LABEL $label$44
	$12 = $11
	
.LABEL $label$43
	*($19) = $11
	CALL $738($12)
	
.LABEL $label$42
	$11 = *($21 + [632])
	if ( ($11 == 0) ){ goto $label$47 }
	$19 = ($21 + [636])
	$12 = *($19)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$49 }
	
.LOOP $label$50:
	$12 = ($12 + [-24])
	$20 = *($12)
	*($12) = [0]
	if ( ($20 == 0) ){ goto $label$51 }
	if ( ((*($20 + [24]) & [1]) == 0) ){ goto $label$52 }
	CALL $738(*(($20 + [32])))
	
.LABEL $label$52
	CALL $738($20)
	
.LABEL $label$51
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$50 }
	$12 = *(($21 + [632]))
	goto $label$48 
	
.LABEL $label$49
	$12 = $11
	
.LABEL $label$48
	*($19) = $11
	CALL $738($12)
	
.LABEL $label$47
	$11 = *($21 + [672])
	if ( ($11 == 0) ){ goto $label$53 }
	$19 = ($21 + [676])
	$12 = *($19)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$55 }
	
.LOOP $label$56:
	$12 = ($12 + [-24])
	$20 = *($12)
	*($12) = [0]
	if ( ($20 == 0) ){ goto $label$57 }
	CALL $738($20)
	
.LABEL $label$57
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$56 }
	$12 = *(($21 + [672]))
	goto $label$54 
	
.LABEL $label$55
	$12 = $11
	
.LABEL $label$54
	*($19) = $11
	CALL $738($12)
	
.LABEL $label$53
	$11 = *($21 + [712])
	if ( ($11 == 0) ){ goto $label$58 }
	$19 = ($21 + [716])
	$12 = *($19)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$60 }
	
.LOOP $label$61:
	$12 = ($12 + [-24])
	$20 = *($12)
	*($12) = [0]
	if ( ($20 == 0) ){ goto $label$62 }
	CALL $738($20)
	
.LABEL $label$62
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$61 }
	$12 = *(($21 + [712]))
	goto $label$59 
	
.LABEL $label$60
	$12 = $11
	
.LABEL $label$59
	*($19) = $11
	CALL $738($12)
	
.LABEL $label$58
	$11 = *($21 + [752])
	if ( ($11 == 0) ){ goto $label$63 }
	$19 = ($21 + [756])
	$12 = *($19)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$65 }
	
.LOOP $label$66:
	$12 = ($12 + [-24])
	$20 = *($12)
	*($12) = [0]
	if ( ($20 == 0) ){ goto $label$67 }
	CALL $738($20)
	
.LABEL $label$67
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$66 }
	$12 = *(($21 + [752]))
	goto $label$64 
	
.LABEL $label$65
	$12 = $11
	
.LABEL $label$64
	*($19) = $11
	CALL $738($12)
	
.LABEL $label$63
	$11 = *($21 + [792])
	if ( ($11 == 0) ){ goto $label$68 }
	$19 = ($21 + [796])
	$12 = *($19)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$70 }
	
.LOOP $label$71:
	$12 = ($12 + [-24])
	$20 = *($12)
	*($12) = [0]
	if ( ($20 == 0) ){ goto $label$72 }
	CALL $738($20)
	
.LABEL $label$72
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$71 }
	$12 = *(($21 + [792]))
	goto $label$69 
	
.LABEL $label$70
	$12 = $11
	
.LABEL $label$69
	*($19) = $11
	CALL $738($12)
	
.LABEL $label$68
	$11 = *($21 + [832])
	if ( ($11 == 0) ){ goto $label$73 }
	$19 = ($21 + [836])
	$12 = *($19)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$75 }
	
.LOOP $label$76:
	$12 = ($12 + [-24])
	$20 = *($12)
	*($12) = [0]
	if ( ($20 == 0) ){ goto $label$77 }
	if ( ((*($20 + [24]) & [1]) == 0) ){ goto $label$78 }
	CALL $738(*(($20 + [32])))
	
.LABEL $label$78
	CALL $738($20)
	
.LABEL $label$77
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$76 }
	$12 = *(($21 + [832]))
	goto $label$74 
	
.LABEL $label$75
	$12 = $11
	
.LABEL $label$74
	*($19) = $11
	CALL $738($12)
	
.LABEL $label$73
	$11 = *($21 + [872])
	if ( ($11 == 0) ){ goto $label$79 }
	$19 = ($21 + [876])
	$12 = *($19)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$81 }
	
.LOOP $label$82:
	$12 = ($12 + [-24])
	$20 = *($12)
	*($12) = [0]
	if ( ($20 == 0) ){ goto $label$83 }
	CALL $738($20)
	
.LABEL $label$83
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$82 }
	$12 = *(($21 + [872]))
	goto $label$80 
	
.LABEL $label$81
	$12 = $11
	
.LABEL $label$80
	*($19) = $11
	CALL $738($12)
	
.LABEL $label$79
	$11 = *($21 + [928])
	if ( ($11 == 0) ){ goto $label$84 }
	$19 = ($21 + [932])
	$12 = *($19)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$86 }
	
.LOOP $label$87:
	$12 = ($12 + [-24])
	$20 = *($12)
	*($12) = [0]
	if ( ($20 == 0) ){ goto $label$88 }
	CALL $738($20)
	
.LABEL $label$88
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$87 }
	$12 = *(($21 + [928]))
	goto $label$85 
	
.LABEL $label$86
	$12 = $11
	
.LABEL $label$85
	*($19) = $11
	CALL $738($12)
	
.LABEL $label$84
	$19 = *($21 + [968])
	if ( ($19 == 0) ){ goto $label$89 }
	$0 = (($21 + [944]) + [28])
	$20 = *($0)
	if ( ((int_32)$20 == (int_32)$19) ){ goto $label$91 }
	
.LOOP $label$92:
	$20 = ($20 + [-24])
	$12 = *($20)
	*($20) = [0]
	if ( ($12 == 0) ){ goto $label$93 }
	$11 = *($12 + [24])
	if ( ($11 == 0) ){ goto $label$94 }
	*(($12 + [28])) = $11
	CALL $738($11)
	
.LABEL $label$94
	$11 = *($12 + [12])
	if ( ($11 == 0) ){ goto $label$95 }
	*(($12 + [16])) = $11
	CALL $738($11)
	
.LABEL $label$95
	CALL $738($12)
	
.LABEL $label$93
	if ( ((int_32)$19 != (int_32)$20) ){ goto $label$92 }
	$12 = *(($21 + [968]))
	goto $label$90 
	
.LABEL $label$91
	$12 = $19
	
.LABEL $label$90
	*($0) = $19
	CALL $738($12)
	
.LABEL $label$89
	$11 = *($21 + [1024])
	if ( ($11 == 0) ){ goto $label$96 }
	$19 = ($21 + [1028])
	$12 = *($19)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$98 }
	
.LOOP $label$99:
	$12 = ($12 + [-24])
	$20 = *($12)
	*($12) = [0]
	if ( ($20 == 0) ){ goto $label$100 }
	CALL $738($20)
	
.LABEL $label$100
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$99 }
	$12 = *(($21 + [1024]))
	goto $label$97 
	
.LABEL $label$98
	$12 = $11
	
.LABEL $label$97
	*($19) = $11
	CALL $738($12)
	
.LABEL $label$96
	*([0] + [4]) = ($21 + [1072])
	$11
}

void .FUNC $244 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $245 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$7 = *(($1 + [32]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3670317554737348608, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $242 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [60]))
	$7 = *(($1 + [64]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3660983113619603456, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $243 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$7 }
	CALL $738(*(($4 + [32])))
	
.LABEL $label$7
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$10 }
	CALL $738(*(($4 + [32])))
	
.LABEL $label$10
	CALL $738($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

int_32 .FUNC $240 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [544])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	*($6 + [24]) = [-1]
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $131(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $241 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
	$7 = *(($1 + [24]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2039333636189044736, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $227 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [40]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC __fpclassifyl (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [3] ? [2] : ((int_64)((int_64)$2 | (int_64)$0) != (int_64)0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

int_32 .FUNC __signbitl (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

int_32 .FUNC wctomb (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL wcrtomb($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

void .FUNC $552 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [96]) == (int_32)$0), [288])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4982871454518345728, (int_64)4982871454518345728)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $551($0, $3)
	CALL eosio_assert(((int_32)*($3 + [96]) == (int_32)$0), [288])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [1328])
	CALL $558($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $559($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC strerror (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL __lctrans($3, *([0] + [20]))
	$2 = [0]
	
.LOOP $label$5:
	if ( ((int_32)*(($2 + [21168])) == (int_32)$0) ){ goto $label$4 }
	$1 = [87]
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[87]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$1 = $2
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = [21264]
	
.LOOP $label$6:
	$0 = *($2)
	$3 = ($2 + [1])
	$2 = $3
	if ( $0 ){ goto $label$6 }
	$2 = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [21264]
	return .LABEL $label$1
}

void .FUNC $784 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$1 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$18
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$16
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$15
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$9
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$8
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$7
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$5
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$3
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($4, *($1))
	*(($0 + [8])) = *(($4 + [8]))
	*($0) = *($4)
	goto $label$1 
	
.LABEL $label$2
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$3 = *($1)
	*(($0 + [8])) = *($1 + [8])
	*($0) = $3
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	$1
}

int_32 .FUNC __fwritex (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($2 + [16])
	if ( $6 ){ goto $label$2 }
	$6 = [0]
	if ( CALL __towrite($2) ){ goto $label$1 }
	$6 = *(($2 + [16]))
	
.LABEL $label$2
	$7 = *($2 + [20])
	if ( ((uint_32)($6 - $7) >= (uint_32)$1) ){ goto $label$3 }
	return CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	
.LABEL $label$3
	$8 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$4 }
	$3 = ($0 + $1)
	$8 = [0]
	$6 = [0]
	
.LOOP $label$5:
	if ( (($1 + $6) == 0) ){ goto $label$4 }
	$5 = ($3 + $6)
	$4 = ($6 + [-1])
	$6 = $4
	if ( ((int_32)*(($5 + [-1])) != (int_32)[10]) ){ goto $label$5 }
	$8 = (($1 + $4) + [1])
	$6 = CALL int_32 $2((int_32 $0), (int_32 $8), (int_32 *($2 + [36])))
	if ( ($6 <= $8) ){ goto $label$1 }
	$1 = ((int_32)$4 ^ (int_32)[-1])
	$0 = (($3 + $4) + [1])
	$7 = *(($2 + [20]))
	
.LABEL $label$4
	CALL memcpy($7, $0, $1)
	*(($6 = ($2 + [20]))) = (*($6) + $1)
	return ($8 + $1)
	
.LABEL $label$1
	return $6
}

void .FUNC __unlockfile (int_32 $0)
{
}

int_32 .FUNC __lockfile (int_32 $0)
{
	int_32 $1
	return $1
}

void .FUNC $658 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $101(*($1), ($0 + [40]))
}

int_32 .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $737([32])) + [16]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [4])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [5])
	*($8 + [44]) = ($6 + [8])
	CALL $153(($8 + [32]), ($8 + [24]))
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [20])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $154(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[3]), [544])
	CALL memcpy($6, $7, [4])
	CALL eosio_assert(((uint_32)($4 + [-4]) > (uint_32)[7]), [544])
	CALL memcpy(($6 + [8]), ($7 + [4]), [8])
	*($6 + [24]) = [-1]
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $155(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC _ZN11walexchange12wal_exchange8claimeosEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [384])
	*([0] + [4]) = $12
	if ( CALL has_auth(*(($0 + [240]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [200])))
	
.LABEL $label$1
	*(($12 + [376])) = [0]
	*($12 + [360]) = (int_64)-1
	$6 = (int_64)0
	*($12 + [368]) = (int_64)0
	$7 = *($0)
	*($12 + [344]) = $7
	*($12 + [352]) = $7
	*($12 + [380]) = [0]
	*($12 + [336]) = ($12 + [344])
	$5 = (int_64)59
	$4 = [8064]
	$10 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$7 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$2 = ($2 + [165])
	goto $label$5 
	
.LABEL $label$7
	$7 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$3
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$10 = ((int_64)$7 | (int_64)$10)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$2 }
	*($12 + [296]) = $10
	*($12 + [288]) = (uint_64)(int_64)1397703936 >> (uint_64)(int_64)8)
	CALL $46(($12 + [248]), ($12 + [336]), ($12 + [288]))
	$4 = [0]
	$2 = *($12 + [252])
	if ( ($2 == 0) ){ goto $label$8 }
	$4 = ( $2 ? [0] : (int_64)(((int_64)((int_64)*($12 + [288]) ^ (int_64)(uint_64)*($2 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($12 + [296]) ^ (int_64)*(($2 + [16])))) == 0) )
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [8080])
	*(($12 + [320])) = [0]
	*($12 + [304]) = (int_64)-1
	$6 = (int_64)0
	*($12 + [312]) = (int_64)0
	$7 = *($0)
	*($12 + [288]) = $7
	*($12 + [296]) = $7
	*($12 + [324]) = [0]
	$4 = CALL db_find_i64($7, $7, (int_64)-4060986525729035840, *($4))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$10 }
	$4 = CALL $148(($12 + [288]), $4)
	CALL eosio_assert(((int_32)*($4 + [16]) == (int_32)($12 + [288])), [288])
	$4 = ($4 + [8])
	goto $label$9 
	
.LABEL $label$10
	$4 = $0
	
.LABEL $label$9
	$3 = *($4)
	$5 = (int_64)59
	$4 = [8064]
	$10 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$16 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$2 = ($2 + [165])
	goto $label$14 
	
.LABEL $label$16
	$7 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$12
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$10 = ((int_64)$7 | (int_64)$10)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$11 }
	$4 = [0]
	*((($12 + [248]) + [32])) = [0]
	*($12 + [264]) = (int_64)-1
	*($12 + [272]) = (int_64)0
	*($12 + [256]) = $3
	*($12 + [248]) = $10
	$11 = [0]
	$2 = CALL db_find_i64($10, $3, (int_64)3607749779137757184, (int_64)5459781)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$17 }
	$11 = CALL $420(($12 + [248]), $2)
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)($12 + [248])), [288])
	
.LABEL $label$17
	*((($12 + [208]) + [32])) = [0]
	*($12 + [224]) = (int_64)-1
	*($12 + [232]) = (int_64)0
	$6 = *($0)
	*($12 + [208]) = $6
	*($12 + [216]) = $6
	*($12 + [244]) = [0]
	*($12 + [200]) = ($12 + [208])
	CALL eosio_assert([1], [2768])
	$6 = (int_64)5459781
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	
.LOOP $label$22:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$22 }
	
.LABEL $label$21
	$2 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	$2 = [0]
	
.LABEL $label$18
	CALL eosio_assert($2, [2832])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [8064]
	$10 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$28 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$2 = ($2 + [165])
	goto $label$26 
	
.LABEL $label$28
	$7 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$24
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$10 = ((int_64)$7 | (int_64)$10)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$23 }
	*($12 + [168]) = $10
	*($12 + [160]) = (int_64)5459781
	CALL $156(($12 + [144]), ($12 + [200]), ($12 + [160]))
	$8 = [0]
	$4 = *($12 + [148])
	if ( ($4 == 0) ){ goto $label$29 }
	$8 = ( $4 ? [0] : (int_64)(((int_64)((int_64)*($12 + [160]) ^ (int_64)(uint_64)*(($4 + [16])) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($12 + [168]) ^ (int_64)*(($4 + [24])))) == 0) )
	
.LABEL $label$29
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [8112]
	$10 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$35 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$2 = ($2 + [165])
	goto $label$33 
	
.LABEL $label$35
	$7 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$31
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$10 = ((int_64)$7 | (int_64)$10)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$30 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [8112]
	$9 = (int_64)0
	
.LOOP $label$36:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$41 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$2 = ($2 + [165])
	goto $label$39 
	
.LABEL $label$41
	$7 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$38
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$37
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$36 }
	$4 = [0]
	*(($12 + [192])) = [0]
	*($12 + [176]) = (int_64)-1
	$6 = (int_64)0
	*($12 + [184]) = (int_64)0
	*($12 + [168]) = $9
	*($12 + [160]) = $10
	$2 = CALL db_find_i64($10, $9, (int_64)-4991550501091803136, $3)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$42 }
	$4 = CALL $421(($12 + [160]), $2)
	CALL eosio_assert(((int_32)*($4 + [56]) == (int_32)($12 + [160])), [288])
	
.LABEL $label$42
	if ( ($11 == 0) ){ goto $label$43 }
	$6 = *($11)
	
.LABEL $label$43
	$7 = (int_64)0
	$5 = (int_64)0
	if ( ($4 == 0) ){ goto $label$44 }
	CALL _ZN11walexchange12wal_exchange16get_eos_receivedERKN5eosio5assetE(($12 + [144]), $12, ($4 + [32]))
	$5 = *($12 + [144])
	
.LABEL $label$44
	if ( ($8 == 0) ){ goto $label$45 }
	$7 = *($8 + [8])
	
.LABEL $label$45
	CALL printi($6)
	CALL prints([5360])
	CALL printi($5)
	CALL prints([5360])
	CALL printi($7)
	CALL prints([5360])
	$9 = (int_64)
	CALL printi($9(((int_64)$5 + (int_64)$6) - $7)))
	$6 = (int_64)0
	CALL eosio_assert(((int_64)$9 > (int_64)0), [8128])
	*($12 + [144]) = *($0)
	$7 = (int_64)59
	$4 = [8160]
	$10 = (int_64)0
	
.LOOP $label$46:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$47 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$49 }
	$2 = ($2 + [165])
	goto $label$48 
	
.LABEL $label$49
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$48
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$47
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$10 = ((int_64)$5 | (int_64)$10)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$46 }
	$3 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($12 + [144]), $10, [2])
	CALL eosio_assert((uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$6 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$52:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$51 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$53 }
	
.LOOP $label$54:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$51 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$54 }
	
.LABEL $label$53
	$2 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$52 }
	goto $label$50 
	
.LABEL $label$51
	$2 = [0]
	
.LABEL $label$50
	CALL eosio_assert($2, [2832])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [8064]
	$10 = (int_64)0
	
.LOOP $label$55:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$60 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$2 = ($2 + [165])
	goto $label$58 
	
.LABEL $label$60
	$7 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$59
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$57
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$56
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$10 = ((int_64)$7 | (int_64)$10)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$55 }
	*($12 + [128]) = (int_64)1397703940
	*((($12 + [48]) + [8])) = (int_64)1397703940
	*($12 + [136]) = $10
	*((($12 + [48]) + [16])) = $10
	*($12 + [120]) = $9
	*($12 + [48]) = $9
	$4 = ($0 + [256])
	CALL _ZN11walexchange13asset_manager14adjust_balanceEyyN5eosio14extended_assetEy($4, $3, $1, ($12 + [48]), (int_64)0)
	*($12 + [104]) = (int_64)1397703940
	*((($12 + [24]) + [8])) = (int_64)1397703940
	*($12 + [112]) = $10
	*((($12 + [24]) + [16])) = $10
	*($12 + [96]) = $9
	*($12 + [24]) = $9
	CALL _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE($4, $1, ($12 + [24]))
	*($12 + [80]) = (int_64)1397703940
	$6 = *($0)
	*(($12 + [8])) = (int_64)1397703940
	*($12 + [88]) = $10
	*(($12 + [16])) = $10
	*($12 + [72]) = $9
	*($12) = $9
	CALL _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE($4, $6, $12)
	$0 = *($12 + [184])
	if ( ($0 == 0) ){ goto $label$61 }
	$11 = ($12 + [188])
	$4 = *($11)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$63 }
	
.LOOP $label$64:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$65 }
	CALL $738($2)
	
.LABEL $label$65
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$64 }
	$4 = *(($12 + [184]))
	goto $label$62 
	
.LABEL $label$63
	$4 = $0
	
.LABEL $label$62
	*($11) = $0
	CALL $738($4)
	
.LABEL $label$61
	$0 = *($12 + [232])
	if ( ($0 == 0) ){ goto $label$66 }
	$11 = ($12 + [236])
	$4 = *($11)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$68 }
	
.LOOP $label$69:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$70 }
	CALL $738($2)
	
.LABEL $label$70
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$69 }
	$4 = *(($12 + [232]))
	goto $label$67 
	
.LABEL $label$68
	$4 = $0
	
.LABEL $label$67
	*($11) = $0
	CALL $738($4)
	
.LABEL $label$66
	$0 = *($12 + [272])
	if ( ($0 == 0) ){ goto $label$71 }
	$11 = ($12 + [276])
	$4 = *($11)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$73 }
	
.LOOP $label$74:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$75 }
	CALL $738($2)
	
.LABEL $label$75
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$74 }
	$4 = *(($12 + [272]))
	goto $label$72 
	
.LABEL $label$73
	$4 = $0
	
.LABEL $label$72
	*($11) = $0
	CALL $738($4)
	
.LABEL $label$71
	$0 = *($12 + [312])
	if ( ($0 == 0) ){ goto $label$76 }
	$11 = ($12 + [316])
	$4 = *($11)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$78 }
	
.LOOP $label$79:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$80 }
	CALL $738($2)
	
.LABEL $label$80
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$79 }
	$4 = *(($12 + [312]))
	goto $label$77 
	
.LABEL $label$78
	$4 = $0
	
.LABEL $label$77
	*($11) = $0
	CALL $738($4)
	
.LABEL $label$76
	$0 = *($12 + [368])
	if ( ($0 == 0) ){ goto $label$81 }
	$11 = ($12 + [372])
	$4 = *($11)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$83 }
	
.LOOP $label$84:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$85 }
	CALL $738($2)
	
.LABEL $label$85
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$84 }
	$4 = *(($12 + [368]))
	goto $label$82 
	
.LABEL $label$83
	$4 = $0
	
.LABEL $label$82
	*($11) = $0
	CALL $738($4)
	
.LABEL $label$81
	*([0] + [4]) = ($12 + [384])
}

int_32 .FUNC _Z16string_to_uint32RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$3 = [1]
	$1 = ($2 & [1])
	$2 = *($0)
	$2 = ( *($0 + [4]) ? uint_32($2 >> [1]) : $1 )
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( *($0 + [8]) ? ($0 + [1]) : $1 )
	
.LOOP $label$3:
	if ( (CALL isdigit(*($3)) == 0) ){ goto $label$2 }
	$3 = ($3 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	$3 = [1]
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1408])
	$3 = *($0)
	if ( (( *(($0 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) ) == 0) ){ goto $label$4 }
	return CALL _ZNSt3__14stolERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji($0, [0], [10])
	
.LABEL $label$4
	return [0]
}

void .FUNC _ZN11walexchange13asset_manager14adjust_balanceEyyN5eosio14extended_assetEy (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [224])
	*([0] + [4]) = $11
	*($11 + [168]) = $2
	if ( (int_64)(*($3) == 0) ){ goto $label$1 }
	$2 = *($0)
	*((($11 + [128]) + [32])) = [0]
	*($11 + [136]) = $2
	*($11 + [128]) = $2
	*($11 + [144]) = (int_64)-1
	*($11 + [152]) = (int_64)0
	*($11 + [164]) = [0]
	*($11 + [120]) = ($11 + [128])
	CALL $161(($11 + [80]), ($11 + [120]), ($11 + [168]))
	$9 = [0]
	$6 = *($11 + [84])
	if ( ($6 == 0) ){ goto $label$2 }
	$9 = ( $6 ? [0] : ((int_64)*($11 + [168]) == (int_64)*($6 + [8])) )
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [1456])
	*((($11 + [80]) + [32])) = [0]
	*($11 + [96]) = (int_64)-1
	*($11 + [104]) = (int_64)0
	$7 = *($0)
	*($11 + [80]) = $7
	*($11 + [88]) = $7
	*($11 + [116]) = [0]
	*($11 + [72]) = ($11 + [80])
	*($11 + [56]) = *($3 + [16])
	*($11 + [48]) = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	CALL $46(($11 + [8]), ($11 + [72]), ($11 + [48]))
	$6 = *($11 + [12])
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((int_64)(((int_64)((int_64)*($11 + [48]) ^ (int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($11 + [56]) ^ (int_64)*(($6 + [16])))) == 0) == 0) ){ goto $label$4 }
	if ( $6 ){ goto $label$3 }
	
.LABEL $label$4
	$7 = *($0)
	*($11 + [220]) = $3
	*($11 + [216]) = ($11 + [80])
	*($11 + [176]) = $7
	CALL eosio_assert(((int_64)*($11 + [80]) == (int_64)CALL $fimport$16()), [432])
	*($11 + [12]) = ($11 + [216])
	*($11 + [8]) = ($11 + [80])
	*($11 + [16]) = ($11 + [176])
	*(($6 = CALL $737([40])) + [16]) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [24]) = ($11 + [80])
	CALL $162(($11 + [8]), $6)
	*($11 + [208]) = $6
	$7 = *($6)
	*($11 + [8]) = $7
	$5 = *($6 + [28])
	*($11 + [200]) = $5
	$8 = ($11 + [108])
	$10 = *($8)
	if ( ((uint_32)$10 >= (uint_32)*(($11 + [112]))) ){ goto $label$6 }
	*($10 + [8]) = $7
	*($10 + [16]) = $5
	*($11 + [208]) = [0]
	*($10) = $6
	*($8) = ($10 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $66(($11 + [104]), ($11 + [208]), ($11 + [8]), ($11 + [200]))
	
.LABEL $label$5
	$6 = *($11 + [208])
	*($11 + [208]) = [0]
	if ( ($6 == 0) ){ goto $label$7 }
	CALL $738($6)
	
.LABEL $label$7
	CALL $46(($11 + [8]), ($11 + [72]), ($11 + [48]))
	$6 = *($11 + [12])
	if ( ($6 == 0) ){ goto $label$9 }
	$7 = (int_64)0
	if ( ((int_64)((int_64)((int_64)*($11 + [48]) ^ (int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($11 + [56]) ^ (int_64)*(($6 + [16])))) != (int_64)0) ){ goto $label$8 }
	$7 = *($11 + [12])
	goto $label$8 
	
.LABEL $label$9
	$7 = (int_64)0
	
.LABEL $label$8
	$6 = (CASTING uint_32)(uint_64 $7)
	
.LABEL $label$3
	$10 = [0]
	if ( ((int_64)*($6 + [8]) != (int_64)*(($3 + [8]))) ){ goto $label$10 }
	$10 = ((int_64)*(($6 + [16])) == (int_64)*(($3 + [16])))
	
.LABEL $label$10
	CALL eosio_assert($10, [3584])
	*((($11 + [8]) + [32])) = [0]
	*($11 + [16]) = $1
	*($11 + [24]) = (int_64)-1
	*($11 + [32]) = (int_64)0
	*($11 + [8]) = *($0)
	*($11 + [44]) = [0]
	CALL $22($11, ($11 + [8]), ((int_64)((int_64)*($9) << (int_64)32) | (int_64)*($6)))
	$0 = *($11 + [4])
	if ( ($0 == 0) ){ goto $label$17 }
	$2 = ((int_64)*($3) + (int_64)*($0 + [8]))
	CALL eosio_assert((((int_64)$2 > (int_64)-1) & (uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)), [3616])
	$6 = *($11 + [4])
	if ( ((int_64)((int_64)*($3) + (int_64)*($6 + [8])) < (int_64)1) ){ goto $label$16 }
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [1328])
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)($11 + [8])), [848])
	CALL eosio_assert(((int_64)*($11 + [8]) == (int_64)CALL $fimport$16()), [896])
	*($6 + [8]) = ((int_64)*($6 + [8]) + (int_64)*($3))
	$2 = *($6)
	*($11 + [200]) = $2
	$1 = *($6 + [4])
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($11 + [176]), $6, [4])
	CALL eosio_assert([1], [496])
	CALL memcpy((($11 + [176]) | [4]), ($6 + [4]), [4])
	CALL eosio_assert([1], [496])
	CALL memcpy((($11 + [176]) | [8]), ($6 + [8]), [8])
	CALL db_update_i64(*(($6 + [20])), (int_64)0, ($11 + [176]), [16])
	$3 = (($11 + [8]) + [16])
	$2 = ((int_64)$1 | (int_64)((int_64)$2 << (int_64)32))
	if ( (uint_64)($2 <= *($3)) ){ goto $label$18 }
	*($3) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$18
	*($11 + [216]) = *($6)
	if ( (CALL memcmp(($11 + [200]), ($11 + [216]), [8]) == 0) ){ goto $label$13 }
	$6 = ($6 + [24])
	$3 = *($6)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$19 }
	$3 = CALL db_idx64_find_primary(*($11 + [8]), *(($11 + [16])), (int_64)-3020381105862213632, ($11 + [208]), $2)
	*($6) = $3
	
.LABEL $label$19
	CALL db_idx64_update($3, (int_64)0, ($11 + [216]))
	$0 = *($11 + [32])
	if ( $0 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$17
	CALL eosio_assert(((int_64)*($11 + [8]) == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([32])) + [16]) = ($11 + [8])
	*($0) = *($9)
	*($0 + [4]) = *($6)
	$1 = *($3)
	*($0 + [8]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)0), [3552])
	CALL eosio_assert([1], [496])
	CALL memcpy(($11 + [176]), $0, [4])
	CALL eosio_assert([1], [496])
	$3 = ($0 + [4])
	CALL memcpy((($11 + [176]) | [4]), $3, [4])
	CALL eosio_assert([1], [496])
	CALL memcpy((($11 + [176]) | [8]), ($0 + [8]), [8])
	$2 = ((int_64)((int_64)*($0) << (int_64)32) | (int_64)*($0 + [4]))
	$1 = ( $2 ? $4 : (int_64)($4 == 0) )
	$6 = (($11 + [8]) + [8])
	*($0 + [20]) = CALL db_store_i64(*($6), (int_64)-3020381105862213632, $1, $2, ($11 + [176]), [16])
	$9 = (($11 + [8]) + [16])
	if ( (uint_64)($2 <= *($9)) ){ goto $label$20 }
	*($9) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$20
	$2 = *($3)
	$4 = *($6)
	$7 = *($0)
	*($11 + [216]) = $7
	*($0 + [24]) = CALL db_idx64_store($4, (int_64)-3020381105862213632, $1, ((int_64)$2 | (int_64)((int_64)$7 << (int_64)32)), ($11 + [216]))
	*($11 + [216]) = $0
	$2 = ((int_64)((int_64)*($0) << (int_64)32) | (int_64)*($3))
	*($11 + [176]) = $2
	$6 = *(($0 + [20]))
	*($11 + [208]) = $6
	$9 = ($11 + [36])
	$3 = *($9)
	if ( ((uint_32)$3 >= (uint_32)*(($11 + [40]))) ){ goto $label$15 }
	*($3 + [8]) = $2
	*($3 + [16]) = $6
	*($11 + [216]) = [0]
	*($3) = $0
	*($9) = ($3 + [24])
	goto $label$14 
	
.LABEL $label$16
	$2 = *($11)
	$3 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	$6 = ((int_32)$3) != (int_32)[0]
	CALL eosio_assert($6), [736])
	CALL eosio_assert($6, [784])
	$6 = CALL db_next_i64(*($3 + [20]), ($11 + [176]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$21 }
	CALL $23((CASTING uint_32)(uint_64 $2), $6)
	
.LABEL $label$21
	CALL $163(($11 + [8]), $3)
	$0 = *($11 + [32])
	if ( $0 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$15
	CALL $24(($11 + [32]), ($11 + [216]), ($11 + [176]), ($11 + [208]))
	
.LABEL $label$14
	$3 = *($11 + [216])
	*($11 + [216]) = [0]
	if ( ($3 == 0) ){ goto $label$13 }
	CALL $738($3)
	
.LABEL $label$13
	$0 = *($11 + [32])
	if ( ($0 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$9 = ($11 + [36])
	$3 = *($9)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$23 }
	
.LOOP $label$24:
	$3 = ($3 + [-24])
	$6 = *($3)
	*($3) = [0]
	if ( ($6 == 0) ){ goto $label$25 }
	CALL $738($6)
	
.LABEL $label$25
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$24 }
	$3 = *(($11 + [32]))
	goto $label$22 
	
.LABEL $label$23
	$3 = $0
	
.LABEL $label$22
	*($9) = $0
	CALL $738($3)
	
.LABEL $label$11
	$0 = *($11 + [104])
	if ( ($0 == 0) ){ goto $label$26 }
	$9 = ($11 + [108])
	$3 = *($9)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$28 }
	
.LOOP $label$29:
	$3 = ($3 + [-24])
	$6 = *($3)
	*($3) = [0]
	if ( ($6 == 0) ){ goto $label$30 }
	CALL $738($6)
	
.LABEL $label$30
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$29 }
	$3 = *(($11 + [104]))
	goto $label$27 
	
.LABEL $label$28
	$3 = $0
	
.LABEL $label$27
	*($9) = $0
	CALL $738($3)
	
.LABEL $label$26
	$0 = *($11 + [152])
	if ( ($0 == 0) ){ goto $label$1 }
	$9 = ($11 + [156])
	$3 = *($9)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$32 }
	
.LOOP $label$33:
	$3 = ($3 + [-24])
	$6 = *($3)
	*($3) = [0]
	if ( ($6 == 0) ){ goto $label$34 }
	CALL $738($6)
	
.LABEL $label$34
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$33 }
	$3 = *(($11 + [152]))
	goto $label$31 
	
.LABEL $label$32
	$3 = $0
	
.LABEL $label$31
	*($9) = $0
	CALL $738($3)
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [224])
}

int_32 .FUNC _Z16string_to_uint16RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$3 = [1]
	$1 = ($2 & [1])
	$2 = *($0)
	$2 = ( *($0 + [4]) ? uint_32($2 >> [1]) : $1 )
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( *($0 + [8]) ? ($0 + [1]) : $1 )
	
.LOOP $label$3:
	if ( (CALL isdigit(*($3)) == 0) ){ goto $label$2 }
	$3 = ($3 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	$3 = [1]
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1408])
	$3 = *($0)
	if ( (( *(($0 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) ) == 0) ){ goto $label$5 }
	$3 = CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji($0, [0], [10])
	goto $label$4 
	
.LABEL $label$5
	$3 = [0]
	
.LABEL $label$4
	return ($3 & [65535])
}

void .FUNC _ZN11walexchange12wal_exchange12out_transferERKyS2_RKN5eosio5assetERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	$17 = (*([0] + [4]) - [256])
	*([0] + [4]) = $17
	*(($17 + [224])) = [0]
	*($17 + [208]) = (int_64)-1
	*($17 + [216]) = (int_64)0
	$13 = *($0)
	*($17 + [192]) = $13
	*($17 + [200]) = $13
	*($17 + [228]) = [0]
	*($17 + [184]) = ($17 + [192])
	*($17 + [8]) = *($2)
	*($17) = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	CALL $46(($17 + [144]), ($17 + [184]), $17)
	$16 = *($17 + [148])
	if ( ($16 == 0) ){ goto $label$1 }
	if ( ((int_64)(((int_64)((int_64)*($17) ^ (int_64)(uint_64)*($16 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($17 + [8]) ^ (int_64)*(($16 + [16])))) == 0) == 0) ){ goto $label$1 }
	if ( ($16 == 0) ){ goto $label$1 }
	$10 = [0]
	*((($17 + [144]) + [32])) = [0]
	*($17 + [160]) = (int_64)-1
	*($17 + [168]) = (int_64)0
	$13 = *($0)
	*($17 + [144]) = $13
	*($17 + [152]) = $13
	*($17 + [180]) = [0]
	$11 = CALL db_find_i64($13, $13, (int_64)-4060986525729035840, *($16))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$3 }
	$11 = CALL $148(($17 + [144]), $11)
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)($17 + [144])), [288])
	$11 = ($11 + [8])
	goto $label$2 
	
.LABEL $label$3
	$11 = $0
	
.LABEL $label$2
	$5 = *($11)
	*((($17 + [104]) + [32])) = [0]
	*($17 + [128]) = (int_64)0
	*($17 + [120]) = (int_64)-1
	$13 = *($0)
	*($17 + [104]) = $13
	*($17 + [112]) = $13
	$16 = CALL db_find_i64($13, $13, (int_64)5374741447166656512, *($16))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$5 }
	$11 = CALL $149(($17 + [104]), $16)
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)($17 + [104])), [288])
	if ( (*($11 + [4]) == 0) ){ goto $label$6 }
	$13 = (int_64)0
	$12 = (int_64)59
	$16 = [2144]
	$14 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$13 > (uint_64)(int_64)5) ){ goto $label$12 }
	$0 = *($16)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$0 = ($0 + [165])
	goto $label$10 
	
.LABEL $label$12
	$15 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$8
	$16 = ($16 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$7 }
	$6 = *($11 + [8])
	$13 = (int_64)0
	$12 = (int_64)59
	$16 = [3344]
	$9 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$13 > (uint_64)(int_64)10) ){ goto $label$18 }
	$0 = *($16)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$0 = ($0 + [165])
	goto $label$16 
	
.LABEL $label$18
	$15 = (int_64)0
	if ( ((int_64)$13 == (int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$14
	$16 = ($16 + [1])
	$12 = ((int_64)$12 + (int_64)-5)
	$9 = ((int_64)$15 | (int_64)$9)
	$13 = ((int_64)$13 + (int_64)1)
	if ( ((int_64)$13 != (int_64)13) ){ goto $label$13 }
	*((($17 + [64]) + [28])) = *(($3 + [12]))
	*((($17 + [64]) + [24])) = *(($3 + [8]))
	*((($17 + [64]) + [20])) = *(($3 + [4]))
	*($17 + [64]) = $5
	*($17 + [72]) = *($2)
	*($17 + [80]) = *($3)
	*($17) = $6
	*($17 + [8]) = $9
	*($17 + [16]) = [0]
	*(($0 = ($17 + [20]))) = [0]
	*(($10 = ($17 + [24]))) = [0]
	*(($16 = CALL $737([16]))) = $5
	*($16 + [8]) = $14
	*(($7 = ($17 + [32]))) = [0]
	$8 = ($16 + [16])
	*($10) = $8
	*($0) = $8
	*($17 + [16]) = $16
	*($17 + [28]) = [0]
	*(($17 + [36])) = [0]
	CALL $88(($17 + [28]), [32])
	$16 = *($7)
	$0 = *($17 + [28])
	*($17 + [52]) = $0
	*($17 + [48]) = $0
	*($17 + [56]) = $16
	*($17 + [232]) = ($17 + [48])
	*($17 + [240]) = ($17 + [64])
	CALL $150(($17 + [240]), ($17 + [232]))
	CALL $87(($17 + [48]), $17)
	$16 = *($17 + [48])
	CALL send_inline($16, (*($17 + [52]) - $16))
	$16 = *($17 + [48])
	if ( ($16 == 0) ){ goto $label$19 }
	*($17 + [52]) = $16
	CALL $738($16)
	
.LABEL $label$19
	$16 = *($17 + [28])
	if ( ($16 == 0) ){ goto $label$20 }
	*(($17 + [32])) = $16
	CALL $738($16)
	
.LABEL $label$20
	$16 = *($17 + [16])
	if ( ($16 == 0) ){ goto $label$6 }
	*(($17 + [20])) = $16
	CALL $738($16)
	
.LABEL $label$6
	$10 = [1]
	goto $label$4 
	
.LABEL $label$5
	$11 = [0]
	
.LABEL $label$4
	$13 = (int_64)0
	$12 = (int_64)59
	$16 = [2144]
	$14 = (int_64)0
	
.LOOP $label$21:
	if ( ((uint_64)$13 > (uint_64)(int_64)5) ){ goto $label$26 }
	$0 = *($16)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$0 = ($0 + [165])
	goto $label$24 
	
.LABEL $label$26
	$15 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$23
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$22
	$16 = ($16 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$21 }
	*($17 + [56]) = $14
	*($17 + [48]) = $5
	$9 = *($2)
	$13 = (int_64)0
	$12 = (int_64)59
	$16 = [3360]
	$14 = (int_64)0
	
.LOOP $label$27:
	if ( ((uint_64)$13 > (uint_64)(int_64)7) ){ goto $label$32 }
	$0 = *($16)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$0 = ($0 + [165])
	goto $label$30 
	
.LABEL $label$32
	$15 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$31
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$29
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$28
	$16 = ($16 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$27 }
	*(($17 + [28])) = *(($3 + [12]))
	*(($17 + [24])) = *(($3 + [8]))
	*(($17 + [20])) = *(($3 + [4]))
	*($17) = $5
	*($17 + [8]) = *($1)
	*($17 + [16]) = *($3)
	CALL $767(($17 + [32]), $4)
	$16 = CALL $151(($17 + [64]), ($17 + [48]), $9, $14, $17)
	CALL $87(($17 + [240]), $16)
	$0 = *($17 + [240])
	CALL send_inline($0, (*($17 + [244]) - $0))
	$0 = *($17 + [240])
	if ( ($0 == 0) ){ goto $label$33 }
	*($17 + [244]) = $0
	CALL $738($0)
	
.LABEL $label$33
	$0 = *($16 + [28])
	if ( ($0 == 0) ){ goto $label$34 }
	*(($16 + [32])) = $0
	CALL $738($0)
	
.LABEL $label$34
	$0 = *($16 + [16])
	if ( ($0 == 0) ){ goto $label$35 }
	*(($16 + [20])) = $0
	CALL $738($0)
	
.LABEL $label$35
	if ( ((*($17 + [32]) & [1]) == 0) ){ goto $label$36 }
	CALL $738(*(($17 + [40])))
	
.LABEL $label$36
	if ( ($10 == 0) ){ goto $label$37 }
	if ( (*($11 + [5]) == 0) ){ goto $label$37 }
	$13 = (int_64)0
	$12 = (int_64)59
	$16 = [2144]
	$14 = (int_64)0
	
.LOOP $label$38:
	if ( ((uint_64)$13 > (uint_64)(int_64)5) ){ goto $label$43 }
	$0 = *($16)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$0 = ($0 + [165])
	goto $label$41 
	
.LABEL $label$43
	$15 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$42
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$40
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$39
	$16 = ($16 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$38 }
	$6 = *($11 + [8])
	$13 = (int_64)0
	$12 = (int_64)59
	$16 = [3376]
	$9 = (int_64)0
	
.LOOP $label$44:
	if ( ((uint_64)$13 > (uint_64)(int_64)8) ){ goto $label$49 }
	$0 = *($16)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$0 = ($0 + [165])
	goto $label$47 
	
.LABEL $label$49
	$15 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$48
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$46
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$45
	$16 = ($16 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$9 = ((int_64)$15 | (int_64)$9)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$44 }
	*($17 + [64]) = $5
	*($17 + [72]) = *($2)
	*($17) = $6
	*($17 + [8]) = $9
	*($17 + [80]) = *(($3 + [8]))
	*(($16 = CALL $737([16]))) = $5
	*($16 + [8]) = $14
	*(($0 = ($17 + [32]))) = [0]
	$3 = ($16 + [16])
	*(($17 + [24])) = $3
	*(($17 + [20])) = $3
	*($17 + [16]) = $16
	*($17 + [28]) = [0]
	*(($17 + [36])) = [0]
	CALL $88(($17 + [28]), [24])
	$16 = *($17 + [28])
	$0 = (*($0) - $16)
	CALL eosio_assert(((int_32)$0 > (int_32)[7]), [496])
	CALL memcpy($16, ($17 + [64]), [8])
	CALL eosio_assert(((int_32)($0 + [-8]) > (int_32)[7]), [496])
	CALL memcpy(($16 + [8]), (($17 + [64]) + [8]), [8])
	CALL eosio_assert(((int_32)($0 + [-16]) > (int_32)[7]), [496])
	CALL memcpy(($16 + [16]), (($17 + [64]) + [16]), [8])
	CALL $87(($17 + [48]), $17)
	$16 = *($17 + [48])
	CALL send_inline($16, (*($17 + [52]) - $16))
	$16 = *($17 + [48])
	if ( ($16 == 0) ){ goto $label$50 }
	*($17 + [52]) = $16
	CALL $738($16)
	
.LABEL $label$50
	$16 = *($17 + [28])
	if ( ($16 == 0) ){ goto $label$51 }
	*(($17 + [32])) = $16
	CALL $738($16)
	
.LABEL $label$51
	$16 = *($17 + [16])
	if ( ($16 == 0) ){ goto $label$37 }
	*(($17 + [20])) = $16
	CALL $738($16)
	
.LABEL $label$37
	$3 = *($17 + [128])
	if ( ($3 == 0) ){ goto $label$52 }
	$2 = ($17 + [132])
	$16 = *($2)
	if ( ((int_32)$16 == (int_32)$3) ){ goto $label$54 }
	
.LOOP $label$55:
	$16 = ($16 + [-24])
	$0 = *($16)
	*($16) = [0]
	if ( ($0 == 0) ){ goto $label$56 }
	CALL $738($0)
	
.LABEL $label$56
	if ( ((int_32)$3 != (int_32)$16) ){ goto $label$55 }
	$16 = *(($17 + [128]))
	goto $label$53 
	
.LABEL $label$54
	$16 = $3
	
.LABEL $label$53
	*($2) = $3
	CALL $738($16)
	
.LABEL $label$52
	$3 = *($17 + [168])
	if ( ($3 == 0) ){ goto $label$1 }
	$2 = ($17 + [172])
	$16 = *($2)
	if ( ((int_32)$16 == (int_32)$3) ){ goto $label$58 }
	
.LOOP $label$59:
	$16 = ($16 + [-24])
	$0 = *($16)
	*($16) = [0]
	if ( ($0 == 0) ){ goto $label$60 }
	CALL $738($0)
	
.LABEL $label$60
	if ( ((int_32)$3 != (int_32)$16) ){ goto $label$59 }
	$16 = *(($17 + [168]))
	goto $label$57 
	
.LABEL $label$58
	$16 = $3
	
.LABEL $label$57
	*($2) = $3
	CALL $738($16)
	
.LABEL $label$1
	$3 = *($17 + [216])
	if ( ($3 == 0) ){ goto $label$61 }
	$2 = ($17 + [220])
	$16 = *($2)
	if ( ((int_32)$16 == (int_32)$3) ){ goto $label$63 }
	
.LOOP $label$64:
	$16 = ($16 + [-24])
	$0 = *($16)
	*($16) = [0]
	if ( ($0 == 0) ){ goto $label$65 }
	CALL $738($0)
	
.LABEL $label$65
	if ( ((int_32)$3 != (int_32)$16) ){ goto $label$64 }
	$16 = *(($17 + [216]))
	goto $label$62 
	
.LABEL $label$63
	$16 = $3
	
.LABEL $label$62
	*($2) = $3
	CALL $738($16)
	
.LABEL $label$61
	*([0] + [4]) = ($17 + [256])
}

void .FUNC _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [144])
	*([0] + [4]) = $9
	if ( (int_64)(*($2) == 0) ){ goto $label$1 }
	$8 = [0]
	*(($9 + [40])) = [0]
	*($9 + [16]) = $1
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	*($9 + [8]) = *($0)
	*($9 + [44]) = [0]
	*($9) = ($9 + [8])
	*($9 + [56]) = *($2 + [16])
	*($9 + [48]) = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	CALL $156(($9 + [112]), $9, ($9 + [48]))
	$3 = *($9 + [116])
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = ($3 + [24])
	$5 = ($3 + [16])
	if ( ((int_64)(((int_64)((int_64)*($9 + [48]) ^ (int_64)(uint_64)*($5) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($9 + [56]) ^ (int_64)*($4))) == 0) == 0) ){ goto $label$4 }
	CALL eosio_assert([1], [1328])
	$8 = *($9)
	CALL eosio_assert(((int_32)*($3 + [32]) == (int_32)$8), [848])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$16()), [896])
	$7 = *($4)
	*($9 + [88]) = $7
	*($9 + [80]) = (uint_64)*($5) >> (uint_64)(int_64)8)
	$1 = *($3)
	CALL eosio_assert(((int_64)$7 == (int_64)*(($2 + [16]))), [3392])
	$0 = ($3 + [8])
	$7 = *($0)
	$6 = *($5)
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)$6), [3408])
	$7 = ((int_64)$7 + (int_64)*($2))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [3456])
	CALL eosio_assert(((int_64)$7 < (int_64)4611686018427387904), [3488])
	*($5) = $6
	*($0) = $7
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [3520])
	CALL eosio_assert(((int_64)$1 == (int_64)*($3)), [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($9 + [48]), $3, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($9 + [48]) | [8]), $0, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($9 + [48]) + [16]), $5, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($9 + [48]) + [24]), $4, [8])
	CALL db_update_i64(*($3 + [36]), (int_64)0, ($9 + [48]), [32])
	if ( (uint_64)($1 <= *($8 + [16])) ){ goto $label$5 }
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($9 + [120]) = *(($3 + [24]))
	*($9 + [112]) = (uint_64)*(($3 + [16])) >> (uint_64)(int_64)8)
	if ( (CALL memcmp(($9 + [80]), ($9 + [112]), [16]) == 0) ){ goto $label$3 }
	$3 = ($3 + [40])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$6 }
	$2 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)6300979411374047232, ($9 + [96]), $1)
	*($3) = $2
	
.LABEL $label$6
	CALL db_idx128_update($2, (int_64)0, ($9 + [112]))
	$3 = *($9 + [32])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$1 = *($0)
	*($9 + [100]) = $2
	*($9 + [96]) = ($9 + [8])
	*($9 + [112]) = $1
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$16()), [432])
	*($9 + [52]) = ($9 + [96])
	*($9 + [48]) = ($9 + [8])
	*($9 + [56]) = ($9 + [112])
	*(($3 = CALL $737([48])) + [16]) = (int_64)1398362884
	*($3 + [8]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$1 = (int_64)5462355
	
.LOOP $label$8:
	$2 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$2 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	CALL eosio_assert($2, [2832])
	*($3 + [32]) = ($9 + [8])
	CALL $157(($9 + [48]), $3)
	*($9 + [80]) = $3
	$1 = *($3)
	*($9 + [48]) = $1
	$2 = *($3 + [36])
	*($9 + [140]) = $2
	$0 = ($9 + [36])
	$8 = *($0)
	if ( ((uint_32)$8 >= (uint_32)*(($9 + [40]))) ){ goto $label$12 }
	*($8 + [8]) = $1
	*($8 + [16]) = $2
	*($9 + [80]) = [0]
	*($8) = $3
	*($0) = ($8 + [24])
	goto $label$11 
	
.LABEL $label$12
	CALL $158(($9 + [32]), ($9 + [80]), ($9 + [48]), ($9 + [140]))
	
.LABEL $label$11
	$8 = *($9 + [80])
	*($9 + [80]) = [0]
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $738($8)
	
.LABEL $label$3
	$3 = *($9 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$0 = ($9 + [36])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$14 }
	
.LOOP $label$15:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$16 }
	CALL $738($2)
	
.LABEL $label$16
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$15 }
	$8 = *(($9 + [32]))
	goto $label$13 
	
.LABEL $label$14
	$8 = $3
	
.LABEL $label$13
	*($0) = $3
	CALL $738($8)
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [144])
}

void .FUNC _ZN11walexchange12wal_exchange9verifywd3EyyyN5eosio14extended_assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [272])
	*([0] + [4]) = $15
	*($15 + [176]) = $3
	$3 = (int_64)0
	$10 = (int_64)59
	$9 = [3120]
	$11 = (int_64)0
	
.LOOP $label$1:
	$12 = (int_64)0
	if ( ((uint_64)$3 > (uint_64)(int_64)11) ){ goto $label$2 }
	$14 = *($9)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$14 = ($14 + [165])
	goto $label$3 
	
.LABEL $label$4
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($14 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$2
	$9 = ($9 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($11)
	$3 = *($0)
	*($15 + [168]) = $3
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($15 + [168]), $2, [1])
	$10 = CALL _ZN11walexchange24contract_account_manager15find_account_idEy(($15 + [168]), $1)
	$13 = [0]
	*(($15 + [224])) = [0]
	*($15 + [200]) = $3
	*($15 + [192]) = $3
	*($15 + [208]) = (int_64)-1
	*($15 + [216]) = (int_64)0
	*($15 + [228]) = [0]
	$6 = CALL $11(($15 + [192]), $10, [592])
	$7 = *($15 + [216])
	if ( ($7 == 0) ){ goto $label$5 }
	$8 = ($15 + [220])
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$8:
	$9 = ($9 + [-24])
	$14 = *($9)
	*($9) = [0]
	if ( ($14 == 0) ){ goto $label$9 }
	CALL $738($14)
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$8 }
	$9 = *(($15 + [216]))
	goto $label$6 
	
.LABEL $label$7
	$9 = $7
	
.LABEL $label$6
	*($8) = $7
	CALL $738($9)
	
.LABEL $label$5
	$3 = *($6 + [16])
	*($15 + [160]) = $3
	CALL eosio_assert(CALL $fimport$46($3), [3136])
	$11 = *($4 + [8])
	$12 = *($4)
	if ( ((uint_64)((int_64)$12 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$10 }
	$3 = (uint_64)$11 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$13 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	$13 = [0]
	
.LABEL $label$10
	CALL eosio_assert($13, [2896])
	CALL eosio_assert(((int_64)$12 > (int_64)0), [2928])
	*((($15 + [120]) + [32])) = [0]
	*($15 + [136]) = (int_64)-1
	*($15 + [144]) = (int_64)0
	$3 = *($0)
	*($15 + [120]) = $3
	*($15 + [128]) = $3
	*($15 + [156]) = [0]
	*($15 + [112]) = ($15 + [120])
	*($15 + [192]) = (uint_64)$11 >> (uint_64)(int_64)8)
	*($15 + [200]) = *($4 + [16])
	CALL $46(($15 + [72]), ($15 + [112]), ($15 + [192]))
	$9 = [0]
	$14 = *($15 + [76])
	if ( ($14 == 0) ){ goto $label$15 }
	$9 = ( $14 ? [0] : (int_64)(((int_64)((int_64)*($15 + [192]) ^ (int_64)(uint_64)*($14 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($15 + [200]) ^ (int_64)*(($14 + [16])))) == 0) )
	
.LABEL $label$15
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [1456])
	$7 = *($9)
	*(($13 = (($15 + [72]) + [32]))) = [0]
	*($15 + [80]) = $2
	*($15 + [88]) = (int_64)-1
	*($15 + [96]) = (int_64)0
	$3 = *($0)
	*($15 + [72]) = $3
	*($15 + [108]) = [0]
	*($15 + [40]) = $5
	*($15 + [36]) = ($15 + [160])
	*($15 + [32]) = ($15 + [176])
	*($15 + [248]) = $3
	CALL eosio_assert(((int_64)$3 == (int_64)CALL $fimport$16()), [432])
	*($15 + [196]) = ($15 + [32])
	*($15 + [192]) = ($15 + [72])
	*($15 + [200]) = ($15 + [248])
	*(($9 = CALL $737([72])) + [32 align=4]) = (int_64)0
	*($9 + [40 align=4]) = (int_64)0
	*($9 + [48 align=4]) = (int_64)0
	*($9 + [56]) = ($15 + [72])
	CALL $142(($15 + [192]), $9)
	*($15 + [264]) = $9
	$3 = *($9)
	*($15 + [192]) = $3
	$4 = *($9 + [60])
	*($15 + [188]) = $4
	$5 = ($15 + [100])
	$14 = *($5)
	if ( ((uint_32)$14 >= (uint_32)*($13)) ){ goto $label$17 }
	*($14 + [8]) = $3
	*($14 + [16]) = $4
	*($15 + [264]) = [0]
	*($14) = $9
	*($5) = ($14 + [24])
	goto $label$16 
	
.LABEL $label$17
	CALL $80(($15 + [96]), ($15 + [264]), ($15 + [192]), ($15 + [188]))
	
.LABEL $label$16
	$9 = *($15 + [264])
	*($15 + [264]) = [0]
	if ( ($9 == 0) ){ goto $label$18 }
	if ( ((*($9 + [44]) & [1]) == 0) ){ goto $label$19 }
	CALL $738(*(($9 + [52])))
	
.LABEL $label$19
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$20 }
	CALL $738(*(($9 + [40])))
	
.LABEL $label$20
	CALL $738($9)
	
.LABEL $label$18
	*(($13 = ($15 + [64]))) = [0]
	*($15 + [40]) = $2
	*($15 + [48]) = (int_64)-1
	*($15 + [56]) = (int_64)0
	$3 = *($0)
	*($15 + [32]) = $3
	*($15 + [68]) = [0]
	CALL eosio_assert(((int_64)$3 == (int_64)CALL $fimport$16()), [432])
	*(($9 = CALL $737([72])) + [56]) = ($15 + [32])
	*($9 + [8]) = (int_64)0
	*($9 + [24]) = $10
	*($9 + [32]) = $7
	*($9 + [40]) = $12
	*($9 + [48]) = (int_64)0
	*($9) = *($15 + [176])
	*($15 + [256]) = (($15 + [192]) + [45])
	*($15 + [252]) = ($15 + [192])
	*($15 + [248]) = ($15 + [192])
	CALL $81(($15 + [248]), $9)
	$12 = *($9)
	*($9 + [60]) = CALL db_store_i64(*($15 + [40]), (int_64)-3658914434178940928, $3, $12, ($15 + [192]), [45])
	if ( (uint_64)($12 <= *($15 + [48])) ){ goto $label$21 }
	*(($15 + [48])) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$21
	$12 = *($9)
	$11 = *((($15 + [32]) + [8]))
	*($15 + [264]) = *(($9 + [8]))
	*($9 + [64]) = CALL db_idx64_store($11, (int_64)-3658914434178940928, $3, $12, ($15 + [264]))
	*($15 + [248]) = $9
	$3 = *($9)
	*($15 + [192]) = $3
	$4 = *(($9 + [60]))
	*($15 + [264]) = $4
	$5 = ($15 + [60])
	$14 = *($5)
	if ( ((uint_32)$14 >= (uint_32)*($13)) ){ goto $label$23 }
	*($14 + [8]) = $3
	*($14 + [16]) = $4
	*($15 + [248]) = [0]
	*($14) = $9
	*($5) = ($14 + [24])
	goto $label$22 
	
.LABEL $label$23
	CALL $82(($15 + [56]), ($15 + [248]), ($15 + [192]), ($15 + [264]))
	
.LABEL $label$22
	$9 = *($15 + [248])
	*($15 + [248]) = [0]
	if ( ($9 == 0) ){ goto $label$24 }
	CALL $738($9)
	
.LABEL $label$24
	*(($15 + [24])) = [0]
	*($15 + [16]) = (int_64)0
	$9 = CALL strlen([2080])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$25 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$28 }
	*($15 + [16]) = ($9 << [1])
	$14 = (($15 + [16]) | [1])
	if ( $9 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$13 = (($9 + [16]) & [-16])
	$14 = CALL $737($13)
	*($15 + [16]) = ($13 | [1])
	*($15 + [24]) = $14
	*($15 + [20]) = $9
	
.LABEL $label$27
	CALL memcpy($14, [2080], $9)
	
.LABEL $label$26
	*(($14 + $9)) = [0]
	CALL _ZNSt3__19to_stringEm($15, $7)
	CALL $83($0, $10, ($15 + [16]), $15)
	if ( ((*($15) & [1]) == 0) ){ goto $label$29 }
	CALL $738(*($15 + [8]))
	
.LABEL $label$29
	if ( ((*($15 + [16]) & [1]) == 0) ){ goto $label$30 }
	CALL $738(*($15 + [24]))
	
.LABEL $label$30
	CALL _ZN11walexchange12wal_exchange6add_idEyyt($0, $2, *($15 + [176]), [3])
	$7 = *($15 + [56])
	if ( ($7 == 0) ){ goto $label$31 }
	$0 = ($15 + [60])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$33 }
	
.LOOP $label$34:
	$9 = ($9 + [-24])
	$14 = *($9)
	*($9) = [0]
	if ( ($14 == 0) ){ goto $label$35 }
	CALL $738($14)
	
.LABEL $label$35
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$34 }
	$9 = *(($15 + [56]))
	goto $label$32 
	
.LABEL $label$33
	$9 = $7
	
.LABEL $label$32
	*($0) = $7
	CALL $738($9)
	
.LABEL $label$31
	$7 = *($15 + [96])
	if ( ($7 == 0) ){ goto $label$36 }
	$0 = ($15 + [100])
	$14 = *($0)
	if ( ((int_32)$14 == (int_32)$7) ){ goto $label$38 }
	
.LOOP $label$39:
	$14 = ($14 + [-24])
	$9 = *($14)
	*($14) = [0]
	if ( ($9 == 0) ){ goto $label$40 }
	if ( ((*($9 + [44]) & [1]) == 0) ){ goto $label$41 }
	CALL $738(*(($9 + [52])))
	
.LABEL $label$41
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$42 }
	CALL $738(*(($9 + [40])))
	
.LABEL $label$42
	CALL $738($9)
	
.LABEL $label$40
	if ( ((int_32)$7 != (int_32)$14) ){ goto $label$39 }
	$9 = *(($15 + [96]))
	goto $label$37 
	
.LABEL $label$38
	$9 = $7
	
.LABEL $label$37
	*($0) = $7
	CALL $738($9)
	
.LABEL $label$36
	$7 = *($15 + [144])
	if ( ($7 == 0) ){ goto $label$43 }
	$0 = ($15 + [148])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$45 }
	
.LOOP $label$46:
	$9 = ($9 + [-24])
	$14 = *($9)
	*($9) = [0]
	if ( ($14 == 0) ){ goto $label$47 }
	CALL $738($14)
	
.LABEL $label$47
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$46 }
	$9 = *(($15 + [144]))
	goto $label$44 
	
.LABEL $label$45
	$9 = $7
	
.LABEL $label$44
	*($0) = $7
	CALL $738($9)
	
.LABEL $label$43
	*([0] + [4]) = ($15 + [272])
	return (unreachable)
	
.LABEL $label$25
	CALL $739(($15 + [16]))
}

int_32 .FUNC _ZN11walexchange24contract_account_manager19get_account_by_userEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	$1 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh($0, $1, [0])
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($0)
	*($7 + [8]) = $5
	*($7 + [16]) = $5
	*($7 + [44]) = [0]
	$2 = CALL $11(($7 + [8]), $1, [592])
	$3 = *($7 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	$6 = ($7 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $738($4)
	
.LABEL $label$5
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($7 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $3
	
.LABEL $label$2
	*($6) = $3
	CALL $738($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [48])
	return $2
}

int_32 .FUNC _ZN11walexchange24contract_account_manager17get_account_by_idEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($0)
	*($7 + [8]) = $5
	*($7 + [16]) = $5
	*($7 + [44]) = [0]
	$2 = CALL $11(($7 + [8]), $1, [592])
	$3 = *($7 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	$6 = ($7 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $738($4)
	
.LABEL $label$5
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($7 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $3
	
.LABEL $label$2
	*($6) = $3
	CALL $738($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [48])
	return $2
}

void .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = (*([0] + [4]) - [32])
	$9 = $8
	*([0] + [4]) = $8
	$7 = *($0 + [4])
	$2 = *($7)
	*($1 + [16]) = [0]
	*($1) = *($2)
	*($1 + [8]) = (int_64)0
	$2 = *($0)
	*($1 + [24]) = *(*($7 + [4]))
	CALL $740(($1 + [32]), *($7 + [8]))
	CALL $743(($1 + [44]), [1568])
	$7 = *($1 + [32])
	$3 = ( *(($1 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($3 + [25])
	$6 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	$3 = *(($1 + [44]))
	$3 = ( *(($1 + [48])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$7 = ($3 + $7)
	$6 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$2:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$2 }
	if ( ($7 <= [513]) ){ goto $label$4 }
	$8 = CALL malloc($7)
	goto $label$3 
	
.LABEL $label$4
	$8 = ($8 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$3
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = ($8 + $7)
	CALL $99($9, $1)
	$6 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($2 + [8]), (int_64)-2039333636190801408, *(*($0 + [8])), $6, $8, $7)
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$6 = *(($2 + [8]))
	$4 = *(*(($0 + [8])))
	$5 = *($1)
	*($9 + [24]) = *(($1 + [16]))
	*($9 + [16]) = *(($1 + [8]))
	*($1 + [64]) = CALL db_idx128_store($6, (int_64)-2039333636190801408, $4, $5, ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
}

void .FUNC $702 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [272])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($2 + [86]), *($3 + [4]), [2])
	*($3 + [4]) = (*($3 + [4]) + [2])
	$3 = *($0)
	CALL $101(*($1), ($3 + [88]))
	*($4) = *($1)
	*($4 + [12]) = ($3 + [101])
	*($4 + [8]) = ($3 + [100])
	*($4 + [16]) = ($3 + [102])
	*($4 + [20]) = ($3 + [103])
	*($4 + [24]) = ($3 + [104])
	*($4 + [28]) = ($3 + [105])
	*($4 + [32]) = ($3 + [106])
	*($4 + [36]) = ($3 + [107])
	*($4 + [40]) = ($3 + [108])
	*($4 + [44]) = ($3 + [109])
	*($4 + [48]) = ($3 + [110])
	*($4 + [52]) = ($3 + [111])
	*($4 + [56]) = ($3 + [112])
	*($4 + [60]) = ($3 + [113])
	*($4 + [64]) = ($3 + [114])
	*($4 + [68]) = ($3 + [115])
	*($4 + [72]) = ($3 + [116])
	*($4 + [76]) = ($3 + [117])
	*($4 + [80]) = ($3 + [118])
	*($4 + [84]) = ($3 + [119])
	*($4 + [88]) = ($3 + [120])
	*($4 + [92]) = ($3 + [121])
	*($4 + [96]) = ($3 + [122])
	*($4 + [100]) = ($3 + [123])
	*($4 + [104]) = ($3 + [124])
	*($4 + [108]) = ($3 + [125])
	*($4 + [112]) = ($3 + [126])
	*($4 + [116]) = ($3 + [127])
	*($4 + [120]) = ($3 + [128])
	*($4 + [124]) = ($3 + [129])
	*($4 + [128]) = ($3 + [130])
	*($4 + [132]) = ($3 + [131])
	*($4 + [136]) = ($3 + [132])
	*($4 + [140]) = ($3 + [133])
	*($4 + [144]) = ($3 + [134])
	*($4 + [148]) = ($3 + [135])
	*($4 + [152]) = ($3 + [136])
	*($4 + [156]) = ($3 + [137])
	*($4 + [160]) = ($3 + [138])
	*($4 + [164]) = ($3 + [139])
	*($4 + [168]) = ($3 + [140])
	*($4 + [172]) = ($3 + [141])
	*($4 + [176]) = ($3 + [142])
	*($4 + [180]) = ($3 + [143])
	*($4 + [184]) = ($3 + [144])
	*($4 + [188]) = ($3 + [145])
	*($4 + [192]) = ($3 + [146])
	*($4 + [196]) = ($3 + [147])
	*($4 + [200]) = ($3 + [148])
	*($4 + [204]) = ($3 + [149])
	*($4 + [208]) = ($3 + [150])
	*($4 + [212]) = ($3 + [151])
	*($4 + [216]) = ($3 + [152])
	*($4 + [220]) = ($3 + [153])
	*($4 + [224]) = ($3 + [154])
	*($4 + [228]) = ($3 + [155])
	*($4 + [232]) = ($3 + [156])
	*($4 + [236]) = ($3 + [157])
	*($4 + [240]) = ($3 + [158])
	*($4 + [244]) = ($3 + [159])
	*($4 + [248]) = ($3 + [160])
	*($4 + [252]) = ($3 + [161])
	*($4 + [256]) = ($3 + [162])
	*($4 + [260]) = ($3 + [163])
	*($4 + [264]) = ($3 + [164])
	*($4 + [268]) = ($3 + [165])
	CALL $669(($4 + [8]), $4)
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($3 + [166]), *($1 + [4]), [2])
	*($1 + [4]) = (*($1 + [4]) + [2])
	*([0] + [4]) = ($4 + [272])
}

int_32 .FUNC $98 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [60]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2320])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-2039333636190801408)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2256])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2256])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $97(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $91(CALL $91($0, ($1 + [32])), ($1 + [44]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	$2 = *($0)
	$3 = *(*($0 + [4]))
	*($1) = *($3)
	*(($4 = ($1 + [24]))) = *(($3 + [24]))
	*(($5 = ($1 + [16]))) = *(($3 + [16]))
	*(($6 = ($1 + [8]))) = *(($3 + [8]))
	*($7 + [31]) = *($1)
	CALL eosio_assert([1], [496])
	CALL memcpy($7, ($7 + [31]), [1])
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 | [1]), $6, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 | [9]), $5, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 + [17]), $4, [8])
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)4982871455592087552, *(*($0 + [8])), (int_64)4982871455592087552, $7, [25])
	if ( ((uint_64)*($2 + [16]) > (uint_64)(int_64)4982871455592087552) ){ goto $label$1 }
	*(($2 + [16])) = (int_64)4982871455592087553
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $95 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [544])
	CALL memcpy(($3 + [15]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1) = ((int_32)*($3 + [15]) != (int_32)[0])
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($3 + [16])
	return $0
}

int_32 .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $737([72])) + [32 align=4]) = (int_64)0
	*($6 + [40 align=4]) = (int_64)0
	*($6 + [48 align=4]) = (int_64)0
	*($6 + [56]) = $0
	CALL $100(($8 + [32]), $6)
	*($6 + [64]) = [-1]
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [60])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $80(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [44]) & [1]) == 0) ){ goto $label$10 }
	CALL $738(*(($4 + [52])))
	
.LABEL $label$10
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $738(*(($4 + [40])))
	
.LABEL $label$11
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [496])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [496])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [496])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [496])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $92 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [896])
	$3 = *($3)
	*($1) = *($3)
	*(($4 = ($1 + [24]))) = *(($3 + [24]))
	*(($5 = ($1 + [16]))) = *(($3 + [16]))
	*(($6 = ($1 + [8]))) = *(($3 + [8]))
	CALL eosio_assert([1], [960])
	*($7 + [31]) = *($1)
	CALL eosio_assert([1], [496])
	CALL memcpy($7, ($7 + [31]), [1])
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 | [1]), $6, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 | [9]), $5, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 + [17]), $4, [8])
	CALL db_update_i64(*($1 + [36]), $2, $7, [25])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)4982871455592087552) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)4982871455592087553
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $93 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [432])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $737([48])) + [32]) = $1
	CALL $94(($7 + [16]), $3)
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)4982871455592087552
	$4 = *($3 + [36])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)4982871455592087552
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $95(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $738($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $732 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [20326]) == 0) ){ goto $label$2 }
	$7 = *([0] + [20328])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [20326]) = [1]
	$7 = ($7 << [16])
	*([0] + [20328]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [20328])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [20328]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [20326]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [20326]) = [1]
	$3 = ($3 << [16])
	*([0] + [20328]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [20328])
	
.LABEL $label$8
	*([0] + [20328]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC realloc (int_32 $0, int_32 $1)
{
	return CALL $734([11840], $0, $1)
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $731([11840], $0)
}

int_32 .FUNC $731 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $732($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [20240])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [20224])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [20032]
	$1 = (((int_32)$2 * (int_32)[12]) + [20032])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $737 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [20332])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $734 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	if ( ($2 == 0) ){ goto $label$5 }
	*($7 + [12]) = [0]
	$5 = (($2 + [4]) & [7])
	$3 = ( (($2 + [8]) - $5) ? $2 : $5 )
	if ( ($1 == 0) ){ goto $label$2 }
	$5 = *($0 + [8384])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$2 }
	$2 = ($0 + [8192])
	$4 = ($2 + ((int_32)$5 * (int_32)[12]))
	
.LOOP $label$6:
	$5 = *(($2 + [4]))
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((uint_32)($5 + [4]) > (uint_32)$1) ){ goto $label$7 }
	if ( ((uint_32)($5 + *($2)) > (uint_32)$1) ){ goto $label$4 }
	
.LABEL $label$7
	$2 = ($2 + [12])
	if ( ($2 <= $4) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$5
	$4 = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$5 = *($0 + [8384])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$1 }
	$2 = ($0 + [8192])
	$0 = ($2 + ((int_32)$5 * (int_32)[12]))
	
.LOOP $label$8:
	$5 = *(($2 + [4]))
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ((uint_32)($5 + [4]) > (uint_32)$1) ){ goto $label$9 }
	if ( ((uint_32)($5 + *($2)) > (uint_32)$1) ){ goto $label$3 }
	
.LABEL $label$9
	$2 = ($2 + [12])
	if ( ($2 <= $0) ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$4
	$4 = CALL $735($2, $1, $3, ($7 + [12]))
	if ( $4 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	*(($1 = ($1 + [-4]))) = (*($1) & [2147483647])
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	$6 = CALL $731($0, $3)
	if ( ($6 == 0) ){ goto $label$1 }
	$2 = *($7 + [12])
	$2 = ( $3 ? $2 : ($3 <= $2) )
	if ( ($2 == 0) ){ goto $label$10 }
	CALL memcpy($6, $1, $2)
	if ( ($1 == 0) ){ goto $label$10 }
	$5 = *($0 + [8384])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$10 }
	$2 = ($0 + [8192])
	$4 = ($2 + ((int_32)$5 * (int_32)[12]))
	
.LOOP $label$11:
	$5 = *(($2 + [4]))
	if ( ($5 == 0) ){ goto $label$10 }
	if ( ((uint_32)($5 + [4]) > (uint_32)$1) ){ goto $label$13 }
	if ( ((uint_32)($5 + *($2)) > (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$13
	$2 = ($2 + [12])
	if ( ($2 <= $4) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	*(($1 = ($1 + [-4]))) = (*($1) & [2147483647])
	
.LABEL $label$10
	$4 = $6
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [16])
	return $4
}

int_32 .FUNC $735 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$9 = *($0)
	$5 = ($1 + [-4])
	$6 = *($5)
	$7 = ($6 & [2147483647])
	*($3) = $7
	$4 = *($0 + [4])
	$9 = ($9 + $4)
	$8 = ($1 + $7)
	if ( ((uint_32)$8 <= (uint_32)$9) ){ goto $label$1 }
	*($3) = [0]
	return [0]
	
.LABEL $label$1
	$10 = [0]
	if ( (($9 - $2) <= $1) ){ goto $label$2 }
	if ( ((uint_32)$7 <= (uint_32)$2) ){ goto $label$4 }
	*(($1 + $2)) = (($6 - $2) & [2147483647])
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)($4 + *($0 + [8]))) ){ goto $label$5 }
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	if ( (($9 - $1) <= $2) ){ goto $label$2 }
	if ( ((uint_32)$7 >= (uint_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($1 + $7)
	if ( ((uint_32)$0 >= (uint_32)$9) ){ goto $label$6 }
	$0 = *($0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	$7 = (($7 + ($0 & [2147483647])) + [4])
	if ( ($7 <= $2) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ($7 <= $2) ){ goto $label$2 }
	$0 = ((*($5) & [-2147483648]) | $2)
	*($5) = $0
	if ( ((uint_32)$7 <= (uint_32)$2) ){ goto $label$8 }
	*(($1 + $2)) = ((([2147483644] - $2) + $7) & [2147483647])
	$0 = *($5)
	
.LABEL $label$8
	*($5) = ($0 | [-2147483648])
	goto $label$3 
	
.LABEL $label$5
	*($5) = ((*($5) & [-2147483648]) | $2)
	*(($0 = ($0 + [8]))) = (($2 - *($3)) + *($0))
	
.LABEL $label$3
	$10 = $1
	
.LABEL $label$2
	return $10
}

void .FUNC $738 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC $739 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $260 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3661804062627594240, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $214($0, $5)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN11walexchange11rex_manager15add_delegate_toEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = [0]
	$5 = *($0)
	*($8 + [8]) = $5
	$6 = *($0 + [8])
	*($8 + [16]) = $6
	*(($8 + [36])) = [0]
	*((($8 + [8]) + [32])) = [0]
	$4 = CALL db_find_i64($5, $6, (int_64)5378043540646199296, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $287(($8 + [8]), $4)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)($8 + [8])), [288])
	CALL eosio_assert([1], [1328])
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)($8 + [8])), [848])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$16()), [896])
	*($0 + [8]) = $2
	$1 = *($0)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($8 + [48]), $0, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($8 + [48]) | [8]), ($0 + [8]), [8])
	CALL db_update_i64(*($0 + [20]), (int_64)0, ($8 + [48]), [16])
	$0 = (($8 + [8]) + [16])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$3 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$3 = *($8 + [32])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$5 = *($0)
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([32])) + [16]) = ($8 + [8])
	*($0 + [8]) = $2
	*($0) = $1
	CALL eosio_assert([1], [496])
	CALL memcpy(($8 + [48]), $0, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($8 + [48]) | [8]), ($0 + [8]), [8])
	$1 = *($0)
	$3 = CALL db_store_i64(*((($8 + [8]) + [8])), (int_64)5378043540646199296, $5, $1, ($8 + [48]), [16])
	*($0 + [20]) = $3
	$4 = (($8 + [8]) + [16])
	if ( (uint_64)($1 <= *($4)) ){ goto $label$5 }
	*($4) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($8 + [72]) = $0
	$1 = *($0)
	*($8 + [48]) = $1
	*($8 + [68]) = $3
	$7 = ($8 + [36])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($8 + [40]))) ){ goto $label$7 }
	*($4 + [8]) = $1
	*($4 + [16]) = $3
	*($8 + [72]) = [0]
	*($4) = $0
	*($7) = ($4 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $288(($8 + [32]), ($8 + [72]), ($8 + [48]), ($8 + [68]))
	
.LABEL $label$6
	$0 = *($8 + [72])
	*($8 + [72]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	CALL $738($0)
	
.LABEL $label$3
	$3 = *($8 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $738($4)
	
.LABEL $label$11
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($8 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $3
	
.LABEL $label$8
	*($7) = $3
	CALL $738($0)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [80])
}

int_32 .FUNC $354 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = [0]
	if ( ((int_32)*($0) != (int_32)*($1)) ){ goto $label$1 }
	if ( ((int_32)*($0 + [4]) != (int_32)*($1 + [4])) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [5])) != (int_32)*(($1 + [5]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [6])) != (int_32)*(($1 + [6]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [7])) != (int_32)*(($1 + [7]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [8])) != (int_32)*(($1 + [8]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [9])) != (int_32)*(($1 + [9]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [10])) != (int_32)*(($1 + [10]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [11])) != (int_32)*(($1 + [11]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [12])) != (int_32)*(($1 + [12]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [13])) != (int_32)*(($1 + [13]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [14])) != (int_32)*(($1 + [14]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [15])) != (int_32)*(($1 + [15]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [16])) != (int_32)*(($1 + [16]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [17])) != (int_32)*(($1 + [17]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [18])) != (int_32)*(($1 + [18]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [19])) != (int_32)*(($1 + [19]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [20])) != (int_32)*(($1 + [20]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [21])) != (int_32)*(($1 + [21]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [22])) != (int_32)*(($1 + [22]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [23])) != (int_32)*(($1 + [23]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [24])) != (int_32)*(($1 + [24]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [25])) != (int_32)*(($1 + [25]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [26])) != (int_32)*(($1 + [26]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [27])) != (int_32)*(($1 + [27]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [28])) != (int_32)*(($1 + [28]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [29])) != (int_32)*(($1 + [29]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [30])) != (int_32)*(($1 + [30]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [31])) != (int_32)*(($1 + [31]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [32])) != (int_32)*(($1 + [32]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [33])) != (int_32)*(($1 + [33]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [34])) != (int_32)*(($1 + [34]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [35])) != (int_32)*(($1 + [35]))) ){ goto $label$1 }
	$2 = ((int_32)*(($0 + [36])) == (int_32)*(($1 + [36])))
	
.LABEL $label$1
	return $2
}

void .FUNC _ZN11walexchange12wal_exchange6unbindEyRKN5eosio10public_keyE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [160])
	*([0] + [4]) = $7
	CALL require_auth($1)
	*($7 + [112]) = *($0)
	$1 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($7 + [112]), $1, [0])
	*($7 + [104]) = $1
	*((($7 + [64]) + [32])) = [0]
	*($7 + [80]) = (int_64)-1
	*($7 + [88]) = (int_64)0
	$5 = *($0)
	*($7 + [64]) = $5
	*($7 + [72]) = $5
	$4 = CALL $19(($7 + [64]), $1, [592])
	CALL memset((($7 + [24]) | [4]), [0], [36])
	*($7 + [24]) = [0]
	CALL eosio_assert(CALL $347($2, ($7 + [24])), [6256])
	*($7 + [24]) = $2
	CALL $356(($7 + [64]), $4, ($7 + [24]))
	*(($4 = (($7 + [24]) + [32]))) = [0]
	*($7 + [40]) = (int_64)-1
	*($7 + [48]) = (int_64)0
	$1 = *($0)
	*($7 + [24]) = $1
	*($7 + [32]) = $1
	*($7 + [60]) = [0]
	*($7 + [16]) = $2
	*($7 + [12]) = ($7 + [104])
	*($7 + [8]) = ($7 + [24])
	*($7 + [152]) = $1
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$16()), [432])
	*($7 + [132]) = ($7 + [8])
	*($7 + [128]) = ($7 + [24])
	*($7 + [136]) = ($7 + [152])
	*(($2 = CALL $737([80])) + [16]) = [0]
	*($2 + [60]) = ($7 + [24])
	CALL $357(($7 + [128]), $2)
	*($7 + [144]) = $2
	$1 = *($2)
	*($7 + [128]) = $1
	$3 = *($2 + [64])
	*($7 + [124]) = $3
	$6 = ($7 + [52])
	$0 = *($6)
	if ( ((uint_32)$0 >= (uint_32)*($4)) ){ goto $label$2 }
	*($0 + [8]) = $1
	*($0 + [16]) = $3
	*($7 + [144]) = [0]
	*($0) = $2
	*($6) = ($0 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $54(($7 + [48]), ($7 + [144]), ($7 + [128]), ($7 + [124]))
	
.LABEL $label$1
	$2 = *($7 + [144])
	*($7 + [144]) = [0]
	if ( ($2 == 0) ){ goto $label$3 }
	CALL $738($2)
	
.LABEL $label$3
	$4 = *($7 + [48])
	if ( ($4 == 0) ){ goto $label$4 }
	$3 = ($7 + [52])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $738($0)
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$7 }
	$2 = *(($7 + [48]))
	goto $label$5 
	
.LABEL $label$6
	$2 = $4
	
.LABEL $label$5
	*($3) = $4
	CALL $738($2)
	
.LABEL $label$4
	$3 = *($7 + [88])
	if ( ($3 == 0) ){ goto $label$9 }
	$6 = ($7 + [92])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$13 }
	$4 = *($0 + [12])
	if ( ($4 == 0) ){ goto $label$14 }
	*(($0 + [16])) = $4
	CALL $738($4)
	
.LABEL $label$14
	CALL $738($0)
	
.LABEL $label$13
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$12 }
	$2 = *(($7 + [88]))
	goto $label$10 
	
.LABEL $label$11
	$2 = $3
	
.LABEL $label$10
	*($6) = $3
	CALL $738($2)
	
.LABEL $label$9
	*([0] + [4]) = ($7 + [160])
}

void .FUNC $356 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [896])
	$3 = *($1)
	$6 = [0]
	$8 = ($1 + [16])
	$7 = *($1 + [12])
	if ( ((int_32)$7 == (int_32)*($8)) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( CALL $354($7, *($2)) ){ goto $label$2 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)*($8)) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($7 + [40])
	$6 = ($1 + [16])
	$2 = (*($6) - $5)
	$4 = ((int_32)$2 / (int_32)[40])
	if ( ($2 == 0) ){ goto $label$4 }
	CALL memmove($7, $5, $2)
	
.LABEL $label$4
	*($6) = ($7 + ((int_32)$4 * (int_32)[40]))
	$6 = [1]
	
.LABEL $label$1
	CALL eosio_assert($6, [6352])
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [960])
	$8 = *($1 + [12])
	$2 = *($8)
	$9 = (CASTING uint_64)(uint_32 ((int_32)($2 - $8) / (int_32)[40]))
	$7 = [10]
	
.LOOP $label$5:
	$7 = ($7 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = ($7 + [33])
	$9 = *($8)
	
.LOOP $label$8:
	$7 = ($7 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$8 }
	$8 = ($8 + [40])
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ($7 <= [513]) ){ goto $label$10 }
	$8 = CALL malloc($7)
	goto $label$9 
	
.LABEL $label$10
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$9
	*($10 + [4]) = $8
	*($10) = $8
	*($10 + [8]) = ($8 + $7)
	CALL $352($10, $1)
	CALL db_update_i64(*($1 + [28]), (int_64)0, $8, $7)
	if ( ($7 <= [513]) ){ goto $label$11 }
	CALL free($8)
	
.LABEL $label$11
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $72 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [80]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6497942558305103360, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $107($0, $5)
	CALL eosio_assert(((int_32)*($6 + [80]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $357 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$4 = (*([0] + [4]) - [16])
	$13 = $4
	*([0] + [4]) = $4
	$2 = *($0)
	$11 = *($0 + [4])
	$12 = *($11)
	$10 = *($12 + [16])
	if ( ((int_64)$10 != (int_64)-1) ){ goto $label$1 }
	$10 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($12), *($12 + [8]), (int_64)-3020370205707976704, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	CALL $52($12, $8)
	*($13 + [12]) = [0]
	*($13 + [8]) = $12
	$10 = *(*(CALL $358(($13 + [8])) + [4]))
	$10 = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($12 + [16])) = $10
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($10 <= (int_64)-2), [2192])
	*($1) = *(($12 + [16]))
	*($1 + [8]) = *(*($11 + [4]))
	CALL memcpy(($1 + [16]), *($11 + [8]), [37])
	*($1 + [56]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$3 = ($1 + [56])
	$12 = ($1 + [8])
	$10 = *($1 + [16])
	$8 = [53]
	
.LOOP $label$3:
	$8 = ($8 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$3 }
	if ( ($8 <= [513]) ){ goto $label$5 }
	$9 = CALL malloc($8)
	goto $label$4 
	
.LABEL $label$5
	$9 = ($4 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$8 > (int_32)[7]), [496])
	CALL memcpy($9, $1, [8])
	CALL eosio_assert(((int_32)($8 + [-8]) > (int_32)[7]), [496])
	CALL memcpy(($9 + [8]), $12, [8])
	$12 = ($9 + [16])
	$4 = ($9 + $8)
	$10 = *(($1 + [16]))
	
.LOOP $label$6:
	$11 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$5 = ((int_64)$10) != (int_64)0
	*($13 + [8]) = (($5) << [7]) | ($11 & [127]))
	CALL eosio_assert(((int_32)($4 - $12) > (int_32)[0]), [496])
	CALL memcpy($12, ($13 + [8]), [1])
	$12 = ($12 + [1])
	if ( $5 ){ goto $label$6 }
	$11 = [20]
	
.LOOP $label$7:
	CALL eosio_assert(((int_32)($4 - $12) > (int_32)[0]), [496])
	CALL memcpy($12, ($1 + $11), [1])
	$12 = ($12 + [1])
	$11 = ($11 + [1])
	if ( ((int_32)$11 != (int_32)[53]) ){ goto $label$7 }
	CALL eosio_assert(((int_32)($4 - $12) > (int_32)[3]), [496])
	CALL memcpy($12, $3, [4])
	$10 = *($1)
	*($1 + [64]) = CALL db_store_i64(*($2 + [8]), (int_64)-3020370205707976704, *(*($0 + [8])), $10, $9, $8)
	if ( ($8 <= [513]) ){ goto $label$8 }
	CALL free($9)
	
.LABEL $label$8
	if ( (uint_64)($10 <= *($2 + [16])) ){ goto $label$9 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$12 = ($2 + [8])
	$10 = *($12)
	$11 = *(($0 + [8]))
	$6 = *($11)
	$7 = *($1)
	*($13 + [8]) = *(($1 + [56]))
	*($1 + [68]) = CALL db_idx64_store($10, (int_64)-3020370205707976704, $6, $7, ($13 + [8]))
	$10 = *($11)
	$6 = *($12)
	$7 = *($1)
	*($13 + [8]) = *(($1 + [8]))
	*(($1 + [72])) = CALL db_idx64_store($6, (int_64)-3020370205707976703, $10, $7, ($13 + [8]))
	*([0] + [4]) = ($13 + [16])
}

void .FUNC $73 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $350 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	$8 = $9
	*([0] + [4]) = $9
	$5 = *($0 + [4])
	$6 = *($5)
	*($1 + [8]) = [256]
	*($1) = *($6)
	$2 = *($0)
	$6 = *($5 + [4])
	$5 = ($1 + [16])
	$4 = *($5)
	if ( ((int_32)$4 == (int_32)*(($1 + [20]))) ){ goto $label$2 }
	CALL memcpy($4, $6, [40])
	$4 = (*($5) + [40])
	*($5) = $4
	$3 = ($1 + [12])
	goto $label$1 
	
.LABEL $label$2
	$3 = ($1 + [12])
	CALL $351($3, $6)
	$4 = *($5)
	
.LABEL $label$1
	$6 = *($3)
	$7 = (CASTING uint_64)(uint_32 ((int_32)($4 - $6) / (int_32)[40]))
	$5 = [10]
	
.LOOP $label$3:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = ($5 + [33])
	$7 = *($6)
	
.LOOP $label$6:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$6 }
	$6 = ($6 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$4
	if ( ($5 <= [513]) ){ goto $label$8 }
	$6 = CALL malloc($5)
	goto $label$7 
	
.LABEL $label$8
	$6 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$7
	*($8 + [4]) = $6
	*($8) = $6
	*($8 + [8]) = ($6 + $5)
	CALL $352($8, $1)
	$7 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-3020384829779738624, *(*($0 + [8])), $7, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$9 }
	CALL free($6)
	
.LABEL $label$9
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$10 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $212 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [784])
	$6 = *($0 + [4])
	$7 = *($6 + [64])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-3660983113619603456, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [64]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [56]) == (int_32)$2), [288])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $226($2, CALL $fimport$19(*($2), *($2 + [8]), (int_64)-3660983113619603456, $3))
	CALL eosio_assert(((int_32)*($7 + [56]) == (int_32)$2), [288])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [64])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC _Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($3 & [1])
	$3 = *($1)
	$6 = ( *($1 + [4]) ? uint_32($3 >> [1]) : $3 )
	if ( ($6 == 0) ){ goto $label$3 }
	$2 = ( *($1 + [8]) ? ($1 + [1]) : $3 )
	$3 = [0]
	
.LOOP $label$5:
	if ( ((int_32)*(($2 + $3)) != (int_32)[32]) ){ goto $label$4 }
	$3 = ($3 + [1])
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$3 }
	
.LOOP $label$6:
	if ( ($6 == 0) ){ goto $label$2 }
	$5 = ($2 + $6)
	$4 = ($6 + [-1])
	$6 = $4
	if ( ((int_32)*(($5 + [-1])) == (int_32)[32]) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	CALL $768($0, $1, $3, (([1] - $3) + $4), $1)
	return 
	
.LABEL $label$3
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$3 = CALL strlen([1568])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$9 }
	*($0) = ($3 << [1])
	$6 = ($0 + [1])
	if ( $3 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$2 = (($3 + [16]) & [-16])
	$6 = CALL $737($2)
	*($0) = ($2 | [1])
	*($0 + [8]) = $6
	*($0 + [4]) = $3
	
.LABEL $label$8
	CALL memcpy($6, [1568], $3)
	
.LABEL $label$7
	*(($6 + $3)) = [0]
	return 
	
.LABEL $label$2
	CALL $768($0, $1, $3, [-1], $1)
	return (unreachable)
	
.LABEL $label$1
	CALL $739($0)
}

void .FUNC $351 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$2 = ((int_32)($5 - $4) / (int_32)[40])
	$7 = ($2 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[40])
	if ( ((uint_32)$3 > (uint_32)[53687090]) ){ goto $label$4 }
	$6 = ($3 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $737(((int_32)$6 * (int_32)[40]))
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = ($5 - $4)
	$2 = CALL memcpy(($7 + ((int_32)$2 * (int_32)[40])), $1, [40])
	$1 = ($2 + ((int_32)((int_32)$5 / (int_32)[-40]) * (int_32)[40]))
	$6 = ($7 + ((int_32)$6 * (int_32)[40]))
	$7 = ($2 + [40])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $4, $5)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC _ZN11walexchange13order_manager12update_orderEyx (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	*($7 + [32]) = [0]
	*($7 + [8]) = *($0)
	*($7 + [16]) = *($0 + [8])
	*($7 + [24]) = (int_64)-1
	*(($7 + [36])) = [0]
	*(($7 + [40])) = [0]
	*($7 + [44]) = [0]
	$6 = CALL $190(($7 + [8]), $1, [4944])
	CALL eosio_assert((((int_64)$2 > (int_64)-1) & (uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)), [4976])
	$5 = ($6 + [8])
	$2 = (int_64)
	CALL eosio_assert((((int_64)$2(*($5) - $2)) > (int_64)-1) & (uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)), [5024])
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)($7 + [8])), [848])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$16()), [896])
	$4 = *($5)
	*($5) = $2
	$3 = ($6 + [16])
	*($7 + [72]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 ((int_64)$4 > (int_64)0)) << (int_64)32) | (int_64)*($3))
	$4 = *($6)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 + [48]), $6, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($7 + [48]) | [8]), $5, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($7 + [48]) + [16]), $3, [4])
	CALL db_update_i64(*($6 + [28]), (int_64)0, ($7 + [48]), [20])
	if ( (uint_64)($4 <= *($7 + [24])) ){ goto $label$1 }
	*((($7 + [8]) + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($7 + [88]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 ((int_64)*($5) > (int_64)0)) << (int_64)32) | (int_64)*($3))
	if ( (CALL memcmp(($7 + [72]), ($7 + [88]), [8]) == 0) ){ goto $label$2 }
	$5 = ($6 + [32])
	$6 = *($5)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$3 }
	$6 = CALL db_idx64_find_primary(*($7 + [8]), *(($7 + [16])), (int_64)4508390640157634048, ($7 + [80]), $4)
	*($5) = $6
	
.LABEL $label$3
	CALL db_idx64_update($6, (int_64)0, ($7 + [88]))
	
.LABEL $label$2
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$4 }
	CALL _ZN11walexchange13order_manager15try_clear_orderEy($0, $1)
	
.LABEL $label$4
	$0 = *($7 + [32])
	if ( ($0 == 0) ){ goto $label$5 }
	$3 = ($7 + [36])
	$6 = *($3)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$7 }
	
.LOOP $label$8:
	$6 = ($6 + [-24])
	$5 = *($6)
	*($6) = [0]
	if ( ($5 == 0) ){ goto $label$9 }
	CALL $738($5)
	
.LABEL $label$9
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$8 }
	$6 = *(($7 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$6 = $0
	
.LABEL $label$6
	*($3) = $0
	CALL $738($6)
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [96])
}

void .FUNC _ZN11walexchange11rex_manager14rm_delegate_toEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [16]) = (int_64)-1
	*($7 + [24]) = [0]
	$4 = *($0)
	*($7) = $4
	$5 = *($0 + [8])
	*($7 + [8]) = $5
	*(($7 + [28])) = [0]
	*(($7 + [32])) = [0]
	$0 = [0]
	$3 = CALL db_find_i64($4, $5, (int_64)5378043540646199296, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $287($7, $3)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)$7), [288])
	
.LABEL $label$1
	$3 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($3, [9040])
	CALL eosio_assert($3, [736])
	CALL eosio_assert($3, [784])
	$3 = CALL db_next_i64(*($0 + [20]), ($7 + [40]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	CALL $287($7, $3)
	
.LABEL $label$2
	CALL $495($7, $0)
	$2 = *($7 + [24])
	if ( ($2 == 0) ){ goto $label$3 }
	$6 = ($7 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $738($3)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($7 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($6) = $2
	CALL $738($0)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $352 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), $1, [8])
	$4 = (*($0 + [4]) + [8])
	*($0 + [4]) = $4
	*($7 + [14]) = *($1 + [8])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[0]), [496])
	CALL memcpy(*($0 + [4]), ($7 + [14]), [1])
	$4 = (*($0 + [4]) + [1])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[0]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [9]), [1])
	$5 = (*($0 + [4]) + [1])
	*($0 + [4]) = $5
	$6 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [16])) - *($1 + [12])) / (int_32)[40]))
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [496])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $3 ){ goto $label$1 }
	$5 = *(($1 + [16]))
	$4 = *(($1 + [12]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$3:
	CALL $353($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC _ZN11walexchange13stake_manager11adjust_statEyx (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	if ( (int_64)($2 == 0) ){ goto $label$1 }
	*((($7 + [8]) + [32])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($0)
	*($7 + [8]) = $5
	*($7 + [16]) = $5
	$4 = CALL db_find_i64($5, $5, (int_64)-4157660957582557184, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	$0 = CALL $270(($7 + [8]), $4)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)($7 + [8])), [288])
	$5 = ((int_64)*($0 + [8]) + (int_64)$2)
	CALL eosio_assert((((int_64)$5 > (int_64)-1) & (uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)), [5424])
	if ( ((int_64)((int_64)*($0 + [8]) + (int_64)$2) <= (int_64)0) ){ goto $label$6 }
	CALL eosio_assert([1], [1328])
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)($7 + [8])), [848])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$16()), [896])
	*($0 + [8]) = ((int_64)*($0 + [8]) + (int_64)$2)
	$2 = *($0)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 + [64]), $0, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($7 + [64]) | [8]), ($0 + [8]), [8])
	CALL db_update_i64(*($0 + [20]), (int_64)0, ($7 + [64]), [16])
	$0 = (($7 + [8]) + [16])
	if ( (uint_64)($2 <= *($0)) ){ goto $label$3 }
	*($0) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	$3 = *($7 + [32])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$5 = *($0)
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([32])) + [16]) = ($7 + [8])
	*($0 + [8]) = $2
	*($0) = $1
	CALL eosio_assert(((int_64)$2 > (int_64)0), [5456])
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 + [64]), $0, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($7 + [64]) | [8]), ($0 + [8]), [8])
	$2 = *($0)
	$3 = CALL db_store_i64(*((($7 + [8]) + [8])), (int_64)-4157660957582557184, $5, $2, ($7 + [64]), [16])
	*($0 + [20]) = $3
	$4 = (($7 + [8]) + [16])
	if ( (uint_64)($2 <= *($4)) ){ goto $label$8 }
	*($4) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($7 + [56]) = $0
	$2 = *($0)
	*($7 + [64]) = $2
	*($7 + [52]) = $3
	$6 = ($7 + [36])
	$4 = *($6)
	if ( ((uint_32)$4 >= (uint_32)*(($7 + [40]))) ){ goto $label$5 }
	*($4 + [8]) = $2
	*($4 + [16]) = $3
	*($7 + [56]) = [0]
	*($4) = $0
	*($6) = ($4 + [24])
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$4 = CALL db_next_i64(*($0 + [20]), ($7 + [64]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$9 }
	CALL $270(($7 + [8]), $4)
	
.LABEL $label$9
	CALL $272(($7 + [8]), $0)
	$3 = *($7 + [32])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	CALL $271(($7 + [32]), ($7 + [56]), ($7 + [64]), ($7 + [52]))
	
.LABEL $label$4
	$0 = *($7 + [56])
	*($7 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	CALL $738($0)
	
.LABEL $label$3
	$3 = *($7 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($7 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $738($4)
	
.LABEL $label$13
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($7 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $3
	
.LABEL $label$10
	*($6) = $3
	CALL $738($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

int_64 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$13 = *($1)
	CALL eosio_assert((( *($1 + [4]) ? uint_32($13 >> [1]) : ($13 & [1]) ) <= [13]), [2368])
	$5 = *($1)
	$14 = ($5 & [1])
	$7 = ($1 + [1])
	$12 = *($1 + [8])
	$13 = ( $12 ? $7 : $14 )
	$2 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $14 )
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ($2 + [-1])
	$14 = [0]
	$6 = ($1 + [8])
	
.LOOP $label$2:
	$5 = ($5 & [1])
	if ( ((int_32)*(($13 + $14)) < (int_32)[97]) ){ goto $label$4 }
	$13 = [1]
	if ( ((int_32)*((( $12 ? $7 : $5 ) + $14)) < (int_32)[123]) ){ goto $label$3 }
	
.LABEL $label$4
	$13 = *((( $12 ? $7 : $5 ) + $14))
	$13 = (((($13 + [-49]) & [255]) <= [5]) | ((int_32)$13 == (int_32)[46]))
	
.LABEL $label$3
	CALL eosio_assert($13, [2368])
	if ( ((int_32)$3 != (int_32)$14) ){ goto $label$5 }
	CALL eosio_assert(((int_32)*((( *($6) ? $7 : (*($1) & [1]) ) + $3)) != (int_32)[46]), [2368])
	
.LABEL $label$5
	$5 = *($1)
	$12 = *($6)
	$13 = ( $12 ? $7 : ($5 & [1]) )
	$14 = ($14 + [1])
	if ( ((int_32)$2 != (int_32)$14) ){ goto $label$2 }
	
.LABEL $label$1
	$14 = [-1]
	
.LOOP $label$6:
	$7 = ($13 + $14)
	$12 = ($14 + [1])
	$14 = $12
	if ( *(($7 + [1])) ){ goto $label$6 }
	$4 = (CASTING uint_64)(uint_32 $12)
	$9 = (int_64)0
	$8 = (int_64)59
	$10 = (int_64)0
	
.LOOP $label$7:
	$11 = (int_64)0
	if ( ((uint_64)$9 >= (uint_64)$4) ){ goto $label$8 }
	$14 = *($13)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$14 = ($14 + [165])
	goto $label$9 
	
.LABEL $label$10
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$8
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$12 }
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	goto $label$11 
	
.LABEL $label$12
	$11 = ((int_64)$11 & (int_64)15)
	
.LABEL $label$11
	$13 = ($13 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$7 }
	return $10
}

void .FUNC _ZN11walexchange12wal_exchange2onERNS_8transferEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_32 $19
	int_32 $20
	$20 = (*([0] + [4]) - [1344])
	*([0] + [4]) = $20
	*($20 + [1320]) = $2
	CALL eosio_assert(((int_64)*($0) != (int_64)$2), [10848])
	CALL eosio_assert(((int_64)*($1) != (int_64)*($1 + [8])), [10912])
	$4 = *($0)
	$3 = *($1)
	if ( ((int_64)$3 == (int_64)$4) ){ goto $label$1 }
	if ( ((int_64)*(($1 + [8])) != (int_64)$4) ){ goto $label$1 }
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [10944]
	$17 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$16 > (uint_64)(int_64)8) ){ goto $label$7 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$5 = ($5 + [165])
	goto $label$5 
	
.LABEL $label$7
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$3
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$2 }
	if ( ((int_64)$3 == (int_64)$17) ){ goto $label$1 }
	$5 = [0]
	*((($20 + [1280]) + [32])) = [0]
	*($20 + [1288]) = $4
	*($20 + [1280]) = $4
	*($20 + [1296]) = (int_64)-1
	*($20 + [1304]) = (int_64)0
	*($20 + [1316]) = [0]
	$14 = CALL db_find_i64($4, $4, (int_64)5031813150555504640, $3)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$9 }
	CALL eosio_assert(((int_32)*(CALL $21(($20 + [1280]), $14) + [16]) == (int_32)($20 + [1280])), [288])
	CALL prints([10960])
	$1 = *($20 + [1304])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$9
	$16 = *($0)
	*((($20 + [1240]) + [32])) = [0]
	*($20 + [1248]) = $16
	*($20 + [1240]) = $16
	*($20 + [1256]) = (int_64)-1
	*($20 + [1264]) = (int_64)0
	$14 = CALL db_find_i64($16, $16, (int_64)4344997714595201024, $2)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$10 }
	$5 = CALL $380(($20 + [1240]), $14)
	CALL eosio_assert(((int_32)*($5 + [8]) == (int_32)($20 + [1240])), [288])
	
.LABEL $label$10
	CALL eosio_assert(($5 == 0), [10992])
	*(($14 = (($20 + [1200]) + [8]))) = *(($1 + [24]))
	*($20 + [1200]) = *($1 + [16])
	$16 = *($14)
	*((($20 + [768]) + [8])) = $16
	*((($20 + [1216]) + [8])) = $16
	$16 = *($20 + [1200])
	*($20 + [768]) = $16
	*($20 + [1216]) = $16
	*($20 + [1232]) = $2
	$5 = [0]
	$18 = *($20 + [1216])
	if ( ((uint_64)((int_64)$18 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$16 = (uint_64)*($20 + [1224]) >> (uint_64)(int_64)8)
	$14 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$5 = [0]
	
.LABEL $label$11
	CALL eosio_assert($5, [11040])
	CALL eosio_assert(((int_64)$18 > (int_64)0), [11072])
	$6 = ($1 + [32])
	$14 = *($1 + [32])
	if ( ($14 & [1]) ){ goto $label$17 }
	$14 = uint_32($14 >> [1])
	goto $label$16 
	
.LABEL $label$17
	$14 = *(($1 + [36]))
	
.LABEL $label$16
	CALL eosio_assert(($14 <= [257]), [3264])
	CALL eosio_assert(CALL $fimport$46(*($1)), [560])
	CALL _Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(($20 + [1184]), $6)
	CALL $767(($20 + [1152]), ($20 + [1184]))
	CALL _Z5splitNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEc(($20 + [1168]), ($20 + [1152]), [58])
	if ( ((*($20 + [1152]) & [1]) == 0) ){ goto $label$18 }
	CALL $738(*($20 + [1160]))
	
.LABEL $label$18
	CALL eosio_assert((((int_32)(*($20 + [1172]) - *($20 + [1168])) / (int_32)[12]) <= [6]), [11120])
	$16 = *($0)
	*($20 + [1144]) = $16
	$18 = *($1)
	$7 = [0]
	*(($20 + [1136])) = [0]
	*($20 + [1112]) = $16
	*($20 + [1104]) = $16
	*($20 + [1120]) = (int_64)-1
	*($20 + [1128]) = (int_64)0
	*($20 + [1140]) = [0]
	*($20 + [1096]) = ($20 + [1104])
	*($20 + [776]) = $2
	*($20 + [768]) = (uint_64)*(($1 + [24])) >> (uint_64)(int_64)8)
	CALL $588(($20 + [688]), ($20 + [1096]), ($20 + [768]))
	$14 = *($20 + [692])
	if ( ($14 == 0) ){ goto $label$19 }
	$7 = ( $14 ? [0] : (int_64)(((int_64)((int_64)*($20 + [768]) ^ (int_64)(uint_64)*($14 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($20 + [776]) ^ (int_64)*($14 + [16]))) == 0) )
	
.LABEL $label$19
	*($20 + [1088]) = *($0)
	$14 = *($20 + [1168])
	$5 = (*($20 + [1172]) - $14)
	if ( ((int_32)$5 != (int_32)[12]) ){ goto $label$59 }
	$5 = *($14)
	$13 = CALL strlen([1568])
	if ( ((int_32)$13 != (int_32)( *($14 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$60 }
	if ( (CALL $752($14, [0], [-1], [1568], $13) == 0) ){ goto $label$55 }
	
.LABEL $label$60
	$5 = *($20 + [1168])
	*(($20 + [776])) = [0]
	*($20 + [768]) = (int_64)0
	$14 = CALL strlen([11152])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$31 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$58 }
	*($20 + [768]) = ($14 << [1])
	$13 = (($20 + [768]) | [1])
	if ( $14 ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$59
	if ( (((int_32)$5 / (int_32)[12]) <= [2]) ){ goto $label$61 }
	$5 = [1]
	$13 = *($14)
	$12 = CALL strlen([11168])
	if ( ((int_32)$12 != (int_32)( *($14 + [4]) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$62 }
	if ( (CALL $752($14, [0], [-1], [11168], $12) == 0) ){ goto $label$51 }
	
.LABEL $label$62
	$5 = *($14)
	$14 = *($20 + [1168])
	$13 = CALL strlen([11184])
	if ( ((int_32)$13 != (int_32)( *($14 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$63 }
	if ( (CALL $752($14, [0], [-1], [11184], $13) == 0) ){ goto $label$52 }
	
.LABEL $label$63
	$5 = [1]
	$13 = *($14)
	$14 = *($20 + [1168])
	$12 = CALL strlen([11200])
	if ( ((int_32)$12 != (int_32)( *($14 + [4]) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$64 }
	if ( (CALL $752($14, [0], [-1], [11200], $12) == 0) ){ goto $label$51 }
	
.LABEL $label$64
	$5 = *($14)
	$14 = *($20 + [1168])
	$13 = CALL strlen([11216])
	if ( ((int_32)$13 != (int_32)( *($14 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$65 }
	if ( (CALL $752($14, [0], [-1], [11216], $13) == 0) ){ goto $label$52 }
	
.LABEL $label$65
	$5 = [1]
	$13 = *($14)
	$14 = *($20 + [1168])
	$12 = CALL strlen([11232])
	if ( ((int_32)$12 != (int_32)( *($14 + [4]) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$66 }
	if ( (CALL $752($14, [0], [-1], [11232], $12) == 0) ){ goto $label$51 }
	
.LABEL $label$66
	$5 = *($14)
	$14 = *($20 + [1168])
	$13 = CALL strlen([11248])
	if ( ((int_32)$13 != (int_32)( *($14 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$67 }
	if ( (CALL $752($14, [0], [-1], [11248], $13) == 0) ){ goto $label$52 }
	
.LABEL $label$67
	$5 = [0]
	$13 = *($14)
	$14 = *($20 + [1168])
	$12 = CALL strlen([11264])
	if ( ((int_32)$12 != (int_32)( *($14 + [4]) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$51 }
	$5 = (CALL $752($14, [0], [-1], [11264], $12) == 0)
	goto $label$51 
	
.LABEL $label$61
	$19 = [0]
	goto $label$25 
	
.LABEL $label$58
	$12 = (($14 + [16]) & [-16])
	$13 = CALL $737($12)
	*($20 + [768]) = ($12 | [1])
	*($20 + [776]) = $13
	*($20 + [772]) = $14
	
.LABEL $label$57
	CALL memcpy($13, [11152], $14)
	
.LABEL $label$56
	$12 = [0]
	*(($13 + $14)) = [0]
	$8 = ($13 & [1])
	$13 = *($5)
	$9 = ( *($5 + [4]) ? uint_32($13 >> [1]) : $8 )
	$19 = ($14 & [1])
	$14 = *($20 + [768])
	$14 = ( *($20 + [772]) ? uint_32($14 >> [1]) : $19 )
	if ( ((uint_32)$14 > (uint_32)$9) ){ goto $label$68 }
	if ( ($14 == 0) ){ goto $label$69 }
	$13 = ( *($20 + [776]) ? (($20 + [768]) | [1]) : $19 )
	$5 = ((( *($5 + [8]) ? ($5 + [1]) : $8 ) + $9) + [-1])
	
.LOOP $label$70:
	if ( ((int_32)*((($13 + $14) + [-1])) != (int_32)*($5)) ){ goto $label$68 }
	$5 = ($5 + [-1])
	$14 = ($14 + [-1])
	if ( $14 ){ goto $label$70 }
	
.LABEL $label$69
	$12 = [1]
	
.LABEL $label$68
	if ( ($19 == 0) ){ goto $label$71 }
	CALL $738(*($20 + [776]))
	
.LABEL $label$71
	if ( ($12 == 0) ){ goto $label$55 }
	$14 = *($20 + [1168])
	$5 = *($14)
	if ( ($5 & [1]) ){ goto $label$54 }
	$5 = uint_32($5 >> [1])
	goto $label$53 
	
.LABEL $label$55
	$5 = *($14)
	$14 = *($20 + [1168])
	$13 = CALL strlen([1568])
	if ( ((int_32)$13 != (int_32)( *($14 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$72 }
	if ( (CALL $752($14, [0], [-1], [1568], $13) == 0) ){ goto $label$26 }
	
.LABEL $label$72
	$14 = ($14 & [1])
	$14 = *($13)
	$13 = *($20 + [1168])
	$5 = ( *($13 + [4]) ? uint_32($14 >> [1]) : $14 )
	if ( ($5 == 0) ){ goto $label$73 }
	$14 = ( *($13 + [8]) ? ($13 + [1]) : $14 )
	
.LOOP $label$74:
	if ( (CALL isdigit(*($14)) == 0) ){ goto $label$26 }
	$14 = ($14 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$74 }
	$13 = *($20 + [1168])
	
.LABEL $label$73
	*($20 + [776]) = [0]
	*($20 + [768]) = (int_64)0
	$14 = [1]
	$12 = ($5 & [1])
	$5 = *($13)
	$5 = ( *($13 + [4]) ? uint_32($5 >> [1]) : $12 )
	if ( ($5 == 0) ){ goto $label$49 }
	$14 = ( *($13 + [8]) ? ($13 + [1]) : $12 )
	
.LOOP $label$75:
	if ( (CALL isdigit(*($14)) == 0) ){ goto $label$50 }
	$14 = ($14 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$75 }
	$14 = [1]
	goto $label$49 
	
.LABEL $label$54
	$5 = *($14 + [4])
	
.LABEL $label$53
	CALL $768(($20 + [768]), $14, [0], ($5 + [-4]), $14)
	$5 = ($20 + [768])
	$12 = ($14 & [1])
	$14 = *($20 + [768])
	$14 = ( *($20 + [772]) ? uint_32($14 >> [1]) : $12 )
	if ( ((uint_32)$14 > (uint_32)[12]) ){ goto $label$46 }
	if ( ((([1] << $14) & [4127]) == 0) ){ goto $label$46 }
	goto $label$27 
	
.LABEL $label$52
	$5 = [1]
	
.LABEL $label$51
	CALL eosio_assert($5, [11280])
	*(($20 + [1336])) = [0]
	*($20 + [1328]) = (int_64)0
	$14 = CALL strlen([1568])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$30 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$78 }
	*($20 + [1328]) = ($14 << [1])
	$13 = (($20 + [1328]) | [1])
	if ( $14 ){ goto $label$77 }
	goto $label$76 
	
.LABEL $label$78
	$5 = (($14 + [16]) & [-16])
	$13 = CALL $737($5)
	*($20 + [1328]) = ($5 | [1])
	*($20 + [1336]) = $13
	*($20 + [1332]) = $14
	
.LABEL $label$77
	CALL memcpy($13, [1568], $14)
	
.LABEL $label$76
	$5 = [0]
	*(($13 + $14)) = [0]
	$13 = [0]
	$12 = *($14)
	$14 = *($20 + [1168])
	$19 = CALL strlen([11168])
	if ( ((int_32)$19 != (int_32)( *($14 + [4]) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$79 }
	$13 = (CALL $752($14, [0], [-1], [11168], $19) == 0)
	
.LABEL $label$79
	$12 = *($14)
	$14 = *($20 + [1168])
	$19 = CALL strlen([11184])
	if ( ((int_32)$19 != (int_32)( *($14 + [4]) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$80 }
	$5 = (CALL $752($14, [0], [-1], [11184], $19) == 0)
	
.LABEL $label$80
	$12 = [0]
	$9 = [0]
	$19 = *($14)
	$14 = *($20 + [1168])
	$8 = CALL strlen([11200])
	if ( ((int_32)$8 != (int_32)( *($14 + [4]) ? uint_32($19 >> [1]) : ($19 & [1]) )) ){ goto $label$81 }
	$9 = (CALL $752($14, [0], [-1], [11200], $8) == 0)
	
.LABEL $label$81
	$19 = *($14)
	$14 = *($20 + [1168])
	$8 = CALL strlen([11216])
	if ( ((int_32)$8 != (int_32)( *($14 + [4]) ? uint_32($19 >> [1]) : ($19 & [1]) )) ){ goto $label$82 }
	$12 = (CALL $752($14, [0], [-1], [11216], $8) == 0)
	
.LABEL $label$82
	$19 = [0]
	$8 = *($14)
	$14 = *($20 + [1168])
	$11 = CALL strlen([11232])
	if ( ((int_32)$11 != (int_32)( *($14 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$83 }
	$19 = (CALL $752($14, [0], [-1], [11232], $11) == 0)
	
.LABEL $label$83
	$8 = *($14)
	$14 = *($20 + [1168])
	$11 = CALL strlen([11248])
	if ( ((int_32)$11 != (int_32)( *($14 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$84 }
	if ( (CALL $752($14, [0], [-1], [11248], $11) == 0) ){ goto $label$48 }
	
.LABEL $label$84
	$11 = [0]
	$8 = *($14)
	$14 = *($20 + [1168])
	$10 = CALL strlen([11264])
	if ( ((int_32)$10 != (int_32)( *($14 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$47 }
	$11 = (CALL $752($14, [0], [-1], [11264], $10) == 0)
	goto $label$47 
	
.LABEL $label$50
	$14 = [0]
	
.LABEL $label$49
	CALL eosio_assert($14, [1408])
	$14 = *($13)
	if ( (( *(($13 + [4])) ? uint_32($14 >> [1]) : ($14 & [1]) ) == 0) ){ goto $label$85 }
	$16 = CALL _ZNSt3__16stoullERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji($13, [0], [10])
	if ( (int_64)($16 == 0) ){ goto $label$85 }
	
.LOOP $label$86:
	$15 = ((uint_64)$16 % (uint_64)(int_64)27)
	if ( (int_64)($15 == 0) ){ goto $label$85 }
	CALL $748(($20 + [768]), [0], [1], (CASTING uint_32)(uint_64 ((int_64)$15 | (int_64)96)))
	$14 = ((uint_64)$16 > (uint_64)(int_64)26)
	$16 = ((uint_64)$16 / (uint_64)(int_64)27)
	if ( $14 ){ goto $label$86 }
	CALL $745(($20 + [768]), [11152])
	$18 = CALL $76(($20 + [1088]), ($20 + [768]))
	
.LABEL $label$85
	if ( ((*($20 + [768]) & [1]) == 0) ){ goto $label$26 }
	CALL $738(*(($20 + [776])))
	goto $label$26 
	
.LABEL $label$48
	$11 = [1]
	
.LABEL $label$47
	*($20 + [1032]) = [0]
	*($20 + [504]) = [0]
	CALL memset((($20 + [504]) | [1]), [0], [33])
	if ( ((int_32)($13 | $5) != (int_32)[1]) ){ goto $label$93 }
	$14 = *($20 + [1168])
	$12 = *($14 + [12])
	if ( ($12 & [1]) ){ goto $label$92 }
	$12 = uint_32($12 >> [1])
	$14 = (($14 + [12]) + [1])
	goto $label$91 
	
.LABEL $label$93
	if ( ($12 == 0) ){ goto $label$90 }
	CALL $767(($20 + [992]), (*($20 + [1168]) + [12]))
	CALL _Z5splitNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEc(($20 + [1008]), ($20 + [992]), [35])
	if ( ((*($20 + [992]) & [1]) == 0) ){ goto $label$94 }
	CALL $738(*($20 + [1000]))
	
.LABEL $label$94
	CALL eosio_assert(((int_32)(*($20 + [1012]) - *($20 + [1008])) == (int_32)[36]), [11312])
	*($20 + [768]) = [0]
	*($20 + [688]) = [0]
	$14 = *($20 + [1008])
	$5 = *($14)
	if ( ($5 & [1]) ){ goto $label$89 }
	$5 = uint_32($5 >> [1])
	$14 = ($14 + [1])
	goto $label$88 
	
.LABEL $label$92
	$12 = *(($14 + [16]))
	$14 = *(($14 + [20]))
	
.LABEL $label$91
	*($20 + [1028]) = $12
	*($20 + [1024]) = $14
	*($20 + [148 align=4]) = *($20 + [1024])
	CALL _ZN6abieos20string_to_public_keyENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE(($20 + [768]), ($20 + [148]))
	CALL memcpy(($20 + [504]), ($20 + [768]), [34])
	$14 = *($20 + [1168])
	if ( (((int_32)(*($20 + [1172]) - $14) / (int_32)[12]) <= [3]) ){ goto $label$28 }
	CALL $740(($20 + [1328]), ($14 + [24]))
	goto $label$28 
	
.LABEL $label$90
	if ( ($9 == 0) ){ goto $label$87 }
	CALL $767(($20 + [840]), (*($20 + [1168]) + [12]))
	CALL _Z5splitNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEc(($20 + [464]), ($20 + [840]), [35])
	if ( ((*($20 + [840]) & [1]) == 0) ){ goto $label$95 }
	CALL $738(*($20 + [848]))
	
.LABEL $label$95
	CALL eosio_assert(((int_32)(*($20 + [468]) - *($20 + [464])) == (int_32)[24]), [11360])
	$16 = CALL $76(($20 + [1088]), *($20 + [464]))
	$14 = *($20 + [464])
	$5 = *($14 + [12])
	if ( ($5 & [1]) ){ goto $label$42 }
	$5 = uint_32($5 >> [1])
	$14 = (($14 + [12]) + [1])
	goto $label$41 
	
.LABEL $label$89
	$5 = *($14 + [4])
	$14 = *($14 + [8])
	
.LABEL $label$88
	*($20 + [988]) = $5
	*($20 + [984]) = $14
	*($20 + [244 align=4]) = *($20 + [984])
	CALL _ZN6abieos20string_to_public_keyENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE(($20 + [464]), ($20 + [244]))
	*($20 + [772]) = *($20 + [465])
	*($20 + [773]) = *($20 + [466])
	*($20 + [768]) = ((int_32)*($20 + [464]) != (int_32)[0])
	*($20 + [774]) = *($20 + [467])
	*($20 + [775]) = *($20 + [468])
	*((($20 + [768]) + [8])) = *($20 + [469])
	*((($20 + [768]) + [9])) = *($20 + [470])
	*((($20 + [768]) + [10])) = *($20 + [471])
	*((($20 + [768]) + [11])) = *((($20 + [464]) + [8]))
	*((($20 + [768]) + [12])) = *((($20 + [464]) + [9]))
	*((($20 + [768]) + [13])) = *((($20 + [464]) + [10]))
	*((($20 + [768]) + [14])) = *((($20 + [464]) + [11]))
	*((($20 + [768]) + [15])) = *((($20 + [464]) + [12]))
	*((($20 + [768]) + [16])) = *((($20 + [464]) + [13]))
	*((($20 + [768]) + [17])) = *((($20 + [464]) + [14]))
	*((($20 + [768]) + [18])) = *((($20 + [464]) + [15]))
	*((($20 + [768]) + [19])) = *((($20 + [464]) + [16]))
	*((($20 + [768]) + [20])) = *((($20 + [464]) + [17]))
	*((($20 + [768]) + [21])) = *((($20 + [464]) + [18]))
	*((($20 + [768]) + [22])) = *((($20 + [464]) + [19]))
	*((($20 + [768]) + [23])) = *((($20 + [464]) + [20]))
	*((($20 + [768]) + [24])) = *((($20 + [464]) + [21]))
	*((($20 + [768]) + [25])) = *((($20 + [464]) + [22]))
	*((($20 + [768]) + [26])) = *((($20 + [464]) + [23]))
	*((($20 + [768]) + [27])) = *((($20 + [464]) + [24]))
	*((($20 + [768]) + [28])) = *((($20 + [464]) + [25]))
	*((($20 + [768]) + [29])) = *((($20 + [464]) + [26]))
	*((($20 + [768]) + [30])) = *((($20 + [464]) + [27]))
	*((($20 + [768]) + [31])) = *((($20 + [464]) + [28]))
	*((($20 + [768]) + [32])) = *((($20 + [464]) + [29]))
	*((($20 + [768]) + [33])) = *((($20 + [464]) + [30]))
	*(($20 + [802])) = *((($20 + [464]) + [31]))
	*(($20 + [803])) = *((($20 + [464]) + [32]))
	*(($20 + [804])) = *((($20 + [464]) + [33]))
	$5 = *($14 + [12])
	$14 = *($20 + [1008])
	$12 = CALL strlen([1568])
	if ( ((int_32)$12 != (int_32)( *(($14 + [16])) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$96 }
	if ( (CALL $752(($14 + [12]), [0], [-1], [1568], $12) == 0) ){ goto $label$43 }
	
.LABEL $label$96
	$14 = *($20 + [1008])
	$5 = *($14 + [12])
	if ( ($5 & [1]) ){ goto $label$45 }
	$5 = uint_32($5 >> [1])
	$14 = (($14 + [12]) + [1])
	goto $label$44 
	
.LABEL $label$87
	if ( ($11 == 0) ){ goto $label$40 }
	$18 = CALL $76(($20 + [1088]), (*($20 + [1168]) + [12]))
	$5 = [0]
	$14 = *($20 + [1168])
	if ( (((int_32)(*($20 + [1172]) - $14) / (int_32)[12]) <= [3]) ){ goto $label$28 }
	CALL $740(($20 + [1328]), ($14 + [24]))
	goto $label$28 
	
.LABEL $label$46
	$19 = *($20 + [776])
	$13 = CALL strlen([8832])
	if ( ($13 == 0) ){ goto $label$27 }
	if ( ((int_32)$14 < (int_32)$13) ){ goto $label$33 }
	$8 = ( $19 ? (($20 + [768]) | [1]) : $12 )
	$19 = ($8 + $14)
	$12 = $8
	
.LOOP $label$97:
	$14 = (($14 - $13) + [1])
	if ( ($14 == 0) ){ goto $label$33 }
	$14 = CALL memchr($12, [46], $14)
	if ( ($14 == 0) ){ goto $label$33 }
	if ( (CALL memcmp($14, [8832], $13) == 0) ){ goto $label$34 }
	$12 = ($14 + [1])
	$14 = ($19 - $12)
	if ( ((int_32)$14 >= (int_32)$13) ){ goto $label$97 }
	goto $label$33 
	
.LABEL $label$45
	$5 = *(($14 + [16]))
	$14 = *(($14 + [20]))
	
.LABEL $label$44
	*($20 + [940]) = $5
	*($20 + [936]) = $14
	*($20 + [236 align=4]) = *($20 + [936])
	CALL _ZN6abieos20string_to_public_keyENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE(($20 + [944]), ($20 + [236]))
	*($20 + [692]) = *($20 + [945])
	*($20 + [693]) = *($20 + [946])
	*($20 + [688]) = ((int_32)*($20 + [944]) != (int_32)[0])
	*($20 + [694]) = *($20 + [947])
	*($20 + [695]) = *($20 + [948])
	*((($20 + [688]) + [8])) = *($20 + [949])
	*((($20 + [688]) + [9])) = *($20 + [950])
	*((($20 + [688]) + [10])) = *($20 + [951])
	*((($20 + [688]) + [11])) = *((($20 + [944]) + [8]))
	*((($20 + [688]) + [12])) = *((($20 + [944]) + [9]))
	*((($20 + [688]) + [13])) = *((($20 + [944]) + [10]))
	*((($20 + [688]) + [14])) = *((($20 + [944]) + [11]))
	*((($20 + [688]) + [15])) = *((($20 + [944]) + [12]))
	*((($20 + [688]) + [16])) = *((($20 + [944]) + [13]))
	*((($20 + [688]) + [17])) = *((($20 + [944]) + [14]))
	*((($20 + [688]) + [18])) = *((($20 + [944]) + [15]))
	*((($20 + [688]) + [19])) = *((($20 + [944]) + [16]))
	*((($20 + [688]) + [20])) = *((($20 + [944]) + [17]))
	*((($20 + [688]) + [21])) = *((($20 + [944]) + [18]))
	*((($20 + [688]) + [22])) = *((($20 + [944]) + [19]))
	*((($20 + [688]) + [23])) = *((($20 + [944]) + [20]))
	*((($20 + [688]) + [24])) = *((($20 + [944]) + [21]))
	*((($20 + [688]) + [25])) = *((($20 + [944]) + [22]))
	*((($20 + [688]) + [26])) = *((($20 + [944]) + [23]))
	*((($20 + [688]) + [27])) = *((($20 + [944]) + [24]))
	*((($20 + [688]) + [28])) = *((($20 + [944]) + [25]))
	*((($20 + [688]) + [29])) = *((($20 + [944]) + [26]))
	*((($20 + [688]) + [30])) = *((($20 + [944]) + [27]))
	*((($20 + [688]) + [31])) = *((($20 + [944]) + [28]))
	*((($20 + [688]) + [32])) = *((($20 + [944]) + [29]))
	*((($20 + [688]) + [33])) = *((($20 + [944]) + [30]))
	*(($20 + [722])) = *((($20 + [944]) + [31]))
	*(($20 + [723])) = *((($20 + [944]) + [32]))
	*(($20 + [724])) = *((($20 + [944]) + [33]))
	
.LABEL $label$43
	$14 = [0]
	$12 = *($5 + [24])
	$5 = *($20 + [1008])
	$8 = CALL strlen([11344])
	if ( ((int_32)$8 != (int_32)( *(($5 + [28])) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$98 }
	$14 = (CALL $752(($5 + [24]), [0], [-1], [11344], $8) == 0)
	
.LABEL $label$98
	$16 = *($1)
	CALL memcpy(($20 + [896]), ($20 + [768]), [40])
	CALL memcpy(($20 + [856]), ($20 + [688]), [40])
	CALL memcpy(($20 + [196]), ($20 + [896]), [40])
	CALL memcpy(($20 + [156]), ($20 + [856]), [40])
	CALL _ZN11walexchange12wal_exchange9resetkey2EyN5eosio10public_keyES2_b($0, $16, ($20 + [196]), ($20 + [156]), $14)
	$12 = *($20 + [1008])
	if ( ($12 == 0) ){ goto $label$35 }
	$14 = *($20 + [1012])
	if ( ((int_32)$14 == (int_32)$12) ){ goto $label$39 }
	$5 = ([0] - $12)
	$14 = ($14 + [-12])
	
.LOOP $label$99:
	if ( ((*($14) & [1]) == 0) ){ goto $label$100 }
	CALL $738(*(($14 + [8])))
	
.LABEL $label$100
	$14 = ($14 + [-12])
	if ( ((int_32)($14 + $5) != (int_32)[-12]) ){ goto $label$99 }
	$14 = *($20 + [1008])
	goto $label$38 
	
.LABEL $label$42
	$5 = *(($14 + [16]))
	$14 = *(($14 + [20]))
	
.LABEL $label$41
	*($20 + [764]) = $5
	*($20 + [760]) = $14
	*($20 + [320 align=4]) = *($20 + [760])
	CALL _ZN6abieos19string_to_signatureENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE(($20 + [768]), ($20 + [320]))
	*($20 + [688]) = ((int_32)*($20 + [768]) != (int_32)[0])
	CALL memmove((($20 + [688]) | [1]), (($20 + [768]) | [1]), [65])
	$15 = *($1)
	CALL memcpy(($20 + [616]), ($20 + [688]), [66])
	CALL memcpy(($20 + [254]), ($20 + [616]), [66])
	CALL _ZN11walexchange12wal_exchange7bindeosEyy9signature($0, $15, $16, ($20 + [254]))
	$14 = *($20 + [1168])
	if ( (((int_32)(*($20 + [1172]) - $14) / (int_32)[12]) <= [3]) ){ goto $label$101 }
	CALL $740(($20 + [1328]), ($14 + [24]))
	
.LABEL $label$101
	$12 = *($20 + [464])
	if ( ($12 == 0) ){ goto $label$35 }
	$14 = *($20 + [468])
	if ( ((int_32)$14 == (int_32)$12) ){ goto $label$37 }
	$5 = ([0] - $12)
	$14 = ($14 + [-12])
	
.LOOP $label$102:
	if ( ((*($14) & [1]) == 0) ){ goto $label$103 }
	CALL $738(*(($14 + [8])))
	
.LABEL $label$103
	$14 = ($14 + [-12])
	if ( ((int_32)($14 + $5) != (int_32)[-12]) ){ goto $label$102 }
	$14 = *($20 + [464])
	goto $label$36 
	
.LABEL $label$40
	$5 = [0]
	if ( ($19 == 0) ){ goto $label$28 }
	CALL $767(($20 + [600]), (*($20 + [1168]) + [12]))
	CALL $603(($20 + [688]), ($20 + [1088]), ($20 + [600]))
	if ( ((*($20 + [600]) & [1]) == 0) ){ goto $label$104 }
	CALL $738(*($20 + [608]))
	
.LABEL $label$104
	$18 = CALL $76(($20 + [1088]), ($20 + [688]))
	$5 = [0]
	$14 = *($20 + [1168])
	if ( (((int_32)(*($20 + [1172]) - $14) / (int_32)[12]) <= [3]) ){ goto $label$29 }
	$12 = *($14 + [24])
	$8 = CALL strlen([11184])
	if ( ((int_32)$8 != (int_32)( *(($14 + [28])) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$105 }
	if ( (CALL $752(($14 + [24]), [0], [-1], [11184], $8) == 0) ){ goto $label$32 }
	
.LABEL $label$105
	CALL $740(($20 + [1328]), (*($20 + [1168]) + [24]))
	goto $label$29 
	
.LABEL $label$39
	$14 = $12
	
.LABEL $label$38
	*($20 + [1012]) = $12
	CALL $738($14)
	goto $label$35 
	
.LABEL $label$37
	$14 = $12
	
.LABEL $label$36
	*($20 + [468]) = $12
	CALL $738($14)
	
.LABEL $label$35
	$5 = [0]
	goto $label$28 
	
.LABEL $label$34
	if ( ((int_32)$14 == (int_32)$19) ){ goto $label$33 }
	if ( ((int_32)($14 - $8) != (int_32)[-1]) ){ goto $label$27 }
	
.LABEL $label$33
	$5 = *($20 + [1168])
	goto $label$27 
	
.LABEL $label$32
	CALL eosio_assert(((uint_32)((int_32)(*($20 + [1172]) - *($20 + [1168])) / (int_32)[12]) > (uint_32)[3]), [7120])
	$14 = *($20 + [1168])
	$5 = *($14 + [36])
	if ( ($5 & [1]) ){ goto $label$107 }
	$5 = uint_32($5 >> [1])
	$14 = (($14 + [36]) + [1])
	goto $label$106 
	
.LABEL $label$107
	$5 = *(($14 + [40]))
	$14 = *(($14 + [44]))
	
.LABEL $label$106
	*($20 + [596]) = $5
	*($20 + [592]) = $14
	*($20 + [328 align=4]) = *($20 + [592])
	CALL _ZN6abieos20string_to_public_keyENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE(($20 + [768]), ($20 + [328]))
	CALL memcpy(($20 + [504]), ($20 + [768]), [34])
	$5 = [1]
	$14 = *($20 + [1168])
	if ( (((int_32)(*($20 + [1172]) - $14) / (int_32)[12]) <= [5]) ){ goto $label$29 }
	CALL $740(($20 + [1328]), ($14 + [48]))
	goto $label$29 
	
.LABEL $label$31
	CALL $739(($20 + [768]))
	
.LABEL $label$30
	CALL $739(($20 + [1328]))
	
.LABEL $label$29
	if ( ((*($20 + [688]) & [1]) == 0) ){ goto $label$28 }
	CALL $738(*($20 + [696]))
	
.LABEL $label$28
	CALL $767(($20 + [576]), ($20 + [1328]))
	$2 = CALL $602($0, ($20 + [576]))
	if ( ((*($20 + [576]) & [1]) == 0) ){ goto $label$108 }
	CALL $738(*($20 + [584]))
	
.LABEL $label$108
	if ( ((int_32)($13 | $5) != (int_32)[1]) ){ goto $label$109 }
	*($20 + [1036]) = *($20 + [505])
	*($20 + [1037]) = *($20 + [506])
	*($20 + [1032]) = ((int_32)*($20 + [504]) != (int_32)[0])
	*($20 + [1038]) = *($20 + [507])
	*($20 + [1039]) = *($20 + [508])
	*((($20 + [1032]) + [8])) = *($20 + [509])
	*((($20 + [1032]) + [9])) = *($20 + [510])
	*((($20 + [1032]) + [10])) = *($20 + [511])
	*((($20 + [1032]) + [11])) = *((($20 + [504]) + [8]))
	*((($20 + [1032]) + [12])) = *((($20 + [504]) + [9]))
	*((($20 + [1032]) + [13])) = *((($20 + [504]) + [10]))
	*((($20 + [1032]) + [14])) = *((($20 + [504]) + [11]))
	*((($20 + [1032]) + [15])) = *((($20 + [504]) + [12]))
	*((($20 + [1032]) + [16])) = *((($20 + [504]) + [13]))
	*((($20 + [1032]) + [17])) = *((($20 + [504]) + [14]))
	*((($20 + [1032]) + [18])) = *((($20 + [504]) + [15]))
	*((($20 + [1032]) + [19])) = *((($20 + [504]) + [16]))
	*((($20 + [1032]) + [20])) = *((($20 + [504]) + [17]))
	*((($20 + [1032]) + [21])) = *((($20 + [504]) + [18]))
	*((($20 + [1032]) + [22])) = *((($20 + [504]) + [19]))
	*((($20 + [1032]) + [23])) = *((($20 + [504]) + [20]))
	*((($20 + [1032]) + [24])) = *((($20 + [504]) + [21]))
	*((($20 + [1032]) + [25])) = *((($20 + [504]) + [22]))
	*((($20 + [1032]) + [26])) = *((($20 + [504]) + [23]))
	*((($20 + [1032]) + [27])) = *((($20 + [504]) + [24]))
	*((($20 + [1032]) + [28])) = *((($20 + [504]) + [25]))
	*((($20 + [1032]) + [29])) = *((($20 + [504]) + [26]))
	*((($20 + [1032]) + [30])) = *((($20 + [504]) + [27]))
	*((($20 + [1032]) + [31])) = *((($20 + [504]) + [28]))
	*((($20 + [1032]) + [32])) = *((($20 + [504]) + [29]))
	*((($20 + [1032]) + [33])) = *((($20 + [504]) + [30]))
	*(($20 + [1066])) = *((($20 + [504]) + [31]))
	*(($20 + [1067])) = *((($20 + [504]) + [32]))
	*(($20 + [1068])) = *((($20 + [504]) + [33]))
	
.LABEL $label$109
	*(($20 + [720])) = [0]
	*($20 + [704]) = (int_64)-1
	*($20 + [712]) = (int_64)0
	$16 = *($0)
	*($20 + [688]) = $16
	*($20 + [696]) = $16
	if ( ($13 == 0) ){ goto $label$119 }
	$16 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($20 + [1144]), *($1), [0])
	$8 = *(($20 + [712]))
	$13 = *(($20 + [716]))
	if ( ((int_32)$13 == (int_32)$8) ){ goto $label$120 }
	$14 = ($13 + [-24])
	$12 = ([0] - $8)
	
.LOOP $label$121:
	if ( ((int_64)*(*($14)) == (int_64)$16) ){ goto $label$120 }
	$13 = $14
	$5 = ($14 + [-24])
	$14 = $5
	if ( ((int_32)($5 + $12) != (int_32)[-24]) ){ goto $label$121 }
	
.LABEL $label$120
	if ( ((int_32)$13 == (int_32)$8) ){ goto $label$118 }
	$5 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($20 + [688])), [288])
	if ( $5 ){ goto $label$117 }
	goto $label$113 
	
.LABEL $label$119
	if ( ($5 == 0) ){ goto $label$113 }
	$16 = CALL _ZN11walexchange24contract_account_manager25get_or_create_eos_accountEyh(($20 + [1144]), *($1), [0])
	$8 = *(($20 + [712]))
	$13 = *(($20 + [716]))
	if ( ((int_32)$13 == (int_32)$8) ){ goto $label$122 }
	$14 = ($13 + [-24])
	$12 = ([0] - $8)
	
.LOOP $label$123:
	if ( ((int_64)*(*($14)) == (int_64)$16) ){ goto $label$122 }
	$13 = $14
	$5 = ($14 + [-24])
	$14 = $5
	if ( ((int_32)($5 + $12) != (int_32)[-24]) ){ goto $label$123 }
	
.LABEL $label$122
	if ( ((int_32)$13 == (int_32)$8) ){ goto $label$116 }
	$5 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($20 + [688])), [288])
	if ( $5 ){ goto $label$115 }
	goto $label$114 
	
.LABEL $label$118
	$14 = CALL db_find_i64(*($20 + [688]), *(($20 + [696])), (int_64)-3020384829779738624, $16)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$113 }
	$5 = CALL $18(($20 + [688]), $14)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($20 + [688])), [288])
	
.LABEL $label$117
	$13 = ($5 + [16])
	$14 = *($5 + [12])
	if ( ((int_32)$14 == (int_32)*($13)) ){ goto $label$113 }
	$12 = *($20 + [568])
	
.LOOP $label$125:
	if ( CALL $354($14, ($20 + [1032])) ){ goto $label$124 }
	$12 = $14
	$5 = ($14 + [40])
	$14 = $5
	if ( ((int_32)$5 != (int_32)*($13)) ){ goto $label$125 }
	*($20 + [568]) = ($5 + [-40])
	if ( ($7 == 0) ){ goto $label$111 }
	goto $label$110 
	
.LABEL $label$124
	*($20 + [568]) = $12
	CALL _ZN11walexchange12wal_exchange6unbindEyRKN5eosio10public_keyE($0, *($1), ($20 + [1032]))
	if ( ($7 == 0) ){ goto $label$111 }
	goto $label$110 
	
.LABEL $label$116
	$14 = CALL db_find_i64(*($20 + [688]), *(($20 + [696])), (int_64)-3020384829779738624, $16)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$114 }
	$5 = CALL $18(($20 + [688]), $14)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($20 + [688])), [288])
	
.LABEL $label$115
	$13 = ($5 + [16])
	$14 = *($5 + [12])
	if ( ((int_32)$14 == (int_32)*($13)) ){ goto $label$114 }
	$12 = *($20 + [560])
	
.LOOP $label$126:
	if ( CALL $354($14, ($20 + [1032])) ){ goto $label$112 }
	$12 = $14
	$5 = ($14 + [40])
	$14 = $5
	if ( ((int_32)$5 != (int_32)*($13)) ){ goto $label$126 }
	*($20 + [560]) = ($5 + [-40])
	
.LABEL $label$114
	$16 = *($1)
	CALL require_auth($16)
	CALL eosio_assert(((int_64)$16 != (int_64)*($0)), [6224])
	CALL memset((($20 + [768]) | [4]), [0], [36])
	*($20 + [768]) = [0]
	CALL eosio_assert(CALL $347(($20 + [1032]), ($20 + [768])), [6256])
	*($20 + [464]) = *($0)
	$16 = CALL _ZN11walexchange24contract_account_manager25get_or_create_eos_accountEyh(($20 + [464]), $16, [0])
	CALL memcpy(($20 + [768]), ($20 + [1032]), [40])
	CALL memcpy(($20 + [108]), ($20 + [768]), [40])
	CALL _ZN11walexchange12wal_exchange13add_trade_keyEyN5eosio10public_keyE($0, $16, ($20 + [108]))
	
.LABEL $label$113
	if ( $7 ){ goto $label$110 }
	goto $label$111 
	
.LABEL $label$112
	*($20 + [560]) = $12
	if ( $7 ){ goto $label$110 }
	
.LABEL $label$111
	if ( ((int_32)$19 ^ (int_32)[1]) ){ goto $label$110 }
	$16 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($20 + [1144]), $18, [0])
	$8 = *(($20 + [712]))
	$13 = *(($20 + [716]))
	if ( ((int_32)$13 == (int_32)$8) ){ goto $label$127 }
	$14 = ($13 + [-24])
	$12 = ([0] - $8)
	
.LOOP $label$128:
	if ( ((int_64)*(*($14)) == (int_64)$16) ){ goto $label$127 }
	$13 = $14
	$5 = ($14 + [-24])
	$14 = $5
	if ( ((int_32)($5 + $12) != (int_32)[-24]) ){ goto $label$128 }
	
.LABEL $label$127
	if ( ((int_32)$13 == (int_32)$8) ){ goto $label$132 }
	$14 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)($20 + [688])), [288])
	if ( $14 ){ goto $label$131 }
	$14 = [0]
	$5 = [0]
	goto $label$129 
	
.LABEL $label$132
	$14 = [0]
	$5 = CALL db_find_i64(*($20 + [688]), *(($20 + [696])), (int_64)-3020384829779738624, $16)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$130 }
	$14 = CALL $18(($20 + [688]), $5)
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)($20 + [688])), [288])
	
.LABEL $label$131
	$5 = ((int_32)*(($14 + [16])) != (int_32)*($14 + [12]))
	goto $label$129 
	
.LABEL $label$130
	$5 = [0]
	
.LABEL $label$129
	CALL eosio_assert($5, [11392])
	CALL eosio_assert(((int_32)*($14 + [8]) ^ (int_32)[1]), [11440])
	*($20 + [768]) = *($0)
	*($20 + [776]) = $2
	*($20 + [784]) = [60]
	$16 = *($1)
	CALL $767(($20 + [544]), (*($20 + [1168]) + [12]))
	CALL _ZN11walexchange13order_manager16add_order_extendEyRN5eosio14extended_assetENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(($20 + [768]), $16, ($20 + [1216]), ($20 + [544]))
	if ( ((*($20 + [544]) & [1]) == 0) ){ goto $label$110 }
	CALL $738(*($20 + [552]))
	
.LABEL $label$110
	$12 = *($20 + [712])
	if ( ($12 == 0) ){ goto $label$133 }
	$8 = ($20 + [716])
	$14 = *($8)
	if ( ((int_32)$14 == (int_32)$12) ){ goto $label$135 }
	
.LOOP $label$136:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$137 }
	$13 = *($5 + [12])
	if ( ($13 == 0) ){ goto $label$138 }
	*(($5 + [16])) = $13
	CALL $738($13)
	
.LABEL $label$138
	CALL $738($5)
	
.LABEL $label$137
	if ( ((int_32)$12 != (int_32)$14) ){ goto $label$136 }
	$14 = *(($20 + [712]))
	goto $label$134 
	
.LABEL $label$135
	$14 = $12
	
.LABEL $label$134
	*($8) = $12
	CALL $738($14)
	
.LABEL $label$133
	if ( ((*($20 + [1328]) & [1]) == 0) ){ goto $label$25 }
	CALL $738(*($20 + [1336]))
	goto $label$25 
	
.LABEL $label$27
	$18 = CALL $76(($20 + [1088]), $5)
	if ( ((*($20 + [768]) & [1]) == 0) ){ goto $label$26 }
	CALL $738(*($20 + [776]))
	
.LABEL $label$26
	*(($20 + [1080])) = [0]
	*($20 + [1072]) = (int_64)0
	$14 = CALL strlen([1568])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$24 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$141 }
	*($20 + [1072]) = ($14 << [1])
	$5 = (($20 + [1072]) | [1])
	if ( $14 ){ goto $label$140 }
	goto $label$139 
	
.LABEL $label$141
	$13 = (($14 + [16]) & [-16])
	$5 = CALL $737($13)
	*($20 + [1072]) = ($13 | [1])
	*($20 + [1080]) = $5
	*($20 + [1076]) = $14
	
.LABEL $label$140
	CALL memcpy($5, [1568], $14)
	
.LABEL $label$139
	$19 = [0]
	*(($5 + $14)) = [0]
	$2 = CALL $602($0, ($20 + [1072]))
	if ( ((*($20 + [1072]) & [1]) == 0) ){ goto $label$25 }
	CALL $738(*($20 + [1080]))
	
.LABEL $label$25
	*(($20 + [720])) = [0]
	*($20 + [704]) = (int_64)-1
	*($20 + [712]) = (int_64)0
	$16 = *($0)
	*($20 + [688]) = $16
	*($20 + [696]) = $16
	$5 = [0]
	$14 = CALL db_find_i64($16, $16, (int_64)4344997574076792832, $18)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$142 }
	$5 = CALL $370(($20 + [688]), $14)
	CALL eosio_assert(((int_32)*($5 + [8]) == (int_32)($20 + [688])), [288])
	
.LABEL $label$142
	*($20 + [504]) = $18
	CALL $56(($20 + [1032]), ($20 + [504]))
	$14 = CALL $746(($20 + [1032]), [0], [11472])
	$12 = ($14 + [8])
	*(($13 = (($20 + [768]) + [8]))) = *($12)
	*($20 + [768]) = *($14)
	*($14) = [0]
	*(($14 + [4])) = [0]
	*($12) = [0]
	CALL eosio_assert(($5 == 0), ( *($13) ? (($20 + [768]) | [1]) : (*($20 + [768]) & [1]) ))
	if ( ((*($20 + [768]) & [1]) == 0) ){ goto $label$143 }
	CALL $738(*($13))
	
.LABEL $label$143
	if ( ((*($20 + [1032]) & [1]) == 0) ){ goto $label$144 }
	CALL $738(*($20 + [1040]))
	
.LABEL $label$144
	*((($20 + [1032]) + [32])) = [0]
	*($20 + [1048]) = (int_64)-1
	*($20 + [1056]) = (int_64)0
	$16 = *($0)
	*($20 + [1032]) = $16
	*($20 + [1040]) = $18
	$14 = [0]
	$5 = CALL db_find_i64($16, $18, (int_64)5382254363837562880, $2)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$145 }
	$14 = CALL $167(($20 + [1032]), $5)
	CALL eosio_assert(((int_32)*($14 + [16]) == (int_32)($20 + [1032])), [288])
	
.LABEL $label$145
	CALL eosio_assert(($14 == 0), [11504])
	*((($20 + [504]) + [32])) = [0]
	*($20 + [520]) = (int_64)-1
	*($20 + [528]) = (int_64)0
	$16 = *($0)
	*($20 + [504]) = $16
	*($20 + [512]) = $16
	$14 = CALL db_find_i64($16, $16, (int_64)6201872786680856576, $18)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$146 }
	CALL eosio_assert(((int_32)*(CALL $436(($20 + [504]), $14) + [8]) == (int_32)($20 + [504])), [288])
	$14 = [0]
	$5 = *(($1 + [32]))
	$0 = CALL strlen([8368])
	if ( ((int_32)$0 != (int_32)( *(($1 + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$147 }
	$14 = (CALL $752($6, [0], [-1], [8368], $0) == 0)
	
.LABEL $label$147
	CALL eosio_assert($14, [11552])
	goto $label$22 
	
.LABEL $label$146
	$13 = ($1 + [32])
	$14 = *($13)
	$5 = ($1 + [36])
	$12 = CALL strlen([8368])
	if ( ((int_32)$12 != (int_32)( *($5) ? uint_32($14 >> [1]) : ($14 & [1]) )) ){ goto $label$149 }
	$14 = [0]
	if ( (CALL $752($6, [0], [-1], [8368], $12) == 0) ){ goto $label$148 }
	
.LABEL $label$149
	$14 = [1]
	$5 = *($13)
	$12 = CALL strlen([11568])
	if ( ((int_32)$12 != (int_32)( *($5) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$148 }
	$14 = ((int_32)CALL $752($6, [0], [-1], [11568], $12) != (int_32)[0])
	
.LABEL $label$148
	CALL eosio_assert($14, [11552])
	if ( (CALL $333(($20 + [1088]), $18) == 0) ){ goto $label$164 }
	$4 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($20 + [1144]), $18, [0])
	$13 = ($1 + [16])
	if ( $7 ){ goto $label$163 }
	goto $label$162 
	
.LABEL $label$164
	$16 = (int_64)0
	if ( ((int_64)CALL _ZN11walexchange24contract_account_manager15find_account_idEy(($20 + [1144]), $18) == (int_64)0) ){ goto $label$165 }
	$4 = CALL _ZN11walexchange24contract_account_manager25get_or_create_eos_accountEyh(($20 + [1144]), $18, [5])
	$13 = ($1 + [16])
	if ( $7 ){ goto $label$163 }
	goto $label$162 
	
.LABEL $label$165
	$15 = (int_64)59
	$14 = [8160]
	$18 = (int_64)0
	
.LOOP $label$166:
	$17 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$167 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$169 }
	$5 = ($5 + [165])
	goto $label$168 
	
.LABEL $label$169
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$168
	$17 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$167
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$166 }
	$4 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($20 + [1144]), $18, [2])
	$13 = ($1 + [16])
	if ( ($7 == 0) ){ goto $label$162 }
	
.LABEL $label$163
	*($20 + [1016]) = [0]
	*($20 + [1008]) = (int_64)0
	if ( (CALL $333(($20 + [1088]), $18) == 0) ){ goto $label$161 }
	*($20 + [464]) = $18
	CALL $56(($20 + [768]), ($20 + [464]))
	if ( (*($20 + [1008]) & [1]) ){ goto $label$157 }
	*($20 + [1008]) = [0]
	goto $label$156 
	
.LABEL $label$162
	$14 = (($20 + [1216]) + [16])
	$16 = *($14)
	*((($20 + [440]) + [16])) = $16
	$5 = (($20 + [1216]) + [8])
	$15 = *($5)
	*((($20 + [440]) + [8])) = $15
	*((($20 + [80]) + [16])) = $16
	*((($20 + [80]) + [8])) = $15
	$16 = *($20 + [1216])
	*($20 + [440]) = $16
	*($20 + [80]) = $16
	$16 = (int_64)0
	$1 = ($0 + [256])
	CALL _ZN11walexchange13asset_manager14adjust_balanceEyyN5eosio14extended_assetEy($1, $4, $2, ($20 + [80]), (int_64)0)
	$15 = *($14)
	*((($20 + [416]) + [16])) = $15
	$17 = *($5)
	*((($20 + [416]) + [8])) = $17
	*((($20 + [56]) + [16])) = $15
	*((($20 + [56]) + [8])) = $17
	$15 = *($20 + [1216])
	*($20 + [416]) = $15
	*($20 + [56]) = $15
	CALL _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE($1, $2, ($20 + [56]))
	*((($20 + [392]) + [20])) = *((($20 + [1216]) + [20]))
	*(($12 = (($20 + [392]) + [16]))) = *($14)
	*((($20 + [392]) + [12])) = *((($20 + [1216]) + [12]))
	*(($14 = (($20 + [392]) + [8]))) = *($5)
	*($20 + [396]) = *($20 + [1220])
	*($20 + [392]) = *($20 + [1216])
	$15 = *($0)
	*((($20 + [32]) + [16])) = *($12)
	*((($20 + [32]) + [8])) = *($14)
	*($20 + [32]) = *($20 + [392])
	CALL _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE($1, $15, ($20 + [32]))
	$15 = (int_64)59
	$14 = [8160]
	$2 = (int_64)0
	
.LOOP $label$170:
	$17 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$171 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$173 }
	$5 = ($5 + [165])
	goto $label$172 
	
.LABEL $label$173
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$172
	$17 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$171
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$2 = ((int_64)$17 | (int_64)$2)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$170 }
	if ( ((int_64)$18 == (int_64)$2) ){ goto $label$174 }
	$16 = *((($20 + [1216]) + [16]))
	*((($20 + [368]) + [16])) = $16
	$18 = *((($20 + [1216]) + [8]))
	*((($20 + [368]) + [8])) = $18
	*((($20 + [8]) + [16])) = $16
	*((($20 + [8]) + [8])) = $18
	$16 = *($20 + [1216])
	*($20 + [368]) = $16
	*($20 + [8]) = $16
	CALL _ZN11walexchange12wal_exchange14check_transferEN5eosio14extended_assetE($0, ($20 + [8]))
	
.LABEL $label$174
	*(($20 + [800])) = [0]
	*($20 + [784]) = (int_64)-1
	*($20 + [792]) = (int_64)0
	$16 = *($0)
	*($20 + [768]) = $16
	*($20 + [776]) = $16
	*($20 + [804]) = [0]
	*($20 + [1328]) = ($20 + [768])
	*($20 + [472]) = *((($20 + [1216]) + [16]))
	*($20 + [464]) = (uint_64)*($20 + [1224]) >> (uint_64)(int_64)8)
	CALL $46(($20 + [944]), ($20 + [1328]), ($20 + [464]))
	$14 = [0]
	$5 = *($20 + [948])
	if ( ($5 == 0) ){ goto $label$175 }
	$14 = ( $5 ? [0] : (int_64)(((int_64)((int_64)*($20 + [464]) ^ (int_64)(uint_64)*($5 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($20 + [472]) ^ (int_64)*(($5 + [16])))) == 0) )
	
.LABEL $label$175
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [1456])
	$1 = *($14)
	*(($20 + [360])) = [0]
	*($20 + [352]) = (int_64)0
	$14 = CALL strlen([11616])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$23 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$160 }
	*($20 + [352]) = ($14 << [1])
	$5 = (($20 + [352]) | [1])
	if ( $14 ){ goto $label$159 }
	goto $label$158 
	
.LABEL $label$161
	*($20 + [464]) = $18
	CALL $56(($20 + [768]), ($20 + [464]))
	$14 = CALL $745(($20 + [768]), [11152])
	$5 = *($14)
	*($14) = [0]
	$1 = *($14 + [4])
	*($14 + [4]) = [0]
	$12 = *($14 + [8])
	*($14 + [8]) = [0]
	if ( (*($20 + [1008]) & [1]) ){ goto $label$155 }
	*($20 + [1008]) = [0]
	goto $label$154 
	
.LABEL $label$160
	$12 = (($14 + [16]) & [-16])
	$5 = CALL $737($12)
	*($20 + [352]) = ($12 | [1])
	*($20 + [360]) = $5
	*($20 + [356]) = $14
	
.LABEL $label$159
	CALL memcpy($5, [11616], $14)
	
.LABEL $label$158
	*(($5 + $14)) = [0]
	CALL _ZNSt3__19to_stringEm(($20 + [336]), $1)
	CALL $83($0, $4, ($20 + [352]), ($20 + [336]))
	if ( ((*($20 + [336]) & [1]) == 0) ){ goto $label$176 }
	CALL $738(*($20 + [344]))
	
.LABEL $label$176
	if ( ((*($20 + [352]) & [1]) == 0) ){ goto $label$177 }
	CALL $738(*($20 + [360]))
	
.LABEL $label$177
	CALL _ZN11walexchange12wal_exchange11in_transferERKyRKN5eosio5assetE($0, ($20 + [1320]), $13)
	$1 = *($20 + [792])
	if ( ($1 == 0) ){ goto $label$22 }
	$0 = ($20 + [796])
	$14 = *($0)
	if ( ((int_32)$14 == (int_32)$1) ){ goto $label$151 }
	
.LOOP $label$178:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$179 }
	CALL $738($5)
	
.LABEL $label$179
	if ( ((int_32)$1 != (int_32)$14) ){ goto $label$178 }
	$14 = *(($20 + [792]))
	goto $label$150 
	
.LABEL $label$157
	*(*(($20 + [1016]))) = [0]
	*($20 + [1012]) = [0]
	
.LABEL $label$156
	CALL $742(($20 + [1008]), [0])
	*((($20 + [1008]) + [8])) = *((($20 + [768]) + [8]))
	*($20 + [1008]) = *($20 + [768])
	if ( $19 ){ goto $label$153 }
	goto $label$152 
	
.LABEL $label$155
	*(*(($20 + [1016]))) = [0]
	*($20 + [1012]) = [0]
	
.LABEL $label$154
	CALL $742(($20 + [1008]), [0])
	*(($20 + [1016])) = $12
	*($20 + [1008]) = $5
	*($20 + [1012]) = $1
	if ( ((*($20 + [768]) & [1]) == 0) ){ goto $label$180 }
	CALL $738(*($20 + [776]))
	
.LABEL $label$180
	if ( ($19 == 0) ){ goto $label$152 }
	
.LABEL $label$153
	CALL $753(($20 + [768]), [11600], (*($20 + [1168]) + [12]))
	if ( (*($20 + [1008]) & [1]) ){ goto $label$182 }
	*($20 + [1008]) = [0]
	goto $label$181 
	
.LABEL $label$182
	*(*(($20 + [1016]))) = [0]
	*($20 + [1012]) = [0]
	
.LABEL $label$181
	CALL $742(($20 + [1008]), [0])
	*((($20 + [1008]) + [8])) = *((($20 + [768]) + [8]))
	*($20 + [1008]) = *($20 + [768])
	
.LABEL $label$152
	$2 = *($0)
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [2144]
	$17 = (int_64)0
	
.LOOP $label$183:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$188 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$187 }
	$5 = ($5 + [165])
	goto $label$186 
	
.LABEL $label$188
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$185 }
	goto $label$184 
	
.LABEL $label$187
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$186
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$185
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$184
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$183 }
	*($20 + [944]) = $2
	*($20 + [952]) = $17
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [3360]
	$4 = *($20 + [1320])
	$17 = (int_64)0
	
.LOOP $label$189:
	if ( ((uint_64)$16 > (uint_64)(int_64)7) ){ goto $label$194 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$193 }
	$5 = ($5 + [165])
	goto $label$192 
	
.LABEL $label$194
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$191 }
	goto $label$190 
	
.LABEL $label$193
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$192
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$191
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$190
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$189 }
	*(($20 + [800])) = [0]
	*($20 + [776]) = $2
	*($20 + [768]) = $2
	*($20 + [784]) = (int_64)-1
	*($20 + [792]) = (int_64)0
	$14 = [0]
	$5 = CALL db_find_i64($2, $2, (int_64)4982871455592087552, (int_64)4982871455592087552)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$195 }
	$14 = CALL $84(($20 + [768]), $5)
	CALL eosio_assert(((int_32)*($14 + [32]) == (int_32)($20 + [768])), [288])
	
.LABEL $label$195
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [672])
	$16 = *($14 + [8])
	$1 = *($20 + [792])
	if ( ($1 == 0) ){ goto $label$196 }
	$12 = ($20 + [796])
	$14 = *($12)
	if ( ((int_32)$14 == (int_32)$1) ){ goto $label$198 }
	
.LOOP $label$199:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$200 }
	CALL $738($5)
	
.LABEL $label$200
	if ( ((int_32)$1 != (int_32)$14) ){ goto $label$199 }
	$14 = *(($20 + [792]))
	goto $label$197 
	
.LABEL $label$198
	$14 = $1
	
.LABEL $label$197
	*($12) = $1
	CALL $738($14)
	
.LABEL $label$196
	*(($20 + [796])) = *(($13 + [12]))
	*(($20 + [792])) = *(($13 + [8]))
	*(($20 + [788])) = *(($13 + [4]))
	*($20 + [776]) = $16
	*($20 + [768]) = *($0)
	*($20 + [784]) = *($13)
	CALL $767(($20 + [800]), ($20 + [1008]))
	$14 = CALL $151(($20 + [464]), ($20 + [944]), $4, $17, ($20 + [768]))
	CALL $87(($20 + [1328]), $14)
	$5 = *($20 + [1328])
	CALL send_inline($5, (*($20 + [1332]) - $5))
	$5 = *($20 + [1328])
	if ( ($5 == 0) ){ goto $label$201 }
	*($20 + [1332]) = $5
	CALL $738($5)
	
.LABEL $label$201
	$5 = *($14 + [28])
	if ( ($5 == 0) ){ goto $label$202 }
	*(($14 + [32])) = $5
	CALL $738($5)
	
.LABEL $label$202
	$5 = *($14 + [16])
	if ( ($5 == 0) ){ goto $label$203 }
	*(($14 + [20])) = $5
	CALL $738($5)
	
.LABEL $label$203
	if ( ((*($20 + [800]) & [1]) == 0) ){ goto $label$204 }
	CALL $738(*(($20 + [808])))
	
.LABEL $label$204
	if ( ((*($20 + [1008]) & [1]) == 0) ){ goto $label$22 }
	CALL $738(*(($20 + [1016])))
	$1 = *($20 + [528])
	if ( $1 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$151
	$14 = $1
	
.LABEL $label$150
	*($0) = $1
	CALL $738($14)
	$1 = *($20 + [528])
	if ( $1 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$24
	CALL $739(($20 + [1072]))
	
.LABEL $label$23
	CALL $739(($20 + [352]))
	
.LABEL $label$22
	$1 = *($20 + [528])
	if ( ($1 == 0) ){ goto $label$20 }
	
.LABEL $label$21
	$0 = ($20 + [532])
	$14 = *($0)
	if ( ((int_32)$14 == (int_32)$1) ){ goto $label$206 }
	
.LOOP $label$207:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$208 }
	CALL $738($5)
	
.LABEL $label$208
	if ( ((int_32)$1 != (int_32)$14) ){ goto $label$207 }
	$14 = *(($20 + [528]))
	goto $label$205 
	
.LABEL $label$206
	$14 = $1
	
.LABEL $label$205
	*($0) = $1
	CALL $738($14)
	
.LABEL $label$20
	$1 = *($20 + [1056])
	if ( ($1 == 0) ){ goto $label$209 }
	$0 = ($20 + [1060])
	$14 = *($0)
	if ( ((int_32)$14 == (int_32)$1) ){ goto $label$211 }
	
.LOOP $label$212:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$213 }
	CALL $738($5)
	
.LABEL $label$213
	if ( ((int_32)$1 != (int_32)$14) ){ goto $label$212 }
	$14 = *(($20 + [1056]))
	goto $label$210 
	
.LABEL $label$211
	$14 = $1
	
.LABEL $label$210
	*($0) = $1
	CALL $738($14)
	
.LABEL $label$209
	$1 = *($20 + [712])
	if ( ($1 == 0) ){ goto $label$214 }
	$0 = ($20 + [716])
	$14 = *($0)
	if ( ((int_32)$14 == (int_32)$1) ){ goto $label$216 }
	
.LOOP $label$217:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$218 }
	CALL $738($5)
	
.LABEL $label$218
	if ( ((int_32)$1 != (int_32)$14) ){ goto $label$217 }
	$14 = *(($20 + [712]))
	goto $label$215 
	
.LABEL $label$216
	$14 = $1
	
.LABEL $label$215
	*($0) = $1
	CALL $738($14)
	
.LABEL $label$214
	$1 = *($20 + [1128])
	if ( ($1 == 0) ){ goto $label$219 }
	$0 = ($20 + [1132])
	$14 = *($0)
	if ( ((int_32)$14 == (int_32)$1) ){ goto $label$221 }
	
.LOOP $label$222:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$223 }
	CALL $738($5)
	
.LABEL $label$223
	if ( ((int_32)$1 != (int_32)$14) ){ goto $label$222 }
	$14 = *(($20 + [1128]))
	goto $label$220 
	
.LABEL $label$221
	$14 = $1
	
.LABEL $label$220
	*($0) = $1
	CALL $738($14)
	
.LABEL $label$219
	$1 = *($20 + [1168])
	if ( ($1 == 0) ){ goto $label$224 }
	$14 = *($20 + [1172])
	if ( ((int_32)$14 == (int_32)$1) ){ goto $label$226 }
	$5 = ([0] - $1)
	$14 = ($14 + [-12])
	
.LOOP $label$227:
	if ( ((*($14) & [1]) == 0) ){ goto $label$228 }
	CALL $738(*(($14 + [8])))
	
.LABEL $label$228
	$14 = ($14 + [-12])
	if ( ((int_32)($14 + $5) != (int_32)[-12]) ){ goto $label$227 }
	$14 = *($20 + [1168])
	goto $label$225 
	
.LABEL $label$226
	$14 = $1
	
.LABEL $label$225
	*($20 + [1172]) = $1
	CALL $738($14)
	
.LABEL $label$224
	if ( ((*($20 + [1184]) & [1]) == 0) ){ goto $label$229 }
	CALL $738(*($20 + [1192]))
	
.LABEL $label$229
	$1 = *($20 + [1264])
	if ( ($1 == 0) ){ goto $label$230 }
	$0 = ($20 + [1268])
	$14 = *($0)
	if ( ((int_32)$14 == (int_32)$1) ){ goto $label$232 }
	
.LOOP $label$233:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$234 }
	CALL $738($5)
	
.LABEL $label$234
	if ( ((int_32)$1 != (int_32)$14) ){ goto $label$233 }
	$14 = *(($20 + [1264]))
	goto $label$231 
	
.LABEL $label$232
	$14 = $1
	
.LABEL $label$231
	*($0) = $1
	CALL $738($14)
	
.LABEL $label$230
	$1 = *($20 + [1304])
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$8
	$0 = ($20 + [1308])
	$14 = *($0)
	if ( ((int_32)$14 == (int_32)$1) ){ goto $label$236 }
	
.LOOP $label$237:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$238 }
	CALL $738($5)
	
.LABEL $label$238
	if ( ((int_32)$1 != (int_32)$14) ){ goto $label$237 }
	$14 = *(($20 + [1304]))
	goto $label$235 
	
.LABEL $label$236
	$14 = $1
	
.LABEL $label$235
	*($0) = $1
	CALL $738($14)
	
.LABEL $label$1
	*([0] + [4]) = ($20 + [1344])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $77 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)8201493947489942528, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $105($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN11walexchange12wal_exchange15create_withdrawEyyyyN5eosio15extended_symbolExxbhyNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_bbS9_ (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_64 $6, int_64 $7, int_32 $8, int_32 $9, int_64 $10, int_32 $11, int_32 $12, int_32 $13, int_32 $14, int_32 $15)
{
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$20 = (*([0] + [4]) - [288])
	*([0] + [4]) = $20
	*($20 + [184]) = $3
	*($20 + [183]) = $8
	*($20 + [182]) = $9
	*($20 + [168]) = $10
	$10 = *($0)
	*($20 + [160]) = $10
	$18 = [0]
	$3 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($20 + [160]), $1, [0])
	*((($20 + [208]) + [32])) = [0]
	*($20 + [216]) = $10
	*($20 + [208]) = $10
	*($20 + [224]) = (int_64)-1
	*($20 + [232]) = (int_64)0
	*($20 + [244]) = [0]
	$16 = CALL $11(($20 + [208]), $3, [592])
	$17 = *($20 + [232])
	if ( ($17 == 0) ){ goto $label$1 }
	$19 = ($20 + [236])
	$9 = *($19)
	if ( ((int_32)$9 == (int_32)$17) ){ goto $label$3 }
	
.LOOP $label$4:
	$9 = ($9 + [-24])
	$8 = *($9)
	*($9) = [0]
	if ( ($8 == 0) ){ goto $label$5 }
	CALL $738($8)
	
.LABEL $label$5
	if ( ((int_32)$17 != (int_32)$9) ){ goto $label$4 }
	$9 = *(($20 + [232]))
	goto $label$2 
	
.LABEL $label$3
	$9 = $17
	
.LABEL $label$2
	*($19) = $17
	CALL $738($9)
	
.LABEL $label$1
	*((($20 + [120]) + [32])) = [0]
	*($20 + [136]) = (int_64)-1
	*($20 + [144]) = (int_64)0
	$10 = *($0)
	*($20 + [120]) = $10
	*($20 + [128]) = $10
	*($20 + [156]) = [0]
	*($20 + [112]) = ($20 + [120])
	*($20 + [216]) = *($5 + [8])
	*($20 + [208]) = (uint_64)*($5) >> (uint_64)(int_64)8)
	CALL $46(($20 + [40]), ($20 + [112]), ($20 + [208]))
	$9 = *($20 + [44])
	if ( ($9 == 0) ){ goto $label$6 }
	$18 = ( $9 ? [0] : (int_64)(((int_64)((int_64)*($20 + [208]) ^ (int_64)(uint_64)*($9 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($20 + [216]) ^ (int_64)*(($9 + [16])))) == 0) )
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$18 != (int_32)[0]), [1456])
	$18 = *($18)
	*($20 + [104]) = *($0)
	$10 = *($16 + [16])
	CALL $767(($20 + [88]), $11)
	CALL _ZN11walexchange21order_withdraw_helper25check_order_withdraw_memoEybbNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEmb(($20 + [104]), $10, $14, [1], ($20 + [88]), $18, $13)
	if ( ((*($20 + [88]) & [1]) == 0) ){ goto $label$7 }
	CALL $738(*($20 + [96]))
	
.LABEL $label$7
	if ( *($20 + [183]) ){ goto $label$9 }
	if ( ((int_32)$14 ^ (int_32)[1]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ($14 == 0) ){ goto $label$15 }
	if ( ($13 == 0) ){ goto $label$14 }
	*((($20 + [208]) + [32])) = [0]
	*($20 + [224]) = (int_64)-1
	*($20 + [232]) = (int_64)0
	$10 = *($0)
	*($20 + [208]) = $10
	*($20 + [216]) = $10
	$10 = *(CALL $77(($20 + [208]), (CASTING uint_64)(uint_32 $18), [592]) + [8])
	*((($20 + [40]) + [32])) = [0]
	*($20 + [56]) = (int_64)-1
	*($20 + [64]) = (int_64)0
	$1 = *($0)
	*($20 + [40]) = $1
	*($20 + [48]) = $1
	*($20 + [76]) = [0]
	*($20 + [80]) = *(CALL $78(($20 + [40]), $10, [592]) + [16])
	$17 = *($20 + [64])
	if ( ($17 == 0) ){ goto $label$11 }
	$14 = ($20 + [68])
	$9 = *($14)
	if ( ((int_32)$9 == (int_32)$17) ){ goto $label$13 }
	
.LOOP $label$16:
	$9 = ($9 + [-24])
	$8 = *($9)
	*($9) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $738($8)
	
.LABEL $label$17
	if ( ((int_32)$17 != (int_32)$9) ){ goto $label$16 }
	$9 = *(($20 + [64]))
	goto $label$12 
	
.LABEL $label$15
	*($20 + [80]) = $1
	goto $label$10 
	
.LABEL $label$14
	$10 = CALL $76(($20 + [104]), $11)
	*($20 + [80]) = $10
	CALL eosio_assert(CALL $fimport$46($10), [2032])
	goto $label$10 
	
.LABEL $label$13
	$9 = $17
	
.LABEL $label$12
	*($14) = $17
	CALL $738($9)
	
.LABEL $label$11
	$17 = *($20 + [232])
	if ( ($17 == 0) ){ goto $label$10 }
	$14 = ($20 + [236])
	$9 = *($14)
	if ( ((int_32)$9 == (int_32)$17) ){ goto $label$19 }
	
.LOOP $label$20:
	$9 = ($9 + [-24])
	$8 = *($9)
	*($9) = [0]
	if ( ($8 == 0) ){ goto $label$21 }
	CALL $738($8)
	
.LABEL $label$21
	if ( ((int_32)$17 != (int_32)$9) ){ goto $label$20 }
	$9 = *(($20 + [232]))
	goto $label$18 
	
.LABEL $label$19
	$9 = $17
	
.LABEL $label$18
	*($14) = $17
	CALL $738($9)
	
.LABEL $label$10
	*(($17 = ($20 + [240]))) = [0]
	*($20 + [216]) = $2
	*($20 + [224]) = (int_64)-1
	*($20 + [232]) = (int_64)0
	$10 = *($0)
	*($20 + [208]) = $10
	*($20 + [244]) = [0]
	*($20 + [64]) = $12
	*($20 + [44]) = ($20 + [208])
	*($20 + [40]) = ($20 + [183])
	*($20 + [48]) = ($20 + [184])
	*($20 + [52]) = ($20 + [168])
	*($20 + [56]) = ($20 + [182])
	*($20 + [60]) = ($20 + [80])
	*($20 + [68]) = $15
	*($20 + [280]) = $10
	CALL eosio_assert(((int_64)$10 == (int_64)CALL $fimport$16()), [432])
	*($20 + [268]) = ($20 + [40])
	*($20 + [264]) = ($20 + [208])
	*($20 + [272]) = ($20 + [280])
	*(($9 = CALL $737([72])) + [32 align=4]) = (int_64)0
	*($9 + [40 align=4]) = (int_64)0
	*($9 + [48 align=4]) = (int_64)0
	*($9 + [56]) = ($20 + [208])
	CALL $79(($20 + [264]), $9)
	*($20 + [200]) = $9
	$10 = *($9)
	*($20 + [264]) = $10
	$14 = *($9 + [60])
	*($20 + [196]) = $14
	$5 = ($20 + [236])
	$8 = *($5)
	if ( ((uint_32)$8 >= (uint_32)*($17)) ){ goto $label$23 }
	*($8 + [8]) = $10
	*($8 + [16]) = $14
	*($20 + [200]) = [0]
	*($8) = $9
	*($5) = ($8 + [24])
	goto $label$22 
	
.LABEL $label$23
	CALL $80(($20 + [232]), ($20 + [200]), ($20 + [264]), ($20 + [196]))
	
.LABEL $label$22
	$8 = *($20 + [200])
	*($20 + [200]) = [0]
	if ( ($8 == 0) ){ goto $label$24 }
	if ( ((*($8 + [44]) & [1]) == 0) ){ goto $label$25 }
	CALL $738(*(($8 + [52])))
	
.LABEL $label$25
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$26 }
	CALL $738(*(($8 + [40])))
	
.LABEL $label$26
	CALL $738($8)
	
.LABEL $label$24
	*($20 + [184]) = *($9)
	$17 = *($20 + [232])
	if ( ($17 == 0) ){ goto $label$8 }
	$14 = ($20 + [236])
	$8 = *($14)
	if ( ((int_32)$8 == (int_32)$17) ){ goto $label$28 }
	
.LOOP $label$29:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$30 }
	if ( ((*($9 + [44]) & [1]) == 0) ){ goto $label$31 }
	CALL $738(*(($9 + [52])))
	
.LABEL $label$31
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$32 }
	CALL $738(*(($9 + [40])))
	
.LABEL $label$32
	CALL $738($9)
	
.LABEL $label$30
	if ( ((int_32)$17 != (int_32)$8) ){ goto $label$29 }
	$9 = *(($20 + [232]))
	goto $label$27 
	
.LABEL $label$28
	$9 = $17
	
.LABEL $label$27
	*($14) = $17
	CALL $738($9)
	
.LABEL $label$8
	*(($17 = ($20 + [72]))) = [0]
	*($20 + [48]) = $2
	*($20 + [56]) = (int_64)-1
	*($20 + [64]) = (int_64)0
	$10 = *($0)
	*($20 + [40]) = $10
	*($20 + [76]) = [0]
	CALL eosio_assert(((int_64)$10 == (int_64)CALL $fimport$16()), [432])
	*(($9 = CALL $737([72])) + [56]) = ($20 + [40])
	*($9 + [8]) = $4
	*($9) = *($20 + [184])
	*($9 + [16]) = *($20 + [183])
	*($9 + [24]) = *($16)
	*($9 + [32]) = $18
	*($9 + [40]) = $6
	*($9 + [48]) = $7
	*($20 + [272]) = (($20 + [208]) + [45])
	*($20 + [268]) = ($20 + [208])
	*($20 + [264]) = ($20 + [208])
	CALL $81(($20 + [264]), $9)
	$2 = *($9)
	*($9 + [60]) = CALL db_store_i64(*($20 + [48]), (int_64)-3658914434178940928, $10, $2, ($20 + [208]), [45])
	if ( (uint_64)($2 <= *($20 + [56])) ){ goto $label$33 }
	*(($20 + [56])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$33
	$2 = *($9)
	$1 = *((($20 + [40]) + [8]))
	*($20 + [280]) = *(($9 + [8]))
	*($9 + [64]) = CALL db_idx64_store($1, (int_64)-3658914434178940928, $10, $2, ($20 + [280]))
	*($20 + [264]) = $9
	$10 = *($9)
	*($20 + [208]) = $10
	$14 = *(($9 + [60]))
	*($20 + [280]) = $14
	$5 = ($20 + [68])
	$8 = *($5)
	if ( ((uint_32)$8 >= (uint_32)*($17)) ){ goto $label$35 }
	*($8 + [8]) = $10
	*($8 + [16]) = $14
	*($20 + [264]) = [0]
	*($8) = $9
	*($5) = ($8 + [24])
	goto $label$34 
	
.LABEL $label$35
	CALL $82(($20 + [64]), ($20 + [264]), ($20 + [208]), ($20 + [280]))
	
.LABEL $label$34
	$9 = *($20 + [264])
	*($20 + [264]) = [0]
	if ( ($9 == 0) ){ goto $label$36 }
	CALL $738($9)
	
.LABEL $label$36
	$10 = *($16)
	*(($20 + [32])) = [0]
	*($20 + [24]) = (int_64)0
	$9 = CALL strlen([2080])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$37 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$40 }
	*($20 + [24]) = ($9 << [1])
	$8 = (($20 + [24]) | [1])
	if ( $9 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	$17 = (($9 + [16]) & [-16])
	$8 = CALL $737($17)
	*($20 + [24]) = ($17 | [1])
	*($20 + [32]) = $8
	*($20 + [28]) = $9
	
.LABEL $label$39
	CALL memcpy($8, [2080], $9)
	
.LABEL $label$38
	*(($8 + $9)) = [0]
	CALL _ZNSt3__19to_stringEm(($20 + [8]), $18)
	CALL $83($0, $10, ($20 + [24]), ($20 + [8]))
	if ( ((*($20 + [8]) & [1]) == 0) ){ goto $label$41 }
	CALL $738(*($20 + [16]))
	
.LABEL $label$41
	if ( ((*($20 + [24]) & [1]) == 0) ){ goto $label$42 }
	CALL $738(*($20 + [32]))
	
.LABEL $label$42
	$17 = *($20 + [64])
	if ( ($17 == 0) ){ goto $label$43 }
	$0 = ($20 + [68])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$17) ){ goto $label$45 }
	
.LOOP $label$46:
	$9 = ($9 + [-24])
	$8 = *($9)
	*($9) = [0]
	if ( ($8 == 0) ){ goto $label$47 }
	CALL $738($8)
	
.LABEL $label$47
	if ( ((int_32)$17 != (int_32)$9) ){ goto $label$46 }
	$9 = *(($20 + [64]))
	goto $label$44 
	
.LABEL $label$45
	$9 = $17
	
.LABEL $label$44
	*($0) = $17
	CALL $738($9)
	
.LABEL $label$43
	$17 = *($20 + [144])
	if ( ($17 == 0) ){ goto $label$48 }
	$0 = ($20 + [148])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$17) ){ goto $label$50 }
	
.LOOP $label$51:
	$9 = ($9 + [-24])
	$8 = *($9)
	*($9) = [0]
	if ( ($8 == 0) ){ goto $label$52 }
	CALL $738($8)
	
.LABEL $label$52
	if ( ((int_32)$17 != (int_32)$9) ){ goto $label$51 }
	$9 = *(($20 + [144]))
	goto $label$49 
	
.LABEL $label$50
	$9 = $17
	
.LABEL $label$49
	*($0) = $17
	CALL $738($9)
	
.LABEL $label$48
	*([0] + [4]) = ($20 + [288])
	return (unreachable)
	
.LABEL $label$37
	CALL $739(($20 + [24]))
}

int_64 .FUNC _ZNSt3__15stollERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$3 = CALL strlen([20400])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($3 << [1])
	$6 = ($7 | [1])
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$5 = (($3 + [16]) & [-16])
	$6 = CALL $737($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $3
	
.LABEL $label$5
	CALL memcpy($6, [20400], $3)
	
.LABEL $label$4
	*(($6 + $3)) = [0]
	*($7 + [12]) = [0]
	$3 = *($0 + [8])
	$6 = *($0)
	$5 = *(CALL __errno_location())
	*(CALL __errno_location()) = [0]
	$3 = ( $3 ? ($0 + [1]) : ($6 & [1]) )
	$4 = CALL strtoll($3, ($7 + [12]), $2)
	$0 = CALL __errno_location()
	$6 = *($0)
	*($0) = $5
	if ( ((int_32)$6 == (int_32)[34]) ){ goto $label$2 }
	$0 = *($7 + [12])
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($0 - $3)
	
.LABEL $label$7
	if ( ((*($7) & [1]) == 0) ){ goto $label$8 }
	CALL $738(*($7 + [8]))
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [16])
	return $4
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $755($7)
	
.LABEL $label$1
	CALL $756($7)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC _ZN11walexchange21order_withdraw_helper25check_order_withdraw_memoEybbNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEmb (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ($6 == 0) ){ goto $label$4 }
	$3 = [0]
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$1 = *($0)
	*($7 + [8]) = $1
	*($7 + [16]) = $1
	$4 = CALL db_find_i64($1, $1, (int_64)8201493947489942528, (CASTING uint_64)(uint_32 $5))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert(((int_32)*(CALL $105(($7 + [8]), $4) + [16]) == (int_32)($7 + [8])), [288])
	$3 = [1]
	
.LABEL $label$6
	CALL eosio_assert($3, [2384])
	$2 = *($7 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	$6 = ($7 + [36])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$7:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$7 }
	$3 = *(($7 + [32]))
	goto $label$2 
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$6 ^ (int_32)[1]), [2464])
	$3 = *($4)
	$2 = CALL strlen([1568])
	if ( ((int_32)$2 != (int_32)( *($4 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )) ){ goto $label$11 }
	if ( (CALL $752($4, [0], [-1], [1568], $2) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$3 = [0]
	if ( ((int_64)CALL $76($0, $4) != (int_64)$1) ){ goto $label$9 }
	
.LABEL $label$10
	$3 = CALL is_account($1)
	
.LABEL $label$9
	CALL eosio_assert($3, [2512])
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(CALL $fimport$46(CALL $76($0, $4)), [2416])
	goto $label$1 
	
.LABEL $label$3
	$3 = $2
	
.LABEL $label$2
	*($6) = $2
	CALL $738($3)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [48])
}

void .FUNC _ZNSt3__19to_stringEi (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [20432], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $762(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $762(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC $358 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [64]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2320])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-3020370205707976704)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2256])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2256])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $52(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC _ZN11walexchange12wal_exchange11clearunbindENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [112])
	*([0] + [4]) = $5
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	$2 = *($1)
	if ( ($2 & [1]) ){ goto $label$3 }
	$1 = uint_32($2 >> [1])
	goto $label$2 
	
.LABEL $label$3
	$1 = *($1 + [4])
	
.LABEL $label$2
	CALL eosio_assert(($1 <= [257]), [3264])
	*((($5 + [64]) + [32])) = [0]
	*($5 + [80]) = (int_64)-1
	*($5 + [88]) = (int_64)0
	$3 = *($0)
	*($5 + [64]) = $3
	*($5 + [72]) = $3
	*($5 + [100]) = [0]
	*($5 + [56]) = ($5 + [64])
	*($5 + [8]) = (CASTING uint_64)(uint_32 ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) - *(($0 + [152]))))
	CALL $360(($5 + [48]), ($5 + [56]), ($5 + [8]))
	*((($5 + [8]) + [32])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$3 = *($0)
	*($5 + [8]) = $3
	*($5 + [16]) = $3
	$0 = [0]
	$1 = CALL db_find_i64($3, $3, (int_64)-4417020450001911808, (int_64)-4417020450001911808)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $33(($5 + [8]), $1)
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)($5 + [8])), [288])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [672])
	$2 = *($0 + [6])
	*($5 + [104]) = (int_64)0
	CALL $361($5, ($5 + [56]), ($5 + [104]))
	$1 = $2
	if ( ((int_32)*($5 + [4]) == (int_32)*($5 + [52])) ){ goto $label$5 }
	$0 = $2
	
.LOOP $label$6:
	$1 = ($0 + [-1])
	if ( (($0 & [65535]) == 0) ){ goto $label$5 }
	$3 = *($5)
	*($5 + [104]) = $3
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$0) != (int_32)[0]), [736])
	CALL $362(($5 + [104]))
	CALL $363(*($5 + [56]), $0)
	$3 = *($5 + [104])
	*($5) = $3
	$0 = $1
	if ( ((int_32)(CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)) != (int_32)*($5 + [52])) ){ goto $label$6 }
	
.LABEL $label$5
	CALL eosio_assert(((int_32)($1 & [65535]) != (int_32)($2 & [65535])), [5232])
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$7 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $738($1)
	
.LABEL $label$11
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($5 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $2
	
.LABEL $label$8
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$7
	$2 = *($5 + [88])
	if ( ($2 == 0) ){ goto $label$12 }
	$4 = ($5 + [92])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$14 }
	
.LOOP $label$15:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$16 }
	CALL $738($1)
	
.LABEL $label$16
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$15 }
	$0 = *(($5 + [88]))
	goto $label$13 
	
.LABEL $label$14
	$0 = $2
	
.LABEL $label$13
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$12
	*([0] + [4]) = ($5 + [112])
}

int_32 .FUNC $608 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	float_64 $8
	float_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$20 = (*([0] + [4]) - [176])
	$19 = $20
	*([0] + [4]) = $20
	$2 = *($1 + [4])
	$18 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($20 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($19 + [32]) = (int_64)0
	*($19 + [24]) = (int_64)0
	*($19 + [40]) = [0]
	*($19 + [44 align=4]) = (int_64)0
	*($19 + [56]) = (int_64)0
	*($19 + [64]) = (int_64)0
	*($19 + [72]) = [0]
	*($19 + [76]) = [0]
	*($19 + [80]) = (int_64)0
	*($19 + [88]) = [0]
	*($19 + [92]) = [0]
	*($19 + [96]) = (int_64)0
	*($19 + [104]) = (int_64)0
	*($19 + [112]) = (int_64)0
	*($19 + [120]) = (int_64)0
	*($19 + [164]) = $1
	*($19 + [160]) = $1
	*($19 + [168]) = ($1 + $3)
	*($19 + [128]) = ($19 + [160])
	*($19 + [144]) = ($19 + [24])
	CALL $723(($19 + [144]), ($19 + [128]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*(($1 = (($19 + [128]) + [8]))) = *((($19 + [24]) + [8]))
	*($19 + [128]) = *($19 + [24])
	$16 = *(($19 + [120]))
	$15 = *(($19 + [112]))
	$14 = *(($19 + [104]))
	$13 = *(($19 + [96]))
	$3 = *(($19 + [92]))
	$20 = *(($19 + [88]))
	$12 = *(($19 + [80]))
	$11 = *(($19 + [76]))
	$10 = *(($19 + [72]))
	$9 = *(($19 + [64]))
	$8 = *(($19 + [56]))
	$7 = *(($19 + [48]))
	$6 = *(($19 + [44]))
	$5 = *(($19 + [41]))
	$4 = *(($19 + [40]))
	*((($19 + [144]) + [8])) = *($1)
	*($19 + [144]) = *($19 + [128])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$18 = *((*($1) + $18))
	
.LABEL $label$5
	$17 = *((($19 + [144]) + [8]))
	*((($19 + [160]) + [8])) = $17
	*((($19 + [8]) + [8])) = $17
	$17 = *($19 + [144])
	*($19 + [160]) = $17
	*($19 + [8]) = $17
	CALL void $1((int_32 ($19 + [8])), (int_32 ($4 & [255])), (int_32 ($5 & [255])), (int_32 $6), (int_32 $7), (int_32 $8), (int_64 $9), (int_64 $10), (int_32 $11), (int_32 $12), (int_64 $20), (int_32 $3), (int_32 $13), (int_64 $14), (int_64 $15), (int_64 $16), (int_64 $18))
	*([0] + [4]) = ($19 + [176])
	return [1]
}

int_32 .FUNC $609 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	*(($2 = $3) + [44]) = $0
	*($2 + [32]) = *($1)
	*($2 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*($2 + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [52]) = $1
	*($2 + [48]) = $1
	*($2 + [56]) = ($1 + $0)
	CALL $101(($2 + [48]), ($2 + [8]))
	CALL eosio_assert(((uint_32)(*($2 + [56]) - *($2 + [52])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [24]), *($2 + [52]), [8])
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [52]) = ($2 + [32])
	*($2 + [48]) = ($2 + [44])
	CALL $722(($2 + [48]), ($2 + [8]))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $738(*(($2 + [16])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [64])
	return [1]
}

void .FUNC _ZN11walexchange12wal_exchange5applyEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [1872])
	*([0] + [4]) = $11
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [11680]
	$9 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$8 > (uint_64)(int_64)3) ){ goto $label$6 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$7 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [11696]
	$9 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$8 > (uint_64)(int_64)9) ){ goto $label$13 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$9
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$8 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$7 }
	$6 = [0]
	*((($11 + [1832]) + [32])) = [0]
	*($11 + [1848]) = (int_64)-1
	*($11 + [1856]) = (int_64)0
	$8 = *($0)
	*($11 + [1832]) = $8
	*($11 + [1840]) = $8
	$3 = [0]
	$4 = CALL db_find_i64($8, $8, (int_64)4982871454518345728, (int_64)4982871454518345728)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$14 }
	$3 = CALL $551(($11 + [1832]), $4)
	CALL eosio_assert(((int_32)*($3 + [96]) == (int_32)($11 + [1832])), [288])
	
.LABEL $label$14
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [672])
	CALL memcpy(($11 + [1736]), $3, [96])
	CALL memcpy(($0 + [128]), ($11 + [1736]), [96])
	*((($11 + [1736]) + [32])) = [0]
	*($11 + [1752]) = (int_64)-1
	*($11 + [1760]) = (int_64)0
	$8 = *($0)
	*($11 + [1736]) = $8
	*($11 + [1744]) = $8
	$3 = CALL db_find_i64($8, $8, (int_64)4982871455592087552, (int_64)4982871455592087552)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$15 }
	$6 = CALL $84(($11 + [1736]), $3)
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)($11 + [1736])), [288])
	
.LABEL $label$15
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [672])
	*(($3 = (($11 + [1704]) + [24]))) = *(($6 + [24]))
	*(($4 = (($11 + [1704]) + [16]))) = *(($6 + [16]))
	*(($5 = (($11 + [1704]) + [8]))) = *(($6 + [8]))
	*($11 + [1704]) = *($6)
	*(($0 + [248])) = *($3)
	*(($0 + [240])) = *($4)
	*(($0 + [232])) = *($5)
	*($0 + [224]) = *($11 + [1704])
	$4 = *($11 + [1760])
	if ( ($4 == 0) ){ goto $label$16 }
	$5 = ($11 + [1764])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$18 }
	
.LOOP $label$19:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$20 }
	CALL $738($3)
	
.LABEL $label$20
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$19 }
	$6 = *(($11 + [1760]))
	goto $label$17 
	
.LABEL $label$18
	$6 = $4
	
.LABEL $label$17
	*($5) = $4
	CALL $738($6)
	
.LABEL $label$16
	$4 = *($11 + [1856])
	if ( ($4 == 0) ){ goto $label$7 }
	$5 = ($11 + [1860])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$22 }
	
.LOOP $label$23:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$24 }
	CALL $738($3)
	
.LABEL $label$24
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$23 }
	$6 = *(($11 + [1856]))
	goto $label$21 
	
.LABEL $label$22
	$6 = $4
	
.LABEL $label$21
	*($5) = $4
	CALL $738($6)
	
.LABEL $label$7
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [3360]
	$9 = (int_64)0
	
.LOOP $label$25:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$30 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$3 = ($3 + [165])
	goto $label$28 
	
.LABEL $label$30
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$26
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$25 }
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$32 }
	CALL $607(($11 + [1736]))
	CALL _ZN11walexchange12wal_exchange2onERNS_8transferEy($0, ($11 + [1736]), $1)
	if ( ((*($11 + [1768]) & [1]) == 0) ){ goto $label$31 }
	CALL $738(*(($11 + [1776])))
	goto $label$31 
	
.LABEL $label$32
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [11712])
	if ( ((int_64)$2 > (int_64)-2688959063050768897) ){ goto $label$137 }
	if ( ((int_64)$2 <= (int_64)-4417269088631674881) ){ goto $label$136 }
	if ( ((int_64)$2 <= (int_64)-4416989697210422929) ){ goto $label$134 }
	if ( ((int_64)$2 > (int_64)-3111238946495234049) ){ goto $label$130 }
	if ( ((int_64)$2 <= (int_64)-4315190764611043329) ){ goto $label$122 }
	if ( ((int_64)$2 > (int_64)-3112293401882525697) ){ goto $label$106 }
	if ( ((int_64)$2 == (int_64)-4315190764611043328) ){ goto $label$96 }
	if ( ((int_64)$2 != (int_64)-4157660898886467584) ){ goto $label$31 }
	*($11 + [1156]) = [0]
	*($11 + [1152]) = [1]
	*($11 + [552 align=4]) = *($11 + [1152])
	CALL $647($0, ($11 + [552]))
	goto $label$31 
	
.LABEL $label$137
	if ( ((int_64)$2 <= (int_64)3724085270811770879) ){ goto $label$135 }
	if ( ((int_64)$2 <= (int_64)4923678735875440639) ){ goto $label$133 }
	if ( ((int_64)$2 > (int_64)5031766157563245055) ){ goto $label$129 }
	if ( ((int_64)$2 <= (int_64)4923678908241270143) ){ goto $label$121 }
	if ( ((int_64)$2 > (int_64)4923678947125023231) ){ goto $label$105 }
	if ( ((int_64)$2 == (int_64)4923678908241270144) ){ goto $label$95 }
	if ( ((int_64)$2 != (int_64)4923678922967252992) ){ goto $label$31 }
	*($11 + [1692]) = [0]
	*($11 + [1688]) = [2]
	*($11 + [16 align=4]) = *($11 + [1688])
	CALL $609($0, ($11 + [16]))
	goto $label$31 
	
.LABEL $label$136
	if ( ((int_64)$2 > (int_64)-4847888168853985793) ){ goto $label$132 }
	if ( ((int_64)$2 <= (int_64)-4994302040247107585) ){ goto $label$128 }
	if ( ((int_64)$2 <= (int_64)-4859644435866701313) ){ goto $label$120 }
	if ( ((int_64)$2 > (int_64)-4849913157545623553) ){ goto $label$104 }
	if ( ((int_64)$2 == (int_64)-4859644435866701312) ){ goto $label$94 }
	if ( ((int_64)$2 != (int_64)-4858635601914822656) ){ goto $label$31 }
	*($11 + [1020]) = [0]
	*($11 + [1016]) = [3]
	*($11 + [688 align=4]) = *($11 + [1016])
	CALL $610($0, ($11 + [688]))
	goto $label$31 
	
.LABEL $label$135
	if ( ((int_64)$2 > (int_64)3626093248789590415) ){ goto $label$131 }
	if ( ((int_64)$2 <= (int_64)-2688959058995576833) ){ goto $label$127 }
	if ( ((int_64)$2 <= (int_64)-2039333636192759553) ){ goto $label$119 }
	if ( ((int_64)$2 > (int_64)3626071450894991359) ){ goto $label$103 }
	if ( ((int_64)$2 == (int_64)-2039333636192759552) ){ goto $label$93 }
	if ( ((int_64)$2 != (int_64)-2039333636190814208) ){ goto $label$31 }
	*($11 + [860]) = [0]
	*($11 + [856]) = [4]
	*($11 + [848 align=4]) = *($11 + [856])
	CALL $640($0, ($11 + [848]))
	goto $label$31 
	
.LABEL $label$134
	if ( ((int_64)$2 <= (int_64)-4417040131310276609) ){ goto $label$126 }
	if ( ((int_64)$2 <= (int_64)-4417032216286354273) ){ goto $label$118 }
	if ( ((int_64)$2 > (int_64)-4417018952356577281) ){ goto $label$102 }
	if ( ((int_64)$2 == (int_64)-4417032216286354272) ){ goto $label$92 }
	if ( ((int_64)$2 != (int_64)-4417029264343963200) ){ goto $label$31 }
	*($11 + [988]) = [0]
	*($11 + [984]) = [5]
	*($11 + [720 align=4]) = *($11 + [984])
	CALL $653($0, ($11 + [720]))
	goto $label$31 
	
.LABEL $label$133
	if ( ((int_64)$2 <= (int_64)4298281224046116863) ){ goto $label$125 }
	if ( ((int_64)$2 <= (int_64)4298290208043958271) ){ goto $label$117 }
	if ( ((int_64)$2 > (int_64)4921564679018381311) ){ goto $label$101 }
	if ( ((int_64)$2 == (int_64)4298290208043958272) ){ goto $label$91 }
	if ( ((int_64)$2 != (int_64)4730614996831743488) ){ goto $label$31 }
	*($11 + [1252]) = [0]
	*($11 + [1248]) = [6]
	*($11 + [456 align=4]) = *($11 + [1248])
	CALL $637($0, ($11 + [456]))
	goto $label$31 
	
.LABEL $label$132
	if ( ((int_64)$2 <= (int_64)-4417316219328102401) ){ goto $label$124 }
	if ( ((int_64)$2 <= (int_64)-4417304260405019681) ){ goto $label$116 }
	if ( ((int_64)$2 > (int_64)-4417276243174674945) ){ goto $label$100 }
	if ( ((int_64)$2 == (int_64)-4417304260405019680) ){ goto $label$90 }
	if ( ((int_64)$2 != (int_64)-4417295726421737472) ){ goto $label$31 }
	*($11 + [1644]) = [0]
	*($11 + [1640]) = [7]
	*($11 + [64 align=4]) = *($11 + [1640])
	CALL $612($0, ($11 + [64]))
	goto $label$31 
	
.LABEL $label$131
	if ( ((int_64)$2 <= (int_64)3626152957660400975) ){ goto $label$123 }
	if ( ((int_64)$2 <= (int_64)3626397351237124095) ){ goto $label$115 }
	if ( ((int_64)$2 > (int_64)3626399676034939903) ){ goto $label$99 }
	if ( ((int_64)$2 == (int_64)3626397351237124096) ){ goto $label$89 }
	if ( ((int_64)$2 != (int_64)3626399675746467840) ){ goto $label$31 }
	*($11 + [1540]) = [0]
	*($11 + [1536]) = [8]
	*($11 + [168 align=4]) = *($11 + [1536])
	CALL $618($0, ($11 + [168]))
	goto $label$31 
	
.LABEL $label$130
	if ( ((int_64)$2 <= (int_64)-3102536759352470065) ){ goto $label$114 }
	if ( ((int_64)$2 > (int_64)-3065888414132424193) ){ goto $label$98 }
	if ( ((int_64)$2 == (int_64)-3102536759352470064) ){ goto $label$88 }
	if ( ((int_64)$2 != (int_64)-3066250811122292352) ){ goto $label$31 }
	*($11 + [1284]) = [0]
	*($11 + [1280]) = [9]
	*($11 + [424 align=4]) = *($11 + [1280])
	CALL $615($0, ($11 + [424]))
	goto $label$31 
	
.LABEL $label$129
	if ( ((int_64)$2 <= (int_64)5378053212707523919) ){ goto $label$113 }
	if ( ((int_64)$2 > (int_64)5382254363446083583) ){ goto $label$97 }
	if ( ((int_64)$2 == (int_64)5378053212707523920) ){ goto $label$87 }
	if ( ((int_64)$2 != (int_64)5378227485300526416) ){ goto $label$31 }
	*($11 + [964]) = [0]
	*($11 + [960]) = [10]
	*($11 + [744 align=4]) = *($11 + [960])
	CALL $650($0, ($11 + [744]))
	goto $label$31 
	
.LABEL $label$128
	if ( ((int_64)$2 > (int_64)-5001055376886787073) ){ goto $label$112 }
	if ( ((int_64)$2 == (int_64)-5001342335468699648) ){ goto $label$86 }
	if ( ((int_64)$2 == (int_64)-5001342324189775360) ){ goto $label$85 }
	if ( ((int_64)$2 != (int_64)-5001133736131734160) ){ goto $label$31 }
	*($11 + [1492]) = [0]
	*($11 + [1488]) = [11]
	*($11 + [216 align=4]) = *($11 + [1488])
	CALL $615($0, ($11 + [216]))
	goto $label$31 
	
.LABEL $label$127
	if ( ((int_64)$2 > (int_64)-2688959060871212033) ){ goto $label$111 }
	if ( ((int_64)$2 == (int_64)-2688959063050768896) ){ goto $label$84 }
	if ( ((int_64)$2 == (int_64)-2688959063050768864) ){ goto $label$83 }
	if ( ((int_64)$2 != (int_64)-2688959061654130016) ){ goto $label$31 }
	*($11 + [1188]) = [0]
	*($11 + [1184]) = [12]
	*($11 + [520 align=4]) = *($11 + [1184])
	CALL $644($0, ($11 + [520]))
	goto $label$31 
	
.LABEL $label$126
	if ( ((int_64)$2 > (int_64)-4417147814306275953) ){ goto $label$110 }
	if ( ((int_64)$2 == (int_64)-4417269088631674880) ){ goto $label$82 }
	if ( ((int_64)$2 == (int_64)-4417147824394059776) ){ goto $label$81 }
	if ( ((int_64)$2 != (int_64)-4417147819623317504) ){ goto $label$31 }
	*($11 + [1668]) = [0]
	*($11 + [1664]) = [13]
	*($11 + [40 align=4]) = *($11 + [1664])
	CALL $611($0, ($11 + [40]))
	goto $label$31 
	
.LABEL $label$125
	if ( ((int_64)$2 > (int_64)4157533450608312319) ){ goto $label$109 }
	if ( ((int_64)$2 == (int_64)3724085270811770880) ){ goto $label$80 }
	if ( ((int_64)$2 == (int_64)3724085271241865728) ){ goto $label$79 }
	if ( ((int_64)$2 != (int_64)3959380581163019776) ){ goto $label$31 }
	*($11 + [1100]) = [0]
	*($11 + [1096]) = [14]
	*($11 + [608 align=4]) = *($11 + [1096])
	CALL $631($0, ($11 + [608]))
	goto $label$31 
	
.LABEL $label$124
	if ( ((int_64)$2 > (int_64)-4813665579032117249) ){ goto $label$108 }
	if ( ((int_64)$2 == (int_64)-4847888168853985792) ){ goto $label$78 }
	if ( ((int_64)$2 == (int_64)-4817985628236939264) ){ goto $label$77 }
	if ( ((int_64)$2 != (int_64)-4817976207876714240) ){ goto $label$31 }
	*($11 + [916]) = [0]
	*($11 + [912]) = [15]
	*($11 + [792 align=4]) = *($11 + [912])
	CALL $610($0, ($11 + [792]))
	goto $label$31 
	
.LABEL $label$123
	if ( ((int_64)$2 > (int_64)3626114208737603071) ){ goto $label$107 }
	if ( ((int_64)$2 == (int_64)3626093248789590416) ){ goto $label$76 }
	if ( ((int_64)$2 == (int_64)3626108645214781440) ){ goto $label$75 }
	if ( ((int_64)$2 != (int_64)3626108872389262336) ){ goto $label$31 }
	*($11 + [1308]) = [0]
	*($11 + [1304]) = [16]
	*($11 + [400 align=4]) = *($11 + [1304])
	CALL $609($0, ($11 + [400]))
	goto $label$31 
	
.LABEL $label$122
	if ( ((int_64)$2 == (int_64)-4416989697210422928) ){ goto $label$74 }
	if ( ((int_64)$2 == (int_64)-4416981865127396384) ){ goto $label$73 }
	if ( ((int_64)$2 != (int_64)-4416970560970424320) ){ goto $label$31 }
	*($11 + [1652]) = [0]
	*($11 + [1648]) = [17]
	*($11 + [56 align=4]) = *($11 + [1648])
	CALL $613($0, ($11 + [56]))
	goto $label$31 
	
.LABEL $label$121
	if ( ((int_64)$2 == (int_64)4923678735875440640) ){ goto $label$72 }
	if ( ((int_64)$2 == (int_64)4923678741042823168) ){ goto $label$71 }
	if ( ((int_64)$2 != (int_64)4923678846224822272) ){ goto $label$31 }
	*($11 + [1244]) = [0]
	*($11 + [1240]) = [18]
	*($11 + [464 align=4]) = *($11 + [1240])
	CALL $615($0, ($11 + [464]))
	goto $label$31 
	
.LABEL $label$120
	if ( ((int_64)$2 == (int_64)-4994302040247107584) ){ goto $label$70 }
	if ( ((int_64)$2 == (int_64)-4860341968493871104) ){ goto $label$69 }
	if ( ((int_64)$2 != (int_64)-4859644436014717440) ){ goto $label$31 }
	*($11 + [1444]) = [0]
	*($11 + [1440]) = [19]
	*($11 + [264 align=4]) = *($11 + [1440])
	CALL $615($0, ($11 + [264]))
	goto $label$31 
	
.LABEL $label$119
	if ( ((int_64)$2 == (int_64)-2688959058995576832) ){ goto $label$68 }
	if ( ((int_64)$2 == (int_64)-2688959058994528256) ){ goto $label$67 }
	if ( ((int_64)$2 != (int_64)-2688959058994003968) ){ goto $label$31 }
	*($11 + [1220]) = [0]
	*($11 + [1216]) = [20]
	*($11 + [488 align=4]) = *($11 + [1216])
	CALL $640($0, ($11 + [488]))
	goto $label$31 
	
.LABEL $label$118
	if ( ((int_64)$2 == (int_64)-4417040131310276608) ){ goto $label$66 }
	if ( ((int_64)$2 == (int_64)-4417032216296418928) ){ goto $label$65 }
	if ( ((int_64)$2 != (int_64)-4417032216293830256) ){ goto $label$31 }
	*($11 + [1620]) = [0]
	*($11 + [1616]) = [21]
	*($11 + [88 align=4]) = *($11 + [1616])
	CALL $612($0, ($11 + [88]))
	goto $label$31 
	
.LABEL $label$117
	if ( ((int_64)$2 == (int_64)4298281224046116864) ){ goto $label$64 }
	if ( ((int_64)$2 == (int_64)4298286419057156608) ){ goto $label$63 }
	if ( ((int_64)$2 != (int_64)4298287078086541312) ){ goto $label$31 }
	*($11 + [1340]) = [0]
	*($11 + [1336]) = [22]
	*($11 + [368 align=4]) = *($11 + [1336])
	CALL $630($0, ($11 + [368]))
	goto $label$31 
	
.LABEL $label$116
	if ( ((int_64)$2 == (int_64)-4417316219328102400) ){ goto $label$62 }
	if ( ((int_64)$2 == (int_64)-4417316219322062480) ){ goto $label$61 }
	if ( ((int_64)$2 != (int_64)-4417314725849410048) ){ goto $label$31 }
	*($11 + [1132]) = [0]
	*($11 + [1128]) = [23]
	*($11 + [576 align=4]) = *($11 + [1128])
	CALL $648($0, ($11 + [576]))
	goto $label$31 
	
.LABEL $label$115
	if ( ((int_64)$2 == (int_64)3626152957660400976) ){ goto $label$60 }
	if ( ((int_64)$2 == (int_64)3626327230253403472) ){ goto $label$59 }
	if ( ((int_64)$2 != (int_64)3626343089947279360) ){ goto $label$31 }
	*($11 + [1316]) = [0]
	*($11 + [1312]) = [24]
	*($11 + [392 align=4]) = *($11 + [1312])
	CALL $632($0, ($11 + [392]))
	goto $label$31 
	
.LABEL $label$114
	if ( ((int_64)$2 == (int_64)-3111238946495234048) ){ goto $label$58 }
	if ( ((int_64)$2 == (int_64)-3102536759704936448) ){ goto $label$57 }
	if ( ((int_64)$2 != (int_64)-3102536759352475648) ){ goto $label$31 }
	*($11 + [1164]) = [0]
	*($11 + [1160]) = [25]
	*($11 + [544 align=4]) = *($11 + [1160])
	CALL $646($0, ($11 + [544]))
	goto $label$31 
	
.LABEL $label$113
	if ( ((int_64)$2 == (int_64)5031766157563245056) ){ goto $label$56 }
	if ( ((int_64)$2 == (int_64)5031766161263427584) ){ goto $label$55 }
	if ( ((int_64)$2 != (int_64)5378043540632764416) ){ goto $label$31 }
	*($11 + [1076]) = [0]
	*($11 + [1072]) = [26]
	*($11 + [632 align=4]) = *($11 + [1072])
	CALL $610($0, ($11 + [632]))
	goto $label$31 
	
.LABEL $label$112
	if ( ((int_64)$2 == (int_64)-5001055376886787072) ){ goto $label$54 }
	if ( ((int_64)$2 == (int_64)-4997502822474599936) ){ goto $label$53 }
	if ( ((int_64)$2 != (int_64)-4994302040248156160) ){ goto $label$31 }
	*($11 + [1364]) = [0]
	*($11 + [1360]) = [27]
	*($11 + [344 align=4]) = *($11 + [1360])
	CALL $627($0, ($11 + [344]))
	goto $label$31 
	
.LABEL $label$111
	if ( ((int_64)$2 == (int_64)-2688959060871212032) ){ goto $label$52 }
	if ( ((int_64)$2 == (int_64)-2688959060368010240) ){ goto $label$51 }
	if ( ((int_64)$2 != (int_64)-2688959060368010208) ){ goto $label$31 }
	*($11 + [1204]) = [0]
	*($11 + [1200]) = [28]
	*($11 + [504 align=4]) = *($11 + [1200])
	CALL $642($0, ($11 + [504]))
	goto $label$31 
	
.LABEL $label$110
	if ( ((int_64)$2 == (int_64)-4417147814306275952) ){ goto $label$50 }
	if ( ((int_64)$2 == (int_64)-4417129236130365440) ){ goto $label$49 }
	if ( ((int_64)$2 != (int_64)-4417057122201468928) ){ goto $label$31 }
	*($11 + [1596]) = [0]
	*($11 + [1592]) = [29]
	*($11 + [112 align=4]) = *($11 + [1592])
	CALL $612($0, ($11 + [112]))
	goto $label$31 
	
.LABEL $label$109
	if ( ((int_64)$2 == (int_64)4157533450608312320) ){ goto $label$48 }
	if ( ((int_64)$2 == (int_64)4157533691034522112) ){ goto $label$47 }
	if ( ((int_64)$2 != (int_64)4157533747363992576) ){ goto $label$31 }
	*($11 + [1068]) = [0]
	*($11 + [1064]) = [30]
	*($11 + [640 align=4]) = *($11 + [1064])
	CALL $615($0, ($11 + [640]))
	goto $label$31 
	
.LABEL $label$108
	if ( ((int_64)$2 == (int_64)-4813665579032117248) ){ goto $label$46 }
	if ( ((int_64)$2 == (int_64)-4420683698609848320) ){ goto $label$45 }
	if ( ((int_64)$2 != (int_64)-4417330699333441152) ){ goto $label$31 }
	*($11 + [1292]) = [0]
	*($11 + [1288]) = [31]
	*($11 + [416 align=4]) = *($11 + [1288])
	CALL $634($0, ($11 + [416]))
	goto $label$31 
	
.LABEL $label$107
	if ( ((int_64)$2 == (int_64)3626114208737603072) ){ goto $label$44 }
	if ( ((int_64)$2 == (int_64)3626124774850586624) ){ goto $label$43 }
	if ( ((int_64)$2 != (int_64)3626149916123856896) ){ goto $label$31 }
	*($11 + [996]) = [0]
	*($11 + [992]) = [32]
	*($11 + [712 align=4]) = *($11 + [992])
	CALL $615($0, ($11 + [712]))
	goto $label$31 
	
.LABEL $label$106
	if ( ((int_64)$2 == (int_64)-3112293401882525696) ){ goto $label$42 }
	if ( ((int_64)$2 != (int_64)-3112293393109090304) ){ goto $label$31 }
	*($11 + [1380]) = [0]
	*($11 + [1376]) = [33]
	*($11 + [328 align=4]) = *($11 + [1376])
	CALL $626($0, ($11 + [328]))
	goto $label$31 
	
.LABEL $label$105
	if ( ((int_64)$2 == (int_64)4923678947125023232) ){ goto $label$41 }
	if ( ((int_64)$2 != (int_64)4982431877404300688) ){ goto $label$31 }
	*($11 + [1276]) = [0]
	*($11 + [1272]) = [34]
	*($11 + [432 align=4]) = *($11 + [1272])
	CALL $634($0, ($11 + [432]))
	goto $label$31 
	
.LABEL $label$104
	if ( ((int_64)$2 == (int_64)-4849913157545623552) ){ goto $label$40 }
	if ( ((int_64)$2 != (int_64)-4849838773246623744) ){ goto $label$31 }
	*($11 + [1532]) = [0]
	*($11 + [1528]) = [35]
	*($11 + [176 align=4]) = *($11 + [1528])
	CALL $619($0, ($11 + [176]))
	goto $label$31 
	
.LABEL $label$103
	if ( ((int_64)$2 == (int_64)3626071450894991360) ){ goto $label$39 }
	if ( ((int_64)$2 != (int_64)3626093248784964912) ){ goto $label$31 }
	*($11 + [1452]) = [0]
	*($11 + [1448]) = [36]
	*($11 + [256 align=4]) = *($11 + [1448])
	CALL $615($0, ($11 + [256]))
	goto $label$31 
	
.LABEL $label$102
	if ( ((int_64)$2 == (int_64)-4417018952356577280) ){ goto $label$38 }
	if ( ((int_64)$2 != (int_64)-4417015727375892480) ){ goto $label$31 }
	*($11 + [1684]) = [0]
	*($11 + [1680]) = [37]
	*($11 + [24 align=4]) = *($11 + [1680])
	CALL $610($0, ($11 + [24]))
	goto $label$31 
	
.LABEL $label$101
	if ( ((int_64)$2 == (int_64)4921564679018381312) ){ goto $label$37 }
	if ( ((int_64)$2 != (int_64)4921564861957144576) ){ goto $label$31 }
	*($11 + [1012]) = [0]
	*($11 + [1008]) = [38]
	*($11 + [696 align=4]) = *($11 + [1008])
	CALL $615($0, ($11 + [696]))
	goto $label$31 
	
.LABEL $label$100
	if ( ((int_64)$2 == (int_64)-4417276243174674944) ){ goto $label$36 }
	if ( ((int_64)$2 != (int_64)-4417276045274480640) ){ goto $label$31 }
	*($11 + [1588]) = [0]
	*($11 + [1584]) = [39]
	*($11 + [120 align=4]) = *($11 + [1584])
	CALL $612($0, ($11 + [120]))
	goto $label$31 
	
.LABEL $label$99
	if ( ((int_64)$2 == (int_64)3626399676034939904) ){ goto $label$35 }
	if ( ((int_64)$2 != (int_64)3626460632133737776) ){ goto $label$31 }
	*($11 + [1436]) = [0]
	*($11 + [1432]) = [40]
	*($11 + [272 align=4]) = *($11 + [1432])
	CALL $623($0, ($11 + [272]))
	goto $label$31 
	
.LABEL $label$98
	if ( ((int_64)$2 == (int_64)-3065888414132424192) ){ goto $label$34 }
	if ( ((int_64)$2 != (int_64)-2688959070806736896) ){ goto $label$31 }
	*($11 + [1196]) = [0]
	*($11 + [1192]) = [41]
	*($11 + [512 align=4]) = *($11 + [1192])
	CALL $643($0, ($11 + [512]))
	goto $label$31 
	
.LABEL $label$97
	if ( ((int_64)$2 == (int_64)5382254363446083584) ){ goto $label$33 }
	if ( ((int_64)$2 != (int_64)8421045207927095296) ){ goto $label$31 }
	*($11 + [1700]) = [0]
	*($11 + [1696]) = [42]
	*($11 + [8 align=4]) = *($11 + [1696])
	CALL $608($0, ($11 + [8]))
	goto $label$31 
	
.LABEL $label$96
	*($11 + [1180]) = [0]
	*($11 + [1176]) = [43]
	*($11 + [528 align=4]) = *($11 + [1176])
	CALL $610($0, ($11 + [528]))
	goto $label$31 
	
.LABEL $label$95
	*($11 + [932]) = [0]
	*($11 + [928]) = [44]
	*($11 + [776 align=4]) = *($11 + [928])
	CALL $610($0, ($11 + [776]))
	goto $label$31 
	
.LABEL $label$94
	*($11 + [1476]) = [0]
	*($11 + [1472]) = [45]
	*($11 + [232 align=4]) = *($11 + [1472])
	CALL $615($0, ($11 + [232]))
	goto $label$31 
	
.LABEL $label$93
	*($11 + [892]) = [0]
	*($11 + [888]) = [46]
	*($11 + [816 align=4]) = *($11 + [888])
	CALL $656($0, ($11 + [816]))
	goto $label$31 
	
.LABEL $label$92
	*($11 + [1612]) = [0]
	*($11 + [1608]) = [47]
	*($11 + [96 align=4]) = *($11 + [1608])
	CALL $612($0, ($11 + [96]))
	goto $label$31 
	
.LABEL $label$91
	*($11 + [1388]) = [0]
	*($11 + [1384]) = [48]
	*($11 + [320 align=4]) = *($11 + [1384])
	CALL $625($0, ($11 + [320]))
	goto $label$31 
	
.LABEL $label$90
	*($11 + [980]) = [0]
	*($11 + [976]) = [49]
	*($11 + [728 align=4]) = *($11 + [976])
	CALL $654($0, ($11 + [728]))
	goto $label$31 
	
.LABEL $label$89
	*($11 + [1420]) = [0]
	*($11 + [1416]) = [50]
	*($11 + [288 align=4]) = *($11 + [1416])
	CALL $615($0, ($11 + [288]))
	goto $label$31 
	
.LABEL $label$88
	*($11 + [1148]) = [0]
	*($11 + [1144]) = [51]
	*($11 + [560 align=4]) = *($11 + [1144])
	CALL $647($0, ($11 + [560]))
	goto $label$31 
	
.LABEL $label$87
	*($11 + [1116]) = [0]
	*($11 + [1112]) = [52]
	*($11 + [592 align=4]) = *($11 + [1112])
	CALL $650($0, ($11 + [592]))
	goto $label$31 
	
.LABEL $label$86
	*($11 + [1044]) = [0]
	*($11 + [1040]) = [53]
	*($11 + [664 align=4]) = *($11 + [1040])
	CALL $652($0, ($11 + [664]))
	goto $label$31 
	
.LABEL $label$85
	*($11 + [1140]) = [0]
	*($11 + [1136]) = [54]
	*($11 + [568 align=4]) = *($11 + [1136])
	CALL $615($0, ($11 + [568]))
	goto $label$31 
	
.LABEL $label$84
	*($11 + [1268]) = [0]
	*($11 + [1264]) = [55]
	*($11 + [440 align=4]) = *($11 + [1264])
	CALL $635($0, ($11 + [440]))
	goto $label$31 
	
.LABEL $label$83
	*($11 + [1260]) = [0]
	*($11 + [1256]) = [56]
	*($11 + [448 align=4]) = *($11 + [1256])
	CALL $636($0, ($11 + [448]))
	goto $label$31 
	
.LABEL $label$82
	*($11 + [1636]) = [0]
	*($11 + [1632]) = [57]
	*($11 + [72 align=4]) = *($11 + [1632])
	CALL $614($0, ($11 + [72]))
	goto $label$31 
	
.LABEL $label$81
	*($11 + [1676]) = [0]
	*($11 + [1672]) = [58]
	*($11 + [32 align=4]) = *($11 + [1672])
	CALL $611($0, ($11 + [32]))
	goto $label$31 
	
.LABEL $label$80
	*($11 + [876]) = [0]
	*($11 + [872]) = [59]
	*($11 + [832 align=4]) = *($11 + [872])
	CALL $640($0, ($11 + [832]))
	goto $label$31 
	
.LABEL $label$79
	*($11 + [868]) = [0]
	*($11 + [864]) = [60]
	*($11 + [840 align=4]) = *($11 + [864])
	CALL $657($0, ($11 + [840]))
	goto $label$31 
	
.LABEL $label$78
	*($11 + [1428]) = [0]
	*($11 + [1424]) = [61]
	*($11 + [280 align=4]) = *($11 + [1424])
	CALL $624($0, ($11 + [280]))
	goto $label$31 
	
.LABEL $label$77
	*($11 + [948]) = [0]
	*($11 + [944]) = [62]
	*($11 + [760 align=4]) = *($11 + [944])
	CALL $610($0, ($11 + [760]))
	goto $label$31 
	
.LABEL $label$76
	*($11 + [1484]) = [0]
	*($11 + [1480]) = [63]
	*($11 + [224 align=4]) = *($11 + [1480])
	CALL $615($0, ($11 + [224]))
	goto $label$31 
	
.LABEL $label$75
	*($11 + [1324]) = [0]
	*($11 + [1320]) = [64]
	*($11 + [384 align=4]) = *($11 + [1320])
	CALL $622($0, ($11 + [384]))
	goto $label$31 
	
.LABEL $label$74
	*($11 + [1580]) = [0]
	*($11 + [1576]) = [65]
	*($11 + [128 align=4]) = *($11 + [1576])
	CALL $615($0, ($11 + [128]))
	goto $label$31 
	
.LABEL $label$73
	*($11 + [1036]) = [0]
	*($11 + [1032]) = [66]
	*($11 + [672 align=4]) = *($11 + [1032])
	CALL $610($0, ($11 + [672]))
	goto $label$31 
	
.LABEL $label$72
	*($11 + [908]) = [0]
	*($11 + [904]) = [67]
	*($11 + [800 align=4]) = *($11 + [904])
	CALL $615($0, ($11 + [800]))
	goto $label$31 
	
.LABEL $label$71
	*($11 + [956]) = [0]
	*($11 + [952]) = [68]
	*($11 + [752 align=4]) = *($11 + [952])
	CALL $610($0, ($11 + [752]))
	goto $label$31 
	
.LABEL $label$70
	*($11 + [1356]) = [0]
	*($11 + [1352]) = [69]
	*($11 + [352 align=4]) = *($11 + [1352])
	CALL $628($0, ($11 + [352]))
	goto $label$31 
	
.LABEL $label$69
	*($11 + [1460]) = [0]
	*($11 + [1456]) = [70]
	*($11 + [248 align=4]) = *($11 + [1456])
	CALL $610($0, ($11 + [248]))
	goto $label$31 
	
.LABEL $label$68
	*($11 + [1236]) = [0]
	*($11 + [1232]) = [71]
	*($11 + [472 align=4]) = *($11 + [1232])
	CALL $638($0, ($11 + [472]))
	goto $label$31 
	
.LABEL $label$67
	*($11 + [1228]) = [0]
	*($11 + [1224]) = [72]
	*($11 + [480 align=4]) = *($11 + [1224])
	CALL $639($0, ($11 + [480]))
	goto $label$31 
	
.LABEL $label$66
	*($11 + [1556]) = [0]
	*($11 + [1552]) = [73]
	*($11 + [152 align=4]) = *($11 + [1552])
	CALL $616($0, ($11 + [152]))
	goto $label$31 
	
.LABEL $label$65
	*($11 + [1604]) = [0]
	*($11 + [1600]) = [74]
	*($11 + [104 align=4]) = *($11 + [1600])
	CALL $615($0, ($11 + [104]))
	goto $label$31 
	
.LABEL $label$64
	*($11 + [1516]) = [0]
	*($11 + [1512]) = [75]
	*($11 + [192 align=4]) = *($11 + [1512])
	CALL $621($0, ($11 + [192]))
	goto $label$31 
	
.LABEL $label$63
	*($11 + [1348]) = [0]
	*($11 + [1344]) = [76]
	*($11 + [360 align=4]) = *($11 + [1344])
	CALL $629($0, ($11 + [360]))
	goto $label$31 
	
.LABEL $label$62
	*($11 + [1548]) = [0]
	*($11 + [1544]) = [77]
	*($11 + [160 align=4]) = *($11 + [1544])
	CALL $617($0, ($11 + [160]))
	goto $label$31 
	
.LABEL $label$61
	*($11 + [1572]) = [0]
	*($11 + [1568]) = [78]
	*($11 + [136 align=4]) = *($11 + [1568])
	CALL $615($0, ($11 + [136]))
	goto $label$31 
	
.LABEL $label$60
	*($11 + [1124]) = [0]
	*($11 + [1120]) = [79]
	*($11 + [584 align=4]) = *($11 + [1120])
	CALL $649($0, ($11 + [584]))
	goto $label$31 
	
.LABEL $label$59
	*($11 + [972]) = [0]
	*($11 + [968]) = [80]
	*($11 + [736 align=4]) = *($11 + [968])
	CALL $655($0, ($11 + [736]))
	goto $label$31 
	
.LABEL $label$58
	*($11 + [1060]) = [0]
	*($11 + [1056]) = [81]
	*($11 + [648 align=4]) = *($11 + [1056])
	CALL $610($0, ($11 + [648]))
	goto $label$31 
	
.LABEL $label$57
	*($11 + [884]) = [0]
	*($11 + [880]) = [82]
	*($11 + [824 align=4]) = *($11 + [880])
	CALL $629($0, ($11 + [824]))
	goto $label$31 
	
.LABEL $label$56
	*($11 + [1396]) = [0]
	*($11 + [1392]) = [83]
	*($11 + [312 align=4]) = *($11 + [1392])
	CALL $610($0, ($11 + [312]))
	goto $label$31 
	
.LABEL $label$55
	*($11 + [1372]) = [0]
	*($11 + [1368]) = [84]
	*($11 + [336 align=4]) = *($11 + [1368])
	CALL $627($0, ($11 + [336]))
	goto $label$31 
	
.LABEL $label$54
	*($11 + [1524]) = [0]
	*($11 + [1520]) = [85]
	*($11 + [184 align=4]) = *($11 + [1520])
	CALL $620($0, ($11 + [184]))
	goto $label$31 
	
.LABEL $label$53
	*($11 + [1404]) = [0]
	*($11 + [1400]) = [86]
	*($11 + [304 align=4]) = *($11 + [1400])
	CALL $615($0, ($11 + [304]))
	goto $label$31 
	
.LABEL $label$52
	*($11 + [1172]) = [0]
	*($11 + [1168]) = [87]
	*($11 + [536 align=4]) = *($11 + [1168])
	CALL $645($0, ($11 + [536]))
	goto $label$31 
	
.LABEL $label$51
	*($11 + [1212]) = [0]
	*($11 + [1208]) = [88]
	*($11 + [496 align=4]) = *($11 + [1208])
	CALL $641($0, ($11 + [496]))
	goto $label$31 
	
.LABEL $label$50
	*($11 + [1660]) = [0]
	*($11 + [1656]) = [89]
	*($11 + [48 align=4]) = *($11 + [1656])
	CALL $612($0, ($11 + [48]))
	goto $label$31 
	
.LABEL $label$49
	*($11 + [1628]) = [0]
	*($11 + [1624]) = [90]
	*($11 + [80 align=4]) = *($11 + [1624])
	CALL $614($0, ($11 + [80]))
	goto $label$31 
	
.LABEL $label$48
	*($11 + [1084]) = [0]
	*($11 + [1080]) = [91]
	*($11 + [624 align=4]) = *($11 + [1080])
	CALL $615($0, ($11 + [624]))
	goto $label$31 
	
.LABEL $label$47
	*($11 + [1052]) = [0]
	*($11 + [1048]) = [92]
	*($11 + [656 align=4]) = *($11 + [1048])
	CALL $615($0, ($11 + [656]))
	goto $label$31 
	
.LABEL $label$46
	*($11 + [1092]) = [0]
	*($11 + [1088]) = [93]
	*($11 + [616 align=4]) = *($11 + [1088])
	CALL $611($0, ($11 + [616]))
	goto $label$31 
	
.LABEL $label$45
	*($11 + [924]) = [0]
	*($11 + [920]) = [94]
	*($11 + [784 align=4]) = *($11 + [920])
	CALL $610($0, ($11 + [784]))
	goto $label$31 
	
.LABEL $label$44
	*($11 + [1108]) = [0]
	*($11 + [1104]) = [95]
	*($11 + [600 align=4]) = *($11 + [1104])
	CALL $651($0, ($11 + [600]))
	goto $label$31 
	
.LABEL $label$43
	*($11 + [1028]) = [0]
	*($11 + [1024]) = [96]
	*($11 + [680 align=4]) = *($11 + [1024])
	CALL $629($0, ($11 + [680]))
	goto $label$31 
	
.LABEL $label$42
	*($11 + [1508]) = [0]
	*($11 + [1504]) = [97]
	*($11 + [200 align=4]) = *($11 + [1504])
	CALL $621($0, ($11 + [200]))
	goto $label$31 
	
.LABEL $label$41
	*($11 + [1500]) = [0]
	*($11 + [1496]) = [98]
	*($11 + [208 align=4]) = *($11 + [1496])
	CALL $622($0, ($11 + [208]))
	goto $label$31 
	
.LABEL $label$40
	*($11 + [1412]) = [0]
	*($11 + [1408]) = [99]
	*($11 + [296 align=4]) = *($11 + [1408])
	CALL $615($0, ($11 + [296]))
	goto $label$31 
	
.LABEL $label$39
	*($11 + [1468]) = [0]
	*($11 + [1464]) = [100]
	*($11 + [240 align=4]) = *($11 + [1464])
	CALL $610($0, ($11 + [240]))
	goto $label$31 
	
.LABEL $label$38
	*($11 + [940]) = [0]
	*($11 + [936]) = [101]
	*($11 + [768 align=4]) = *($11 + [936])
	CALL $629($0, ($11 + [768]))
	goto $label$31 
	
.LABEL $label$37
	*($11 + [1004]) = [0]
	*($11 + [1000]) = [102]
	*($11 + [704 align=4]) = *($11 + [1000])
	CALL $653($0, ($11 + [704]))
	goto $label$31 
	
.LABEL $label$36
	*($11 + [1564]) = [0]
	*($11 + [1560]) = [103]
	*($11 + [144 align=4]) = *($11 + [1560])
	CALL $615($0, ($11 + [144]))
	goto $label$31 
	
.LABEL $label$35
	*($11 + [1300]) = [0]
	*($11 + [1296]) = [104]
	*($11 + [408 align=4]) = *($11 + [1296])
	CALL $633($0, ($11 + [408]))
	goto $label$31 
	
.LABEL $label$34
	*($11 + [1332]) = [0]
	*($11 + [1328]) = [105]
	*($11 + [376 align=4]) = *($11 + [1328])
	CALL $631($0, ($11 + [376]))
	goto $label$31 
	
.LABEL $label$33
	*($11 + [900]) = [0]
	*($11 + [896]) = [106]
	*($11 + [808 align=4]) = *($11 + [896])
	CALL $610($0, ($11 + [808]))
	
.LABEL $label$31
	*([0] + [4]) = ($11 + [1872])
}

void .FUNC $607 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [24])) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	
.LABEL $label$3
	CALL eosio_assert($5, [2832])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [4]) = $2
	*($6) = $2
	*($6 + [8]) = ($2 + $1)
	CALL $727($6, $0)
	if ( ($1 <= [513]) ){ goto $label$8 }
	CALL free($2)
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $604 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)6291761009422676096, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $605($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $605 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [544])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $343(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_64 .FUNC $602 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [64])
	*([0] + [4]) = $5
	$3 = *($1)
	$2 = CALL strlen([1568])
	if ( ((int_32)$2 != (int_32)( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )) ){ goto $label$5 }
	if ( (CALL $752($1, [0], [-1], [1568], $2) == 0) ){ goto $label$4 }
	$3 = *($1)
	
.LABEL $label$5
	if ( ($3 & [1]) ){ goto $label$7 }
	$3 = ($1 + [1])
	goto $label$6 
	
.LABEL $label$7
	$3 = *($1 + [8])
	
.LABEL $label$6
	if ( ((int_32)*($3) != (int_32)[35]) ){ goto $label$4 }
	CALL $768(($5 + [24]), $1, [1], [-1], $1)
	if ( (*($1) & [1]) ){ goto $label$3 }
	*($1) = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $743($1, [11632])
	goto $label$1 
	
.LABEL $label$3
	*(*($1 + [8])) = [0]
	*(($1 + [4])) = [0]
	
.LABEL $label$2
	CALL $742($1, [0])
	*(($1 + [8])) = *((($5 + [24]) + [8]))
	*($1) = *($5 + [24])
	
.LABEL $label$1
	*(($5 + [56])) = [0]
	*($5 + [40]) = (int_64)-1
	*($5 + [48]) = (int_64)0
	$4 = *($0)
	*($5 + [24]) = $4
	*($5 + [32]) = $4
	CALL $767(($5 + [8]), $1)
	$4 = *(CALL $604(($5 + [24]), CALL $344($0, ($5 + [8])), [11648]) + [8])
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$8 }
	CALL $738(*($5 + [16]))
	
.LABEL $label$8
	$0 = *($5 + [48])
	if ( ($0 == 0) ){ goto $label$9 }
	$2 = ($5 + [52])
	$1 = *($2)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$11 }
	
.LOOP $label$12:
	$1 = ($1 + [-24])
	$3 = *($1)
	*($1) = [0]
	if ( ($3 == 0) ){ goto $label$13 }
	CALL $738($3)
	
.LABEL $label$13
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$12 }
	$1 = *(($5 + [48]))
	goto $label$10 
	
.LABEL $label$11
	$1 = $0
	
.LABEL $label$10
	*($2) = $0
	CALL $738($1)
	
.LABEL $label$9
	*([0] + [4]) = ($5 + [64])
	return $4
}

void .FUNC $603 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	$6 = *($2)
	if ( ($6 & [1]) ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($2 + [4])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [7120])
	$6 = *($2)
	if ( ($6 & [1]) ){ goto $label$4 }
	$5 = uint_32($6 >> [1])
	$4 = ($2 + [1])
	goto $label$3 
	
.LABEL $label$4
	$5 = *($2 + [4])
	$4 = *($2 + [8])
	
.LABEL $label$3
	$5 = ($4 + $5)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	if ( ((int_32)*($4) == (int_32)[32]) ){ goto $label$6 }
	$4 = ($4 + [1])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$8 }
	$6 = $4
	
.LOOP $label$10:
	$6 = ($6 + [1])
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$9 }
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)[32]) ){ goto $label$10 }
	*($4) = $3
	$4 = ($4 + [1])
	goto $label$10 
	
.LABEL $label$9
	$6 = *($2)
	
.LABEL $label$8
	$5 = $4
	
.LABEL $label$5
	if ( ($6 & [1]) ){ goto $label$12 }
	$4 = ($2 + [1])
	$6 = ($4 + uint_32(($6 & [254]) >> [1]))
	goto $label$11 
	
.LABEL $label$12
	$4 = *($2 + [8])
	$6 = ($4 + *($2 + [4]))
	
.LABEL $label$11
	CALL $750($2, ($5 - $4), ($6 - $5))
	CALL $767($7, $2)
	CALL _Z5splitNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEc(($7 + [16]), $7, [124])
	if ( ((*($7) & [1]) == 0) ){ goto $label$13 }
	CALL $738(*($7 + [8]))
	
.LABEL $label$13
	CALL $767($0, *($7 + [16]))
	$5 = *($7 + [16])
	if ( ($5 == 0) ){ goto $label$14 }
	$6 = *($7 + [20])
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$16 }
	$4 = ([0] - $5)
	$6 = ($6 + [-12])
	
.LOOP $label$17:
	if ( ((*($6) & [1]) == 0) ){ goto $label$18 }
	CALL $738(*(($6 + [8])))
	
.LABEL $label$18
	$6 = ($6 + [-12])
	if ( ((int_32)($6 + $4) != (int_32)[-12]) ){ goto $label$17 }
	$6 = *($7 + [16])
	goto $label$15 
	
.LABEL $label$16
	$6 = $5
	
.LABEL $label$15
	*($7 + [20]) = $5
	CALL $738($6)
	
.LABEL $label$14
	*([0] + [4]) = ($7 + [32])
}

void .FUNC _ZN11walexchange12wal_exchange11in_transferERKyRKN5eosio5assetE (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [224])
	*([0] + [4]) = $11
	*(($11 + [200])) = [0]
	*($11 + [184]) = (int_64)-1
	*($11 + [192]) = (int_64)0
	$7 = *($0)
	*($11 + [168]) = $7
	*($11 + [176]) = $7
	*($11 + [204]) = [0]
	*($11 + [160]) = ($11 + [168])
	*($11 + [24]) = *($1)
	*($11 + [16]) = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	CALL $46(($11 + [120]), ($11 + [160]), ($11 + [16]))
	$10 = *($11 + [124])
	if ( ($10 == 0) ){ goto $label$2 }
	if ( ((int_64)(((int_64)((int_64)*($11 + [16]) ^ (int_64)(uint_64)*($10 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($11 + [24]) ^ (int_64)*(($10 + [16])))) == 0) == 0) ){ goto $label$2 }
	if ( ($10 == 0) ){ goto $label$2 }
	*(($11 + [152])) = [0]
	*($11 + [136]) = (int_64)-1
	$7 = (int_64)0
	*($11 + [144]) = (int_64)0
	$9 = *($0)
	*($11 + [120]) = $9
	*($11 + [128]) = $9
	*($11 + [156]) = [0]
	$10 = CALL db_find_i64($9, $9, (int_64)-4060986525729035840, *($10))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$3 }
	$3 = CALL $148(($11 + [120]), $10)
	CALL eosio_assert(((int_32)*($3 + [16]) == (int_32)($11 + [120])), [288])
	$4 = *($0)
	$6 = (int_64)59
	$10 = [2144]
	$8 = (int_64)0
	
.LOOP $label$4:
	if ( ((uint_64)$7 > (uint_64)(int_64)5) ){ goto $label$9 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$5 = ($5 + [165])
	goto $label$7 
	
.LABEL $label$9
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$6
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$5
	$10 = ($10 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$4 }
	*($11 + [72]) = $8
	*($11 + [64]) = $4
	$4 = *($1)
	$7 = (int_64)0
	$6 = (int_64)59
	$10 = [3360]
	$8 = (int_64)0
	
.LOOP $label$10:
	if ( ((uint_64)$7 > (uint_64)(int_64)7) ){ goto $label$15 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$5 = ($5 + [165])
	goto $label$13 
	
.LABEL $label$15
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$12
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$11
	$10 = ($10 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$10 }
	*(($11 + [8])) = [0]
	*($11) = (int_64)0
	$10 = CALL strlen([8368])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$18 }
	*($11) = ($10 << [1])
	$5 = ($11 | [1])
	if ( $10 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$1 = (($10 + [16]) & [-16])
	$5 = CALL $737($1)
	*($11) = ($1 | [1])
	*($11 + [8]) = $5
	*($11 + [4]) = $10
	
.LABEL $label$17
	CALL memcpy($5, [8368], $10)
	
.LABEL $label$16
	*(($5 + $10)) = [0]
	$7 = *(($3 + [8]))
	*(($11 + [40])) = *(($2 + [8]))
	*(($11 + [36])) = *(($2 + [4]))
	*(($11 + [44])) = *(($2 + [12]))
	*($11 + [16]) = *($0)
	*($11 + [24]) = $7
	*($11 + [32]) = *($2)
	$10 = ($11 + [8])
	*(($11 + [56])) = *($10)
	*($11 + [48]) = *($11)
	*($11) = [0]
	*($11 + [4]) = [0]
	*($10) = [0]
	$10 = CALL $151(($11 + [80]), ($11 + [64]), $4, $8, ($11 + [16]))
	CALL $87(($11 + [208]), $10)
	$5 = *($11 + [208])
	CALL send_inline($5, (*($11 + [212]) - $5))
	$5 = *($11 + [208])
	if ( ($5 == 0) ){ goto $label$19 }
	*($11 + [212]) = $5
	CALL $738($5)
	
.LABEL $label$19
	$5 = *($10 + [28])
	if ( ($5 == 0) ){ goto $label$20 }
	*(($10 + [32])) = $5
	CALL $738($5)
	
.LABEL $label$20
	$5 = *($10 + [16])
	if ( ($5 == 0) ){ goto $label$21 }
	*(($10 + [20])) = $5
	CALL $738($5)
	
.LABEL $label$21
	if ( ((*(($11 + [48])) & [1]) == 0) ){ goto $label$22 }
	CALL $738(*(($11 + [56])))
	
.LABEL $label$22
	if ( ((*($11) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*(($11 + [8])))
	
.LABEL $label$3
	$2 = *($11 + [144])
	if ( ($2 == 0) ){ goto $label$2 }
	$0 = ($11 + [148])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$2) ){ goto $label$24 }
	
.LOOP $label$25:
	$10 = ($10 + [-24])
	$5 = *($10)
	*($10) = [0]
	if ( ($5 == 0) ){ goto $label$26 }
	CALL $738($5)
	
.LABEL $label$26
	if ( ((int_32)$2 != (int_32)$10) ){ goto $label$25 }
	$10 = *(($11 + [144]))
	goto $label$23 
	
.LABEL $label$24
	$10 = $2
	
.LABEL $label$23
	*($0) = $2
	CALL $738($10)
	
.LABEL $label$2
	$2 = *($11 + [192])
	if ( ($2 == 0) ){ goto $label$27 }
	$0 = ($11 + [196])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$2) ){ goto $label$29 }
	
.LOOP $label$30:
	$10 = ($10 + [-24])
	$5 = *($10)
	*($10) = [0]
	if ( ($5 == 0) ){ goto $label$31 }
	CALL $738($5)
	
.LABEL $label$31
	if ( ((int_32)$2 != (int_32)$10) ){ goto $label$30 }
	$10 = *(($11 + [192]))
	goto $label$28 
	
.LABEL $label$29
	$10 = $2
	
.LABEL $label$28
	*($0) = $2
	CALL $738($10)
	
.LABEL $label$27
	*([0] + [4]) = ($11 + [224])
	return (unreachable)
	
.LABEL $label$1
	CALL $739($11)
}

int_32 .FUNC $353 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = *($0 + [4])
	$6 = *($1)
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$5 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($5 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $7) > (int_32)[0]), [496])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$7 = (*($4) + [1])
	*($4) = $7
	if ( $2 ){ goto $label$1 }
	$2 = ($0 + [8])
	$4 = [4]
	
.LOOP $label$2:
	CALL eosio_assert(((int_32)(*($2) - $7) > (int_32)[0]), [496])
	$5 = ($0 + [4])
	CALL memcpy(*($5), ($1 + $4), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)[37]) ){ goto $label$2 }
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC _ZNSt3__19to_stringEx (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [20464], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $762(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $762(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC _ZN11walexchange12wal_exchange12settle_stakeEyNS_8to_stakeE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = *($2 + [48])
	$10 = ($0 + [12])
	$5 = *($10)
	if ( ($5 == 0) ){ goto $label$5 }
	$10 = ($0 + [12])
	$4 = *(($2 + [24]))
	
.LOOP $label$6:
	$6 = *($5 + [16])
	if ( ((uint_64)$4 >= (uint_64)$6) ){ goto $label$8 }
	$9 = *($5)
	if ( $9 ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$8
	if ( ((uint_64)$6 >= (uint_64)$4) ){ goto $label$3 }
	$10 = ($5 + [4])
	$9 = *($5 + [4])
	if ( ($9 == 0) ){ goto $label$3 }
	$5 = $10
	
.LABEL $label$7
	$10 = $5
	$5 = $9
	goto $label$6 
	
.LABEL $label$5
	$5 = $10
	$11 = *($10)
	if ( $11 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$10 = $5
	
.LABEL $label$3
	$11 = *($10)
	if ( $11 ){ goto $label$1 }
	
.LABEL $label$2
	*(($11 = CALL $737([40])) + [28]) = [0]
	*($11 + [32]) = [0]
	*($11) = (int_64)0
	*($11 + [16]) = *(($2 + [24]))
	*($11 + [24]) = ($11 + [28])
	*($11 + [8]) = $5
	*($10) = $11
	$5 = $11
	$9 = ($0 + [8])
	$7 = *(*($9))
	if ( ($7 == 0) ){ goto $label$9 }
	*($9) = $7
	$5 = *($10)
	
.LABEL $label$9
	CALL $289(*(($0 + [12])), $5)
	*(($5 = ($0 + [16]))) = (*($5) + [1])
	
.LABEL $label$1
	$10 = ($11 + [28])
	$5 = *($10)
	if ( ($5 == 0) ){ goto $label$14 }
	$10 = ($11 + [28])
	$7 = *(($2 + [40]))
	
.LOOP $label$15:
	$9 = *($5 + [16])
	if ( ((uint_32)$7 >= (uint_32)$9) ){ goto $label$17 }
	$9 = *($5)
	if ( $9 ){ goto $label$16 }
	goto $label$13 
	
.LABEL $label$17
	if ( ((uint_32)$9 >= (uint_32)$7) ){ goto $label$12 }
	$10 = ($5 + [4])
	$9 = *($5 + [4])
	if ( ($9 == 0) ){ goto $label$12 }
	$5 = $10
	
.LABEL $label$16
	$10 = $5
	$5 = $9
	goto $label$15 
	
.LABEL $label$14
	$5 = $10
	$9 = *($10)
	if ( $9 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$13
	$10 = $5
	
.LABEL $label$12
	$9 = *($10)
	if ( $9 ){ goto $label$10 }
	
.LABEL $label$11
	*(($9 = CALL $737([32]))) = (int_64)0
	*($9 + [8]) = $5
	*($10) = $9
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = *(($2 + [40]))
	$5 = $9
	$7 = ($11 + [24])
	$8 = *(*($7))
	if ( ($8 == 0) ){ goto $label$18 }
	*($7) = $8
	$5 = *($10)
	
.LABEL $label$18
	CALL $289(*(($11 + [28])), $5)
	*(($5 = ($11 + [32]))) = (*($5) + [1])
	
.LABEL $label$10
	*(($5 = ($9 + [24]))) = (int_64))(*($5) - $3)
	$10 = ($0 + [48])
	$5 = *($10)
	if ( ($5 == 0) ){ goto $label$23 }
	$10 = ($0 + [48])
	$4 = *(($2 + [24]))
	
.LOOP $label$24:
	$6 = *($5 + [16])
	if ( ((uint_64)$4 >= (uint_64)$6) ){ goto $label$26 }
	$9 = *($5)
	if ( $9 ){ goto $label$25 }
	goto $label$22 
	
.LABEL $label$26
	if ( ((uint_64)$6 >= (uint_64)$4) ){ goto $label$21 }
	$10 = ($5 + [4])
	$9 = *($5 + [4])
	if ( ($9 == 0) ){ goto $label$21 }
	$5 = $10
	
.LABEL $label$25
	$10 = $5
	$5 = $9
	goto $label$24 
	
.LABEL $label$23
	$5 = $10
	$7 = *($10)
	if ( $7 ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$22
	$10 = $5
	
.LABEL $label$21
	$7 = *($10)
	if ( $7 ){ goto $label$19 }
	
.LABEL $label$20
	*(($7 = CALL $737([40])) + [28]) = [0]
	*($7 + [32]) = [0]
	*($7) = (int_64)0
	*($7 + [16]) = *(($2 + [24]))
	*($7 + [24]) = ($7 + [28])
	*($7 + [8]) = $5
	*($10) = $7
	$5 = $7
	$9 = ($0 + [44])
	$11 = *(*($9))
	if ( ($11 == 0) ){ goto $label$27 }
	*($9) = $11
	$5 = *($10)
	
.LABEL $label$27
	CALL $289(*(($0 + [48])), $5)
	*(($5 = ($0 + [52]))) = (*($5) + [1])
	
.LABEL $label$19
	$10 = ($7 + [28])
	$5 = *($10)
	if ( ($5 == 0) ){ goto $label$32 }
	$10 = ($7 + [28])
	$4 = *(($2 + [32]))
	
.LOOP $label$33:
	$6 = *($5 + [16])
	if ( ((uint_64)$4 >= (uint_64)$6) ){ goto $label$35 }
	$9 = *($5)
	if ( $9 ){ goto $label$34 }
	goto $label$31 
	
.LABEL $label$35
	if ( ((uint_64)$6 >= (uint_64)$4) ){ goto $label$30 }
	$10 = ($5 + [4])
	$9 = *($5 + [4])
	if ( ($9 == 0) ){ goto $label$30 }
	$5 = $10
	
.LABEL $label$34
	$10 = $5
	$5 = $9
	goto $label$33 
	
.LABEL $label$32
	$5 = $10
	$9 = *($10)
	if ( $9 ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$31
	$10 = $5
	
.LABEL $label$30
	$9 = *($10)
	if ( $9 ){ goto $label$28 }
	
.LABEL $label$29
	*(($9 = CALL $737([32]))) = (int_64)0
	*($9 + [8]) = $5
	*($10) = $9
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = *(($2 + [32]))
	$5 = $9
	$11 = ($7 + [24])
	$8 = *(*($11))
	if ( ($8 == 0) ){ goto $label$36 }
	*($11) = $8
	$5 = *($10)
	
.LABEL $label$36
	CALL $289(*(($7 + [28])), $5)
	*(($5 = ($7 + [32]))) = (*($5) + [1])
	
.LABEL $label$28
	*(($5 = ($9 + [24]))) = ((int_64)*($5) + (int_64)$3)
	$10 = ($0 + [60])
	$5 = *($10)
	if ( ($5 == 0) ){ goto $label$41 }
	$10 = ($0 + [60])
	$4 = *(($2 + [32]))
	
.LOOP $label$42:
	$6 = *($5 + [16])
	if ( ((uint_64)$4 >= (uint_64)$6) ){ goto $label$44 }
	$9 = *($5)
	if ( $9 ){ goto $label$43 }
	goto $label$40 
	
.LABEL $label$44
	if ( ((uint_64)$6 >= (uint_64)$4) ){ goto $label$39 }
	$10 = ($5 + [4])
	$9 = *($5 + [4])
	if ( ($9 == 0) ){ goto $label$39 }
	$5 = $10
	
.LABEL $label$43
	$10 = $5
	$5 = $9
	goto $label$42 
	
.LABEL $label$41
	$5 = $10
	$9 = *($10)
	if ( $9 ){ goto $label$37 }
	goto $label$38 
	
.LABEL $label$40
	$10 = $5
	
.LABEL $label$39
	$9 = *($10)
	if ( $9 ){ goto $label$37 }
	
.LABEL $label$38
	*(($9 = CALL $737([32]))) = (int_64)0
	*($9 + [8]) = $5
	*($10) = $9
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = *(($2 + [32]))
	$5 = $9
	$7 = ($0 + [56])
	$11 = *(*($7))
	if ( ($11 == 0) ){ goto $label$45 }
	*($7) = $11
	$5 = *($10)
	
.LABEL $label$45
	CALL $289(*(($0 + [60])), $5)
	*(($5 = ($0 + [64]))) = (*($5) + [1])
	
.LABEL $label$37
	*(($5 = ($9 + [24]))) = ((int_64)*($5) + (int_64)$3)
}

int_32 .FUNC $258 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [56]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3660983113619603456, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $226($0, $5)
	CALL eosio_assert(((int_32)*($6 + [56]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $755 (int_32 $0)
{
	int_32 $1
	$1 = (*([0] + [4]) - [16])
	*([0] + [4]) = $1
	CALL $757($1, $0, [20368])
	CALL abort()
	(unreachable)
}

void .FUNC _ZN11walexchange12wal_exchange12rollsendbackEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [240])
	*([0] + [4]) = $12
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	*($12 + [224]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($12 + [224]), $1, [1])
	*((($12 + [184]) + [32])) = [0]
	*($12 + [192]) = $1
	*($12 + [200]) = (int_64)-1
	*($12 + [208]) = (int_64)0
	*($12 + [184]) = *($0)
	$4 = CALL $325(($12 + [184]), $2, [592])
	$5 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($12 + [224]), *($4 + [8]), [0])
	$3 = ($4 + [32])
	$6 = *($3)
	*((($12 + [160]) + [16])) = $6
	$7 = ($4 + [24])
	$8 = *($7)
	*((($12 + [160]) + [8])) = $8
	$9 = *($4 + [16])
	*((($12 + [48]) + [16])) = $6
	*((($12 + [48]) + [8])) = $8
	*($12 + [160]) = $9
	*($12 + [48]) = $9
	$10 = ($0 + [256])
	CALL _ZN11walexchange13asset_manager14adjust_balanceEyyN5eosio14extended_assetEy($10, $5, $1, ($12 + [48]), (int_64)0)
	$5 = *($3)
	*((($12 + [136]) + [16])) = $5
	$6 = *($7)
	*((($12 + [136]) + [8])) = $6
	$9 = *($4 + [16])
	*((($12 + [24]) + [16])) = $5
	*((($12 + [24]) + [8])) = $6
	*($12 + [136]) = $9
	*($12 + [24]) = $9
	CALL _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE($10, $1, ($12 + [24]))
	*((($12 + [112]) + [20])) = *(($4 + [36]))
	*(($11 = (($12 + [112]) + [16]))) = *($3)
	*(($12 + [124])) = *(($4 + [28]))
	*(($3 = (($12 + [112]) + [8]))) = *($7)
	*($12 + [116]) = *(($4 + [20]))
	*($12 + [112]) = *($4 + [16])
	$9 = *($0)
	*(($12 + [16])) = *($11)
	*(($12 + [8])) = *($3)
	*($12) = *($12 + [112])
	CALL _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE($10, $9, $12)
	CALL $327(($12 + [184]), $4)
	*((($12 + [72]) + [32])) = [0]
	*($12 + [80]) = $1
	*($12 + [88]) = (int_64)-1
	*($12 + [96]) = (int_64)0
	$9 = *($0)
	*($12 + [72]) = $9
	*($12 + [108]) = [0]
	$4 = CALL db_find_i64($9, $1, (int_64)-2039333636190801408, $2)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $97(($12 + [72]), $4)
	CALL eosio_assert(((int_32)*($4 + [56]) == (int_32)($12 + [72])), [288])
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$0 = CALL db_next_i64(*($4 + [60]), ($12 + [232]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	CALL $97(($12 + [72]), $0)
	
.LABEL $label$3
	CALL $326(($12 + [72]), $4)
	
.LABEL $label$2
	$3 = *($12 + [96])
	if ( ($3 == 0) ){ goto $label$4 }
	$7 = ($12 + [100])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	if ( ((*($4 + [44]) & [1]) == 0) ){ goto $label$9 }
	CALL $738(*(($4 + [52])))
	
.LABEL $label$9
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $738(*(($4 + [40])))
	
.LABEL $label$10
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$7 }
	$4 = *(($12 + [96]))
	goto $label$5 
	
.LABEL $label$6
	$4 = $3
	
.LABEL $label$5
	*($7) = $3
	CALL $738($4)
	
.LABEL $label$4
	$3 = *($12 + [208])
	if ( ($3 == 0) ){ goto $label$11 }
	$7 = ($12 + [212])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	CALL $738($0)
	
.LABEL $label$15
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$14 }
	$4 = *(($12 + [208]))
	goto $label$12 
	
.LABEL $label$13
	$4 = $3
	
.LABEL $label$12
	*($7) = $3
	CALL $738($4)
	
.LABEL $label$11
	*([0] + [4]) = ($12 + [240])
}

int_32 .FUNC $328 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	$10 = $11
	*([0] + [4]) = $11
	$3 = *($0 + [24])
	$8 = *(($0 + [28]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$7 = ($8 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$8 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($8 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($4)
	CALL db_get_i64($1, $8, $4)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $4)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $737([56])) + [24]) = (int_64)1398362884
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$11 = ($5 + [24])
	$6 = ($5 + [16])
	$9 = (int_64)5462355
	$7 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$3 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$3 = [0]
	
.LABEL $label$7
	CALL eosio_assert($3, [2832])
	*($5 + [40]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($5, $8, [8])
	$7 = ($4 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [544])
	CALL memcpy(($5 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [544])
	CALL memcpy($6, ($8 + [16]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[24]), [544])
	CALL memcpy($11, ($8 + [24]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[32]), [544])
	CALL memcpy(($5 + [32]), ($8 + [32]), [8])
	*($5 + [44]) = $1
	*($10 + [24]) = $5
	$9 = *($5)
	*($10 + [16]) = $9
	$8 = *($5 + [44])
	*($10 + [12]) = $8
	$1 = ($0 + [28])
	$7 = *($1)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($7 + [8]) = $9
	*($7 + [16]) = $8
	*($10 + [24]) = [0]
	*($7) = $5
	*($1) = ($7 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $291($2, ($10 + [24]), ($10 + [16]), ($10 + [12]))
	
.LABEL $label$12
	$7 = *($10 + [24])
	*($10 + [24]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $738($7)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [32])
	return $5
}

void .FUNC $321 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
	$7 = *(($1 + [24]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3102536759586062336, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $320 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [784])
	$6 = *($0 + [4])
	$7 = *($6 + [24])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-3102536759586062336, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [24]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$2), [288])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $322($2, CALL $fimport$19(*($2), *($2 + [8]), (int_64)-3102536759586062336, $3))
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$2), [288])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [24])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

int_32 .FUNC $323 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [544])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	*($6 + [24]) = [-1]
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $132(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $322 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [544])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	*($6 + [24]) = [-1]
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $133(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $325 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4420672007217230400, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $328($0, $5)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN11walexchange12wal_exchange8sendbackEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [160])
	*([0] + [4]) = $10
	*($10 + [112]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($10 + [112]), $1, [1])
	*(($10 + [104])) = [0]
	*($10 + [80]) = $1
	*($10 + [88]) = (int_64)-1
	*($10 + [96]) = (int_64)0
	*($10 + [72]) = *($0)
	$3 = CALL $325(($10 + [72]), $2, [592])
	*(($10 + [64])) = [0]
	*($10 + [56]) = (int_64)0
	$6 = CALL strlen([3776])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($10 + [56]) = ($6 << [1])
	$9 = (($10 + [56]) | [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($6 + [16]) & [-16])
	$9 = CALL $737($5)
	*($10 + [56]) = ($5 | [1])
	*($10 + [64]) = $9
	*($10 + [60]) = $6
	
.LABEL $label$3
	CALL memcpy($9, [3776], $6)
	
.LABEL $label$2
	*(($9 + $6)) = [0]
	*((($10 + [8]) + [32])) = [0]
	*($10 + [24]) = (int_64)-1
	*($10 + [32]) = (int_64)0
	$7 = *($0)
	*($10 + [8]) = $7
	*($10 + [16]) = $1
	*($10 + [44]) = [0]
	$6 = CALL db_find_i64($7, $1, (int_64)-2039333636190801408, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$6 = CALL $97(($10 + [8]), $6)
	CALL eosio_assert(((int_32)*($6 + [56]) == (int_32)($10 + [8])), [288])
	*($10 + [48]) = *($6 + [24])
	CALL $740(($10 + [56]), ($6 + [32]))
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$9 = CALL db_next_i64(*($6 + [60]), ($10 + [120]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$7 }
	CALL $97(($10 + [8]), $9)
	
.LABEL $label$7
	CALL $326(($10 + [8]), $6)
	goto $label$5 
	
.LABEL $label$6
	$2 = *($3 + [8])
	$1 = *($0)
	*((($10 + [120]) + [32])) = [0]
	*($10 + [128]) = $1
	*($10 + [120]) = $1
	*($10 + [136]) = (int_64)-1
	*($10 + [144]) = (int_64)0
	*($10 + [156]) = [0]
	$4 = CALL $11(($10 + [120]), $2, [592])
	$5 = *($10 + [144])
	if ( ($5 == 0) ){ goto $label$8 }
	$8 = ($10 + [148])
	$6 = *($8)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$12 }
	CALL $738($9)
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$11 }
	$6 = *(($10 + [144]))
	goto $label$9 
	
.LABEL $label$10
	$6 = $5
	
.LABEL $label$9
	*($8) = $5
	CALL $738($6)
	
.LABEL $label$8
	*($10 + [48]) = *($4 + [16])
	
.LABEL $label$5
	$1 = *($3 + [16])
	*($10 + [120]) = $1
	$2 = *(($3 + [24]))
	*($10 + [128]) = $2
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$5 = ($3 + [32])
	$1 = (uint_64)$2 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$9 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$9 = [0]
	
.LABEL $label$13
	CALL eosio_assert($9, [2832])
	CALL _ZN11walexchange12wal_exchange12out_transferERKyS2_RKN5eosio5assetERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE($0, ($10 + [48]), $5, ($10 + [120]), ($10 + [56]))
	CALL $327(($10 + [72]), $3)
	$5 = *($10 + [32])
	if ( ($5 == 0) ){ goto $label$18 }
	$0 = ($10 + [36])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$20 }
	
.LOOP $label$21:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$22 }
	if ( ((*($6 + [44]) & [1]) == 0) ){ goto $label$23 }
	CALL $738(*(($6 + [52])))
	
.LABEL $label$23
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$24 }
	CALL $738(*(($6 + [40])))
	
.LABEL $label$24
	CALL $738($6)
	
.LABEL $label$22
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$21 }
	$6 = *(($10 + [32]))
	goto $label$19 
	
.LABEL $label$20
	$6 = $5
	
.LABEL $label$19
	*($0) = $5
	CALL $738($6)
	
.LABEL $label$18
	if ( ((*($10 + [56]) & [1]) == 0) ){ goto $label$25 }
	CALL $738(*($10 + [64]))
	
.LABEL $label$25
	$5 = *($10 + [96])
	if ( ($5 == 0) ){ goto $label$26 }
	$0 = ($10 + [100])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$28 }
	
.LOOP $label$29:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$30 }
	CALL $738($9)
	
.LABEL $label$30
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$29 }
	$6 = *(($10 + [96]))
	goto $label$27 
	
.LABEL $label$28
	$6 = $5
	
.LABEL $label$27
	*($0) = $5
	CALL $738($6)
	
.LABEL $label$26
	*([0] + [4]) = ($10 + [160])
	return (unreachable)
	
.LABEL $label$1
	CALL $739(($10 + [56]))
}

void .FUNC $327 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC $326 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$4 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($4)) == (int_64)$2) ){ goto $label$1 }
	$7 = $4
	$8 = ($4 + [-24])
	$4 = $8
	if ( ((int_32)($8 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((*($4 + [44]) & [1]) == 0) ){ goto $label$7 }
	CALL $738(*(($4 + [52])))
	
.LABEL $label$7
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$8 }
	CALL $738(*(($4 + [40])))
	
.LABEL $label$8
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	if ( ((*($4 + [44]) & [1]) == 0) ){ goto $label$11 }
	CALL $738(*(($4 + [52])))
	
.LABEL $label$11
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$12 }
	CALL $738(*(($4 + [40])))
	
.LABEL $label$12
	CALL $738($4)
	
.LABEL $label$10
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [60]))
	$7 = *(($1 + [64]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$14 }
	$7 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-2039333636190801408, $9, *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$13 }
	
.LABEL $label$14
	CALL db_idx128_remove($7)
	
.LABEL $label$13
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $102($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $742($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $737($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $742($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $738($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $739($7)
	return (unreachable)
}

int_32 .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $101(CALL $101($0, ($1 + [32])), ($1 + [44]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	$4 = ($4 & [-8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [544])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[16]), [544])
	CALL memcpy(($6 + [16]), ($7 + [16]), [8])
	*($6 + [32]) = [-1]
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $104(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC _ZN11walexchange12wal_exchange9batchdeleEy (int_32 $0, int_64 $1)
{
	CALL eosio_assert([0], [8384])
}

int_32 .FUNC $457 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [784])
	$6 = *($0 + [4])
	$7 = *(($6 + [100]))
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-3020379700877741407, ($9 + [8]), *($6))
	*((*(($0 + [4])) + [100])) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [88]) == (int_32)$2), [288])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $463($2, CALL $fimport$19(*($2), *($2 + [8]), (int_64)-3020379700877741408, $3))
	CALL eosio_assert(((int_32)*($7 + [88]) == (int_32)$2), [288])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [100])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $456 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-3020379700877741407, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [88]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $463($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-3020379700877741408, $5))
	CALL eosio_assert(((int_32)*($2 + [88]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [100])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([96])) + [80]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((uint_32)($4 + [-8]) > (uint_32)[31]), [544])
	CALL memcpy(($6 + [16]), ($7 + [8]), [32])
	CALL eosio_assert(((uint_32)($4 + [-40]) > (uint_32)[31]), [544])
	CALL memcpy(($6 + [48]), ($7 + [40]), [32])
	*($6 + [88]) = [-1]
	*($6 + [84]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [84])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $108(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $454 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)5031813150555504640, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $21($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)5031813150555504640, $5))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [24])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC _ZN11walexchange12wal_exchange11clearordersEy (int_32 $0, int_64 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [32])
	*([0] + [4]) = $2
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	*($2 + [24]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($2 + [24]), $1, [1])
	*($2 + [8]) = $1
	*($2 + [16]) = [60]
	*($2) = *($0)
	CALL _ZN11walexchange13order_manager12clear_ordersEv($2)
	*([0] + [4]) = ($2 + [32])
}

void .FUNC $108 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $459 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [64])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [896])
	CALL memcpy($1, *($3), [40])
	CALL eosio_assert([1], [960])
	*($4 + [56]) = ($4 + [40])
	*($4 + [52]) = $4
	*($4 + [48]) = $4
	CALL $461(($4 + [48]), $1)
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)5031813144072871104) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)5031813144072871105
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [64])
}

void .FUNC $458 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)$0), [288])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)5031813144072871104, (int_64)5031813144072871104)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $453($0, $3)
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)$0), [288])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [1328])
	CALL $459($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $460($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $691 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($4 + [8]) = $2
	CALL $692(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC _ZN11walexchange12wal_exchange12settle_tradeEyNS_8to_tradeE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [640])
	*([0] + [4]) = $15
	*((($15 + [552]) + [32])) = [0]
	*($15 + [560]) = $1
	*($15 + [568]) = (int_64)-1
	*($15 + [576]) = (int_64)0
	$8 = *($0)
	*($15 + [552]) = $8
	*($15 + [588]) = [0]
	*((($15 + [512]) + [32])) = [0]
	*($15 + [520]) = $1
	*($15 + [512]) = $8
	*($15 + [528]) = (int_64)-1
	*($15 + [536]) = (int_64)0
	*($15 + [548]) = [0]
	*($15 + [504]) = ($15 + [552])
	*($15 + [496]) = $1
	*($15 + [488]) = $8
	$3 = *($2 + [24])
	if ( (CALL _ZN11walexchange11rex_manager17has_target_ref_idEm(($15 + [488]), $3) == 0) ){ goto $label$91 }
	*((($15 + [592]) + [32])) = [0]
	*($15 + [600]) = $8
	*($15 + [592]) = $8
	*($15 + [608]) = (int_64)-1
	*($15 + [616]) = (int_64)0
	$3 = *(CALL $297(($15 + [592]), (CASTING uint_64)(uint_32 $3), [5632]) + [4])
	$13 = *($15 + [616])
	if ( ($13 == 0) ){ goto $label$88 }
	$11 = ($15 + [620])
	$6 = *($11)
	if ( ((int_32)$6 == (int_32)$13) ){ goto $label$90 }
	
.LOOP $label$92:
	$6 = ($6 + [-24])
	$14 = *($6)
	*($6) = [0]
	if ( ($14 == 0) ){ goto $label$93 }
	CALL $738($14)
	
.LABEL $label$93
	if ( ((int_32)$13 != (int_32)$6) ){ goto $label$92 }
	$6 = *(($15 + [616]))
	goto $label$89 
	
.LABEL $label$91
	$7 = *($2 + [32])
	$14 = ($0 + [12])
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$94 }
	$13 = ($0 + [12])
	$8 = *(($2 + [8]))
	
.LOOP $label$95:
	$9 = *($6 + [16])
	if ( ((uint_64)$8 >= (uint_64)$9) ){ goto $label$97 }
	$11 = *($6)
	if ( $11 ){ goto $label$96 }
	goto $label$87 
	
.LABEL $label$97
	if ( ((uint_64)$9 >= (uint_64)$8) ){ goto $label$86 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$86 }
	$6 = $13
	
.LABEL $label$96
	$13 = $6
	$6 = $11
	goto $label$95 
	
.LABEL $label$94
	$6 = $14
	$13 = $14
	$12 = *($13)
	if ( $12 ){ goto $label$84 }
	goto $label$85 
	
.LABEL $label$90
	$6 = $13
	
.LABEL $label$89
	*($11) = $13
	CALL $738($6)
	
.LABEL $label$88
	CALL memcpy(($15 + [424]), $2, [64])
	CALL memcpy(($15 + [56]), ($15 + [424]), [64])
	$13 = ($0 + [104])
	CALL _ZN11walexchange11rex_manager15create_delegateENS_8to_tradeE(($15 + [488]), ($15 + [56]))
	$4 = *($0)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [2144]
	$10 = (int_64)0
	
.LOOP $label$98:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$103 }
	$14 = *($6)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$102 }
	$14 = ($14 + [165])
	goto $label$101 
	
.LABEL $label$103
	$9 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$100 }
	goto $label$99 
	
.LABEL $label$102
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$101
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$100
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$99
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$98 }
	*($15 + [600]) = $10
	*($15 + [592]) = $4
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [5664]
	$10 = (int_64)0
	
.LOOP $label$104:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$109 }
	$14 = *($6)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$108 }
	$14 = ($14 + [165])
	goto $label$107 
	
.LABEL $label$109
	$9 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$106 }
	goto $label$105 
	
.LABEL $label$108
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$107
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$106
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$105
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$104 }
	*($15 + [416]) = $10
	*($15 + [400]) = $1
	*($15 + [408]) = *($2)
	$14 = ($0 + [108])
	$6 = *($14)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [112]))) ){ goto $label$111 }
	*($6 + [8]) = $10
	*($6) = $4
	*($6 + [16 align=4]) = (int_64)0
	*(($11 = ($6 + [24]))) = [0]
	$13 = CALL $737([16])
	*($6 + [16]) = $13
	$12 = ($13 + [16])
	*($11) = $12
	*(($13 + [8])) = *((($15 + [592]) + [8]))
	*($13) = *($15 + [592])
	*(($6 + [20])) = $12
	*($6 + [28]) = [0]
	*(($13 = ($6 + [32]))) = [0]
	*(($6 + [36])) = [0]
	CALL $88(($6 + [28]), [16])
	$6 = *($6 + [28])
	$13 = (*($13) - $6)
	CALL eosio_assert(((int_32)$13 > (int_32)[7]), [496])
	CALL memcpy($6, ($15 + [400]), [8])
	CALL eosio_assert(((int_32)($13 + [-8]) > (int_32)[7]), [496])
	CALL memcpy(($6 + [8]), (($15 + [400]) + [8]), [8])
	*($14) = (*($14) + [40])
	goto $label$110 
	
.LABEL $label$111
	CALL $292($13, ($15 + [592]), $0, ($15 + [416]), ($15 + [400]))
	
.LABEL $label$110
	$7 = *($2 + [32])
	$14 = ($0 + [12])
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$112 }
	$13 = ($0 + [12])
	$8 = *(($2 + [16]))
	
.LOOP $label$113:
	$9 = *($6 + [16])
	if ( ((uint_64)$8 >= (uint_64)$9) ){ goto $label$115 }
	$11 = *($6)
	if ( $11 ){ goto $label$114 }
	goto $label$83 
	
.LABEL $label$115
	if ( ((uint_64)$9 >= (uint_64)$8) ){ goto $label$82 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$82 }
	$6 = $13
	
.LABEL $label$114
	$13 = $6
	$6 = $11
	goto $label$113 
	
.LABEL $label$112
	$6 = $14
	$13 = $14
	$12 = *($13)
	if ( $12 ){ goto $label$80 }
	goto $label$81 
	
.LABEL $label$87
	$13 = $6
	
.LABEL $label$86
	$12 = *($13)
	if ( $12 ){ goto $label$84 }
	
.LABEL $label$85
	*(($12 = CALL $737([40])) + [28]) = [0]
	*($12 + [32]) = [0]
	*($12) = (int_64)0
	*($12 + [16]) = *(($2 + [8]))
	*($12 + [24]) = ($12 + [28])
	*($12 + [8]) = $6
	*($13) = $12
	$6 = $12
	$11 = ($0 + [8])
	$5 = *(*($11))
	if ( ($5 == 0) ){ goto $label$116 }
	*($11) = $5
	$6 = *($13)
	
.LABEL $label$116
	CALL $289(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$84
	$13 = ($12 + [28])
	$6 = *($13)
	if ( ($6 == 0) ){ goto $label$117 }
	$13 = ($12 + [28])
	
.LOOP $label$118:
	$11 = *($6 + [16])
	if ( ((uint_32)$3 >= (uint_32)$11) ){ goto $label$120 }
	$11 = *($6)
	if ( $11 ){ goto $label$119 }
	goto $label$79 
	
.LABEL $label$120
	if ( ((uint_32)$11 >= (uint_32)$3) ){ goto $label$78 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$78 }
	$6 = $13
	
.LABEL $label$119
	$13 = $6
	$6 = $11
	goto $label$118 
	
.LABEL $label$117
	$6 = $13
	$11 = *($13)
	if ( $11 ){ goto $label$76 }
	goto $label$77 
	
.LABEL $label$83
	$13 = $6
	
.LABEL $label$82
	$12 = *($13)
	if ( $12 ){ goto $label$80 }
	
.LABEL $label$81
	*(($12 = CALL $737([40])) + [28]) = [0]
	*($12 + [32]) = [0]
	*($12) = (int_64)0
	*($12 + [16]) = *(($2 + [16]))
	*($12 + [24]) = ($12 + [28])
	*($12 + [8]) = $6
	*($13) = $12
	$6 = $12
	$11 = ($0 + [8])
	$5 = *(*($11))
	if ( ($5 == 0) ){ goto $label$121 }
	*($11) = $5
	$6 = *($13)
	
.LABEL $label$121
	CALL $289(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$80
	$13 = ($12 + [28])
	$6 = *($13)
	if ( ($6 == 0) ){ goto $label$122 }
	$13 = ($12 + [28])
	
.LOOP $label$123:
	$11 = *($6 + [16])
	if ( ((uint_32)$3 >= (uint_32)$11) ){ goto $label$125 }
	$11 = *($6)
	if ( $11 ){ goto $label$124 }
	goto $label$75 
	
.LABEL $label$125
	if ( ((uint_32)$11 >= (uint_32)$3) ){ goto $label$74 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$74 }
	$6 = $13
	
.LABEL $label$124
	$13 = $6
	$6 = $11
	goto $label$123 
	
.LABEL $label$122
	$6 = $13
	$11 = *($13)
	if ( $11 ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$79
	$13 = $6
	
.LABEL $label$78
	$11 = *($13)
	if ( $11 ){ goto $label$76 }
	
.LABEL $label$77
	*(($11 = CALL $737([32]))) = (int_64)0
	*($11 + [8]) = $6
	*($13) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = *(($2 + [24]))
	$6 = $11
	$3 = ($12 + [24])
	$5 = *(*($3))
	if ( ($5 == 0) ){ goto $label$126 }
	*($3) = $5
	$6 = *($13)
	
.LABEL $label$126
	CALL $289(*(($12 + [28])), $6)
	*(($6 = ($12 + [32]))) = (*($6) + [1])
	
.LABEL $label$76
	*(($6 = ($11 + [24]))) = ((int_64)*($6) + (int_64)$7)
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$127 }
	$13 = ($0 + [12])
	$8 = *(($2 + [16]))
	
.LOOP $label$128:
	$9 = *($6 + [16])
	if ( ((uint_64)$8 >= (uint_64)$9) ){ goto $label$130 }
	$11 = *($6)
	if ( $11 ){ goto $label$129 }
	goto $label$71 
	
.LABEL $label$130
	if ( ((uint_64)$9 >= (uint_64)$8) ){ goto $label$70 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$70 }
	$6 = $13
	
.LABEL $label$129
	$13 = $6
	$6 = $11
	goto $label$128 
	
.LABEL $label$127
	$6 = $14
	$13 = $14
	$12 = *($13)
	if ( $12 ){ goto $label$68 }
	goto $label$69 
	
.LABEL $label$75
	$13 = $6
	
.LABEL $label$74
	$11 = *($13)
	if ( $11 ){ goto $label$72 }
	
.LABEL $label$73
	*(($11 = CALL $737([32]))) = (int_64)0
	*($11 + [8]) = $6
	*($13) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = $3
	$6 = $11
	$3 = ($12 + [24])
	$5 = *(*($3))
	if ( ($5 == 0) ){ goto $label$131 }
	*($3) = $5
	$6 = *($13)
	
.LABEL $label$131
	CALL $289(*(($12 + [28])), $6)
	*(($6 = ($12 + [32]))) = (*($6) + [1])
	
.LABEL $label$72
	*(($6 = ($11 + [24]))) = (int_64))(*($6) - $7)
	$7 = *($2 + [40])
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$132 }
	$13 = ($0 + [12])
	$8 = *(($2 + [8]))
	
.LOOP $label$133:
	$9 = *($6 + [16])
	if ( ((uint_64)$8 >= (uint_64)$9) ){ goto $label$135 }
	$11 = *($6)
	if ( $11 ){ goto $label$134 }
	goto $label$67 
	
.LABEL $label$135
	if ( ((uint_64)$9 >= (uint_64)$8) ){ goto $label$66 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$66 }
	$6 = $13
	
.LABEL $label$134
	$13 = $6
	$6 = $11
	goto $label$133 
	
.LABEL $label$132
	$6 = $14
	$13 = $14
	$12 = *($13)
	if ( $12 ){ goto $label$64 }
	goto $label$65 
	
.LABEL $label$71
	$13 = $6
	
.LABEL $label$70
	$12 = *($13)
	if ( $12 ){ goto $label$68 }
	
.LABEL $label$69
	*(($12 = CALL $737([40])) + [28]) = [0]
	*($12 + [32]) = [0]
	*($12) = (int_64)0
	*($12 + [16]) = *(($2 + [16]))
	*($12 + [24]) = ($12 + [28])
	*($12 + [8]) = $6
	*($13) = $12
	$6 = $12
	$11 = ($0 + [8])
	$3 = *(*($11))
	if ( ($3 == 0) ){ goto $label$136 }
	*($11) = $3
	$6 = *($13)
	
.LABEL $label$136
	CALL $289(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$68
	$13 = ($12 + [28])
	$6 = *($13)
	if ( ($6 == 0) ){ goto $label$137 }
	$13 = ($12 + [28])
	$3 = *(($2 + [24]))
	
.LOOP $label$138:
	$11 = *($6 + [16])
	if ( ((uint_32)$3 >= (uint_32)$11) ){ goto $label$140 }
	$11 = *($6)
	if ( $11 ){ goto $label$139 }
	goto $label$63 
	
.LABEL $label$140
	if ( ((uint_32)$11 >= (uint_32)$3) ){ goto $label$62 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$62 }
	$6 = $13
	
.LABEL $label$139
	$13 = $6
	$6 = $11
	goto $label$138 
	
.LABEL $label$137
	$6 = $13
	$11 = *($13)
	if ( $11 ){ goto $label$60 }
	goto $label$61 
	
.LABEL $label$67
	$13 = $6
	
.LABEL $label$66
	$12 = *($13)
	if ( $12 ){ goto $label$64 }
	
.LABEL $label$65
	*(($12 = CALL $737([40])) + [28]) = [0]
	*($12 + [32]) = [0]
	*($12) = (int_64)0
	*($12 + [16]) = *(($2 + [8]))
	*($12 + [24]) = ($12 + [28])
	*($12 + [8]) = $6
	*($13) = $12
	$6 = $12
	$11 = ($0 + [8])
	$3 = *(*($11))
	if ( ($3 == 0) ){ goto $label$141 }
	*($11) = $3
	$6 = *($13)
	
.LABEL $label$141
	CALL $289(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$64
	$13 = ($12 + [28])
	$6 = *($13)
	if ( ($6 == 0) ){ goto $label$142 }
	$13 = ($12 + [28])
	$3 = *(($2 + [28]))
	
.LOOP $label$143:
	$11 = *($6 + [16])
	if ( ((uint_32)$3 >= (uint_32)$11) ){ goto $label$145 }
	$11 = *($6)
	if ( $11 ){ goto $label$144 }
	goto $label$59 
	
.LABEL $label$145
	if ( ((uint_32)$11 >= (uint_32)$3) ){ goto $label$58 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$58 }
	$6 = $13
	
.LABEL $label$144
	$13 = $6
	$6 = $11
	goto $label$143 
	
.LABEL $label$142
	$6 = $13
	$11 = *($13)
	if ( $11 ){ goto $label$56 }
	goto $label$57 
	
.LABEL $label$63
	$13 = $6
	
.LABEL $label$62
	$11 = *($13)
	if ( $11 ){ goto $label$60 }
	
.LABEL $label$61
	*(($11 = CALL $737([32]))) = (int_64)0
	*($11 + [8]) = $6
	*($13) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = *(($2 + [24]))
	$6 = $11
	$3 = ($12 + [24])
	$5 = *(*($3))
	if ( ($5 == 0) ){ goto $label$146 }
	*($3) = $5
	$6 = *($13)
	
.LABEL $label$146
	CALL $289(*(($12 + [28])), $6)
	*(($6 = ($12 + [32]))) = (*($6) + [1])
	
.LABEL $label$60
	*(($6 = ($11 + [24]))) = (int_64))(*($6) - $7)
	$7 = *($2 + [40])
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$147 }
	$13 = ($0 + [12])
	$8 = *(($2 + [8]))
	
.LOOP $label$148:
	$9 = *($6 + [16])
	if ( ((uint_64)$8 >= (uint_64)$9) ){ goto $label$150 }
	$11 = *($6)
	if ( $11 ){ goto $label$149 }
	goto $label$55 
	
.LABEL $label$150
	if ( ((uint_64)$9 >= (uint_64)$8) ){ goto $label$54 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$54 }
	$6 = $13
	
.LABEL $label$149
	$13 = $6
	$6 = $11
	goto $label$148 
	
.LABEL $label$147
	$6 = $14
	$13 = $14
	$12 = *($13)
	if ( $12 ){ goto $label$52 }
	goto $label$53 
	
.LABEL $label$59
	$13 = $6
	
.LABEL $label$58
	$11 = *($13)
	if ( $11 ){ goto $label$56 }
	
.LABEL $label$57
	*(($11 = CALL $737([32]))) = (int_64)0
	*($11 + [8]) = $6
	*($13) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = *(($2 + [28]))
	$6 = $11
	$3 = ($12 + [24])
	$5 = *(*($3))
	if ( ($5 == 0) ){ goto $label$151 }
	*($3) = $5
	$6 = *($13)
	
.LABEL $label$151
	CALL $289(*(($12 + [28])), $6)
	*(($6 = ($12 + [32]))) = (*($6) + [1])
	
.LABEL $label$56
	*(($6 = ($11 + [24]))) = (int_64))(*($6) - $7)
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$152 }
	$13 = ($0 + [12])
	$8 = *(($2 + [16]))
	
.LOOP $label$153:
	$9 = *($6 + [16])
	if ( ((uint_64)$8 >= (uint_64)$9) ){ goto $label$155 }
	$11 = *($6)
	if ( $11 ){ goto $label$154 }
	goto $label$51 
	
.LABEL $label$155
	if ( ((uint_64)$9 >= (uint_64)$8) ){ goto $label$50 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$50 }
	$6 = $13
	
.LABEL $label$154
	$13 = $6
	$6 = $11
	goto $label$153 
	
.LABEL $label$152
	$6 = $14
	$13 = $14
	$12 = *($13)
	if ( $12 ){ goto $label$48 }
	goto $label$49 
	
.LABEL $label$55
	$13 = $6
	
.LABEL $label$54
	$12 = *($13)
	if ( $12 ){ goto $label$52 }
	
.LABEL $label$53
	*(($12 = CALL $737([40])) + [28]) = [0]
	*($12 + [32]) = [0]
	*($12) = (int_64)0
	*($12 + [16]) = *(($2 + [8]))
	*($12 + [24]) = ($12 + [28])
	*($12 + [8]) = $6
	*($13) = $12
	$6 = $12
	$11 = ($0 + [8])
	$3 = *(*($11))
	if ( ($3 == 0) ){ goto $label$156 }
	*($11) = $3
	$6 = *($13)
	
.LABEL $label$156
	CALL $289(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$52
	$13 = ($12 + [28])
	$6 = *($13)
	if ( ($6 == 0) ){ goto $label$157 }
	$13 = ($12 + [28])
	$3 = *(($2 + [28]))
	
.LOOP $label$158:
	$11 = *($6 + [16])
	if ( ((uint_32)$3 >= (uint_32)$11) ){ goto $label$160 }
	$11 = *($6)
	if ( $11 ){ goto $label$159 }
	goto $label$47 
	
.LABEL $label$160
	if ( ((uint_32)$11 >= (uint_32)$3) ){ goto $label$46 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$46 }
	$6 = $13
	
.LABEL $label$159
	$13 = $6
	$6 = $11
	goto $label$158 
	
.LABEL $label$157
	$6 = $13
	$11 = *($13)
	if ( $11 ){ goto $label$44 }
	goto $label$45 
	
.LABEL $label$51
	$13 = $6
	
.LABEL $label$50
	$12 = *($13)
	if ( $12 ){ goto $label$48 }
	
.LABEL $label$49
	*(($12 = CALL $737([40])) + [28]) = [0]
	*($12 + [32]) = [0]
	*($12) = (int_64)0
	*($12 + [16]) = *(($2 + [16]))
	*($12 + [24]) = ($12 + [28])
	*($12 + [8]) = $6
	*($13) = $12
	$6 = $12
	$11 = ($0 + [8])
	$3 = *(*($11))
	if ( ($3 == 0) ){ goto $label$161 }
	*($11) = $3
	$6 = *($13)
	
.LABEL $label$161
	CALL $289(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$48
	$13 = ($12 + [28])
	$6 = *($13)
	if ( ($6 == 0) ){ goto $label$162 }
	$13 = ($12 + [28])
	$3 = *(($2 + [28]))
	
.LOOP $label$163:
	$11 = *($6 + [16])
	if ( ((uint_32)$3 >= (uint_32)$11) ){ goto $label$165 }
	$11 = *($6)
	if ( $11 ){ goto $label$164 }
	goto $label$43 
	
.LABEL $label$165
	if ( ((uint_32)$11 >= (uint_32)$3) ){ goto $label$42 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$42 }
	$6 = $13
	
.LABEL $label$164
	$13 = $6
	$6 = $11
	goto $label$163 
	
.LABEL $label$162
	$6 = $13
	$11 = *($13)
	if ( $11 ){ goto $label$40 }
	goto $label$41 
	
.LABEL $label$47
	$13 = $6
	
.LABEL $label$46
	$11 = *($13)
	if ( $11 ){ goto $label$44 }
	
.LABEL $label$45
	*(($11 = CALL $737([32]))) = (int_64)0
	*($11 + [8]) = $6
	*($13) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = *(($2 + [28]))
	$6 = $11
	$3 = ($12 + [24])
	$5 = *(*($3))
	if ( ($5 == 0) ){ goto $label$166 }
	*($3) = $5
	$6 = *($13)
	
.LABEL $label$166
	CALL $289(*(($12 + [28])), $6)
	*(($6 = ($12 + [32]))) = (*($6) + [1])
	
.LABEL $label$44
	*(($6 = ($11 + [24]))) = (int_64))(*($6) - $7)
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$167 }
	$13 = ($0 + [12])
	$8 = *(($2 + [16]))
	
.LOOP $label$168:
	$9 = *($6 + [16])
	if ( ((uint_64)$8 >= (uint_64)$9) ){ goto $label$170 }
	$11 = *($6)
	if ( $11 ){ goto $label$169 }
	goto $label$39 
	
.LABEL $label$170
	if ( ((uint_64)$9 >= (uint_64)$8) ){ goto $label$38 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$38 }
	$6 = $13
	
.LABEL $label$169
	$13 = $6
	$6 = $11
	goto $label$168 
	
.LABEL $label$167
	$6 = $14
	$13 = $14
	$12 = *($13)
	if ( $12 ){ goto $label$36 }
	goto $label$37 
	
.LABEL $label$43
	$13 = $6
	
.LABEL $label$42
	$11 = *($13)
	if ( $11 ){ goto $label$40 }
	
.LABEL $label$41
	*(($11 = CALL $737([32]))) = (int_64)0
	*($11 + [8]) = $6
	*($13) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = *(($2 + [28]))
	$6 = $11
	$3 = ($12 + [24])
	$5 = *(*($3))
	if ( ($5 == 0) ){ goto $label$171 }
	*($3) = $5
	$6 = *($13)
	
.LABEL $label$171
	CALL $289(*(($12 + [28])), $6)
	*(($6 = ($12 + [32]))) = (*($6) + [1])
	
.LABEL $label$40
	*(($6 = ($11 + [24]))) = ((int_64)*($6) + (int_64)$7)
	$7 = *($2 + [56])
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$172 }
	$13 = ($0 + [12])
	$8 = *(($2 + [16]))
	
.LOOP $label$173:
	$9 = *($6 + [16])
	if ( ((uint_64)$8 >= (uint_64)$9) ){ goto $label$175 }
	$11 = *($6)
	if ( $11 ){ goto $label$174 }
	goto $label$35 
	
.LABEL $label$175
	if ( ((uint_64)$9 >= (uint_64)$8) ){ goto $label$34 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$34 }
	$6 = $13
	
.LABEL $label$174
	$13 = $6
	$6 = $11
	goto $label$173 
	
.LABEL $label$172
	$6 = $14
	$13 = $14
	$12 = *($13)
	if ( $12 ){ goto $label$32 }
	goto $label$33 
	
.LABEL $label$39
	$13 = $6
	
.LABEL $label$38
	$12 = *($13)
	if ( $12 ){ goto $label$36 }
	
.LABEL $label$37
	*(($12 = CALL $737([40])) + [28]) = [0]
	*($12 + [32]) = [0]
	*($12) = (int_64)0
	*($12 + [16]) = *(($2 + [16]))
	*($12 + [24]) = ($12 + [28])
	*($12 + [8]) = $6
	*($13) = $12
	$6 = $12
	$11 = ($0 + [8])
	$3 = *(*($11))
	if ( ($3 == 0) ){ goto $label$176 }
	*($11) = $3
	$6 = *($13)
	
.LABEL $label$176
	CALL $289(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$36
	$13 = ($12 + [28])
	$6 = *($13)
	if ( ($6 == 0) ){ goto $label$177 }
	$13 = ($12 + [28])
	$3 = *(($2 + [28]))
	
.LOOP $label$178:
	$11 = *($6 + [16])
	if ( ((uint_32)$3 >= (uint_32)$11) ){ goto $label$180 }
	$11 = *($6)
	if ( $11 ){ goto $label$179 }
	goto $label$31 
	
.LABEL $label$180
	if ( ((uint_32)$11 >= (uint_32)$3) ){ goto $label$30 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$30 }
	$6 = $13
	
.LABEL $label$179
	$13 = $6
	$6 = $11
	goto $label$178 
	
.LABEL $label$177
	$6 = $13
	$11 = *($13)
	if ( $11 ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$35
	$13 = $6
	
.LABEL $label$34
	$12 = *($13)
	if ( $12 ){ goto $label$32 }
	
.LABEL $label$33
	*(($12 = CALL $737([40])) + [28]) = [0]
	*($12 + [32]) = [0]
	*($12) = (int_64)0
	*($12 + [16]) = *(($2 + [16]))
	*($12 + [24]) = ($12 + [28])
	*($12 + [8]) = $6
	*($13) = $12
	$6 = $12
	$11 = ($0 + [8])
	$3 = *(*($11))
	if ( ($3 == 0) ){ goto $label$181 }
	*($11) = $3
	$6 = *($13)
	
.LABEL $label$181
	CALL $289(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$32
	$13 = ($12 + [28])
	$6 = *($13)
	if ( ($6 == 0) ){ goto $label$182 }
	$13 = ($12 + [28])
	$3 = *(($2 + [28]))
	
.LOOP $label$183:
	$11 = *($6 + [16])
	if ( ((uint_32)$3 >= (uint_32)$11) ){ goto $label$185 }
	$11 = *($6)
	if ( $11 ){ goto $label$184 }
	goto $label$27 
	
.LABEL $label$185
	if ( ((uint_32)$11 >= (uint_32)$3) ){ goto $label$26 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$26 }
	$6 = $13
	
.LABEL $label$184
	$13 = $6
	$6 = $11
	goto $label$183 
	
.LABEL $label$182
	$6 = $13
	$11 = *($13)
	if ( $11 ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$31
	$13 = $6
	
.LABEL $label$30
	$11 = *($13)
	if ( $11 ){ goto $label$28 }
	
.LABEL $label$29
	*(($11 = CALL $737([32]))) = (int_64)0
	*($11 + [8]) = $6
	*($13) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = *(($2 + [28]))
	$6 = $11
	$3 = ($12 + [24])
	$5 = *(*($3))
	if ( ($5 == 0) ){ goto $label$186 }
	*($3) = $5
	$6 = *($13)
	
.LABEL $label$186
	CALL $289(*(($12 + [28])), $6)
	*(($6 = ($12 + [32]))) = (*($6) + [1])
	
.LABEL $label$28
	*(($6 = ($11 + [24]))) = ((int_64)*($6) + (int_64)$7)
	$7 = *($2 + [48])
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$187 }
	$13 = ($0 + [12])
	$8 = *(($2 + [8]))
	
.LOOP $label$188:
	$9 = *($6 + [16])
	if ( ((uint_64)$8 >= (uint_64)$9) ){ goto $label$190 }
	$11 = *($6)
	if ( $11 ){ goto $label$189 }
	goto $label$23 
	
.LABEL $label$190
	if ( ((uint_64)$9 >= (uint_64)$8) ){ goto $label$22 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$22 }
	$6 = $13
	
.LABEL $label$189
	$13 = $6
	$6 = $11
	goto $label$188 
	
.LABEL $label$187
	$6 = $14
	$13 = $14
	$12 = *($13)
	if ( $12 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$27
	$13 = $6
	
.LABEL $label$26
	$11 = *($13)
	if ( $11 ){ goto $label$24 }
	
.LABEL $label$25
	*(($11 = CALL $737([32]))) = (int_64)0
	*($11 + [8]) = $6
	*($13) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = *(($2 + [28]))
	$6 = $11
	$3 = ($12 + [24])
	$5 = *(*($3))
	if ( ($5 == 0) ){ goto $label$191 }
	*($3) = $5
	$6 = *($13)
	
.LABEL $label$191
	CALL $289(*(($12 + [28])), $6)
	*(($6 = ($12 + [32]))) = (*($6) + [1])
	
.LABEL $label$24
	*(($6 = ($11 + [24]))) = (int_64))(*($6) - $7)
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$192 }
	$14 = ($0 + [12])
	
.LOOP $label$193:
	$8 = *($6 + [16])
	if ( ((uint_64)$8 <= (uint_64)$1) ){ goto $label$195 }
	$13 = *($6)
	if ( $13 ){ goto $label$194 }
	goto $label$19 
	
.LABEL $label$195
	if ( ((uint_64)$8 >= (uint_64)$1) ){ goto $label$18 }
	$14 = ($6 + [4])
	$13 = *($6 + [4])
	if ( ($13 == 0) ){ goto $label$18 }
	$6 = $14
	
.LABEL $label$194
	$14 = $6
	$6 = $13
	goto $label$193 
	
.LABEL $label$192
	$6 = $14
	$3 = *($14)
	if ( $3 ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$23
	$13 = $6
	
.LABEL $label$22
	$12 = *($13)
	if ( $12 ){ goto $label$20 }
	
.LABEL $label$21
	*(($12 = CALL $737([40])) + [28]) = [0]
	*($12 + [32]) = [0]
	*($12) = (int_64)0
	*($12 + [16]) = *(($2 + [8]))
	*($12 + [24]) = ($12 + [28])
	*($12 + [8]) = $6
	*($13) = $12
	$6 = $12
	$11 = ($0 + [8])
	$3 = *(*($11))
	if ( ($3 == 0) ){ goto $label$196 }
	*($11) = $3
	$6 = *($13)
	
.LABEL $label$196
	CALL $289(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$20
	$13 = ($12 + [28])
	$6 = *($13)
	if ( ($6 == 0) ){ goto $label$197 }
	$13 = ($12 + [28])
	$3 = *(($2 + [24]))
	
.LOOP $label$198:
	$11 = *($6 + [16])
	if ( ((uint_32)$3 >= (uint_32)$11) ){ goto $label$200 }
	$11 = *($6)
	if ( $11 ){ goto $label$199 }
	goto $label$15 
	
.LABEL $label$200
	if ( ((uint_32)$11 >= (uint_32)$3) ){ goto $label$14 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$14 }
	$6 = $13
	
.LABEL $label$199
	$13 = $6
	$6 = $11
	goto $label$198 
	
.LABEL $label$197
	$6 = $13
	$11 = *($13)
	if ( $11 ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$19
	$14 = $6
	
.LABEL $label$18
	$3 = *($14)
	if ( $3 ){ goto $label$16 }
	
.LABEL $label$17
	*(($3 = CALL $737([40])) + [28]) = [0]
	*($3) = (int_64)0
	*($3 + [8]) = $6
	*($3 + [24]) = ($3 + [28])
	*($3 + [16]) = $1
	*($3 + [32]) = [0]
	*($14) = $3
	$6 = $3
	$13 = ($0 + [8])
	$11 = *(*($13))
	if ( ($11 == 0) ){ goto $label$201 }
	*($13) = $11
	$6 = *($14)
	
.LABEL $label$201
	CALL $289(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$16
	$14 = ($3 + [28])
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$202 }
	$14 = ($3 + [28])
	$11 = *(($2 + [28]))
	
.LOOP $label$203:
	$13 = *($6 + [16])
	if ( ((uint_32)$11 >= (uint_32)$13) ){ goto $label$205 }
	$13 = *($6)
	if ( $13 ){ goto $label$204 }
	goto $label$11 
	
.LABEL $label$205
	if ( ((uint_32)$13 >= (uint_32)$11) ){ goto $label$10 }
	$14 = ($6 + [4])
	$13 = *($6 + [4])
	if ( ($13 == 0) ){ goto $label$10 }
	$6 = $14
	
.LABEL $label$204
	$14 = $6
	$6 = $13
	goto $label$203 
	
.LABEL $label$202
	$6 = $14
	$13 = *($14)
	if ( $13 ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$15
	$13 = $6
	
.LABEL $label$14
	$11 = *($13)
	if ( $11 ){ goto $label$12 }
	
.LABEL $label$13
	*(($11 = CALL $737([32]))) = (int_64)0
	*($11 + [8]) = $6
	*($13) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = *(($2 + [24]))
	$6 = $11
	$3 = ($12 + [24])
	$5 = *(*($3))
	if ( ($5 == 0) ){ goto $label$206 }
	*($3) = $5
	$6 = *($13)
	
.LABEL $label$206
	CALL $289(*(($12 + [28])), $6)
	*(($6 = ($12 + [32]))) = (*($6) + [1])
	
.LABEL $label$12
	*(($6 = ($11 + [24]))) = (int_64))(*($6) - $7)
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$207 }
	$13 = ($0 + [12])
	
.LOOP $label$208:
	$8 = *($6 + [16])
	if ( ((uint_64)$8 <= (uint_64)$1) ){ goto $label$210 }
	$11 = *($6)
	if ( $11 ){ goto $label$209 }
	goto $label$7 
	
.LABEL $label$210
	if ( ((uint_64)$8 >= (uint_64)$1) ){ goto $label$6 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$6 }
	$6 = $13
	
.LABEL $label$209
	$13 = $6
	$6 = $11
	goto $label$208 
	
.LABEL $label$207
	$6 = $14
	$13 = $14
	$12 = *($13)
	if ( $12 ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$11
	$14 = $6
	
.LABEL $label$10
	$13 = *($14)
	if ( $13 ){ goto $label$8 }
	
.LABEL $label$9
	*(($13 = CALL $737([32]))) = (int_64)0
	*($13 + [8]) = $6
	*($14) = $13
	*($13 + [24]) = (int_64)0
	*($13 + [16]) = *(($2 + [28]))
	$6 = $13
	$11 = ($3 + [24])
	$12 = *(*($11))
	if ( ($12 == 0) ){ goto $label$211 }
	*($11) = $12
	$6 = *($14)
	
.LABEL $label$211
	CALL $289(*(($3 + [28])), $6)
	*(($6 = ($3 + [32]))) = (*($6) + [1])
	
.LABEL $label$8
	*(($6 = ($13 + [24]))) = ((int_64)*($6) + (int_64)$7)
	*($15 + [600]) = (int_64)1
	*($15 + [592]) = *($2)
	CALL $285(($15 + [400]), ($15 + [504]), ($15 + [592]))
	$6 = *($15 + [404])
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_64)(((int_64)((int_64)*($15 + [592]) ^ (int_64)*($6 + [8])) | (int_64)((int_64)*($15 + [600]) ^ (int_64)*($6 + [16]))) == 0) == 0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$3 }
	$14 = CALL $256(($15 + [512]), *($6), [592])
	CALL memcpy(($15 + [344]), $14, [56])
	$6 = CALL memcpy($15, ($15 + [344]), [56])
	CALL _ZN11walexchange12wal_exchange15settle_withdrawEyNS_11to_withdrawE($0, $1, $6)
	CALL $239(($6 + [512]), $14)
	$2 = *($6 + [536])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$13 = $6
	
.LABEL $label$6
	$12 = *($13)
	if ( $12 ){ goto $label$4 }
	
.LABEL $label$5
	*(($12 = CALL $737([40])) + [28]) = [0]
	*($12) = (int_64)0
	*($12 + [8]) = $6
	*($12 + [24]) = ($12 + [28])
	*($12 + [16]) = $1
	*($12 + [32]) = [0]
	*($13) = $12
	$6 = $12
	$11 = ($0 + [8])
	$3 = *(*($11))
	if ( ($3 == 0) ){ goto $label$212 }
	*($11) = $3
	$6 = *($13)
	
.LABEL $label$212
	CALL $289(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$4
	$13 = ($12 + [28])
	$6 = *($13)
	if ( ($6 == 0) ){ goto $label$217 }
	$13 = ($12 + [28])
	$3 = *(($2 + [24]))
	
.LOOP $label$218:
	$11 = *($6 + [16])
	if ( ((uint_32)$3 >= (uint_32)$11) ){ goto $label$220 }
	$11 = *($6)
	if ( $11 ){ goto $label$219 }
	goto $label$216 
	
.LABEL $label$220
	if ( ((uint_32)$11 >= (uint_32)$3) ){ goto $label$215 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$215 }
	$6 = $13
	
.LABEL $label$219
	$13 = $6
	$6 = $11
	goto $label$218 
	
.LABEL $label$217
	$6 = $13
	$11 = *($13)
	if ( $11 ){ goto $label$213 }
	goto $label$214 
	
.LABEL $label$216
	$13 = $6
	
.LABEL $label$215
	$11 = *($13)
	if ( $11 ){ goto $label$213 }
	
.LABEL $label$214
	*(($11 = CALL $737([32]))) = (int_64)0
	*($11 + [8]) = $6
	*($13) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = *(($2 + [24]))
	$6 = $11
	$3 = ($12 + [24])
	$5 = *(*($3))
	if ( ($5 == 0) ){ goto $label$221 }
	*($3) = $5
	$6 = *($13)
	
.LABEL $label$221
	CALL $289(*(($12 + [28])), $6)
	*(($6 = ($12 + [32]))) = (*($6) + [1])
	
.LABEL $label$213
	*(($6 = ($11 + [24]))) = ((int_64)*($6) + (int_64)$7)
	$7 = *($2 + [56])
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$226 }
	$13 = ($0 + [12])
	$8 = *(($2 + [16]))
	
.LOOP $label$227:
	$9 = *($6 + [16])
	if ( ((uint_64)$8 >= (uint_64)$9) ){ goto $label$229 }
	$11 = *($6)
	if ( $11 ){ goto $label$228 }
	goto $label$225 
	
.LABEL $label$229
	if ( ((uint_64)$9 >= (uint_64)$8) ){ goto $label$224 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$224 }
	$6 = $13
	
.LABEL $label$228
	$13 = $6
	$6 = $11
	goto $label$227 
	
.LABEL $label$226
	$6 = $14
	$13 = $14
	$12 = *($13)
	if ( $12 ){ goto $label$222 }
	goto $label$223 
	
.LABEL $label$225
	$13 = $6
	
.LABEL $label$224
	$12 = *($13)
	if ( $12 ){ goto $label$222 }
	
.LABEL $label$223
	*(($12 = CALL $737([40])) + [28]) = [0]
	*($12 + [32]) = [0]
	*($12) = (int_64)0
	*($12 + [16]) = *(($2 + [16]))
	*($12 + [24]) = ($12 + [28])
	*($12 + [8]) = $6
	*($13) = $12
	$6 = $12
	$11 = ($0 + [8])
	$3 = *(*($11))
	if ( ($3 == 0) ){ goto $label$230 }
	*($11) = $3
	$6 = *($13)
	
.LABEL $label$230
	CALL $289(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$222
	$13 = ($12 + [28])
	$6 = *($13)
	if ( ($6 == 0) ){ goto $label$235 }
	$13 = ($12 + [28])
	$3 = *(($2 + [28]))
	
.LOOP $label$236:
	$11 = *($6 + [16])
	if ( ((uint_32)$3 >= (uint_32)$11) ){ goto $label$238 }
	$11 = *($6)
	if ( $11 ){ goto $label$237 }
	goto $label$234 
	
.LABEL $label$238
	if ( ((uint_32)$11 >= (uint_32)$3) ){ goto $label$233 }
	$13 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$233 }
	$6 = $13
	
.LABEL $label$237
	$13 = $6
	$6 = $11
	goto $label$236 
	
.LABEL $label$235
	$6 = $13
	$11 = *($13)
	if ( $11 ){ goto $label$231 }
	goto $label$232 
	
.LABEL $label$234
	$13 = $6
	
.LABEL $label$233
	$11 = *($13)
	if ( $11 ){ goto $label$231 }
	
.LABEL $label$232
	*(($11 = CALL $737([32]))) = (int_64)0
	*($11 + [8]) = $6
	*($13) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = *(($2 + [28]))
	$6 = $11
	$3 = ($12 + [24])
	$5 = *(*($3))
	if ( ($5 == 0) ){ goto $label$239 }
	*($3) = $5
	$6 = *($13)
	
.LABEL $label$239
	CALL $289(*(($12 + [28])), $6)
	*(($6 = ($12 + [32]))) = (*($6) + [1])
	
.LABEL $label$231
	*(($6 = ($11 + [24]))) = (int_64))(*($6) - $7)
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$244 }
	$14 = ($0 + [12])
	
.LOOP $label$245:
	$8 = *($6 + [16])
	if ( ((uint_64)$8 <= (uint_64)$1) ){ goto $label$247 }
	$13 = *($6)
	if ( $13 ){ goto $label$246 }
	goto $label$243 
	
.LABEL $label$247
	if ( ((uint_64)$8 >= (uint_64)$1) ){ goto $label$242 }
	$14 = ($6 + [4])
	$13 = *($6 + [4])
	if ( ($13 == 0) ){ goto $label$242 }
	$6 = $14
	
.LABEL $label$246
	$14 = $6
	$6 = $13
	goto $label$245 
	
.LABEL $label$244
	$6 = $14
	$3 = *($14)
	if ( $3 ){ goto $label$240 }
	goto $label$241 
	
.LABEL $label$243
	$14 = $6
	
.LABEL $label$242
	$3 = *($14)
	if ( $3 ){ goto $label$240 }
	
.LABEL $label$241
	*(($3 = CALL $737([40])) + [28]) = [0]
	*($3) = (int_64)0
	*($3 + [8]) = $6
	*($3 + [24]) = ($3 + [28])
	*($3 + [16]) = $1
	*($3 + [32]) = [0]
	*($14) = $3
	$6 = $3
	$13 = ($0 + [8])
	$11 = *(*($13))
	if ( ($11 == 0) ){ goto $label$248 }
	*($13) = $11
	$6 = *($14)
	
.LABEL $label$248
	CALL $289(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$240
	$14 = ($3 + [28])
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$253 }
	$14 = ($3 + [28])
	$11 = *(($2 + [28]))
	
.LOOP $label$254:
	$13 = *($6 + [16])
	if ( ((uint_32)$11 >= (uint_32)$13) ){ goto $label$256 }
	$13 = *($6)
	if ( $13 ){ goto $label$255 }
	goto $label$252 
	
.LABEL $label$256
	if ( ((uint_32)$13 >= (uint_32)$11) ){ goto $label$251 }
	$14 = ($6 + [4])
	$13 = *($6 + [4])
	if ( ($13 == 0) ){ goto $label$251 }
	$6 = $14
	
.LABEL $label$255
	$14 = $6
	$6 = $13
	goto $label$254 
	
.LABEL $label$253
	$6 = $14
	$13 = *($14)
	if ( $13 ){ goto $label$249 }
	goto $label$250 
	
.LABEL $label$252
	$14 = $6
	
.LABEL $label$251
	$13 = *($14)
	if ( $13 ){ goto $label$249 }
	
.LABEL $label$250
	*(($13 = CALL $737([32]))) = (int_64)0
	*($13 + [8]) = $6
	*($14) = $13
	*($13 + [24]) = (int_64)0
	*($13 + [16]) = *(($2 + [28]))
	$6 = $13
	$11 = ($3 + [24])
	$12 = *(*($11))
	if ( ($12 == 0) ){ goto $label$257 }
	*($11) = $12
	$6 = *($14)
	
.LABEL $label$257
	CALL $289(*(($3 + [28])), $6)
	*(($6 = ($3 + [32]))) = (*($6) + [1])
	
.LABEL $label$249
	*(($6 = ($13 + [24]))) = ((int_64)*($6) + (int_64)$7)
	*($15 + [600]) = (int_64)0
	$8 = *($2)
	*($15 + [592]) = $8
	CALL $285(($15 + [400]), ($15 + [504]), ($15 + [592]))
	$6 = *($15 + [404])
	if ( ($6 == 0) ){ goto $label$258 }
	if ( ((int_64)(((int_64)((int_64)*($15 + [592]) ^ (int_64)*($6 + [8])) | (int_64)((int_64)*($15 + [600]) ^ (int_64)*($6 + [16]))) == 0) == 0) ){ goto $label$258 }
	if ( ($6 == 0) ){ goto $label$258 }
	$6 = CALL $256(($15 + [512]), *($6), [592])
	CALL memcpy(($15 + [288]), $6, [56])
	CALL memcpy(($15 + [176]), ($15 + [288]), [56])
	CALL _ZN11walexchange12wal_exchange15settle_withdrawEyNS_11to_withdrawE($0, $1, ($15 + [176]))
	CALL $239(($15 + [512]), $6)
	
.LABEL $label$258
	*($15 + [600]) = (int_64)1
	*($15 + [592]) = $8
	CALL $285(($15 + [400]), ($15 + [504]), ($15 + [592]))
	$6 = *($15 + [404])
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_64)(((int_64)((int_64)*($15 + [592]) ^ (int_64)*($6 + [8])) | (int_64)((int_64)*($15 + [600]) ^ (int_64)*($6 + [16]))) == 0) == 0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = CALL $256(($15 + [512]), *($6), [592])
	CALL memcpy(($15 + [232]), $6, [56])
	CALL memcpy(($15 + [120]), ($15 + [232]), [56])
	CALL _ZN11walexchange12wal_exchange15settle_withdrawEyNS_11to_withdrawE($0, $1, ($15 + [120]))
	CALL $239(($15 + [512]), $6)
	
.LABEL $label$3
	$2 = *($15 + [536])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$0 = ($15 + [540])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$260 }
	
.LOOP $label$261:
	$6 = ($6 + [-24])
	$14 = *($6)
	*($6) = [0]
	if ( ($14 == 0) ){ goto $label$262 }
	CALL $738($14)
	
.LABEL $label$262
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$261 }
	$6 = *(($15 + [536]))
	goto $label$259 
	
.LABEL $label$260
	$6 = $2
	
.LABEL $label$259
	*($0) = $2
	CALL $738($6)
	
.LABEL $label$1
	$2 = *($15 + [576])
	if ( ($2 == 0) ){ goto $label$263 }
	$0 = ($15 + [580])
	$14 = *($0)
	if ( ((int_32)$14 == (int_32)$2) ){ goto $label$265 }
	
.LOOP $label$266:
	$14 = ($14 + [-24])
	$6 = *($14)
	*($14) = [0]
	if ( ($6 == 0) ){ goto $label$267 }
	if ( ((*($6 + [44]) & [1]) == 0) ){ goto $label$268 }
	CALL $738(*(($6 + [52])))
	
.LABEL $label$268
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$269 }
	CALL $738(*(($6 + [40])))
	
.LABEL $label$269
	CALL $738($6)
	
.LABEL $label$267
	if ( ((int_32)$2 != (int_32)$14) ){ goto $label$266 }
	$6 = *(($15 + [576]))
	goto $label$264 
	
.LABEL $label$265
	$6 = $2
	
.LABEL $label$264
	*($0) = $2
	CALL $738($6)
	
.LABEL $label$263
	*([0] + [4]) = ($15 + [640])
}

void .FUNC _ZN11walexchange12wal_exchange11removedigitEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [240])
	*([0] + [4]) = $7
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	*($7 + [224]) = *($0)
	$1 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($7 + [224]), $1, [0])
	*($7 + [216]) = $1
	*((($7 + [176]) + [32])) = [0]
	*($7 + [184]) = $1
	*($7 + [192]) = (int_64)-1
	$5 = *($0)
	*($7 + [176]) = $5
	*($7 + [200]) = (int_64)0
	*($7 + [212]) = [0]
	$3 = [0]
	$4 = CALL db_lowerbound_i64($5, $1, (int_64)-3020381105862213632, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $23(($7 + [176]), $4)
	
.LABEL $label$2
	CALL eosio_assert(($3 == 0), [9312])
	*((($7 + [136]) + [32])) = [0]
	$1 = *($0)
	*($7 + [136]) = $1
	*($7 + [152]) = (int_64)-1
	*($7 + [160]) = (int_64)0
	*($7 + [144]) = $1
	*($7 + [172]) = [0]
	$3 = CALL $11(($7 + [136]), *($7 + [216]), [592])
	CALL eosio_assert(((int_32)CALL $fimport$46(*($3 + [16])) ^ (int_32)[1]), [9344])
	CALL $519(($7 + [136]), $3)
	*((($7 + [96]) + [32])) = [0]
	$1 = *($0)
	*($7 + [96]) = $1
	*($7 + [112]) = (int_64)-1
	*($7 + [120]) = (int_64)0
	*($7 + [104]) = $1
	$3 = CALL db_find_i64($1, $1, (int_64)3607749778918490112, *($7 + [216]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$3 = CALL $136(($7 + [96]), $3)
	CALL eosio_assert(((int_32)*($3 + [52]) == (int_32)($7 + [96])), [288])
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$4 = CALL db_next_i64(*($3 + [56]), ($7 + [56]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	CALL $136(($7 + [96]), $4)
	
.LABEL $label$4
	CALL $520(($7 + [96]), $3)
	
.LABEL $label$3
	*((($7 + [56]) + [32])) = [0]
	$1 = *($0)
	*($7 + [56]) = $1
	*($7 + [72]) = (int_64)-1
	*($7 + [80]) = (int_64)0
	*($7 + [64]) = $1
	$3 = CALL db_find_i64($1, $1, (int_64)-3020384829779738624, *($7 + [216]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	$3 = CALL $18(($7 + [56]), $3)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)($7 + [56])), [288])
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$4 = CALL db_next_i64(*($3 + [28]), ($7 + [16]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	CALL $18(($7 + [56]), $4)
	
.LABEL $label$6
	CALL $521(($7 + [56]), $3)
	
.LABEL $label$5
	*((($7 + [16]) + [32])) = [0]
	*($7 + [32]) = (int_64)-1
	*($7 + [40]) = (int_64)0
	$1 = *($0)
	*($7 + [16]) = $1
	*($7 + [24]) = $1
	*($7 + [52]) = [0]
	*($7 + [8]) = ($7 + [16])
	CALL $50(($7 + [232]), ($7 + [8]), ($7 + [216]))
	$0 = *($7 + [236])
	if ( ($0 == 0) ){ goto $label$7 }
	if ( ((int_64)*($7 + [216]) != (int_64)*($0 + [8])) ){ goto $label$7 }
	if ( ($0 == 0) ){ goto $label$7 }
	$3 = *($7 + [232])
	
.LOOP $label$8:
	if ( ((int_64)*($0 + [8]) != (int_64)*($7 + [216])) ){ goto $label$7 }
	*($7 + [232]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $3))
	CALL eosio_assert([1], [736])
	CALL $51(($7 + [232]))
	CALL $363(*($7 + [8]), $0)
	$1 = *($7 + [232])
	$3 = (CASTING uint_32)(uint_64 $1)
	$0 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( $0) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = *($7 + [40])
	if ( ($4 == 0) ){ goto $label$9 }
	$2 = ($7 + [44])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$13 }
	CALL $738($3)
	
.LABEL $label$13
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($7 + [40]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $4
	
.LABEL $label$10
	*($2) = $4
	CALL $738($0)
	
.LABEL $label$9
	$2 = *($7 + [80])
	if ( ($2 == 0) ){ goto $label$14 }
	$6 = ($7 + [84])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$16 }
	
.LOOP $label$17:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$18 }
	$4 = *($3 + [12])
	if ( ($4 == 0) ){ goto $label$19 }
	*(($3 + [16])) = $4
	CALL $738($4)
	
.LABEL $label$19
	CALL $738($3)
	
.LABEL $label$18
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$17 }
	$0 = *(($7 + [80]))
	goto $label$15 
	
.LABEL $label$16
	$0 = $2
	
.LABEL $label$15
	*($6) = $2
	CALL $738($0)
	
.LABEL $label$14
	$4 = *($7 + [120])
	if ( ($4 == 0) ){ goto $label$20 }
	$2 = ($7 + [124])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$22 }
	
.LOOP $label$23:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$24 }
	CALL $738($3)
	
.LABEL $label$24
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$23 }
	$0 = *(($7 + [120]))
	goto $label$21 
	
.LABEL $label$22
	$0 = $4
	
.LABEL $label$21
	*($2) = $4
	CALL $738($0)
	
.LABEL $label$20
	$4 = *($7 + [160])
	if ( ($4 == 0) ){ goto $label$25 }
	$2 = ($7 + [164])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$27 }
	
.LOOP $label$28:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$29 }
	CALL $738($3)
	
.LABEL $label$29
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$28 }
	$0 = *(($7 + [160]))
	goto $label$26 
	
.LABEL $label$27
	$0 = $4
	
.LABEL $label$26
	*($2) = $4
	CALL $738($0)
	
.LABEL $label$25
	$4 = *($7 + [200])
	if ( ($4 == 0) ){ goto $label$30 }
	$2 = ($7 + [204])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$32 }
	
.LOOP $label$33:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$34 }
	CALL $738($3)
	
.LABEL $label$34
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$33 }
	$0 = *(($7 + [200]))
	goto $label$31 
	
.LABEL $label$32
	$0 = $4
	
.LABEL $label$31
	*($2) = $4
	CALL $738($0)
	
.LABEL $label$30
	*([0] + [4]) = ($7 + [240])
}

void .FUNC $519 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
	$7 = *(($1 + [40]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2067973376676056576, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	$7 = *(($1 + [44]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2067973376676056575, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $695 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [544])
	CALL memcpy(($4 + [15]), *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	*($0 + [16]) = ((int_32)*($4 + [15]) != (int_32)[0])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [40]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	*($4 + [8]) = $0
	CALL $696(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $694 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$19 = (*([0] + [4]) - [704])
	*([0] + [4]) = $19
	*((($19 + [328]) + [20])) = *(($1 + [44]))
	*(($11 = (($19 + [328]) + [16]))) = *(($1 + [40]))
	*((($19 + [328]) + [12])) = *(($1 + [36]))
	*(($12 = (($19 + [328]) + [8]))) = *(($1 + [32]))
	*($19 + [328]) = *($1 + [24])
	*($19 + [332]) = *(($1 + [28]))
	$4 = *($1 + [16])
	$3 = *($1 + [8])
	$2 = *($1)
	*(($13 = (($19 + [304]) + [16]))) = *(($1 + [64]))
	*(($14 = (($19 + [304]) + [8]))) = *(($1 + [56]))
	*($19 + [304]) = *($1 + [48])
	$8 = *($1 + [86])
	$7 = *($1 + [84])
	$6 = *($1 + [80])
	$5 = *($1 + [72])
	CALL $767(($19 + [288]), ($1 + [88]))
	CALL memcpy(($19 + [222]), ($1 + [100]), [66])
	*((($19 + [192]) + [20])) = *(($1 + [196]))
	*(($15 = (($19 + [192]) + [16]))) = *(($1 + [192]))
	*((($19 + [192]) + [12])) = *(($1 + [188]))
	*(($16 = (($19 + [192]) + [8]))) = *(($1 + [184]))
	*($19 + [196]) = *(($1 + [180]))
	*($19 + [192]) = *($1 + [176])
	$10 = *($1 + [168])
	$9 = *($1 + [166])
	*(($17 = (($19 + [168]) + [16]))) = *(($1 + [216]))
	*(($18 = (($19 + [168]) + [8]))) = *(($1 + [208]))
	*($19 + [168]) = *($1 + [200])
	*((($19 + [496]) + [16])) = *($17)
	*((($19 + [496]) + [8])) = *($18)
	*((($19 + [472]) + [16])) = *($15)
	*((($19 + [472]) + [8])) = *($16)
	*($19 + [496]) = *($19 + [168])
	*($19 + [472]) = *($19 + [192])
	CALL memcpy(($19 + [400]), ($19 + [222]), [66])
	*((($19 + [376]) + [16])) = *($13)
	*((($19 + [376]) + [8])) = *($14)
	*((($19 + [352]) + [16])) = *($11)
	*((($19 + [352]) + [8])) = *($12)
	*($19 + [376]) = *($19 + [304])
	*($19 + [352]) = *($19 + [328])
	$1 = *($0 + [4])
	$11 = *($1 + [4])
	$0 = (*(*($0)) + int_32($11 >> [1]))
	$1 = *($1)
	if ( (($11 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($11 = (($19 + [680]) + [16]))) = *((($19 + [352]) + [16]))
	*(($12 = (($19 + [680]) + [8]))) = *((($19 + [352]) + [8]))
	*(($13 = (($19 + [656]) + [16]))) = *((($19 + [376]) + [16]))
	*(($14 = (($19 + [656]) + [8]))) = *((($19 + [376]) + [8]))
	*($19 + [680]) = *($19 + [352])
	*($19 + [656]) = *($19 + [376])
	CALL $767(($19 + [640]), ($19 + [288]))
	CALL memcpy(($19 + [568]), ($19 + [400]), [66])
	*(($15 = (($19 + [544]) + [16]))) = *((($19 + [472]) + [16]))
	*(($16 = (($19 + [544]) + [8]))) = *((($19 + [472]) + [8]))
	*(($17 = (($19 + [520]) + [16]))) = *((($19 + [496]) + [16]))
	*(($18 = (($19 + [520]) + [8]))) = *((($19 + [496]) + [8]))
	*($19 + [544]) = *($19 + [472])
	*($19 + [520]) = *($19 + [496])
	*((($19 + [144]) + [16])) = *($11)
	*((($19 + [144]) + [8])) = *($12)
	*($19 + [144]) = *($19 + [680])
	*((($19 + [120]) + [16])) = *($13)
	*((($19 + [120]) + [8])) = *($14)
	*($19 + [120]) = *($19 + [656])
	CALL memcpy(($19 + [54]), ($19 + [568]), [66])
	*((($19 + [24]) + [16])) = *($15)
	*((($19 + [24]) + [8])) = *($16)
	*(($19 + [16])) = *($17)
	*(($19 + [8])) = *($18)
	*($19 + [24]) = *($19 + [544])
	*($19) = *($19 + [520])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ((int_32)($4 & [255]) != (int_32)[0])), (int_32 ($19 + [144])), (int_32 ($19 + [120])), (int_32 $5), (int_64 $6), (int_32 ($7 & [65535])), (int_32 ($8 & [65535])), (int_32 ($19 + [640])), (int_32 ($19 + [54])), (int_32 ($9 & [65535])), (int_32 $10), (int_64 ($19 + [24])), (int_32 $19), (int_32 $1))
	if ( ((*($19 + [640]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*($19 + [648]))
	
.LABEL $label$2
	if ( ((*($19 + [288]) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($19 + [296]))
	
.LABEL $label$3
	*([0] + [4]) = ($19 + [704])
}

void .FUNC $697 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [272])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($2 + [86]), *($3 + [4]), [2])
	*($3 + [4]) = (*($3 + [4]) + [2])
	$3 = *($0)
	CALL $101(*($1), ($3 + [88]))
	*($4) = *($1)
	*($4 + [12]) = ($3 + [101])
	*($4 + [8]) = ($3 + [100])
	*($4 + [16]) = ($3 + [102])
	*($4 + [20]) = ($3 + [103])
	*($4 + [24]) = ($3 + [104])
	*($4 + [28]) = ($3 + [105])
	*($4 + [32]) = ($3 + [106])
	*($4 + [36]) = ($3 + [107])
	*($4 + [40]) = ($3 + [108])
	*($4 + [44]) = ($3 + [109])
	*($4 + [48]) = ($3 + [110])
	*($4 + [52]) = ($3 + [111])
	*($4 + [56]) = ($3 + [112])
	*($4 + [60]) = ($3 + [113])
	*($4 + [64]) = ($3 + [114])
	*($4 + [68]) = ($3 + [115])
	*($4 + [72]) = ($3 + [116])
	*($4 + [76]) = ($3 + [117])
	*($4 + [80]) = ($3 + [118])
	*($4 + [84]) = ($3 + [119])
	*($4 + [88]) = ($3 + [120])
	*($4 + [92]) = ($3 + [121])
	*($4 + [96]) = ($3 + [122])
	*($4 + [100]) = ($3 + [123])
	*($4 + [104]) = ($3 + [124])
	*($4 + [108]) = ($3 + [125])
	*($4 + [112]) = ($3 + [126])
	*($4 + [116]) = ($3 + [127])
	*($4 + [120]) = ($3 + [128])
	*($4 + [124]) = ($3 + [129])
	*($4 + [128]) = ($3 + [130])
	*($4 + [132]) = ($3 + [131])
	*($4 + [136]) = ($3 + [132])
	*($4 + [140]) = ($3 + [133])
	*($4 + [144]) = ($3 + [134])
	*($4 + [148]) = ($3 + [135])
	*($4 + [152]) = ($3 + [136])
	*($4 + [156]) = ($3 + [137])
	*($4 + [160]) = ($3 + [138])
	*($4 + [164]) = ($3 + [139])
	*($4 + [168]) = ($3 + [140])
	*($4 + [172]) = ($3 + [141])
	*($4 + [176]) = ($3 + [142])
	*($4 + [180]) = ($3 + [143])
	*($4 + [184]) = ($3 + [144])
	*($4 + [188]) = ($3 + [145])
	*($4 + [192]) = ($3 + [146])
	*($4 + [196]) = ($3 + [147])
	*($4 + [200]) = ($3 + [148])
	*($4 + [204]) = ($3 + [149])
	*($4 + [208]) = ($3 + [150])
	*($4 + [212]) = ($3 + [151])
	*($4 + [216]) = ($3 + [152])
	*($4 + [220]) = ($3 + [153])
	*($4 + [224]) = ($3 + [154])
	*($4 + [228]) = ($3 + [155])
	*($4 + [232]) = ($3 + [156])
	*($4 + [236]) = ($3 + [157])
	*($4 + [240]) = ($3 + [158])
	*($4 + [244]) = ($3 + [159])
	*($4 + [248]) = ($3 + [160])
	*($4 + [252]) = ($3 + [161])
	*($4 + [256]) = ($3 + [162])
	*($4 + [260]) = ($3 + [163])
	*($4 + [264]) = ($3 + [164])
	*($4 + [268]) = ($3 + [165])
	CALL $669(($4 + [8]), $4)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($3 + [166]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [168]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [176]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [184]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [192]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [200]), *($0 + [4]), [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [208]), *($0 + [4]), [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [216]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($4 + [272])
}

int_32 .FUNC $250 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3660455468297355264, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $193($0, $5)
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $512 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [288])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)5447364210270648832, (int_64)5447364210270648832)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $334($0, $3)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [288])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [1328])
	CALL $513($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $514($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $513 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [896])
	$8 = *($3)
	*($1) = *($8)
	$3 = [8]
	$4 = ($1 + [8])
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$1 }
	CALL $516($4, *($8 + [8]), *(($8 + [12])))
	
.LABEL $label$1
	CALL eosio_assert([1], [960])
	$5 = *($4)
	$8 = *(($1 + [12]))
	$6 = ($8 - $5)
	$7 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$2:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$3 }
	$3 = (($6 & [-8]) + $3)
	
.LABEL $label$3
	if ( ($3 <= [513]) ){ goto $label$5 }
	$8 = CALL malloc($3)
	goto $label$4 
	
.LABEL $label$5
	$8 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$4
	*($9) = $8
	*($9 + [8]) = ($8 + $3)
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [496])
	CALL memcpy($8, $1, [8])
	*($9 + [4]) = ($8 + [8])
	CALL $284($9, $4)
	CALL db_update_i64(*($1 + [28]), $2, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL free($8)
	
.LABEL $label$6
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)5447364210270648832) ){ goto $label$7 }
	*(($0 + [16])) = (int_64)5447364210270648833
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [16])
}

int_64 .FUNC _ZN11walexchange12wal_exchange18get_chain_proxy_idENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	*(($8 + [64])) = [0]
	*($8 + [48]) = (int_64)-1
	*($8 + [56]) = (int_64)0
	$6 = *($0)
	*($8 + [32]) = $6
	*($8 + [40]) = $6
	*($8 + [68]) = [0]
	*($8 + [24]) = ($8 + [32])
	if ( (*($1) & [1]) ){ goto $label$2 }
	$0 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$0 = *($1 + [8])
	
.LABEL $label$1
	$1 = [-1]
	
.LOOP $label$3:
	$4 = ($0 + $1)
	$3 = ($1 + [1])
	$1 = $3
	if ( *(($4 + [1])) ){ goto $label$3 }
	if ( ($3 == 0) ){ goto $label$5 }
	$5 = (CASTING uint_64)(uint_32 $3)
	$6 = (int_64)8
	$7 = (int_64)0
	
.LOOP $label$6:
	$1 = *($0)
	if ( ((uint_32)(($1 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$7 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$6 & (int_64)4294967288)) | (int_64)$7)
	
.LABEL $label$7
	$0 = ($0 + [1])
	$6 = ((int_64)$6 + (int_64)8)
	$5 = ((int_64)$5 + (int_64)-1)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$7 = (int_64)0
	
.LABEL $label$4
	*($8) = $2
	*($8 + [8]) = (uint_64)$7 >> (uint_64)(int_64)8)
	CALL $505(($8 + [72]), ($8 + [24]), $8)
	$1 = [0]
	$0 = *($8 + [76])
	if ( ($0 == 0) ){ goto $label$8 }
	$1 = ( $0 ? [0] : (int_64)(((int_64)((int_64)*($8) ^ (int_64)*($0 + [16])) | (int_64)((int_64)*($8 + [8]) ^ (int_64)*($0 + [8]))) == 0) )
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [9216])
	$6 = *($1)
	$4 = *($8 + [56])
	if ( ($4 == 0) ){ goto $label$9 }
	$3 = ($8 + [60])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$11 }
	
.LOOP $label$12:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$13 }
	CALL $738($0)
	
.LABEL $label$13
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$12 }
	$1 = *(($8 + [56]))
	goto $label$10 
	
.LABEL $label$11
	$1 = $4
	
.LABEL $label$10
	*($3) = $4
	CALL $738($1)
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [80])
	return $6
}

void .FUNC _ZN11walexchange12wal_exchange9addsuffixEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	*($6 + [72]) = $1
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	$3 = [0]
	*(($6 + [64])) = [0]
	*($6 + [48]) = (int_64)-1
	*($6 + [56]) = (int_64)0
	$1 = *($0)
	*($6 + [32]) = $1
	*($6 + [40]) = $1
	$5 = CALL db_find_i64($1, $1, (int_64)5447364210270648832, (int_64)5447364210270648832)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $334(($6 + [32]), $5) + [24]) == (int_32)($6 + [32])), [288])
	CALL $335(($6 + [8]), ($6 + [32]))
	$4 = (($6 + [8]) + [8])
	$2 = ($6 + [20])
	$3 = *($2)
	$5 = *($6 + [16])
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$4 }
	$1 = *($6 + [72])
	
.LOOP $label$5:
	if ( ((int_64)*($5) == (int_64)$1) ){ goto $label$2 }
	$5 = ($5 + [8])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = $3
	goto $label$2 
	
.LABEL $label$3
	*(($6 + [24])) = [0]
	*($6 + [8]) = (int_64)0
	*($6 + [16]) = (int_64)0
	$4 = ($6 + [16])
	$2 = ($6 + [20])
	$5 = [0]
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$5 == (int_32)$3), [9248])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)*(($6 + [24]))) ){ goto $label$7 }
	*($5) = *($6 + [72])
	*($2) = ($5 + [8])
	goto $label$6 
	
.LABEL $label$7
	CALL $282($4, ($6 + [72]))
	
.LABEL $label$6
	CALL $512(($6 + [32]), ($6 + [8]), *($0))
	$5 = *($6 + [16])
	if ( ($5 == 0) ){ goto $label$8 }
	*($2) = $5
	CALL $738($5)
	
.LABEL $label$8
	$2 = *($6 + [56])
	if ( ($2 == 0) ){ goto $label$9 }
	$4 = ($6 + [60])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$11 }
	
.LOOP $label$12:
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$13 }
	$0 = *($3 + [8])
	if ( ($0 == 0) ){ goto $label$14 }
	*(($3 + [12])) = $0
	CALL $738($0)
	
.LABEL $label$14
	CALL $738($3)
	
.LABEL $label$13
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$12 }
	$5 = *(($6 + [56]))
	goto $label$10 
	
.LABEL $label$11
	$5 = $2
	
.LABEL $label$10
	*($4) = $2
	CALL $738($5)
	
.LABEL $label$9
	*([0] + [4]) = ($6 + [80])
}

void .FUNC $516 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [3])
	if ( ((uint_32)$4 <= (uint_32)int_32(($8 - $5) >> [3])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $738($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$5 = [536870911]
	if ( ((uint_32)int_32($8 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$5 = $4
	$2 = int_32($8 >> [2])
	if ( ($2 <= $4) ){ goto $label$6 }
	$5 = $2
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($5 << [3])
	$5 = CALL $737($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	return 
	
.LABEL $label$4
	$3 = int_32($3 >> [3])
	$3 = (*($0 + [4]) - $5)
	$8 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$6 = ($8 - $1)
	$7 = int_32($6 >> [3])
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $8)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $8, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ($7 << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $766($0)
}

void .FUNC _ZN11walexchange12wal_exchange8rmsuffixEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	*([0] + [4]) = $9
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	$5 = [0]
	*(($9 + [56])) = [0]
	*($9 + [40]) = (int_64)-1
	*($9 + [48]) = (int_64)0
	$6 = *($0)
	*($9 + [24]) = $6
	*($9 + [32]) = $6
	$8 = CALL db_find_i64($6, $6, (int_64)5447364210270648832, (int_64)5447364210270648832)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $334(($9 + [24]), $8) + [24]) == (int_32)($9 + [24])), [288])
	CALL $335($9, ($9 + [24]))
	$7 = ($9 + [8])
	$4 = ($9 + [12])
	$5 = *($4)
	$8 = *($9 + [8])
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$2 }
	$8 = ($8 + [8])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = $5
	goto $label$2 
	
.LABEL $label$3
	*(($9 + [16])) = [0]
	*($9) = (int_64)0
	*($9 + [8]) = (int_64)0
	$4 = ($9 + [12])
	$7 = ($9 + [8])
	$8 = [0]
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$8 != (int_32)$5), [9280])
	$2 = ($8 + [8])
	$3 = (*($4) - $2)
	$5 = int_32($3 >> [3])
	if ( ($5 == 0) ){ goto $label$6 }
	CALL memmove($8, $2, $3)
	
.LABEL $label$6
	*($4) = ($8 + ($5 << [3]))
	CALL $512(($9 + [24]), $9, *($0))
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$7 }
	*($4) = $8
	CALL $738($8)
	
.LABEL $label$7
	$4 = *($9 + [48])
	if ( ($4 == 0) ){ goto $label$8 }
	$7 = ($9 + [52])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	$0 = *($5 + [8])
	if ( ($0 == 0) ){ goto $label$13 }
	*(($5 + [12])) = $0
	CALL $738($0)
	
.LABEL $label$13
	CALL $738($5)
	
.LABEL $label$12
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$8 = *(($9 + [48]))
	goto $label$9 
	
.LABEL $label$10
	$8 = $4
	
.LABEL $label$9
	*($7) = $4
	CALL $738($8)
	
.LABEL $label$8
	*([0] + [4]) = ($9 + [64])
}

void .FUNC $514 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [432])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $737([40])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [24]) = $1
	CALL $515(($7 + [16]), $3)
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)5447364210270648832
	$4 = *($3 + [28])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)5447364210270648832
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $337(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	$3 = *($1 + [8])
	if ( ($3 == 0) ){ goto $label$4 }
	*(($1 + [12])) = $3
	CALL $738($3)
	
.LABEL $label$4
	CALL $738($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $515 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$8 = *(*($0 + [4]))
	*($1) = *($8)
	$6 = [8]
	$3 = ($1 + [8])
	$2 = *($0)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$1 }
	CALL $516($3, *($8 + [8]), *(($8 + [12])))
	
.LABEL $label$1
	$4 = *($3)
	$8 = *(($1 + [12]))
	$5 = ($8 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$3 }
	$6 = (($5 & [-8]) + $6)
	
.LABEL $label$3
	if ( ($6 <= [513]) ){ goto $label$5 }
	$8 = CALL malloc($6)
	goto $label$4 
	
.LABEL $label$5
	$8 = ($10 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$4
	*($9) = $8
	*($9 + [8]) = ($8 + $6)
	CALL eosio_assert(((int_32)$6 > (int_32)[7]), [496])
	CALL memcpy($8, $1, [8])
	*($9 + [4]) = ($8 + [8])
	CALL $284($9, $3)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)5447364210270648832, *(*($0 + [8])), (int_64)5447364210270648832, $8, $6)
	if ( ($6 <= [513]) ){ goto $label$6 }
	CALL free($8)
	
.LABEL $label$6
	if ( ((uint_64)*($2 + [16]) > (uint_64)(int_64)5447364210270648832) ){ goto $label$7 }
	*(($2 + [16])) = (int_64)5447364210270648833
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $215 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $194(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $214 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $737([56])) + [32]) = [0]
	*($6 + [24 align=4]) = (int_64)0
	*($6 + [40]) = $0
	CALL $223(($8 + [32]), $6)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $224(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$10 }
	CALL $738(*(($4 + [32])))
	
.LABEL $label$10
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $217 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$6 = *($4 + [16])
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$1 }
	$6 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-4418693909069692928, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $221($4, $5)
	*($9 + [4]) = [0]
	*($9) = $4
	$6 = *(*(CALL $222($9) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $6
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [2192])
	$6 = *(($4 + [16]))
	*($1 + [8]) = [2]
	*($1) = $6
	*($1 + [16]) = *(*(*($3 + [4]) + [4]))
	$4 = $10
	$10 = ($4 + [-32])
	*([0] + [4]) = $10
	CALL eosio_assert([1], [496])
	CALL memcpy($10, $1, [8])
	CALL eosio_assert([1], [496])
	$3 = ($1 + [8])
	CALL memcpy(($4 + [-24]), $3, [1])
	CALL eosio_assert([1], [496])
	$4 = ($1 + [16])
	CALL memcpy(($4 + [-23]), $4, [8])
	$6 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-4418693909069692928, *(*($0 + [8])), $6, $10, [17])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$6 = *(($2 + [8]))
	$7 = *(*(($0 + [8])))
	$8 = *($1)
	*($9 + [8]) = *($3)
	*($9) = *($4)
	*($1 + [32]) = CALL db_idx128_store($6, (int_64)-4418693909069692928, $7, $8, $9)
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $216 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$6 = *($4 + [16])
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$1 }
	$6 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-4418693909069692928, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $221($4, $5)
	*($9 + [4]) = [0]
	*($9) = $4
	$6 = *(*(CALL $222($9) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $6
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [2192])
	$6 = *(($4 + [16]))
	*($1 + [8]) = [1]
	*($1) = $6
	*($1 + [16]) = *(*(*($3 + [4]) + [4]))
	$4 = $10
	$10 = ($4 + [-32])
	*([0] + [4]) = $10
	CALL eosio_assert([1], [496])
	CALL memcpy($10, $1, [8])
	CALL eosio_assert([1], [496])
	$3 = ($1 + [8])
	CALL memcpy(($4 + [-24]), $3, [1])
	CALL eosio_assert([1], [496])
	$4 = ($1 + [16])
	CALL memcpy(($4 + [-23]), $4, [8])
	$6 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-4418693909069692928, *(*($0 + [8])), $6, $10, [17])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$6 = *(($2 + [8]))
	$7 = *(*(($0 + [8])))
	$8 = *($1)
	*($9 + [8]) = *($3)
	*($9) = *($4)
	*($1 + [32]) = CALL db_idx128_store($6, (int_64)-4418693909069692928, $7, $8, $9)
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $211 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $210 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$6 = *($4 + [16])
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$1 }
	$6 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-4418693909069692928, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $221($4, $5)
	*($9 + [4]) = [0]
	*($9) = $4
	$6 = *(*(CALL $222($9) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $6
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [2192])
	$6 = *(($4 + [16]))
	*($1 + [8]) = [4]
	*($1) = $6
	*($1 + [16]) = *(*(*($3 + [4]) + [4]))
	$4 = $10
	$10 = ($4 + [-32])
	*([0] + [4]) = $10
	CALL eosio_assert([1], [496])
	CALL memcpy($10, $1, [8])
	CALL eosio_assert([1], [496])
	$3 = ($1 + [8])
	CALL memcpy(($4 + [-24]), $3, [1])
	CALL eosio_assert([1], [496])
	$4 = ($1 + [16])
	CALL memcpy(($4 + [-23]), $4, [8])
	$6 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-4418693909069692928, *(*($0 + [8])), $6, $10, [17])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$6 = *(($2 + [8]))
	$7 = *(*(($0 + [8])))
	$8 = *($1)
	*($9 + [8]) = *($3)
	*($9) = *($4)
	*($1 + [32]) = CALL db_idx128_store($6, (int_64)-4418693909069692928, $7, $8, $9)
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $213 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $737([56])) + [40]) = $0
	CALL $225(($8 + [32]), $6)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $176(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $199 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_upperbound(*($8), *($8 + [8]), (int_64)-3658914434178940928, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $230($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-3658914434178940928, $5))
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [64])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC _ZN11walexchange12wal_exchange8clearingEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_64 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	$31 = (*([0] + [4]) - [464])
	*([0] + [4]) = $31
	*($31 + [360]) = $2
	if ( CALL has_auth(*(($0 + [240]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [200])))
	
.LABEL $label$1
	*($31 + [352]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($31 + [352]), $1, [1])
	*(($31 + [344])) = [0]
	*($31 + [320]) = $1
	*($31 + [328]) = (int_64)-1
	*($31 + [336]) = (int_64)0
	$2 = *($0)
	*($31 + [312]) = $2
	$30 = CALL db_find_i64($2, $1, (int_64)-7122859525593366528, (int_64)-7122859525593366528)
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $197(($31 + [312]), $30) + [16]) == (int_32)($31 + [312])), [288])
	goto $label$2 
	
.LABEL $label$3
	*($31 + [392]) = (int_64)0
	*($31 + [384]) = (int_64)0
	CALL $198(($31 + [312]), ($31 + [384]), *($0))
	
.LABEL $label$2
	$30 = *(($31 + [340]))
	if ( ((int_32)$30 == (int_32)*(($31 + [336]))) ){ goto $label$5 }
	$30 = *(($30 + [-24]))
	CALL eosio_assert(((int_32)*($30 + [16]) == (int_32)($31 + [312])), [288])
	goto $label$4 
	
.LABEL $label$5
	$30 = [0]
	$14 = CALL db_find_i64(*($31 + [312]), *(($31 + [320])), (int_64)-7122859525593366528, (int_64)-7122859525593366528)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$4 }
	$30 = CALL $197(($31 + [312]), $14)
	CALL eosio_assert(((int_32)*($30 + [16]) == (int_32)($31 + [312])), [288])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$30 != (int_32)[0]), [672])
	*((($31 + [296]) + [8])) = *(($30 + [8]))
	$2 = *($30)
	*($31 + [296]) = $2
	$22 = *($31 + [360])
	CALL eosio_assert(((uint_64)($2 <= $22) & (uint_64)($22 <= ((int_64)$2 + (int_64)100))), [5200])
	*($31 + [296]) = *($31 + [360])
	CALL $198(($31 + [312]), ($31 + [296]), *($0))
	*((($31 + [256]) + [32])) = [0]
	*($31 + [272]) = (int_64)-1
	*($31 + [280]) = (int_64)0
	$2 = *($0)
	*($31 + [256]) = $2
	*($31 + [264]) = $2
	$30 = CALL db_find_i64($2, $2, (int_64)-8524860147551202816, $1)
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$7 }
	$28 = CALL $172(($31 + [256]), $30)
	CALL eosio_assert(((int_32)*($28 + [16]) == (int_32)($31 + [256])), [288])
	goto $label$6 
	
.LABEL $label$7
	$22 = *($0)
	CALL eosio_assert(((int_64)*($31 + [256]) == (int_64)CALL $fimport$16()), [432])
	*(($28 = CALL $737([32])) + [16]) = ($31 + [256])
	*($28 + [8]) = (int_64)0
	*($28) = $1
	CALL eosio_assert([1], [496])
	CALL memcpy(($31 + [368]), $28, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($31 + [368]) | [8]), ($28 + [8]), [8])
	$2 = *($28)
	$14 = CALL db_store_i64(*((($31 + [256]) + [8])), (int_64)-8524860147551202816, $22, $2, ($31 + [368]), [16])
	*($28 + [20]) = $14
	$30 = (($31 + [256]) + [16])
	if ( (uint_64)($2 <= *($30)) ){ goto $label$8 }
	*($30) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($31 + [208]) = $28
	$2 = *($28)
	*($31 + [384]) = $2
	*($31 + [168]) = $14
	$29 = ($31 + [284])
	$30 = *($29)
	if ( ((uint_32)$30 >= (uint_32)*(($31 + [288]))) ){ goto $label$10 }
	*($30 + [8]) = $2
	*($30 + [16]) = $14
	*($31 + [208]) = [0]
	*($30) = $28
	*($29) = ($30 + [24])
	goto $label$9 
	
.LABEL $label$10
	CALL $173(($31 + [280]), ($31 + [208]), ($31 + [384]), ($31 + [168]))
	
.LABEL $label$9
	$30 = *($31 + [208])
	*($31 + [208]) = [0]
	if ( ($30 == 0) ){ goto $label$6 }
	CALL $738($30)
	
.LABEL $label$6
	*($31 + [248]) = *($28 + [8])
	*(($15 = (($31 + [208]) + [32]))) = [0]
	*($31 + [216]) = $1
	*($31 + [224]) = (int_64)-1
	*($31 + [232]) = (int_64)0
	$2 = *($0)
	*($31 + [208]) = $2
	*($31 + [244]) = [0]
	*((($31 + [168]) + [32])) = [0]
	*($31 + [176]) = $2
	*($31 + [168]) = $2
	*($31 + [184]) = (int_64)-1
	*($31 + [192]) = (int_64)0
	$30 = [0]
	$14 = CALL db_find_i64($2, $2, (int_64)-4417020450001911808, (int_64)-4417020450001911808)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$11 }
	$30 = CALL $33(($31 + [168]), $14)
	CALL eosio_assert(((int_32)*($30 + [24]) == (int_32)($31 + [168])), [288])
	
.LABEL $label$11
	CALL eosio_assert(((int_32)$30 != (int_32)[0]), [672])
	$5 = ($28 + [8])
	$4 = ((int_32)$28 != (int_32)[0])
	$10 = (($31 + [128]) + [16])
	$9 = (($31 + [128]) | [8])
	$8 = (($31 + [384]) + [45])
	$7 = (($31 + [208]) + [24])
	$6 = (($31 + [368]) | [8])
	$3 = *($30)
	$18 = (($31 + [128]) + [32])
	$19 = (($31 + [128]) + [36])
	$25 = (($31 + [128]) + [28])
	$27 = ($28 + [20])
	$29 = [0]
	
.LOOP $label$12:
	*(($16 = (($31 + [128]) + [8]))) = $1
	*($10) = (int_64)-1
	*(($17 = (($31 + [128]) + [24]))) = (int_64)0
	*($18) = [0]
	*($31 + [128]) = *($0)
	*($19) = [0]
	*($31 + [24]) = ($31 + [128])
	CALL $199(($31 + [120]), ($31 + [24]), ($31 + [248]))
	*($31 + [384]) = (int_64)0
	CALL $200(($31 + [112]), ($31 + [24]), ($31 + [384]))
	$30 = *($31 + [116])
	if ( ((int_32)$30 == (int_32)*($31 + [124])) ){ goto $label$13 }
	
.LOOP $label$14:
	if ( *($30 + [16]) ){ goto $label$15 }
	$2 = *($0)
	*($31 + [36]) = ($31 + [112])
	*($31 + [32]) = ($31 + [208])
	*($31 + [72]) = $2
	CALL eosio_assert(((int_64)*($31 + [208]) == (int_64)CALL $fimport$16()), [432])
	*((($31 + [384]) + [8])) = ($31 + [72])
	*($31 + [388]) = ($31 + [32])
	*($31 + [384]) = ($31 + [208])
	*(($30 = CALL $737([40])) + [24]) = ($31 + [208])
	CALL $201(($31 + [384]), $30)
	*($31 + [368]) = $30
	$2 = *($30)
	*($31 + [384]) = $2
	$11 = *($30 + [28])
	*($31 + [456]) = $11
	$13 = (($31 + [208]) + [28])
	$14 = *($13)
	if ( ((uint_32)$14 >= (uint_32)*($15)) ){ goto $label$17 }
	*($14 + [8]) = $2
	*($14 + [16]) = $11
	*($31 + [368]) = [0]
	*($14) = $30
	*($13) = ($14 + [24])
	goto $label$16 
	
.LABEL $label$17
	CALL $202($7, ($31 + [368]), ($31 + [384]), ($31 + [456]))
	
.LABEL $label$16
	$30 = *($31 + [368])
	*($31 + [368]) = [0]
	if ( ($30 == 0) ){ goto $label$18 }
	CALL $738($30)
	
.LABEL $label$18
	$30 = *($31 + [116])
	CALL eosio_assert(((int_32)$30 != (int_32)[0]), [1328])
	$14 = *($31 + [24])
	CALL eosio_assert(((int_32)*($30 + [56]) == (int_32)$14), [848])
	CALL eosio_assert(((int_64)*($14) == (int_64)CALL $fimport$16()), [896])
	*($30 + [16]) = [1]
	$11 = ($30 + [8])
	*($31 + [456]) = *($11)
	$2 = *($30)
	CALL eosio_assert([1], [960])
	*((($31 + [72]) + [8])) = $8
	*($31 + [76]) = ($31 + [384])
	*($31 + [72]) = ($31 + [384])
	CALL $81(($31 + [72]), $30)
	CALL db_update_i64(*($30 + [60]), (int_64)0, ($31 + [384]), [45])
	if ( (uint_64)($2 <= *($14 + [16])) ){ goto $label$19 }
	*(($14 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$19
	*($31 + [32]) = *($11)
	if ( (CALL memcmp(($31 + [456]), ($31 + [32]), [8]) == 0) ){ goto $label$20 }
	$11 = ($30 + [64])
	$30 = *($11)
	if ( ((int_32)$30 > (int_32)[-1]) ){ goto $label$21 }
	$30 = CALL db_idx64_find_primary(*($14), *($14 + [8]), (int_64)-3658914434178940928, ($31 + [368]), $2)
	*($11) = $30
	
.LABEL $label$21
	CALL db_idx64_update($30, (int_64)0, ($31 + [32]))
	
.LABEL $label$20
	$29 = ($29 + [1])
	if ( ((uint_32)($29 & [65535]) >= (uint_32)($3 & [65535])) ){ goto $label$13 }
	
.LABEL $label$15
	CALL $203(($31 + [112]))
	$30 = *($31 + [116])
	if ( ((int_32)$30 != (int_32)*($31 + [124])) ){ goto $label$14 }
	
.LABEL $label$13
	$11 = *($17)
	if ( ($11 == 0) ){ goto $label$22 }
	$30 = *($25)
	if ( ((int_32)$30 == (int_32)$11) ){ goto $label$24 }
	
.LOOP $label$25:
	$30 = ($30 + [-24])
	$14 = *($30)
	*($30) = [0]
	if ( ($14 == 0) ){ goto $label$26 }
	CALL $738($14)
	
.LABEL $label$26
	if ( ((int_32)$11 != (int_32)$30) ){ goto $label$25 }
	$30 = *($17)
	goto $label$23 
	
.LABEL $label$24
	$30 = $11
	
.LABEL $label$23
	*($25) = $11
	CALL $738($30)
	
.LABEL $label$22
	*(($20 = (($31 + [384]) + [8]))) = $1
	*(($23 = (($31 + [384]) + [16]))) = (int_64)-1
	*(($21 = (($31 + [384]) + [24]))) = (int_64)0
	*(($12 = (($31 + [384]) + [32]))) = [0]
	*($31 + [384]) = *($0)
	*((($31 + [384]) + [36])) = [0]
	*($31 + [24]) = ($31 + [384])
	CALL $204(($31 + [456]), ($31 + [24]), ($31 + [248]))
	*($31 + [128]) = (int_64)0
	CALL $205(($31 + [120]), ($31 + [24]), ($31 + [128]))
	$30 = *($31 + [124])
	if ( ((int_32)$30 == (int_32)*($31 + [460])) ){ goto $label$27 }
	
.LOOP $label$28:
	if ( *($30 + [16]) ){ goto $label$29 }
	$2 = *($0)
	*($31 + [36]) = ($31 + [120])
	*($31 + [32]) = ($31 + [208])
	*($31 + [72]) = $2
	CALL eosio_assert(((int_64)*($31 + [208]) == (int_64)CALL $fimport$16()), [432])
	*($16) = ($31 + [72])
	*($31 + [132]) = ($31 + [32])
	*($31 + [128]) = ($31 + [208])
	*(($30 = CALL $737([40])) + [24]) = ($31 + [208])
	CALL $206(($31 + [128]), $30)
	*($31 + [368]) = $30
	$2 = *($30)
	*($31 + [128]) = $2
	$11 = *($30 + [28])
	*($31 + [112]) = $11
	$13 = (($31 + [208]) + [28])
	$14 = *($13)
	if ( ((uint_32)$14 >= (uint_32)*($15)) ){ goto $label$31 }
	*($14 + [8]) = $2
	*($14 + [16]) = $11
	*($31 + [368]) = [0]
	*($14) = $30
	*($13) = ($14 + [24])
	goto $label$30 
	
.LABEL $label$31
	CALL $202($7, ($31 + [368]), ($31 + [128]), ($31 + [112]))
	
.LABEL $label$30
	$30 = *($31 + [368])
	*($31 + [368]) = [0]
	if ( ($30 == 0) ){ goto $label$32 }
	CALL $738($30)
	
.LABEL $label$32
	$30 = *($31 + [124])
	CALL eosio_assert(((int_32)$30 != (int_32)[0]), [1328])
	$14 = *($31 + [24])
	CALL eosio_assert(((int_32)*($30 + [24]) == (int_32)$14), [848])
	CALL eosio_assert(((int_64)*($14) == (int_64)CALL $fimport$16()), [896])
	*($30 + [16]) = [1]
	$11 = ($30 + [8])
	*($31 + [368]) = *($11)
	$2 = *($30)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($31 + [128]), $30, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy($9, $11, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy($10, ($30 + [16]), [1])
	CALL db_update_i64(*($30 + [28]), (int_64)0, ($31 + [128]), [17])
	if ( (uint_64)($2 <= *($14 + [16])) ){ goto $label$33 }
	*(($14 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$33
	*($31 + [72]) = *($11)
	if ( (CALL memcmp(($31 + [368]), ($31 + [72]), [8]) == 0) ){ goto $label$34 }
	$11 = ($30 + [32])
	$30 = *($11)
	if ( ((int_32)$30 > (int_32)[-1]) ){ goto $label$35 }
	$30 = CALL db_idx64_find_primary(*($14), *($14 + [8]), (int_64)-3670317554737348608, ($31 + [32]), $2)
	*($11) = $30
	
.LABEL $label$35
	CALL db_idx64_update($30, (int_64)0, ($31 + [72]))
	
.LABEL $label$34
	$29 = ($29 + [1])
	if ( ((uint_32)($29 & [65535]) >= (uint_32)($3 & [65535])) ){ goto $label$27 }
	
.LABEL $label$29
	CALL $207(($31 + [120]))
	$30 = *($31 + [124])
	if ( ((int_32)$30 != (int_32)*($31 + [460])) ){ goto $label$28 }
	
.LABEL $label$27
	$11 = *($21)
	if ( ($11 == 0) ){ goto $label$36 }
	$13 = (($31 + [384]) + [28])
	$30 = *($13)
	if ( ((int_32)$30 == (int_32)$11) ){ goto $label$38 }
	
.LOOP $label$39:
	$30 = ($30 + [-24])
	$14 = *($30)
	*($30) = [0]
	if ( ($14 == 0) ){ goto $label$40 }
	CALL $738($14)
	
.LABEL $label$40
	if ( ((int_32)$11 != (int_32)$30) ){ goto $label$39 }
	$30 = *($21)
	goto $label$37 
	
.LABEL $label$38
	$30 = $11
	
.LABEL $label$37
	*($13) = $11
	CALL $738($30)
	
.LABEL $label$36
	*($16) = $1
	*($10) = (int_64)-1
	*($17) = (int_64)0
	*($18) = [0]
	*($31 + [128]) = *($0)
	*($19) = [0]
	*($31 + [24]) = ($31 + [128])
	CALL $208(($31 + [120]), ($31 + [24]), ($31 + [248]))
	*($31 + [384]) = (int_64)0
	CALL $209(($31 + [112]), ($31 + [24]), ($31 + [384]))
	$30 = *($31 + [116])
	if ( ((int_32)$30 == (int_32)*($31 + [124])) ){ goto $label$41 }
	
.LOOP $label$42:
	if ( *($30 + [16]) ){ goto $label$43 }
	$2 = *($0)
	*($31 + [36]) = ($31 + [112])
	*($31 + [32]) = ($31 + [208])
	*($31 + [72]) = $2
	CALL eosio_assert(((int_64)*($31 + [208]) == (int_64)CALL $fimport$16()), [432])
	*($20) = ($31 + [72])
	*($31 + [388]) = ($31 + [32])
	*($31 + [384]) = ($31 + [208])
	*(($30 = CALL $737([40])) + [24]) = ($31 + [208])
	CALL $210(($31 + [384]), $30)
	*($31 + [368]) = $30
	$2 = *($30)
	*($31 + [384]) = $2
	$11 = *($30 + [28])
	*($31 + [456]) = $11
	$13 = (($31 + [208]) + [28])
	$14 = *($13)
	if ( ((uint_32)$14 >= (uint_32)*($15)) ){ goto $label$45 }
	*($14 + [8]) = $2
	*($14 + [16]) = $11
	*($31 + [368]) = [0]
	*($14) = $30
	*($13) = ($14 + [24])
	goto $label$44 
	
.LABEL $label$45
	CALL $202($7, ($31 + [368]), ($31 + [384]), ($31 + [456]))
	
.LABEL $label$44
	$30 = *($31 + [368])
	*($31 + [368]) = [0]
	if ( ($30 == 0) ){ goto $label$46 }
	CALL $738($30)
	
.LABEL $label$46
	$30 = *($31 + [116])
	CALL eosio_assert(((int_32)$30 != (int_32)[0]), [1328])
	$14 = *($31 + [24])
	CALL eosio_assert(((int_32)*($30 + [56]) == (int_32)$14), [848])
	CALL eosio_assert(((int_64)*($14) == (int_64)CALL $fimport$16()), [896])
	*($30 + [16]) = [1]
	$11 = ($30 + [8])
	*($31 + [456]) = *($11)
	$2 = *($30)
	CALL eosio_assert([1], [960])
	*((($31 + [72]) + [8])) = $8
	*($31 + [76]) = ($31 + [384])
	*($31 + [72]) = ($31 + [384])
	CALL $211(($31 + [72]), $30)
	CALL db_update_i64(*($30 + [60]), (int_64)0, ($31 + [384]), [45])
	if ( (uint_64)($2 <= *($14 + [16])) ){ goto $label$47 }
	*(($14 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$47
	*($31 + [32]) = *($11)
	if ( (CALL memcmp(($31 + [456]), ($31 + [32]), [8]) == 0) ){ goto $label$48 }
	$11 = ($30 + [64])
	$30 = *($11)
	if ( ((int_32)$30 > (int_32)[-1]) ){ goto $label$49 }
	$30 = CALL db_idx64_find_primary(*($14), *($14 + [8]), (int_64)-3660983113619603456, ($31 + [368]), $2)
	*($11) = $30
	
.LABEL $label$49
	CALL db_idx64_update($30, (int_64)0, ($31 + [32]))
	
.LABEL $label$48
	$29 = ($29 + [1])
	if ( ((uint_32)($29 & [65535]) >= (uint_32)($3 & [65535])) ){ goto $label$41 }
	
.LABEL $label$43
	CALL $212(($31 + [112]))
	$30 = *($31 + [116])
	if ( ((int_32)$30 != (int_32)*($31 + [124])) ){ goto $label$42 }
	
.LABEL $label$41
	$11 = *($17)
	if ( ($11 == 0) ){ goto $label$50 }
	$30 = *($25)
	if ( ((int_32)$30 == (int_32)$11) ){ goto $label$52 }
	
.LOOP $label$53:
	$30 = ($30 + [-24])
	$14 = *($30)
	*($30) = [0]
	if ( ($14 == 0) ){ goto $label$54 }
	CALL $738($14)
	
.LABEL $label$54
	if ( ((int_32)$11 != (int_32)$30) ){ goto $label$53 }
	$30 = *($17)
	goto $label$51 
	
.LABEL $label$52
	$30 = $11
	
.LABEL $label$51
	*($25) = $11
	CALL $738($30)
	
.LABEL $label$50
	$22 = ((int_64)*($31 + [248]) + (int_64)1)
	*($31 + [248]) = $22
	*($20) = $1
	*($23) = (int_64)-1
	*($21) = (int_64)0
	*($12) = [0]
	$2 = *($0)
	*($31 + [384]) = $2
	*($16) = $1
	*($10) = (int_64)-1
	*($17) = (int_64)0
	*($18) = [0]
	*($31 + [128]) = $2
	*(($26 = (($31 + [72]) + [8]))) = $1
	*((($31 + [72]) + [16])) = (int_64)-1
	*(($23 = (($31 + [72]) + [24]))) = (int_64)0
	*((($31 + [72]) + [32])) = [0]
	*($31 + [72]) = $2
	*(($24 = (($31 + [32]) + [8]))) = $1
	*((($31 + [32]) + [16])) = (int_64)-1
	*(($20 = (($31 + [32]) + [24]))) = (int_64)0
	*((($31 + [32]) + [32])) = [0]
	*($31 + [32]) = $2
	$30 = CALL db_find_i64($2, $1, (int_64)-3660455468297355264, $22)
	if ( ((int_32)$30 <= (int_32)[-1]) ){ goto $label$56 }
	$30 = CALL $193(($31 + [384]), $30)
	CALL eosio_assert(((int_32)*($30 + [64]) == (int_32)($31 + [384])), [288])
	*($31 + [124]) = $30
	*($31 + [120]) = ($31 + [384])
	goto $label$55 
	
.LABEL $label$56
	*($31 + [124]) = [0]
	*($31 + [120]) = ($31 + [384])
	
.LABEL $label$55
	$2 = *($31 + [248])
	$12 = *($17)
	$11 = *($25)
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$57 }
	$30 = ($11 + [-24])
	$13 = ([0] - $12)
	
.LOOP $label$58:
	if ( ((int_64)*(*($30)) == (int_64)$2) ){ goto $label$57 }
	$11 = $30
	$14 = ($30 + [-24])
	$30 = $14
	if ( ((int_32)($14 + $13) != (int_32)[-24]) ){ goto $label$58 }
	
.LABEL $label$57
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$60 }
	$30 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($30 + [40]) == (int_32)($31 + [128])), [288])
	*($31 + [116]) = $30
	*($31 + [112]) = ($31 + [128])
	goto $label$59 
	
.LABEL $label$60
	$30 = CALL db_find_i64(*($31 + [128]), *($16), (int_64)-3671300493912047616, $2)
	if ( ((int_32)$30 <= (int_32)[-1]) ){ goto $label$61 }
	$30 = CALL $213(($31 + [128]), $30)
	CALL eosio_assert(((int_32)*($30 + [40]) == (int_32)($31 + [128])), [288])
	*($31 + [116]) = $30
	*($31 + [112]) = ($31 + [128])
	goto $label$59 
	
.LABEL $label$61
	*($31 + [116]) = [0]
	*($31 + [112]) = ($31 + [128])
	
.LABEL $label$59
	$2 = *($31 + [248])
	$16 = *($23)
	$12 = (($31 + [72]) + [28])
	$11 = *($12)
	if ( ((int_32)$11 == (int_32)$16) ){ goto $label$62 }
	$30 = ($11 + [-24])
	$13 = ([0] - $16)
	
.LOOP $label$63:
	if ( ((int_64)*(*($30)) == (int_64)$2) ){ goto $label$62 }
	$11 = $30
	$14 = ($30 + [-24])
	$30 = $14
	if ( ((int_32)($14 + $13) != (int_32)[-24]) ){ goto $label$63 }
	
.LABEL $label$62
	if ( ((int_32)$11 == (int_32)$16) ){ goto $label$65 }
	$30 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($30 + [40]) == (int_32)($31 + [72])), [288])
	*($31 + [28]) = $30
	*($31 + [24]) = ($31 + [72])
	goto $label$64 
	
.LABEL $label$65
	$30 = CALL db_find_i64(*($31 + [72]), *($26), (int_64)-3661804062627594240, $2)
	if ( ((int_32)$30 <= (int_32)[-1]) ){ goto $label$66 }
	$30 = CALL $214(($31 + [72]), $30)
	CALL eosio_assert(((int_32)*($30 + [40]) == (int_32)($31 + [72])), [288])
	*($31 + [28]) = $30
	*($31 + [24]) = ($31 + [72])
	goto $label$64 
	
.LABEL $label$66
	*($31 + [28]) = [0]
	*($31 + [24]) = ($31 + [72])
	
.LABEL $label$64
	$2 = *($31 + [248])
	$16 = *($20)
	$26 = (($31 + [32]) + [28])
	$11 = *($26)
	if ( ((int_32)$11 == (int_32)$16) ){ goto $label$67 }
	$30 = ($11 + [-24])
	$13 = ([0] - $16)
	
.LOOP $label$68:
	if ( ((int_64)*(*($30)) == (int_64)$2) ){ goto $label$67 }
	$11 = $30
	$14 = ($30 + [-24])
	$30 = $14
	if ( ((int_32)($14 + $13) != (int_32)[-24]) ){ goto $label$68 }
	
.LABEL $label$67
	if ( ((int_32)$11 == (int_32)$16) ){ goto $label$85 }
	$30 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($30 + [8]) == (int_32)($31 + [32])), [288])
	*($31 + [20]) = $30
	*($31 + [16]) = ($31 + [32])
	if ( *($31 + [124]) ){ goto $label$84 }
	goto $label$83 
	
.LABEL $label$85
	$30 = CALL db_find_i64(*($31 + [32]), *($24), (int_64)-3661136964716855296, $2)
	if ( ((int_32)$30 <= (int_32)[-1]) ){ goto $label$86 }
	$30 = CALL $215(($31 + [32]), $30)
	CALL eosio_assert(((int_32)*($30 + [8]) == (int_32)($31 + [32])), [288])
	*($31 + [20]) = $30
	*($31 + [16]) = ($31 + [32])
	if ( *($31 + [124]) ){ goto $label$84 }
	goto $label$83 
	
.LABEL $label$86
	$30 = [0]
	*($31 + [20]) = [0]
	*($31 + [16]) = ($31 + [32])
	if ( (*($31 + [124]) == 0) ){ goto $label$83 }
	
.LABEL $label$84
	$2 = *($0)
	*($31 + [12]) = ($31 + [120])
	*($31 + [8]) = ($31 + [208])
	*($31 + [456]) = $2
	CALL eosio_assert(((int_64)*($31 + [208]) == (int_64)CALL $fimport$16()), [432])
	*((($31 + [368]) + [8])) = ($31 + [456])
	*($31 + [372]) = ($31 + [8])
	*($31 + [368]) = ($31 + [208])
	*(($30 = CALL $737([40])) + [24]) = ($31 + [208])
	CALL $216(($31 + [368]), $30)
	*($31 + [448]) = $30
	$2 = *($30)
	*($31 + [368]) = $2
	$11 = *($30 + [28])
	*($31 + [444]) = $11
	$13 = (($31 + [208]) + [28])
	$14 = *($13)
	if ( ((uint_32)$14 >= (uint_32)*($15)) ){ goto $label$82 }
	*($14 + [8]) = $2
	*($14 + [16]) = $11
	*($31 + [448]) = [0]
	*($14) = $30
	*($13) = ($14 + [24])
	goto $label$81 
	
.LABEL $label$83
	if ( (*($31 + [116]) == 0) ){ goto $label$80 }
	$2 = *($0)
	*($31 + [12]) = ($31 + [112])
	*($31 + [8]) = ($31 + [208])
	*($31 + [456]) = $2
	CALL eosio_assert(((int_64)*($31 + [208]) == (int_64)CALL $fimport$16()), [432])
	*((($31 + [368]) + [8])) = ($31 + [456])
	*($31 + [372]) = ($31 + [8])
	*($31 + [368]) = ($31 + [208])
	*(($30 = CALL $737([40])) + [24]) = ($31 + [208])
	CALL $217(($31 + [368]), $30)
	*($31 + [448]) = $30
	$2 = *($30)
	*($31 + [368]) = $2
	$11 = *($30 + [28])
	*($31 + [444]) = $11
	$13 = (($31 + [208]) + [28])
	$14 = *($13)
	if ( ((uint_32)$14 >= (uint_32)*($15)) ){ goto $label$79 }
	*($14 + [8]) = $2
	*($14 + [16]) = $11
	*($31 + [448]) = [0]
	*($14) = $30
	*($13) = ($14 + [24])
	goto $label$78 
	
.LABEL $label$82
	CALL $202($7, ($31 + [448]), ($31 + [368]), ($31 + [444]))
	
.LABEL $label$81
	$30 = *($31 + [448])
	*($31 + [448]) = [0]
	if ( ($30 == 0) ){ goto $label$87 }
	CALL $738($30)
	
.LABEL $label$87
	CALL eosio_assert($4, [1328])
	CALL eosio_assert(((int_32)*(($28 + [16])) == (int_32)($31 + [256])), [848])
	CALL eosio_assert(((int_64)*($31 + [256]) == (int_64)CALL $fimport$16()), [896])
	*($5) = *($31 + [248])
	$2 = *($28)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($31 + [368]), $28, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy($6, $5, [8])
	CALL db_update_i64(*($27), (int_64)0, ($31 + [368]), [16])
	$30 = (($31 + [256]) + [16])
	if ( (uint_64)($2 <= *($30)) ){ goto $label$71 }
	*($30) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$71 
	
.LABEL $label$80
	if ( (*($31 + [28]) == 0) ){ goto $label$77 }
	$2 = *($0)
	*($31 + [12]) = ($31 + [24])
	*($31 + [8]) = ($31 + [208])
	*($31 + [456]) = $2
	CALL eosio_assert(((int_64)*($31 + [208]) == (int_64)CALL $fimport$16()), [432])
	*((($31 + [368]) + [8])) = ($31 + [456])
	*($31 + [372]) = ($31 + [8])
	*($31 + [368]) = ($31 + [208])
	*(($30 = CALL $737([40])) + [24]) = ($31 + [208])
	CALL $218(($31 + [368]), $30)
	*($31 + [448]) = $30
	$2 = *($30)
	*($31 + [368]) = $2
	$11 = *($30 + [28])
	*($31 + [444]) = $11
	$13 = (($31 + [208]) + [28])
	$14 = *($13)
	if ( ((uint_32)$14 >= (uint_32)*($15)) ){ goto $label$76 }
	*($14 + [8]) = $2
	*($14 + [16]) = $11
	*($31 + [448]) = [0]
	*($14) = $30
	*($13) = ($14 + [24])
	goto $label$75 
	
.LABEL $label$79
	CALL $202($7, ($31 + [448]), ($31 + [368]), ($31 + [444]))
	
.LABEL $label$78
	$30 = *($31 + [448])
	*($31 + [448]) = [0]
	if ( ($30 == 0) ){ goto $label$88 }
	CALL $738($30)
	
.LABEL $label$88
	CALL eosio_assert($4, [1328])
	CALL eosio_assert(((int_32)*(($28 + [16])) == (int_32)($31 + [256])), [848])
	CALL eosio_assert(((int_64)*($31 + [256]) == (int_64)CALL $fimport$16()), [896])
	*($5) = *($31 + [248])
	$2 = *($28)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($31 + [368]), $28, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy($6, $5, [8])
	CALL db_update_i64(*($27), (int_64)0, ($31 + [368]), [16])
	$30 = (($31 + [256]) + [16])
	if ( (uint_64)($2 <= *($30)) ){ goto $label$71 }
	*($30) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$71 
	
.LABEL $label$77
	if ( ($30 == 0) ){ goto $label$74 }
	$2 = *($0)
	*($31 + [12]) = ($31 + [16])
	*($31 + [8]) = ($31 + [208])
	*($31 + [456]) = $2
	CALL eosio_assert(((int_64)*($31 + [208]) == (int_64)CALL $fimport$16()), [432])
	*((($31 + [368]) + [8])) = ($31 + [456])
	*($31 + [372]) = ($31 + [8])
	*($31 + [368]) = ($31 + [208])
	*(($30 = CALL $737([40])) + [24]) = ($31 + [208])
	CALL $219(($31 + [368]), $30)
	*($31 + [448]) = $30
	$2 = *($30)
	*($31 + [368]) = $2
	$11 = *($30 + [28])
	*($31 + [444]) = $11
	$13 = (($31 + [208]) + [28])
	$14 = *($13)
	if ( ((uint_32)$14 >= (uint_32)*($15)) ){ goto $label$73 }
	*($14 + [8]) = $2
	*($14 + [16]) = $11
	*($31 + [448]) = [0]
	*($14) = $30
	*($13) = ($14 + [24])
	goto $label$72 
	
.LABEL $label$76
	CALL $202($7, ($31 + [448]), ($31 + [368]), ($31 + [444]))
	
.LABEL $label$75
	$30 = *($31 + [448])
	*($31 + [448]) = [0]
	if ( ($30 == 0) ){ goto $label$89 }
	CALL $738($30)
	
.LABEL $label$89
	CALL eosio_assert($4, [1328])
	CALL eosio_assert(((int_32)*(($28 + [16])) == (int_32)($31 + [256])), [848])
	CALL eosio_assert(((int_64)*($31 + [256]) == (int_64)CALL $fimport$16()), [896])
	*($5) = *($31 + [248])
	$2 = *($28)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($31 + [368]), $28, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy($6, $5, [8])
	CALL db_update_i64(*($27), (int_64)0, ($31 + [368]), [16])
	$30 = (($31 + [256]) + [16])
	if ( (uint_64)($2 <= *($30)) ){ goto $label$71 }
	*($30) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$71 
	
.LABEL $label$74
	$13 = [0]
	$11 = *($20)
	if ( $11 ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$73
	CALL $202($7, ($31 + [448]), ($31 + [368]), ($31 + [444]))
	
.LABEL $label$72
	$30 = *($31 + [448])
	*($31 + [448]) = [0]
	if ( ($30 == 0) ){ goto $label$90 }
	CALL $738($30)
	
.LABEL $label$90
	CALL eosio_assert($4, [1328])
	CALL eosio_assert(((int_32)*(($28 + [16])) == (int_32)($31 + [256])), [848])
	CALL eosio_assert(((int_64)*($31 + [256]) == (int_64)CALL $fimport$16()), [896])
	*($5) = *($31 + [248])
	$2 = *($28)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($31 + [368]), $28, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy($6, $5, [8])
	CALL db_update_i64(*($27), (int_64)0, ($31 + [368]), [16])
	$30 = (($31 + [256]) + [16])
	if ( (uint_64)($2 <= *($30)) ){ goto $label$71 }
	*($30) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$71
	$29 = ($29 + [1])
	$13 = (($29 & [65535]) <= ($3 & [65535]))
	$11 = *($20)
	if ( ($11 == 0) ){ goto $label$69 }
	
.LABEL $label$70
	$30 = *($26)
	if ( ((int_32)$30 == (int_32)$11) ){ goto $label$92 }
	
.LOOP $label$93:
	$30 = ($30 + [-24])
	$14 = *($30)
	*($30) = [0]
	if ( ($14 == 0) ){ goto $label$94 }
	CALL $738($14)
	
.LABEL $label$94
	if ( ((int_32)$11 != (int_32)$30) ){ goto $label$93 }
	$30 = *($20)
	goto $label$91 
	
.LABEL $label$92
	$30 = $11
	
.LABEL $label$91
	*($26) = $11
	CALL $738($30)
	
.LABEL $label$69
	$11 = *($23)
	if ( ($11 == 0) ){ goto $label$95 }
	$30 = *($12)
	if ( ((int_32)$30 == (int_32)$11) ){ goto $label$97 }
	
.LOOP $label$98:
	$30 = ($30 + [-24])
	$14 = *($30)
	*($30) = [0]
	if ( ($14 == 0) ){ goto $label$99 }
	if ( ((*($14 + [24]) & [1]) == 0) ){ goto $label$100 }
	CALL $738(*(($14 + [32])))
	
.LABEL $label$100
	CALL $738($14)
	
.LABEL $label$99
	if ( ((int_32)$11 != (int_32)$30) ){ goto $label$98 }
	$30 = *($23)
	goto $label$96 
	
.LABEL $label$97
	$30 = $11
	
.LABEL $label$96
	*($12) = $11
	CALL $738($30)
	
.LABEL $label$95
	$11 = *($17)
	if ( ($11 == 0) ){ goto $label$101 }
	$30 = *($25)
	if ( ((int_32)$30 == (int_32)$11) ){ goto $label$103 }
	
.LOOP $label$104:
	$30 = ($30 + [-24])
	$14 = *($30)
	*($30) = [0]
	if ( ($14 == 0) ){ goto $label$105 }
	CALL $738($14)
	
.LABEL $label$105
	if ( ((int_32)$11 != (int_32)$30) ){ goto $label$104 }
	$30 = *($17)
	goto $label$102 
	
.LABEL $label$103
	$30 = $11
	
.LABEL $label$102
	*($25) = $11
	CALL $738($30)
	
.LABEL $label$101
	$11 = *($21)
	if ( ($11 == 0) ){ goto $label$106 }
	$16 = (($31 + [384]) + [28])
	$30 = *($16)
	if ( ((int_32)$30 == (int_32)$11) ){ goto $label$108 }
	
.LOOP $label$109:
	$30 = ($30 + [-24])
	$14 = *($30)
	*($30) = [0]
	if ( ($14 == 0) ){ goto $label$110 }
	CALL $738($14)
	
.LABEL $label$110
	if ( ((int_32)$11 != (int_32)$30) ){ goto $label$109 }
	$30 = *($21)
	goto $label$107 
	
.LABEL $label$108
	$30 = $11
	
.LABEL $label$107
	*($16) = $11
	CALL $738($30)
	
.LABEL $label$106
	if ( $13 ){ goto $label$12 }
	CALL eosio_assert(((int_32)($29 & [65535]) != (int_32)[0]), [5232])
	$2 = *($0)
	*($31 + [76]) = ($31 + [360])
	*($31 + [72]) = ($31 + [208])
	*($31 + [128]) = $2
	CALL eosio_assert(((int_64)*($31 + [208]) == (int_64)CALL $fimport$16()), [432])
	*($31 + [388]) = ($31 + [72])
	*($31 + [384]) = ($31 + [208])
	*($31 + [392]) = ($31 + [128])
	*(($30 = CALL $737([40])) + [24]) = ($31 + [208])
	CALL $220(($31 + [384]), $30)
	*($31 + [32]) = $30
	$2 = *($30)
	*($31 + [384]) = $2
	$29 = *($30 + [28])
	*($31 + [368]) = $29
	$0 = ($31 + [236])
	$14 = *($0)
	if ( ((uint_32)$14 >= (uint_32)*(($31 + [240]))) ){ goto $label$112 }
	*($14 + [8]) = $2
	*($14 + [16]) = $29
	*($31 + [32]) = [0]
	*($14) = $30
	*($0) = ($14 + [24])
	goto $label$111 
	
.LABEL $label$112
	CALL $202($7, ($31 + [32]), ($31 + [384]), ($31 + [368]))
	
.LABEL $label$111
	$30 = *($31 + [32])
	*($31 + [32]) = [0]
	if ( ($30 == 0) ){ goto $label$113 }
	CALL $738($30)
	
.LABEL $label$113
	$29 = *($31 + [192])
	if ( ($29 == 0) ){ goto $label$114 }
	$0 = ($31 + [196])
	$30 = *($0)
	if ( ((int_32)$30 == (int_32)$29) ){ goto $label$116 }
	
.LOOP $label$117:
	$30 = ($30 + [-24])
	$14 = *($30)
	*($30) = [0]
	if ( ($14 == 0) ){ goto $label$118 }
	CALL $738($14)
	
.LABEL $label$118
	if ( ((int_32)$29 != (int_32)$30) ){ goto $label$117 }
	$30 = *(($31 + [192]))
	goto $label$115 
	
.LABEL $label$116
	$30 = $29
	
.LABEL $label$115
	*($0) = $29
	CALL $738($30)
	
.LABEL $label$114
	$29 = *($31 + [232])
	if ( ($29 == 0) ){ goto $label$119 }
	$0 = ($31 + [236])
	$30 = *($0)
	if ( ((int_32)$30 == (int_32)$29) ){ goto $label$121 }
	
.LOOP $label$122:
	$30 = ($30 + [-24])
	$14 = *($30)
	*($30) = [0]
	if ( ($14 == 0) ){ goto $label$123 }
	CALL $738($14)
	
.LABEL $label$123
	if ( ((int_32)$29 != (int_32)$30) ){ goto $label$122 }
	$30 = *(($31 + [232]))
	goto $label$120 
	
.LABEL $label$121
	$30 = $29
	
.LABEL $label$120
	*($0) = $29
	CALL $738($30)
	
.LABEL $label$119
	$29 = *($31 + [280])
	if ( ($29 == 0) ){ goto $label$124 }
	$0 = ($31 + [284])
	$30 = *($0)
	if ( ((int_32)$30 == (int_32)$29) ){ goto $label$126 }
	
.LOOP $label$127:
	$30 = ($30 + [-24])
	$14 = *($30)
	*($30) = [0]
	if ( ($14 == 0) ){ goto $label$128 }
	CALL $738($14)
	
.LABEL $label$128
	if ( ((int_32)$29 != (int_32)$30) ){ goto $label$127 }
	$30 = *(($31 + [280]))
	goto $label$125 
	
.LABEL $label$126
	$30 = $29
	
.LABEL $label$125
	*($0) = $29
	CALL $738($30)
	
.LABEL $label$124
	$29 = *($31 + [336])
	if ( ($29 == 0) ){ goto $label$129 }
	$0 = ($31 + [340])
	$30 = *($0)
	if ( ((int_32)$30 == (int_32)$29) ){ goto $label$131 }
	
.LOOP $label$132:
	$30 = ($30 + [-24])
	$14 = *($30)
	*($30) = [0]
	if ( ($14 == 0) ){ goto $label$133 }
	CALL $738($14)
	
.LABEL $label$133
	if ( ((int_32)$29 != (int_32)$30) ){ goto $label$132 }
	$30 = *(($31 + [336]))
	goto $label$130 
	
.LABEL $label$131
	$30 = $29
	
.LABEL $label$130
	*($0) = $29
	CALL $738($30)
	
.LABEL $label$129
	*([0] + [4]) = ($31 + [464])
}

int_32 .FUNC $197 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$6 = CALL malloc($4)
	CALL db_get_i64($1, $6, $4)
	CALL free($6)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($8 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	CALL db_get_i64($1, $6, $4)
	
.LABEL $label$5
	*(($5 = CALL $737([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($5, $6, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [544])
	CALL memcpy(($5 + [8]), ($6 + [8]), [8])
	*($5 + [20]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)-7122859525593366528
	$6 = *($5 + [20])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = (int_64)-7122859525593366528
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $234(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$7
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [32])
	return $5
}

void .FUNC $194 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $195 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN11walexchange12wal_exchange9skiptradeEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [176])
	*([0] + [4]) = $9
	if ( CALL has_auth(*(($0 + [240]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [200])))
	
.LABEL $label$1
	*($9 + [136]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($9 + [136]), $1, [1])
	*((($9 + [96]) + [32])) = [0]
	*($9 + [112]) = (int_64)-1
	*($9 + [120]) = (int_64)0
	$5 = *($0)
	*($9 + [96]) = $5
	*($9 + [104]) = $5
	$4 = CALL db_find_i64($5, $5, (int_64)-8524860147551202816, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $172(($9 + [96]), $4)
	CALL eosio_assert(((int_32)*($4 + [16]) == (int_32)($9 + [96])), [288])
	goto $label$2 
	
.LABEL $label$3
	$6 = *($0)
	CALL eosio_assert(((int_64)*($9 + [96]) == (int_64)CALL $fimport$16()), [432])
	*(($4 = CALL $737([32])) + [16]) = ($9 + [96])
	*($4 + [8]) = (int_64)0
	*($4) = $1
	CALL eosio_assert([1], [496])
	CALL memcpy(($9 + [48]), $4, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($9 + [48]) | [8]), ($4 + [8]), [8])
	$5 = *($4)
	$8 = CALL db_store_i64(*((($9 + [96]) + [8])), (int_64)-8524860147551202816, $6, $5, ($9 + [48]), [16])
	*($4 + [20]) = $8
	$3 = (($9 + [96]) + [16])
	if ( (uint_64)($5 <= *($3)) ){ goto $label$4 }
	*($3) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($9 + [8]) = $4
	$5 = *($4)
	*($9 + [48]) = $5
	*($9 + [160]) = $8
	$7 = ($9 + [124])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($9 + [128]))) ){ goto $label$6 }
	*($3 + [8]) = $5
	*($3 + [16]) = $8
	*($9 + [8]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $173(($9 + [120]), ($9 + [8]), ($9 + [48]), ($9 + [160]))
	
.LABEL $label$5
	$3 = *($9 + [8])
	*($9 + [8]) = [0]
	if ( ($3 == 0) ){ goto $label$2 }
	CALL $738($3)
	
.LABEL $label$2
	CALL eosio_assert((uint_64)(*($4 + [8]) <= $2), [3808])
	*((($9 + [48]) + [32])) = [0]
	*($9 + [64]) = (int_64)-1
	*($9 + [72]) = (int_64)0
	$5 = *($0)
	*($9 + [48]) = $5
	*($9 + [56]) = $1
	$4 = [1]
	$3 = CALL db_find_i64($5, $1, (int_64)-3660455468297355264, $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert(((int_32)*(CALL $193(($9 + [48]), $3) + [64]) == (int_32)($9 + [48])), [288])
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [5152])
	*((($9 + [8]) + [32])) = [0]
	*($9 + [16]) = $1
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$1 = *($0)
	*($9 + [8]) = $1
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([24])) + [8]) = ($9 + [8])
	*($0) = $2
	CALL eosio_assert([1], [496])
	CALL memcpy(($9 + [160]), $0, [8])
	$2 = *($0)
	$3 = CALL db_store_i64(*($9 + [16]), (int_64)-3661136964716855296, $1, $2, ($9 + [160]), [8])
	*($0 + [12]) = $3
	if ( (uint_64)($2 <= *($9 + [24])) ){ goto $label$8 }
	*(($9 + [24])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($9 + [152]) = $0
	$1 = *($0)
	*($9 + [160]) = $1
	*($9 + [148]) = $3
	$8 = ($9 + [36])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($9 + [40]))) ){ goto $label$10 }
	*($4 + [8]) = $1
	*($4 + [16]) = $3
	*($9 + [152]) = [0]
	*($4) = $0
	*($8) = ($4 + [24])
	goto $label$9 
	
.LABEL $label$10
	CALL $194(($9 + [32]), ($9 + [152]), ($9 + [160]), ($9 + [148]))
	
.LABEL $label$9
	$0 = *($9 + [152])
	*($9 + [152]) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $738($0)
	
.LABEL $label$11
	$3 = *($9 + [32])
	if ( ($3 == 0) ){ goto $label$12 }
	$8 = ($9 + [36])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$14 }
	
.LOOP $label$15:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	CALL $738($4)
	
.LABEL $label$16
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$15 }
	$0 = *(($9 + [32]))
	goto $label$13 
	
.LABEL $label$14
	$0 = $3
	
.LABEL $label$13
	*($8) = $3
	CALL $738($0)
	
.LABEL $label$12
	$3 = *($9 + [72])
	if ( ($3 == 0) ){ goto $label$17 }
	$8 = ($9 + [76])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$19 }
	
.LOOP $label$20:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$21 }
	CALL $738($4)
	
.LABEL $label$21
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$20 }
	$0 = *(($9 + [72]))
	goto $label$18 
	
.LABEL $label$19
	$0 = $3
	
.LABEL $label$18
	*($8) = $3
	CALL $738($0)
	
.LABEL $label$17
	$3 = *($9 + [120])
	if ( ($3 == 0) ){ goto $label$22 }
	$8 = ($9 + [124])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$24 }
	
.LOOP $label$25:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$26 }
	CALL $738($4)
	
.LABEL $label$26
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$25 }
	$0 = *(($9 + [120]))
	goto $label$23 
	
.LABEL $label$24
	$0 = $3
	
.LABEL $label$23
	*($8) = $3
	CALL $738($0)
	
.LABEL $label$22
	*([0] + [4]) = ($9 + [176])
}

int_32 .FUNC $193 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $737([80])) + [64]) = $0
	CALL $195(($8 + [32]), $6)
	*($6 + [68]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [68])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $183(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $190 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4508390640157634048, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $67($0, $5)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN11walexchange13order_manager15try_clear_orderEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*($5 + [56]) = (int_64)-1
	*($5 + [64]) = [0]
	*($5 + [40]) = *($0)
	*($5 + [48]) = *($0 + [8])
	*((($5 + [40]) + [28])) = [0]
	*((($5 + [40]) + [32])) = [0]
	*($5 + [76]) = [0]
	$2 = CALL $190(($5 + [40]), $1, [5072])
	if ( ((int_64)*($2 + [8]) != (int_64)0) ){ goto $label$1 }
	*($5 + [16]) = (int_64)-1
	*($5 + [24]) = [0]
	*($5) = *($0)
	*($5 + [8]) = *(($0 + [8]))
	*(($5 + [28])) = [0]
	*(($5 + [32])) = [0]
	$3 = *($2 + [16])
	$3 = CALL $112($5, (CASTING uint_64)(uint_32 ($3 - ((uint_32)$3 % (uint_32)*($0 + [16])))), [5104])
	if ( (*($3 + [8]) == 0) ){ goto $label$2 }
	CALL _ZN11walexchange13order_manager22try_clear_order_extendEy($0, $1)
	CALL $115(($5 + [40]), $2)
	CALL eosio_assert(((int_32)*($3 + [12]) == (int_32)$5), [848])
	CALL eosio_assert(((int_64)*($5) == (int_64)CALL $fimport$16()), [896])
	*($3 + [4]) = (*($3 + [4]) + [-1])
	$1 = *($3)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($5 + [80]), $3, [4])
	CALL eosio_assert([1], [496])
	CALL memcpy((($5 + [80]) | [4]), ($3 + [4]), [4])
	*($5 + [95]) = *(($3 + [8]))
	CALL eosio_assert([1], [496])
	CALL memcpy((($5 + [80]) | [8]), ($5 + [95]), [1])
	CALL db_update_i64(*(($3 + [16])), (int_64)0, ($5 + [80]), [9])
	$2 = ($5 + [16])
	if ( (uint_64)($1 <= *($2)) ){ goto $label$3 }
	*($2) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$3
	CALL _ZN11walexchange13order_manager16try_clear_bucketEm($0, *($3))
	
.LABEL $label$2
	$2 = *($5 + [24])
	if ( ($2 == 0) ){ goto $label$1 }
	$4 = ($5 + [28])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $738($3)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($5 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$1
	$2 = *($5 + [64])
	if ( ($2 == 0) ){ goto $label$8 }
	$4 = ($5 + [68])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$12 }
	CALL $738($3)
	
.LABEL $label$12
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($5 + [64]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $2
	
.LABEL $label$9
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$8
	*([0] + [4]) = ($5 + [96])
}

int_32 .FUNC snprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($4 + [12]) = $3
	$3 = CALL vsnprintf($0, $1, $2, $3)
	*([0] + [4]) = ($4 + [16])
	return $3
}

int_32 .FUNC vsnprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [160])
	*([0] + [4]) = $4
	$5 = [-1]
	*($4 + [148]) = ( ($1 + [-1]) ? [0] : $1 )
	$0 = ( $0 ? ($4 + [158]) : $1 )
	*($4 + [144]) = $0
	*(($4 = CALL memset($4, [0], [144])) + [36]) = [107]
	*($4 + [75]) = [255]
	*($4 + [76]) = [-1]
	*($4 + [44]) = ($4 + [159])
	*($4 + [84]) = ($4 + [144])
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	*($0) = [0]
	$5 = CALL vfprintf($4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*(CALL __errno_location()) = [75]
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [160])
	return $5
}

int_64 .FUNC fabs (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

int_64 .FUNC scalbn (float_64 $0, int_32 $1)
{
	int_32 $2
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	$2 = ($1 + [-1023])
	if ( ((int_32)$2 < (int_32)[1024]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	$2 = ($1 + [969])
	if ( ((int_32)$2 > (int_32)[-1023]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = $2
	goto $label$1 
	
.LABEL $label$2
	$1 = $2
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

int_64 .FUNC pow (float_64 $0, float_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	float_64 $10
	int_64 $11
	float_64 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	int_32 $19
	float_64 $20
	float_64 $21
	$21 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $4)
	$4 = (CASTING int_64)(float_64 $1)
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	$8 = ($5) & [2147483647]
	if ( (($8) | $6) == 0) ){ goto $label$1 }
	$11 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$11 >> (uint_64)(int_64)32))
	$3 = (CASTING uint_32)(uint_64 $11)
	if ( $3 ){ goto $label$2 }
	if ( ((int_32)$2 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 & [2147483647])
	if ( ((uint_32)$7 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$3 != (int_32)[0]) & ((int_32)$7 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$8 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$19 = [0]
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$19 = [2]
	if ( ((uint_32)$8 > (uint_32)[1128267775]) ){ goto $label$8 }
	$19 = [0]
	if ( ($8 <= [1072693248]) ){ goto $label$8 }
	$9 = uint_32($8 >> [20])
	if ( ((int_32)($9 + [-1023]) < (int_32)[21]) ){ goto $label$7 }
	$19 = ([1075] - $9)
	$9 = uint_32($6 >> $19)
	$19 = ( ([2] - ($9 & [1])) ? [0] : ((int_32)($9 << $19) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$19 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $9)
	$19 = uint_32($8 >> $6)
	$19 = ( ([2] - ($19 & [1])) ? [0] : ((int_32)($19 << $6) == (int_32)$8) )
	
.LABEL $label$6
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($7 + [-1072693248]) | $3) == 0) ){ goto $label$1 }
	if ( ($7 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$5 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL sqrt($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$21 = CALL fabs($0)
	if ( $3 ){ goto $label$18 }
	if ( ($7 == 0) ){ goto $label$17 }
	if ( ((int_32)($7 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$17 }
	
.LABEL $label$18
	$10 = (float_64)1
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$14 }
	if ( ((int_32)$19 == (int_32)[1]) ){ goto $label$16 }
	if ( $19 ){ goto $label$14 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$17
	$21 = ( ((float_64)(float_64)1 / (float_64)$21) ? $21 : ((int_32)$5 < (int_32)[0]) )
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($19 | ($7 + [-1072693248])) == 0) ){ goto $label$15 }
	return ( !(float_64)$21 ? $21 : ((int_32)$19 == (int_32)[1]) )
	
.LABEL $label$16
	$10 = (float_64)-1
	goto $label$14 
	
.LABEL $label$15
	$1 = (float_64)
	return ((float_64)$1($21 - $21)) / (float_64)$1)
	
.LABEL $label$14
	if ( ($8 <= [1105199105]) ){ goto $label$28 }
	if ( ($8 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$7 > (uint_32)[1072693247]) ){ goto $label$24 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 < (int_32)[0]) )
	
.LABEL $label$28
	$8 = [0]
	if ( ((uint_32)$7 > (uint_32)[1048575]) ){ goto $label$26 }
	$21 = ((float_64)$21 * (float_64)(float_64)9007199254740992)
	$7 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $21) >> (uint_64)(int_64)32))
	$5 = [-53]
	goto $label$25 
	
.LABEL $label$27
	if ( ((uint_32)$7 > (uint_32)[1072693246]) ){ goto $label$23 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 < (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$26
	$5 = [0]
	
.LABEL $label$25
	$6 = ($7 & [1048575])
	$2 = ($6 | [1072693248])
	$5 = ((int_32($7 >> [20]) + $5) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$21 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$22 }
	$8 = [1]
	goto $label$21 
	
.LABEL $label$24
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 > (int_32)[0]) )
	
.LABEL $label$23
	if ( ($7 <= [1072693249]) ){ goto $label$20 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 > (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$22
	$2 = ($2 + [-1048576])
	$5 = ($5 + [1])
	
.LABEL $label$21
	$13 = ((float_64)*(($6 + [20512])) + (float_64)((float_64)((float_64)(float_64))($21 - (float_64))($0 - $14)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$21 = ((float_64)((float_64)$12 * (float_64)$0) + (float_64)((float_64)$21 * (float_64)(float_64))($13 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $17))
	$0 = ((float_64)$21 * (float_64)$21)
	$16 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($2 >> [1]) | [536870912]) + ($8 << [18])) + [524288])) << (int_64)32))
	$12 = ((float_64)$15 * (float_64)(float_64))((float_64))($14 - ((float_64)$0 * (float_64)$16)) - ((float_64)$0 * (float_64)(float_64))($12 - (float_64))($16 - $13)
	$13 = ((float_64)((float_64)((float_64)$21 + (float_64)$0) * (float_64)$12))
	$17 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$17 + (float_64)(float_64)3) + (float_64)$13)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$15 = ((float_64)(float_64)1 / (float_64)((float_64)$13 + (float_64)$12))
	$13 = *(($6 + [20496]))
	$12 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $21) & (int_64)4294967295)))
	$14 = (float_64)
	$21 = ((float_64)$14($12 - $13)) * (float_64)$15
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $21)) & (int_64)-4294967296)
	$14 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$14 & (int_64)-4294967296))))
	$12 = ((float_64)$0 + (float_64)$21)
	$6 = ($8 << [3])
	$18 = *(($6 + [20528]))
	$20 = (CASTING float_64)(int_32 $5)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$20 + (float_64)((float_64)$18 + (float_64)((float_64)$12)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$20 = (float_64))((float_64))((float_64))($0 + (float_64)$13)))))) & (int_64)-4294967296))) - $20) - $18) - $12)
	goto $label$19 
	
.LABEL $label$20
	$13 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$21 + (float_64)(float_64)-1)
	$21 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$21 + (float_64)$13))) & (int_64)-4294967296)
	$20 = (float_64))($0) - $21)
	
.LABEL $label$19
	$1 = ((float_64)((float_64)(float_64))($1 - $12) * (float_64)$0) + (float_64)((float_64)(float_64))($13 - $20) * (float_64)$1
	$12 = (CASTING float_64)(int_64 ((int_64)$4 & (int_64)-4294967296))
	$21 = ((float_64)$12 * (float_64)$0)
	$0 = ((float_64)$21 + (float_64)$1)
	$4 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 $4)))
	$2 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ((int_32)$2) < (int_32)[1083179008]) ){ goto $label$33 }
	if ( ((($2 + [-1083179008]) | $8) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$33
	if ( (($2 & [2147482624]) <= [1083231232]) ){ goto $label$30 }
	if ( ((($2 + [1064252416]) | $8) == 0) ){ goto $label$31 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$32
	$0 = (float_64)
	$12 = ((float_64)$1 + (float_64)(float_64)8.008566259537294e-17)
	if ( (((float_64)$12 <= (float_64)$0($0 - $21))) | (((float_64)$12 != (float_64)$12) | ((float_64)$0 != (float_64)$0))) ){ goto $label$30 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$31
	$0 = (float_64)
	if ( ((((float_64)$1 > (float_64)$0($0 - $21))) | (((float_64)$1 != (float_64)$1) | ((float_64)$0 != (float_64)$0))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$8 = ($2 & [2147483647])
	if ( ($8 <= [1071644673]) ){ goto $label$35 }
	$6 = (uint_32($8 >> [20]) & [2047])
	$8 = (uint_32([1048576] >> (uint_32($8 >> [20]) + [-1022])) + $2)
	$5 = uint_32((($8 & [1048575]) | [1048576]) >> ([1043] - $6))
	$2 = ( ([0] - $5) ? $5 : ((int_32)$2 < (int_32)[0]) )
	$21 = (float_64))($21 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($8 & ((int_32)uint_32([1048575] >> ($6 + [-1023])) ^ (int_32)[-1]))) << (int_64)32)))
	goto $label$34 
	
.LABEL $label$35
	$2 = [0]
	
.LABEL $label$34
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$21 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $21)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$1 + (float_64)$21)) & (int_64)-4294967296))
	$12 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$12 + (float_64)$21 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = (float_64)
	$4 = (CASTING int_64)(float_64 $1((float_64)1 - (float_64))((float_64))(((float_64)((float_64)$1)) * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)
	$8 = ((CASTING uint_32)(uint_64 (uint_64)$4 - ((float_64)$0($21 - (float_64))($1 - $12))) + (float_64)((float_64)$1 * (float_64)$0))
	if ( ((int_32)int_32($8 - $1))))) >> (uint_64)(int_64)32)) + ($2 << [20]))) >> [20]) <= (int_32)[0]) ){ goto $label$36 }
	return ((float_64)$10 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$4 & (int_64)4294967295))))
	
.LABEL $label$36
	return ((float_64)$10 * (float_64)CALL scalbn($1, $2))
	
.LABEL $label$29
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $21
}

int_64 .FUNC sqrt (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$7 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($7) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$2 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$7 <= (int_32)[0]) ){ goto $label$6 }
	$8 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $8) ){ goto $label$4 }
	$8 = [1]
	$9 = $2
	goto $label$5 
	
.LABEL $label$6
	if ( ((($7 & [2147483647]) | $2) == 0) ){ goto $label$3 }
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = [1]
	
.LOOP $label$7:
	$8 = ($8 + [-21])
	$7 = uint_32($2 >> [11])
	$9 = ($2 << [21])
	$2 = $9
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$5
	$5 = [0]
	if ( ($7 & [1048576]) ){ goto $label$8 }
	$5 = [0]
	
.LOOP $label$9:
	$5 = ($5 + [1])
	$7 = ($7 << [1])
	if ( (($7 & [1048576]) == 0) ){ goto $label$9 }
	
.LABEL $label$8
	$2 = ($9 << $5)
	$8 = ($8 - $5)
	$7 = (uint_32($9 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$7 = (($7 & [1048575]) | [1048576])
	$10 = ($8 + [-1023])
	if ( (($10 & [1]) == 0) ){ goto $label$10 }
	$7 = (($7 << [1]) | uint_32($2 >> [31]))
	$2 = ($2 << [1])
	
.LABEL $label$10
	$7 = (uint_32($2 >> [31]) | ($7 << [1]))
	$5 = ($2 << [1])
	$4 = [0]
	$9 = [2097152]
	$8 = [0]
	
.LOOP $label$11:
	$6 = $5
	$5 = ($9 + $8)
	if ( ((int_32)$7 < (int_32)$5) ){ goto $label$12 }
	$4 = ($9 + $4)
	$7 = ($7 - $5)
	$8 = ($5 + $9)
	
.LABEL $label$12
	$7 = (($7 << [1]) | (uint_32($2 >> [30]) & [1]))
	$5 = ($6 << [1])
	$2 = $6
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$11 }
	$3 = uint_32($10 >> [1])
	$9 = [-2147483648]
	$10 = [0]
	$2 = [0]
	
.LOOP $label$13:
	$6 = ($2 + $9)
	if ( ((int_32)$7 > (int_32)$8) ){ goto $label$15 }
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$14 }
	if ( ($5 <= $6) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = (($7 - $8) + ( [-1] ? [0] : ($5 <= $6) ))
	$2 = ($6 + $9)
	$8 = ((((int_32)$6 < (int_32)[0]) & ((int_32)$2 > (int_32)[-1])) + $8)
	$10 = ($10 + $9)
	$5 = ($5 - $6)
	
.LABEL $label$14
	$7 = (uint_32($5 >> [31]) | ($7 << [1]))
	$5 = ($5 << [1])
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$13 }
	if ( (($5 | $7) == 0) ){ goto $label$16 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$17 }
	$10 = (($10 & [1]) + $10)
	goto $label$16 
	
.LABEL $label$17
	$4 = ($4 + [1])
	$10 = [0]
	
.LABEL $label$16
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($3 << [20]) + int_32($4 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($4 << [31])))))
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
}

int_32 .FUNC tolower (int_32 $0)
{
	return ( ($0 | [32]) ? $0 : (($0 + [-65]) <= [26]) )
}

int_32 .FUNC __errno_location ()
{
	return [20488]
}

int_64 .FUNC _ZN11walexchange24contract_account_manager29get_or_create_digital_accountEy (int_32 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [128])
	*([0] + [4]) = $8
	*($8 + [64]) = $1
	*($8 + [56]) = *($0)
	CALL eosio_assert(CALL $333(($8 + [56]), $1), [9376])
	*(($8 + [48])) = [0]
	*($8 + [32]) = (int_64)-1
	*($8 + [40]) = (int_64)0
	$1 = *($0)
	*($8 + [16]) = $1
	*($8 + [24]) = $1
	*($8 + [52]) = [0]
	*($8 + [8]) = ($8 + [16])
	CALL $15(($8 + [80]), ($8 + [8]), ($8 + [64]))
	$4 = *($8 + [84])
	if ( ($4 == 0) ){ goto $label$2 }
	if ( ((int_64)*($8 + [64]) != (int_64)*($4 + [8])) ){ goto $label$2 }
	if ( $4 ){ goto $label$1 }
	
.LABEL $label$2
	$1 = *($0)
	CALL eosio_assert(((int_64)*($8 + [16]) == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([48])) + [32]) = ($8 + [16])
	*($0 + [24]) = [0]
	$2 = *($8 + [64])
	*($0) = $2
	*($0 + [8]) = $2
	CALL eosio_assert([1], [496])
	CALL memcpy(($8 + [80]), $0, [8])
	CALL eosio_assert([1], [496])
	$3 = ($0 + [8])
	CALL memcpy((($8 + [80]) | [8]), $3, [8])
	CALL eosio_assert([1], [496])
	$5 = ($0 + [16])
	CALL memcpy((($8 + [80]) + [16]), $5, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($8 + [80]) + [24]), ($0 + [24]), [1])
	$2 = *($0)
	$4 = (($8 + [16]) + [8])
	*($0 + [36]) = CALL db_store_i64(*($4), (int_64)-2067973376676056576, $1, $2, ($8 + [80]), [25])
	$6 = (($8 + [16]) + [16])
	if ( (uint_64)($2 <= *($6)) ){ goto $label$3 }
	*($6) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$2 = *($0)
	$7 = *($4)
	*($8 + [120]) = *($3)
	*($0 + [40]) = CALL db_idx64_store($7, (int_64)-2067973376676056576, $1, $2, ($8 + [120]))
	$2 = *($0)
	$7 = *($4)
	*($8 + [120]) = *($5)
	*($0 + [44]) = CALL db_idx64_store($7, (int_64)-2067973376676056575, $1, $2, ($8 + [120]))
	*($8 + [120]) = $0
	$1 = *($0)
	*($8 + [80]) = $1
	$3 = *(($0 + [36]))
	*($8 + [76]) = $3
	$5 = ($8 + [44])
	$4 = *($5)
	if ( ((uint_32)$4 >= (uint_32)*(($8 + [48]))) ){ goto $label$5 }
	*($4 + [8]) = $1
	*($4 + [16]) = $3
	*($8 + [120]) = [0]
	*($4) = $0
	*($5) = ($4 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $14(($8 + [40]), ($8 + [120]), ($8 + [80]), ($8 + [76]))
	
.LABEL $label$4
	$0 = *($8 + [120])
	*($8 + [120]) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL $738($0)
	
.LABEL $label$6
	$4 = ($8 + [64])
	
.LABEL $label$1
	$1 = *($4)
	$3 = *($8 + [40])
	if ( ($3 == 0) ){ goto $label$7 }
	$5 = ($8 + [44])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $738($4)
	
.LABEL $label$11
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($8 + [40]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $3
	
.LABEL $label$8
	*($5) = $3
	CALL $738($0)
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [128])
	return $1
}

int_32 .FUNC $778 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0 + [28])
	$6 = (*($0 + [20]) - $4)
	$3 = *($0 + [84])
	$5 = *($3 + [4])
	$6 = ( $5 ? $6 : ($5 <= $6) )
	if ( ($6 == 0) ){ goto $label$1 }
	CALL memcpy(*($3), $4, $6)
	*($3) = (*($3) + $6)
	$5 = (*($5) - $6)
	*(($5 = ($3 + [4]))) = $5
	
.LABEL $label$1
	$6 = *($3)
	$5 = ( $5 ? $2 : ($5 <= $2) )
	if ( ($5 == 0) ){ goto $label$2 }
	CALL memcpy($6, $1, $5)
	$6 = (*($3) + $5)
	*($3) = $6
	*(($3 = ($3 + [4]))) = (*($3) - $5)
	
.LABEL $label$2
	*($6) = [0]
	$3 = *($0 + [44])
	*(($0 + [28])) = $3
	*(($0 + [20])) = $3
	return $2
}

int_32 .FUNC vfprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [288])
	*([0] + [4]) = $7
	*($7 + [284]) = $2
	$6 = [0]
	CALL memset(($7 + [240]), [0], [40])
	*($7 + [280]) = *($7 + [284])
	$2 = [-1]
	if ( ((int_32)CALL $780([0], $1, ($7 + [280]), ($7 + [80]), ($7 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL __lockfile($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) > (int_32)[0]) ){ goto $label$3 }
	*($0) = ($2 & [-33])
	
.LABEL $label$3
	$3 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	$2 = CALL $780($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	goto $label$4 
	
.LABEL $label$5
	*(($5 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($7 + [80])
	*($0 + [28]) = $7
	*($0 + [20]) = $7
	$4 = *($0 + [44])
	*($0 + [44]) = $7
	$2 = CALL $780($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	if ( ($4 == 0) ){ goto $label$4 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $4
	*($5) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$4 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $4 )
	
.LABEL $label$4
	$1 = *($0)
	*($0) = ($1 | $3)
	$1 = ($1 & [32])
	if ( ($6 == 0) ){ goto $label$6 }
	CALL __unlockfile($0)
	
.LABEL $label$6
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [288])
	return $2
}

int_32 .FUNC $174 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $177(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $175 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $176 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $177 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $170 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)5382254363837562880, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $167($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN11walexchange12wal_exchange8verifyadEyyyyN5eosio14extended_assetE (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [240])
	*([0] + [4]) = $12
	if ( CALL has_auth(*(($0 + [240]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [200])))
	
.LABEL $label$1
	*($12 + [160]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($12 + [160]), $1, [1])
	$6 = CALL _ZN11walexchange24contract_account_manager15find_account_idEy(($12 + [160]), $3)
	CALL eosio_assert(((int_64)$6 != (int_64)0), [560])
	*((($12 + [120]) + [32])) = [0]
	*($12 + [136]) = (int_64)-1
	*($12 + [144]) = (int_64)0
	$3 = *($0)
	*($12 + [120]) = $3
	*($12 + [128]) = $3
	$11 = CALL db_find_i64($3, $3, (int_64)-8524860147551202816, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$3 }
	$11 = CALL $172(($12 + [120]), $11)
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)($12 + [120])), [288])
	goto $label$2 
	
.LABEL $label$3
	$7 = *($0)
	CALL eosio_assert(((int_64)*($12 + [120]) == (int_64)CALL $fimport$16()), [432])
	*(($11 = CALL $737([32])) + [16]) = ($12 + [120])
	*($11 + [8]) = (int_64)0
	*($11) = $1
	CALL eosio_assert([1], [496])
	CALL memcpy(($12 + [80]), $11, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($12 + [80]) | [8]), ($11 + [8]), [8])
	$3 = *($11)
	$8 = CALL db_store_i64(*((($12 + [120]) + [8])), (int_64)-8524860147551202816, $7, $3, ($12 + [80]), [16])
	*($11 + [20]) = $8
	$9 = (($12 + [120]) + [16])
	if ( (uint_64)($3 <= *($9)) ){ goto $label$4 }
	*($9) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($12 + [32]) = $11
	$3 = *($11)
	*($12 + [80]) = $3
	*($12 + [176]) = $8
	$10 = ($12 + [148])
	$9 = *($10)
	if ( ((uint_32)$9 >= (uint_32)*(($12 + [152]))) ){ goto $label$6 }
	*($9 + [8]) = $3
	*($9 + [16]) = $8
	*($12 + [32]) = [0]
	*($9) = $11
	*($10) = ($9 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $173(($12 + [144]), ($12 + [32]), ($12 + [80]), ($12 + [176]))
	
.LABEL $label$5
	$9 = *($12 + [32])
	*($12 + [32]) = [0]
	if ( ($9 == 0) ){ goto $label$2 }
	CALL $738($9)
	
.LABEL $label$2
	CALL eosio_assert((uint_64)(*($11 + [8]) <= $4), [3808])
	$9 = [0]
	$7 = *($5)
	if ( ((uint_64)((int_64)$7 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$3 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$9 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$9 = [0]
	
.LABEL $label$7
	CALL eosio_assert($9, [2704])
	CALL eosio_assert(((int_64)$7 > (int_64)0), [3840])
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$15 }
	*(($12 + [112])) = [0]
	*($12 + [96]) = (int_64)-1
	*($12 + [104]) = (int_64)0
	$3 = *($0)
	*($12 + [80]) = $3
	*($12 + [88]) = $1
	$11 = [0]
	$9 = CALL db_find_i64($3, $1, (int_64)-5914951336277429760, $6)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$16 }
	$11 = CALL $174(($12 + [80]), $9)
	CALL eosio_assert(((int_32)*($11 + [8]) == (int_32)($12 + [80])), [288])
	
.LABEL $label$16
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [3872])
	$2 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($12 + [160]), $1, [1])
	$8 = *($12 + [104])
	if ( ($8 == 0) ){ goto $label$12 }
	$10 = ($12 + [108])
	$11 = *($10)
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$17:
	$11 = ($11 + [-24])
	$9 = *($11)
	*($11) = [0]
	if ( ($9 == 0) ){ goto $label$18 }
	CALL $738($9)
	
.LABEL $label$18
	if ( ((int_32)$8 != (int_32)$11) ){ goto $label$17 }
	$11 = *(($12 + [104]))
	goto $label$13 
	
.LABEL $label$15
	$2 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($12 + [160]), $2, [2])
	goto $label$12 
	
.LABEL $label$14
	$11 = $8
	
.LABEL $label$13
	*($10) = $8
	CALL $738($11)
	
.LABEL $label$12
	*((($12 + [80]) + [32])) = [0]
	*($12 + [96]) = (int_64)-1
	*($12 + [104]) = (int_64)0
	$3 = *($0)
	*($12 + [80]) = $3
	*($12 + [88]) = $3
	*($12 + [116]) = [0]
	*($12 + [72]) = ($12 + [80])
	*($12 + [40]) = *($5 + [16])
	*($12 + [32]) = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8)
	CALL $46(($12 + [176]), ($12 + [72]), ($12 + [32]))
	$11 = [0]
	$9 = *($12 + [180])
	if ( ($9 == 0) ){ goto $label$19 }
	$11 = ( $9 ? [0] : (int_64)(((int_64)((int_64)*($12 + [32]) ^ (int_64)(uint_64)*($9 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($12 + [40]) ^ (int_64)*(($9 + [16])))) == 0) )
	
.LABEL $label$19
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [1456])
	$8 = *($11)
	*((($12 + [32]) + [32])) = [0]
	*($12 + [40]) = $1
	*($12 + [48]) = (int_64)-1
	*($12 + [56]) = (int_64)0
	$3 = *($0)
	*($12 + [32]) = $3
	CALL eosio_assert(((int_64)$3 == (int_64)CALL $fimport$16()), [432])
	*(($11 = CALL $737([56])) + [40]) = ($12 + [32])
	*($11 + [8]) = $2
	*($11) = $4
	*($11 + [16]) = $6
	*($11 + [24]) = $8
	*($11 + [32]) = $7
	*($12 + [232]) = (($12 + [176]) + [36])
	*($12 + [228]) = ($12 + [176])
	*($12 + [224]) = ($12 + [176])
	CALL $175(($12 + [224]), $11)
	$1 = *($11)
	$5 = CALL db_store_i64(*($12 + [40]), (int_64)-3671300493912047616, $3, $1, ($12 + [176]), [36])
	*($11 + [44]) = $5
	if ( (uint_64)($1 <= *($12 + [48])) ){ goto $label$20 }
	*(($12 + [48])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$20
	*($12 + [224]) = $11
	$3 = *($11)
	*($12 + [176]) = $3
	*($12 + [172]) = $5
	$10 = ($12 + [60])
	$9 = *($10)
	if ( ((uint_32)$9 >= (uint_32)*(($12 + [64]))) ){ goto $label$22 }
	*($9 + [8]) = $3
	*($9 + [16]) = $5
	*($12 + [224]) = [0]
	*($9) = $11
	*($10) = ($9 + [24])
	goto $label$21 
	
.LABEL $label$22
	CALL $176(($12 + [56]), ($12 + [224]), ($12 + [176]), ($12 + [172]))
	
.LABEL $label$21
	$11 = *($12 + [224])
	*($12 + [224]) = [0]
	if ( ($11 == 0) ){ goto $label$23 }
	CALL $738($11)
	
.LABEL $label$23
	*(($12 + [24])) = [0]
	*($12 + [16]) = (int_64)0
	$11 = CALL strlen([3920])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$24 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$27 }
	*($12 + [16]) = ($11 << [1])
	$9 = (($12 + [16]) | [1])
	if ( $11 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$5 = (($11 + [16]) & [-16])
	$9 = CALL $737($5)
	*($12 + [16]) = ($5 | [1])
	*($12 + [24]) = $9
	*($12 + [20]) = $11
	
.LABEL $label$26
	CALL memcpy($9, [3920], $11)
	
.LABEL $label$25
	*(($9 + $11)) = [0]
	CALL _ZNSt3__19to_stringEm($12, $8)
	CALL $83($0, $6, ($12 + [16]), $12)
	if ( ((*($12) & [1]) == 0) ){ goto $label$28 }
	CALL $738(*($12 + [8]))
	
.LABEL $label$28
	if ( ((*($12 + [16]) & [1]) == 0) ){ goto $label$29 }
	CALL $738(*($12 + [24]))
	
.LABEL $label$29
	$0 = *($12 + [56])
	if ( ($0 == 0) ){ goto $label$30 }
	$8 = ($12 + [60])
	$11 = *($8)
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$32 }
	
.LOOP $label$33:
	$11 = ($11 + [-24])
	$9 = *($11)
	*($11) = [0]
	if ( ($9 == 0) ){ goto $label$34 }
	CALL $738($9)
	
.LABEL $label$34
	if ( ((int_32)$0 != (int_32)$11) ){ goto $label$33 }
	$11 = *(($12 + [56]))
	goto $label$31 
	
.LABEL $label$32
	$11 = $0
	
.LABEL $label$31
	*($8) = $0
	CALL $738($11)
	
.LABEL $label$30
	$0 = *($12 + [104])
	if ( ($0 == 0) ){ goto $label$35 }
	$8 = ($12 + [108])
	$11 = *($8)
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$37 }
	
.LOOP $label$38:
	$11 = ($11 + [-24])
	$9 = *($11)
	*($11) = [0]
	if ( ($9 == 0) ){ goto $label$39 }
	CALL $738($9)
	
.LABEL $label$39
	if ( ((int_32)$0 != (int_32)$11) ){ goto $label$38 }
	$11 = *(($12 + [104]))
	goto $label$36 
	
.LABEL $label$37
	$11 = $0
	
.LABEL $label$36
	*($8) = $0
	CALL $738($11)
	
.LABEL $label$35
	$0 = *($12 + [144])
	if ( ($0 == 0) ){ goto $label$40 }
	$8 = ($12 + [148])
	$11 = *($8)
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$42 }
	
.LOOP $label$43:
	$11 = ($11 + [-24])
	$9 = *($11)
	*($11) = [0]
	if ( ($9 == 0) ){ goto $label$44 }
	CALL $738($9)
	
.LABEL $label$44
	if ( ((int_32)$0 != (int_32)$11) ){ goto $label$43 }
	$11 = *(($12 + [144]))
	goto $label$41 
	
.LABEL $label$42
	$11 = $0
	
.LABEL $label$41
	*($8) = $0
	CALL $738($11)
	
.LABEL $label$40
	*([0] + [4]) = ($12 + [240])
	return (unreachable)
	
.LABEL $label$24
	CALL $739(($12 + [16]))
}

int_32 .FUNC $172 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [544])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $173(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $173 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN11walexchange12wal_exchange12verifyrelateEyyymNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy9signature (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5, int_64 $6, int_32 $7)
{
	CALL require_auth(*(($0 + [200])))
	CALL eosio_assert([0], [1376])
}

void .FUNC _ZN11walexchange12wal_exchange11verifytradeEyN5eosio15extended_symbolES2_yymxxtt9signatureyymxxttS3_yxxbxx (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4, int_64 $5, int_32 $6, int_64 $7, int_64 $8, int_32 $9, int_32 $10, int_32 $11, int_64 $12, int_64 $13, int_32 $14, int_64 $15, int_64 $16, int_32 $17, int_32 $18, int_32 $19, int_64 $20, int_64 $21, int_64 $22, int_32 $23, int_64 $24, int_64 $25)
{
	CALL require_auth(*(($0 + [200])))
	CALL eosio_assert([0], [1376])
}

void .FUNC $589 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$5 = *($4 + [16])
	if ( ((int_64)$5 != (int_64)-1) ){ goto $label$1 }
	$5 = (int_64)0
	$6 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-6434641899079037616, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $591($4, $6)
	*($9 + [4]) = [0]
	*($9) = $4
	$5 = *(*(CALL $592($9) + [4]))
	$5 = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $5
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($5 <= (int_64)-2), [2192])
	*($1) = *(($4 + [16]))
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [24]) = *(*(*($3 + [12]) + [4]))
	$3 = $10
	$4 = ($3 + [-32])
	*([0] + [4]) = $4
	CALL eosio_assert([1], [496])
	CALL memcpy($4, $1, [8])
	CALL eosio_assert([1], [496])
	$10 = ($1 + [8])
	CALL memcpy(($3 + [-24]), $10, [8])
	CALL eosio_assert([1], [496])
	$6 = ($1 + [16])
	CALL memcpy(($3 + [-16]), $6, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($3 + [-8]), ($1 + [24]), [4])
	$5 = *($1)
	*($1 + [32]) = CALL db_store_i64(*($2 + [8]), (int_64)-6434641899079037616, *(*($0 + [8])), $5, $4, [28])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$5 = *(($2 + [8]))
	$7 = *(*(($0 + [8])))
	$8 = *($1)
	*($9 + [8]) = *($6)
	*($9) = (uint_64)*($10) >> (uint_64)(int_64)8)
	*($1 + [36]) = CALL db_idx128_store($5, (int_64)-6434641899079037616, $7, $8, $9)
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $588 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*($10 + [24]) = (int_64)0
	*($10 + [8]) = *(($2 + [8]))
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx128_lowerbound(*($8), *($8 + [8]), (int_64)-6434641899079037616, $10, ($10 + [24]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [24])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [28]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$8 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-6434641899079037616, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$2 = CALL $591($4, $8)
	CALL eosio_assert(((int_32)*($2 + [28]) == (int_32)$4), [288])
	
.LABEL $label$4
	*($2 + [36]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [32])
}

void .FUNC _ZN11walexchange12wal_exchange9rmsympairEyN5eosio11symbol_typeEyS2_y (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [128])
	*([0] + [4]) = $10
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*($10 + [112]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($10 + [112]), $1, [1])
	CALL eosio_assert(CALL $fimport$46($3), [10496])
	CALL eosio_assert(CALL $fimport$46($5), [10528])
	$8 = [0]
	*(($10 + [104])) = [0]
	*($10 + [88]) = (int_64)-1
	*($10 + [96]) = (int_64)0
	$9 = *($0)
	*($10 + [72]) = $9
	*($10 + [80]) = $9
	*($10 + [108]) = [0]
	*($10 + [64]) = ($10 + [72])
	*($10 + [24]) = $5
	*($10 + [16]) = (uint_64)$4 >> (uint_64)(int_64)8)
	CALL $46(($10 + [120]), ($10 + [64]), ($10 + [16]))
	$7 = [0]
	$6 = *($10 + [124])
	if ( ($6 == 0) ){ goto $label$2 }
	$7 = ( $6 ? [0] : (int_64)(((int_64)((int_64)*($10 + [16]) ^ (int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($10 + [24]) ^ (int_64)*(($6 + [16])))) == 0) )
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [7248])
	*($10 + [24]) = $3
	*($10 + [16]) = (uint_64)$2 >> (uint_64)(int_64)8)
	CALL $46(($10 + [120]), ($10 + [64]), ($10 + [16]))
	$6 = *($10 + [124])
	if ( ($6 == 0) ){ goto $label$3 }
	$8 = ( $6 ? [0] : (int_64)(((int_64)((int_64)*($10 + [16]) ^ (int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($10 + [24]) ^ (int_64)*(($6 + [16])))) == 0) )
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [7216])
	*(($10 + [48])) = [0]
	*($10 + [40]) = (int_64)0
	*($10 + [24]) = $1
	*($10 + [32]) = (int_64)-1
	*($10 + [16]) = *($0)
	CALL $406(($10 + [8]), ($10 + [16]), ((int_64)((int_64)*($8) << (int_64)32) | (int_64)*($7)))
	CALL eosio_assert(((int_32)*($10 + [12]) != (int_32)[0]), [7280])
	$1 = *($10 + [8])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	$8 = ((int_32)$0) != (int_32)[0]
	CALL eosio_assert($8), [736])
	CALL eosio_assert($8, [784])
	$8 = CALL db_next_i64(*($0 + [68]), ($10 + [120]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	CALL $412((CASTING uint_32)(uint_64 $1), $8)
	
.LABEL $label$4
	CALL $586(($10 + [16]), $0)
	$7 = *($10 + [40])
	if ( ($7 == 0) ){ goto $label$5 }
	$6 = ($10 + [44])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$8 = *($0)
	*($0) = [0]
	if ( ($8 == 0) ){ goto $label$9 }
	CALL $738($8)
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($10 + [40]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $7
	
.LABEL $label$6
	*($6) = $7
	CALL $738($0)
	
.LABEL $label$5
	$7 = *($10 + [96])
	if ( ($7 == 0) ){ goto $label$10 }
	$6 = ($10 + [100])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$12 }
	
.LOOP $label$13:
	$0 = ($0 + [-24])
	$8 = *($0)
	*($0) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $738($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$13 }
	$0 = *(($10 + [96]))
	goto $label$11 
	
.LABEL $label$12
	$0 = $7
	
.LABEL $label$11
	*($6) = $7
	CALL $738($0)
	
.LABEL $label$10
	*([0] + [4]) = ($10 + [128])
}

int_32 .FUNC $584 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), $1, [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [10]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [12]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [58]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

void .FUNC _ZN11walexchange12wal_exchange12addoutsymmapEN5eosio11symbol_typeEyS2_y (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [176])
	*([0] + [4]) = $9
	*($9 + [128]) = $1
	*($9 + [120]) = $2
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*((($9 + [80]) + [32])) = [0]
	*($9 + [96]) = (int_64)-1
	*($9 + [104]) = (int_64)0
	$7 = *($0)
	*($9 + [80]) = $7
	*($9 + [88]) = $7
	*($9 + [116]) = [0]
	*($9 + [72]) = ($9 + [80])
	*($9 + [40]) = $2
	*($9 + [32]) = (uint_64)$1 >> (uint_64)(int_64)8)
	CALL $588($9, ($9 + [72]), ($9 + [32]))
	$6 = *($9 + [4])
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ((int_64)((int_64)((int_64)*($9 + [32]) ^ (int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($9 + [40]) ^ (int_64)*($6 + [16]))) != (int_64)0)
	goto $label$2 
	
.LABEL $label$3
	$6 = [1]
	
.LABEL $label$2
	CALL eosio_assert($6, [10624])
	*((($9 + [32]) + [32])) = [0]
	*($9 + [48]) = (int_64)-1
	*($9 + [56]) = (int_64)0
	$2 = *($0)
	*($9 + [32]) = $2
	*($9 + [40]) = $2
	*($9 + [68]) = [0]
	*($9 + [24]) = ($9 + [32])
	*($9 + [8]) = $4
	*($9) = (uint_64)$3 >> (uint_64)(int_64)8)
	CALL $46(($9 + [144]), ($9 + [24]), $9)
	$6 = *($9 + [148])
	if ( ($6 == 0) ){ goto $label$6 }
	if ( ((int_64)(((int_64)((int_64)*($9) ^ (int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($9 + [8]) ^ (int_64)*(($6 + [16])))) == 0) == 0) ){ goto $label$5 }
	$2 = *($9 + [144])
	*($9 + [16]) = $2
	$6 = ((uint_64)$2 > (uint_64)(int_64)4294967295)
	goto $label$4 
	
.LABEL $label$6
	$6 = [0]
	*($9 + [20]) = [0]
	*($9 + [16]) = ($9 + [24])
	goto $label$4 
	
.LABEL $label$5
	$6 = [0]
	*($9 + [20]) = [0]
	*($9 + [16]) = ($9 + [24])
	
.LABEL $label$4
	CALL eosio_assert($6, [10656])
	$2 = *($0)
	*($9 + [4]) = ($9 + [128])
	*($9) = ($9 + [80])
	*($9 + [8]) = ($9 + [120])
	*($9 + [12]) = ($9 + [16])
	*($9 + [168]) = $2
	CALL eosio_assert(((int_64)*($9 + [80]) == (int_64)CALL $fimport$16()), [432])
	*($9 + [148]) = $9
	*($9 + [144]) = ($9 + [80])
	*($9 + [152]) = ($9 + [168])
	*(($0 = CALL $737([40])) + [28]) = ($9 + [80])
	CALL $589(($9 + [144]), $0)
	*($9 + [160]) = $0
	$2 = *($0)
	*($9 + [144]) = $2
	$5 = *($0 + [32])
	*($9 + [140]) = $5
	$8 = ($9 + [108])
	$6 = *($8)
	if ( ((uint_32)$6 >= (uint_32)*(($9 + [112]))) ){ goto $label$8 }
	*($6 + [8]) = $2
	*($6 + [16]) = $5
	*($9 + [160]) = [0]
	*($6) = $0
	*($8) = ($6 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $590(($9 + [104]), ($9 + [160]), ($9 + [144]), ($9 + [140]))
	
.LABEL $label$7
	$0 = *($9 + [160])
	*($9 + [160]) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	CALL $738($0)
	
.LABEL $label$9
	$5 = *($9 + [56])
	if ( ($5 == 0) ){ goto $label$10 }
	$8 = ($9 + [60])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$12 }
	
.LOOP $label$13:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $738($6)
	
.LABEL $label$14
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$13 }
	$0 = *(($9 + [56]))
	goto $label$11 
	
.LABEL $label$12
	$0 = $5
	
.LABEL $label$11
	*($8) = $5
	CALL $738($0)
	
.LABEL $label$10
	$5 = *($9 + [104])
	if ( ($5 == 0) ){ goto $label$15 }
	$8 = ($9 + [108])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$17 }
	
.LOOP $label$18:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$19 }
	CALL $738($6)
	
.LABEL $label$19
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$18 }
	$0 = *(($9 + [104]))
	goto $label$16 
	
.LABEL $label$17
	$0 = $5
	
.LABEL $label$16
	*($8) = $5
	CALL $738($0)
	
.LABEL $label$15
	*([0] + [4]) = ($9 + [176])
}

void .FUNC $586 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = ((int_64)((int_64)*($1) << (int_64)32) | (int_64)*($1 + [4]))
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	$4 = *($8)
	if ( ((int_64)((int_64)((int_64)*($4) << (int_64)32) | (int_64)*($4 + [4])) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*(($1 + [68])))
}

void .FUNC _ZN11walexchange12wal_exchange10addsympairEyyN5eosio11symbol_typeEyS2_ytyt (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6, int_32 $7, int_64 $8, int_32 $9)
{
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [208])
	*([0] + [4]) = $12
	*($12 + [170]) = $7
	*($12 + [160]) = $8
	*($12 + [158]) = $9
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	*($12 + [144]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($12 + [144]), $2, [1])
	CALL eosio_assert(CALL $fimport$46($4), [10496])
	CALL eosio_assert(CALL $fimport$46($6), [10528])
	$7 = [0]
	*(($12 + [136])) = [0]
	*($12 + [120]) = (int_64)-1
	*($12 + [128]) = (int_64)0
	$8 = *($0)
	*($12 + [104]) = $8
	*($12 + [112]) = $8
	*($12 + [140]) = [0]
	*($12 + [96]) = ($12 + [104])
	*($12 + [40]) = $6
	*($12 + [32]) = (uint_64)$5 >> (uint_64)(int_64)8)
	CALL $46($12, ($12 + [96]), ($12 + [32]))
	$10 = *($12 + [4])
	if ( ($10 == 0) ){ goto $label$5 }
	if ( ((int_64)(((int_64)((int_64)*($12 + [32]) ^ (int_64)(uint_64)*($10 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($12 + [40]) ^ (int_64)*(($10 + [16])))) == 0) == 0) ){ goto $label$4 }
	$6 = *($12)
	*($12 + [88]) = $6
	$7 = (CASTING uint_32)(uint_64 (uint_64)$6 >> (uint_64)(int_64)32)
	$10 = ((int_32)$7) != (int_32)[0])
	goto $label$2 
	
.LABEL $label$5
	*($12 + [92]) = [0]
	*($12 + [88]) = ($12 + [96])
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	*($12 + [92]) = [0]
	*($12 + [88]) = ($12 + [96])
	
.LABEL $label$3
	$10 = [0]
	
.LABEL $label$2
	CALL eosio_assert($10, [7248])
	*($12 + [40]) = $4
	*($12 + [32]) = (uint_64)$3 >> (uint_64)(int_64)8)
	CALL $46($12, ($12 + [96]), ($12 + [32]))
	$10 = *($12 + [4])
	if ( ($10 == 0) ){ goto $label$9 }
	if ( ((int_64)(((int_64)((int_64)*($12 + [32]) ^ (int_64)(uint_64)*($10 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($12 + [40]) ^ (int_64)*(($10 + [16])))) == 0) == 0) ){ goto $label$8 }
	$4 = *($12)
	*($12 + [80]) = $4
	$11 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	$10 = ((int_32)$11) != (int_32)[0])
	goto $label$6 
	
.LABEL $label$9
	$11 = [0]
	*($12 + [84]) = [0]
	*($12 + [80]) = ($12 + [96])
	goto $label$7 
	
.LABEL $label$8
	$11 = [0]
	*($12 + [84]) = [0]
	*($12 + [80]) = ($12 + [96])
	
.LABEL $label$7
	$10 = [0]
	
.LABEL $label$6
	CALL eosio_assert($10, [7216])
	CALL eosio_assert(($9 <= [10000]), [10576])
	*(($10 = ($12 + [64]))) = [0]
	*($12 + [56]) = (int_64)0
	*($12 + [40]) = $2
	*($12 + [48]) = (int_64)-1
	*($12 + [32]) = *($0)
	$2 = *($7)
	$4 = *($11)
	CALL prints([10608])
	$2 = ((int_64)$2 | (int_64)((int_64)$4 << (int_64)32))
	CALL printui($2)
	CALL $406(($12 + [24]), ($12 + [32]), $2)
	$9 = *($12 + [28])
	if ( ($9 == 0) ){ goto $label$12 }
	*($12 + [4]) = ($12 + [160])
	*($12) = ($12 + [170])
	*($12 + [8]) = ($12 + [88])
	*($12 + [12]) = ($12 + [158])
	CALL eosio_assert([1], [1328])
	CALL $583(($12 + [32]), $9, $12)
	$7 = *($12 + [56])
	if ( $7 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$2 = *($0)
	*($12 + [4]) = ($12 + [88])
	*($12) = ($12 + [80])
	*($12 + [8]) = ($12 + [170])
	*($12 + [12]) = ($12 + [160])
	*($12 + [16]) = ($12 + [158])
	*($12 + [200]) = $2
	CALL eosio_assert(((int_64)*($12 + [32]) == (int_64)CALL $fimport$16()), [432])
	*($12 + [180]) = $12
	*($12 + [176]) = ($12 + [32])
	*($12 + [184]) = ($12 + [200])
	*(($0 = CALL $737([80])) + [64]) = ($12 + [32])
	CALL $582(($12 + [176]), $0)
	*($12 + [192]) = $0
	$2 = ((int_64)((int_64)*($0) << (int_64)32) | (int_64)*($0 + [4]))
	*($12 + [176]) = $2
	$7 = *($0 + [68])
	*($12 + [172]) = $7
	$11 = ($12 + [60])
	$9 = *($11)
	if ( ((uint_32)$9 >= (uint_32)*($10)) ){ goto $label$14 }
	*($9 + [8]) = $2
	*($9 + [16]) = $7
	*($12 + [192]) = [0]
	*($9) = $0
	*($11) = ($9 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $414(($12 + [56]), ($12 + [192]), ($12 + [176]), ($12 + [172]))
	
.LABEL $label$13
	$0 = *($12 + [192])
	*($12 + [192]) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	CALL $738($0)
	
.LABEL $label$15
	$7 = *($12 + [56])
	if ( ($7 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$10 = ($12 + [60])
	$0 = *($10)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$17 }
	
.LOOP $label$18:
	$0 = ($0 + [-24])
	$9 = *($0)
	*($0) = [0]
	if ( ($9 == 0) ){ goto $label$19 }
	CALL $738($9)
	
.LABEL $label$19
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$18 }
	$0 = *(($12 + [56]))
	goto $label$16 
	
.LABEL $label$17
	$0 = $7
	
.LABEL $label$16
	*($10) = $7
	CALL $738($0)
	
.LABEL $label$10
	$7 = *($12 + [128])
	if ( ($7 == 0) ){ goto $label$20 }
	$10 = ($12 + [132])
	$0 = *($10)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$22 }
	
.LOOP $label$23:
	$0 = ($0 + [-24])
	$9 = *($0)
	*($0) = [0]
	if ( ($9 == 0) ){ goto $label$24 }
	CALL $738($9)
	
.LABEL $label$24
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$23 }
	$0 = *(($12 + [128]))
	goto $label$21 
	
.LABEL $label$22
	$0 = $7
	
.LABEL $label$21
	*($10) = $7
	CALL $738($0)
	
.LABEL $label$20
	*([0] + [4]) = ($12 + [208])
}

void .FUNC _ZN11walexchange12wal_exchange10settradeidEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*($8 + [40]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($8 + [40]), $1, [1])
	*(($8 + [32])) = [0]
	*($8 + [16]) = (int_64)-1
	*($8 + [24]) = (int_64)0
	$5 = *($0)
	*($8) = $5
	*($8 + [8]) = $5
	$4 = CALL db_find_i64($5, $5, (int_64)-8524860147551202816, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$5 }
	$0 = CALL $172($8, $4)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)$8), [288])
	CALL eosio_assert([1], [1328])
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)$8), [848])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$16()), [896])
	*($0 + [8]) = $2
	$5 = *($0)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($8 + [64]), $0, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($8 + [64]) | [8]), ($0 + [8]), [8])
	CALL db_update_i64(*($0 + [20]), (int_64)0, ($8 + [64]), [16])
	$0 = ($8 + [16])
	if ( (uint_64)($5 <= *($0)) ){ goto $label$4 }
	*($0) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$3 = *($8 + [24])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$6 = *($0)
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([32])) + [16]) = $8
	*($0 + [8]) = $2
	*($0) = $1
	CALL eosio_assert([1], [496])
	CALL memcpy(($8 + [64]), $0, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($8 + [64]) | [8]), ($0 + [8]), [8])
	$5 = *($0)
	$3 = CALL db_store_i64(*(($8 + [8])), (int_64)-8524860147551202816, $6, $5, ($8 + [64]), [16])
	*($0 + [20]) = $3
	$4 = ($8 + [16])
	if ( (uint_64)($5 <= *($4)) ){ goto $label$6 }
	*($4) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($8 + [56]) = $0
	$5 = *($0)
	*($8 + [64]) = $5
	*($8 + [52]) = $3
	$7 = ($8 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($8 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $3
	*($8 + [56]) = [0]
	*($4) = $0
	*($7) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $173(($8 + [24]), ($8 + [56]), ($8 + [64]), ($8 + [52]))
	
.LABEL $label$7
	$0 = *($8 + [56])
	*($8 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	CALL $738($0)
	
.LABEL $label$4
	$3 = *($8 + [24])
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = ($8 + [28])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $738($4)
	
.LABEL $label$12
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($8 + [24]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $3
	
.LABEL $label$9
	*($7) = $3
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [80])
}

void .FUNC $583 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	float_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [896])
	*($1 + [8]) = *(*($2))
	$3 = *($1 + [4])
	$4 = *($1)
	*($1 + [24]) = (Rounds 0)(((float_64)CALL pow((float_64)10, (CASTING float_64)(uint_32 *(*($2)))) * (float_64)(float_64)999999))
	$3 = ((int_64)$3 | (int_64)((int_64)$4 << (int_64)32))
	$4 = *(*($2 + [4]))
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$2 }
	$5 = (CASTING float_64)(uint_64 $4)
	goto $label$1 
	
.LABEL $label$2
	$5 = ((float_64)CALL pow((float_64)10, (CASTING float_64)(uint_64 *(*(*($2 + [8]) + [4]) + [8]))) * (float_64)(float_64)0.1)
	
.LABEL $label$1
	*($1 + [48]) = (Rounds 0)($5)
	*($1 + [56]) = *(*($2 + [12]))
	*($1 + [58]) = *(*($2 + [12]))
	CALL eosio_assert(((int_64)$3 == (int_64)((int_64)((int_64)*($1) << (int_64)32) | (int_64)*(($1 + [4])))), [960])
	$7 = $7
	$2 = ($7 + [-64])
	*([0] + [4]) = $2
	*($6 + [4]) = $2
	*($6) = $2
	*($6 + [8]) = ($7 + [-6])
	CALL $584($6, $1)
	CALL db_update_i64(*(($1 + [68])), (int_64)0, $2, [58])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $582 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	float_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	$3 = *($0 + [4])
	*($1) = *(*(*($3) + [4]))
	$2 = *($0)
	*($1 + [4]) = *(*(*($3 + [4]) + [4]))
	$5 = *(*($3 + [8]))
	*($1 + [10]) = [1]
	*($1 + [8]) = $5
	*($1 + [12]) = [1]
	*($1 + [16]) = (int_64)1
	$6 = CALL pow((float_64)10, (CASTING float_64)(uint_32 *(*($3 + [8]))))
	*($1 + [32]) = (int_64)1
	*($1 + [24]) = (Rounds 0)(((float_64)$6 * (float_64)(float_64)999999))
	*($1 + [40]) = (Rounds 0)(((float_64)CALL pow((float_64)10, (CASTING float_64)(uint_64 *(*(*($3) + [4]) + [8]))) * (float_64)(float_64)9999999))
	$4 = *(*($3 + [12]))
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$2 }
	$6 = (CASTING float_64)(uint_64 $4)
	goto $label$1 
	
.LABEL $label$2
	$6 = ((float_64)CALL pow((float_64)10, (CASTING float_64)(uint_64 *(*(*(($3 + [4])) + [4]) + [8]))) * (float_64)(float_64)0.1)
	
.LABEL $label$1
	*($1 + [48]) = (Rounds 0)($6)
	*($1 + [56]) = *(*($3 + [16]))
	*($1 + [58]) = *(*($3 + [16]))
	$8 = $8
	$3 = ($8 + [-64])
	*([0] + [4]) = $3
	*($7 + [4]) = $3
	*($7) = $3
	*($7 + [8]) = ($8 + [-6])
	CALL $584($7, $1)
	$4 = ((int_64)((int_64)*($1) << (int_64)32) | (int_64)*(($1 + [4])))
	*($1 + [68]) = CALL db_store_i64(*($2 + [8]), (int_64)-4060986520122310656, *(*($0 + [8])), $4, $3, [58])
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $629 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [32])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = ($8 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	CALL read_action_data($8, $1)
	
.LABEL $label$1
	*($10 + [16]) = (int_64)0
	*($10 + [8]) = (int_64)0
	*($10 + [24]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [544])
	CALL memcpy(($10 + [8]), $8, [8])
	$6 = ($1 & [-8])
	CALL eosio_assert(((int_32)$6 != (int_32)[8]), [544])
	$7 = (($10 + [8]) + [8])
	CALL memcpy($7, ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[16]), [544])
	$6 = (($10 + [8]) + [16])
	CALL memcpy($6, ($8 + [16]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($6)
	$4 = *($7)
	$3 = *($10 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$9 = *((*($1) + $9))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $5), (int_64 $9))
	*([0] + [4]) = ($10 + [32])
	return [1]
}

void .FUNC _ZN11walexchange13order_manager16try_clear_bucketEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [96])
	*([0] + [4]) = $6
	*($6 + [64]) = (int_64)-1
	*($6 + [72]) = [0]
	$3 = *($0)
	*($6 + [48]) = $3
	$4 = *($0 + [8])
	*($6 + [56]) = $4
	*(($6 + [76])) = [0]
	*(($6 + [80])) = [0]
	$2 = CALL db_find_i64($3, $4, (int_64)4508390629029445632, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $35(($6 + [48]), $2)
	CALL eosio_assert(((int_32)*($2 + [12]) == (int_32)($6 + [48])), [288])
	if ( *($2 + [4]) ){ goto $label$1 }
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$3 = *($0)
	*($6 + [8]) = $3
	*($6 + [16]) = $3
	if ( ((uint_32)*(CALL $34(($6 + [8]), *(($0 + [8])), [704]) + [8]) <= (uint_32)$1) ){ goto $label$2 }
	CALL eosio_assert(*($2 + [8]), [2672])
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$0 = CALL db_next_i64(*($2 + [16]), ($6 + [88]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	CALL $35(($6 + [48]), $0)
	
.LABEL $label$3
	CALL $36(($6 + [48]), $2)
	
.LABEL $label$2
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	$5 = ($6 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $738($1)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($6 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($5) = $2
	CALL $738($0)
	
.LABEL $label$1
	$2 = *($6 + [72])
	if ( ($2 == 0) ){ goto $label$8 }
	$5 = ($6 + [76])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $738($1)
	
.LABEL $label$12
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($6 + [72]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $2
	
.LABEL $label$9
	*($5) = $2
	CALL $738($0)
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [96])
}

void .FUNC $117 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [80]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [84]))
	$7 = *(($1 + [88]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	*(($9 + [24])) = (int_64)0
	*(($9 + [16])) = (int_64)0
	*($9 + [8]) = (int_64)0
	*($9) = (int_64)0
	$7 = CALL db_idx256_find_primary(*($0), *($0 + [8]), (int_64)-6497942558305103360, $9, [2], *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx256_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [32])
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$7 = *($0 + [4])
	$8 = ((int_32)($7 - $4) / (int_32)[12])
	$6 = ($8 + [1])
	if ( ((uint_32)$6 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[12])
	if ( ((uint_32)$3 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($3 << [1])
	$5 = ( $6 ? $5 : ($5 <= $6) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$5 * (int_32)[12]))
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$2 = *($1)
	*($1) = (int_64)0
	*(($8 = ($6 + ((int_32)$8 * (int_32)[12])))) = $2
	$1 = ($1 + [8])
	$3 = *($1)
	*($1) = [0]
	*(($8 + [8])) = $3
	$5 = ($6 + ((int_32)$5 * (int_32)[12]))
	$6 = ($8 + [12])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$6 }
	$1 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$7:
	*(($8 + [-12])) = *($7)
	$4 = ($7 + [8])
	*(($8 + [-4])) = *($4)
	*($7) = [0]
	*(($7 + [4])) = [0]
	*($4) = [0]
	$8 = ($8 + [-12])
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	$8 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$9:
	if ( ((*($7) & [1]) == 0) ){ goto $label$10 }
	CALL $738(*(($7 + [8])))
	
.LABEL $label$10
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $8) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $738($4)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _Z16symbol_to_stringy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL memset(($5 + [8]), [0], [8])
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)8)
	if ( (($2) & [255]) == 0) ){ goto $label$1 }
	*($5 + [8]) = $2
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)16)
	if ( (($2) & [255]) == 0) ){ goto $label$1 }
	*($5 + [9]) = $2
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)24)
	if ( (($2) & [255]) == 0) ){ goto $label$1 }
	*($5 + [10]) = $2
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( (($2) & [255]) == 0) ){ goto $label$1 }
	*($5 + [11]) = $2
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)40)
	if ( (($2) & [255]) == 0) ){ goto $label$1 }
	*($5 + [12]) = $2
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)
	if ( (($2) & [255]) == 0) ){ goto $label$1 }
	*($5 + [13]) = $2
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)56)
	if ( ($2) == 0) ){ goto $label$1 }
	*($5 + [14]) = $2
	
.LABEL $label$1
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$2 = CALL strlen(($5 + [8]))
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($2 << [1])
	$4 = ($0 + [1])
	if ( $2 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$3 = (($2 + [16]) & [-16])
	$4 = CALL $737($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $2
	
.LABEL $label$4
	CALL memcpy($4, ($5 + [8]), $2)
	
.LABEL $label$3
	*(($4 + $2)) = [0]
	*([0] + [4]) = ($5 + [16])
	return (unreachable)
	
.LABEL $label$2
	CALL $739($0)
}

void .FUNC $50 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-3020370205707976703, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [60]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $52($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-3020370205707976704, $5))
	CALL eosio_assert(((int_32)*($2 + [60]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [72])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $51 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$7 = [0]
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [784])
	$8 = *($0 + [4])
	$6 = *(($8 + [72]))
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$1 }
	$6 = *(*($0))
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-3020370205707976703, ($9 + [8]), *($8))
	*((*(($0 + [4])) + [72])) = $6
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($6, ($9 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$4:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$3 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [60]) == (int_32)$2), [288])
	goto $label$5 
	
.LABEL $label$6
	$7 = [0]
	$6 = CALL db_find_i64(*($2), *($2 + [8]), (int_64)-3020370205707976704, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $52($2, $6)
	CALL eosio_assert(((int_32)*($7 + [60]) == (int_32)$2), [288])
	
.LABEL $label$5
	*(($7 + [72])) = $1
	
.LABEL $label$2
	*(($0 + [4])) = $7
	*([0] + [4]) = ($9 + [16])
	return $0
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $737([80])) + [60]) = $0
	*($6 + [16]) = [0]
	CALL $53(($8 + [32]), $6)
	*($6 + [68]) = [-1]
	*($6 + [64]) = $1
	*($6 + [72]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [64])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $54(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($1, *($0 + [4]), [8])
	$6 = (*($0 + [4]) + [8])
	*($0 + [4]) = $6
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $6) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$6 = (*($0 + [4]) + [8])
	*($0 + [4]) = $6
	$3 = [0]
	$4 = (int_64)0
	$2 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($6 <= *(($0 + [8]))), [656])
	$6 = *($2)
	$5 = *($6)
	$6 = ($6 + [1])
	*($2) = $6
	$3 = ($3 & [255])
	$4 = ((int_64)(CASTING uint_64)(uint_32 (($5 & [127]) << $3)) | (int_64)$4)
	$3 = ($3 + [7])
	if ( uint_32($5 >> [7]) ){ goto $label$1 }
	*($1 + [16]) = $4
	$5 = [20]
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$2:
	CALL eosio_assert(((int_32)*($2) != (int_32)$6), [544])
	CALL memcpy(($1 + $5), *($3), [1])
	$6 = (*($3) + [1])
	*($3) = $6
	$5 = ($5 + [1])
	if ( ((int_32)$5 != (int_32)[53]) ){ goto $label$2 }
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $6) > (uint_32)[3]), [544])
	$6 = ($0 + [4])
	CALL memcpy(($1 + [56]), *($6), [4])
	*($6) = (*($6) + [4])
	return $0
}

void .FUNC $54 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = CALL strlen([1568])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($6 << [1])
	$7 = ($0 + [1])
	if ( $6 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($6 + [16]) & [-16])
	$7 = CALL $737($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $7
	*($0 + [4]) = $6
	
.LABEL $label$4
	CALL memcpy($7, [1568], $6)
	
.LABEL $label$3
	*(($7 + $6)) = [0]
	$6 = *($2)
	$7 = CALL strlen([1568])
	if ( ((int_32)$7 != (int_32)( *($2 + [4]) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$7 }
	if ( (CALL $752($2, [0], [-1], [1568], $7) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	*($8 + [24]) = [0]
	*($8 + [16]) = (int_64)0
	*(($8 + [8])) = [0]
	*($8) = (int_64)0
	$6 = CALL strlen([1728])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$10 }
	*($8) = ($6 << [1])
	$7 = ($8 | [1])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$4 = (($6 + [16]) & [-16])
	$7 = CALL $737($4)
	*($8) = ($4 | [1])
	*($8 + [8]) = $7
	*($8 + [4]) = $6
	
.LABEL $label$9
	CALL memcpy($7, [1728], $6)
	
.LABEL $label$8
	*(($7 + $6)) = [0]
	CALL _Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_RNS_6vectorIS5_NS3_IS5_EEEE($2, $8, ($8 + [16]))
	if ( ((*($8) & [1]) == 0) ){ goto $label$11 }
	CALL $738(*($8 + [8]))
	
.LABEL $label$11
	$6 = (*($8 + [20]) - *($8 + [16]))
	$3 = ((int_32)$6 / (int_32)[12])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$12 }
	$6 = [0]
	$7 = [0]
	
.LOOP $label$13:
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $745($0, [1664])
	
.LABEL $label$14
	$4 = *($2)
	$5 = ($4 & [1])
	$2 = (*($8 + [16]) + $6)
	CALL $744($0, ( *(($2 + [8])) ? ($2 + [1]) : $5 ), ( *(($2 + [4])) ? uint_32($4 >> [1]) : $5 ))
	$6 = ($6 + [12])
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)$3) ){ goto $label$13 }
	
.LABEL $label$12
	CALL prints([1744])
	$6 = *($0)
	$2 = ($6 & [1])
	CALL prints_l(( *($0 + [8]) ? ($0 + [1]) : $2 ), ( *($0 + [4]) ? uint_32($6 >> [1]) : $2 ))
	$0 = *($8 + [16])
	if ( ($0 == 0) ){ goto $label$6 }
	$6 = *($8 + [20])
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$16 }
	$2 = ([0] - $0)
	$6 = ($6 + [-12])
	
.LOOP $label$17:
	if ( ((*($6) & [1]) == 0) ){ goto $label$18 }
	CALL $738(*(($6 + [8])))
	
.LABEL $label$18
	$6 = ($6 + [-12])
	if ( ((int_32)($6 + $2) != (int_32)[-12]) ){ goto $label$17 }
	$6 = *($8 + [16])
	goto $label$15 
	
.LABEL $label$16
	$6 = $0
	
.LABEL $label$15
	*($8 + [20]) = $0
	CALL $738($6)
	
.LABEL $label$6
	*([0] + [4]) = ($8 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $739($0)
	
.LABEL $label$1
	CALL $739($8)
	(unreachable)
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = CALL $737([16])
	*($0 + [8]) = $6
	*($0) = (int_64)55834574865
	CALL memset($6, [46], [13])
	*($6 + [13]) = [0]
	$2 = ($0 + [1])
	$8 = *($1)
	$7 = [17]
	$5 = ($0 + [8])
	$6 = [12]
	
.LOOP $label$1:
	$4 = ((int_32)$6 == (int_32)[12])
	$3 = *((*([0] + [1668]) + (CASTING uint_32)(uint_64 ((int_64)( (int_64)15 ? (int_64)31 : $4 ) & (int_64)$8))))
	$1 = $2
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	$1 = *($5)
	
.LABEL $label$2
	*(($1 + $6)) = $3
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ($6 + [-1])
	$8 = (uint_64)$8 >> (uint_64)( (int_64)4 ? (int_64)5 : $4 ))
	$7 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($6 & [1])
	$6 = *($0)
	$6 = ( *(($0 + [4])) ? uint_32($6 >> [1]) : $1 )
	$7 = ( *(($0 + [8])) ? $2 : $1 )
	
.LOOP $label$5:
	if ( ($6 == 0) ){ goto $label$4 }
	$1 = ($7 + $6)
	$3 = ($6 + [-1])
	$6 = $3
	if ( ((int_32)*(($1 + [-1])) == (int_32)[46]) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	CALL $768($9, $0, [0], ($3 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$6
	CALL $742($0, [0])
	*(($0 + [8])) = *(($9 + [8]))
	*($0) = *($9)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	CALL $62($0, *($1 + [16]))
	CALL _Z16symbol_to_stringy(($6 + [8]), *($1 + [8]))
	$5 = *($6 + [8])
	$3 = ($5 & [1])
	$2 = ( *($6 + [16]) ? (($6 + [8]) | [1]) : $3 )
	$3 = *($0 + [4])
	$5 = ( *($6 + [12]) ? uint_32($5 >> [1]) : $3 )
	$4 = *($0 + [8])
	if ( ((uint_32)($4 + $5) <= (uint_32)$3) ){ goto $label$2 }
	$4 = (($3 << [1]) + $5)
	*(($0 + [4])) = $4
	$3 = CALL realloc(*($0), $4)
	*($0) = $3
	$4 = *(($0 + [8]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *($0)
	
.LABEL $label$1
	CALL memcpy(($3 + $4), $2, $5)
	$5 = (*($4) + $5)
	*(($4 = ($0 + [8]))) = $5
	if ( ((*($6 + [8]) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*((($6 + [8]) + [8])))
	$5 = *($4)
	
.LABEL $label$3
	*($6 + [24]) = *($1)
	$1 = ($0 + [4])
	$4 = *($1)
	if ( ((uint_32)($5 + [8]) <= (uint_32)$4) ){ goto $label$5 }
	$5 = (($4 << [1]) + [8])
	*($1) = $5
	$1 = CALL realloc(*($0), $5)
	*($0) = $1
	$5 = *(($0 + [8]))
	goto $label$4 
	
.LABEL $label$5
	$1 = *($0)
	
.LABEL $label$4
	CALL memcpy(($1 + $5), ($6 + [24]), [8])
	*(($0 = ($0 + [8]))) = (*($0) + [8])
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC $453 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [512])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [36]) = $4
	*($7 + [32]) = $4
	*($7 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($5 = CALL $737([56])) + [40]) = $0
	CALL $469(($7 + [32]), $5)
	*($5 + [44]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)5031813144072871104
	$6 = *($5 + [44])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)5031813144072871104
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $462(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
	return $5
}

void .FUNC _ZN11walexchange12wal_exchange11batchundeleEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_32 $20
	$20 = (*([0] + [4]) - [272])
	*([0] + [4]) = $20
	CALL require_auth(*(($0 + [200])))
	*((($20 + [208]) + [32])) = [0]
	*($20 + [224]) = (int_64)-1
	*($20 + [232]) = (int_64)0
	$16 = *($0)
	*($20 + [208]) = $16
	*($20 + [216]) = $16
	$14 = [0]
	$7 = CALL db_find_i64($16, $16, (int_64)5031813144072871104, (int_64)5031813144072871104)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$14 = CALL $453(($20 + [208]), $7)
	CALL eosio_assert(((int_32)*($14 + [40]) == (int_32)($20 + [208])), [288])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [672])
	CALL memcpy(($20 + [168]), $14, [40])
	*((($20 + [128]) + [32])) = [0]
	*($20 + [144]) = (int_64)-1
	*($20 + [152]) = (int_64)0
	$16 = *($0)
	*($20 + [128]) = $16
	*($20 + [136]) = $16
	*($20 + [164]) = [0]
	*($20 + [120]) = ($20 + [128])
	*($20 + [72]) = (int_64)0
	CALL $454(($20 + [112]), ($20 + [120]), ($20 + [72]))
	CALL eosio_assert(((int_32)*($20 + [116]) != (int_32)[0]), [8432])
	CALL eosio_assert((*(*($20 + [116]) + [8]) <= (CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$17() / (uint_64)(int_64)1000000))), [8448])
	CALL _ZN11walexchange11rex_manager10try_refundEy($14, *(*($20 + [116])))
	*((($20 + [72]) + [32])) = [0]
	*($20 + [80]) = $1
	*($20 + [88]) = (int_64)-1
	*($20 + [96]) = (int_64)0
	*($20 + [72]) = *($0)
	*(($20 + [110])) = [0]
	*($20 + [108]) = [0]
	*($20 + [64]) = ($20 + [72])
	$4 = *($20 + [200])
	*($20 + [16]) = (int_64)0
	CALL $456(($20 + [56]), ($20 + [64]), ($20 + [16]))
	$14 = *($20 + [60])
	if ( ($14 == 0) ){ goto $label$2 }
	$3 = ($20 + [44])
	$2 = ($20 + [8])
	$9 = ($0 + [200])
	$10 = ($20 + [40])
	$11 = ($20 + [48])
	$12 = ($20 + [36])
	$13 = ($20 + [52])
	
.LOOP $label$3:
	if ( ((uint_32)*($14 + [72]) > (uint_32)*(*($20 + [116]) + [8])) ){ goto $label$2 }
	if ( ($4 == 0) ){ goto $label$2 }
	if ( (*($14 + [76]) & [255]) ){ goto $label$2 }
	CALL prints([8480])
	CALL printui(*($14))
	$5 = *($20 + [60])
	if ( ((int_64)*($5 + [56]) != (int_64)*(*($20 + [116]))) ){ goto $label$4 }
	$6 = *($9)
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [2144]
	$17 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$10 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$7 = ($7 + [165])
	goto $label$8 
	
.LABEL $label$10
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$6
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$5 }
	$8 = *($0)
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [8496]
	$19 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$16 > (uint_64)(int_64)9) ){ goto $label$16 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$7 = ($7 + [165])
	goto $label$14 
	
.LABEL $label$16
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$12
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$19 = ((int_64)$18 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$11 }
	*($2) = *($5)
	*(($7 = (($20 + [16]) + [16]))) = (int_64)0
	*((($20 + [16]) + [8])) = $19
	*($20) = $1
	*($20 + [16]) = $8
	*($10) = [0]
	$14 = CALL $737([16])
	*($7) = $14
	*($14) = $6
	*($14 + [8]) = $17
	*($3) = [0]
	*($11) = [0]
	$14 = ($14 + [16])
	*($10) = $14
	*($12) = $14
	*($13) = [0]
	CALL $88($3, [16])
	$14 = *($3)
	$5 = (*($11) - $14)
	CALL eosio_assert(((int_32)$5 > (int_32)[7]), [496])
	CALL memcpy($14, $20, [8])
	CALL eosio_assert(((int_32)($5 + [-8]) > (int_32)[7]), [496])
	CALL memcpy(($14 + [8]), $2, [8])
	CALL $87(($20 + [256]), ($20 + [16]))
	$14 = *($20 + [256])
	CALL send_inline($14, (*($20 + [260]) - $14))
	$14 = *($20 + [256])
	if ( ($14 == 0) ){ goto $label$17 }
	*($20 + [260]) = $14
	CALL $738($14)
	
.LABEL $label$17
	$14 = *($3)
	if ( ($14 == 0) ){ goto $label$18 }
	*($11) = $14
	CALL $738($14)
	
.LABEL $label$18
	$14 = *($7)
	if ( ($14 == 0) ){ goto $label$19 }
	*($12) = $14
	CALL $738($14)
	
.LABEL $label$19
	$4 = ($4 + [-1])
	
.LABEL $label$4
	CALL $457(($20 + [56]))
	$14 = *($20 + [60])
	if ( $14 ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$4 != (int_32)*(($20 + [200]))) ){ goto $label$20 }
	$7 = (*(*($20 + [116]) + [8]) + *($20 + [184]))
	$14 = (*($20 + [192]) + [1])
	$14 = ( $14 ? $7 : ($7 <= $14) )
	if ( ((uint_32)$14 <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$21 }
	if ( ((uint_32)$14 >= (uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [262800])) ){ goto $label$21 }
	$14 = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [262800])
	
.LABEL $label$21
	*(($3 = ($20 + [192]))) = $14
	CALL $458(($20 + [208]), ($20 + [168]), *($0))
	$14 = *($20 + [116])
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [1328])
	$4 = *($20 + [120])
	CALL eosio_assert(((int_32)*($14 + [16]) == (int_32)$4), [848])
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$16()), [896])
	$7 = ($14 + [8])
	$16 = *($7)
	*($7) = *($3)
	*($20 + [248]) = $16
	$16 = *($14)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($20 + [16]), $14, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($20 + [16]) | [8]), $7, [4])
	*($20) = *($14 + [12])
	CALL eosio_assert([1], [496])
	CALL memcpy((($20 + [16]) | [12]), $20, [1])
	CALL db_update_i64(*($14 + [20]), (int_64)0, ($20 + [16]), [13])
	if ( (uint_64)($16 <= *($4 + [16])) ){ goto $label$22 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$16 + (int_64)1) : ((uint_64)$16 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	*($20) = *($7)
	if ( (CALL memcmp(($20 + [248]), $20, [8]) == 0) ){ goto $label$20 }
	$7 = ($14 + [24])
	$14 = *($7)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$23 }
	$14 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)5031813150555504640, ($20 + [256]), $16)
	*($7) = $14
	
.LABEL $label$23
	CALL db_idx64_update($14, (int_64)0, $20)
	
.LABEL $label$20
	$4 = *($20 + [96])
	if ( ($4 == 0) ){ goto $label$24 }
	$3 = ($20 + [100])
	$14 = *($3)
	if ( ((int_32)$14 == (int_32)$4) ){ goto $label$26 }
	
.LOOP $label$27:
	$14 = ($14 + [-24])
	$7 = *($14)
	*($14) = [0]
	if ( ($7 == 0) ){ goto $label$28 }
	CALL $738($7)
	
.LABEL $label$28
	if ( ((int_32)$4 != (int_32)$14) ){ goto $label$27 }
	$14 = *(($20 + [96]))
	goto $label$25 
	
.LABEL $label$26
	$14 = $4
	
.LABEL $label$25
	*($3) = $4
	CALL $738($14)
	
.LABEL $label$24
	$4 = *($20 + [152])
	if ( ($4 == 0) ){ goto $label$29 }
	$3 = ($20 + [156])
	$14 = *($3)
	if ( ((int_32)$14 == (int_32)$4) ){ goto $label$31 }
	
.LOOP $label$32:
	$14 = ($14 + [-24])
	$7 = *($14)
	*($14) = [0]
	if ( ($7 == 0) ){ goto $label$33 }
	CALL $738($7)
	
.LABEL $label$33
	if ( ((int_32)$4 != (int_32)$14) ){ goto $label$32 }
	$14 = *(($20 + [152]))
	goto $label$30 
	
.LABEL $label$31
	$14 = $4
	
.LABEL $label$30
	*($3) = $4
	CALL $738($14)
	
.LABEL $label$29
	$4 = *($20 + [232])
	if ( ($4 == 0) ){ goto $label$34 }
	$3 = ($20 + [236])
	$14 = *($3)
	if ( ((int_32)$14 == (int_32)$4) ){ goto $label$36 }
	
.LOOP $label$37:
	$14 = ($14 + [-24])
	$7 = *($14)
	*($14) = [0]
	if ( ($7 == 0) ){ goto $label$38 }
	CALL $738($7)
	
.LABEL $label$38
	if ( ((int_32)$4 != (int_32)$14) ){ goto $label$37 }
	$14 = *(($20 + [232]))
	goto $label$35 
	
.LABEL $label$36
	$14 = $4
	
.LABEL $label$35
	*($3) = $4
	CALL $738($14)
	
.LABEL $label$34
	*([0] + [4]) = ($20 + [272])
}

void .FUNC _ZN11walexchange12wal_exchange8delegateEyy (int_32 $0, int_64 $1, int_64 $2)
{
	CALL eosio_assert([0], [8384])
}

void .FUNC _ZN11walexchange12wal_exchange6add_idEyyt (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	if ( ((int_32)$3 > (int_32)[97]) ){ goto $label$21 }
	if ( ((int_32)$3 == (int_32)[3]) ){ goto $label$20 }
	if ( ((int_32)$3 != (int_32)[4]) ){ goto $label$18 }
	*(($5 = (($8 + [8]) + [32]))) = [0]
	*($8 + [16]) = $1
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$1 = *($0)
	*($8 + [8]) = $1
	*($8 + [44]) = [0]
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$16()), [432])
	*(($3 = CALL $737([32])) + [16]) = ($8 + [8])
	*($3) = $2
	*($3 + [8]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert([1], [496])
	CALL memcpy(($8 + [48]), $3, [8])
	CALL eosio_assert([1], [496])
	$0 = ($3 + [8])
	CALL memcpy((($8 + [48]) | [8]), $0, [4])
	$2 = *($3)
	*($3 + [20]) = CALL db_store_i64(*($8 + [16]), (int_64)-4157661138084954112, $1, $2, ($8 + [48]), [12])
	if ( (uint_64)($2 <= *($8 + [24])) ){ goto $label$22 }
	*(($8 + [24])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	$2 = *($3)
	$6 = *((($8 + [8]) + [8]))
	*($8 + [72]) = *($0)
	*($3 + [24]) = CALL db_idx64_store($6, (int_64)-4157661138084954112, $1, $2, ($8 + [72]))
	*($8 + [72]) = $3
	$2 = *($3)
	*($8 + [48]) = $2
	$4 = *(($3 + [20]))
	*($8 + [68]) = $4
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((uint_32)$0 >= (uint_32)*($5)) ){ goto $label$17 }
	*($0 + [8]) = $2
	*($0 + [16]) = $4
	*($8 + [72]) = [0]
	*($0) = $3
	*($7) = ($0 + [24])
	goto $label$16 
	
.LABEL $label$21
	if ( ((int_32)$3 == (int_32)[98]) ){ goto $label$19 }
	if ( ((int_32)$3 != (int_32)[99]) ){ goto $label$18 }
	*(($5 = (($8 + [8]) + [32]))) = [0]
	*($8 + [16]) = $1
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$1 = *($0)
	*($8 + [8]) = $1
	*($8 + [44]) = [0]
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$16()), [432])
	*(($3 = CALL $737([32])) + [16]) = ($8 + [8])
	*($3) = $2
	*($3 + [8]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert([1], [496])
	CALL memcpy(($8 + [48]), $3, [8])
	CALL eosio_assert([1], [496])
	$0 = ($3 + [8])
	CALL memcpy((($8 + [48]) | [8]), $0, [4])
	$2 = *($3)
	*($3 + [20]) = CALL db_store_i64(*($8 + [16]), (int_64)-3102536759586062336, $1, $2, ($8 + [48]), [12])
	if ( (uint_64)($2 <= *($8 + [24])) ){ goto $label$23 }
	*(($8 + [24])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$23
	$2 = *($3)
	$6 = *((($8 + [8]) + [8]))
	*($8 + [72]) = *($0)
	*($3 + [24]) = CALL db_idx64_store($6, (int_64)-3102536759586062336, $1, $2, ($8 + [72]))
	*($8 + [72]) = $3
	$2 = *($3)
	*($8 + [48]) = $2
	$4 = *(($3 + [20]))
	*($8 + [68]) = $4
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((uint_32)$0 >= (uint_32)*($5)) ){ goto $label$15 }
	*($0 + [8]) = $2
	*($0 + [16]) = $4
	*($8 + [72]) = [0]
	*($0) = $3
	*($7) = ($0 + [24])
	goto $label$14 
	
.LABEL $label$20
	*(($5 = (($8 + [8]) + [32]))) = [0]
	*($8 + [16]) = $1
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$1 = *($0)
	*($8 + [8]) = $1
	*($8 + [44]) = [0]
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$16()), [432])
	*(($3 = CALL $737([32])) + [16]) = ($8 + [8])
	*($3) = $2
	*($3 + [8]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert([1], [496])
	CALL memcpy(($8 + [48]), $3, [8])
	CALL eosio_assert([1], [496])
	$0 = ($3 + [8])
	CALL memcpy((($8 + [48]) | [8]), $0, [4])
	$2 = *($3)
	*($3 + [20]) = CALL db_store_i64(*($8 + [16]), (int_64)-2039333636189044736, $1, $2, ($8 + [48]), [12])
	if ( (uint_64)($2 <= *($8 + [24])) ){ goto $label$24 }
	*(($8 + [24])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$24
	$2 = *($3)
	$6 = *((($8 + [8]) + [8]))
	*($8 + [72]) = *($0)
	*($3 + [24]) = CALL db_idx64_store($6, (int_64)-2039333636189044736, $1, $2, ($8 + [72]))
	*($8 + [72]) = $3
	$2 = *($3)
	*($8 + [48]) = $2
	$4 = *(($3 + [20]))
	*($8 + [68]) = $4
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((uint_32)$0 >= (uint_32)*($5)) ){ goto $label$13 }
	*($0 + [8]) = $2
	*($0 + [16]) = $4
	*($8 + [72]) = [0]
	*($0) = $3
	*($7) = ($0 + [24])
	goto $label$12 
	
.LABEL $label$19
	*(($5 = (($8 + [8]) + [32]))) = [0]
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$1 = *($0)
	*($8 + [8]) = $1
	*($8 + [16]) = $1
	*($8 + [44]) = [0]
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$16()), [432])
	*(($3 = CALL $737([32])) + [16]) = ($8 + [8])
	*($3) = $2
	*($3 + [8]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert([1], [496])
	CALL memcpy(($8 + [48]), $3, [8])
	CALL eosio_assert([1], [496])
	$0 = ($3 + [8])
	CALL memcpy((($8 + [48]) | [8]), $0, [4])
	$2 = *($3)
	*($3 + [20]) = CALL db_store_i64(*($8 + [16]), (int_64)5447363896250204160, $1, $2, ($8 + [48]), [12])
	if ( (uint_64)($2 <= *($8 + [24])) ){ goto $label$25 }
	*(($8 + [24])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$25
	$2 = *($3)
	$6 = *((($8 + [8]) + [8]))
	*($8 + [72]) = *($0)
	*($3 + [24]) = CALL db_idx64_store($6, (int_64)5447363896250204160, $1, $2, ($8 + [72]))
	*($8 + [72]) = $3
	$2 = *($3)
	*($8 + [48]) = $2
	$4 = *(($3 + [20]))
	*($8 + [68]) = $4
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((uint_32)$0 >= (uint_32)*($5)) ){ goto $label$11 }
	*($0 + [8]) = $2
	*($0 + [16]) = $4
	*($8 + [72]) = [0]
	*($0) = $3
	*($7) = ($0 + [24])
	goto $label$10 
	
.LABEL $label$18
	CALL eosio_assert([0], [3088])
	goto $label$1 
	
.LABEL $label$17
	CALL $132(($8 + [32]), ($8 + [72]), ($8 + [48]), ($8 + [68]))
	
.LABEL $label$16
	$3 = *($8 + [72])
	*($8 + [72]) = [0]
	if ( ($3 == 0) ){ goto $label$26 }
	CALL $738($3)
	
.LABEL $label$26
	$5 = *($8 + [32])
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = ($8 + [36])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$27:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$28 }
	CALL $738($0)
	
.LABEL $label$28
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$27 }
	$3 = *(($8 + [32]))
	goto $label$8 
	
.LABEL $label$15
	CALL $133(($8 + [32]), ($8 + [72]), ($8 + [48]), ($8 + [68]))
	
.LABEL $label$14
	$3 = *($8 + [72])
	*($8 + [72]) = [0]
	if ( ($3 == 0) ){ goto $label$29 }
	CALL $738($3)
	
.LABEL $label$29
	$5 = *($8 + [32])
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = ($8 + [36])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$30:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$31 }
	CALL $738($0)
	
.LABEL $label$31
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$30 }
	$3 = *(($8 + [32]))
	goto $label$6 
	
.LABEL $label$13
	CALL $131(($8 + [32]), ($8 + [72]), ($8 + [48]), ($8 + [68]))
	
.LABEL $label$12
	$3 = *($8 + [72])
	*($8 + [72]) = [0]
	if ( ($3 == 0) ){ goto $label$32 }
	CALL $738($3)
	
.LABEL $label$32
	$5 = *($8 + [32])
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = ($8 + [36])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	
.LOOP $label$33:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$34 }
	CALL $738($0)
	
.LABEL $label$34
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$33 }
	$3 = *(($8 + [32]))
	goto $label$4 
	
.LABEL $label$11
	CALL $134(($8 + [32]), ($8 + [72]), ($8 + [48]), ($8 + [68]))
	
.LABEL $label$10
	$3 = *($8 + [72])
	*($8 + [72]) = [0]
	if ( ($3 == 0) ){ goto $label$35 }
	CALL $738($3)
	
.LABEL $label$35
	$5 = *($8 + [32])
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = ($8 + [36])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$36:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$37 }
	CALL $738($0)
	
.LABEL $label$37
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$36 }
	$3 = *(($8 + [32]))
	goto $label$2 
	
.LABEL $label$9
	$3 = $5
	
.LABEL $label$8
	*($4) = $5
	CALL $738($3)
	goto $label$1 
	
.LABEL $label$7
	$3 = $5
	
.LABEL $label$6
	*($4) = $5
	CALL $738($3)
	goto $label$1 
	
.LABEL $label$5
	$3 = $5
	
.LABEL $label$4
	*($4) = $5
	CALL $738($3)
	goto $label$1 
	
.LABEL $label$3
	$3 = $5
	
.LABEL $label$2
	*($4) = $5
	CALL $738($3)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [80])
}

int_32 .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [656])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $88($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [544])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $131 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[3]), [544])
	CALL memcpy($6, $7, [4])
	CALL eosio_assert(((uint_32)($4 + [-4]) > (uint_32)[7]), [544])
	CALL memcpy(($6 + [8]), ($7 + [4]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $106(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $132 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $104 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $133 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $723 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [544])
	CALL memcpy(($2 + [16]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [544])
	CALL memcpy(($2 + [17]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [20]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	*($5 + [8]) = $2
	CALL $724(($5 + [8]), $1)
	*([0] + [4]) = ($5 + [16])
}

void .FUNC _ZN11walexchange11rex_manager10try_refundEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [112])
	*([0] + [4]) = $12
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [8112]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$7 > (uint_64)(int_64)4) ){ goto $label$6 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	*(($12 + [88])) = [0]
	*($12 + [72]) = (int_64)-1
	*($12 + [80]) = (int_64)0
	*($12 + [64]) = $1
	*($12 + [56]) = $8
	$5 = CALL db_find_i64($8, $1, (int_64)-5001342326447013888, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$7 }
	$5 = CALL $465(($12 + [56]), $5)
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)($12 + [56])), [288])
	if ( ((uint_32)(*($5 + [8]) + [259200]) > (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$7 }
	CALL prints([8512])
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [2144]
	$8 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$7 > (uint_64)(int_64)5) ){ goto $label$13 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$2 = ($2 + [165])
	goto $label$11 
	
.LABEL $label$13
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$9
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$8 }
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [8112]
	$10 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$7 > (uint_64)(int_64)4) ){ goto $label$19 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$2 = ($2 + [165])
	goto $label$17 
	
.LABEL $label$19
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$15
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$14 }
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [8544]
	$11 = (int_64)0
	
.LOOP $label$20:
	if ( ((uint_64)$7 > (uint_64)(int_64)5) ){ goto $label$25 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$2 = ($2 + [165])
	goto $label$23 
	
.LABEL $label$25
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$22
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$21
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$11 = ((int_64)$9 | (int_64)$11)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$20 }
	*($12 + [8]) = $1
	*($12 + [24]) = $11
	*($12 + [16]) = $10
	*(($5 = CALL $737([16]))) = $1
	*($5 + [8]) = $8
	*(($2 = ($12 + [48]))) = [0]
	$3 = ($5 + [16])
	*(($12 + [40])) = $3
	*(($12 + [36])) = $3
	*($12 + [32]) = $5
	*($12 + [44]) = [0]
	*(($12 + [52])) = [0]
	CALL $88(($12 + [44]), [8])
	$5 = *($12 + [44])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [496])
	CALL memcpy($5, ($12 + [8]), [8])
	CALL $87(($12 + [96]), ($12 + [16]))
	$5 = *($12 + [96])
	CALL send_inline($5, (*($12 + [100]) - $5))
	$5 = *($12 + [96])
	if ( ($5 == 0) ){ goto $label$26 }
	*($12 + [100]) = $5
	CALL $738($5)
	
.LABEL $label$26
	$5 = *($12 + [44])
	if ( ($5 == 0) ){ goto $label$27 }
	*(($12 + [48])) = $5
	CALL $738($5)
	
.LABEL $label$27
	$5 = *($12 + [32])
	if ( ($5 == 0) ){ goto $label$7 }
	*(($12 + [36])) = $5
	CALL $738($5)
	
.LABEL $label$7
	$3 = *($12 + [80])
	if ( ($3 == 0) ){ goto $label$28 }
	$4 = ($12 + [84])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$30 }
	
.LOOP $label$31:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$32 }
	CALL $738($2)
	
.LABEL $label$32
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$31 }
	$5 = *(($12 + [80]))
	goto $label$29 
	
.LABEL $label$30
	$5 = $3
	
.LABEL $label$29
	*($4) = $3
	CALL $738($5)
	
.LABEL $label$28
	*([0] + [4]) = ($12 + [112])
}

void .FUNC $134 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $678 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [304]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [312]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [544])
	CALL memcpy(($4 + [15]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*($2 + [320]) = ((int_32)*($4 + [15]) != (int_32)[0])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [328]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [336]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $106 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $135 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $737([64])) + [52]) = $0
	*($6 + [8]) = [0]
	CALL $137(($8 + [32]), $6)
	*($6 + [56]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [56])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $138(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($1, *($0 + [4]), [8])
	$6 = (*($0 + [4]) + [8])
	*($0 + [4]) = $6
	$3 = [0]
	$4 = (int_64)0
	$2 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($6 <= *(($0 + [8]))), [656])
	$6 = *($2)
	$5 = *($6)
	$6 = ($6 + [1])
	*($2) = $6
	$3 = ($3 & [255])
	$4 = ((int_64)(CASTING uint_64)(uint_32 (($5 & [127]) << $3)) | (int_64)$4)
	$3 = ($3 + [7])
	if ( uint_32($5 >> [7]) ){ goto $label$1 }
	*($1 + [8]) = $4
	$5 = [12]
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$2:
	CALL eosio_assert(((int_32)*($2) != (int_32)$6), [544])
	CALL memcpy(($1 + $5), *($3), [1])
	$6 = (*($3) + [1])
	*($3) = $6
	$5 = ($5 + [1])
	if ( ((int_32)$5 != (int_32)[45]) ){ goto $label$2 }
	$5 = ($0 + [8])
	CALL eosio_assert(((int_32)*($5) != (int_32)$6), [544])
	$6 = ($0 + [4])
	CALL memcpy(($7 + [15]), *($6), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	*($1 + [48]) = ((int_32)*($7 + [15]) != (int_32)[0])
	CALL eosio_assert(((int_32)*($5) != (int_32)$3), [544])
	CALL memcpy(($1 + [49]), *($6), [1])
	*($6) = (*($6) + [1])
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC _ZN11walexchange12wal_exchange9resetkey2EyN5eosio10public_keyES2_b (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [224])
	*([0] + [4]) = $9
	*($9 + [203]) = $4
	CALL require_auth($1)
	*($9 + [192]) = *($0)
	$6 = CALL _ZN11walexchange24contract_account_manager25get_or_create_eos_accountEyh(($9 + [192]), $1, [0])
	*($9 + [184]) = $6
	*(($7 = ($9 + [176]))) = [0]
	*($9 + [160]) = (int_64)-1
	*($9 + [168]) = (int_64)0
	$1 = *($0)
	*($9 + [144]) = $1
	*($9 + [152]) = $1
	$4 = CALL db_find_i64($1, $1, (int_64)3607749778918490112, $6)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $136(($9 + [144]), $4)
	CALL eosio_assert(((int_32)*($4 + [52]) == (int_32)($9 + [144])), [288])
	*($9 + [88]) = $2
	*($9 + [92]) = ($9 + [203])
	CALL eosio_assert([1], [1328])
	CALL $537(($9 + [144]), $4, ($9 + [88]))
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	*($9 + [132]) = $2
	*($9 + [128]) = ($9 + [184])
	*($9 + [136]) = ($9 + [203])
	*($9 + [216]) = $1
	CALL eosio_assert(((int_64)*($9 + [144]) == (int_64)CALL $fimport$16()), [432])
	*($9 + [92]) = ($9 + [128])
	*($9 + [88]) = ($9 + [144])
	*($9 + [96]) = ($9 + [216])
	*(($4 = CALL $737([64])) + [8]) = [0]
	*($4 + [52]) = ($9 + [144])
	CALL $538(($9 + [88]), $4)
	*($9 + [208]) = $4
	$1 = *($4)
	*($9 + [88]) = $1
	$5 = *($4 + [56])
	*($9 + [204]) = $5
	$8 = ($9 + [172])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*($7)) ){ goto $label$4 }
	*($2 + [8]) = $1
	*($2 + [16]) = $5
	*($9 + [208]) = [0]
	*($2) = $4
	*($8) = ($2 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $138(($9 + [168]), ($9 + [208]), ($9 + [88]), ($9 + [204]))
	
.LABEL $label$3
	$4 = *($9 + [208])
	*($9 + [208]) = [0]
	if ( ($4 == 0) ){ goto $label$1 }
	CALL $738($4)
	
.LABEL $label$1
	CALL memset((($9 + [88]) | [4]), [0], [36])
	*($9 + [88]) = [0]
	if ( CALL $354($3, ($9 + [88])) ){ goto $label$5 }
	$1 = *($9 + [184])
	CALL memcpy(($9 + [48]), $3, [40])
	CALL memcpy(($9 + [8]), ($9 + [48]), [40])
	CALL _ZN11walexchange12wal_exchange13add_trade_keyEyN5eosio10public_keyE($0, $1, ($9 + [8]))
	
.LABEL $label$5
	$4 = *($9 + [168])
	if ( ($4 == 0) ){ goto $label$6 }
	$2 = ($9 + [172])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	CALL $738($3)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$9 }
	$0 = *(($9 + [168]))
	goto $label$7 
	
.LABEL $label$8
	$0 = $4
	
.LABEL $label$7
	*($2) = $4
	CALL $738($0)
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [224])
}

int_32 .FUNC $655 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($1 + [4])
	$8 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($9 + [24]) = (int_64)0
	*($9 + [8]) = (int_64)0
	*($9 + [36]) = $1
	*($9 + [32]) = $1
	*($9 + [40]) = ($1 + $3)
	*($9 + [48]) = ($9 + [32])
	*($9 + [56]) = $9
	CALL $661(($9 + [56]), ($9 + [48]))
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$7 = *(($9 + [24]))
	$5 = *(($9 + [8]))
	$6 = *($9 + [16])
	$4 = *($9)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$8 = *((*($1) + $8))
	
.LABEL $label$6
	CALL void $1((int_32 $4), (int_64 $5), (int_64 $6), (int_64 $7), (int_64 $8))
	*([0] + [4]) = ($9 + [64])
	return [1]
}

int_32 .FUNC $654 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8 + [24]) = [0]
	*($8 + [32]) = (int_64)0
	*($8 + [40]) = [0]
	*($8 + [52]) = $1
	*($8 + [48]) = $1
	*($8 + [56]) = ($1 + $3)
	*($8 + [64]) = ($8 + [48])
	*($8 + [72]) = ($8 + [8])
	CALL $662(($8 + [72]), ($8 + [64]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *(($8 + [40]))
	$6 = *(($8 + [32]))
	$9 = *(($8 + [25]))
	$0 = *(($8 + [24]))
	$5 = *($8 + [16])
	$4 = *($8 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$7 = *((*($1) + $7))
	
.LABEL $label$5
	CALL void $1((int_32 $4), (int_64 $5), (int_64 ((int_32)($0 & [255]) != (int_32)[0])), (int_32 ((int_32)($9 & [255]) != (int_32)[0])), (int_32 $6), (int_64 ((int_32)($3 & [255]) != (int_32)[0])), (int_32 $7))
	*([0] + [4]) = ($8 + [80])
	return [1]
}

int_32 .FUNC $657 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [112])
	*([0] + [4]) = $4
	*(($5 = $4) + [76]) = $0
	*($5 + [64]) = *($1)
	*($5 + [68]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [40])) = (int_64)0
	*((($5 + [8]) + [24])) = (int_64)1398362884
	*($5 + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [2832])
	*(($5 + [56])) = [0]
	*($5 + [48]) = (int_64)0
	*($5 + [84]) = $0
	*($5 + [80]) = $0
	*($5 + [88]) = ($0 + $2)
	*($5 + [96]) = ($5 + [80])
	*($5 + [104]) = ($5 + [8])
	CALL $658(($5 + [104]), ($5 + [96]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [84]) = ($5 + [64])
	*($5 + [80]) = ($5 + [76])
	CALL $659(($5 + [80]), ($5 + [8]))
	if ( ((*($5 + [48]) & [1]) == 0) ){ goto $label$10 }
	CALL $738(*(($5 + [56])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [112])
	return [1]
}

int_32 .FUNC $656 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [144])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$7 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	$7 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$2
	CALL read_action_data($7, $1)
	
.LABEL $label$1
	CALL $660(($9 + [32]), $7, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($7)
	
.LABEL $label$5
	*((($9 + [72]) + [20])) = *(($9 + [68]))
	*(($1 = (($9 + [72]) + [16]))) = *(($9 + [64]))
	$4 = *($9 + [40])
	*(($9 + [84])) = *(($9 + [60]))
	*(($7 = (($9 + [72]) + [8]))) = *(($9 + [56]))
	$3 = *($9 + [32])
	*($9 + [72]) = *($9 + [48])
	*($9 + [76]) = *((($9 + [32]) + [20]))
	*((($9 + [96]) + [16])) = *($1)
	*((($9 + [96]) + [8])) = *($7)
	*($9 + [96]) = *($9 + [72])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$8 = *((*($1) + $8))
	
.LABEL $label$6
	$5 = *((($9 + [96]) + [16]))
	*((($9 + [120]) + [16])) = $5
	$6 = *((($9 + [96]) + [8]))
	*((($9 + [120]) + [8])) = $6
	*((($9 + [8]) + [16])) = $5
	*((($9 + [8]) + [8])) = $6
	$5 = *($9 + [96])
	*($9 + [120]) = $5
	*($9 + [8]) = $5
	CALL void $1((int_32 $3), (int_64 $4), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [144])
	return [1]
}

int_32 .FUNC $651 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($1 + [4])
	$7 = *($1)
	$6 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($9 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [16]) = [0]
	*($8 + [8]) = (int_64)0
	*($8 + [24]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [544])
	CALL memcpy(($8 + [8]), $6, [8])
	CALL eosio_assert(((int_32)($1 & [-4]) != (int_32)[8]), [544])
	$9 = (($8 + [8]) + [8])
	CALL memcpy($9, ($6 + [8]), [4])
	CALL eosio_assert(((uint_32)($1 + [-12]) > (uint_32)[7]), [544])
	$5 = ($8 + [24])
	CALL memcpy($5, ($6 + [12]), [8])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($6)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$6 = *($9)
	$3 = *($8 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$7 = *((*($1) + $7))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 $6), (int_32 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [32])
	return [1]
}

int_32 .FUNC $229 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [544])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[16]), [544])
	CALL memcpy(($6 + [16]), ($7 + [16]), [1])
	*($6 + [32]) = [-1]
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $73(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $558 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [112])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [96]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [896])
	CALL memcpy($1, *($3), [96])
	CALL eosio_assert([1], [960])
	*($4 + [104]) = ($4 + [90])
	*($4 + [100]) = $4
	*($4 + [96]) = $4
	CALL $560(($4 + [96]), $1)
	CALL db_update_i64(*($1 + [100]), $2, $4, [90])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)4982871454518345728) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)4982871454518345729
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [112])
}

void .FUNC $559 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [128])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [432])
	*(($4 = CALL $737([112])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [96]) = $1
	CALL memcpy($4, *($3), [96])
	*($7 + [120]) = (($7 + [16]) + [90])
	*($7 + [116]) = ($7 + [16])
	*($7 + [112]) = ($7 + [16])
	CALL $560(($7 + [112]), $4)
	*($4 + [100]) = CALL db_store_i64(*($1 + [8]), (int_64)4982871454518345728, $2, (int_64)4982871454518345728, ($7 + [16]), [90])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)4982871454518345728) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)4982871454518345729
	
.LABEL $label$1
	*($7 + [112]) = $4
	*($7 + [16]) = (int_64)4982871454518345728
	$5 = *($4 + [100])
	*($7 + [12]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)4982871454518345728
	*($3 + [16]) = $5
	*($7 + [112]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $561(($1 + [24]), ($7 + [112]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$1 = *($7 + [112])
	*($7 + [112]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $738($1)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [128])
}

void .FUNC $224 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$11 }
	CALL $738(*(($1 + [32])))
	
.LABEL $label$11
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $738($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $225 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $226 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $737([72])) + [56]) = $0
	CALL $227(($8 + [32]), $6)
	*($6 + [64]) = [-1]
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [60])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $228(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $555 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [48])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [896])
	$3 = *($3)
	*($1) = *($3)
	*(($1 + [16])) = *(($3 + [16]))
	*(($1 + [8])) = *(($3 + [8]))
	CALL eosio_assert([1], [960])
	*($4 + [40]) = ($4 + [21])
	*($4 + [36]) = $4
	*($4 + [32]) = $4
	CALL $557(($4 + [32]), $1)
	CALL db_update_i64(*(($1 + [28])), $2, $4, [21])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-4417020450001911808) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)-4417020450001911807
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [48])
}

void .FUNC $659 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [128])
	*([0] + [4]) = $6
	*((($6 + [40]) + [20])) = *(($1 + [36]))
	*(($4 = (($6 + [40]) + [16]))) = *(($1 + [32]))
	*(($6 + [52])) = *(($1 + [28]))
	*(($5 = (($6 + [40]) + [8]))) = *(($1 + [24]))
	*($6 + [40]) = *($1 + [16])
	*($6 + [44]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $767(($6 + [24]), ($1 + [40]))
	*((($6 + [64]) + [16])) = *($4)
	*((($6 + [64]) + [8])) = *($5)
	*($6 + [64]) = *($6 + [40])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($6 + [104]) + [16]))) = *((($6 + [64]) + [16]))
	*(($5 = (($6 + [104]) + [8]))) = *((($6 + [64]) + [8]))
	*($6 + [104]) = *($6 + [64])
	CALL $767(($6 + [88]), ($6 + [24]))
	*(($6 + [16])) = *($4)
	*(($6 + [8])) = *($5)
	*($6) = *($6 + [104])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $6), (int_32 ($6 + [88])), (int_32 $1))
	if ( ((*($6 + [88]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*($6 + [96]))
	
.LABEL $label$2
	if ( ((*($6 + [24]) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($6 + [32]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [128])
}

void .FUNC $553 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [288])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4417020450001911808, (int_64)-4417020450001911808)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $33($0, $3)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [288])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [1328])
	CALL $555($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $556($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC _ZN11walexchange12wal_exchange4initEN5eosio15extended_symbolEhhmmddmmymmxyyy (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, float_64 $6, float_64 $7, int_32 $8, int_32 $9, int_64 $10, int_32 $11, int_32 $12, int_64 $13, int_64 $14, int_64 $15, int_64 $16)
{
	int_32 $17
	int_64 $18
	int_32 $19
	int_64 $20
	int_32 $21
	int_64 $22
	int_32 $23
	$23 = (*([0] + [4]) - [288])
	*([0] + [4]) = $23
	CALL require_auth(*($0))
	$21 = [0]
	*(($23 + [240])) = [0]
	*($23 + [224]) = (int_64)-1
	*($23 + [232]) = (int_64)0
	$22 = *($0)
	*($23 + [208]) = $22
	*($23 + [216]) = $22
	$19 = [0]
	$17 = CALL db_find_i64($22, $22, (int_64)4982871454518345728, (int_64)4982871454518345728)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$1 }
	$19 = CALL $551(($23 + [208]), $17)
	CALL eosio_assert(((int_32)*($19 + [96]) == (int_32)($23 + [208])), [288])
	
.LABEL $label$1
	CALL eosio_assert(($19 == 0), [10224])
	$18 = *($1)
	$22 = (uint_64)$18 >> (uint_64)(int_64)8
	$20 = $22)
	
.LOOP $label$3:
	$19 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $20) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$20 = (uint_64)$20 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$20) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$20 = (uint_64)$20 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$20) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$21 = ($21 + [1])
	if ( ((int_32)$21 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$19 = [1]
	$21 = ($21 + [1])
	if ( ((int_32)$21 < (int_32)[7]) ){ goto $label$3 }
	
.LABEL $label$2
	CALL eosio_assert($19, [10240])
	CALL eosio_assert((((float_64)$6 >= (float_64)(float_64)0) & ((float_64)$6 < (float_64)(float_64)1)), [10272])
	CALL eosio_assert((((float_64)$7 >= (float_64)(float_64)0) & ((float_64)$7 < (float_64)(float_64)1)), [10304])
	CALL eosio_assert(CALL $fimport$46($10), [10336])
	CALL eosio_assert(CALL $fimport$46($14), [10368])
	CALL eosio_assert(CALL $fimport$46($15), [10400])
	CALL eosio_assert(CALL $fimport$46($16), [10432])
	*((($23 + [112]) + [8])) = *(($1 + [8]))
	*($23 + [128]) = $2
	*($23 + [129]) = $3
	*($23 + [112]) = *($1)
	*($23 + [132]) = $4
	*($23 + [136]) = $5
	*($23 + [144]) = $6
	*($23 + [152]) = $7
	*($23 + [160]) = $8
	*($23 + [164]) = $9
	*($23 + [168]) = $10
	*($23 + [176]) = $11
	*($23 + [180]) = $12
	*($23 + [184]) = $14
	*($23 + [192]) = $15
	*($23 + [200]) = $16
	CALL $552(($23 + [208]), ($23 + [112]), *($0))
	$21 = *(($23 + [236]))
	if ( ((int_32)$21 == (int_32)*(($23 + [232]))) ){ goto $label$7 }
	$21 = *(($21 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [96]) == (int_32)($23 + [208])), [288])
	goto $label$6 
	
.LABEL $label$7
	$21 = [0]
	$19 = CALL db_find_i64(*($23 + [208]), *((($23 + [208]) + [8])), (int_64)4982871454518345728, (int_64)4982871454518345728)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$6 }
	$21 = CALL $551(($23 + [208]), $19)
	CALL eosio_assert(((int_32)*($21 + [96]) == (int_32)($23 + [208])), [288])
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$21 != (int_32)[0]), [672])
	CALL memcpy(($23 + [112]), $21, [96])
	CALL memcpy(($0 + [128]), ($23 + [112]), [96])
	*(($23 + [144])) = [0]
	*($23 + [128]) = (int_64)-1
	*($23 + [136]) = (int_64)0
	$20 = *($0)
	*($23 + [112]) = $20
	*($23 + [120]) = $20
	$21 = CALL db_find_i64($20, $20, (int_64)-4417020450001911808, (int_64)-4417020450001911808)
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$9 }
	CALL eosio_assert(((int_32)*(CALL $33(($23 + [112]), $21) + [24]) == (int_32)($23 + [112])), [288])
	goto $label$8 
	
.LABEL $label$9
	*($23 + [72]) = (int_64)28149215661260850
	*($23 + [80]) = (int_64)7730947686500
	*($23 + [88]) = [2592000]
	*($23 + [92]) = [1]
	CALL $553(($23 + [112]), ($23 + [72]), *($0))
	
.LABEL $label$8
	*(($23 + [104])) = [0]
	*($23 + [88]) = (int_64)-1
	*($23 + [96]) = (int_64)0
	$20 = *($0)
	*($23 + [72]) = $20
	*($23 + [80]) = $20
	*($23 + [108]) = [0]
	*($23 + [64]) = ($23 + [72])
	CALL $161(($23 + [256]), ($23 + [64]), $0)
	$21 = *($23 + [260])
	if ( ($21 == 0) ){ goto $label$11 }
	if ( ((int_64)*($0) != (int_64)*($21 + [8])) ){ goto $label$11 }
	if ( $21 ){ goto $label$10 }
	
.LABEL $label$11
	$20 = *($0)
	*($23 + [60]) = $0
	*($23 + [56]) = ($23 + [72])
	*($23 + [280]) = $20
	CALL eosio_assert(((int_64)*($23 + [72]) == (int_64)CALL $fimport$16()), [432])
	*($23 + [260]) = ($23 + [56])
	*($23 + [256]) = ($23 + [72])
	*($23 + [264]) = ($23 + [280])
	*(($21 = CALL $737([32])) + [16]) = ($23 + [72])
	CALL $554(($23 + [256]), $21)
	*($23 + [272]) = $21
	$20 = *($21)
	*($23 + [256]) = $20
	$2 = *($21 + [20])
	*($23 + [252]) = $2
	$3 = ($23 + [100])
	$19 = *($3)
	if ( ((uint_32)$19 >= (uint_32)*((($23 + [72]) + [32]))) ){ goto $label$13 }
	*($19 + [8]) = $20
	*($19 + [16]) = $2
	*($23 + [272]) = [0]
	*($19) = $21
	*($3) = ($19 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $165(($23 + [96]), ($23 + [272]), ($23 + [256]), ($23 + [252]))
	
.LABEL $label$12
	$21 = *($23 + [272])
	*($23 + [272]) = [0]
	if ( ($21 == 0) ){ goto $label$10 }
	CALL $738($21)
	
.LABEL $label$10
	*($23 + [40]) = $18
	*($23 + [32]) = $13
	$20 = *($1 + [8])
	CALL eosio_assert((uint_64)(((int_64)$13 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$21 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$21 = ($21 + [1])
	if ( ((int_32)$21 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$19 = [1]
	$21 = ($21 + [1])
	if ( ((int_32)$21 < (int_32)[7]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	$19 = [0]
	
.LABEL $label$14
	CALL eosio_assert($19, [2832])
	*((($23 + [8]) + [8])) = *((($23 + [32]) + [8]))
	*($23 + [48]) = $20
	*(($23 + [24])) = $20
	*($23 + [8]) = *($23 + [32])
	CALL _ZN11walexchange12wal_exchange8setwdfeeEN5eosio14extended_assetE($0, ($23 + [8]))
	$19 = *($23 + [96])
	if ( ($19 == 0) ){ goto $label$19 }
	$1 = ($23 + [100])
	$21 = *($1)
	if ( ((int_32)$21 == (int_32)$19) ){ goto $label$21 }
	
.LOOP $label$22:
	$21 = ($21 + [-24])
	$0 = *($21)
	*($21) = [0]
	if ( ($0 == 0) ){ goto $label$23 }
	CALL $738($0)
	
.LABEL $label$23
	if ( ((int_32)$19 != (int_32)$21) ){ goto $label$22 }
	$21 = *(($23 + [96]))
	goto $label$20 
	
.LABEL $label$21
	$21 = $19
	
.LABEL $label$20
	*($1) = $19
	CALL $738($21)
	
.LABEL $label$19
	$19 = *($23 + [136])
	if ( ($19 == 0) ){ goto $label$24 }
	$1 = ($23 + [140])
	$21 = *($1)
	if ( ((int_32)$21 == (int_32)$19) ){ goto $label$26 }
	
.LOOP $label$27:
	$21 = ($21 + [-24])
	$0 = *($21)
	*($21) = [0]
	if ( ($0 == 0) ){ goto $label$28 }
	CALL $738($0)
	
.LABEL $label$28
	if ( ((int_32)$19 != (int_32)$21) ){ goto $label$27 }
	$21 = *(($23 + [136]))
	goto $label$25 
	
.LABEL $label$26
	$21 = $19
	
.LABEL $label$25
	*($1) = $19
	CALL $738($21)
	
.LABEL $label$24
	$19 = *($23 + [232])
	if ( ($19 == 0) ){ goto $label$29 }
	$1 = ($23 + [236])
	$21 = *($1)
	if ( ((int_32)$21 == (int_32)$19) ){ goto $label$31 }
	
.LOOP $label$32:
	$21 = ($21 + [-24])
	$0 = *($21)
	*($21) = [0]
	if ( ($0 == 0) ){ goto $label$33 }
	CALL $738($0)
	
.LABEL $label$33
	if ( ((int_32)$19 != (int_32)$21) ){ goto $label$32 }
	$21 = *(($23 + [232]))
	goto $label$30 
	
.LABEL $label$31
	$21 = $19
	
.LABEL $label$30
	*($1) = $19
	CALL $738($21)
	
.LABEL $label$29
	*([0] + [4]) = ($23 + [288])
}

int_32 .FUNC $223 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $101($0, ($1 + [24]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($1 + [36]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

void .FUNC $389 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $388 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $383 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$8 = *($4 + [16])
	if ( ((int_64)$8 != (int_64)-1) ){ goto $label$1 }
	$8 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)6301537847124808880, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $65($4, $5)
	*($9 + [4]) = [0]
	*($9) = $4
	$8 = ((int_64)*(*(CALL $123($9) + [4])) + (int_64)1)
	
.LABEL $label$2
	*(($4 + [16])) = $8
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($8 <= (int_64)-2), [2192])
	*($1) = *(($4 + [16]))
	$8 = *(*($3 + [4]) + [8])
	*(($4 = ($1 + [16]))) = *(*($3 + [8]))
	*($1 + [8]) = $8
	$10 = $10
	$3 = ($10 + [-32])
	*([0] + [4]) = $3
	CALL eosio_assert([1], [496])
	CALL memcpy($3, $1, [4])
	CALL eosio_assert([1], [496])
	$5 = ($1 + [8])
	CALL memcpy(($10 + [-28]), $5, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 + [-20]), $4, [8])
	$8 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)6301537847124808880, *(*($0 + [8])), $8, $3, [20])
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ((int_64)$8 + (int_64)1)
	
.LABEL $label$3
	$8 = *(($2 + [8]))
	$6 = *(*(($0 + [8])))
	$7 = *($1)
	*($9 + [8]) = *($4)
	*($9) = (uint_64)*($5) >> (uint_64)(int_64)8)
	*($1 + [32]) = CALL db_idx128_store($8, (int_64)6301537847124808880, $6, $7, $9)
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $382 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $386($0, $5)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN11walexchange12wal_exchange12addwhitecoinEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [176])
	*([0] + [4]) = $9
	*($9 + [128]) = $1
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	CALL eosio_assert(CALL $fimport$46($1), [6720])
	$5 = [0]
	$3 = *($2)
	if ( ((uint_64)((int_64)$3 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$7 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$5 = [0]
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	$5 = ((int_64)$3 > (int_64)-1)
	
.LABEL $label$2
	CALL eosio_assert($5, [2752])
	*(($9 + [120])) = [0]
	*($9 + [104]) = (int_64)-1
	*($9 + [112]) = (int_64)0
	$7 = *($0)
	*($9 + [88]) = $7
	*($9 + [96]) = $7
	*($9 + [124]) = [0]
	*($9 + [80]) = ($9 + [88])
	*($9 + [72]) = $1
	$5 = ($2 + [8])
	*($9 + [64]) = (uint_64)*($5) >> (uint_64)(int_64)8)
	CALL $46(($9 + [24]), ($9 + [80]), ($9 + [64]))
	$8 = *($9 + [28])
	if ( ($8 == 0) ){ goto $label$8 }
	if ( ((int_64)(((int_64)((int_64)*($9 + [64]) ^ (int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($9 + [72]) ^ (int_64)*(($8 + [16])))) == 0) == 0) ){ goto $label$8 }
	$7 = *(($2 + [8]))
	if ( ($8 == 0) ){ goto $label$7 }
	CALL eosio_assert(((int_64)$7 == (int_64)*($8 + [8])), [6768])
	goto $label$6 
	
.LABEL $label$8
	$7 = *($5)
	
.LABEL $label$7
	*((($9 + [24]) + [32])) = [0]
	*($9 + [40]) = (int_64)-1
	*($9 + [48]) = (int_64)0
	*($9 + [24]) = *($9 + [128])
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	*($9 + [32]) = $7)
	$8 = CALL $382(($9 + [24]), $7, [592])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*($8 + [8])), [3584])
	$7 = *($0)
	*($9 + [12]) = $2
	*($9 + [8]) = ($9 + [88])
	*($9 + [16]) = ($9 + [128])
	*($9 + [168]) = $7
	CALL eosio_assert(((int_64)*($9 + [88]) == (int_64)CALL $fimport$16()), [432])
	*($9 + [148]) = ($9 + [8])
	*($9 + [144]) = ($9 + [88])
	*($9 + [152]) = ($9 + [168])
	*(($8 = CALL $737([40])) + [16]) = (int_64)0
	*($8 + [8]) = (int_64)0
	*($8 + [24]) = ($9 + [88])
	CALL $383(($9 + [144]), $8)
	*($9 + [160]) = $8
	$7 = *($8)
	*($9 + [144]) = $7
	$4 = *($8 + [28])
	*($9 + [140]) = $4
	$6 = ($9 + [116])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*((($9 + [88]) + [32]))) ){ goto $label$10 }
	*($5 + [8]) = $7
	*($5 + [16]) = $4
	*($9 + [160]) = [0]
	*($5) = $8
	*($6) = ($5 + [24])
	goto $label$9 
	
.LABEL $label$10
	CALL $66(($9 + [112]), ($9 + [160]), ($9 + [144]), ($9 + [140]))
	
.LABEL $label$9
	$8 = *($9 + [160])
	*($9 + [160]) = [0]
	if ( ($8 == 0) ){ goto $label$11 }
	CALL $738($8)
	
.LABEL $label$11
	CALL $46(($9 + [144]), ($9 + [80]), ($9 + [64]))
	$8 = *($9 + [148])
	if ( ($8 == 0) ){ goto $label$15 }
	$7 = (int_64)0
	if ( ((int_64)((int_64)((int_64)*($9 + [64]) ^ (int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($9 + [72]) ^ (int_64)*(($8 + [16])))) != (int_64)0) ){ goto $label$14 }
	$7 = *($9 + [148])
	$4 = *($9 + [48])
	if ( $4 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$7 = (int_64)0
	
.LABEL $label$14
	$4 = *($9 + [48])
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$6 = ($9 + [52])
	$8 = *($6)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$17 }
	
.LOOP $label$18:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$19 }
	CALL $738($5)
	
.LABEL $label$19
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$18 }
	$8 = *(($9 + [48]))
	goto $label$16 
	
.LABEL $label$17
	$8 = $4
	
.LABEL $label$16
	*($6) = $4
	CALL $738($8)
	
.LABEL $label$12
	$8 = (CASTING uint_32)(uint_64 $7)
	
.LABEL $label$6
	*((($9 + [24]) + [32])) = [0]
	*($9 + [48]) = (int_64)0
	*($9 + [40]) = (int_64)-1
	$7 = *($0)
	*($9 + [24]) = $7
	*($9 + [32]) = $7
	$5 = CALL db_find_i64($7, $7, (int_64)-2063328786525143040, *($8))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$23 }
	$8 = CALL $384(($9 + [24]), $5)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [24])), [288])
	CALL eosio_assert([1], [1328])
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [24])), [848])
	CALL eosio_assert(((int_64)*($9 + [24]) == (int_64)CALL $fimport$16()), [896])
	*($8 + [8]) = *($2)
	$7 = *($8)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($9 + [144]), $8, [4])
	CALL eosio_assert([1], [496])
	CALL memcpy((($9 + [144]) | [4]), ($8 + [8]), [8])
	CALL db_update_i64(*($8 + [20]), (int_64)0, ($9 + [144]), [12])
	$8 = ($9 + [40])
	if ( (uint_64)($7 <= *($8)) ){ goto $label$22 }
	*($8) = ((int_64)$7 + (int_64)1)
	$4 = *($9 + [48])
	if ( $4 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$1 = *($0)
	CALL eosio_assert(((int_64)*($9 + [24]) == (int_64)CALL $fimport$16()), [432])
	*(($5 = CALL $737([32])) + [16]) = ($9 + [24])
	*($5) = *($8)
	*($5 + [8]) = *($2)
	CALL eosio_assert([1], [496])
	CALL memcpy(($9 + [144]), $5, [4])
	CALL eosio_assert([1], [496])
	CALL memcpy((($9 + [144]) | [4]), ($5 + [8]), [8])
	$7 = *($5)
	$4 = CALL db_store_i64(*((($9 + [24]) + [8])), (int_64)-2063328786525143040, $1, $7, ($9 + [144]), [12])
	*($5 + [20]) = $4
	$8 = ($9 + [40])
	if ( (uint_64)($7 <= *($8)) ){ goto $label$24 }
	*($8) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$24
	*($9 + [8]) = $5
	$7 = *($5)
	*($9 + [144]) = $7
	*($9 + [168]) = $4
	$2 = ($9 + [52])
	$8 = *($2)
	if ( ((uint_32)$8 >= (uint_32)*(($9 + [56]))) ){ goto $label$26 }
	*($8 + [8]) = $7
	*($8 + [16]) = $4
	*($9 + [8]) = [0]
	*($8) = $5
	*($2) = ($8 + [24])
	goto $label$25 
	
.LABEL $label$26
	CALL $385(($9 + [48]), ($9 + [8]), ($9 + [144]), ($9 + [168]))
	
.LABEL $label$25
	$8 = *($9 + [8])
	*($9 + [8]) = [0]
	if ( ($8 == 0) ){ goto $label$22 }
	CALL $738($8)
	
.LABEL $label$22
	$4 = *($9 + [48])
	if ( ($4 == 0) ){ goto $label$20 }
	
.LABEL $label$21
	$2 = ($9 + [52])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$28 }
	
.LOOP $label$29:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$30 }
	CALL $738($5)
	
.LABEL $label$30
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$29 }
	$8 = *(($9 + [48]))
	goto $label$27 
	
.LABEL $label$28
	$8 = $4
	
.LABEL $label$27
	*($2) = $4
	CALL $738($8)
	
.LABEL $label$20
	$4 = *($9 + [112])
	if ( ($4 == 0) ){ goto $label$31 }
	$2 = ($9 + [116])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$33 }
	
.LOOP $label$34:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$35 }
	CALL $738($5)
	
.LABEL $label$35
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$34 }
	$8 = *(($9 + [112]))
	goto $label$32 
	
.LABEL $label$33
	$8 = $4
	
.LABEL $label$32
	*($2) = $4
	CALL $738($8)
	
.LABEL $label$31
	*([0] + [4]) = ($9 + [176])
}

int_32 .FUNC $380 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $376(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $387 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [2768])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [2832])
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [2832])
	return $0
}

int_32 .FUNC $386 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $737([56])
	CALL $387($6)
	*($6 + [40]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [16])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [32])
	CALL $388(($8 + [32]), ($8 + [24]))
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($8 + [32]) = $5)
	$7 = *($6 + [44])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $389(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $385 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $384 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[3]), [544])
	CALL memcpy($6, $7, [4])
	CALL eosio_assert(((uint_32)($4 + [-4]) > (uint_32)[7]), [544])
	CALL memcpy(($6 + [8]), ($7 + [4]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $385(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $689 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [384])
	*([0] + [4]) = $10
	*(($10 + [188])) = *(($1 + [44]))
	*(($9 = (($10 + [176]) + [8]))) = *(($1 + [40]))
	*($10 + [176]) = *($1 + [32])
	*($10 + [180]) = *(($1 + [36]))
	$5 = *($1 + [24])
	$4 = *($1 + [16])
	$3 = *($1 + [8])
	$2 = *($1)
	$7 = *($1 + [56])
	$6 = *($1 + [48])
	CALL $767(($10 + [160]), ($1 + [64]))
	CALL memcpy(($10 + [94]), ($1 + [76]), [66])
	$8 = *($1 + [142])
	CALL memcpy(($10 + [208]), ($10 + [94]), [66])
	*((($10 + [192]) + [8])) = *($9)
	*($10 + [192]) = *($10 + [176])
	$1 = *($0 + [4])
	$9 = *($1 + [4])
	$0 = (*(*($0)) + int_32($9 >> [1]))
	$1 = *($1)
	if ( (($9 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($9 = (($10 + [368]) + [8]))) = *((($10 + [192]) + [8]))
	*($10 + [368]) = *($10 + [192])
	CALL $767(($10 + [352]), ($10 + [160]))
	CALL memcpy(($10 + [280]), ($10 + [208]), [66])
	*((($10 + [72]) + [8])) = *($9)
	*($10 + [72]) = *($10 + [368])
	CALL memcpy(($10 + [6]), ($10 + [280]), [66])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $4), (int_64 $5), (int_64 ($10 + [72])), (int_32 $6), (int_64 $7), (int_64 ($10 + [352])), (int_32 ($10 + [6])), (int_32 ($8 & [65535])), (int_32 $1))
	if ( ((*($10 + [352]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*($10 + [360]))
	
.LABEL $label$2
	if ( ((*($10 + [160]) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($10 + [168]))
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [384])
}

void .FUNC $690 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [272])
	*([0] + [4]) = $5
	$2 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [32]), *($4 + [4]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $3) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [40]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($4 + [48]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($4 + [56]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL $101(*($1), ($4 + [64]))
	*($5) = *($1)
	*($5 + [12]) = ($4 + [77])
	*($5 + [8]) = ($4 + [76])
	*($5 + [16]) = ($4 + [78])
	*($5 + [20]) = ($4 + [79])
	*($5 + [24]) = ($4 + [80])
	*($5 + [28]) = ($4 + [81])
	*($5 + [32]) = ($4 + [82])
	*($5 + [36]) = ($4 + [83])
	*($5 + [40]) = ($4 + [84])
	*($5 + [44]) = ($4 + [85])
	*($5 + [48]) = ($4 + [86])
	*($5 + [52]) = ($4 + [87])
	*($5 + [56]) = ($4 + [88])
	*($5 + [60]) = ($4 + [89])
	*($5 + [64]) = ($4 + [90])
	*($5 + [68]) = ($4 + [91])
	*($5 + [72]) = ($4 + [92])
	*($5 + [76]) = ($4 + [93])
	*($5 + [80]) = ($4 + [94])
	*($5 + [84]) = ($4 + [95])
	*($5 + [88]) = ($4 + [96])
	*($5 + [92]) = ($4 + [97])
	*($5 + [96]) = ($4 + [98])
	*($5 + [100]) = ($4 + [99])
	*($5 + [104]) = ($4 + [100])
	*($5 + [108]) = ($4 + [101])
	*($5 + [112]) = ($4 + [102])
	*($5 + [116]) = ($4 + [103])
	*($5 + [120]) = ($4 + [104])
	*($5 + [124]) = ($4 + [105])
	*($5 + [128]) = ($4 + [106])
	*($5 + [132]) = ($4 + [107])
	*($5 + [136]) = ($4 + [108])
	*($5 + [140]) = ($4 + [109])
	*($5 + [144]) = ($4 + [110])
	*($5 + [148]) = ($4 + [111])
	*($5 + [152]) = ($4 + [112])
	*($5 + [156]) = ($4 + [113])
	*($5 + [160]) = ($4 + [114])
	*($5 + [164]) = ($4 + [115])
	*($5 + [168]) = ($4 + [116])
	*($5 + [172]) = ($4 + [117])
	*($5 + [176]) = ($4 + [118])
	*($5 + [180]) = ($4 + [119])
	*($5 + [184]) = ($4 + [120])
	*($5 + [188]) = ($4 + [121])
	*($5 + [192]) = ($4 + [122])
	*($5 + [196]) = ($4 + [123])
	*($5 + [200]) = ($4 + [124])
	*($5 + [204]) = ($4 + [125])
	*($5 + [208]) = ($4 + [126])
	*($5 + [212]) = ($4 + [127])
	*($5 + [216]) = ($4 + [128])
	*($5 + [220]) = ($4 + [129])
	*($5 + [224]) = ($4 + [130])
	*($5 + [228]) = ($4 + [131])
	*($5 + [232]) = ($4 + [132])
	*($5 + [236]) = ($4 + [133])
	*($5 + [240]) = ($4 + [134])
	*($5 + [244]) = ($4 + [135])
	*($5 + [248]) = ($4 + [136])
	*($5 + [252]) = ($4 + [137])
	*($5 + [256]) = ($4 + [138])
	*($5 + [260]) = ($4 + [139])
	*($5 + [264]) = ($4 + [140])
	*($5 + [268]) = ($4 + [141])
	CALL $669(($5 + [8]), $5)
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($4 + [142]), *($1 + [4]), [2])
	*($1 + [4]) = (*($1 + [4]) + [2])
	*([0] + [4]) = ($5 + [272])
}

void .FUNC $693 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	$4 = [0]
	*($0 + [16]) = [0]
	*($0 + [24]) = (int_64)0
	*(($0 + [40])) = (int_64)0
	*(($5 = ($0 + [32]))) = (int_64)1398362884
	CALL eosio_assert([1], [2768])
	$3 = (uint_64)*($5) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [2832])
	*($0 + [48]) = (int_64)0
	*(($0 + [64])) = (int_64)0
	*(($4 = ($0 + [56]))) = (int_64)1398362884
	CALL eosio_assert([1], [2768])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [2832])
	*($0 + [72]) = (int_64)0
	*($0 + [80]) = (int_64)0
	*($0 + [88]) = (int_64)0
	*(($0 + [96])) = [0]
	CALL memset(($0 + [100]), [0], [66])
	*($0 + [168]) = (int_64)0
	*($0 + [166]) = [0]
	*(($0 + [192])) = (int_64)0
	*($0 + [176]) = (int_64)0
	*(($4 = ($0 + [184]))) = (int_64)1398362884
	CALL eosio_assert([1], [2768])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$5 = [0]
	
.LABEL $label$11
	CALL eosio_assert($5, [2832])
	*($0 + [200]) = (int_64)0
	*(($0 + [216])) = (int_64)0
	*(($4 = ($0 + [208]))) = (int_64)1398362884
	CALL eosio_assert([1], [2768])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$5 = [0]
	
.LABEL $label$16
	CALL eosio_assert($5, [2832])
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $695(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

void .FUNC _ZN11walexchange12wal_exchange8clearidsEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [128])
	*([0] + [4]) = $10
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	*($10 + [112]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($10 + [112]), $1, [1])
	*((($10 + [72]) + [32])) = [0]
	*($10 + [88]) = (int_64)-1
	*($10 + [96]) = (int_64)0
	$8 = *($0)
	*($10 + [72]) = $8
	*($10 + [80]) = $8
	$9 = [0]
	$7 = CALL db_find_i64($8, $8, (int_64)-4417020450001911808, (int_64)-4417020450001911808)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$9 = CALL $33(($10 + [72]), $7)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)($10 + [72])), [288])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [672])
	$2 = *($9)
	*((($10 + [32]) + [32])) = [0]
	*($10 + [40]) = $1
	*($10 + [48]) = (int_64)-1
	*($10 + [56]) = (int_64)0
	*($10 + [32]) = *($0)
	*($10 + [68]) = [0]
	*($10 + [24]) = ($10 + [32])
	*($10 + [120]) = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) + (int_64)4294103296) & (int_64)4294967295)
	CALL $311(($10 + [16]), ($10 + [24]), ($10 + [120]))
	*($10 + [120]) = (int_64)0
	CALL $312(($10 + [8]), ($10 + [24]), ($10 + [120]))
	$6 = ($2 == 0)
	if ( ($2 == 0) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)*($10 + [12]) == (int_32)*($10 + [20])) ){ goto $label$3 }
	$8 = *($10 + [8])
	$9 = $2
	
.LOOP $label$5:
	*($10 + [120]) = $8
	$7 = (CASTING uint_32)(uint_64 (uint_64)$8 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$7) != (int_32)[0]), [736])
	CALL $313(($10 + [120]))
	CALL $241(*($10 + [24]), $7)
	$8 = *($10 + [120])
	*($10 + [8]) = $8
	$9 = ($9 + [-1])
	$7 = ($9 & [65535])
	$6 = ($7 == 0)
	if ( ($7 == 0) ){ goto $label$3 }
	if ( ((int_32)(CASTING uint_32)(uint_64 (uint_64)$8 >> (uint_64)(int_64)32)) != (int_32)*($10 + [20])) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$9 = $2
	
.LABEL $label$3
	$3 = *($10 + [56])
	if ( ($3 == 0) ){ goto $label$6 }
	$5 = ($10 + [60])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $738($4)
	
.LABEL $label$10
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$9 }
	$7 = *(($10 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$7 = $3
	
.LABEL $label$7
	*($5) = $3
	CALL $738($7)
	
.LABEL $label$6
	if ( $6 ){ goto $label$11 }
	*(($10 + [64])) = [0]
	*($10 + [40]) = $1
	*($10 + [48]) = (int_64)-1
	*($10 + [56]) = (int_64)0
	*($10 + [32]) = *($0)
	*($10 + [68]) = [0]
	*($10 + [24]) = ($10 + [32])
	*($10 + [120]) = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) + (int_64)4294103296) & (int_64)4294967295)
	CALL $314(($10 + [16]), ($10 + [24]), ($10 + [120]))
	*($10 + [120]) = (int_64)0
	$7 = ($9 & [65535])
	$6 = ($7 == 0)
	CALL $315(($10 + [8]), ($10 + [24]), ($10 + [120]))
	if ( ($7 == 0) ){ goto $label$12 }
	if ( ((int_32)*($10 + [12]) == (int_32)*($10 + [20])) ){ goto $label$12 }
	$8 = *($10 + [8])
	
.LOOP $label$13:
	*($10 + [120]) = $8
	$7 = (CASTING uint_32)(uint_64 (uint_64)$8 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$7) != (int_32)[0]), [736])
	CALL $316(($10 + [120]))
	CALL $317(*($10 + [24]), $7)
	$8 = *($10 + [120])
	*($10 + [8]) = $8
	$9 = ($9 + [-1])
	$7 = ($9 & [65535])
	$6 = ($7 == 0)
	if ( ($7 == 0) ){ goto $label$12 }
	if ( ((int_32)(CASTING uint_32)(uint_64 (uint_64)$8 >> (uint_64)(int_64)32)) != (int_32)*($10 + [20])) ){ goto $label$13 }
	
.LABEL $label$12
	$3 = *($10 + [56])
	if ( ($3 == 0) ){ goto $label$14 }
	$5 = ($10 + [60])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$18 }
	CALL $738($4)
	
.LABEL $label$18
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$17 }
	$7 = *(($10 + [56]))
	goto $label$15 
	
.LABEL $label$16
	$7 = $3
	
.LABEL $label$15
	*($5) = $3
	CALL $738($7)
	
.LABEL $label$14
	if ( $6 ){ goto $label$11 }
	*(($10 + [64])) = [0]
	*($10 + [40]) = $1
	*($10 + [48]) = (int_64)-1
	*($10 + [56]) = (int_64)0
	*($10 + [32]) = *($0)
	*($10 + [68]) = [0]
	*($10 + [24]) = ($10 + [32])
	*($10 + [120]) = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) + (int_64)4294103296) & (int_64)4294967295)
	CALL $318(($10 + [16]), ($10 + [24]), ($10 + [120]))
	*($10 + [120]) = (int_64)0
	$7 = ($9 & [65535])
	$6 = ($7 == 0)
	CALL $319(($10 + [8]), ($10 + [24]), ($10 + [120]))
	if ( ($7 == 0) ){ goto $label$19 }
	if ( ((int_32)*($10 + [12]) == (int_32)*($10 + [20])) ){ goto $label$19 }
	$8 = *($10 + [8])
	
.LOOP $label$20:
	*($10 + [120]) = $8
	$7 = (CASTING uint_32)(uint_64 (uint_64)$8 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$7) != (int_32)[0]), [736])
	CALL $320(($10 + [120]))
	CALL $321(*($10 + [24]), $7)
	$8 = *($10 + [120])
	*($10 + [8]) = $8
	$9 = ($9 + [-1])
	$7 = ($9 & [65535])
	$6 = ($7 == 0)
	if ( ($7 == 0) ){ goto $label$19 }
	if ( ((int_32)(CASTING uint_32)(uint_64 (uint_64)$8 >> (uint_64)(int_64)32)) != (int_32)*($10 + [20])) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = *($10 + [56])
	if ( ($3 == 0) ){ goto $label$21 }
	$0 = ($10 + [60])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$23 }
	
.LOOP $label$24:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$25 }
	CALL $738($4)
	
.LABEL $label$25
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$24 }
	$7 = *(($10 + [56]))
	goto $label$22 
	
.LABEL $label$23
	$7 = $3
	
.LABEL $label$22
	*($0) = $3
	CALL $738($7)
	
.LABEL $label$21
	if ( $6 ){ goto $label$11 }
	CALL eosio_assert(((int_32)($9 & [65535]) != (int_32)$2), [5232])
	
.LABEL $label$11
	$4 = *($10 + [96])
	if ( ($4 == 0) ){ goto $label$26 }
	$6 = ($10 + [100])
	$9 = *($6)
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$28 }
	
.LOOP $label$29:
	$9 = ($9 + [-24])
	$7 = *($9)
	*($9) = [0]
	if ( ($7 == 0) ){ goto $label$30 }
	CALL $738($7)
	
.LABEL $label$30
	if ( ((int_32)$4 != (int_32)$9) ){ goto $label$29 }
	$9 = *(($10 + [96]))
	goto $label$27 
	
.LABEL $label$28
	$9 = $4
	
.LABEL $label$27
	*($6) = $4
	CALL $738($9)
	
.LABEL $label$26
	*([0] + [4]) = ($10 + [128])
}

void .FUNC $311 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_upperbound(*($8), *($8 + [8]), (int_64)-2039333636189044736, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $240($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-2039333636189044736, $5))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [24])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $312 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-2039333636189044736, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $240($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-2039333636189044736, $5))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [24])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $313 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [784])
	$6 = *($0 + [4])
	$7 = *($6 + [24])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-2039333636189044736, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [24]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$2), [288])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $240($2, CALL $fimport$19(*($2), *($2 + [8]), (int_64)-2039333636189044736, $3))
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$2), [288])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [24])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $314 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_upperbound(*($8), *($8 + [8]), (int_64)-4157661138084954112, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $323($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-4157661138084954112, $5))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [24])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $315 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-4157661138084954112, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $323($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-4157661138084954112, $5))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [24])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $316 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [784])
	$6 = *($0 + [4])
	$7 = *($6 + [24])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-4157661138084954112, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [24]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$2), [288])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $323($2, CALL $fimport$19(*($2), *($2 + [8]), (int_64)-4157661138084954112, $3))
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$2), [288])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [24])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $317 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
	$7 = *(($1 + [24]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157661138084954112, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $318 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_upperbound(*($8), *($8 + [8]), (int_64)-3102536759586062336, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $322($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-3102536759586062336, $5))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [24])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $319 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-3102536759586062336, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $322($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-3102536759586062336, $5))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [24])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $253 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [36]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$7 }
	CALL $738(*(($4 + [32])))
	
.LABEL $label$7
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$10 }
	CALL $738(*(($4 + [32])))
	
.LABEL $label$10
	CALL $738($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [40]))
}

int_32 .FUNC $252 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $737([48])
	$6 = CALL $296($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [40])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $186(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$10 }
	CALL $738(*(($4 + [32])))
	
.LABEL $label$10
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN11walexchange12wal_exchange14settle_airdropEyNS_10to_airdropE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$3 = *($2 + [32])
	$12 = ($0 + [12])
	$5 = *($12)
	if ( ($5 == 0) ){ goto $label$5 }
	$11 = ($0 + [12])
	$4 = *(($2 + [8]))
	
.LOOP $label$6:
	$6 = *($5 + [16])
	if ( ((uint_64)$4 >= (uint_64)$6) ){ goto $label$8 }
	$9 = *($5)
	if ( $9 ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$8
	if ( ((uint_64)$6 >= (uint_64)$4) ){ goto $label$3 }
	$11 = ($5 + [4])
	$9 = *($5 + [4])
	if ( ($9 == 0) ){ goto $label$3 }
	$5 = $11
	
.LABEL $label$7
	$11 = $5
	$5 = $9
	goto $label$6 
	
.LABEL $label$5
	$5 = $12
	$11 = $12
	$10 = *($11)
	if ( $10 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$11 = $5
	
.LABEL $label$3
	$10 = *($11)
	if ( $10 ){ goto $label$1 }
	
.LABEL $label$2
	*(($10 = CALL $737([40])) + [28]) = [0]
	*($10 + [32]) = [0]
	*($10) = (int_64)0
	*($10 + [16]) = *(($2 + [8]))
	*($10 + [24]) = ($10 + [28])
	*($10 + [8]) = $5
	*($11) = $10
	$5 = $10
	$9 = ($0 + [8])
	$7 = *(*($9))
	if ( ($7 == 0) ){ goto $label$9 }
	*($9) = $7
	$5 = *($11)
	
.LABEL $label$9
	CALL $289(*(($0 + [12])), $5)
	*(($5 = ($0 + [16]))) = (*($5) + [1])
	
.LABEL $label$1
	$11 = ($10 + [28])
	$5 = *($11)
	if ( ($5 == 0) ){ goto $label$14 }
	$11 = ($10 + [28])
	$7 = *(($2 + [24]))
	
.LOOP $label$15:
	$9 = *($5 + [16])
	if ( ((uint_32)$7 >= (uint_32)$9) ){ goto $label$17 }
	$9 = *($5)
	if ( $9 ){ goto $label$16 }
	goto $label$13 
	
.LABEL $label$17
	if ( ((uint_32)$9 >= (uint_32)$7) ){ goto $label$12 }
	$11 = ($5 + [4])
	$9 = *($5 + [4])
	if ( ($9 == 0) ){ goto $label$12 }
	$5 = $11
	
.LABEL $label$16
	$11 = $5
	$5 = $9
	goto $label$15 
	
.LABEL $label$14
	$5 = $11
	$9 = *($11)
	if ( $9 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$13
	$11 = $5
	
.LABEL $label$12
	$9 = *($11)
	if ( $9 ){ goto $label$10 }
	
.LABEL $label$11
	*(($9 = CALL $737([32]))) = (int_64)0
	*($9 + [8]) = $5
	*($11) = $9
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = *(($2 + [24]))
	$5 = $9
	$7 = ($10 + [24])
	$8 = *(*($7))
	if ( ($8 == 0) ){ goto $label$18 }
	*($7) = $8
	$5 = *($11)
	
.LABEL $label$18
	CALL $289(*(($10 + [28])), $5)
	*(($5 = ($10 + [32]))) = (*($5) + [1])
	
.LABEL $label$10
	*(($5 = ($9 + [24]))) = (int_64))(*($5) - $3)
	$5 = *($12)
	if ( ($5 == 0) ){ goto $label$23 }
	$12 = ($0 + [12])
	$4 = *(($2 + [16]))
	
.LOOP $label$24:
	$6 = *($5 + [16])
	if ( ((uint_64)$4 >= (uint_64)$6) ){ goto $label$26 }
	$11 = *($5)
	if ( $11 ){ goto $label$25 }
	goto $label$22 
	
.LABEL $label$26
	if ( ((uint_64)$6 >= (uint_64)$4) ){ goto $label$21 }
	$12 = ($5 + [4])
	$11 = *($5 + [4])
	if ( ($11 == 0) ){ goto $label$21 }
	$5 = $12
	
.LABEL $label$25
	$12 = $5
	$5 = $11
	goto $label$24 
	
.LABEL $label$23
	$5 = $12
	$7 = *($12)
	if ( $7 ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$22
	$12 = $5
	
.LABEL $label$21
	$7 = *($12)
	if ( $7 ){ goto $label$19 }
	
.LABEL $label$20
	*(($7 = CALL $737([40])) + [28]) = [0]
	*($7 + [32]) = [0]
	*($7) = (int_64)0
	*($7 + [16]) = *(($2 + [16]))
	*($7 + [24]) = ($7 + [28])
	*($7 + [8]) = $5
	*($12) = $7
	$5 = $7
	$11 = ($0 + [8])
	$9 = *(*($11))
	if ( ($9 == 0) ){ goto $label$27 }
	*($11) = $9
	$5 = *($12)
	
.LABEL $label$27
	CALL $289(*(($0 + [12])), $5)
	*(($5 = ($0 + [16]))) = (*($5) + [1])
	
.LABEL $label$19
	$12 = ($7 + [28])
	$5 = *($12)
	if ( ($5 == 0) ){ goto $label$32 }
	$12 = ($7 + [28])
	$9 = *(($2 + [24]))
	
.LOOP $label$33:
	$11 = *($5 + [16])
	if ( ((uint_32)$9 >= (uint_32)$11) ){ goto $label$35 }
	$11 = *($5)
	if ( $11 ){ goto $label$34 }
	goto $label$31 
	
.LABEL $label$35
	if ( ((uint_32)$11 >= (uint_32)$9) ){ goto $label$30 }
	$12 = ($5 + [4])
	$11 = *($5 + [4])
	if ( ($11 == 0) ){ goto $label$30 }
	$5 = $12
	
.LABEL $label$34
	$12 = $5
	$5 = $11
	goto $label$33 
	
.LABEL $label$32
	$5 = $12
	$11 = *($12)
	if ( $11 ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$31
	$12 = $5
	
.LABEL $label$30
	$11 = *($12)
	if ( $11 ){ goto $label$28 }
	
.LABEL $label$29
	*(($11 = CALL $737([32]))) = (int_64)0
	*($11 + [8]) = $5
	*($12) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = *(($2 + [24]))
	$5 = $11
	$9 = ($7 + [24])
	$10 = *(*($9))
	if ( ($10 == 0) ){ goto $label$36 }
	*($9) = $10
	$5 = *($12)
	
.LABEL $label$36
	CALL $289(*(($7 + [28])), $5)
	*(($5 = ($7 + [32]))) = (*($5) + [1])
	
.LABEL $label$28
	*(($5 = ($11 + [24]))) = ((int_64)*($5) + (int_64)$3)
}

int_32 .FUNC $254 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3671300493912047616, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $213($0, $5)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN11walexchange12wal_exchange15settle_withdrawEyNS_11to_withdrawE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [144])
	*([0] + [4]) = $15
	$11 = *($2 + [48])
	$14 = *($2 + [40])
	$6 = ($0 + [12])
	$10 = *($6)
	if ( ($10 == 0) ){ goto $label$5 }
	$9 = ($0 + [12])
	$12 = *(($2 + [24]))
	
.LOOP $label$6:
	$13 = *($10 + [16])
	if ( ((uint_64)$12 >= (uint_64)$13) ){ goto $label$8 }
	$7 = *($10)
	if ( $7 ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$8
	if ( ((uint_64)$13 >= (uint_64)$12) ){ goto $label$3 }
	$9 = ($10 + [4])
	$7 = *($10 + [4])
	if ( ($7 == 0) ){ goto $label$3 }
	$10 = $9
	
.LABEL $label$7
	$9 = $10
	$10 = $7
	goto $label$6 
	
.LABEL $label$5
	$10 = $6
	$9 = $6
	$8 = *($9)
	if ( $8 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$9 = $10
	
.LABEL $label$3
	$8 = *($9)
	if ( $8 ){ goto $label$1 }
	
.LABEL $label$2
	*(($8 = CALL $737([40])) + [28]) = [0]
	*($8 + [32]) = [0]
	*($8) = (int_64)0
	*($8 + [16]) = *(($2 + [24]))
	*($8 + [24]) = ($8 + [28])
	*($8 + [8]) = $10
	*($9) = $8
	$10 = $8
	$7 = ($0 + [8])
	$3 = *(*($7))
	if ( ($3 == 0) ){ goto $label$9 }
	*($7) = $3
	$10 = *($9)
	
.LABEL $label$9
	CALL $289(*(($0 + [12])), $10)
	*(($10 = ($0 + [16]))) = (*($10) + [1])
	
.LABEL $label$1
	$9 = ($8 + [28])
	$10 = *($9)
	if ( ($10 == 0) ){ goto $label$14 }
	$9 = ($8 + [28])
	$3 = *(($2 + [32]))
	
.LOOP $label$15:
	$7 = *($10 + [16])
	if ( ((uint_32)$3 >= (uint_32)$7) ){ goto $label$17 }
	$7 = *($10)
	if ( $7 ){ goto $label$16 }
	goto $label$13 
	
.LABEL $label$17
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$12 }
	$9 = ($10 + [4])
	$7 = *($10 + [4])
	if ( ($7 == 0) ){ goto $label$12 }
	$10 = $9
	
.LABEL $label$16
	$9 = $10
	$10 = $7
	goto $label$15 
	
.LABEL $label$14
	$10 = $9
	$7 = *($9)
	if ( $7 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$13
	$9 = $10
	
.LABEL $label$12
	$7 = *($9)
	if ( $7 ){ goto $label$10 }
	
.LABEL $label$11
	*(($7 = CALL $737([32]))) = (int_64)0
	*($7 + [8]) = $10
	*($9) = $7
	*($7 + [24]) = (int_64)0
	*($7 + [16]) = *(($2 + [32]))
	$10 = $7
	$3 = ($8 + [24])
	$4 = *(*($3))
	if ( ($4 == 0) ){ goto $label$18 }
	*($3) = $4
	$10 = *($9)
	
.LABEL $label$18
	CALL $289(*(($8 + [28])), $10)
	*(($10 = ($8 + [32]))) = (*($10) + [1])
	
.LABEL $label$10
	*(($10 = ($7 + [24]))) = (int_64))(*($10) - ((int_64)$11 + (int_64)$14))
	$13 = *(($2 + [48]))
	$10 = *($6)
	if ( ($10 == 0) ){ goto $label$23 }
	$6 = ($0 + [12])
	
.LOOP $label$24:
	$12 = *($10 + [16])
	if ( ((uint_64)$12 <= (uint_64)$1) ){ goto $label$26 }
	$9 = *($10)
	if ( $9 ){ goto $label$25 }
	goto $label$22 
	
.LABEL $label$26
	if ( ((uint_64)$12 >= (uint_64)$1) ){ goto $label$21 }
	$6 = ($10 + [4])
	$9 = *($10 + [4])
	if ( ($9 == 0) ){ goto $label$21 }
	$10 = $6
	
.LABEL $label$25
	$6 = $10
	$10 = $9
	goto $label$24 
	
.LABEL $label$23
	$10 = $6
	$3 = *($6)
	if ( $3 ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$22
	$6 = $10
	
.LABEL $label$21
	$3 = *($6)
	if ( $3 ){ goto $label$19 }
	
.LABEL $label$20
	*(($3 = CALL $737([40])) + [28]) = [0]
	*($3) = (int_64)0
	*($3 + [8]) = $10
	*($3 + [24]) = ($3 + [28])
	*($3 + [16]) = $1
	*($3 + [32]) = [0]
	*($6) = $3
	$10 = $3
	$9 = ($0 + [8])
	$7 = *(*($9))
	if ( ($7 == 0) ){ goto $label$27 }
	*($9) = $7
	$10 = *($6)
	
.LABEL $label$27
	CALL $289(*(($0 + [12])), $10)
	*(($10 = ($0 + [16]))) = (*($10) + [1])
	
.LABEL $label$19
	$6 = ($3 + [28])
	$10 = *($6)
	if ( ($10 == 0) ){ goto $label$32 }
	$6 = ($3 + [28])
	$7 = *(($2 + [32]))
	
.LOOP $label$33:
	$9 = *($10 + [16])
	if ( ((uint_32)$7 >= (uint_32)$9) ){ goto $label$35 }
	$9 = *($10)
	if ( $9 ){ goto $label$34 }
	goto $label$31 
	
.LABEL $label$35
	if ( ((uint_32)$9 >= (uint_32)$7) ){ goto $label$30 }
	$6 = ($10 + [4])
	$9 = *($10 + [4])
	if ( ($9 == 0) ){ goto $label$30 }
	$10 = $6
	
.LABEL $label$34
	$6 = $10
	$10 = $9
	goto $label$33 
	
.LABEL $label$32
	$10 = $6
	$9 = *($6)
	if ( $9 ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$31
	$6 = $10
	
.LABEL $label$30
	$9 = *($6)
	if ( $9 ){ goto $label$28 }
	
.LABEL $label$29
	*(($9 = CALL $737([32]))) = (int_64)0
	*($9 + [8]) = $10
	*($6) = $9
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = *(($2 + [32]))
	$10 = $9
	$7 = ($3 + [24])
	$8 = *(*($7))
	if ( ($8 == 0) ){ goto $label$36 }
	*($7) = $8
	$10 = *($6)
	
.LABEL $label$36
	CALL $289(*(($3 + [28])), $10)
	*(($10 = ($3 + [32]))) = (*($10) + [1])
	
.LABEL $label$28
	*(($10 = ($9 + [24]))) = ((int_64)*($10) + (int_64)$13)
	$13 = *(($2 + [40]))
	$6 = ($0 + [36])
	$10 = *($6)
	if ( ($10 == 0) ){ goto $label$41 }
	$9 = ($0 + [36])
	
.LOOP $label$42:
	$12 = *($10 + [16])
	if ( ((uint_64)$12 <= (uint_64)$1) ){ goto $label$44 }
	$7 = *($10)
	if ( $7 ){ goto $label$43 }
	goto $label$40 
	
.LABEL $label$44
	if ( ((uint_64)$12 >= (uint_64)$1) ){ goto $label$39 }
	$9 = ($10 + [4])
	$7 = *($10 + [4])
	if ( ($7 == 0) ){ goto $label$39 }
	$10 = $9
	
.LABEL $label$43
	$9 = $10
	$10 = $7
	goto $label$42 
	
.LABEL $label$41
	$10 = $6
	$9 = $6
	$8 = *($9)
	if ( $8 ){ goto $label$37 }
	goto $label$38 
	
.LABEL $label$40
	$9 = $10
	
.LABEL $label$39
	$8 = *($9)
	if ( $8 ){ goto $label$37 }
	
.LABEL $label$38
	*(($8 = CALL $737([40])) + [28]) = [0]
	*($8) = (int_64)0
	*($8 + [8]) = $10
	*($8 + [24]) = ($8 + [28])
	*($8 + [16]) = $1
	*($8 + [32]) = [0]
	*($9) = $8
	$10 = $8
	$7 = ($0 + [32])
	$3 = *(*($7))
	if ( ($3 == 0) ){ goto $label$45 }
	*($7) = $3
	$10 = *($9)
	
.LABEL $label$45
	CALL $289(*(($0 + [36])), $10)
	*(($10 = ($0 + [40]))) = (*($10) + [1])
	
.LABEL $label$37
	$9 = ($8 + [28])
	$10 = *($9)
	if ( ($10 == 0) ){ goto $label$50 }
	$9 = ($8 + [28])
	$3 = *(($2 + [32]))
	
.LOOP $label$51:
	$7 = *($10 + [16])
	if ( ((uint_32)$3 >= (uint_32)$7) ){ goto $label$53 }
	$7 = *($10)
	if ( $7 ){ goto $label$52 }
	goto $label$49 
	
.LABEL $label$53
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$48 }
	$9 = ($10 + [4])
	$7 = *($10 + [4])
	if ( ($7 == 0) ){ goto $label$48 }
	$10 = $9
	
.LABEL $label$52
	$9 = $10
	$10 = $7
	goto $label$51 
	
.LABEL $label$50
	$10 = $9
	$7 = *($9)
	if ( $7 ){ goto $label$46 }
	goto $label$47 
	
.LABEL $label$49
	$9 = $10
	
.LABEL $label$48
	$7 = *($9)
	if ( $7 ){ goto $label$46 }
	
.LABEL $label$47
	*(($7 = CALL $737([32]))) = (int_64)0
	*($7 + [8]) = $10
	*($9) = $7
	*($7 + [24]) = (int_64)0
	*($7 + [16]) = *(($2 + [32]))
	$10 = $7
	$3 = ($8 + [24])
	$4 = *(*($3))
	if ( ($4 == 0) ){ goto $label$54 }
	*($3) = $4
	$10 = *($9)
	
.LABEL $label$54
	CALL $289(*(($8 + [28])), $10)
	*(($10 = ($8 + [32]))) = (*($10) + [1])
	
.LABEL $label$46
	*(($10 = ($7 + [24]))) = (int_64))(*($10) - $13)
	$11 = *(($2 + [40]))
	$10 = *($6)
	if ( ($10 == 0) ){ goto $label$59 }
	$6 = ($0 + [36])
	$12 = *($0)
	
.LOOP $label$60:
	$13 = *($10 + [16])
	if ( ((uint_64)$12 >= (uint_64)$13) ){ goto $label$62 }
	$9 = *($10)
	if ( $9 ){ goto $label$61 }
	goto $label$58 
	
.LABEL $label$62
	if ( ((uint_64)$13 >= (uint_64)$12) ){ goto $label$57 }
	$6 = ($10 + [4])
	$9 = *($10 + [4])
	if ( ($9 == 0) ){ goto $label$57 }
	$10 = $6
	
.LABEL $label$61
	$6 = $10
	$10 = $9
	goto $label$60 
	
.LABEL $label$59
	$10 = $6
	$3 = *($6)
	if ( $3 ){ goto $label$55 }
	goto $label$56 
	
.LABEL $label$58
	$6 = $10
	
.LABEL $label$57
	$3 = *($6)
	if ( $3 ){ goto $label$55 }
	
.LABEL $label$56
	*(($3 = CALL $737([40])) + [28]) = [0]
	*($3 + [32]) = [0]
	*($3) = (int_64)0
	*($3 + [16]) = *($0)
	*($3 + [24]) = ($3 + [28])
	*($3 + [8]) = $10
	*($6) = $3
	$10 = $3
	$9 = ($0 + [32])
	$7 = *(*($9))
	if ( ($7 == 0) ){ goto $label$63 }
	*($9) = $7
	$10 = *($6)
	
.LABEL $label$63
	CALL $289(*(($0 + [36])), $10)
	*(($10 = ($0 + [40]))) = (*($10) + [1])
	
.LABEL $label$55
	$6 = ($3 + [28])
	$10 = *($6)
	if ( ($10 == 0) ){ goto $label$68 }
	$6 = ($3 + [28])
	$7 = *(($2 + [32]))
	
.LOOP $label$69:
	$9 = *($10 + [16])
	if ( ((uint_32)$7 >= (uint_32)$9) ){ goto $label$71 }
	$9 = *($10)
	if ( $9 ){ goto $label$70 }
	goto $label$67 
	
.LABEL $label$71
	if ( ((uint_32)$9 >= (uint_32)$7) ){ goto $label$66 }
	$6 = ($10 + [4])
	$9 = *($10 + [4])
	if ( ($9 == 0) ){ goto $label$66 }
	$10 = $6
	
.LABEL $label$70
	$6 = $10
	$10 = $9
	goto $label$69 
	
.LABEL $label$68
	$10 = $6
	$9 = *($6)
	if ( $9 ){ goto $label$64 }
	goto $label$65 
	
.LABEL $label$67
	$6 = $10
	
.LABEL $label$66
	$9 = *($6)
	if ( $9 ){ goto $label$64 }
	
.LABEL $label$65
	*(($9 = CALL $737([32]))) = (int_64)0
	*($9 + [8]) = $10
	*($6) = $9
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = *(($2 + [32]))
	$10 = $9
	$7 = ($3 + [24])
	$8 = *(*($7))
	if ( ($8 == 0) ){ goto $label$72 }
	*($7) = $8
	$10 = *($6)
	
.LABEL $label$72
	CALL $289(*(($3 + [28])), $10)
	*(($10 = ($3 + [32]))) = (*($10) + [1])
	
.LABEL $label$64
	*(($10 = ($9 + [24]))) = (int_64))(*($10) - $11)
	$11 = *(($2 + [40]))
	$6 = ($0 + [24])
	$10 = *($6)
	if ( ($10 == 0) ){ goto $label$77 }
	$6 = ($0 + [24])
	$12 = *(($2 + [24]))
	
.LOOP $label$78:
	$13 = *($10 + [16])
	if ( ((uint_64)$12 >= (uint_64)$13) ){ goto $label$80 }
	$9 = *($10)
	if ( $9 ){ goto $label$79 }
	goto $label$76 
	
.LABEL $label$80
	if ( ((uint_64)$13 >= (uint_64)$12) ){ goto $label$75 }
	$6 = ($10 + [4])
	$9 = *($10 + [4])
	if ( ($9 == 0) ){ goto $label$75 }
	$10 = $6
	
.LABEL $label$79
	$6 = $10
	$10 = $9
	goto $label$78 
	
.LABEL $label$77
	$10 = $6
	$3 = *($6)
	if ( $3 ){ goto $label$73 }
	goto $label$74 
	
.LABEL $label$76
	$6 = $10
	
.LABEL $label$75
	$3 = *($6)
	if ( $3 ){ goto $label$73 }
	
.LABEL $label$74
	*(($3 = CALL $737([40])) + [28]) = [0]
	*($3 + [32]) = [0]
	*($3) = (int_64)0
	*($3 + [16]) = *(($2 + [24]))
	*($3 + [24]) = ($3 + [28])
	*($3 + [8]) = $10
	*($6) = $3
	$10 = $3
	$9 = ($0 + [20])
	$7 = *(*($9))
	if ( ($7 == 0) ){ goto $label$81 }
	*($9) = $7
	$10 = *($6)
	
.LABEL $label$81
	CALL $289(*(($0 + [24])), $10)
	*(($10 = ($0 + [28]))) = (*($10) + [1])
	
.LABEL $label$73
	$6 = ($3 + [28])
	$10 = *($6)
	if ( ($10 == 0) ){ goto $label$86 }
	$6 = ($3 + [28])
	$7 = *(($2 + [32]))
	
.LOOP $label$87:
	$9 = *($10 + [16])
	if ( ((uint_32)$7 >= (uint_32)$9) ){ goto $label$89 }
	$9 = *($10)
	if ( $9 ){ goto $label$88 }
	goto $label$85 
	
.LABEL $label$89
	if ( ((uint_32)$9 >= (uint_32)$7) ){ goto $label$84 }
	$6 = ($10 + [4])
	$9 = *($10 + [4])
	if ( ($9 == 0) ){ goto $label$84 }
	$10 = $6
	
.LABEL $label$88
	$6 = $10
	$10 = $9
	goto $label$87 
	
.LABEL $label$86
	$10 = $6
	$9 = *($6)
	if ( $9 ){ goto $label$82 }
	goto $label$83 
	
.LABEL $label$85
	$6 = $10
	
.LABEL $label$84
	$9 = *($6)
	if ( $9 ){ goto $label$82 }
	
.LABEL $label$83
	*(($9 = CALL $737([32]))) = (int_64)0
	*($9 + [8]) = $10
	*($6) = $9
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = *(($2 + [32]))
	$10 = $9
	$7 = ($3 + [24])
	$8 = *(*($7))
	if ( ($8 == 0) ){ goto $label$90 }
	*($7) = $8
	$10 = *($6)
	
.LABEL $label$90
	CALL $289(*(($3 + [28])), $10)
	*(($10 = ($3 + [32]))) = (*($10) + [1])
	
.LABEL $label$82
	*(($10 = ($9 + [24]))) = ((int_64)*($10) + (int_64)$11)
	*((($15 + [88]) + [32])) = [0]
	*($15 + [104]) = (int_64)-1
	*($15 + [112]) = (int_64)0
	$12 = *($0)
	*($15 + [88]) = $12
	*($15 + [96]) = $12
	*($15 + [124]) = [0]
	*((($15 + [48]) + [32])) = [0]
	*($15 + [56]) = $1
	*($15 + [48]) = $12
	*($15 + [64]) = (int_64)-1
	*($15 + [72]) = (int_64)0
	*($15 + [40]) = $2
	*($15 + [44]) = ($15 + [88])
	*($15 + [8]) = $12
	CALL eosio_assert(((int_64)$12 == (int_64)CALL $fimport$16()), [432])
	*($15 + [28]) = ($15 + [40])
	*($15 + [24]) = ($15 + [48])
	*($15 + [32]) = ($15 + [8])
	*(($6 = CALL $737([56])) + [24]) = (int_64)1398362884
	*($6 + [16]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$12 = (int_64)5462355
	$10 = [0]
	
.LOOP $label$93:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$92 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$94 }
	
.LOOP $label$95:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$92 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$95 }
	
.LABEL $label$94
	$9 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$93 }
	goto $label$91 
	
.LABEL $label$92
	$9 = [0]
	
.LABEL $label$91
	CALL eosio_assert($9, [2832])
	*($6 + [40]) = ($15 + [48])
	CALL $290(($15 + [24]), $6)
	*($15 + [136]) = $6
	$12 = *($6)
	*($15 + [24]) = $12
	$9 = *($6 + [44])
	*($15 + [132]) = $9
	$7 = ($15 + [76])
	$10 = *($7)
	if ( ((uint_32)$10 >= (uint_32)*(($15 + [80]))) ){ goto $label$97 }
	*($10 + [8]) = $12
	*($10 + [16]) = $9
	*($15 + [136]) = [0]
	*($10) = $6
	*($7) = ($10 + [24])
	goto $label$96 
	
.LABEL $label$97
	CALL $291(($15 + [72]), ($15 + [136]), ($15 + [24]), ($15 + [132]))
	
.LABEL $label$96
	$10 = *($15 + [136])
	*($15 + [136]) = [0]
	if ( ($10 == 0) ){ goto $label$98 }
	CALL $738($10)
	
.LABEL $label$98
	$9 = ($0 + [104])
	$5 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [2144]
	$14 = (int_64)0
	
.LOOP $label$99:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$104 }
	$6 = *($10)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$103 }
	$6 = ($6 + [165])
	goto $label$102 
	
.LABEL $label$104
	$13 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$101 }
	goto $label$100 
	
.LABEL $label$103
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$102
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$101
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$100
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$99 }
	*($15 + [32]) = $14
	*($15 + [24]) = $5
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [5616]
	$14 = (int_64)0
	
.LOOP $label$105:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$110 }
	$6 = *($10)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$109 }
	$6 = ($6 + [165])
	goto $label$108 
	
.LABEL $label$110
	$13 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$107 }
	goto $label$106 
	
.LABEL $label$109
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$108
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$107
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$106
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$105 }
	*($15 + [40]) = $14
	*($15 + [8]) = $1
	*($15 + [16]) = *($2)
	$6 = ($0 + [108])
	$10 = *($6)
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [112]))) ){ goto $label$112 }
	*($10 + [8]) = $14
	*($10) = $5
	*($10 + [16 align=4]) = (int_64)0
	*(($7 = ($10 + [24]))) = [0]
	$9 = CALL $737([16])
	*($10 + [16]) = $9
	$3 = ($9 + [16])
	*($7) = $3
	*(($9 + [8])) = *((($15 + [24]) + [8]))
	*($9) = *($15 + [24])
	*(($10 + [20])) = $3
	*($10 + [28]) = [0]
	*(($9 = ($10 + [32]))) = [0]
	*(($10 + [36])) = [0]
	CALL $88(($10 + [28]), [16])
	$10 = *($10 + [28])
	$9 = (*($9) - $10)
	CALL eosio_assert(((int_32)$9 > (int_32)[7]), [496])
	CALL memcpy($10, ($15 + [8]), [8])
	CALL eosio_assert(((int_32)($9 + [-8]) > (int_32)[7]), [496])
	CALL memcpy(($10 + [8]), (($15 + [8]) + [8]), [8])
	*($6) = (*($6) + [40])
	goto $label$111 
	
.LABEL $label$112
	CALL $292($9, ($15 + [24]), $0, ($15 + [40]), ($15 + [8]))
	
.LABEL $label$111
	CALL _ZN11walexchange12wal_exchange19charge_withdraw_feeEym($0, $1, *(($2 + [32])))
	$9 = *($15 + [72])
	if ( ($9 == 0) ){ goto $label$113 }
	$7 = ($15 + [76])
	$10 = *($7)
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$115 }
	
.LOOP $label$116:
	$10 = ($10 + [-24])
	$6 = *($10)
	*($10) = [0]
	if ( ($6 == 0) ){ goto $label$117 }
	CALL $738($6)
	
.LABEL $label$117
	if ( ((int_32)$9 != (int_32)$10) ){ goto $label$116 }
	$10 = *(($15 + [72]))
	goto $label$114 
	
.LABEL $label$115
	$10 = $9
	
.LABEL $label$114
	*($7) = $9
	CALL $738($10)
	
.LABEL $label$113
	$9 = *($15 + [112])
	if ( ($9 == 0) ){ goto $label$118 }
	$7 = ($15 + [116])
	$10 = *($7)
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$120 }
	
.LOOP $label$121:
	$10 = ($10 + [-24])
	$6 = *($10)
	*($10) = [0]
	if ( ($6 == 0) ){ goto $label$122 }
	CALL $738($6)
	
.LABEL $label$122
	if ( ((int_32)$9 != (int_32)$10) ){ goto $label$121 }
	$10 = *(($15 + [112]))
	goto $label$119 
	
.LABEL $label$120
	$10 = $9
	
.LABEL $label$119
	*($7) = $9
	CALL $738($10)
	
.LABEL $label$118
	*([0] + [4]) = ($15 + [144])
}

int_32 .FUNC $256 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [56]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3658914434178940928, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $230($0, $5)
	CALL eosio_assert(((int_32)*($6 + [56]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $406 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($1 + [24])
	$7 = *(($1 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	$5 = *($6)
	if ( ((int_64)((int_64)((int_64)*($5) << (int_64)32) | (int_64)*($5 + [4])) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$1), [288])
	*($0 + [4]) = $6
	*($0) = $1
	return 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-4060986520122310656, $2)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$4 }
	$6 = CALL $412($1, $6)
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$1), [288])
	*($0 + [4]) = $6
	*($0) = $1
	return 
	
.LABEL $label$4
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $696 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$4 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($4 + [48]), *($2 + [4]), [8])
	$3 = (*($2 + [4]) + [8])
	*($2 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $3) > (uint_32)[7]), [544])
	CALL memcpy(($4 + [56]), *($2 + [4]), [8])
	$3 = (*($2 + [4]) + [8])
	*($2 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $3) > (uint_32)[7]), [544])
	CALL memcpy(($4 + [64]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [72]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [80]), *($4 + [4]), [4])
	*($4 + [4]) = (*($4 + [4]) + [4])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($2 + [84]), *($4 + [4]), [2])
	*($4 + [4]) = (*($4 + [4]) + [2])
	*($5 + [8]) = $2
	CALL $697(($5 + [8]), $1)
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $138 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC _Z22is_amount_within_rangex (int_64 $0)
{
	return (uint_64)(((int_64)$0 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)
}

void .FUNC $428 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $429 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $698 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	$4 = [0]
	*($0 + [16]) = [0]
	*($0 + [24]) = (int_64)0
	*(($0 + [40])) = (int_64)0
	*(($0 + [32])) = (int_64)1398362884
	CALL eosio_assert([1], [2768])
	$3 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [2832])
	*($0 + [48]) = (int_64)0
	*(($0 + [64])) = (int_64)0
	*(($0 + [56])) = (int_64)1398362884
	CALL eosio_assert([1], [2768])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [2832])
	*($0 + [72]) = (int_64)0
	*($0 + [80]) = (int_64)0
	*($0 + [88]) = (int_64)0
	*(($0 + [96])) = [0]
	CALL memset(($0 + [100]), [0], [66])
	*($0 + [166]) = [0]
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $700(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

void .FUNC _ZN11walexchange12wal_exchange16get_eos_receivedERKN5eosio5assetE (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [80])
	*([0] + [4]) = $10
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [8112]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [8112]
	$9 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$12 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$3 = ($3 + [165])
	goto $label$10 
	
.LABEL $label$12
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$8
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$7 }
	*(($10 + [72])) = [0]
	*($10 + [56]) = (int_64)-1
	*($10 + [48]) = $9
	*($10 + [40]) = $7
	*($10 + [64]) = (int_64)0
	$4 = CALL $423(($10 + [40]), CALL $fimport$37($7, $9, (int_64)-4991296453239373824, (int_64)0))
	$6 = *($4 + [56])
	$6 = *($2)
	CALL __multi3(($10 + [24]), $6, (int_64)$6 >> (int_64)63), $6, (int_64)$6 >> (int_64)63))
	$6 = *($4 + [72])
	CALL __udivti3(($10 + [8]), *($10 + [24]), *(($10 + [32])), $6, (int_64)$6 >> (int_64)63))
	*($0 + [8]) = (int_64)1397703940
	$6 = *($10 + [8])
	*($0) = $6
	CALL eosio_assert((uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$6 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$3 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$3 = [0]
	
.LABEL $label$13
	CALL eosio_assert($3, [2832])
	$0 = *($10 + [64])
	if ( ($0 == 0) ){ goto $label$18 }
	$2 = ($10 + [68])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$20 }
	
.LOOP $label$21:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$22 }
	CALL $738($3)
	
.LABEL $label$22
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$21 }
	$4 = *(($10 + [64]))
	goto $label$19 
	
.LABEL $label$20
	$4 = $0
	
.LABEL $label$19
	*($2) = $0
	CALL $738($4)
	
.LABEL $label$18
	*([0] + [4]) = ($10 + [80])
}

int_32 .FUNC $423 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [512])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [12]) = $4
	*($7 + [8]) = $4
	*($7 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$5 = CALL $737([128])
	CALL $424($5)
	*($5 + [112]) = $0
	*($7 + [24]) = ($7 + [8])
	*($7 + [36]) = ($5 + [8])
	*($7 + [32]) = $5
	*($7 + [40]) = ($5 + [24])
	*($7 + [44]) = ($5 + [40])
	*($7 + [48]) = ($5 + [56])
	*($7 + [52]) = ($5 + [72])
	*($7 + [56]) = ($5 + [88])
	*($7 + [60]) = ($5 + [104])
	CALL $425(($7 + [32]), ($7 + [24]))
	*($5 + [116]) = $1
	*($7 + [24]) = $5
	*($7 + [32]) = (int_64)0
	$6 = *($5 + [116])
	*($7 + [4]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)0
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $426(($0 + [24]), ($7 + [24]), ($7 + [32]), ($7 + [4]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [64])
	return $5
}

int_32 .FUNC $420 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $737([32])
	$6 = CALL $430($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $431(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $421 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [20]) = $4
	*($8 + [16]) = $4
	*($8 + [24]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $737([72])
	CALL $427($6)
	*($6 + [56]) = $0
	*($8 + [32]) = ($8 + [16])
	*($8 + [44]) = ($6 + [8])
	*($8 + [40]) = $6
	*($8 + [48]) = ($6 + [16])
	*($8 + [52]) = ($6 + [32])
	*($8 + [56]) = ($6 + [48])
	CALL $428(($8 + [40]), ($8 + [32]))
	*($6 + [60]) = $1
	*($8 + [32]) = $6
	$5 = *($6 + [8])
	*($8 + [40]) = $5
	$7 = *($6 + [60])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [32]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $429(($0 + [24]), ($8 + [32]), ($8 + [40]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [32])
	*($8 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

void .FUNC $426 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $427 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	$2 = [0]
	*($0) = [0]
	*(($3 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [2768])
	$1 = (uint_64)*($3) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [2832])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [2832])
	*($0 + [48]) = (int_64)0
	return $0
}

int_32 .FUNC $424 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	$2 = [0]
	*($0) = [0]
	*(($3 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [2768])
	$1 = (uint_64)*($3) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [2832])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [2832])
	*(($2 = ($0 + [48]))) = (int_64)1398362884
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [2832])
	*(($2 = ($0 + [64]))) = (int_64)1398362884
	*($0 + [56]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [2832])
	*(($2 = ($0 + [80]))) = (int_64)1398362884
	*($0 + [72]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$3 = [0]
	
.LABEL $label$21
	CALL eosio_assert($3, [2832])
	*(($2 = ($0 + [96]))) = (int_64)1398362884
	*($0 + [88]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$3 = [0]
	
.LABEL $label$26
	CALL eosio_assert($3, [2832])
	*($0 + [104]) = (int_64)0
	return $0
}

void .FUNC $425 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [28])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $729 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	*($0) = $1
	*(($2 = ($0 + [12]))) = [0]
	*(($0 + [16])) = [0]
	*($0 + [8]) = $2
	*(($2 = ($0 + [24]))) = [0]
	*(($0 + [28])) = [0]
	*($0 + [20]) = $2
	*(($2 = ($0 + [36]))) = [0]
	*(($0 + [40])) = [0]
	*($0 + [32]) = $2
	*(($2 = ($0 + [48]))) = [0]
	*(($0 + [52])) = [0]
	*($0 + [44]) = $2
	*(($2 = ($0 + [60]))) = [0]
	*(($0 + [64])) = [0]
	*($0 + [56]) = $2
	$3 = CALL current_time()
	*(($0 + [80])) = [0]
	*(($0 + [84])) = [0]
	*(($0 + [88])) = [0]
	*(($0 + [92])) = [0]
	*(($0 + [96])) = [0]
	*(($0 + [100])) = [0]
	*($0 + [68]) = ((CASTING uint_32)(uint_64 ((uint_64)$3 / (uint_64)(int_64)1000000)) + [60])
	*(($0 + [104])) = [0]
	*(($0 + [108])) = [0]
	*(($0 + [112])) = [0]
	*(($0 + [116])) = [0]
	*(($0 + [120])) = [0]
	*(($0 + [124])) = [0]
	*($0 + [128]) = (int_64)0
	*(($0 + [136])) = (int_64)0
	*($0 + [256]) = $1
	*($0 + [264]) = $1
	return $0
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [272])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [11760]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [8112]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [11776])
	
.LABEL $label$7
	CALL _ZN11walexchange12wal_exchange5applyEyy(CALL $729($9, $0), $1, $2)
	CALL eosio_exit([0])
	(unreachable)
}

int_32 .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [544])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $9(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $9 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_64 .FUNC _ZN11walexchange24contract_account_manager14get_account_idEyh (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	$4 = *($0)
	*($6 + [8]) = $4
	*($6 + [16]) = $4
	*($6 + [32]) = (int_64)0
	*($6 + [44]) = [0]
	$1 = CALL _ZN11walexchange24contract_account_manager15find_account_idEy($0, $1)
	CALL eosio_assert(((int_64)$1 != (int_64)0), [560])
	CALL eosio_assert(((int_32)*(CALL $11(($6 + [8]), $1, [592]) + [24]) == (int_32)$2), [624])
	$3 = *($6 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	$5 = ($6 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $738($2)
	
.LABEL $label$5
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($6 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $3
	
.LABEL $label$2
	*($5) = $3
	CALL $738($0)
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [48])
	return $1
}

void .FUNC _ZN11walexchange13order_manager15set_last_bucketEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	*((($6 + [8]) + [32])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$3 = *($0)
	*($6 + [8]) = $3
	*($6 + [16]) = $3
	$5 = [1]
	$2 = CALL db_find_i64($3, $3, (int_64)-8524869990424887296, *($0 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $8(($6 + [8]), $2) + [16]) == (int_32)($6 + [8])), [288])
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [352])
	CALL eosio_assert((((uint_32)$1 % (uint_32)*($0 + [16])) == 0), [384])
	$4 = *($0)
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)CALL $fimport$16()), [432])
	*(($5 = CALL $737([32])) + [16]) = ($6 + [8])
	*($5 + [8]) = $1
	*($5) = *(($0 + [8]))
	CALL eosio_assert([1], [496])
	CALL memcpy(($6 + [64]), $5, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($6 + [64]) | [8]), ($5 + [8]), [4])
	$3 = *($5)
	$1 = CALL db_store_i64(*((($6 + [8]) + [8])), (int_64)-8524869990424887296, $4, $3, ($6 + [64]), [12])
	*($5 + [20]) = $1
	$0 = ($6 + [24])
	if ( (uint_64)($3 <= *($0)) ){ goto $label$2 }
	*($0) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($6 + [56]) = $5
	$3 = *($5)
	*($6 + [64]) = $3
	*($6 + [52]) = $1
	$2 = ($6 + [36])
	$0 = *($2)
	if ( ((uint_32)$0 >= (uint_32)*(($6 + [40]))) ){ goto $label$4 }
	*($0 + [8]) = $3
	*($0 + [16]) = $1
	*($6 + [56]) = [0]
	*($0) = $5
	*($2) = ($0 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $9(($6 + [32]), ($6 + [56]), ($6 + [64]), ($6 + [52]))
	
.LABEL $label$3
	$5 = *($6 + [56])
	*($6 + [56]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $738($5)
	
.LABEL $label$5
	$1 = *($6 + [32])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($6 + [36])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $738($0)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$9 }
	$5 = *(($6 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $738($5)
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [80])
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _ZN11walexchange12wal_exchange12setbucketposEym (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [32])
	*([0] + [4]) = $3
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*($3 + [24]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($3 + [24]), $1, [1])
	*($3 + [8]) = $1
	*($3 + [16]) = [60]
	*($3) = *($0)
	CALL _ZN11walexchange13order_manager15set_last_bucketEm($3, $2)
	*([0] + [4]) = ($3 + [32])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC $14 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $15 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-2067973376676056576, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $12($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-2067973376676056576, $5))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [40])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $16 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-2067973376676056575, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $12($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-2067973376676056576, $5))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [44])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC _ZN11walexchange24contract_account_manager16get_account_typeEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [176])
	*([0] + [4]) = $8
	*(($8 + [168])) = [0]
	*($8 + [152]) = (int_64)-1
	*($8 + [160]) = (int_64)0
	$5 = *($0)
	*($8 + [136]) = $5
	*($8 + [144]) = $5
	$3 = CALL db_find_i64($5, $5, (int_64)-3020384829779738624, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $18(($8 + [136]), $3) + [24]) == (int_32)($8 + [136])), [288])
	$7 = *(CALL $19(($8 + [136]), $1, [592]) + [8])
	$2 = *($8 + [160])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$7 = [3]
	$5 = *($0)
	if ( ((int_64)$5 == (int_64)$1) ){ goto $label$4 }
	*((($8 + [96]) + [32])) = [0]
	*($8 + [104]) = $5
	*($8 + [96]) = $5
	*($8 + [112]) = (int_64)-1
	*($8 + [120]) = (int_64)0
	$3 = CALL db_find_i64($5, $5, (int_64)3724085270991601664, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert(((int_32)*(CALL $20(($8 + [96]), $3) + [8]) == (int_32)($8 + [96])), [288])
	$7 = [2]
	$4 = *($8 + [120])
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	*((($8 + [56]) + [32])) = [0]
	*($8 + [72]) = (int_64)-1
	*($8 + [80]) = (int_64)0
	$5 = *($0)
	*($8 + [56]) = $5
	*($8 + [64]) = $5
	*($8 + [92]) = [0]
	$3 = CALL db_find_i64($5, $5, (int_64)5031813150555504640, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$9 }
	CALL eosio_assert(((int_32)*(CALL $21(($8 + [56]), $3) + [16]) == (int_32)($8 + [56])), [288])
	$7 = [4]
	$4 = *($8 + [80])
	if ( $4 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$5 = *($0)
	*(($8 + [48])) = [0]
	*($8 + [24]) = $1
	*($8 + [16]) = $5
	*($8 + [32]) = (int_64)-1
	*($8 + [40]) = (int_64)0
	*($8 + [52]) = [0]
	CALL $22(($8 + [8]), ($8 + [16]), $1)
	$2 = *($8 + [12])
	$4 = *($8 + [40])
	if ( ($4 == 0) ){ goto $label$10 }
	$7 = ($8 + [44])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$12 }
	
.LOOP $label$13:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$14 }
	CALL $738($3)
	
.LABEL $label$14
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$13 }
	$0 = *(($8 + [40]))
	goto $label$11 
	
.LABEL $label$12
	$0 = $4
	
.LABEL $label$11
	*($7) = $4
	CALL $738($0)
	
.LABEL $label$10
	$7 = ( [5] ? [6] : $2 )
	$4 = *($8 + [80])
	if ( ($4 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$2 = ($8 + [84])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$16 }
	
.LOOP $label$17:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$18 }
	CALL $738($3)
	
.LABEL $label$18
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$17 }
	$0 = *(($8 + [80]))
	goto $label$15 
	
.LABEL $label$16
	$0 = $4
	
.LABEL $label$15
	*($2) = $4
	CALL $738($0)
	
.LABEL $label$7
	$4 = *($8 + [120])
	if ( ($4 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$2 = ($8 + [124])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$20 }
	
.LOOP $label$21:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$22 }
	CALL $738($3)
	
.LABEL $label$22
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$21 }
	$0 = *(($8 + [120]))
	goto $label$19 
	
.LABEL $label$20
	$0 = $4
	
.LABEL $label$19
	*($2) = $4
	CALL $738($0)
	
.LABEL $label$4
	$2 = *($8 + [160])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($8 + [164])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$24 }
	
.LOOP $label$25:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$26 }
	$4 = *($3 + [12])
	if ( ($4 == 0) ){ goto $label$27 }
	*(($3 + [16])) = $4
	CALL $738($4)
	
.LABEL $label$27
	CALL $738($3)
	
.LABEL $label$26
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$25 }
	$0 = *(($8 + [160]))
	goto $label$23 
	
.LABEL $label$24
	$0 = $2
	
.LABEL $label$23
	*($6) = $2
	CALL $738($0)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [176])
	return ($7 & [255])
}

int_64 .FUNC _ZN11walexchange24contract_account_manager15find_account_idEy (int_32 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [128])
	*([0] + [4]) = $8
	*($8 + [64]) = $1
	*(($8 + [56])) = [0]
	*($8 + [40]) = (int_64)-1
	*($8 + [48]) = (int_64)0
	$1 = *($0)
	*($8 + [24]) = $1
	*($8 + [32]) = $1
	*($8 + [60]) = [0]
	*($8 + [16]) = ($8 + [24])
	CALL $15(($8 + [80]), ($8 + [16]), ($8 + [64]))
	$4 = *($8 + [84])
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((int_64)*($8 + [64]) != (int_64)*($4 + [8])) ){ goto $label$3 }
	if ( ($4 == 0) ){ goto $label$3 }
	$1 = *($4)
	$3 = *($8 + [48])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($8 + [8]) = ($8 + [24])
	CALL $16(($8 + [80]), ($8 + [8]), ($8 + [64]))
	$4 = *($8 + [84])
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((int_64)*($8 + [64]) != (int_64)*($4 + [16])) ){ goto $label$4 }
	if ( ($4 == 0) ){ goto $label$4 }
	$1 = *($4)
	$3 = *($8 + [48])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$1 = (int_64)0
	$4 = CALL _ZN11walexchange24contract_account_manager16get_account_typeEy($0, *($8 + [64]))
	if ( ((int_32)$4 == (int_32)[6]) ){ goto $label$5 }
	$1 = *($0)
	CALL eosio_assert(((int_64)*($8 + [24]) == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([48])) + [32]) = ($8 + [24])
	*($0 + [24]) = $4
	$2 = *($8 + [64])
	*($0) = $2
	*($0 + [16]) = $2
	CALL eosio_assert([1], [496])
	CALL memcpy(($8 + [80]), $0, [8])
	CALL eosio_assert([1], [496])
	$3 = ($0 + [8])
	CALL memcpy((($8 + [80]) | [8]), $3, [8])
	CALL eosio_assert([1], [496])
	$7 = ($0 + [16])
	CALL memcpy((($8 + [80]) + [16]), $7, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($8 + [80]) + [24]), ($0 + [24]), [1])
	$2 = *($0)
	$4 = (($8 + [24]) + [8])
	*($0 + [36]) = CALL db_store_i64(*($4), (int_64)-2067973376676056576, $1, $2, ($8 + [80]), [25])
	$5 = (($8 + [24]) + [16])
	if ( (uint_64)($2 <= *($5)) ){ goto $label$6 }
	*($5) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$2 = *($0)
	$6 = *($4)
	*($8 + [120]) = *($3)
	*($0 + [40]) = CALL db_idx64_store($6, (int_64)-2067973376676056576, $1, $2, ($8 + [120]))
	$2 = *($0)
	$6 = *($4)
	*($8 + [120]) = *($7)
	*($0 + [44]) = CALL db_idx64_store($6, (int_64)-2067973376676056575, $1, $2, ($8 + [120]))
	*($8 + [120]) = $0
	$1 = *($0)
	*($8 + [80]) = $1
	$3 = *(($0 + [36]))
	*($8 + [76]) = $3
	$7 = ($8 + [52])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($8 + [56]))) ){ goto $label$8 }
	*($4 + [8]) = $1
	*($4 + [16]) = $3
	*($8 + [120]) = [0]
	*($4) = $0
	*($7) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $14(($8 + [48]), ($8 + [120]), ($8 + [80]), ($8 + [76]))
	
.LABEL $label$7
	$0 = *($8 + [120])
	*($8 + [120]) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	CALL $738($0)
	
.LABEL $label$9
	$1 = *($8 + [64])
	
.LABEL $label$5
	$3 = *($8 + [48])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($8 + [52])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $738($4)
	
.LABEL $label$13
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($8 + [48]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $3
	
.LABEL $label$10
	*($7) = $3
	CALL $738($0)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [128])
	return $1
}

int_32 .FUNC $11 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-2067973376676056576, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $12($0, $5)
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $737([48])) + [32]) = $0
	CALL $13(($8 + [32]), $6)
	*($6 + [40]) = [-1]
	*($6 + [36]) = $1
	*($6 + [44]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $14(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [544])
	CALL memcpy(($1 + [24]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC $554 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$4 = *($0 + [4])
	$3 = *($4 + [4])
	$4 = *($4)
	$8 = *($4 + [16])
	if ( ((int_64)$8 != (int_64)-1) ){ goto $label$1 }
	$8 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)6291761009430009344, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $164($4, $5)
	*($9 + [12]) = [0]
	*($9 + [8]) = $4
	$8 = ((int_64)*(*(CALL $345(($9 + [8])) + [4])) + (int_64)1)
	
.LABEL $label$2
	*(($4 + [16])) = $8
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($8 <= (int_64)-2), [2192])
	*($1) = *(($4 + [16]))
	*($1 + [8]) = *($3)
	$10 = $10
	$4 = ($10 + [-16])
	*([0] + [4]) = $4
	CALL eosio_assert([1], [496])
	CALL memcpy($4, $1, [4])
	CALL eosio_assert([1], [496])
	$10 = ($1 + [8])
	CALL memcpy(($10 + [-12]), $10, [8])
	$8 = *($1)
	*($1 + [20]) = CALL db_store_i64(*($2 + [8]), (int_64)6291761009430009344, *(*($0 + [8])), $8, $4, [12])
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ((int_64)$8 + (int_64)1)
	
.LABEL $label$3
	$8 = *(($2 + [8]))
	$6 = *(*(($0 + [8])))
	$7 = *($1)
	*($9 + [8]) = *($10)
	*($1 + [24]) = CALL db_idx64_store($8, (int_64)6291761009430009344, $6, $7, ($9 + [8]))
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $737([40])
	$6 = CALL $27($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [28])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $28(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [12])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [16])) = $7
	CALL $738($7)
	
.LABEL $label$10
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $19 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3020384829779738624, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $18($0, $5)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN11walexchange12wal_exchange10setconfig2Ebyyy (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($8 + [72])) = [0]
	*($8 + [56]) = (int_64)-1
	*($8 + [64]) = (int_64)0
	$6 = *($0)
	*($8 + [40]) = $6
	*($8 + [48]) = $6
	*($8 + [16]) = $2
	*($8 + [8]) = $1
	*($8 + [24]) = $3
	*($8 + [32]) = $4
	CALL $85(($8 + [40]), ($8 + [8]), $6)
	$5 = *($8 + [64])
	if ( ($5 == 0) ){ goto $label$2 }
	$7 = ($8 + [68])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $738($1)
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($8 + [64]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $5
	
.LABEL $label$3
	*($7) = $5
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [80])
}

void .FUNC $556 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [432])
	*(($4 = CALL $737([36])) + [24]) = $1
	$3 = *($3)
	*($4) = *($3)
	*(($4 + [20])) = *(($3 + [20]))
	*(($4 + [16])) = *(($3 + [16]))
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	*($7 + [56]) = (($7 + [16]) + [21])
	*($7 + [52]) = ($7 + [16])
	*($7 + [48]) = ($7 + [16])
	CALL $557(($7 + [48]), $4)
	*($4 + [28]) = CALL db_store_i64(*($1 + [8]), (int_64)-4417020450001911808, $2, (int_64)-4417020450001911808, ($7 + [16]), [21])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-4417020450001911808) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)-4417020450001911807
	
.LABEL $label$1
	*($7 + [48]) = $4
	*($7 + [16]) = (int_64)-4417020450001911808
	$5 = *($4 + [28])
	*($7 + [12]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)-4417020450001911808
	*($3 + [16]) = $5
	*($7 + [48]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $39(($1 + [24]), ($7 + [48]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($7 + [48])
	*($7 + [48]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $738($4)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [64])
}

int_32 .FUNC $631 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = (*([0] + [4]) - [32])
	$7 = $5
	*([0] + [4]) = $5
	$2 = *($1 + [4])
	$6 = *($1)
	$4 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($5 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($7 + [8]) = (int_64)0
	*($7 + [16]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [544])
	CALL memcpy(($7 + [8]), $4, [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[8]), [544])
	CALL memcpy(($7 + [31]), ($4 + [8]), [1])
	$5 = ((int_32)*($7 + [31]) != (int_32)[0])
	*($7 + [16]) = $5
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($4)
	$5 = *((($7 + [8]) + [8]))
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *($7 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($1) + $6))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 ((int_32)($5 & [255]) != (int_32)[0])), (int_32 $6))
	*([0] + [4]) = ($7 + [32])
	return [1]
}

int_32 .FUNC $642 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [400])
	*([0] + [4]) = $3
	*(($2 = $3) + [364]) = $0
	*($2 + [352]) = *($1)
	*($2 + [356]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [24])) = (int_64)0
	*(($2 + [40])) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [48]) = (int_64)0
	*($2 + [56]) = (int_64)0
	*($2 + [64]) = [0]
	*($2 + [72]) = (int_64)0
	*($2 + [80]) = (int_64)0
	*($2 + [88]) = [0]
	*($2 + [90]) = [0]
	*($2 + [92]) = [0]
	*(($2 + [96])) = [0]
	*(($2 + [100])) = [0]
	CALL memset(($2 + [104]), [0], [66])
	*($2 + [176]) = (int_64)0
	*($2 + [170]) = [0]
	*($2 + [184]) = (int_64)0
	*($2 + [192]) = [0]
	*($2 + [200]) = (int_64)0
	*($2 + [208]) = (int_64)0
	*($2 + [216]) = [0]
	*($2 + [218]) = [0]
	*($2 + [220]) = [0]
	*(($2 + [224])) = [0]
	*(($2 + [228])) = [0]
	CALL memset(($2 + [232]), [0], [66])
	*($2 + [304]) = (int_64)0
	*($2 + [298]) = [0]
	*($2 + [312]) = (int_64)0
	*($2 + [320]) = (int_64)0
	*($2 + [328]) = [0]
	*($2 + [336]) = (int_64)0
	*($2 + [344]) = (int_64)0
	*($2 + [372]) = $1
	*($2 + [368]) = $1
	*($2 + [376]) = ($1 + $0)
	*($2 + [384]) = ($2 + [368])
	*($2 + [392]) = ($2 + [8])
	CALL $671(($2 + [392]), ($2 + [384]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [372]) = ($2 + [352])
	*($2 + [368]) = ($2 + [364])
	CALL $672(($2 + [368]), ($2 + [8]))
	if ( ((*($2 + [220]) & [1]) == 0) ){ goto $label$5 }
	CALL $738(*(($2 + [228])))
	
.LABEL $label$5
	if ( ((*($2 + [92]) & [1]) == 0) ){ goto $label$6 }
	CALL $738(*(($2 + [100])))
	
.LABEL $label$6
	*([0] + [4]) = ($2 + [400])
	return [1]
}

int_32 .FUNC $630 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = (*([0] + [4]) - [576])
	$9 = $2
	*([0] + [4]) = $2
	$3 = *($1 + [4])
	$8 = *($1)
	$7 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$7 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$2
	CALL read_action_data($7, $1)
	
.LABEL $label$1
	*($9 + [88]) = (int_64)0
	*($9 + [80]) = (int_64)0
	$2 = CALL memset(($9 + [96]), [0], [66])
	*($9 + [244]) = $7
	*($9 + [240]) = $7
	*($9 + [248]) = ($7 + $1)
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [544])
	CALL memcpy(($9 + [80]), *($9 + [244]), [8])
	$6 = (*($9 + [244]) + [8])
	*($9 + [244]) = $6
	CALL eosio_assert(((uint_32)(*($9 + [248]) - $6) > (uint_32)[7]), [544])
	$6 = (($9 + [80]) + [8])
	CALL memcpy($6, *($9 + [244]), [8])
	*($9 + [244]) = (*($9 + [244]) + [8])
	*($9 + [168]) = ($9 + [240])
	*($9 + [316]) = ($9 + [97])
	*($9 + [312]) = $2
	*($9 + [320]) = ($9 + [98])
	*($9 + [324]) = ($9 + [99])
	*($9 + [328]) = ($9 + [100])
	*($9 + [332]) = ($9 + [101])
	*($9 + [336]) = ($9 + [102])
	*($9 + [340]) = ($9 + [103])
	*($9 + [344]) = ($9 + [104])
	*($9 + [348]) = ($9 + [105])
	*($9 + [352]) = ($9 + [106])
	*($9 + [356]) = ($9 + [107])
	*($9 + [360]) = ($9 + [108])
	*($9 + [364]) = ($9 + [109])
	*($9 + [368]) = ($9 + [110])
	*($9 + [372]) = ($9 + [111])
	*($9 + [376]) = ($9 + [112])
	*($9 + [380]) = ($9 + [113])
	*($9 + [384]) = ($9 + [114])
	*($9 + [388]) = ($9 + [115])
	*($9 + [392]) = ($9 + [116])
	*($9 + [396]) = ($9 + [117])
	*($9 + [400]) = ($9 + [118])
	*($9 + [404]) = ($9 + [119])
	*($9 + [408]) = ($9 + [120])
	*($9 + [412]) = ($9 + [121])
	*($9 + [416]) = ($9 + [122])
	*($9 + [420]) = ($9 + [123])
	*($9 + [424]) = ($9 + [124])
	*($9 + [428]) = ($9 + [125])
	*($9 + [432]) = ($9 + [126])
	*($9 + [436]) = ($9 + [127])
	*($9 + [440]) = ($9 + [128])
	*($9 + [444]) = ($9 + [129])
	*($9 + [448]) = ($9 + [130])
	*($9 + [452]) = ($9 + [131])
	*($9 + [456]) = ($9 + [132])
	*($9 + [460]) = ($9 + [133])
	*($9 + [464]) = ($9 + [134])
	*($9 + [468]) = ($9 + [135])
	*($9 + [472]) = ($9 + [136])
	*($9 + [476]) = ($9 + [137])
	*($9 + [480]) = ($9 + [138])
	*($9 + [484]) = ($9 + [139])
	*($9 + [488]) = ($9 + [140])
	*($9 + [492]) = ($9 + [141])
	*($9 + [496]) = ($9 + [142])
	*($9 + [500]) = ($9 + [143])
	*($9 + [504]) = ($9 + [144])
	*($9 + [508]) = ($9 + [145])
	*($9 + [512]) = (($9 + [80]) + [66])
	*($9 + [516]) = ($9 + [147])
	*($9 + [520]) = ($9 + [148])
	*($9 + [524]) = ($9 + [149])
	*($9 + [528]) = ($9 + [150])
	*($9 + [532]) = ($9 + [151])
	*($9 + [536]) = ($9 + [152])
	*($9 + [540]) = ($9 + [153])
	*($9 + [544]) = ($9 + [154])
	*($9 + [548]) = ($9 + [155])
	*($9 + [552]) = ($9 + [156])
	*($9 + [556]) = ($9 + [157])
	*($9 + [560]) = ($9 + [158])
	*($9 + [564]) = ($9 + [159])
	*($9 + [568]) = ($9 + [160])
	*($9 + [572]) = ($9 + [161])
	CALL $669(($9 + [312]), ($9 + [168]))
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($7)
	
.LABEL $label$4
	$5 = *($6)
	$4 = *($9 + [80])
	CALL memcpy(($9 + [168]), $2, [66])
	CALL memcpy(($9 + [240]), ($9 + [168]), [66])
	$1 = ($0 + int_32($3 >> [1]))
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$8 = *((*($1) + $8))
	
.LABEL $label$5
	CALL memcpy(($9 + [312]), ($9 + [240]), [66])
	CALL memcpy(($9 + [14]), ($9 + [312]), [66])
	CALL void $1((int_32 $4), (int_64 $5), (int_64 ($9 + [14])), (int_32 $8))
	*([0] + [4]) = ($9 + [576])
	return [1]
}

int_32 .FUNC $391 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-2063328786525143040, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $384($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $640 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [112])
	*([0] + [4]) = $4
	*(($5 = $4) + [76]) = $0
	*($5 + [64]) = *($1)
	*($5 + [68]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [40])) = (int_64)0
	*(($5 + [32])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [2832])
	*(($5 + [56])) = [0]
	*($5 + [48]) = (int_64)0
	*($5 + [84]) = $0
	*($5 + [80]) = $0
	*($5 + [88]) = ($0 + $2)
	*($5 + [96]) = ($5 + [80])
	*($5 + [104]) = $5
	CALL $686(($5 + [104]), ($5 + [96]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [84]) = ($5 + [64])
	*($5 + [80]) = ($5 + [76])
	CALL $687(($5 + [80]), $5)
	if ( ((*($5 + [48]) & [1]) == 0) ){ goto $label$10 }
	CALL $738(*(($5 + [56])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [112])
	return [1]
}

int_32 .FUNC $641 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [368])
	*([0] + [4]) = $3
	*(($2 = $3) + [332]) = $0
	*($2 + [320]) = *($1)
	*($2 + [324]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [24])) = (int_64)0
	*(($2 + [40])) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [48]) = (int_64)0
	*($2 + [56]) = (int_64)0
	*($2 + [64]) = [0]
	*($2 + [72]) = (int_64)0
	*($2 + [80]) = (int_64)0
	*($2 + [88]) = [0]
	*($2 + [90]) = [0]
	CALL memset(($2 + [92]), [0], [66])
	*($2 + [168]) = (int_64)0
	*($2 + [160]) = (int_64)0
	*($2 + [176]) = [0]
	*($2 + [184]) = (int_64)0
	*($2 + [192]) = (int_64)0
	*($2 + [200]) = [0]
	CALL memset(($2 + [204]), [0], [66])
	*($2 + [280]) = (int_64)0
	*($2 + [272]) = (int_64)0
	*($2 + [288]) = (int_64)0
	*($2 + [296]) = [0]
	*($2 + [304]) = (int_64)0
	*($2 + [312]) = (int_64)0
	*($2 + [340]) = $1
	*($2 + [336]) = $1
	*($2 + [344]) = ($1 + $0)
	*($2 + [352]) = ($2 + [336])
	*($2 + [360]) = ($2 + [8])
	CALL $679(($2 + [360]), ($2 + [352]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [340]) = ($2 + [320])
	*($2 + [336]) = ($2 + [332])
	CALL $680(($2 + [336]), ($2 + [8]))
	*([0] + [4]) = ($2 + [368])
	return [1]
}

int_32 .FUNC $646 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [80])
	$10 = $11
	*([0] + [4]) = $11
	$2 = *($1 + [4])
	$9 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($11 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($10 + [16]) = (int_64)0
	*($10 + [8]) = (int_64)0
	*($10 + [24]) = (int_64)0
	*($10 + [32]) = (int_64)0
	*($10 + [40]) = (int_64)0
	*($10 + [52]) = $1
	*($10 + [48]) = $1
	*($10 + [56]) = ($1 + $3)
	*($10 + [64]) = ($10 + [48])
	*($10 + [72]) = ($10 + [8])
	CALL $665(($10 + [72]), ($10 + [64]))
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$8 = *(($10 + [40]))
	$7 = *(($10 + [32]))
	$6 = *(($10 + [24]))
	$5 = *(($10 + [16]))
	$4 = *($10 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$9 = *((*($1) + $9))
	
.LABEL $label$6
	CALL void $1((int_32 $4), (int_64 $5), (int_64 $6), (int_64 $7), (int_64 $8), (int_64 $9))
	*([0] + [4]) = ($10 + [80])
	return [1]
}

int_32 .FUNC $557 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[1]), [496])
	CALL memcpy(*($0 + [4]), $1, [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [2]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [6]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [10]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [12]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	*($3 + [15]) = *($1 + [20])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [496])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*([0] + [4]) = ($3 + [16])
	return $0
}

int_32 .FUNC $647 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [32])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = ($8 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	CALL read_action_data($8, $1)
	
.LABEL $label$1
	*($10 + [16]) = (int_64)0
	*($10 + [8]) = (int_64)0
	*($10 + [24]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [544])
	CALL memcpy(($10 + [8]), $8, [8])
	$6 = ($1 & [-8])
	CALL eosio_assert(((int_32)$6 != (int_32)[8]), [544])
	$7 = (($10 + [8]) + [8])
	CALL memcpy($7, ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[16]), [544])
	$6 = (($10 + [8]) + [16])
	CALL memcpy($6, ($8 + [16]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($6)
	$4 = *($7)
	$3 = *($10 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$9 = *((*($1) + $9))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $5), (int_64 $9))
	*([0] + [4]) = ($10 + [32])
	return [1]
}

int_32 .FUNC $650 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [544])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [544])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

int_32 .FUNC $644 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [176])
	*([0] + [4]) = $3
	*(($2 = $3) + [140]) = $0
	*($2 + [128]) = *($1)
	*($2 + [132]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [40])) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [48]) = (int_64)0
	CALL memset(($2 + [56]), [0], [66])
	*($2 + [148]) = $1
	*($2 + [144]) = $1
	*($2 + [152]) = ($1 + $0)
	*($2 + [160]) = ($2 + [144])
	*($2 + [168]) = ($2 + [8])
	CALL $667(($2 + [168]), ($2 + [160]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [148]) = ($2 + [128])
	*($2 + [144]) = ($2 + [140])
	CALL $668(($2 + [144]), ($2 + [8]))
	if ( ((*($2 + [36]) & [1]) == 0) ){ goto $label$5 }
	CALL $738(*(($2 + [44])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [176])
	return [1]
}

int_32 .FUNC $645 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [80])
	$11 = $12
	*([0] + [4]) = $12
	$2 = *($1 + [4])
	$10 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($12 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($11 + [8]) = (int_64)0
	*($11) = (int_64)0
	*($11 + [16]) = (int_64)0
	*($11 + [24]) = (int_64)0
	*($11 + [32]) = (int_64)0
	*($11 + [40]) = (int_64)0
	*($11 + [52]) = $1
	*($11 + [48]) = $1
	*($11 + [56]) = ($1 + $3)
	*($11 + [64]) = ($11 + [48])
	*($11 + [72]) = $11
	CALL $666(($11 + [72]), ($11 + [64]))
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$9 = *(($11 + [40]))
	$8 = *(($11 + [32]))
	$7 = *(($11 + [24]))
	$6 = *(($11 + [16]))
	$5 = *(($11 + [8]))
	$4 = *($11)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$10 = *((*($1) + $10))
	
.LABEL $label$6
	CALL void $1((int_32 $4), (int_64 $5), (int_64 $6), (int_64 $7), (int_64 $8), (int_64 $9), (int_64 $10))
	*([0] + [4]) = ($11 + [80])
	return [1]
}

int_32 .FUNC $639 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [192])
	*([0] + [4]) = $3
	*(($2 = $3) + [156]) = $0
	*($2 + [144]) = *($1)
	*($2 + [148]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [40])) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [48]) = (int_64)0
	*($2 + [56]) = (int_64)0
	*($2 + [64]) = [0]
	*(($2 + [68])) = [0]
	*(($2 + [72])) = [0]
	CALL memset(($2 + [76]), [0], [66])
	*($2 + [142]) = [0]
	*($2 + [164]) = $1
	*($2 + [160]) = $1
	*($2 + [168]) = ($1 + $0)
	*($2 + [176]) = ($2 + [160])
	*($2 + [184]) = $2
	CALL $688(($2 + [184]), ($2 + [176]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [164]) = ($2 + [144])
	*($2 + [160]) = ($2 + [156])
	CALL $689(($2 + [160]), $2)
	if ( ((*($2 + [64]) & [1]) == 0) ){ goto $label$5 }
	CALL $738(*(($2 + [72])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [192])
	return [1]
}

int_32 .FUNC $619 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [80])
	$10 = $11
	*([0] + [4]) = $11
	$2 = *($1 + [4])
	$9 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($11 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($10 + [24]) = (int_64)0
	*($10 + [8]) = (int_64)0
	*($10 + [40]) = (int_64)0
	*($10 + [52]) = $1
	*($10 + [48]) = $1
	*($10 + [56]) = ($1 + $3)
	*($10 + [64]) = ($10 + [48])
	*($10 + [72]) = ($10 + [8])
	CALL $716(($10 + [72]), ($10 + [64]))
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$8 = *(($10 + [40]))
	$6 = *(($10 + [24]))
	$7 = *($10 + [32])
	$5 = *($10 + [16])
	$4 = *($10 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$9 = *((*($1) + $9))
	
.LABEL $label$6
	CALL void $1((int_32 $4), (int_64 $5), (int_64 $6), (int_64 $7), (int_64 $8), (int_64 $9))
	*([0] + [4]) = ($10 + [80])
	return [1]
}

int_32 .FUNC $618 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [112])
	$12 = $13
	*([0] + [4]) = $13
	$2 = *($1 + [4])
	$11 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($13 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($12 + [16]) = (int_64)0
	*($12 + [8]) = (int_64)0
	*($12 + [32]) = (int_64)0
	*($12 + [48]) = (int_64)0
	*($12 + [56]) = [0]
	*($12 + [64]) = (int_64)0
	*($12 + [72]) = [0]
	*($12 + [84]) = $1
	*($12 + [80]) = $1
	*($12 + [88]) = ($1 + $3)
	*($12 + [96]) = ($12 + [80])
	*($12 + [104]) = ($12 + [8])
	CALL $717(($12 + [104]), ($12 + [96]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *(($12 + [72]))
	$10 = *(($12 + [64]))
	$13 = *(($12 + [56]))
	$9 = *(($12 + [48]))
	$7 = *(($12 + [32]))
	$5 = *(($12 + [16]))
	$8 = *($12 + [40])
	$6 = *($12 + [24])
	$4 = *($12 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$11 = *((*($1) + $11))
	
.LABEL $label$5
	CALL void $1((int_32 $4), (int_64 $5), (int_64 $6), (int_64 $7), (int_64 $8), (int_64 $9), (int_64 ($13 & [65535])), (int_32 $10), (int_64 ($3 & [65535])), (int_32 $11))
	*([0] + [4]) = ($12 + [112])
	return [1]
}

int_32 .FUNC $638 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [496])
	$12 = $13
	*([0] + [4]) = $13
	$3 = *($1 + [4])
	$11 = *($1)
	$1 = [0]
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($4)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($13 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $4)
	
.LABEL $label$1
	*(($13 = ($12 + [136]))) = (int_64)0
	*($12 + [104]) = (int_64)0
	*($12 + [96]) = (int_64)0
	*($12 + [112]) = (int_64)0
	*($12 + [120]) = (int_64)0
	*($12 + [128]) = (int_64)0
	*($12 + [144]) = (int_64)0
	*($12 + [152]) = (int_64)0
	$2 = CALL memset(($12 + [160]), [0], [66])
	*($12 + [412]) = $1
	*($12 + [408]) = $1
	*($12 + [416]) = ($1 + $4)
	*($12 + [232]) = ($12 + [408])
	*($12 + [336]) = ($12 + [96])
	CALL $691(($12 + [336]), ($12 + [232]))
	if ( ($4 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$6 = *((($12 + [96]) + [8]))
	*(($12 + [316])) = *(($12 + [140]))
	*(($1 = (($12 + [304]) + [8]))) = *($13)
	*($12 + [308]) = *(($12 + [132]))
	$5 = *($12 + [96])
	*($12 + [304]) = *($12 + [128])
	$8 = *(($12 + [120]))
	$7 = *(($12 + [112]))
	$10 = *(($12 + [152]))
	$9 = *(($12 + [144]))
	CALL memcpy(($12 + [232]), $2, [66])
	CALL memcpy(($12 + [336]), ($12 + [232]), [66])
	*((($12 + [320]) + [8])) = *($1)
	*($12 + [320]) = *($12 + [304])
	$1 = ($0 + int_32($3 >> [1]))
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$11 = *((*($1) + $11))
	
.LABEL $label$5
	*(($4 = (($12 + [480]) + [8]))) = *((($12 + [320]) + [8]))
	*($12 + [480]) = *($12 + [320])
	CALL memcpy(($12 + [408]), ($12 + [336]), [66])
	*((($12 + [80]) + [8])) = *($4)
	*($12 + [80]) = *($12 + [480])
	CALL memcpy(($12 + [14]), ($12 + [408]), [66])
	CALL void $1((int_32 $5), (int_64 $6), (int_64 $7), (int_64 $8), (int_64 ($12 + [80])), (int_32 $9), (int_64 $10), (int_64 ($12 + [14])), (int_32 $11))
	*([0] + [4]) = ($12 + [496])
	return [1]
}

void .FUNC $198 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [16]) == (int_32)$0), [288])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-7122859525593366528, (int_64)-7122859525593366528)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $197($0, $3)
	CALL eosio_assert(((int_32)*($3 + [16]) == (int_32)$0), [288])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [1328])
	CALL $232($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $233($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $349 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [896])
	$3 = *($1)
	$4 = ($1 + [16])
	$5 = *($1 + [12])
	if ( ((int_32)$5 == (int_32)*($4)) ){ goto $label$2 }
	
.LOOP $label$3:
	if ( CALL $354($5, *($2)) ){ goto $label$1 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)*($4)) ){ goto $label$3 }
	
.LABEL $label$2
	*($1 + [9]) = (*($1 + [9]) + [1])
	$2 = *($2)
	if ( ((int_32)$5 == (int_32)*(($1 + [20]))) ){ goto $label$4 }
	CALL memcpy($5, $2, [40])
	*(($5 = ($1 + [16]))) = (*($5) + [40])
	goto $label$1 
	
.LABEL $label$4
	CALL $351(($1 + [12]), $2)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [960])
	$2 = *(($1 + [12]))
	$4 = *(($1 + [16]))
	$6 = (CASTING uint_64)(uint_32 ((int_32)($4 - $2) / (int_32)[40]))
	$5 = [10]
	
.LOOP $label$5:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = ($5 + [33])
	$6 = *($2)
	
.LOOP $label$8:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$8 }
	$2 = ($2 + [40])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ($5 <= [513]) ){ goto $label$10 }
	$2 = CALL malloc($5)
	goto $label$9 
	
.LABEL $label$10
	$2 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$9
	*($7 + [4]) = $2
	*($7) = $2
	*($7 + [8]) = ($2 + $5)
	CALL $352($7, $1)
	CALL db_update_i64(*($1 + [28]), (int_64)0, $2, $5)
	if ( ($5 <= [513]) ){ goto $label$11 }
	CALL free($2)
	
.LABEL $label$11
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*([0] + [4]) = ($7 + [16])
}

void .FUNC _ZN11walexchange12wal_exchange13add_trade_keyEyN5eosio10public_keyE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	*($7 + [48]) = $1
	*(($3 = ($7 + [40]))) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($0)
	*($7 + [8]) = $5
	*($7 + [16]) = $5
	$4 = CALL db_find_i64($5, $5, (int_64)-3020384829779738624, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $18(($7 + [8]), $4)
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)($7 + [8])), [288])
	CALL eosio_assert((*($4 + [9]) <= *(($0 + [144]))), [6288])
	CALL eosio_assert((((int_32)(*(($4 + [16])) - *($4 + [12])) / (int_32)[40]) <= *(($0 + [145]))), [6320])
	*($7 + [64]) = $2
	CALL eosio_assert([1], [1328])
	CALL $349(($7 + [8]), $4, ($7 + [64]))
	$3 = *($7 + [32])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0)
	*($7 + [4]) = $2
	*($7) = ($7 + [48])
	*($7 + [88]) = $5
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$16()), [432])
	*($7 + [68]) = $7
	*($7 + [64]) = ($7 + [8])
	*($7 + [72]) = ($7 + [88])
	*(($0 = CALL $737([40])) + [20]) = [0]
	*($0 + [12 align=4]) = (int_64)0
	*($0 + [24]) = ($7 + [8])
	CALL $350(($7 + [64]), $0)
	*($7 + [80]) = $0
	$5 = *($0)
	*($7 + [64]) = $5
	$2 = *($0 + [28])
	*($7 + [60]) = $2
	$6 = ($7 + [36])
	$4 = *($6)
	if ( ((uint_32)$4 >= (uint_32)*($3)) ){ goto $label$5 }
	*($4 + [8]) = $5
	*($4 + [16]) = $2
	*($7 + [80]) = [0]
	*($4) = $0
	*($6) = ($4 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $28(($7 + [32]), ($7 + [80]), ($7 + [64]), ($7 + [60]))
	
.LABEL $label$4
	$0 = *($7 + [80])
	*($7 + [80]) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	$4 = *($0 + [12])
	if ( ($4 == 0) ){ goto $label$7 }
	*(($0 + [16])) = $4
	CALL $738($4)
	
.LABEL $label$7
	CALL $738($0)
	
.LABEL $label$6
	$3 = *($7 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($7 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	$2 = *($4 + [12])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($4 + [16])) = $2
	CALL $738($2)
	
.LABEL $label$12
	CALL $738($4)
	
.LABEL $label$11
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($7 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $3
	
.LABEL $label$8
	*($6) = $3
	CALL $738($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [96])
}

int_32 .FUNC $611 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$3 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$3 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$2
	CALL read_action_data($3, $1)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [544])
	CALL memcpy(($5 + [8]), $3, [1])
	$6 = *($5 + [8])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($3)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL void $1((int_32 ($6 & [255])), (int_32 $4))
	*([0] + [4]) = ($5 + [16])
	return [1]
}

int_32 .FUNC $610 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [544])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [544])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

int_32 .FUNC $613 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [128])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = [0]
	$6 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $3)
	
.LABEL $label$1
	*($10 + [32]) = (int_64)0
	*($10 + [48]) = (int_64)0
	*($10 + [40]) = (int_64)1398362884
	CALL eosio_assert([1], [2768])
	$4 = ($10 + [48])
	$7 = (int_64)5462355
	
.LOOP $label$5:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($8, [2832])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [544])
	CALL memcpy(($10 + [32]), $6, [8])
	$1 = ($3 & [-8])
	CALL eosio_assert(((int_32)$1 != (int_32)[8]), [544])
	$8 = (($10 + [32]) + [8])
	CALL memcpy($8, ($6 + [8]), [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[16]), [544])
	CALL memcpy($4, ($6 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($6)
	
.LABEL $label$8
	*(($1 = (($10 + [56]) + [16]))) = *((($10 + [32]) + [16]))
	*(($3 = (($10 + [56]) + [8]))) = *($8)
	*($10 + [56]) = *($10 + [32])
	*((($10 + [80]) + [16])) = *($1)
	*((($10 + [80]) + [8])) = *($3)
	*($10 + [80]) = *($10 + [56])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$9 = *((*($1) + $9))
	
.LABEL $label$9
	$7 = *((($10 + [80]) + [16]))
	*((($10 + [104]) + [16])) = $7
	$5 = *((($10 + [80]) + [8]))
	*((($10 + [104]) + [8])) = $5
	*((($10 + [8]) + [16])) = $7
	*((($10 + [8]) + [8])) = $5
	$7 = *($10 + [80])
	*($10 + [104]) = $7
	*($10 + [8]) = $7
	CALL void $1((int_32 ($10 + [8])), (int_32 $9))
	*([0] + [4]) = ($10 + [128])
	return [1]
}

int_32 .FUNC $612 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$3 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$3 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$2
	CALL read_action_data($3, $1)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[3]), [544])
	CALL memcpy(($5 + [8]), $3, [4])
	$6 = *($5 + [8])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($3)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL void $1((int_32 $6), (int_32 $4))
	*([0] + [4]) = ($5 + [16])
	return [1]
}

int_32 .FUNC $615 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [544])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC $614 (int_32 $0, int_32 $1)
{
	int_32 $2
	float_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [544])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC $617 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = [0]
	*($8 + [16]) = (int_64)0
	*($8 + [24]) = (int_64)0
	*($8 + [36]) = $1
	*($8 + [32]) = $1
	*($8 + [40]) = ($1 + $3)
	*($8 + [48]) = ($8 + [32])
	*($8 + [56]) = $8
	CALL $719(($8 + [56]), ($8 + [48]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$6 = *(($8 + [24]))
	$5 = *(($8 + [16]))
	$4 = *(($8 + [8]))
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$7 = *((*($1) + $7))
	
.LABEL $label$5
	CALL void $1((int_32 ((int_32)($3 & [255]) != (int_32)[0])), (int_32 $4), (int_64 $5), (int_64 $6), (int_64 $7))
	*([0] + [4]) = ($8 + [64])
	return [1]
}

int_32 .FUNC $616 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [64])
	$11 = $12
	*([0] + [4]) = $12
	$2 = *($1 + [4])
	$10 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($12 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($11 + [8]) = (int_64)0
	*($11 + [16]) = (int_64)0
	*($11 + [24]) = [0]
	*($11 + [28]) = [0]
	*($11 + [36]) = $1
	*($11 + [32]) = $1
	*($11 + [40]) = ($1 + $3)
	*($11 + [48]) = ($11 + [32])
	*($11 + [56]) = ($11 + [8])
	CALL $720(($11 + [56]), ($11 + [48]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *(($11 + [28]))
	$12 = *(($11 + [24]))
	$0 = *(($11 + [20]))
	$9 = *(($11 + [18]))
	$8 = *(($11 + [16]))
	$7 = *($11 + [14])
	$6 = *($11 + [12])
	$5 = *($11 + [10])
	$4 = *($11 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$10 = *((*($1) + $10))
	
.LABEL $label$5
	CALL void $1((int_32 ($4 & [65535])), (int_32 ($5 & [65535])), (int_32 ($6 & [65535])), (int_32 ($7 & [65535])), (int_32 ($8 & [65535])), (int_32 ($9 & [65535])), (int_32 $0), (int_32 $12), (int_32 ((int_32)($3 & [255]) != (int_32)[0])), (int_32 $10))
	*([0] + [4]) = ($11 + [64])
	return [1]
}

void .FUNC $219 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$6 = *($4 + [16])
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$1 }
	$6 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-4418693909069692928, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $221($4, $5)
	*($9 + [4]) = [0]
	*($9) = $4
	$6 = *(*(CALL $222($9) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $6
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [2192])
	$6 = *(($4 + [16]))
	*($1 + [8]) = [6]
	*($1) = $6
	*($1 + [16]) = *(*(*($3 + [4]) + [4]))
	$4 = $10
	$10 = ($4 + [-32])
	*([0] + [4]) = $10
	CALL eosio_assert([1], [496])
	CALL memcpy($10, $1, [8])
	CALL eosio_assert([1], [496])
	$3 = ($1 + [8])
	CALL memcpy(($4 + [-24]), $3, [1])
	CALL eosio_assert([1], [496])
	$4 = ($1 + [16])
	CALL memcpy(($4 + [-23]), $4, [8])
	$6 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-4418693909069692928, *(*($0 + [8])), $6, $10, [17])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$6 = *(($2 + [8]))
	$7 = *(*(($0 + [8])))
	$8 = *($1)
	*($9 + [8]) = *($3)
	*($9) = *($4)
	*($1 + [32]) = CALL db_idx128_store($6, (int_64)-4418693909069692928, $7, $8, $9)
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $218 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$6 = *($4 + [16])
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$1 }
	$6 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-4418693909069692928, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $221($4, $5)
	*($9 + [4]) = [0]
	*($9) = $4
	$6 = *(*(CALL $222($9) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $6
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [2192])
	$6 = *(($4 + [16]))
	*($1 + [8]) = [5]
	*($1) = $6
	*($1 + [16]) = *(*(*($3 + [4]) + [4]))
	$4 = $10
	$10 = ($4 + [-32])
	*([0] + [4]) = $10
	CALL eosio_assert([1], [496])
	CALL memcpy($10, $1, [8])
	CALL eosio_assert([1], [496])
	$3 = ($1 + [8])
	CALL memcpy(($4 + [-24]), $3, [1])
	CALL eosio_assert([1], [496])
	$4 = ($1 + [16])
	CALL memcpy(($4 + [-23]), $4, [8])
	$6 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-4418693909069692928, *(*($0 + [8])), $6, $10, [17])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$6 = *(($2 + [8]))
	$7 = *(*(($0 + [8])))
	$8 = *($1)
	*($9 + [8]) = *($3)
	*($9) = *($4)
	*($1 + [32]) = CALL db_idx128_store($6, (int_64)-4418693909069692928, $7, $8, $9)
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $505 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*($10 + [24]) = (int_64)0
	*($10 + [8]) = *(($2 + [8]))
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx128_lowerbound(*($8), *($8 + [8]), (int_64)8201287169478573024, $10, ($10 + [24]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [24])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $103($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)8201287169478573024, $5))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [32])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [32])
}

int_32 .FUNC $504 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $737([32])) + [16]) = [0]
	*($6 + [8 align=4]) = (int_64)0
	*($6 + [20]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [544])
	CALL memcpy($6, $4, [8])
	*($8 + [36]) = ($4 + [8])
	CALL $101(($8 + [32]), ($6 + [8]))
	*($6 + [24]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [24])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $498(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$10 }
	CALL $738(*(($4 + [16])))
	
.LABEL $label$10
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $507 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [28]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2320])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)8201287169478573024)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2256])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2256])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $103(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $506 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	$11 = $12
	*([0] + [4]) = $12
	$2 = *($0)
	$3 = *($0 + [4])
	$7 = *($3)
	$9 = *($7 + [16])
	if ( ((int_64)$9 != (int_64)-1) ){ goto $label$1 }
	$9 = (int_64)0
	$6 = CALL db_lowerbound_i64(*($7), *($7 + [8]), (int_64)8201287169478573024, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $103($7, $6)
	*($11 + [4]) = [0]
	*($11) = $7
	$9 = *(*(CALL $507($11) + [4]))
	$9 = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($7 + [16])) = $9
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($9 <= (int_64)-2), [2192])
	*($1) = *(($7 + [16]))
	$7 = *($3 + [4])
	if ( (*($7) & [1]) ){ goto $label$4 }
	$6 = ($7 + [1])
	goto $label$3 
	
.LABEL $label$4
	$6 = *($7 + [8])
	
.LABEL $label$3
	$7 = [-1]
	
.LOOP $label$5:
	$5 = ($6 + $7)
	$4 = ($7 + [1])
	$7 = $4
	if ( *(($5 + [1])) ){ goto $label$5 }
	if ( ($4 == 0) ){ goto $label$7 }
	$8 = (CASTING uint_64)(uint_32 $4)
	$9 = (int_64)8
	$10 = (int_64)0
	
.LOOP $label$8:
	$7 = *($6)
	if ( ((uint_32)(($7 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$10 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$9 & (int_64)4294967288)) | (int_64)$10)
	
.LABEL $label$9
	$6 = ($6 + [1])
	$9 = ((int_64)$9 + (int_64)8)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 != (int_64)0) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$10 = (int_64)0
	
.LABEL $label$6
	*($1 + [8]) = (uint_64)$10 >> (uint_64)(int_64)8)
	*($1 + [16]) = *(*($3 + [8]))
	$7 = $12
	$6 = ($7 + [-32])
	*([0] + [4]) = $6
	CALL eosio_assert([1], [496])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [496])
	$5 = ($1 + [8])
	CALL memcpy(($7 + [-24]), $5, [8])
	CALL eosio_assert([1], [496])
	$7 = ($1 + [16])
	CALL memcpy(($7 + [-16]), $7, [8])
	$9 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)8201287169478573024, *(*($0 + [8])), $9, $6, [24])
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$10 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	$9 = *(($2 + [8]))
	$8 = *(*(($0 + [8])))
	$10 = *($1)
	*($11 + [8]) = *($5)
	*($11) = *($7)
	*($1 + [32]) = CALL db_idx128_store($9, (int_64)8201287169478573024, $8, $10, $11)
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $501 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$8 = *($0 + [4])
	*($1) = *(*($8))
	$2 = *($0)
	$3 = ($1 + [8])
	CALL $740($3, *($8 + [4]))
	$4 = ($1 + [20])
	CALL $740($4, *($8 + [8]))
	*(($8 = $7)) = [0]
	CALL $502($8, $1)
	$5 = *($8)
	if ( ($5 <= [513]) ){ goto $label$2 }
	$7 = CALL malloc($5)
	goto $label$1 
	
.LABEL $label$2
	$7 = ($7 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$1
	*($8) = $7
	*($8 + [8]) = ($7 + $5)
	CALL eosio_assert(((int_32)$5 > (int_32)[7]), [496])
	CALL memcpy($7, $1, [8])
	*($8 + [4]) = ($7 + [8])
	CALL $91(CALL $91(CALL $91($8, $3), $4), ($1 + [32]))
	$6 = *($1)
	*($1 + [48]) = CALL db_store_i64(*($2 + [8]), (int_64)8201437361402281984, *(*($0 + [8])), $6, $7, $5)
	if ( ($5 <= [513]) ){ goto $label$3 }
	CALL free($7)
	
.LABEL $label$3
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$4 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $500 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [44]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [896])
	$3 = *($1)
	$4 = ($1 + [8])
	CALL $740($4, *($2))
	$5 = ($1 + [20])
	CALL $740($5, *($2 + [4]))
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [960])
	*(($2 = $7)) = [0]
	CALL $502($2, $1)
	$6 = *($2)
	if ( ($6 <= [513]) ){ goto $label$2 }
	$7 = CALL malloc($6)
	goto $label$1 
	
.LABEL $label$2
	$7 = ($7 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$1
	*($2) = $7
	*($2 + [8]) = ($7 + $6)
	CALL eosio_assert(((int_32)$6 > (int_32)[7]), [496])
	CALL memcpy($7, $1, [8])
	*($2 + [4]) = ($7 + [8])
	CALL $91(CALL $91(CALL $91($2, $4), $5), ($1 + [32]))
	CALL db_update_i64(*($1 + [48]), (int_64)0, $7, $6)
	if ( ($6 <= [513]) ){ goto $label$3 }
	CALL free($7)
	
.LABEL $label$3
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*([0] + [4]) = ($2 + [16])
}

void .FUNC $468 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $469 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [20]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [32]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [36]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $466 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [2768])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [2832])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [2832])
	return $0
}

int_32 .FUNC $467 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $464 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [32]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [48]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [544])
	CALL memcpy(($1 + [52]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [544])
	CALL memcpy(($3 + [14]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1 + [54]) = ((int_32)*($3 + [14]) != (int_32)[0])
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [72]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [544])
	CALL memcpy(($3 + [15]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1 + [76]) = ((int_32)*($3 + [15]) != (int_32)[0])
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [80]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	*([0] + [4]) = ($3 + [16])
	return $0
}

int_32 .FUNC $465 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $737([64])
	$4 = CALL $466($6)
	*($6 + [48]) = $0
	CALL $467(($8 + [32]), $4)
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $468(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $462 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $463 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $737([112])) + [88]) = $0
	CALL $464(($8 + [32]), $6)
	*($6 + [96]) = [-1]
	*($6 + [92]) = $1
	*($6 + [100]) = [-1]
	*($6 + [104]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [92])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $300(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $460 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [432])
	*(($5 = CALL $737([56])) + [40]) = $1
	$3 = CALL memcpy($5, *($3), [40])
	*($7 + [72]) = (($7 + [16]) + [40])
	*($7 + [68]) = ($7 + [16])
	*($7 + [64]) = ($7 + [16])
	CALL $461(($7 + [64]), $3)
	*($3 + [44]) = CALL db_store_i64(*($1 + [8]), (int_64)5031813144072871104, $2, (int_64)5031813144072871104, ($7 + [16]), [40])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)5031813144072871104) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)5031813144072871105
	
.LABEL $label$1
	*($7 + [64]) = $3
	*($7 + [16]) = (int_64)5031813144072871104
	$4 = *($3 + [44])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($5 + [8]) = (int_64)5031813144072871104
	*($5 + [16]) = $4
	*($7 + [64]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $462(($1 + [24]), ($7 + [64]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [64])
	*($7 + [64]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $738($1)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [80])
}

int_32 .FUNC $461 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [20]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [36]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $725 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($3 + [52]), *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [56]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [64]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [68]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	*($4 + [8]) = $2
	CALL $726(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $668 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [320])
	*([0] + [4]) = $8
	$5 = *($1 + [24])
	$4 = *($1 + [16])
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $767(($8 + [144]), ($1 + [28]))
	$6 = *($1 + [40])
	CALL memcpy(($8 + [78]), ($1 + [48]), [66])
	CALL memcpy(($8 + [160]), ($8 + [78]), [66])
	$1 = *($0 + [4])
	$7 = *($1 + [4])
	$0 = (*(*($0)) + int_32($7 >> [1]))
	$1 = *($1)
	if ( (($7 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $767(($8 + [304]), ($8 + [144]))
	CALL memcpy(($8 + [232]), ($8 + [160]), [66])
	CALL memcpy(($8 + [12]), ($8 + [232]), [66])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $4), (int_64 $5), (int_32 ($8 + [304])), (int_32 $6), (int_64 ($8 + [12])), (int_32 $1))
	if ( ((*($8 + [304]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*($8 + [312]))
	
.LABEL $label$2
	if ( ((*($8 + [144]) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($8 + [152]))
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [320])
}

void .FUNC $669 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [44])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [48])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [52])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [56])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [60])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [64])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [68])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [72])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [76])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [80])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [84])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [88])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [92])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [96])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [100])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [104])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [108])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [112])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [116])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [120])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [124])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [128])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [132])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [136])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [140])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [144])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [148])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [152])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [156])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [160])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [164])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [168])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [172])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [176])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [180])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [184])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [188])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [192])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [196])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [200])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [204])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [208])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [212])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [216])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [220])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [224])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [228])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [232])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [236])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [240])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [244])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [248])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [252])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [256])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$2 = *($0 + [260])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [544])
	CALL memcpy($2, *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
}

void .FUNC $724 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($3 + [24]), *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [32]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [48]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	*($4 + [8]) = $2
	CALL $725(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $664 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [544])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [4]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [8]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [12]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [16]), *($1 + [4]), [4])
	*($1 + [4]) = (*($1 + [4]) + [4])
}

void .FUNC $665 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [32]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC $666 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [32]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [40]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC $667 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [272])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($3 + [24]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	CALL $101(*($1), ($3 + [28]))
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($4) = *($1)
	*($4 + [12]) = ($3 + [49])
	*($4 + [8]) = ($3 + [48])
	*($4 + [16]) = ($3 + [50])
	*($4 + [20]) = ($3 + [51])
	*($4 + [24]) = ($3 + [52])
	*($4 + [28]) = ($3 + [53])
	*($4 + [32]) = ($3 + [54])
	*($4 + [36]) = ($3 + [55])
	*($4 + [40]) = ($3 + [56])
	*($4 + [44]) = ($3 + [57])
	*($4 + [48]) = ($3 + [58])
	*($4 + [52]) = ($3 + [59])
	*($4 + [56]) = ($3 + [60])
	*($4 + [60]) = ($3 + [61])
	*($4 + [64]) = ($3 + [62])
	*($4 + [68]) = ($3 + [63])
	*($4 + [72]) = ($3 + [64])
	*($4 + [76]) = ($3 + [65])
	*($4 + [80]) = ($3 + [66])
	*($4 + [84]) = ($3 + [67])
	*($4 + [88]) = ($3 + [68])
	*($4 + [92]) = ($3 + [69])
	*($4 + [96]) = ($3 + [70])
	*($4 + [100]) = ($3 + [71])
	*($4 + [104]) = ($3 + [72])
	*($4 + [108]) = ($3 + [73])
	*($4 + [112]) = ($3 + [74])
	*($4 + [116]) = ($3 + [75])
	*($4 + [120]) = ($3 + [76])
	*($4 + [124]) = ($3 + [77])
	*($4 + [128]) = ($3 + [78])
	*($4 + [132]) = ($3 + [79])
	*($4 + [136]) = ($3 + [80])
	*($4 + [140]) = ($3 + [81])
	*($4 + [144]) = ($3 + [82])
	*($4 + [148]) = ($3 + [83])
	*($4 + [152]) = ($3 + [84])
	*($4 + [156]) = ($3 + [85])
	*($4 + [160]) = ($3 + [86])
	*($4 + [164]) = ($3 + [87])
	*($4 + [168]) = ($3 + [88])
	*($4 + [172]) = ($3 + [89])
	*($4 + [176]) = ($3 + [90])
	*($4 + [180]) = ($3 + [91])
	*($4 + [184]) = ($3 + [92])
	*($4 + [188]) = ($3 + [93])
	*($4 + [192]) = ($3 + [94])
	*($4 + [196]) = ($3 + [95])
	*($4 + [200]) = ($3 + [96])
	*($4 + [204]) = ($3 + [97])
	*($4 + [208]) = ($3 + [98])
	*($4 + [212]) = ($3 + [99])
	*($4 + [216]) = ($3 + [100])
	*($4 + [220]) = ($3 + [101])
	*($4 + [224]) = ($3 + [102])
	*($4 + [228]) = ($3 + [103])
	*($4 + [232]) = ($3 + [104])
	*($4 + [236]) = ($3 + [105])
	*($4 + [240]) = ($3 + [106])
	*($4 + [244]) = ($3 + [107])
	*($4 + [248]) = ($3 + [108])
	*($4 + [252]) = ($3 + [109])
	*($4 + [256]) = ($3 + [110])
	*($4 + [260]) = ($3 + [111])
	*($4 + [264]) = ($3 + [112])
	*($4 + [268]) = ($3 + [113])
	CALL $669(($4 + [8]), $4)
	*([0] + [4]) = ($4 + [272])
}

void .FUNC $660 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($4 = ($0 + [32]))) = (int_64)0
	*(($0 + [24])) = (int_64)1398362884
	CALL eosio_assert([1], [2768])
	$3 = ($0 + [8])
	$5 = (int_64)5462355
	$6 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [2832])
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [544])
	CALL memcpy($0, $1, [8])
	$6 = ($2 & [-8])
	CALL eosio_assert(((int_32)$6 != (int_32)[8]), [544])
	CALL memcpy($3, ($1 + [8]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[16]), [544])
	CALL memcpy(($0 + [16]), ($1 + [16]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[24]), [544])
	CALL memcpy(($0 + [24]), ($1 + [24]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[32]), [544])
	CALL memcpy($4, ($1 + [32]), [8])
}

void .FUNC $661 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [16]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [24]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC $662 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [544])
	CALL memcpy(($4 + [14]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*($3 + [16]) = ((int_32)*($4 + [14]) != (int_32)[0])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [544])
	CALL memcpy(($4 + [15]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*($3 + [17]) = ((int_32)*($4 + [15]) != (int_32)[0])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((int_32)*($1 + [8]) != (int_32)*($1 + [4])), [544])
	CALL memcpy(($4 + [13]), *($1 + [4]), [1])
	*($1 + [4]) = (*($1 + [4]) + [1])
	*($3 + [32]) = ((int_32)*($4 + [13]) != (int_32)[0])
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $663 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($3 + [32]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($3 + [36]), *($1 + [4]), [2])
	*($1 + [4]) = (*($1 + [4]) + [2])
}

void .FUNC $726 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [72]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [80]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [88]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [96]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC $721 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($3 + [8]), *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($2 + [10]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [12]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [16]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$1 = *($1)
	CALL eosio_assert(((int_32)*($1 + [8]) != (int_32)*($1 + [4])), [544])
	CALL memcpy(($4 + [15]), *($1 + [4]), [1])
	*($1 + [4]) = (*($1 + [4]) + [1])
	*($2 + [20]) = ((int_32)*($4 + [15]) != (int_32)[0])
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $720 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [544])
	CALL memcpy($3, *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($2 + [2]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($2 + [4]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($2 + [6]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	*($4 + [8]) = $2
	CALL $721(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $189 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy($1, *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [4]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [544])
	CALL memcpy(($1 + [12]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

int_32 .FUNC $262 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [8]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3661136964716855296, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $215($0, $5)
	CALL eosio_assert(((int_32)*($6 + [8]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $263 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3670317554737348608, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $229($0, $5)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN11walexchange12wal_exchange13settle_cancelEyNS_9to_cancelE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [240])
	*([0] + [4]) = $6
	*((($6 + [192]) + [32])) = [0]
	*($6 + [200]) = $1
	*($6 + [208]) = (int_64)-1
	*($6 + [216]) = (int_64)0
	$4 = *($0)
	*($6 + [192]) = $4
	*($6 + [228]) = [0]
	*((($6 + [152]) + [32])) = [0]
	*($6 + [160]) = $1
	*($6 + [152]) = $4
	*($6 + [168]) = (int_64)-1
	*($6 + [176]) = (int_64)0
	*($6 + [188]) = [0]
	*($6 + [144]) = ($6 + [192])
	*($6 + [72]) = (int_64)2
	$4 = *($2)
	*($6 + [64]) = $4
	CALL $285(($6 + [232]), ($6 + [144]), ($6 + [64]))
	$2 = *($6 + [236])
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ((int_64)(((int_64)((int_64)*($6 + [64]) ^ (int_64)*($2 + [8])) | (int_64)((int_64)*($6 + [72]) ^ (int_64)*($2 + [16]))) == 0) == 0) ){ goto $label$1 }
	if ( ($2 == 0) ){ goto $label$1 }
	$2 = CALL $256(($6 + [152]), *($2), [592])
	CALL memcpy(($6 + [88]), $2, [56])
	CALL memcpy(($6 + [8]), ($6 + [88]), [56])
	CALL _ZN11walexchange12wal_exchange15settle_withdrawEyNS_11to_withdrawE($0, $1, ($6 + [8]))
	CALL $239(($6 + [152]), $2)
	
.LABEL $label$1
	*($6 + [72]) = $1
	*($6 + [80]) = [60]
	*($6 + [64]) = *($0)
	CALL _ZN11walexchange13order_manager12cancel_orderEy(($6 + [64]), $4)
	$3 = *($6 + [176])
	if ( ($3 == 0) ){ goto $label$2 }
	$5 = ($6 + [180])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$6 }
	CALL $738($2)
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($6 + [176]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $3
	
.LABEL $label$3
	*($5) = $3
	CALL $738($0)
	
.LABEL $label$2
	$3 = *($6 + [216])
	if ( ($3 == 0) ){ goto $label$7 }
	$5 = ($6 + [220])
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	if ( ((*($0 + [44]) & [1]) == 0) ){ goto $label$12 }
	CALL $738(*(($0 + [52])))
	
.LABEL $label$12
	if ( ((*($0 + [32]) & [1]) == 0) ){ goto $label$13 }
	CALL $738(*(($0 + [40])))
	
.LABEL $label$13
	CALL $738($0)
	
.LABEL $label$11
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$10 }
	$0 = *(($6 + [216]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $3
	
.LABEL $label$8
	*($5) = $3
	CALL $738($0)
	
.LABEL $label$7
	*([0] + [4]) = ($6 + [240])
}

void .FUNC $265 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$11 = (*([0] + [4]) - [48])
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [36]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [896])
	$3 = ($1 + [8])
	*(($12 = $11) + [24]) = *($3)
	$5 = (*(*($2) + [4]) + [8])
	$4 = *($1)
	$7 = ($1 + [16])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)*(($1 + [20]))) ){ goto $label$2 }
	*($6) = *($5)
	*($7) = (*($7) + [1])
	goto $label$1 
	
.LABEL $label$2
	CALL $281(($1 + [12]), $5)
	
.LABEL $label$1
	$7 = (*(*($2) + [4]) + [16])
	$5 = ($1 + [28])
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)*(($1 + [32]))) ){ goto $label$4 }
	*($5) = ($2 + [8])
	*($2) = *($7)
	goto $label$3 
	
.LABEL $label$4
	CALL $282(($1 + [24]), $7)
	
.LABEL $label$3
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [960])
	$2 = [12]
	$7 = ($1 + [12])
	$6 = *($1 + [12])
	$5 = *(($1 + [16]))
	$8 = ($5 - $6)
	$10 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	$2 = ( $2 ? ($8 + $2) : ((int_32)$6 == (int_32)$5) )
	$5 = ($1 + [24])
	$8 = *($1 + [24])
	$6 = *(($1 + [28]))
	$9 = ($6 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$7 }
	$2 = (($9 & [-8]) + $2)
	
.LABEL $label$7
	if ( ($2 <= [513]) ){ goto $label$9 }
	$11 = CALL malloc($2)
	goto $label$8 
	
.LABEL $label$9
	$11 = ($11 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $11
	
.LABEL $label$8
	*($12 + [8]) = $11
	$6 = ($11 + $2)
	*($12 + [16]) = $6
	CALL eosio_assert(((int_32)$2 > (int_32)[7]), [496])
	CALL memcpy($11, $1, [8])
	$8 = ($11 + [8])
	CALL eosio_assert(((int_32)($6 - $8) > (int_32)[3]), [496])
	CALL memcpy($8, $3, [4])
	*($12 + [12]) = ($11 + [12])
	CALL $284(CALL $283(($12 + [8]), $7), $5)
	CALL db_update_i64(*($1 + [40]), (int_64)0, $11, $2)
	if ( ($2 <= [513]) ){ goto $label$10 }
	CALL free($11)
	
.LABEL $label$10
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$11 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*($12 + [40]) = *($3)
	if ( (CALL memcmp(($12 + [24]), ($12 + [40]), [8]) == 0) ){ goto $label$12 }
	$2 = *($1 + [44])
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4417018949669575792, ($12 + [32]), $4)
	*(($1 + [44])) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($12 + [40]))
	
.LABEL $label$12
	*([0] + [4]) = ($12 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange7confirmEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [192])
	*([0] + [4]) = $16
	*(($16 + [184])) = [0]
	*($16 + [168]) = (int_64)-1
	*($16 + [176]) = (int_64)0
	$14 = *($0)
	*($16 + [152]) = $14
	*($16 + [160]) = $14
	*($16 + [188]) = [0]
	$3 = ($0 + [12])
	$12 = *($0 + [8])
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$1 }
	$4 = ($0 + [256])
	
.LOOP $label$2:
	CALL prints([5344])
	$6 = ($5 + [28])
	$5 = $12
	$12 = *($5 + [24])
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$4:
	$15 = ($5 + [16])
	CALL printui(*($15))
	CALL prints([5360])
	$13 = $12
	CALL printi(*($13 + [24]))
	CALL prints([5360])
	$7 = *($15)
	$10 = *($0)
	$14 = *($13 + [24])
	$15 = CALL $267(($16 + [152]), *($13 + [16]), [592])
	$8 = *($15 + [8])
	$9 = *(($15 + [16]))
	if ( ((int_64)$7 != (int_64)$10) ){ goto $label$12 }
	*(($11 = (($16 + [104]) + [8]))) = $8
	*($16 + [104]) = $14
	CALL eosio_assert((uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$14 = (uint_64)*($11) >> (uint_64)(int_64)8)
	$15 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$12 = [1]
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$13 }
	goto $label$10 
	
.LABEL $label$12
	*(($11 = (($16 + [128]) + [8]))) = $8
	*($16 + [128]) = $14
	CALL eosio_assert((uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$14 = (uint_64)*($11) >> (uint_64)(int_64)8)
	$15 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$12 = [1]
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$16 }
	goto $label$8 
	
.LABEL $label$11
	$12 = [0]
	
.LABEL $label$10
	CALL eosio_assert($12, [2832])
	*((($16 + [104]) + [16])) = $9
	*((($16 + [32]) + [8])) = *($11)
	*((($16 + [32]) + [16])) = $9
	*($16 + [32]) = *($16 + [104])
	CALL _ZN11walexchange13asset_manager14adjust_balanceEyyN5eosio14extended_assetEy($4, $7, $7, ($16 + [32]), (int_64)0)
	$15 = *($13 + [4])
	if ( $15 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$12 = [0]
	
.LABEL $label$8
	CALL eosio_assert($12, [2832])
	*((($16 + [128]) + [16])) = $9
	*((($16 + [56]) + [8])) = *($11)
	*((($16 + [56]) + [16])) = $9
	*($16 + [56]) = *($16 + [128])
	CALL _ZN11walexchange13asset_manager14adjust_balanceEyyN5eosio14extended_assetEy($4, $7, $1, ($16 + [56]), (int_64)0)
	$15 = *($13 + [4])
	if ( ($15 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	
.LOOP $label$19:
	$12 = $15
	$15 = *($12)
	if ( $15 ){ goto $label$19 }
	goto $label$5 
	
.LABEL $label$6
	$12 = *($13 + [8])
	if ( ((int_32)*($12) == (int_32)$13) ){ goto $label$5 }
	$13 = ($13 + [8])
	
.LOOP $label$20:
	$15 = *($13)
	$13 = ($15 + [8])
	$12 = *($15 + [8])
	if ( ((int_32)$15 != (int_32)*($12)) ){ goto $label$20 }
	
.LABEL $label$5
	if ( ((int_32)$12 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$15 = *($5 + [4])
	if ( ($15 == 0) ){ goto $label$22 }
	
.LOOP $label$23:
	$12 = $15
	$15 = *($12)
	if ( $15 ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$12 = *($5 + [8])
	if ( ((int_32)*($12) == (int_32)$5) ){ goto $label$21 }
	$13 = ($5 + [8])
	
.LOOP $label$24:
	$15 = *($13)
	$13 = ($15 + [8])
	$12 = *($15 + [8])
	if ( ((int_32)$15 != (int_32)*($12)) ){ goto $label$24 }
	
.LABEL $label$21
	if ( ((int_32)$12 != (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [36])
	$12 = *($0 + [32])
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$25 }
	$4 = ($0 + [256])
	
.LOOP $label$26:
	CALL prints([5376])
	$6 = ($5 + [28])
	$5 = $12
	$12 = *($5 + [24])
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$27 }
	
.LOOP $label$28:
	$9 = *(($5 + [16]))
	$13 = $12
	$14 = *($13 + [24])
	$15 = CALL $267(($16 + [152]), *($13 + [16]), [592])
	*(($11 = (($16 + [80]) + [8]))) = *($15 + [8])
	*($16 + [80]) = $14
	$7 = *(($15 + [16]))
	CALL eosio_assert((uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$14 = (uint_64)*($11) >> (uint_64)(int_64)8)
	$15 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	
.LOOP $label$33:
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$33 }
	
.LABEL $label$32
	$12 = [1]
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	$12 = [0]
	
.LABEL $label$29
	CALL eosio_assert($12, [2832])
	*((($16 + [80]) + [16])) = $7
	*((($16 + [8]) + [8])) = *($11)
	*((($16 + [8]) + [16])) = $7
	*($16 + [8]) = *($16 + [80])
	CALL _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE($4, $9, ($16 + [8]))
	$15 = *($13 + [4])
	if ( ($15 == 0) ){ goto $label$35 }
	
.LOOP $label$36:
	$12 = $15
	$15 = *($12)
	if ( $15 ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$35
	$12 = *($13 + [8])
	if ( ((int_32)*($12) == (int_32)$13) ){ goto $label$34 }
	$13 = ($13 + [8])
	
.LOOP $label$37:
	$15 = *($13)
	$13 = ($15 + [8])
	$12 = *($15 + [8])
	if ( ((int_32)$15 != (int_32)*($12)) ){ goto $label$37 }
	
.LABEL $label$34
	if ( ((int_32)$12 != (int_32)$6) ){ goto $label$28 }
	
.LABEL $label$27
	$15 = *($5 + [4])
	if ( ($15 == 0) ){ goto $label$39 }
	
.LOOP $label$40:
	$12 = $15
	$15 = *($12)
	if ( $15 ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	$12 = *($5 + [8])
	if ( ((int_32)*($12) == (int_32)$5) ){ goto $label$38 }
	$13 = ($5 + [8])
	
.LOOP $label$41:
	$15 = *($13)
	$13 = ($15 + [8])
	$12 = *($15 + [8])
	if ( ((int_32)$15 != (int_32)*($12)) ){ goto $label$41 }
	
.LABEL $label$38
	if ( ((int_32)$12 != (int_32)$3) ){ goto $label$26 }
	
.LABEL $label$25
	$4 = ($0 + [48])
	$12 = *($0 + [44])
	if ( ((int_32)$12 == (int_32)$4) ){ goto $label$42 }
	$11 = ($0 + [264])
	
.LOOP $label$43:
	CALL prints([5392])
	$6 = ($5 + [28])
	$5 = $12
	$12 = *($5 + [24])
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$44 }
	
.LOOP $label$45:
	$13 = $12
	$15 = ($5 + [16])
	CALL _ZN11walexchange13stake_manager12adjust_stakeEyyyxy($11, *($15), *($13 + [16]), $1, *($13 + [24]), (int_64)0)
	CALL _ZN11walexchange13stake_manager12adjust_stakeEyyyxy($11, *($15), *($13 + [16]), *($0), *($13 + [24]), (int_64)0)
	$15 = *($13 + [4])
	if ( ($15 == 0) ){ goto $label$47 }
	
.LOOP $label$48:
	$12 = $15
	$15 = *($12)
	if ( $15 ){ goto $label$48 }
	goto $label$46 
	
.LABEL $label$47
	$12 = *($13 + [8])
	if ( ((int_32)*($12) == (int_32)$13) ){ goto $label$46 }
	$13 = ($13 + [8])
	
.LOOP $label$49:
	$15 = *($13)
	$13 = ($15 + [8])
	$12 = *($15 + [8])
	if ( ((int_32)$15 != (int_32)*($12)) ){ goto $label$49 }
	
.LABEL $label$46
	if ( ((int_32)$12 != (int_32)$6) ){ goto $label$45 }
	
.LABEL $label$44
	$15 = *($5 + [4])
	if ( ($15 == 0) ){ goto $label$51 }
	
.LOOP $label$52:
	$12 = $15
	$15 = *($12)
	if ( $15 ){ goto $label$52 }
	goto $label$50 
	
.LABEL $label$51
	$12 = *($5 + [8])
	if ( ((int_32)*($12) == (int_32)$5) ){ goto $label$50 }
	$13 = ($5 + [8])
	
.LOOP $label$53:
	$15 = *($13)
	$13 = ($15 + [8])
	$12 = *($15 + [8])
	if ( ((int_32)$15 != (int_32)*($12)) ){ goto $label$53 }
	
.LABEL $label$50
	if ( ((int_32)$12 != (int_32)$4) ){ goto $label$43 }
	
.LABEL $label$42
	$11 = ($0 + [60])
	$12 = *($0 + [56])
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$54 }
	$0 = ($0 + [264])
	
.LOOP $label$55:
	CALL prints([5408])
	$13 = $12
	CALL _ZN11walexchange13stake_manager11adjust_statEyx($0, *($13 + [16]), *($13 + [24]))
	$15 = *($13 + [4])
	if ( ($15 == 0) ){ goto $label$57 }
	
.LOOP $label$58:
	$12 = $15
	$15 = *($12)
	if ( $15 ){ goto $label$58 }
	goto $label$56 
	
.LABEL $label$57
	$12 = *($13 + [8])
	if ( ((int_32)*($12) == (int_32)$13) ){ goto $label$56 }
	$13 = ($13 + [8])
	
.LOOP $label$59:
	$15 = *($13)
	$13 = ($15 + [8])
	$12 = *($15 + [8])
	if ( ((int_32)$15 != (int_32)*($12)) ){ goto $label$59 }
	
.LABEL $label$56
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$55 }
	
.LABEL $label$54
	$13 = *($16 + [176])
	if ( ($13 == 0) ){ goto $label$60 }
	$11 = ($16 + [180])
	$15 = *($11)
	if ( ((int_32)$15 == (int_32)$13) ){ goto $label$62 }
	
.LOOP $label$63:
	$15 = ($15 + [-24])
	$12 = *($15)
	*($15) = [0]
	if ( ($12 == 0) ){ goto $label$64 }
	CALL $738($12)
	
.LABEL $label$64
	if ( ((int_32)$13 != (int_32)$15) ){ goto $label$63 }
	$15 = *(($16 + [176]))
	goto $label$61 
	
.LABEL $label$62
	$15 = $13
	
.LABEL $label$61
	*($11) = $13
	CALL $738($15)
	
.LABEL $label$60
	*([0] + [4]) = ($16 + [192])
}

int_32 .FUNC $267 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)6301537847124808880, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $65($0, $5)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN11walexchange13stake_manager12adjust_stakeEyyyxy (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [176])
	*([0] + [4]) = $10
	*($10 + [80]) = $1
	*($10 + [72]) = $2
	*($10 + [64]) = $4
	if ( (int_64)($4 == 0) ){ goto $label$1 }
	$8 = *($0)
	*(($10 + [56])) = [0]
	*($10 + [32]) = $3
	*($10 + [24]) = $8
	*($10 + [40]) = (int_64)-1
	*($10 + [48]) = (int_64)0
	*($10 + [60]) = [0]
	*($10 + [16]) = ($10 + [24])
	*($10 + [8]) = $1
	*($10) = $2
	CALL $273(($10 + [96]), ($10 + [16]), $10)
	$0 = *($10 + [100])
	if ( ($0 == 0) ){ goto $label$5 }
	if ( ((int_64)(((int_64)((int_64)*($10) ^ (int_64)*($0 + [16])) | (int_64)((int_64)*($10 + [8]) ^ (int_64)*($0 + [8]))) == 0) == 0) ){ goto $label$5 }
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = *($10 + [96])
	$4 = ((int_64)*($0 + [24]) + (int_64)$4)
	CALL eosio_assert((((int_64)$4 > (int_64)-1) & (uint_64)(((int_64)$4 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)), [5488])
	if ( ((int_64)((int_64)*($10 + [64]) + (int_64)*($0 + [24])) < (int_64)1) ){ goto $label$3 }
	CALL eosio_assert([1], [1328])
	$7 = *($10 + [16])
	CALL eosio_assert(((int_32)*($0 + [32]) == (int_32)$7), [848])
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$16()), [896])
	$6 = ($0 + [16])
	*($10 + [128]) = *($6)
	$9 = ($0 + [8])
	*($10 + [136]) = *($9)
	$4 = *($0)
	*($0 + [24]) = ((int_64)*($0 + [24]) + (int_64)*($10 + [64]))
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 + [96]), $0, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($10 + [96]) | [8]), $9, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($10 + [96]) + [16]), $6, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($10 + [96]) + [24]), ($0 + [24]), [8])
	CALL db_update_i64(*($0 + [36]), (int_64)0, ($10 + [96]), [32])
	if ( (uint_64)($4 <= *($7 + [16])) ){ goto $label$6 }
	*(($7 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($10 + [168]) = *($9)
	*($10 + [160]) = *($6)
	if ( (CALL memcmp(($10 + [128]), ($10 + [160]), [16]) == 0) ){ goto $label$4 }
	$6 = ($0 + [40])
	$0 = *($6)
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$7 }
	$0 = CALL db_idx128_find_primary(*($7), *($7 + [8]), (int_64)-3020371202648571904, ($10 + [144]), $4)
	*($6) = $0
	
.LABEL $label$7
	CALL db_idx128_update($0, (int_64)0, ($10 + [160]))
	$6 = *($10 + [48])
	if ( $6 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	*($10 + [100]) = ($10 + [80])
	*($10 + [96]) = ($10 + [24])
	*($10 + [104]) = ($10 + [72])
	*($10 + [108]) = ($10 + [64])
	*($10 + [144]) = ( $8 ? $5 : (int_64)($5 == 0) )
	CALL eosio_assert(((int_64)*($10 + [24]) == (int_64)CALL $fimport$16()), [432])
	*($10 + [164]) = ($10 + [96])
	*($10 + [160]) = ($10 + [24])
	*($10 + [168]) = ($10 + [144])
	*(($0 = CALL $737([48])) + [32]) = ($10 + [24])
	CALL $274(($10 + [160]), $0)
	*($10 + [128]) = $0
	$4 = *($0)
	*($10 + [160]) = $4
	$6 = *($0 + [36])
	*($10 + [92]) = $6
	$9 = ($10 + [52])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)*(($10 + [56]))) ){ goto $label$9 }
	*($7 + [8]) = $4
	*($7 + [16]) = $6
	*($10 + [128]) = [0]
	*($7) = $0
	*($9) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $275(($10 + [48]), ($10 + [128]), ($10 + [160]), ($10 + [92]))
	
.LABEL $label$8
	$0 = *($10 + [128])
	*($10 + [128]) = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	CALL $738($0)
	
.LABEL $label$4
	$6 = *($10 + [48])
	if ( ($6 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	*($10 + [96]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)32) | (int_64)$2)
	CALL eosio_assert([1], [736])
	CALL $276(($10 + [96]))
	CALL $277(*($10 + [16]), $0)
	$6 = *($10 + [48])
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$9 = ($10 + [52])
	$0 = *($9)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$13 }
	CALL $738($7)
	
.LABEL $label$13
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($10 + [48]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $6
	
.LABEL $label$10
	*($9) = $6
	CALL $738($0)
	
.LABEL $label$1
	*([0] + [4]) = ($10 + [176])
}

void .FUNC _ZN11walexchange12wal_exchange12verifytrade2EyN5eosio15extended_symbolES2_yymxxttNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE9signaturetyymxxttS9_SA_tyxxbxx (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4, int_64 $5, int_32 $6, int_64 $7, int_64 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12, int_32 $13, int_64 $14, int_64 $15, int_32 $16, int_64 $17, int_64 $18, int_32 $19, int_32 $20, int_32 $21, int_32 $22, int_32 $23, int_64 $24, int_64 $25, int_64 $26, int_32 $27, int_64 $28, int_64 $29)
{
	int_64 $30
	int_64 $31
	int_64 $32
	int_32 $33
	int_32 $34
	int_64 $35
	int_64 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	float_64 $41
	float_64 $42
	int_32 $43
	int_32 $44
	int_64 $45
	int_64 $46
	int_32 $47
	$47 = (*([0] + [4]) - [1376])
	*([0] + [4]) = $47
	*($47 + [1256]) = $24
	if ( CALL has_auth(*(($0 + [240]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [200])))
	
.LABEL $label$1
	$44 = *($11)
	if ( ($44 & [1]) ){ goto $label$3 }
	$44 = uint_32($44 >> [1])
	goto $label$2 
	
.LABEL $label$3
	$44 = *($11 + [4])
	
.LABEL $label$2
	CALL eosio_assert(($44 <= [257]), [3936])
	$44 = *($21)
	if ( ($44 & [1]) ){ goto $label$5 }
	$44 = uint_32($44 >> [1])
	goto $label$4 
	
.LABEL $label$5
	$44 = *($21 + [4])
	
.LABEL $label$4
	CALL eosio_assert(($44 <= [257]), [3984])
	*((($47 + [1216]) + [32])) = [0]
	*($47 + [1232]) = (int_64)-1
	*($47 + [1240]) = (int_64)0
	$24 = *($0)
	*($47 + [1216]) = $24
	*($47 + [1224]) = $24
	$44 = CALL db_find_i64($24, $24, (int_64)-8524860147551202816, $1)
	if ( ((int_32)$44 < (int_32)[0]) ){ goto $label$7 }
	$44 = CALL $172(($47 + [1216]), $44)
	CALL eosio_assert(((int_32)*($44 + [16]) == (int_32)($47 + [1216])), [288])
	goto $label$6 
	
.LABEL $label$7
	$35 = *($0)
	CALL eosio_assert(((int_64)*($47 + [1216]) == (int_64)CALL $fimport$16()), [432])
	*(($44 = CALL $737([32])) + [16]) = ($47 + [1216])
	*($44 + [8]) = (int_64)0
	*($44) = $1
	CALL eosio_assert([1], [496])
	CALL memcpy(($47 + [1264]), $44, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($47 + [1264]) | [8]), ($44 + [8]), [8])
	$24 = *($44)
	$37 = CALL db_store_i64(*((($47 + [1216]) + [8])), (int_64)-8524860147551202816, $35, $24, ($47 + [1264]), [16])
	*($44 + [20]) = $37
	$43 = (($47 + [1216]) + [16])
	if ( (uint_64)($24 <= *($43)) ){ goto $label$8 }
	*($43) = ( (int_64)-2 ? ((int_64)$24 + (int_64)1) : ((uint_64)$24 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($47 + [808]) = $44
	$24 = *($44)
	*($47 + [1264]) = $24
	*($47 + [584]) = $37
	$38 = ($47 + [1244])
	$43 = *($38)
	if ( ((uint_32)$43 >= (uint_32)*(($47 + [1248]))) ){ goto $label$10 }
	*($43 + [8]) = $24
	*($43 + [16]) = $37
	*($47 + [808]) = [0]
	*($43) = $44
	*($38) = ($43 + [24])
	goto $label$9 
	
.LABEL $label$10
	CALL $173(($47 + [1240]), ($47 + [808]), ($47 + [1264]), ($47 + [584]))
	
.LABEL $label$9
	$43 = *($47 + [808])
	*($47 + [808]) = [0]
	if ( ($43 == 0) ){ goto $label$6 }
	CALL $738($43)
	
.LABEL $label$6
	CALL eosio_assert((uint_64)(*($44 + [8]) <= *($47 + [1256])), [3808])
	$24 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$44 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $24) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$24 = (uint_64)$24 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$24) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$24 = (uint_64)$24 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$24) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$44 = ($44 + [1])
	if ( ((int_32)$44 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$43 = [1]
	$44 = ($44 + [1])
	if ( ((int_32)$44 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$43 = [0]
	
.LABEL $label$11
	CALL eosio_assert($43, [4032])
	$24 = (uint_64)*($3) >> (uint_64)(int_64)8)
	$44 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $24) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$24 = (uint_64)$24 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$24) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$24 = (uint_64)$24 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$24) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$44 = ($44 + [1])
	if ( ((int_32)$44 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$43 = [1]
	$44 = ($44 + [1])
	if ( ((int_32)$44 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$43 = [0]
	
.LABEL $label$16
	CALL eosio_assert($43, [4064])
	$30 = ((int_64)$7 + (int_64)4611686018427387903)
	CALL eosio_assert((((int_64)$7 > (int_64)-1) & (uint_64)($30 <= (int_64)9223372036854775807)), [4096])
	$24 = ((int_64)$8 + (int_64)4611686018427387903)
	CALL eosio_assert((((int_64)$8 > (int_64)-1) & (uint_64)($24 <= (int_64)9223372036854775807)), [4128])
	$31 = ((int_64)$17 + (int_64)4611686018427387903)
	CALL eosio_assert((((int_64)$17 > (int_64)-1) & (uint_64)($31 <= (int_64)9223372036854775807)), [4160])
	$32 = ((int_64)$18 + (int_64)4611686018427387903)
	CALL eosio_assert((((int_64)$18 > (int_64)-1) & (uint_64)($32 <= (int_64)9223372036854775807)), [4192])
	CALL eosio_assert((((int_64)$25 > (int_64)0) & (uint_64)(((int_64)$25 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)), [3840])
	CALL eosio_assert((((int_64)$26 > (int_64)-1) & (uint_64)(((int_64)$26 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)), [4224])
	CALL eosio_assert((((int_64)$28 > (int_64)-1) & (uint_64)(((int_64)$28 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)), [4256])
	CALL eosio_assert((((int_64)$29 > (int_64)-1) & (uint_64)(((int_64)$29 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)), [4288])
	CALL eosio_assert(($9 <= [10001]), [4320])
	CALL eosio_assert(($10 <= [10001]), [4320])
	CALL eosio_assert(($19 <= [10001]), [4320])
	CALL eosio_assert(($20 <= [10001]), [4320])
	$41 = (CASTING float_64)(int_64 $26)
	$42 = (CASTING float_64)(int_64 $25)
	CALL eosio_assert(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $8) * (float_64)$42) + (float_64)(float_64)1e-08) >= (float_64)((float_64)(CASTING float_64)(int_64 $7) * (float_64)$41)), [4352])
	CALL eosio_assert(((float_64)((float_64)(CASTING float_64)(int_64 $17) * (float_64)(CASTING float_64)(int_64 ((int_64)$26 + (int_64)1))) >= (float_64)((float_64)(CASTING float_64)(int_64 $18) * (float_64)$42)), [4384])
	CALL eosio_assert(((float_64)((float_64)((float_64)$42 * (float_64)((float_64)(CASTING float_64)(uint_32 ( $9 ? $10 : $27 )) / (float_64)(float_64)1e4)) + (float_64)(float_64)1e-08) >= (float_64)(CASTING float_64)(int_64 $28)), [4416])
	CALL eosio_assert(((float_64)((float_64)((float_64)$41 * (float_64)((float_64)(CASTING float_64)(uint_32 ( $20 ? $19 : $27 )) / (float_64)(float_64)1e4)) + (float_64)(float_64)1e-08) >= (float_64)(CASTING float_64)(int_64 $29)), [4448])
	*($47 + [1208]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($47 + [1208]), $1, [1])
	*($47 + [1200]) = *($0)
	*($47 + [1192]) = [0]
	*($47 + [1184]) = (int_64)0
	*($47 + [1176]) = [0]
	*($47 + [1168]) = (int_64)0
	*($47 + [1160]) = [0]
	*($47 + [1152]) = (int_64)0
	*($47 + [1144]) = [0]
	*($47 + [1136]) = (int_64)0
	*($47 + [1128]) = [0]
	*($47 + [1120]) = (int_64)0
	*($47 + [1112]) = [0]
	*($47 + [1104]) = (int_64)0
	*($47 + [1096]) = [0]
	*($47 + [1088]) = (int_64)0
	*($47 + [1080]) = [0]
	*($47 + [1072]) = (int_64)0
	*($47 + [1064]) = [0]
	*($47 + [1056]) = (int_64)0
	*($47 + [1048]) = [0]
	*($47 + [1040]) = (int_64)0
	*($47 + [1032]) = [0]
	*($47 + [1024]) = (int_64)0
	*($47 + [1016]) = [0]
	*($47 + [1008]) = (int_64)0
	*($47 + [1000]) = [0]
	*($47 + [992]) = (int_64)0
	*($47 + [984]) = [0]
	*($47 + [976]) = (int_64)0
	CALL $767(($47 + [960]), $11)
	CALL $44(($47 + [1200]), ($47 + [960]), ($47 + [1184]), ($47 + [1168]), ($47 + [1152]), ($47 + [1136]), ($47 + [1120]), ($47 + [1104]), ($47 + [1088]))
	if ( ((*($47 + [960]) & [1]) == 0) ){ goto $label$21 }
	CALL $738(*($47 + [968]))
	
.LABEL $label$21
	CALL $767(($47 + [944]), $21)
	CALL $44(($47 + [1200]), ($47 + [944]), ($47 + [1072]), ($47 + [1056]), ($47 + [1040]), ($47 + [1024]), ($47 + [1008]), ($47 + [992]), ($47 + [976]))
	if ( ((*($47 + [944]) & [1]) == 0) ){ goto $label$22 }
	CALL $738(*($47 + [952]))
	
.LABEL $label$22
	$44 = [1]
	$27 = ($43 & [1])
	$43 = *($47 + [1104])
	$43 = ( *($47 + [1108]) ? uint_32($43 >> [1]) : $27 )
	if ( ($43 == 0) ){ goto $label$23 }
	$44 = ( *(($47 + [1112])) ? (($47 + [1104]) | [1]) : $27 )
	
.LOOP $label$25:
	if ( (CALL isdigit(*($44)) == 0) ){ goto $label$24 }
	$44 = ($44 + [1])
	$43 = ($43 + [-1])
	if ( $43 ){ goto $label$25 }
	$44 = [1]
	goto $label$23 
	
.LABEL $label$24
	$44 = [0]
	
.LABEL $label$23
	CALL eosio_assert($44, [1408])
	$44 = *($47 + [1104])
	if ( (( *($47 + [1108]) ? uint_32($44 >> [1]) : ($44 & [1]) ) == 0) ){ goto $label$27 }
	$33 = ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($47 + [1104]), [0], [10]) & [65535]) == (int_32)[1])
	goto $label$26 
	
.LABEL $label$27
	$33 = [0]
	
.LABEL $label$26
	$44 = [1]
	$27 = ($43 & [1])
	$43 = *($47 + [992])
	$43 = ( *($47 + [996]) ? uint_32($43 >> [1]) : $27 )
	if ( ($43 == 0) ){ goto $label$28 }
	$44 = ( *(($47 + [1000])) ? (($47 + [992]) | [1]) : $27 )
	
.LOOP $label$30:
	if ( (CALL isdigit(*($44)) == 0) ){ goto $label$29 }
	$44 = ($44 + [1])
	$43 = ($43 + [-1])
	if ( $43 ){ goto $label$30 }
	$44 = [1]
	goto $label$28 
	
.LABEL $label$29
	$44 = [0]
	
.LABEL $label$28
	CALL eosio_assert($44, [1408])
	$34 = [0]
	$44 = *($47 + [992])
	if ( (( *($47 + [996]) ? uint_32($44 >> [1]) : ($44 & [1]) ) == 0) ){ goto $label$31 }
	$34 = ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($47 + [992]), [0], [10]) & [65535]) == (int_32)[1])
	
.LABEL $label$31
	$35 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($47 + [1208]), $4, [0])
	$36 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($47 + [1208]), $14, [0])
	$44 = [1]
	$27 = ($43 & [1])
	$43 = *($47 + [1168])
	$43 = ( *($47 + [1172]) ? uint_32($43 >> [1]) : $27 )
	if ( ($43 == 0) ){ goto $label$32 }
	$44 = ( *(($47 + [1176])) ? (($47 + [1168]) | [1]) : $27 )
	
.LOOP $label$34:
	if ( (CALL isdigit(*($44)) == 0) ){ goto $label$33 }
	$44 = ($44 + [1])
	$43 = ($43 + [-1])
	if ( $43 ){ goto $label$34 }
	$44 = [1]
	goto $label$32 
	
.LABEL $label$33
	$44 = [0]
	
.LABEL $label$32
	CALL eosio_assert($44, [1408])
	$44 = *($47 + [1168])
	if ( (( *($47 + [1172]) ? uint_32($44 >> [1]) : ($44 & [1]) ) == 0) ){ goto $label$36 }
	$37 = ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($47 + [1168]), [0], [10]) & [65535]) == (int_32)[1])
	goto $label$35 
	
.LABEL $label$36
	$37 = [0]
	
.LABEL $label$35
	$44 = [1]
	$27 = ($43 & [1])
	$43 = *($47 + [1056])
	$43 = ( *($47 + [1060]) ? uint_32($43 >> [1]) : $27 )
	if ( ($43 == 0) ){ goto $label$37 }
	$44 = ( *(($47 + [1064])) ? (($47 + [1056]) | [1]) : $27 )
	
.LOOP $label$39:
	if ( (CALL isdigit(*($44)) == 0) ){ goto $label$38 }
	$44 = ($44 + [1])
	$43 = ($43 + [-1])
	if ( $43 ){ goto $label$39 }
	$44 = [1]
	goto $label$37 
	
.LABEL $label$38
	$44 = [0]
	
.LABEL $label$37
	CALL eosio_assert($44, [1408])
	$44 = *($47 + [1056])
	if ( (( *($47 + [1060]) ? uint_32($44 >> [1]) : ($44 & [1]) ) == 0) ){ goto $label$41 }
	$38 = ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($47 + [1056]), [0], [10]) & [65535]) == (int_32)[1])
	goto $label$40 
	
.LABEL $label$41
	$38 = [0]
	
.LABEL $label$40
	$44 = [1]
	$27 = ($43 & [1])
	$43 = *($47 + [1120])
	$43 = ( *($47 + [1124]) ? uint_32($43 >> [1]) : $27 )
	if ( ($43 == 0) ){ goto $label$42 }
	$44 = ( *(($47 + [1128])) ? (($47 + [1120]) | [1]) : $27 )
	
.LOOP $label$44:
	if ( (CALL isdigit(*($44)) == 0) ){ goto $label$43 }
	$44 = ($44 + [1])
	$43 = ($43 + [-1])
	if ( $43 ){ goto $label$44 }
	$44 = [1]
	goto $label$42 
	
.LABEL $label$43
	$44 = [0]
	
.LABEL $label$42
	CALL eosio_assert($44, [1408])
	$44 = *($47 + [1120])
	if ( (( *($47 + [1124]) ? uint_32($44 >> [1]) : ($44 & [1]) ) == 0) ){ goto $label$46 }
	$39 = ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($47 + [1120]), [0], [10]) & [65535]) == (int_32)[1])
	goto $label$45 
	
.LABEL $label$46
	$39 = [0]
	
.LABEL $label$45
	$44 = [1]
	$27 = ($43 & [1])
	$43 = *($47 + [1008])
	$43 = ( *($47 + [1012]) ? uint_32($43 >> [1]) : $27 )
	if ( ($43 == 0) ){ goto $label$47 }
	$44 = ( *(($47 + [1016])) ? (($47 + [1008]) | [1]) : $27 )
	
.LOOP $label$49:
	if ( (CALL isdigit(*($44)) == 0) ){ goto $label$48 }
	$44 = ($44 + [1])
	$43 = ($43 + [-1])
	if ( $43 ){ goto $label$49 }
	$44 = [1]
	goto $label$47 
	
.LABEL $label$48
	$44 = [0]
	
.LABEL $label$47
	CALL eosio_assert($44, [1408])
	$43 = [0]
	$40 = [0]
	$44 = *($47 + [1008])
	if ( (( *($47 + [1012]) ? uint_32($44 >> [1]) : ($44 & [1]) ) == 0) ){ goto $label$50 }
	$40 = ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($47 + [1008]), [0], [10]) & [65535]) == (int_32)[1])
	
.LABEL $label$50
	*($47 + [888]) = $8
	$46 = *($3)
	*($47 + [896]) = $46
	$45 = *($3 + [8])
	CALL eosio_assert((uint_64)($24 <= (int_64)9223372036854775807), [2768])
	$24 = (uint_64)$46 >> (uint_64)(int_64)8)
	
.LOOP $label$53:
	$44 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $24) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$52 }
	$24 = (uint_64)$24 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$24) & (int_64)255) != (int_64)0) ){ goto $label$54 }
	
.LOOP $label$55:
	$24 = (uint_64)$24 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$24) & (int_64)255) != (int_64)0) ){ goto $label$52 }
	$43 = ($43 + [1])
	if ( ((int_32)$43 < (int_32)[7]) ){ goto $label$55 }
	
.LABEL $label$54
	$27 = [1]
	$43 = ($43 + [1])
	if ( ((int_32)$43 < (int_32)[7]) ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$52
	$27 = [0]
	
.LABEL $label$51
	CALL eosio_assert($27, [2832])
	*($47 + [904]) = $45
	*($47 + [864]) = $7
	$46 = *($2)
	*($47 + [872]) = $46
	$45 = *($2 + [8])
	CALL eosio_assert((uint_64)($30 <= (int_64)9223372036854775807), [2768])
	$24 = (uint_64)$46 >> (uint_64)(int_64)8)
	
.LOOP $label$57:
	$43 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $24) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$56 }
	$24 = (uint_64)$24 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$24) & (int_64)255) != (int_64)0) ){ goto $label$58 }
	
.LOOP $label$59:
	$24 = (uint_64)$24 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$24) & (int_64)255) != (int_64)0) ){ goto $label$56 }
	$44 = ($44 + [1])
	if ( ((int_32)$44 < (int_32)[7]) ){ goto $label$59 }
	
.LABEL $label$58
	$43 = [1]
	$44 = ($44 + [1])
	if ( ((int_32)$44 < (int_32)[7]) ){ goto $label$57 }
	
.LABEL $label$56
	CALL eosio_assert($43, [2832])
	*($47 + [880]) = $45
	CALL $767(($47 + [848]), $11)
	*((($47 + [160]) + [16])) = *((($47 + [888]) + [16]))
	*((($47 + [160]) + [8])) = *((($47 + [888]) + [8]))
	*((($47 + [136]) + [16])) = *($47 + [880])
	*((($47 + [136]) + [8])) = *((($47 + [864]) + [8]))
	*($47 + [160]) = *($47 + [888])
	*($47 + [136]) = *($47 + [864])
	CALL _ZN11walexchange21order_withdraw_helper14get_order_hashEyybN5eosio14extended_assetES2_ymttNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtP11checksum256(($47 + [1200]), $4, $1, [1], ($47 + [160]), ($47 + [136]), $5, $6, $9, $10, ($47 + [848]), $13, ($47 + [912]))
	if ( ((*($47 + [848]) & [1]) == 0) ){ goto $label$60 }
	CALL $738(*($47 + [856]))
	
.LABEL $label$60
	*((($47 + [808]) + [32])) = [0]
	*($47 + [824]) = (int_64)-1
	*($47 + [832]) = (int_64)0
	$24 = *($0)
	*($47 + [808]) = $24
	*($47 + [816]) = $24
	if ( (uint_64)($5 <= (int_64)281474976710656) ){ goto $label$64 }
	CALL eosio_assert(((int_32)$37 ^ (int_32)[1]), [4480])
	$44 = CALL $19(($47 + [808]), $35, [592])
	$24 = *($44)
	$43 = *(($44 + [8]))
	*((($47 + [784]) + [16])) = (int_64)0
	*((($47 + [784]) + [8])) = $43
	*($47 + [796]) = [0]
	*($47 + [784]) = $24
	$43 = (*(($44 + [16])) - *($44 + [12]))
	$27 = ((int_32)$43 / (int_32)[40])
	if ( ($43 == 0) ){ goto $label$65 }
	if ( ((uint_32)$27 >= (uint_32)[107374183]) ){ goto $label$62 }
	$43 = CALL $737($43)
	*((($47 + [784]) + [12])) = $43
	*(($47 + [804])) = ($43 + ((int_32)$27 * (int_32)[40]))
	*(($27 = (($47 + [784]) + [16]))) = $43
	$11 = *(($44 + [12]))
	$44 = (*(($44 + [16])) - $11)
	if ( ((int_32)$44 < (int_32)[1]) ){ goto $label$65 }
	CALL memcpy($43, $11, $44)
	*($27) = (*($27) + ((int_32)((uint_32)$44 / (uint_32)[40]) * (int_32)[40]))
	
.LABEL $label$65
	CALL _ZN11walexchange12wal_exchange18assert_has_pub_keyERK11checksum256RK9signatureNS_4userE($0, ($47 + [912]), $12, ($47 + [784]))
	$44 = *($47 + [796])
	if ( ($44 == 0) ){ goto $label$63 }
	*(($47 + [800])) = $44
	CALL $738($44)
	goto $label$63 
	
.LABEL $label$64
	*((($47 + [1264]) + [32])) = [0]
	*($47 + [1272]) = $1
	*($47 + [1264]) = $24
	*($47 + [1280]) = (int_64)-1
	*($47 + [1288]) = (int_64)0
	*($47 + [1300]) = [0]
	CALL eosio_assert((CALL $806(($47 + [912]), (CALL $72(($47 + [1264]), $5, [4512]) + [48]), [32]) == 0), [1984])
	$27 = *($47 + [1288])
	if ( ($27 == 0) ){ goto $label$63 }
	$11 = ($47 + [1292])
	$44 = *($11)
	if ( ((int_32)$44 == (int_32)$27) ){ goto $label$67 }
	
.LOOP $label$68:
	$44 = ($44 + [-24])
	$43 = *($44)
	*($44) = [0]
	if ( ($43 == 0) ){ goto $label$69 }
	CALL $738($43)
	
.LABEL $label$69
	if ( ((int_32)$27 != (int_32)$44) ){ goto $label$68 }
	$45 = *(($2 + [8]))
	$46 = *($2)
	$44 = *(($47 + [1288]))
	goto $label$66 
	
.LABEL $label$67
	$44 = $27
	
.LABEL $label$66
	*($11) = $27
	CALL $738($44)
	
.LABEL $label$63
	*($47 + [760]) = $17
	*($47 + [768]) = $46
	CALL eosio_assert((uint_64)($31 <= (int_64)9223372036854775807), [2768])
	$24 = (uint_64)$46 >> (uint_64)(int_64)8)
	$44 = [0]
	
.LOOP $label$72:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $24) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$71 }
	$24 = (uint_64)$24 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$24) & (int_64)255) != (int_64)0) ){ goto $label$73 }
	
.LOOP $label$74:
	$24 = (uint_64)$24 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$24) & (int_64)255) != (int_64)0) ){ goto $label$71 }
	$44 = ($44 + [1])
	if ( ((int_32)$44 < (int_32)[7]) ){ goto $label$74 }
	
.LABEL $label$73
	$43 = [1]
	$44 = ($44 + [1])
	if ( ((int_32)$44 < (int_32)[7]) ){ goto $label$72 }
	goto $label$70 
	
.LABEL $label$71
	$43 = [0]
	
.LABEL $label$70
	CALL eosio_assert($43, [2832])
	*($47 + [776]) = $45
	*($47 + [736]) = $18
	$24 = *($3)
	*($47 + [744]) = $24
	$18 = *(($3 + [8]))
	CALL eosio_assert((uint_64)($32 <= (int_64)9223372036854775807), [2768])
	$24 = (uint_64)$24 >> (uint_64)(int_64)8)
	$44 = [0]
	
.LOOP $label$77:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $24) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$76 }
	$24 = (uint_64)$24 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$24) & (int_64)255) != (int_64)0) ){ goto $label$78 }
	
.LOOP $label$79:
	$24 = (uint_64)$24 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$24) & (int_64)255) != (int_64)0) ){ goto $label$76 }
	$44 = ($44 + [1])
	if ( ((int_32)$44 < (int_32)[7]) ){ goto $label$79 }
	
.LABEL $label$78
	$43 = [1]
	$44 = ($44 + [1])
	if ( ((int_32)$44 < (int_32)[7]) ){ goto $label$77 }
	goto $label$75 
	
.LABEL $label$76
	$43 = [0]
	
.LABEL $label$75
	CALL eosio_assert($43, [2832])
	*($47 + [752]) = $18
	CALL $767(($47 + [720]), $21)
	*((($47 + [112]) + [16])) = *((($47 + [760]) + [16]))
	*((($47 + [112]) + [8])) = *((($47 + [760]) + [8]))
	*((($47 + [88]) + [16])) = *($47 + [752])
	*((($47 + [88]) + [8])) = *((($47 + [736]) + [8]))
	*($47 + [112]) = *($47 + [760])
	*($47 + [88]) = *($47 + [736])
	CALL _ZN11walexchange21order_withdraw_helper14get_order_hashEyybN5eosio14extended_assetES2_ymttNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtP11checksum256(($47 + [1200]), $14, $1, [0], ($47 + [112]), ($47 + [88]), $15, $16, $19, $20, ($47 + [720]), $23, ($47 + [912]))
	if ( ((*($47 + [720]) & [1]) == 0) ){ goto $label$80 }
	CALL $738(*($47 + [728]))
	
.LABEL $label$80
	if ( (uint_64)($15 <= (int_64)281474976710656) ){ goto $label$82 }
	CALL eosio_assert(((int_32)$38 ^ (int_32)[1]), [4560])
	$44 = CALL $19(($47 + [808]), $36, [592])
	$24 = *($44)
	$43 = *(($44 + [8]))
	*((($47 + [696]) + [16])) = (int_64)0
	*((($47 + [696]) + [8])) = $43
	*($47 + [708]) = [0]
	*($47 + [696]) = $24
	$43 = (*(($44 + [16])) - *($44 + [12]))
	$27 = ((int_32)$43 / (int_32)[40])
	if ( ($43 == 0) ){ goto $label$83 }
	if ( ((uint_32)$27 >= (uint_32)[107374183]) ){ goto $label$61 }
	$43 = CALL $737($43)
	*((($47 + [696]) + [12])) = $43
	*(($47 + [716])) = ($43 + ((int_32)$27 * (int_32)[40]))
	*(($27 = (($47 + [696]) + [16]))) = $43
	$11 = *(($44 + [12]))
	$44 = (*(($44 + [16])) - $11)
	if ( ((int_32)$44 < (int_32)[1]) ){ goto $label$83 }
	CALL memcpy($43, $11, $44)
	*($27) = (*($27) + ((int_32)((uint_32)$44 / (uint_32)[40]) * (int_32)[40]))
	
.LABEL $label$83
	CALL _ZN11walexchange12wal_exchange18assert_has_pub_keyERK11checksum256RK9signatureNS_4userE($0, ($47 + [912]), $22, ($47 + [696]))
	$44 = *($47 + [708])
	if ( ($44 == 0) ){ goto $label$81 }
	*(($47 + [712])) = $44
	CALL $738($44)
	goto $label$81 
	
.LABEL $label$82
	*((($47 + [1264]) + [32])) = [0]
	*($47 + [1272]) = $1
	*($47 + [1280]) = (int_64)-1
	*($47 + [1288]) = (int_64)0
	*($47 + [1264]) = *($0)
	*($47 + [1300]) = [0]
	CALL eosio_assert((CALL $806(($47 + [912]), (CALL $72(($47 + [1264]), $15, [4592]) + [48]), [32]) == 0), [4640])
	$27 = *($47 + [1288])
	if ( ($27 == 0) ){ goto $label$81 }
	$11 = ($47 + [1292])
	$44 = *($11)
	if ( ((int_32)$44 == (int_32)$27) ){ goto $label$85 }
	
.LOOP $label$86:
	$44 = ($44 + [-24])
	$43 = *($44)
	*($44) = [0]
	if ( ($43 == 0) ){ goto $label$87 }
	CALL $738($43)
	
.LABEL $label$87
	if ( ((int_32)$27 != (int_32)$44) ){ goto $label$86 }
	$44 = *(($47 + [1288]))
	goto $label$84 
	
.LABEL $label$85
	$44 = $27
	
.LABEL $label$84
	*($11) = $27
	CALL $738($44)
	
.LABEL $label$81
	*($47 + [680]) = $1
	*($47 + [688]) = [60]
	*($47 + [672]) = *($0)
	if ( (CALL _ZN11walexchange13order_manager12exists_orderEy(($47 + [672]), $5) == 0) ){ goto $label$89 }
	CALL _ZN11walexchange13order_manager12update_orderEyx(($47 + [672]), $5, ( $26 ? $25 : (int_64)($7 == 0) ))
	goto $label$88 
	
.LABEL $label$89
	CALL eosio_assert(((uint_64)$5 > (uint_64)(int_64)281474976710655), [4688])
	*((($47 + [64]) + [20])) = *((($47 + [648]) + [20]))
	*($47 + [664]) = $6
	*(($47 + [80])) = $6
	*($47 + [656]) = ( (int_64))($8 - $26) ? (int_64))($7 - $25) : (int_64)($7 == 0) )
	*((($47 + [64]) + [12])) = *((($47 + [648]) + [12]))
	*(($47 + [72])) = *($47 + [656])
	*($47 + [648]) = $5
	*($47 + [68]) = *($47 + [652])
	*($47 + [64]) = *($47 + [648])
	CALL _ZN11walexchange13order_manager9add_orderENS_12bucket_orderE(($47 + [672]), ($47 + [64]))
	
.LABEL $label$88
	if ( (CALL _ZN11walexchange13order_manager12exists_orderEy(($47 + [672]), $15) == 0) ){ goto $label$91 }
	CALL _ZN11walexchange13order_manager12update_orderEyx(($47 + [672]), $15, $25)
	goto $label$90 
	
.LABEL $label$91
	CALL eosio_assert(((uint_64)$15 > (uint_64)(int_64)281474976710655), [4736])
	*((($47 + [40]) + [20])) = *((($47 + [624]) + [20]))
	*($47 + [640]) = $16
	*(($47 + [56])) = $16
	*($47 + [632]) = (int_64))($17 - $25)
	*((($47 + [40]) + [12])) = *((($47 + [624]) + [12]))
	*(($47 + [48])) = *($47 + [632])
	*($47 + [624]) = $15
	*($47 + [44]) = *($47 + [628])
	*($47 + [40]) = *($47 + [624])
	CALL _ZN11walexchange13order_manager9add_orderENS_12bucket_orderE(($47 + [672]), ($47 + [40]))
	
.LABEL $label$90
	$44 = [0]
	*(($47 + [616])) = [0]
	*($47 + [600]) = (int_64)-1
	*($47 + [608]) = (int_64)0
	$24 = *($0)
	*($47 + [584]) = $24
	*($47 + [592]) = $24
	*($47 + [620]) = [0]
	*($47 + [576]) = ($47 + [584])
	*($47 + [1272]) = *(($2 + [8]))
	*($47 + [1264]) = (uint_64)*($2) >> (uint_64)(int_64)8)
	CALL $46(($47 + [536]), ($47 + [576]), ($47 + [1264]))
	$43 = [0]
	$27 = *($47 + [540])
	if ( ($27 == 0) ){ goto $label$92 }
	$43 = ( $27 ? [0] : (int_64)(((int_64)((int_64)*($47 + [1264]) ^ (int_64)(uint_64)*($27 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($47 + [1272]) ^ (int_64)*(($27 + [16])))) == 0) )
	
.LABEL $label$92
	CALL eosio_assert(((int_32)$43 != (int_32)[0]), [1456])
	$27 = *($43)
	*($47 + [1272]) = *(($3 + [8]))
	*($47 + [1264]) = (uint_64)*($3) >> (uint_64)(int_64)8)
	CALL $46(($47 + [536]), ($47 + [576]), ($47 + [1264]))
	$43 = *($47 + [540])
	if ( ($43 == 0) ){ goto $label$93 }
	$44 = ( $43 ? [0] : (int_64)(((int_64)((int_64)*($47 + [1264]) ^ (int_64)(uint_64)*($43 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($47 + [1272]) ^ (int_64)*(($43 + [16])))) == 0) )
	
.LABEL $label$93
	CALL eosio_assert(((int_32)$44 != (int_32)[0]), [1456])
	$43 = *($44)
	*(($9 = ($47 + [568]))) = [0]
	*($47 + [544]) = $1
	*($47 + [552]) = (int_64)-1
	*($47 + [560]) = (int_64)0
	$24 = *($0)
	*($47 + [536]) = $24
	CALL eosio_assert(((int_64)$24 == (int_64)CALL $fimport$16()), [432])
	*(($44 = CALL $737([80])) + [64]) = ($47 + [536])
	*($44 + [8]) = $35
	*($44 + [16]) = $36
	*($44 + [24]) = $27
	*($44 + [28]) = $43
	*($44 + [32]) = $25
	*($44) = *($47 + [1256])
	*($44 + [40]) = $26
	*($44 + [48]) = $28
	*($44 + [56]) = $29
	*($47 + [336]) = (($47 + [1264]) + [64])
	*($47 + [332]) = ($47 + [1264])
	*($47 + [328]) = ($47 + [1264])
	CALL $182(($47 + [328]), $44)
	$7 = *($44)
	$21 = CALL db_store_i64(*($47 + [544]), (int_64)-3660455468297355264, $24, $7, ($47 + [1264]), [64])
	*($44 + [68]) = $21
	if ( (uint_64)($7 <= *($47 + [552])) ){ goto $label$94 }
	*(($47 + [552])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$94
	*($47 + [328]) = $44
	$24 = *($44)
	*($47 + [1264]) = $24
	*($47 + [1344]) = $21
	$10 = ($47 + [564])
	$11 = *($10)
	if ( ((uint_32)$11 >= (uint_32)*($9)) ){ goto $label$96 }
	*($11 + [8]) = $24
	*($11 + [16]) = $21
	*($47 + [328]) = [0]
	*($11) = $44
	*($10) = ($11 + [24])
	goto $label$95 
	
.LABEL $label$96
	CALL $183(($47 + [560]), ($47 + [328]), ($47 + [1264]), ($47 + [1344]))
	
.LABEL $label$95
	$44 = *($47 + [328])
	*($47 + [328]) = [0]
	if ( ($44 == 0) ){ goto $label$97 }
	CALL $738($44)
	
.LABEL $label$97
	*(($47 + [528])) = [0]
	*($47 + [520]) = (int_64)0
	$44 = CALL strlen([4784])
	if ( ((uint_32)$44 >= (uint_32)[-16]) ){ goto $label$103 }
	if ( ((uint_32)$44 >= (uint_32)[11]) ){ goto $label$106 }
	*($47 + [520]) = ($44 << [1])
	$11 = (($47 + [520]) | [1])
	if ( $44 ){ goto $label$105 }
	goto $label$104 
	
.LABEL $label$106
	$21 = (($44 + [16]) & [-16])
	$11 = CALL $737($21)
	*($47 + [520]) = ($21 | [1])
	*($47 + [528]) = $11
	*($47 + [524]) = $44
	
.LABEL $label$105
	CALL memcpy($11, [4784], $44)
	
.LABEL $label$104
	*(($11 + $44)) = [0]
	CALL _ZNSt3__19to_stringEm(($47 + [504]), $27)
	CALL $83($0, $35, ($47 + [520]), ($47 + [504]))
	if ( ((*($47 + [504]) & [1]) == 0) ){ goto $label$107 }
	CALL $738(*($47 + [512]))
	
.LABEL $label$107
	if ( ((*($47 + [520]) & [1]) == 0) ){ goto $label$108 }
	CALL $738(*($47 + [528]))
	
.LABEL $label$108
	*(($47 + [496])) = [0]
	*($47 + [488]) = (int_64)0
	$44 = CALL strlen([4800])
	if ( ((uint_32)$44 >= (uint_32)[-16]) ){ goto $label$102 }
	if ( ((uint_32)$44 >= (uint_32)[11]) ){ goto $label$111 }
	*($47 + [488]) = ($44 << [1])
	$11 = (($47 + [488]) | [1])
	if ( $44 ){ goto $label$110 }
	goto $label$109 
	
.LABEL $label$111
	$21 = (($44 + [16]) & [-16])
	$11 = CALL $737($21)
	*($47 + [488]) = ($21 | [1])
	*($47 + [496]) = $11
	*($47 + [492]) = $44
	
.LABEL $label$110
	CALL memcpy($11, [4800], $44)
	
.LABEL $label$109
	*(($11 + $44)) = [0]
	CALL _ZNSt3__19to_stringEm(($47 + [472]), $43)
	CALL $83($0, $35, ($47 + [488]), ($47 + [472]))
	if ( ((*($47 + [472]) & [1]) == 0) ){ goto $label$112 }
	CALL $738(*($47 + [480]))
	
.LABEL $label$112
	if ( ((*($47 + [488]) & [1]) == 0) ){ goto $label$113 }
	CALL $738(*($47 + [496]))
	
.LABEL $label$113
	*(($47 + [464])) = [0]
	*($47 + [456]) = (int_64)0
	$44 = CALL strlen([4816])
	if ( ((uint_32)$44 >= (uint_32)[-16]) ){ goto $label$101 }
	if ( ((uint_32)$44 >= (uint_32)[11]) ){ goto $label$116 }
	*($47 + [456]) = ($44 << [1])
	$11 = (($47 + [456]) | [1])
	if ( $44 ){ goto $label$115 }
	goto $label$114 
	
.LABEL $label$116
	$21 = (($44 + [16]) & [-16])
	$11 = CALL $737($21)
	*($47 + [456]) = ($21 | [1])
	*($47 + [464]) = $11
	*($47 + [460]) = $44
	
.LABEL $label$115
	CALL memcpy($11, [4816], $44)
	
.LABEL $label$114
	*(($11 + $44)) = [0]
	CALL _ZNSt3__19to_stringEm(($47 + [440]), $43)
	CALL $83($0, $36, ($47 + [456]), ($47 + [440]))
	if ( ((*($47 + [440]) & [1]) == 0) ){ goto $label$117 }
	CALL $738(*($47 + [448]))
	
.LABEL $label$117
	if ( ((*($47 + [456]) & [1]) == 0) ){ goto $label$118 }
	CALL $738(*($47 + [464]))
	
.LABEL $label$118
	*(($47 + [432])) = [0]
	*($47 + [424]) = (int_64)0
	$44 = CALL strlen([4832])
	if ( ((uint_32)$44 >= (uint_32)[-16]) ){ goto $label$100 }
	if ( ((uint_32)$44 >= (uint_32)[11]) ){ goto $label$121 }
	*($47 + [424]) = ($44 << [1])
	$11 = (($47 + [424]) | [1])
	if ( $44 ){ goto $label$120 }
	goto $label$119 
	
.LABEL $label$121
	$21 = (($44 + [16]) & [-16])
	$11 = CALL $737($21)
	*($47 + [424]) = ($21 | [1])
	*($47 + [432]) = $11
	*($47 + [428]) = $44
	
.LABEL $label$120
	CALL memcpy($11, [4832], $44)
	
.LABEL $label$119
	*(($11 + $44)) = [0]
	CALL _ZNSt3__19to_stringEm(($47 + [408]), $27)
	CALL $83($0, $36, ($47 + [424]), ($47 + [408]))
	if ( ((*($47 + [408]) & [1]) == 0) ){ goto $label$122 }
	CALL $738(*($47 + [416]))
	
.LABEL $label$122
	if ( ((*($47 + [424]) & [1]) == 0) ){ goto $label$123 }
	CALL $738(*($47 + [432]))
	
.LABEL $label$123
	*(($47 + [400])) = [0]
	*($47 + [392]) = (int_64)0
	$44 = CALL strlen([4848])
	if ( ((uint_32)$44 >= (uint_32)[-16]) ){ goto $label$99 }
	if ( ((uint_32)$44 >= (uint_32)[11]) ){ goto $label$126 }
	*($47 + [392]) = ($44 << [1])
	$11 = (($47 + [392]) | [1])
	if ( $44 ){ goto $label$125 }
	goto $label$124 
	
.LABEL $label$126
	$21 = (($44 + [16]) & [-16])
	$11 = CALL $737($21)
	*($47 + [392]) = ($21 | [1])
	*($47 + [400]) = $11
	*($47 + [396]) = $44
	
.LABEL $label$125
	CALL memcpy($11, [4848], $44)
	
.LABEL $label$124
	*(($11 + $44)) = [0]
	CALL _ZNSt3__19to_stringEm(($47 + [328]), $27)
	$44 = CALL $745(($47 + [328]), [4864])
	$11 = ($44 + [8])
	*((($47 + [1264]) + [8])) = *($11)
	*($47 + [1264]) = *($44)
	*($44) = [0]
	*(($44 + [4])) = [0]
	*($11) = [0]
	CALL _ZNSt3__19to_stringEm(($47 + [1344]), $43)
	$44 = *($47 + [1344])
	$11 = ($44 & [1])
	$44 = CALL $744(($47 + [1264]), ( *($47 + [1352]) ? (($47 + [1344]) | [1]) : $11 ), ( *($47 + [1348]) ? uint_32($44 >> [1]) : $11 ))
	$11 = ($44 + [8])
	*((($47 + [376]) + [8])) = *($11)
	*($47 + [376]) = *($44)
	*($44) = [0]
	*(($44 + [4])) = [0]
	*($11) = [0]
	CALL $83($0, $35, ($47 + [392]), ($47 + [376]))
	if ( ((*($47 + [376]) & [1]) == 0) ){ goto $label$127 }
	CALL $738(*($47 + [384]))
	
.LABEL $label$127
	if ( ((*($47 + [1344]) & [1]) == 0) ){ goto $label$128 }
	CALL $738(*(($47 + [1352])))
	
.LABEL $label$128
	if ( ((*($47 + [1264]) & [1]) == 0) ){ goto $label$129 }
	CALL $738(*($47 + [1272]))
	
.LABEL $label$129
	if ( ((*($47 + [328]) & [1]) == 0) ){ goto $label$130 }
	CALL $738(*($47 + [336]))
	
.LABEL $label$130
	if ( ((*($47 + [392]) & [1]) == 0) ){ goto $label$131 }
	CALL $738(*($47 + [400]))
	
.LABEL $label$131
	*(($47 + [368])) = [0]
	*($47 + [360]) = (int_64)0
	$44 = CALL strlen([4848])
	if ( ((uint_32)$44 >= (uint_32)[-16]) ){ goto $label$98 }
	if ( ((uint_32)$44 >= (uint_32)[11]) ){ goto $label$134 }
	*($47 + [360]) = ($44 << [1])
	$11 = (($47 + [360]) | [1])
	if ( $44 ){ goto $label$133 }
	goto $label$132 
	
.LABEL $label$134
	$21 = (($44 + [16]) & [-16])
	$11 = CALL $737($21)
	*($47 + [360]) = ($21 | [1])
	*($47 + [368]) = $11
	*($47 + [364]) = $44
	
.LABEL $label$133
	CALL memcpy($11, [4848], $44)
	
.LABEL $label$132
	*(($11 + $44)) = [0]
	CALL _ZNSt3__19to_stringEm(($47 + [328]), $27)
	$44 = CALL $745(($47 + [328]), [4864])
	$11 = ($44 + [8])
	*((($47 + [1264]) + [8])) = *($11)
	*($47 + [1264]) = *($44)
	*($44) = [0]
	*(($44 + [4])) = [0]
	*($11) = [0]
	CALL _ZNSt3__19to_stringEm(($47 + [1344]), $43)
	$44 = *($47 + [1344])
	$43 = ($44 & [1])
	$44 = CALL $744(($47 + [1264]), ( *($47 + [1352]) ? (($47 + [1344]) | [1]) : $43 ), ( *($47 + [1348]) ? uint_32($44 >> [1]) : $43 ))
	$43 = ($44 + [8])
	*((($47 + [344]) + [8])) = *($43)
	*($47 + [344]) = *($44)
	*($44) = [0]
	*(($44 + [4])) = [0]
	*($43) = [0]
	CALL $83($0, $36, ($47 + [360]), ($47 + [344]))
	if ( ((*($47 + [344]) & [1]) == 0) ){ goto $label$135 }
	CALL $738(*($47 + [352]))
	
.LABEL $label$135
	if ( ((*($47 + [1344]) & [1]) == 0) ){ goto $label$136 }
	CALL $738(*(($47 + [1352])))
	
.LABEL $label$136
	if ( ((*($47 + [1264]) & [1]) == 0) ){ goto $label$137 }
	CALL $738(*($47 + [1272]))
	
.LABEL $label$137
	if ( ((*($47 + [328]) & [1]) == 0) ){ goto $label$138 }
	CALL $738(*($47 + [336]))
	
.LABEL $label$138
	if ( ((*($47 + [360]) & [1]) == 0) ){ goto $label$139 }
	CALL $738(*($47 + [368]))
	
.LABEL $label$139
	*($47 + [336]) = $1
	*($47 + [328]) = *($0)
	if ( (CALL _ZN11walexchange11rex_manager17has_target_ref_idEm(($47 + [328]), $27) == 0) ){ goto $label$140 }
	*($47 + [320]) = CALL $76(($47 + [1200]), ($47 + [1184]))
	*(($47 + [1296])) = [0]
	*($47 + [1280]) = (int_64)-1
	*($47 + [1288]) = (int_64)0
	$24 = *($47 + [1208])
	*($47 + [1272]) = $24
	*($47 + [1264]) = $24
	*($47 + [1300]) = [0]
	$21 = CALL $11(($47 + [1264]), $35, [592])
	$11 = *($47 + [1288])
	if ( ($11 == 0) ){ goto $label$141 }
	$9 = ($47 + [1292])
	$44 = *($9)
	if ( ((int_32)$44 == (int_32)$11) ){ goto $label$143 }
	
.LOOP $label$144:
	$44 = ($44 + [-24])
	$43 = *($44)
	*($44) = [0]
	if ( ($43 == 0) ){ goto $label$145 }
	CALL $738($43)
	
.LABEL $label$145
	if ( ((int_32)$11 != (int_32)$44) ){ goto $label$144 }
	$44 = *(($47 + [1288]))
	goto $label$142 
	
.LABEL $label$143
	$44 = $11
	
.LABEL $label$142
	*($9) = $11
	CALL $738($44)
	
.LABEL $label$141
	$44 = CALL is_account(*($21 + [16]))
	$43 = CALL is_account(*($47 + [320]))
	if ( ($44 == 0) ){ goto $label$147 }
	if ( $43 ){ goto $label$146 }
	*($47 + [320]) = *(($21 + [16]))
	goto $label$146 
	
.LABEL $label$147
	CALL eosio_assert($43, [4880])
	
.LABEL $label$146
	*(($11 = ($47 + [1296]))) = [0]
	*($47 + [1272]) = $1
	*($47 + [1280]) = (int_64)-1
	*($47 + [1288]) = (int_64)0
	$24 = *($0)
	*($47 + [1264]) = $24
	*($47 + [316]) = ($47 + [320])
	*($47 + [312]) = ($47 + [1256])
	*($47 + [1368]) = $24
	CALL eosio_assert(((int_64)$24 == (int_64)CALL $fimport$16()), [432])
	*($47 + [1348]) = ($47 + [312])
	*($47 + [1344]) = ($47 + [1264])
	*($47 + [1352]) = ($47 + [1368])
	*(($44 = CALL $737([48])) + [32]) = [0]
	*($44 + [24 align=4]) = (int_64)0
	*($44 + [36]) = ($47 + [1264])
	CALL $185(($47 + [1344]), $44)
	*($47 + [1360]) = $44
	$24 = *($44)
	*($47 + [1344]) = $24
	$21 = *($44 + [40])
	*($47 + [1340]) = $21
	$9 = ($47 + [1292])
	$43 = *($9)
	if ( ((uint_32)$43 >= (uint_32)*($11)) ){ goto $label$149 }
	*($43 + [8]) = $24
	*($43 + [16]) = $21
	*($47 + [1360]) = [0]
	*($43) = $44
	*($9) = ($43 + [24])
	goto $label$148 
	
.LABEL $label$149
	CALL $186(($47 + [1288]), ($47 + [1360]), ($47 + [1344]), ($47 + [1340]))
	
.LABEL $label$148
	$44 = *($47 + [1360])
	*($47 + [1360]) = [0]
	if ( ($44 == 0) ){ goto $label$150 }
	if ( ((*($44 + [24]) & [1]) == 0) ){ goto $label$151 }
	CALL $738(*(($44 + [32])))
	
.LABEL $label$151
	CALL $738($44)
	
.LABEL $label$150
	$11 = *($47 + [1288])
	if ( ($11 == 0) ){ goto $label$140 }
	$21 = ($47 + [1292])
	$44 = *($21)
	if ( ((int_32)$44 == (int_32)$11) ){ goto $label$153 }
	
.LOOP $label$154:
	$44 = ($44 + [-24])
	$43 = *($44)
	*($44) = [0]
	if ( ($43 == 0) ){ goto $label$155 }
	if ( ((*($43 + [24]) & [1]) == 0) ){ goto $label$156 }
	CALL $738(*(($43 + [32])))
	
.LABEL $label$156
	CALL $738($43)
	
.LABEL $label$155
	if ( ((int_32)$11 != (int_32)$44) ){ goto $label$154 }
	$44 = *(($47 + [1288]))
	goto $label$152 
	
.LABEL $label$153
	$44 = $11
	
.LABEL $label$152
	*($21) = $11
	CALL $738($44)
	
.LABEL $label$140
	if ( ((int_32)(((int_64)$25 > (int_64)$28) & $37) != (int_32)[1]) ){ goto $label$157 }
	if ( CALL _ZN11walexchange11rex_manager17has_target_ref_idEm(($47 + [328]), $27) ){ goto $label$157 }
	*(($44 = (($47 + [296]) + [8]))) = *(($2 + [8]))
	$24 = *($47 + [1256])
	*($47 + [296]) = *($2)
	CALL $767(($47 + [280]), ($47 + [1152]))
	CALL $767(($47 + [264]), ($47 + [1136]))
	CALL $767(($47 + [248]), ($47 + [1088]))
	*((($47 + [24]) + [8])) = *($44)
	*($47 + [24]) = *($47 + [296])
	CALL _ZN11walexchange12wal_exchange15create_withdrawEyyyyN5eosio15extended_symbolExxbhyNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_bbS9_($0, $4, $1, (int_64)0, $24, ($47 + [24]), (int_64))($25 - $28), (int_64)0, [1], [0], $24, ($47 + [280]), ($47 + [264]), $39, $33, ($47 + [248]))
	if ( ((*($47 + [248]) & [1]) == 0) ){ goto $label$158 }
	CALL $738(*($47 + [256]))
	
.LABEL $label$158
	if ( ((*($47 + [264]) & [1]) == 0) ){ goto $label$159 }
	CALL $738(*($47 + [272]))
	
.LABEL $label$159
	if ( ((*($47 + [280]) & [1]) == 0) ){ goto $label$157 }
	CALL $738(*($47 + [288]))
	
.LABEL $label$157
	if ( ((int_32)(((int_64)$26 > (int_64)$29) & $38) != (int_32)[1]) ){ goto $label$160 }
	*(($44 = (($47 + [232]) + [8]))) = *(($3 + [8]))
	$24 = *($47 + [1256])
	*($47 + [232]) = *($3)
	CALL $767(($47 + [216]), ($47 + [1040]))
	CALL $767(($47 + [200]), ($47 + [1024]))
	CALL $767(($47 + [184]), ($47 + [976]))
	*((($47 + [8]) + [8])) = *($44)
	*($47 + [8]) = *($47 + [232])
	CALL _ZN11walexchange12wal_exchange15create_withdrawEyyyyN5eosio15extended_symbolExxbhyNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_bbS9_($0, $14, $1, (int_64)0, $24, ($47 + [8]), (int_64))($26 - $29), (int_64)0, [1], [1], $24, ($47 + [216]), ($47 + [200]), $40, $34, ($47 + [184]))
	if ( ((*($47 + [184]) & [1]) == 0) ){ goto $label$161 }
	CALL $738(*($47 + [192]))
	
.LABEL $label$161
	if ( ((*($47 + [200]) & [1]) == 0) ){ goto $label$162 }
	CALL $738(*($47 + [208]))
	
.LABEL $label$162
	if ( ((*($47 + [216]) & [1]) == 0) ){ goto $label$160 }
	CALL $738(*($47 + [224]))
	
.LABEL $label$160
	$0 = *($47 + [560])
	if ( ($0 == 0) ){ goto $label$163 }
	$3 = ($47 + [564])
	$44 = *($3)
	if ( ((int_32)$44 == (int_32)$0) ){ goto $label$165 }
	
.LOOP $label$166:
	$44 = ($44 + [-24])
	$43 = *($44)
	*($44) = [0]
	if ( ($43 == 0) ){ goto $label$167 }
	CALL $738($43)
	
.LABEL $label$167
	if ( ((int_32)$0 != (int_32)$44) ){ goto $label$166 }
	$44 = *(($47 + [560]))
	goto $label$164 
	
.LABEL $label$165
	$44 = $0
	
.LABEL $label$164
	*($3) = $0
	CALL $738($44)
	
.LABEL $label$163
	$0 = *($47 + [608])
	if ( ($0 == 0) ){ goto $label$168 }
	$3 = ($47 + [612])
	$44 = *($3)
	if ( ((int_32)$44 == (int_32)$0) ){ goto $label$170 }
	
.LOOP $label$171:
	$44 = ($44 + [-24])
	$43 = *($44)
	*($44) = [0]
	if ( ($43 == 0) ){ goto $label$172 }
	CALL $738($43)
	
.LABEL $label$172
	if ( ((int_32)$0 != (int_32)$44) ){ goto $label$171 }
	$44 = *(($47 + [608]))
	goto $label$169 
	
.LABEL $label$170
	$44 = $0
	
.LABEL $label$169
	*($3) = $0
	CALL $738($44)
	
.LABEL $label$168
	$3 = *($47 + [832])
	if ( ($3 == 0) ){ goto $label$173 }
	$27 = ($47 + [836])
	$44 = *($27)
	if ( ((int_32)$44 == (int_32)$3) ){ goto $label$175 }
	
.LOOP $label$176:
	$44 = ($44 + [-24])
	$43 = *($44)
	*($44) = [0]
	if ( ($43 == 0) ){ goto $label$177 }
	$0 = *($43 + [12])
	if ( ($0 == 0) ){ goto $label$178 }
	*(($43 + [16])) = $0
	CALL $738($0)
	
.LABEL $label$178
	CALL $738($43)
	
.LABEL $label$177
	if ( ((int_32)$3 != (int_32)$44) ){ goto $label$176 }
	$44 = *(($47 + [832]))
	goto $label$174 
	
.LABEL $label$175
	$44 = $3
	
.LABEL $label$174
	*($27) = $3
	CALL $738($44)
	
.LABEL $label$173
	if ( ((*($47 + [976]) & [1]) == 0) ){ goto $label$179 }
	CALL $738(*(($47 + [984])))
	
.LABEL $label$179
	if ( ((*($47 + [992]) & [1]) == 0) ){ goto $label$180 }
	CALL $738(*(($47 + [1000])))
	
.LABEL $label$180
	if ( ((*($47 + [1008]) & [1]) == 0) ){ goto $label$181 }
	CALL $738(*(($47 + [1016])))
	
.LABEL $label$181
	if ( ((*($47 + [1024]) & [1]) == 0) ){ goto $label$182 }
	CALL $738(*(($47 + [1032])))
	
.LABEL $label$182
	if ( ((*($47 + [1040]) & [1]) == 0) ){ goto $label$183 }
	CALL $738(*(($47 + [1048])))
	
.LABEL $label$183
	if ( ((*($47 + [1056]) & [1]) == 0) ){ goto $label$184 }
	CALL $738(*(($47 + [1064])))
	
.LABEL $label$184
	if ( ((*($47 + [1072]) & [1]) == 0) ){ goto $label$185 }
	CALL $738(*(($47 + [1080])))
	
.LABEL $label$185
	if ( ((*($47 + [1088]) & [1]) == 0) ){ goto $label$186 }
	CALL $738(*(($47 + [1096])))
	
.LABEL $label$186
	if ( ((*($47 + [1104]) & [1]) == 0) ){ goto $label$187 }
	CALL $738(*(($47 + [1112])))
	
.LABEL $label$187
	if ( ((*($47 + [1120]) & [1]) == 0) ){ goto $label$188 }
	CALL $738(*(($47 + [1128])))
	
.LABEL $label$188
	if ( ((*($47 + [1136]) & [1]) == 0) ){ goto $label$189 }
	CALL $738(*(($47 + [1144])))
	
.LABEL $label$189
	if ( ((*($47 + [1152]) & [1]) == 0) ){ goto $label$190 }
	CALL $738(*(($47 + [1160])))
	
.LABEL $label$190
	if ( ((*($47 + [1168]) & [1]) == 0) ){ goto $label$191 }
	CALL $738(*(($47 + [1176])))
	
.LABEL $label$191
	if ( ((*($47 + [1184]) & [1]) == 0) ){ goto $label$192 }
	CALL $738(*(($47 + [1192])))
	
.LABEL $label$192
	$0 = *($47 + [1240])
	if ( ($0 == 0) ){ goto $label$193 }
	$3 = ($47 + [1244])
	$44 = *($3)
	if ( ((int_32)$44 == (int_32)$0) ){ goto $label$195 }
	
.LOOP $label$196:
	$44 = ($44 + [-24])
	$43 = *($44)
	*($44) = [0]
	if ( ($43 == 0) ){ goto $label$197 }
	CALL $738($43)
	
.LABEL $label$197
	if ( ((int_32)$0 != (int_32)$44) ){ goto $label$196 }
	$44 = *(($47 + [1240]))
	goto $label$194 
	
.LABEL $label$195
	$44 = $0
	
.LABEL $label$194
	*($3) = $0
	CALL $738($44)
	
.LABEL $label$193
	*([0] + [4]) = ($47 + [1376])
	return (unreachable)
	
.LABEL $label$103
	CALL $739(($47 + [520]))
	
.LABEL $label$102
	CALL $739(($47 + [488]))
	
.LABEL $label$101
	CALL $739(($47 + [456]))
	
.LABEL $label$100
	CALL $739(($47 + [424]))
	
.LABEL $label$99
	CALL $739(($47 + [392]))
	
.LABEL $label$98
	CALL $739(($47 + [360]))
	
.LABEL $label$62
	CALL $766(($47 + [796]))
	
.LABEL $label$61
	CALL $766(($47 + [708]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $183 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $182 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [16])
	$11 = $10
	*([0] + [4]) = $10
	$8 = *($0 + [4])
	$2 = *($8)
	*($1 + [8]) = [0]
	*($1) = *($2)
	$2 = *($0)
	*($1 + [16]) = *(*($8 + [4]))
	$8 = *($1 + [24])
	$6 = ( *(($1 + [28])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($6 + [18])
	$9 = (CASTING uint_64)(uint_32 $6)
	$5 = ($1 + [24])
	$4 = ($1 + [16])
	$3 = ($1 + [8])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ($8 <= [513]) ){ goto $label$3 }
	$10 = CALL malloc($8)
	goto $label$2 
	
.LABEL $label$3
	$10 = ($10 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$2
	*($11) = $10
	$6 = ($10 + $8)
	*($11 + [8]) = $6
	CALL eosio_assert(((int_32)$8 > (int_32)[7]), [496])
	CALL memcpy($10, $1, [8])
	$7 = ($10 + [8])
	CALL eosio_assert(((int_32)($6 - $7) > (int_32)[1]), [496])
	CALL memcpy($7, $3, [2])
	$3 = ($10 + [10])
	CALL eosio_assert(((int_32)($6 - $3) > (int_32)[7]), [496])
	CALL memcpy($3, $4, [8])
	*($11 + [4]) = ($10 + [18])
	CALL $91($11, $5)
	$9 = *($1)
	*($1 + [40]) = CALL db_store_i64(*($2 + [8]), (int_64)-3617352385659874816, *(*($0 + [8])), $9, $10, $8)
	if ( ($8 <= [513]) ){ goto $label$4 }
	CALL free($10)
	
.LABEL $label$4
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$5 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($11 + [16])
}

int_32 .FUNC _ZN11walexchange11rex_manager17has_target_ref_idEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	$5 = [0]
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$3 = *($0)
	*($6 + [8]) = $3
	*($6 + [16]) = $3
	$1 = CALL db_find_i64($3, $3, (int_64)6301537847124725072, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $187(($6 + [8]), $1) + [16]) == (int_32)($6 + [8])), [288])
	$5 = [1]
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	$4 = ($6 + [36])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$4:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	CALL $738($0)
	
.LABEL $label$5
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$4 }
	$1 = *(($6 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$1 = $2
	
.LABEL $label$2
	*($4) = $2
	CALL $738($1)
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [48])
	return $5
}

int_32 .FUNC $187 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $737([28])) + [16]) = $0
	CALL $188(($8 + [32]), $6)
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $189(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $186 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$11 }
	CALL $738(*(($1 + [32])))
	
.LABEL $label$11
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $738($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $114 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [784])
	$6 = *($0 + [4])
	$7 = *($6 + [32])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)4508390640157634048, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [32]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [288])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $67($2, CALL $fimport$19(*($2), *($2 + [8]), (int_64)4508390640157634048, $3))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [288])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [32])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

int_64 .FUNC _ZNSt3__16stoullERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$3 = CALL strlen([20416])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($3 << [1])
	$6 = ($7 | [1])
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$5 = (($3 + [16]) & [-16])
	$6 = CALL $737($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $3
	
.LABEL $label$5
	CALL memcpy($6, [20416], $3)
	
.LABEL $label$4
	*(($6 + $3)) = [0]
	*($7 + [12]) = [0]
	$3 = *($0 + [8])
	$6 = *($0)
	$5 = *(CALL __errno_location())
	*(CALL __errno_location()) = [0]
	$3 = ( $3 ? ($0 + [1]) : ($6 & [1]) )
	$4 = CALL strtoull($3, ($7 + [12]), $2)
	$0 = CALL __errno_location()
	$6 = *($0)
	*($0) = $5
	if ( ((int_32)$6 == (int_32)[34]) ){ goto $label$2 }
	$0 = *($7 + [12])
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($0 - $3)
	
.LABEL $label$7
	if ( ((*($7) & [1]) == 0) ){ goto $label$8 }
	CALL $738(*($7 + [8]))
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [16])
	return $4
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $755($7)
	
.LABEL $label$1
	CALL $756($7)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC _ZNSt3__19to_stringEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [20448], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $762(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $762(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC $762 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$3 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$4 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$4 = *($0 + [4])
	
.LABEL $label$3
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$5 }
	CALL $749($0, $3, (($1 - $3) + $4), $4, $4, [0], [0])
	$5 = *($0)
	
.LABEL $label$5
	if ( ($5 & [1]) ){ goto $label$7 }
	$5 = ($0 + [1])
	goto $label$6 
	
.LABEL $label$7
	$5 = *($0 + [8])
	
.LABEL $label$6
	CALL memset(($5 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($1 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $1
	
.LABEL $label$8
	*(($5 + $1)) = [0]
	
.LABEL $label$1
	return $0
}

void .FUNC _ZNSt3__19to_stringEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [20480], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $762(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $762(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $248 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$13 = (*([0] + [4]) - [32])
	$14 = $13
	*([0] + [4]) = $13
	*($1) = *(*(*($0 + [4])))
	$2 = *($0)
	*($1 + [8]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$12 = [12]
	$4 = ($1 + [12])
	$3 = ($1 + [8])
	$6 = *($1 + [12])
	$5 = *(($1 + [16]))
	$7 = ($5 - $6)
	$11 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$1:
	$12 = ($12 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$1 }
	$12 = ( $12 ? ($7 + $12) : ((int_32)$6 == (int_32)$5) )
	$5 = ($1 + [24])
	$7 = *($1 + [24])
	$6 = *(($1 + [28]))
	$8 = ($6 - $7)
	$11 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	
.LOOP $label$2:
	$12 = ($12 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$3 }
	$12 = (($8 & [-8]) + $12)
	
.LABEL $label$3
	if ( ($12 <= [513]) ){ goto $label$5 }
	$13 = CALL malloc($12)
	goto $label$4 
	
.LABEL $label$5
	$13 = ($13 - (($12 + [15]) & [-16]))
	*([0] + [4]) = $13
	
.LABEL $label$4
	*($14 + [8]) = $13
	$6 = ($13 + $12)
	*($14 + [16]) = $6
	CALL eosio_assert(((int_32)$12 > (int_32)[7]), [496])
	CALL memcpy($13, $1, [8])
	$7 = ($13 + [8])
	CALL eosio_assert(((int_32)($6 - $7) > (int_32)[3]), [496])
	CALL memcpy($7, $3, [4])
	*($14 + [12]) = ($13 + [12])
	CALL $284(CALL $283(($14 + [8]), $4), $5)
	$11 = *($1)
	*($1 + [40]) = CALL db_store_i64(*($2 + [8]), (int_64)-4417018949669575792, *(*($0 + [8])), $11, $13, $12)
	if ( ($12 <= [513]) ){ goto $label$6 }
	CALL free($13)
	
.LABEL $label$6
	if ( (uint_64)($11 <= *($2 + [16])) ){ goto $label$7 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$11 = *(($2 + [8]))
	$9 = *(*(($0 + [8])))
	$10 = *($1)
	*($14 + [24]) = *(($1 + [8]))
	*($1 + [44]) = CALL db_idx64_store($11, (int_64)-4417018949669575792, $9, $10, ($14 + [24]))
	*([0] + [4]) = ($14 + [32])
}

int_32 .FUNC $767 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $737($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $766 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC isdigit (int_32 $0)
{
	return (($0 + [-48]) <= [10])
}

int_32 .FUNC $768 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $737($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $249 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [24])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [28])) = $6
	CALL $738($6)
	
.LABEL $label$11
	$6 = *($1 + [12])
	if ( ($6 == 0) ){ goto $label$12 }
	*(($1 + [16])) = $6
	CALL $738($6)
	
.LABEL $label$12
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $738($2)
	
.LABEL $label$13
	(unreachable)
}

int_32 .FUNC $167 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [544])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $168(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC _ZN11walexchange12wal_exchange7destroyEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	if ( CALL has_auth(*(($0 + [216]))) ){ goto $label$1 }
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth($1)
	
.LABEL $label$1
	*($8 + [40]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($8 + [40]), $2, [1])
	$5 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($8 + [40]), $1, [0])
	*(($8 + [32])) = [0]
	*($8 + [8]) = $5
	*($8 + [16]) = (int_64)-1
	*($8 + [24]) = (int_64)0
	$6 = *($0)
	*($8) = $6
	$0 = [1]
	$4 = CALL db_find_i64($6, $5, (int_64)5382254363837562880, $2)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $167($8, $4) + [16]) == (int_32)$8), [288])
	$0 = [0]
	
.LABEL $label$2
	CALL eosio_assert($0, [3648])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([32])) + [16]) = $8
	*($0) = $2
	*($0 + [8]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert([1], [496])
	CALL memcpy(($8 + [64]), $0, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($8 + [64]) | [8]), ($0 + [8]), [4])
	$2 = *($0)
	$3 = CALL db_store_i64(*(($8 + [8])), (int_64)5382254363837562880, $1, $2, ($8 + [64]), [12])
	*($0 + [20]) = $3
	$4 = ($8 + [16])
	if ( (uint_64)($2 <= *($4)) ){ goto $label$3 }
	*($4) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($8 + [56]) = $0
	$2 = *($0)
	*($8 + [64]) = $2
	*($8 + [52]) = $3
	$7 = ($8 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($8 + [32]))) ){ goto $label$5 }
	*($4 + [8]) = $2
	*($4 + [16]) = $3
	*($8 + [56]) = [0]
	*($4) = $0
	*($7) = ($4 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $168(($8 + [24]), ($8 + [56]), ($8 + [64]), ($8 + [52]))
	
.LABEL $label$4
	$0 = *($8 + [56])
	*($8 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL $738($0)
	
.LABEL $label$6
	$3 = *($8 + [24])
	if ( ($3 == 0) ){ goto $label$7 }
	$7 = ($8 + [28])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $738($4)
	
.LABEL $label$11
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($8 + [24]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $3
	
.LABEL $label$8
	*($7) = $3
	CALL $738($0)
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [80])
}

void .FUNC $165 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $164 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[3]), [544])
	CALL memcpy($6, $7, [4])
	CALL eosio_assert(((uint_32)($4 + [-4]) > (uint_32)[7]), [544])
	CALL memcpy(($6 + [8]), ($7 + [4]), [8])
	*($6 + [24]) = [-1]
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $165(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $163 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = ((int_64)((int_64)*($1) << (int_64)32) | (int_64)*($1 + [4]))
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	$4 = *($8)
	if ( ((int_64)((int_64)((int_64)*($4) << (int_64)32) | (int_64)*($4 + [4])) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*(($1 + [20])))
	$7 = *(($1 + [24]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020381105862213632, ($9 + [8]), ((int_64)((int_64)*($1) << (int_64)32) | (int_64)*(($1 + [4]))))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $162 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$4 = *($0 + [4])
	$3 = *($4)
	$8 = *($3 + [16])
	if ( ((int_64)$8 != (int_64)-1) ){ goto $label$1 }
	$8 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($3), *($3 + [8]), (int_64)6301537847124808880, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $65($3, $5)
	*($9 + [4]) = [0]
	*($9) = $3
	$8 = ((int_64)*(*(CALL $123($9) + [4])) + (int_64)1)
	
.LABEL $label$2
	*(($3 + [16])) = $8
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($8 <= (int_64)-2), [2192])
	*($1) = *(($3 + [16]))
	$4 = *($4 + [4])
	$8 = *($4 + [8])
	*(($3 = ($1 + [16]))) = *($4 + [16])
	*($1 + [8]) = $8
	$10 = $10
	$4 = ($10 + [-32])
	*([0] + [4]) = $4
	CALL eosio_assert([1], [496])
	CALL memcpy($4, $1, [4])
	CALL eosio_assert([1], [496])
	$5 = ($1 + [8])
	CALL memcpy(($10 + [-28]), $5, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 + [-20]), $3, [8])
	$8 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)6301537847124808880, *(*($0 + [8])), $8, $4, [20])
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ((int_64)$8 + (int_64)1)
	
.LABEL $label$3
	$8 = *(($2 + [8]))
	$6 = *(*(($0 + [8])))
	$7 = *($1)
	*($9 + [8]) = *($3)
	*($9) = (uint_64)*($5) >> (uint_64)(int_64)8)
	*($1 + [32]) = CALL db_idx128_store($8, (int_64)6301537847124808880, $6, $7, $9)
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $161 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)6291761009430009344, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $164($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)6291761009430009344, $5))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [24])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $160 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [36]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2320])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)6300979411374047232)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2256])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2256])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $159(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC _ZN11walexchange12wal_exchange12withdrawbackEyyN5eosio14extended_assetE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [240])
	*([0] + [4]) = $12
	*($12 + [232]) = $1
	CALL require_auth($1)
	*($12 + [224]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($12 + [224]), $2, [1])
	$11 = [0]
	$4 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($12 + [224]), $1, [0])
	$7 = *($3 + [8])
	$10 = [0]
	$5 = *($3)
	$6 = ((int_64)$5 + (int_64)4611686018427387903)
	if ( ((uint_64)$6 > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$1 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$10 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	
.LABEL $label$1
	CALL eosio_assert($10, [2896])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [2928])
	*(($12 + [216])) = [0]
	*($12 + [192]) = $4
	*($12 + [200]) = (int_64)-1
	*($12 + [208]) = (int_64)0
	*($12 + [184]) = *($0)
	$8 = CALL $170(($12 + [184]), $2, [3680])
	CALL eosio_assert(((uint_32)(*(($0 + [148])) + *($8 + [8])) <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$17() / (uint_64)(int_64)1000000))), [3728])
	*($12 + [168]) = $7
	$1 = *($3 + [16])
	*((($12 + [56]) + [8])) = $7
	*($12 + [176]) = $1
	*((($12 + [56]) + [16])) = $1
	$9 = (int_64)
	*($12 + [160]) = $9((int_64)0 - $5))
	*($12 + [56]) = $9
	$8 = ($0 + [256])
	CALL _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE($8, $2, ($12 + [56]))
	*($12 + [144]) = $7
	*((($12 + [32]) + [8])) = $7
	*($12 + [152]) = $1
	*((($12 + [32]) + [16])) = $1
	*($12 + [136]) = $9
	*($12 + [32]) = $9
	CALL _ZN11walexchange13asset_manager14adjust_balanceEyyN5eosio14extended_assetEy($8, $4, $2, ($12 + [32]), (int_64)0)
	*($12 + [120]) = $7
	$2 = *($0)
	*((($12 + [8]) + [8])) = $7
	*($12 + [128]) = $1
	*((($12 + [8]) + [16])) = $1
	*($12 + [112]) = $9
	*($12 + [8]) = $9
	CALL _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE($8, $2, ($12 + [8]))
	*($12 + [104]) = $7
	*($12 + [96]) = $5
	CALL eosio_assert((uint_64)($6 <= (int_64)9223372036854775807), [2768])
	$1 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = ($3 + [16])
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$8 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	
.LABEL $label$6
	CALL eosio_assert($8, [2832])
	*(($12 + [88])) = [0]
	*($12 + [80]) = (int_64)0
	$11 = CALL strlen([3776])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$14 }
	*($12 + [80]) = ($11 << [1])
	$8 = (($12 + [80]) | [1])
	if ( $11 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$10 = (($11 + [16]) & [-16])
	$8 = CALL $737($10)
	*($12 + [80]) = ($10 | [1])
	*($12 + [88]) = $8
	*($12 + [84]) = $11
	
.LABEL $label$13
	CALL memcpy($8, [3776], $11)
	
.LABEL $label$12
	*(($8 + $11)) = [0]
	CALL _ZN11walexchange12wal_exchange12out_transferERKyS2_RKN5eosio5assetERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE($0, ($12 + [232]), $3, ($12 + [96]), ($12 + [80]))
	if ( ((*($12 + [80]) & [1]) == 0) ){ goto $label$15 }
	CALL $738(*($12 + [88]))
	
.LABEL $label$15
	$0 = *($12 + [208])
	if ( ($0 == 0) ){ goto $label$16 }
	$3 = ($12 + [212])
	$11 = *($3)
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$18 }
	
.LOOP $label$19:
	$11 = ($11 + [-24])
	$8 = *($11)
	*($11) = [0]
	if ( ($8 == 0) ){ goto $label$20 }
	CALL $738($8)
	
.LABEL $label$20
	if ( ((int_32)$0 != (int_32)$11) ){ goto $label$19 }
	$11 = *(($12 + [208]))
	goto $label$17 
	
.LABEL $label$18
	$11 = $0
	
.LABEL $label$17
	*($3) = $0
	CALL $738($11)
	
.LABEL $label$16
	*([0] + [4]) = ($12 + [240])
	return (unreachable)
	
.LABEL $label$11
	CALL $739(($12 + [80]))
}

void .FUNC $168 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $369 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [12]))
}

int_32 .FUNC $368 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [8]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4344997574076792832, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $370($0, $5)
	CALL eosio_assert(((int_32)*($6 + [8]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $688 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($4 + [8]) = $2
	CALL $690(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $715 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	$2 = *($1)
	CALL $767($4, ($1 + [8]))
	$0 = *($0 + [4])
	$3 = *($0 + [4])
	$1 = (*(*($0)) + int_32($3 >> [1]))
	$0 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	CALL $767(($4 + [16]), $4)
	CALL void $1((int_32 $2), (int_64 ($4 + [16])), (int_32 $0))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*($4 + [24]))
	
.LABEL $label$2
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($4 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [32])
}

void .FUNC $716 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [32]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC $717 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($4 + [8]) = $2
	CALL $718(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $710 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [272])
	*([0] + [4]) = $9
	$8 = *($0)
	*($9) = *($1)
	*($9 + [12]) = ($8 + [65])
	*($9 + [8]) = ($8 + [64])
	*($9 + [16]) = ($8 + [66])
	*($9 + [20]) = ($8 + [67])
	*($9 + [24]) = ($8 + [68])
	*($9 + [28]) = ($8 + [69])
	*($9 + [32]) = ($8 + [70])
	*($9 + [36]) = ($8 + [71])
	*($9 + [40]) = ($8 + [72])
	*($9 + [44]) = ($8 + [73])
	*($9 + [48]) = ($8 + [74])
	*($9 + [52]) = ($8 + [75])
	*($9 + [56]) = ($8 + [76])
	*($9 + [60]) = ($8 + [77])
	*($9 + [64]) = ($8 + [78])
	*($9 + [68]) = ($8 + [79])
	*($9 + [72]) = ($8 + [80])
	*($9 + [76]) = ($8 + [81])
	*($9 + [80]) = ($8 + [82])
	*($9 + [84]) = ($8 + [83])
	*($9 + [88]) = ($8 + [84])
	*($9 + [92]) = ($8 + [85])
	*($9 + [96]) = ($8 + [86])
	*($9 + [100]) = ($8 + [87])
	*($9 + [104]) = ($8 + [88])
	*($9 + [108]) = ($8 + [89])
	*($9 + [112]) = ($8 + [90])
	*($9 + [116]) = ($8 + [91])
	*($9 + [120]) = ($8 + [92])
	*($9 + [124]) = ($8 + [93])
	*($9 + [128]) = ($8 + [94])
	*($9 + [132]) = ($8 + [95])
	*($9 + [136]) = ($8 + [96])
	*($9 + [140]) = ($8 + [97])
	*($9 + [144]) = ($8 + [98])
	*($9 + [148]) = ($8 + [99])
	*($9 + [152]) = ($8 + [100])
	*($9 + [156]) = ($8 + [101])
	*($9 + [160]) = ($8 + [102])
	*($9 + [164]) = ($8 + [103])
	*($9 + [168]) = ($8 + [104])
	*($9 + [172]) = ($8 + [105])
	*($9 + [176]) = ($8 + [106])
	*($9 + [180]) = ($8 + [107])
	*($9 + [184]) = ($8 + [108])
	*($9 + [188]) = ($8 + [109])
	*($9 + [192]) = ($8 + [110])
	*($9 + [196]) = ($8 + [111])
	*($9 + [200]) = ($8 + [112])
	*($9 + [204]) = ($8 + [113])
	*($9 + [208]) = ($8 + [114])
	*($9 + [212]) = ($8 + [115])
	*($9 + [216]) = ($8 + [116])
	*($9 + [220]) = ($8 + [117])
	*($9 + [224]) = ($8 + [118])
	*($9 + [228]) = ($8 + [119])
	*($9 + [232]) = ($8 + [120])
	*($9 + [236]) = ($8 + [121])
	*($9 + [240]) = ($8 + [122])
	*($9 + [244]) = ($8 + [123])
	*($9 + [248]) = ($8 + [124])
	*($9 + [252]) = ($8 + [125])
	*($9 + [256]) = ($8 + [126])
	*($9 + [260]) = ($8 + [127])
	*($9 + [264]) = ($8 + [128])
	*($9 + [268]) = ($8 + [129])
	CALL $669(($9 + [8]), $9)
	$2 = *($0)
	$3 = *($1)
	$8 = *($3 + [4])
	$6 = [0]
	$7 = (int_64)0
	$4 = ($3 + [8])
	$5 = ($3 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($8 <= *($4)), [656])
	$8 = *($5)
	$0 = *($8)
	$8 = ($8 + [1])
	*($5) = $8
	$6 = ($6 & [255])
	$7 = ((int_64)(CASTING uint_64)(uint_32 (($0 & [127]) << $6)) | (int_64)$7)
	$6 = ($6 + [7])
	if ( uint_32($0 >> [7]) ){ goto $label$1 }
	*(($2 + [132])) = $7
	$5 = ($2 + [136])
	$0 = [0]
	$4 = ($3 + [8])
	$6 = ($3 + [4])
	
.LOOP $label$2:
	CALL eosio_assert(((int_32)*($4) != (int_32)$8), [544])
	CALL memcpy(($5 + $0), *($6), [1])
	$8 = (*($6) + [1])
	*($6) = $8
	$0 = ($0 + [1])
	if ( ((int_32)$0 != (int_32)[33]) ){ goto $label$2 }
	*($9) = *($1)
	*($9 + [12]) = ($2 + [173])
	*($9 + [8]) = ($2 + [172])
	*($9 + [16]) = ($2 + [174])
	*($9 + [20]) = ($2 + [175])
	*($9 + [24]) = ($2 + [176])
	*($9 + [28]) = ($2 + [177])
	*($9 + [32]) = ($2 + [178])
	*($9 + [36]) = ($2 + [179])
	*($9 + [40]) = ($2 + [180])
	*($9 + [44]) = ($2 + [181])
	*($9 + [48]) = ($2 + [182])
	*($9 + [52]) = ($2 + [183])
	*($9 + [56]) = ($2 + [184])
	*($9 + [60]) = ($2 + [185])
	*($9 + [64]) = ($2 + [186])
	*($9 + [68]) = ($2 + [187])
	*($9 + [72]) = ($2 + [188])
	*($9 + [76]) = ($2 + [189])
	*($9 + [80]) = ($2 + [190])
	*($9 + [84]) = ($2 + [191])
	*($9 + [88]) = ($2 + [192])
	*($9 + [92]) = ($2 + [193])
	*($9 + [96]) = ($2 + [194])
	*($9 + [100]) = ($2 + [195])
	*($9 + [104]) = ($2 + [196])
	*($9 + [108]) = ($2 + [197])
	*($9 + [112]) = ($2 + [198])
	*($9 + [116]) = ($2 + [199])
	*($9 + [120]) = ($2 + [200])
	*($9 + [124]) = ($2 + [201])
	*($9 + [128]) = ($2 + [202])
	*($9 + [132]) = ($2 + [203])
	*($9 + [136]) = ($2 + [204])
	*($9 + [140]) = ($2 + [205])
	*($9 + [144]) = ($2 + [206])
	*($9 + [148]) = ($2 + [207])
	*($9 + [152]) = ($2 + [208])
	*($9 + [156]) = ($2 + [209])
	*($9 + [160]) = ($2 + [210])
	*($9 + [164]) = ($2 + [211])
	*($9 + [168]) = ($2 + [212])
	*($9 + [172]) = ($2 + [213])
	*($9 + [176]) = ($2 + [214])
	*($9 + [180]) = ($2 + [215])
	*($9 + [184]) = ($2 + [216])
	*($9 + [188]) = ($2 + [217])
	*($9 + [192]) = ($2 + [218])
	*($9 + [196]) = ($2 + [219])
	*($9 + [200]) = ($2 + [220])
	*($9 + [204]) = ($2 + [221])
	*($9 + [208]) = ($2 + [222])
	*($9 + [212]) = ($2 + [223])
	*($9 + [216]) = ($2 + [224])
	*($9 + [220]) = ($2 + [225])
	*($9 + [224]) = ($2 + [226])
	*($9 + [228]) = ($2 + [227])
	*($9 + [232]) = ($2 + [228])
	*($9 + [236]) = ($2 + [229])
	*($9 + [240]) = ($2 + [230])
	*($9 + [244]) = ($2 + [231])
	*($9 + [248]) = ($2 + [232])
	*($9 + [252]) = ($2 + [233])
	*($9 + [256]) = ($2 + [234])
	*($9 + [260]) = ($2 + [235])
	*($9 + [264]) = ($2 + [236])
	*($9 + [268]) = ($2 + [237])
	CALL $669(($9 + [8]), $9)
	*([0] + [4]) = ($9 + [272])
}

void .FUNC $711 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [272])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($3 + [8]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL $101(*($1), ($3 + [24]))
	*($4) = *($1)
	*($4 + [12]) = ($3 + [37])
	*($4 + [8]) = ($3 + [36])
	*($4 + [16]) = ($3 + [38])
	*($4 + [20]) = ($3 + [39])
	*($4 + [24]) = ($3 + [40])
	*($4 + [28]) = ($3 + [41])
	*($4 + [32]) = ($3 + [42])
	*($4 + [36]) = ($3 + [43])
	*($4 + [40]) = ($3 + [44])
	*($4 + [44]) = ($3 + [45])
	*($4 + [48]) = ($3 + [46])
	*($4 + [52]) = ($3 + [47])
	*($4 + [56]) = ($3 + [48])
	*($4 + [60]) = ($3 + [49])
	*($4 + [64]) = ($3 + [50])
	*($4 + [68]) = ($3 + [51])
	*($4 + [72]) = ($3 + [52])
	*($4 + [76]) = ($3 + [53])
	*($4 + [80]) = ($3 + [54])
	*($4 + [84]) = ($3 + [55])
	*($4 + [88]) = ($3 + [56])
	*($4 + [92]) = ($3 + [57])
	*($4 + [96]) = ($3 + [58])
	*($4 + [100]) = ($3 + [59])
	*($4 + [104]) = ($3 + [60])
	*($4 + [108]) = ($3 + [61])
	*($4 + [112]) = ($3 + [62])
	*($4 + [116]) = ($3 + [63])
	*($4 + [120]) = ($3 + [64])
	*($4 + [124]) = ($3 + [65])
	*($4 + [128]) = ($3 + [66])
	*($4 + [132]) = ($3 + [67])
	*($4 + [136]) = ($3 + [68])
	*($4 + [140]) = ($3 + [69])
	*($4 + [144]) = ($3 + [70])
	*($4 + [148]) = ($3 + [71])
	*($4 + [152]) = ($3 + [72])
	*($4 + [156]) = ($3 + [73])
	*($4 + [160]) = ($3 + [74])
	*($4 + [164]) = ($3 + [75])
	*($4 + [168]) = ($3 + [76])
	*($4 + [172]) = ($3 + [77])
	*($4 + [176]) = ($3 + [78])
	*($4 + [180]) = ($3 + [79])
	*($4 + [184]) = ($3 + [80])
	*($4 + [188]) = ($3 + [81])
	*($4 + [192]) = ($3 + [82])
	*($4 + [196]) = ($3 + [83])
	*($4 + [200]) = ($3 + [84])
	*($4 + [204]) = ($3 + [85])
	*($4 + [208]) = ($3 + [86])
	*($4 + [212]) = ($3 + [87])
	*($4 + [216]) = ($3 + [88])
	*($4 + [220]) = ($3 + [89])
	*($4 + [224]) = ($3 + [90])
	*($4 + [228]) = ($3 + [91])
	*($4 + [232]) = ($3 + [92])
	*($4 + [236]) = ($3 + [93])
	*($4 + [240]) = ($3 + [94])
	*($4 + [244]) = ($3 + [95])
	*($4 + [248]) = ($3 + [96])
	*($4 + [252]) = ($3 + [97])
	*($4 + [256]) = ($3 + [98])
	*($4 + [260]) = ($3 + [99])
	*($4 + [264]) = ($3 + [100])
	*($4 + [268]) = ($3 + [101])
	CALL $669(($4 + [8]), $4)
	*([0] + [4]) = ($4 + [272])
}

void .FUNC $712 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [320])
	*([0] + [4]) = $6
	$4 = *($1 + [16])
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $767(($6 + [144]), ($1 + [24]))
	CALL memcpy(($6 + [78]), ($1 + [36]), [66])
	CALL memcpy(($6 + [160]), ($6 + [78]), [66])
	$1 = *($0 + [4])
	$5 = *($1 + [4])
	$0 = (*(*($0)) + int_32($5 >> [1]))
	$1 = *($1)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $767(($6 + [304]), ($6 + [144]))
	CALL memcpy(($6 + [232]), ($6 + [160]), [66])
	CALL memcpy(($6 + [12]), ($6 + [232]), [66])
	CALL void $0((int_32 $2), (int_64 $3), (int_32 $4), (int_64 ($6 + [304])), (int_32 ($6 + [12])), (int_32 $1))
	if ( ((*($6 + [304]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*($6 + [312]))
	
.LABEL $label$2
	if ( ((*($6 + [144]) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($6 + [152]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [320])
}

void .FUNC $713 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [272])
	*([0] + [4]) = $8
	$6 = *($0)
	$7 = *($1)
	CALL eosio_assert(((uint_32)(*($7 + [8]) - *($7 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($6, *($7 + [4]), [8])
	*($7 + [4]) = (*($7 + [4]) + [8])
	$0 = *($0)
	$7 = *($1)
	CALL eosio_assert(((uint_32)(*($7 + [8]) - *($7 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($0 + [8]), *($7 + [4]), [4])
	*($7 + [4]) = (*($7 + [4]) + [4])
	$7 = *($1)
	CALL eosio_assert(((uint_32)(*($7 + [8]) - *($7 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [16]), *($7 + [4]), [8])
	*($7 + [4]) = (*($7 + [4]) + [8])
	$3 = *($1)
	$7 = *($3 + [4])
	$5 = [0]
	$4 = (int_64)0
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *(($3 + [8]))), [656])
	$2 = ($3 + [4])
	$7 = *($2)
	$6 = *($7)
	$7 = ($7 + [1])
	*($2) = $7
	$5 = ($5 & [255])
	$4 = ((int_64)(CASTING uint_64)(uint_32 (($6 & [127]) << $5)) | (int_64)$4)
	$5 = ($5 + [7])
	if ( uint_32($6 >> [7]) ){ goto $label$1 }
	*($0 + [24]) = $4
	$6 = [28]
	$5 = ($3 + [8])
	$3 = ($3 + [4])
	
.LOOP $label$2:
	CALL eosio_assert(((int_32)*($5) != (int_32)$7), [544])
	CALL memcpy(($0 + $6), *($3), [1])
	$7 = (*($3) + [1])
	*($3) = $7
	$6 = ($6 + [1])
	if ( ((int_32)$6 != (int_32)[61]) ){ goto $label$2 }
	*($8) = *($1)
	*($8 + [12]) = ($0 + [65])
	*($8 + [8]) = ($0 + [64])
	*($8 + [16]) = ($0 + [66])
	*($8 + [20]) = ($0 + [67])
	*($8 + [24]) = ($0 + [68])
	*($8 + [28]) = ($0 + [69])
	*($8 + [32]) = ($0 + [70])
	*($8 + [36]) = ($0 + [71])
	*($8 + [40]) = ($0 + [72])
	*($8 + [44]) = ($0 + [73])
	*($8 + [48]) = ($0 + [74])
	*($8 + [52]) = ($0 + [75])
	*($8 + [56]) = ($0 + [76])
	*($8 + [60]) = ($0 + [77])
	*($8 + [64]) = ($0 + [78])
	*($8 + [68]) = ($0 + [79])
	*($8 + [72]) = ($0 + [80])
	*($8 + [76]) = ($0 + [81])
	*($8 + [80]) = ($0 + [82])
	*($8 + [84]) = ($0 + [83])
	*($8 + [88]) = ($0 + [84])
	*($8 + [92]) = ($0 + [85])
	*($8 + [96]) = ($0 + [86])
	*($8 + [100]) = ($0 + [87])
	*($8 + [104]) = ($0 + [88])
	*($8 + [108]) = ($0 + [89])
	*($8 + [112]) = ($0 + [90])
	*($8 + [116]) = ($0 + [91])
	*($8 + [120]) = ($0 + [92])
	*($8 + [124]) = ($0 + [93])
	*($8 + [128]) = ($0 + [94])
	*($8 + [132]) = ($0 + [95])
	*($8 + [136]) = ($0 + [96])
	*($8 + [140]) = ($0 + [97])
	*($8 + [144]) = ($0 + [98])
	*($8 + [148]) = ($0 + [99])
	*($8 + [152]) = ($0 + [100])
	*($8 + [156]) = ($0 + [101])
	*($8 + [160]) = ($0 + [102])
	*($8 + [164]) = ($0 + [103])
	*($8 + [168]) = ($0 + [104])
	*($8 + [172]) = ($0 + [105])
	*($8 + [176]) = ($0 + [106])
	*($8 + [180]) = ($0 + [107])
	*($8 + [184]) = ($0 + [108])
	*($8 + [188]) = ($0 + [109])
	*($8 + [192]) = ($0 + [110])
	*($8 + [196]) = ($0 + [111])
	*($8 + [200]) = ($0 + [112])
	*($8 + [204]) = ($0 + [113])
	*($8 + [208]) = ($0 + [114])
	*($8 + [212]) = ($0 + [115])
	*($8 + [216]) = ($0 + [116])
	*($8 + [220]) = ($0 + [117])
	*($8 + [224]) = ($0 + [118])
	*($8 + [228]) = ($0 + [119])
	*($8 + [232]) = ($0 + [120])
	*($8 + [236]) = ($0 + [121])
	*($8 + [240]) = ($0 + [122])
	*($8 + [244]) = ($0 + [123])
	*($8 + [248]) = ($0 + [124])
	*($8 + [252]) = ($0 + [125])
	*($8 + [256]) = ($0 + [126])
	*($8 + [260]) = ($0 + [127])
	*($8 + [264]) = ($0 + [128])
	*($8 + [268]) = ($0 + [129])
	CALL $669(($8 + [8]), $8)
	*([0] + [4]) = ($8 + [272])
}

void .FUNC $718 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [32]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($2 + [48]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [56]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($2 + [64]), *($1 + [4]), [2])
	*($1 + [4]) = (*($1 + [4]) + [2])
}

void .FUNC $719 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [544])
	CALL memcpy(($4 + [15]), *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	*($2) = ((int_32)*($4 + [15]) != (int_32)[0])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [24]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $484 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	if ( ($1 == 0) ){ goto $label$1 }
	CALL printui(*($0))
	CALL prints([5360])
	
.LABEL $label$1
	$2 = *($0)
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)8)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)16)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)24)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)40)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)56)
	*($3 + [15]) = $0)
	if ( ($0 == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	
.LABEL $label$2
	*([0] + [4]) = ($3 + [16])
}

int_32 .FUNC $485 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [784])
	$6 = *($0 + [4])
	$7 = *($6 + [24])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)5031813150555504640, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [24]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$2), [288])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $21($2, CALL $fimport$19(*($2), *($2 + [8]), (int_64)5031813150555504640, $3))
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$2), [288])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [24])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC _ZN11walexchange11rex_manager6refundEyb (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [176])
	*([0] + [4]) = $15
	*($15 + [136]) = (int_64)-1
	*($15 + [144]) = [0]
	$13 = *($0)
	*($15 + [120]) = $13
	$11 = *($0 + [8])
	*($15 + [128]) = $11
	*(($15 + [148])) = [0]
	*(($15 + [152])) = [0]
	*(($15 + [158])) = [0]
	*($15 + [156]) = [0]
	$8 = [0]
	$7 = CALL db_find_i64($13, $11, (int_64)-3020379700877741408, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $463(($15 + [120]), $7)
	CALL eosio_assert(((int_32)*($8 + [88]) == (int_32)($15 + [120])), [288])
	
.LABEL $label$1
	$3 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($3, [8944])
	CALL eosio_assert(*($8 + [76]), [8976])
	if ( ($2 == 0) ){ goto $label$3 }
	CALL eosio_assert([1], [9008])
	$6 = ($8 + [56])
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert((*($8 + [80]) <= (CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$17() / (uint_64)(int_64)1000000))), [9008])
	$1 = (int_64)0
	$11 = (int_64)59
	$2 = [8112]
	$12 = (int_64)0
	
.LOOP $label$4:
	if ( ((uint_64)$1 > (uint_64)(int_64)4) ){ goto $label$9 }
	$7 = *($2)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$7 = ($7 + [165])
	goto $label$7 
	
.LABEL $label$9
	$13 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$6
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$5
	$2 = ($2 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$4 }
	*(($15 + [48])) = [0]
	*($15 + [32]) = (int_64)-1
	$1 = (int_64)0
	*($15 + [40]) = (int_64)0
	$13 = *($8 + [56])
	*($15 + [24]) = $13
	*($15 + [16]) = $12
	$6 = ($8 + [56])
	$2 = CALL db_find_i64($12, $13, (int_64)-5001342326447013888, $13)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$10 }
	CALL eosio_assert(((int_32)*(CALL $465(($15 + [16]), $2) + [48]) == (int_32)($15 + [16])), [288])
	$4 = *($6)
	$11 = (int_64)59
	$2 = [2144]
	$12 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$16 }
	$7 = *($2)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$7 = ($7 + [165])
	goto $label$14 
	
.LABEL $label$16
	$13 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$12
	$2 = ($2 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$11 }
	$1 = (int_64)0
	$11 = (int_64)59
	$2 = [8112]
	$14 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$1 > (uint_64)(int_64)4) ){ goto $label$22 }
	$7 = *($2)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$7 = ($7 + [165])
	goto $label$20 
	
.LABEL $label$22
	$13 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$18
	$2 = ($2 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$17 }
	$1 = (int_64)0
	$11 = (int_64)59
	$2 = [8544]
	$10 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$28 }
	$7 = *($2)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$7 = ($7 + [165])
	goto $label$26 
	
.LABEL $label$28
	$13 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$24
	$2 = ($2 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$10 = ((int_64)$13 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$23 }
	*(($7 = ($15 + [104]))) = [0]
	*($15 + [160]) = $4
	*($15 + [88]) = $10
	*($15 + [96]) = (int_64)0
	*($15 + [80]) = $14
	*(($2 = CALL $737([16]))) = $4
	*($2 + [8]) = $12
	*(($5 = ($15 + [112]))) = [0]
	$9 = ($2 + [16])
	*($7) = $9
	*(($15 + [100])) = $9
	*($15 + [96]) = $2
	*($15 + [108]) = [0]
	*(($15 + [116])) = [0]
	CALL $88(($15 + [108]), [8])
	$2 = *($15 + [108])
	CALL eosio_assert(((int_32)(*($5) - $2) > (int_32)[7]), [496])
	CALL memcpy($2, ($15 + [160]), [8])
	CALL $87(($15 + [64]), ($15 + [80]))
	$2 = *($15 + [64])
	CALL send_inline($2, (*($15 + [68]) - $2))
	$2 = *($15 + [64])
	if ( ($2 == 0) ){ goto $label$29 }
	*($15 + [68]) = $2
	CALL $738($2)
	
.LABEL $label$29
	$2 = *($15 + [108])
	if ( ($2 == 0) ){ goto $label$30 }
	*(($15 + [112])) = $2
	CALL $738($2)
	
.LABEL $label$30
	$2 = *($15 + [96])
	if ( ($2 == 0) ){ goto $label$10 }
	*(($15 + [100])) = $2
	CALL $738($2)
	
.LABEL $label$10
	$5 = *($15 + [40])
	if ( ($5 == 0) ){ goto $label$2 }
	$9 = ($15 + [44])
	$2 = *($9)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$32 }
	
.LOOP $label$33:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$34 }
	CALL $738($7)
	
.LABEL $label$34
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$33 }
	$2 = *(($15 + [40]))
	goto $label$31 
	
.LABEL $label$32
	$2 = $5
	
.LABEL $label$31
	*($9) = $5
	CALL $738($2)
	
.LABEL $label$2
	$14 = *($6)
	$1 = (int_64)0
	$11 = (int_64)59
	$2 = [2144]
	$12 = (int_64)0
	
.LOOP $label$35:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$40 }
	$7 = *($2)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$7 = ($7 + [165])
	goto $label$38 
	
.LABEL $label$40
	$13 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$39
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$37
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$36
	$2 = ($2 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$35 }
	*($15 + [72]) = $12
	*($15 + [64]) = $14
	$1 = (int_64)0
	$11 = (int_64)59
	$2 = [8064]
	$12 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$46 }
	$7 = *($2)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$7 = ($7 + [165])
	goto $label$44 
	
.LABEL $label$46
	$13 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$42
	$2 = ($2 + [1])
	$11 = ((int_64)$11 + (int_64)-5)
	$12 = ((int_64)$13 | (int_64)$12)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$41 }
	$1 = (int_64)0
	$11 = (int_64)59
	$2 = [3360]
	$14 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$52 }
	$7 = *($2)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$7 = ($7 + [165])
	goto $label$50 
	
.LABEL $label$52
	$13 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$48
	$2 = ($2 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$47 }
	$13 = *($8 + [40])
	CALL eosio_assert((uint_64)(((int_64)$13 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$1 = (int_64)5459781
	$2 = [0]
	
.LOOP $label$55:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$54 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$56 }
	
.LOOP $label$57:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$54 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$57 }
	
.LABEL $label$56
	$7 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$55 }
	goto $label$53 
	
.LABEL $label$54
	$7 = [0]
	
.LABEL $label$53
	CALL eosio_assert($7, [2832])
	*(($15 + [8])) = [0]
	*($15) = (int_64)0
	$2 = CALL strlen([8368])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$58 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$61 }
	*($15) = ($2 << [1])
	$7 = ($15 | [1])
	if ( $2 ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$61
	$5 = (($2 + [16]) & [-16])
	$7 = CALL $737($5)
	*($15) = ($5 | [1])
	*($15 + [8]) = $7
	*($15 + [4]) = $2
	
.LABEL $label$60
	CALL memcpy($7, [8368], $2)
	
.LABEL $label$59
	*(($7 + $2)) = [0]
	*(($15 + [40])) = (int_64)1397703940
	*($15 + [24]) = *($0)
	$2 = ($15 + [8])
	*(($15 + [56])) = *($2)
	*($15 + [16]) = *($6)
	*($15 + [32]) = $13
	*($15 + [48]) = *($15)
	*($15) = [0]
	*($15 + [4]) = [0]
	*($2) = [0]
	$2 = CALL $151(($15 + [80]), ($15 + [64]), $12, $14, ($15 + [16]))
	CALL $87(($15 + [160]), $2)
	$7 = *($15 + [160])
	CALL send_inline($7, (*($15 + [164]) - $7))
	$7 = *($15 + [160])
	if ( ($7 == 0) ){ goto $label$62 }
	*($15 + [164]) = $7
	CALL $738($7)
	
.LABEL $label$62
	$7 = *($2 + [28])
	if ( ($7 == 0) ){ goto $label$63 }
	*(($2 + [32])) = $7
	CALL $738($7)
	
.LABEL $label$63
	$7 = *($2 + [16])
	if ( ($7 == 0) ){ goto $label$64 }
	*(($2 + [20])) = $7
	CALL $738($7)
	
.LABEL $label$64
	if ( ((*(($15 + [48])) & [1]) == 0) ){ goto $label$65 }
	CALL $738(*(($15 + [56])))
	
.LABEL $label$65
	if ( ((*($15) & [1]) == 0) ){ goto $label$66 }
	CALL $738(*(($15 + [8])))
	
.LABEL $label$66
	CALL eosio_assert($3, [736])
	CALL eosio_assert($3, [784])
	$2 = CALL db_next_i64(*($8 + [92]), ($15 + [16]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$67 }
	CALL $463(($15 + [120]), $2)
	
.LABEL $label$67
	CALL $487(($15 + [120]), $8)
	$8 = *($15 + [144])
	if ( ($8 == 0) ){ goto $label$68 }
	$5 = ($15 + [148])
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)$8) ){ goto $label$70 }
	
.LOOP $label$71:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$72 }
	CALL $738($7)
	
.LABEL $label$72
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$71 }
	$2 = *(($15 + [144]))
	goto $label$69 
	
.LABEL $label$70
	$2 = $8
	
.LABEL $label$69
	*($5) = $8
	CALL $738($2)
	
.LABEL $label$68
	*([0] + [4]) = ($15 + [176])
	return (unreachable)
	
.LABEL $label$58
	CALL $739($15)
}

void .FUNC $487 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [92]))
	*($9 + [4]) = $1
	*($9) = $0
	*($9 + [8]) = $9
	CALL $488(($9 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]))
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _ZN11walexchange11rex_manager8delegateEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [240])
	*([0] + [4]) = $12
	*($12 + [120]) = (int_64)-1
	*($12 + [128]) = [0]
	*($12 + [104]) = *($0)
	*($12 + [112]) = *($0 + [8])
	*(($12 + [132])) = [0]
	*(($12 + [136])) = [0]
	*(($12 + [142])) = [0]
	*($12 + [140]) = [0]
	$2 = CALL $479(($12 + [104]), $1, [8720])
	$6 = ($2 + [54])
	CALL eosio_assert(((int_32)*($6) ^ (int_32)[1]), [8752])
	$3 = CALL _ZN11walexchange11rex_manager18find_best_creditorEm($0, *($2 + [24]))
	CALL eosio_assert(((int_32)*($2 + [88]) == (int_32)($12 + [104])), [848])
	CALL eosio_assert(((int_64)*($12 + [104]) == (int_64)CALL $fimport$16()), [896])
	$1 = *($6)
	*($12 + [32]) = $1
	$9 = *(($2 + [76]))
	$9 = *($2 + [72])
	*($12 + [40]) = ( $9 ? (int_64)4294967295 : (int_64)(((int_64)(CASTING uint_64)(uint_32 (int_64)($9 == 0)) | (int_64)( (int_64)4294967296 ? ((int_64)$9 << (int_64)32) : (int_64)($1 == 0) )) == 0) )
	$1 = *(($2 + [80]))
	*($12 + [48]) = ( $1 ? (int_64)4294967295 : (int_64)(((int_64)(CASTING uint_64)(uint_32 (int_64)($1 == 0)) | (int_64)((int_64)((int_64)$9 ^ (int_64)1) << (int_64)32)) == 0) )
	$1 = *($2)
	*($6) = [1]
	*($2 + [56]) = $3
	*($2 + [72]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + *($2 + [24]))
	CALL eosio_assert(((int_64)$1 == (int_64)*($2)), [960])
	*($12 + [96]) = (($12 + [144]) + [76])
	*($12 + [92]) = ($12 + [144])
	*($12 + [88]) = ($12 + [144])
	CALL $299(($12 + [88]), $2)
	CALL db_update_i64(*($2 + [92]), (int_64)0, ($12 + [144]), [76])
	if ( (uint_64)($1 <= *($12 + [120])) ){ goto $label$1 }
	*((($12 + [104]) + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($12 + [72]) = *($6)
	if ( (CALL memcmp(($12 + [32]), ($12 + [72]), [8]) == 0) ){ goto $label$2 }
	$4 = ($2 + [96])
	$6 = *($4)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$3 }
	$6 = CALL db_idx64_find_primary(*($12 + [104]), *(($12 + [112])), (int_64)-3020379700877741408, ($12 + [16]), $1)
	*($4) = $6
	
.LABEL $label$3
	CALL db_idx64_update($6, (int_64)0, ($12 + [72]))
	
.LABEL $label$2
	$6 = (($12 + [32]) + [8])
	if ( (*(($2 + [54])) == 0) ){ goto $label$5 }
	$7 = ((int_64)*(($2 + [76])) << (int_64)32)
	goto $label$4 
	
.LABEL $label$5
	$7 = (int_64)4294967296
	
.LABEL $label$4
	$4 = (($12 + [32]) + [16])
	$9 = *(($2 + [72]))
	*($12 + [72]) = ( $9 ? (int_64)4294967295 : (int_64)(((int_64)(CASTING uint_64)(uint_32 (int_64)($9 == 0)) | (int_64)$7) == 0) )
	if ( (CALL memcmp($6, ($12 + [72]), [8]) == 0) ){ goto $label$6 }
	$5 = ($2 + [100])
	$6 = *($5)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$7 }
	$6 = CALL db_idx64_find_primary(*($12 + [104]), *(($12 + [112])), (int_64)-3020379700877741407, ($12 + [16]), $1)
	*($5) = $6
	
.LABEL $label$7
	CALL db_idx64_update($6, (int_64)0, ($12 + [72]))
	
.LABEL $label$6
	$9 = *(($2 + [80]))
	*($12 + [72]) = ( $9 ? (int_64)4294967295 : (int_64)(((int_64)((int_64)((int_64)*(($2 + [76])) ^ (int_64)1) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (int_64)($9 == 0))) == 0) )
	if ( (CALL memcmp($4, ($12 + [72]), [8]) == 0) ){ goto $label$8 }
	$4 = ($2 + [104])
	$6 = *($4)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$9 }
	$6 = CALL db_idx64_find_primary(*($12 + [104]), *(($12 + [112])), (int_64)-3020379700877741406, ($12 + [16]), $1)
	*($4) = $6
	
.LABEL $label$9
	CALL db_idx64_update($6, (int_64)0, ($12 + [72]))
	
.LABEL $label$8
	*($12 + [96]) = (int_64)1397703940
	$1 = *($2 + [40])
	*($12 + [88]) = $1
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$1 = (uint_64)*($12 + [96]) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	$4 = [0]
	
.LABEL $label$10
	CALL eosio_assert($4, [2832])
	*($12 + [80]) = (int_64)1397703940
	*($12 + [72]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$1 = (uint_64)*($12 + [80]) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$4 = [0]
	
.LABEL $label$15
	CALL eosio_assert($4, [2832])
	CALL $482(($12 + [88]))
	CALL $482(($12 + [72]))
	$10 = *($0)
	$1 = (int_64)0
	$7 = (int_64)59
	$6 = [2144]
	$8 = (int_64)0
	
.LOOP $label$20:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$25 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$4 = ($4 + [165])
	goto $label$23 
	
.LABEL $label$25
	$9 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$22
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$21
	$6 = ($6 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$20 }
	*($12 + [24]) = $8
	*($12 + [16]) = $10
	$1 = (int_64)0
	$7 = (int_64)59
	$6 = [8064]
	$8 = (int_64)0
	
.LOOP $label$26:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$31 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$4 = ($4 + [165])
	goto $label$29 
	
.LABEL $label$31
	$9 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$30
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$28
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$27
	$6 = ($6 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$8 = ((int_64)$9 | (int_64)$8)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$26 }
	$1 = (int_64)0
	$7 = (int_64)59
	$6 = [3360]
	$10 = (int_64)0
	
.LOOP $label$32:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$37 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$36 }
	$4 = ($4 + [165])
	goto $label$35 
	
.LABEL $label$37
	$9 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$36
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$35
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$34
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$33
	$6 = ($6 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$32 }
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$6 = CALL strlen([8784])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$38 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$41 }
	*($12) = ($6 << [1])
	$4 = ($12 | [1])
	if ( $6 ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$41
	$5 = (($6 + [16]) & [-16])
	$4 = CALL $737($5)
	*($12) = ($5 | [1])
	*($12 + [8]) = $4
	*($12 + [4]) = $6
	
.LABEL $label$40
	CALL memcpy($4, [8784], $6)
	
.LABEL $label$39
	*(($4 + $6)) = [0]
	*(($12 + [164])) = *($12 + [92])
	*($12 + [152]) = $3
	*(($12 + [172])) = *(($12 + [100]))
	*(($12 + [168])) = *((($12 + [88]) + [8]))
	*($12 + [144]) = *($0)
	*($12 + [160]) = *($12 + [88])
	$6 = ($12 + [8])
	*(($12 + [184])) = *($6)
	*($12 + [176]) = *($12)
	*($12) = [0]
	*($12 + [4]) = [0]
	*($6) = [0]
	$6 = CALL $151(($12 + [32]), ($12 + [16]), $8, $10, ($12 + [144]))
	CALL $87(($12 + [224]), $6)
	$4 = *($12 + [224])
	CALL send_inline($4, (*($12 + [228]) - $4))
	$4 = *($12 + [224])
	if ( ($4 == 0) ){ goto $label$42 }
	*($12 + [228]) = $4
	CALL $738($4)
	
.LABEL $label$42
	$4 = *($6 + [28])
	if ( ($4 == 0) ){ goto $label$43 }
	*(($6 + [32])) = $4
	CALL $738($4)
	
.LABEL $label$43
	$4 = *($6 + [16])
	if ( ($4 == 0) ){ goto $label$44 }
	*(($6 + [20])) = $4
	CALL $738($4)
	
.LABEL $label$44
	if ( ((*(($12 + [176])) & [1]) == 0) ){ goto $label$45 }
	CALL $738(*(($12 + [184])))
	
.LABEL $label$45
	if ( ((*($12) & [1]) == 0) ){ goto $label$46 }
	CALL $738(*(($12 + [8])))
	
.LABEL $label$46
	$1 = (int_64)0
	$7 = (int_64)59
	$6 = [2144]
	$8 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$52 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$4 = ($4 + [165])
	goto $label$50 
	
.LABEL $label$52
	$9 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$48
	$6 = ($6 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$47 }
	$1 = (int_64)0
	$7 = (int_64)59
	$6 = [8112]
	$10 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$1 > (uint_64)(int_64)4) ){ goto $label$58 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$4 = ($4 + [165])
	goto $label$56 
	
.LABEL $label$58
	$9 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$54
	$6 = ($6 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$53 }
	$1 = (int_64)0
	$7 = (int_64)59
	$6 = [8816]
	$11 = (int_64)0
	
.LOOP $label$59:
	if ( ((uint_64)$1 > (uint_64)(int_64)9) ){ goto $label$64 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$63 }
	$4 = ($4 + [165])
	goto $label$62 
	
.LABEL $label$64
	$9 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$61 }
	goto $label$60 
	
.LABEL $label$63
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$62
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$61
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$60
	$6 = ($6 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$11 = ((int_64)$9 | (int_64)$11)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$59 }
	*((($12 + [144]) + [20])) = *($12 + [76])
	*($12 + [152]) = *($2 + [64])
	*((($12 + [144]) + [28])) = *(($12 + [84]))
	*((($12 + [144]) + [24])) = *((($12 + [72]) + [8]))
	*($12 + [144]) = $3
	*($12 + [160]) = *($12 + [72])
	*(($12 + [184])) = *((($12 + [88]) + [8]))
	*($12 + [176]) = *($12 + [88])
	*($12 + [192]) = [0]
	*($12 + [32]) = $10
	*($12 + [40]) = $11
	*(($6 = CALL $737([16]))) = $3
	*($6 + [8]) = $8
	*(($4 = ($12 + [64]))) = [0]
	$2 = ($6 + [16])
	*((($12 + [32]) + [24])) = $2
	*((($12 + [32]) + [20])) = $2
	*($12 + [48]) = $6
	*($12 + [60]) = [0]
	*(($12 + [68])) = [0]
	CALL $88((($12 + [32]) + [28]), [52])
	$6 = *($4)
	$4 = *($12 + [60])
	*($12 + [20]) = $4
	*($12 + [16]) = $4
	*($12 + [24]) = $6
	*($12) = ($12 + [16])
	*($12 + [224]) = ($12 + [144])
	CALL $483(($12 + [224]), $12)
	CALL $87(($12 + [16]), ($12 + [32]))
	$6 = *($12 + [16])
	CALL send_inline($6, (*($12 + [20]) - $6))
	$6 = *($12 + [16])
	if ( ($6 == 0) ){ goto $label$65 }
	*($12 + [20]) = $6
	CALL $738($6)
	
.LABEL $label$65
	$6 = *($12 + [60])
	if ( ($6 == 0) ){ goto $label$66 }
	*(($12 + [64])) = $6
	CALL $738($6)
	
.LABEL $label$66
	$6 = *($12 + [48])
	if ( ($6 == 0) ){ goto $label$67 }
	*(($12 + [52])) = $6
	CALL $738($6)
	
.LABEL $label$67
	$2 = *($12 + [128])
	if ( ($2 == 0) ){ goto $label$68 }
	$0 = ($12 + [132])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$70 }
	
.LOOP $label$71:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$72 }
	CALL $738($4)
	
.LABEL $label$72
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$71 }
	$6 = *(($12 + [128]))
	goto $label$69 
	
.LABEL $label$70
	$6 = $2
	
.LABEL $label$69
	*($0) = $2
	CALL $738($6)
	
.LABEL $label$68
	*([0] + [4]) = ($12 + [240])
	return (unreachable)
	
.LABEL $label$38
	CALL $739($12)
}

int_64 .FUNC _ZN11walexchange11rex_manager18find_best_creditorEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [112])
	*([0] + [4]) = $5
	*((($5 + [64]) + [32])) = [0]
	*($5 + [80]) = (int_64)-1
	*($5 + [88]) = (int_64)0
	$3 = *($0)
	*($5 + [64]) = $3
	*($5 + [72]) = $3
	$4 = [0]
	$2 = CALL db_find_i64($3, $3, (int_64)5031813144072871104, (int_64)5031813144072871104)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $453(($5 + [64]), $2)
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)($5 + [64])), [288])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [672])
	$2 = *($4 + [24])
	$4 = *($4 + [16])
	*((($5 + [24]) + [32])) = [0]
	*($5 + [40]) = (int_64)-1
	*($5 + [48]) = (int_64)0
	$3 = *($0)
	*($5 + [24]) = $3
	*($5 + [32]) = $3
	*($5 + [60]) = [0]
	*($5 + [16]) = ($5 + [24])
	$3 = CALL current_time()
	CALL prints([8848])
	$0 = (($2 - $4) + ((int_32)((($4 + $1) - $2) + (CASTING uint_32)(uint_64 ((uint_64)$3 / (uint_64)(int_64)1000000))) % (int_32)$4))
	CALL printui((CASTING uint_64)(uint_32 $0))
	CALL prints([5360])
	*($5 + [104]) = (int_64)0
	CALL $454(($5 + [8]), ($5 + [16]), ($5 + [104]))
	$4 = *($5 + [12])
	if ( ($4 == 0) ){ goto $label$4 }
	
.LOOP $label$5:
	CALL prints([8864])
	CALL printui(*($4 + [8]))
	CALL prints([5360])
	$4 = *($5 + [12])
	if ( (*($4 + [12]) == 0) ){ goto $label$6 }
	if ( ((uint_32)*($4 + [8]) >= (uint_32)$0) ){ goto $label$3 }
	
.LABEL $label$6
	CALL $485(($5 + [8]))
	$4 = *($5 + [12])
	if ( $4 ){ goto $label$5 }
	goto $label$2 
	
.LABEL $label$4
	goto $label$2 
	
.LABEL $label$3
	$3 = *($4)
	
.LABEL $label$2
	CALL eosio_assert(((int_64)$3 != (int_64)0), [8896])
	CALL prints([8928])
	CALL printn($3)
	$2 = *($5 + [48])
	if ( ($2 == 0) ){ goto $label$7 }
	$1 = ($5 + [52])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $738($0)
	
.LABEL $label$11
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($5 + [48]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $2
	
.LABEL $label$8
	*($1) = $2
	CALL $738($4)
	
.LABEL $label$7
	$2 = *($5 + [88])
	if ( ($2 == 0) ){ goto $label$12 }
	$1 = ($5 + [92])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$16 }
	CALL $738($0)
	
.LABEL $label$16
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$15 }
	$4 = *(($5 + [88]))
	goto $label$13 
	
.LABEL $label$14
	$4 = $2
	
.LABEL $label$13
	*($1) = $2
	CALL $738($4)
	
.LABEL $label$12
	*([0] + [4]) = ($5 + [112])
	return $3
}

void .FUNC $482 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = *([0] + [4])
	$10 = $2
	$7 = (int_64)1
	$8 = *($0 + [8])
	$5 = (int_64)($8 == 0)
	if ( $5 ){ goto $label$1 }
	$9 = ((int_64)$8 + (int_64)1)
	$7 = (int_64)1
	
.LOOP $label$2:
	$7 = ((int_64)$7 * (int_64)10)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)$9 > (int_64)1) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [8])
	$2 = ($2 - (((CASTING uint_32)(uint_64 ((int_64)$8 + (int_64)1)) + [15]) & [1008]))
	*([0] + [4]) = $2
	*(($6 = ($2 + ($3 = (CASTING uint_32)(uint_64 $8))))) = [0]
	$4 = *($0)
	if ( $5 ){ goto $label$3 }
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$4 % (int_64)$7)
	$0 = ($6 + [-1])
	
.LOOP $label$4:
	*($0) = ((int_64)((int_64)$9 % (int_64)10) + (int_64)48)
	$0 = ($0 + [-1])
	$9 = ((int_64)$9 / (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$4 }
	
.LABEL $label$3
	CALL printi(((int_64)$4 / (int_64)$7))
	CALL prints([8832])
	CALL prints_l($2, $3)
	CALL prints([1664])
	CALL $484($1, [0])
	*([0] + [4]) = $10
}

void .FUNC $483 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [32]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [40]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[3]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [48]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
}

void .FUNC $488 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = *($0)
	$4 = *($5 + [4])
	$6 = *($4 + [96])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	$6 = *($5)
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-3020379700877741408, ($7 + [8]), *($4))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($6)
	
.LABEL $label$1
	$5 = *($0)
	$4 = *($5 + [4])
	$6 = *(($4 + [100]))
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$4 }
	$6 = *($5)
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-3020379700877741407, ($7 + [8]), *($4))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($6)
	
.LABEL $label$3
	$6 = *($0)
	$5 = *($6 + [4])
	$0 = *(($5 + [104]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$6 }
	$0 = *($6)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020379700877741406, ($7 + [8]), *($5))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($0)
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [16])
}

void .FUNC _ZN11walexchange11rex_manager12add_creditorEymy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
}

void .FUNC _Z5splitNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEc (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = CALL $751($1, $2, [0])
	if ( ((int_32)$5 == (int_32)[-1]) ){ goto $label$2 }
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$3:
	CALL $768($7, $1, $6, ($5 - $6), $1)
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($3)) ){ goto $label$5 }
	*($6) = *($7)
	$6 = ($7 + [8])
	*(($6 + [8])) = *($6)
	*($6) = [0]
	*($7) = [0]
	*($7 + [4]) = [0]
	*($4) = (*($4) + [12])
	goto $label$4 
	
.LABEL $label$5
	CALL $58($0, $7)
	if ( ((*($7) & [1]) == 0) ){ goto $label$4 }
	CALL $738(*(($7 + [8])))
	
.LABEL $label$4
	$6 = ($5 + [1])
	$5 = CALL $751($1, $2, $6)
	if ( ((int_32)$5 != (int_32)[-1]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL $768($7, $1, $6, [-1], $1)
	$1 = ($0 + [4])
	$6 = *($1)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [8]))) ){ goto $label$7 }
	*($6) = *($7)
	$6 = ($7 + [8])
	*(($6 + [8])) = *($6)
	*($6) = [0]
	*($7) = [0]
	*($7 + [4]) = [0]
	*($1) = (*($1) + [12])
	goto $label$6 
	
.LABEL $label$7
	CALL $58($0, $7)
	if ( ((*($7) & [1]) == 0) ){ goto $label$6 }
	CALL $738(*($7 + [8]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $68 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$4 = CALL strlen([1568])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($4 << [1])
	$7 = ($0 + [1])
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = (($4 + [16]) & [-16])
	$7 = CALL $737($5)
	*($0) = ($5 | [1])
	*($0 + [8]) = $7
	*($0 + [4]) = $4
	
.LABEL $label$4
	CALL memcpy($7, [1568], $4)
	
.LABEL $label$3
	*(($7 + $4)) = [0]
	$4 = *($2)
	$7 = CALL strlen([1568])
	if ( ((int_32)$7 != (int_32)( *($2 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) )) ){ goto $label$7 }
	if ( (CALL $752($2, [0], [-1], [1568], $7) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	*($8 + [24]) = [0]
	*($8 + [16]) = (int_64)0
	*(($8 + [8])) = [0]
	*($8) = (int_64)0
	$4 = CALL strlen([1728])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$10 }
	*($8) = ($4 << [1])
	$7 = ($8 | [1])
	if ( $4 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = (($4 + [16]) & [-16])
	$7 = CALL $737($5)
	*($8) = ($5 | [1])
	*($8 + [8]) = $7
	*($8 + [4]) = $4
	
.LABEL $label$9
	CALL memcpy($7, [1728], $4)
	
.LABEL $label$8
	*(($7 + $4)) = [0]
	CALL _Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_RNS_6vectorIS5_NS3_IS5_EEEE($2, $8, ($8 + [16]))
	if ( ((*($8) & [1]) == 0) ){ goto $label$11 }
	CALL $738(*($8 + [8]))
	
.LABEL $label$11
	$4 = *($8 + [16])
	$2 = (*($8 + [20]) - $4)
	$3 = ((int_32)$2 / (int_32)[12])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$12 }
	$2 = [0]
	$7 = [1]
	
.LOOP $label$13:
	$5 = *($4)
	$6 = ($5 & [1])
	$4 = ($4 + $2)
	CALL $744($0, ( *(($4 + [8])) ? ($4 + [1]) : $6 ), ( *(($4 + [4])) ? uint_32($5 >> [1]) : $6 ))
	if ( ((int_32)$7 >= (int_32)$3) ){ goto $label$12 }
	$2 = ($2 + [12])
	$7 = ($7 + [1])
	$4 = *($8 + [16])
	goto $label$13 
	
.LABEL $label$12
	CALL prints([1904])
	$4 = *($0)
	$2 = ($4 & [1])
	CALL prints_l(( *($0 + [8]) ? ($0 + [1]) : $2 ), ( *($0 + [4]) ? uint_32($4 >> [1]) : $2 ))
	$7 = *($8 + [16])
	if ( ($7 == 0) ){ goto $label$6 }
	$4 = *($8 + [20])
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$15 }
	$2 = ([0] - $7)
	$4 = ($4 + [-12])
	
.LOOP $label$16:
	if ( ((*($4) & [1]) == 0) ){ goto $label$17 }
	CALL $738(*(($4 + [8])))
	
.LABEL $label$17
	$4 = ($4 + [-12])
	if ( ((int_32)($4 + $2) != (int_32)[-12]) ){ goto $label$16 }
	$4 = *($8 + [16])
	goto $label$14 
	
.LABEL $label$15
	$4 = $7
	
.LABEL $label$14
	*($8 + [20]) = $7
	CALL $738($4)
	
.LABEL $label$6
	*([0] + [4]) = ($8 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $739($0)
	
.LABEL $label$1
	CALL $739($8)
	(unreachable)
}

int_32 .FUNC strnlen (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL memchr($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

int_32 .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([40])) + [16]) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[3]), [544])
	CALL memcpy($6, $7, [4])
	CALL eosio_assert(((uint_32)($4 + [-4]) > (uint_32)[7]), [544])
	CALL memcpy(($6 + [8]), ($7 + [4]), [8])
	CALL eosio_assert(((uint_32)($4 + [-12]) > (uint_32)[7]), [544])
	CALL memcpy(($6 + [16]), ($7 + [12]), [8])
	*($6 + [32]) = [-1]
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $66(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $64 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [544])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[16]), [544])
	CALL memcpy(($6 + [16]), ($7 + [16]), [4])
	*($6 + [32]) = [-1]
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $64(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $66 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$2 = ((int_32)(*($0 + [4]) - $6) / (int_32)[12])
	$4 = ($2 + [1])
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[12])
	if ( ((uint_32)$6 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($6 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $737(((int_32)$5 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$6 = ($4 + ((int_32)$2 * (int_32)[12]))
	CALL $767($6, $1)
	$2 = ($4 + ((int_32)$5 * (int_32)[12]))
	$3 = ($6 + [12])
	$5 = *($0)
	$4 = *(($0 + [4]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	$1 = ([0] - $5)
	$5 = ($4 + [-12])
	
.LOOP $label$7:
	*(($6 + [-12])) = *($5)
	$4 = ($5 + [8])
	*(($6 + [-4])) = *($4)
	*($5) = [0]
	*(($5 + [4])) = [0]
	*($4) = [0]
	$6 = ($6 + [-12])
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $5
	
.LABEL $label$5
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$8 }
	$6 = ([0] - $4)
	$5 = ($5 + [-12])
	
.LOOP $label$9:
	if ( ((*($5) & [1]) == 0) ){ goto $label$10 }
	CALL $738(*(($5 + [8])))
	
.LABEL $label$10
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $6) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $738($4)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _Z19join_space_with_numNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEi (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$8 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = ($9 | [1])
	$7 = ($9 + [8])
	$4 = ($1 + [4])
	
.LOOP $label$2:
	$5 = *($1)
	if ( ($5 & [1]) ){ goto $label$4 }
	if ( ($8 <= uint_32($5 >> [1])) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	if ( ((uint_32)$8 >= (uint_32)*($4)) ){ goto $label$1 }
	
.LABEL $label$3
	if ( ($8 == 0) ){ goto $label$5 }
	CALL $745($0, [1664])
	
.LABEL $label$5
	CALL $768($9, $1, $8, $2, $1)
	$5 = *($9)
	$6 = ($5 & [1])
	CALL $744($0, ( *($7) ? $3 : $6 ), ( *($9 + [4]) ? uint_32($5 >> [1]) : $6 ))
	if ( ((*($9) & [1]) == 0) ){ goto $label$6 }
	CALL $738(*($7))
	
.LABEL $label$6
	$8 = ($8 + $2)
	goto $label$2 
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_RNS_6vectorIS5_NS3_IS5_EEEE (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [16])
	*([0] + [4]) = $16
	$8 = *($1)
	$13 = *($1 + [4])
	if ( (( $13 ? uint_32($8 >> [1]) : ($8 & [1]) ) == 0) ){ goto $label$2 }
	$14 = ($2 + [8])
	$15 = ($2 + [4])
	$4 = ($1 + [1])
	$3 = ($0 + [1])
	$5 = [0]
	
.LOOP $label$3:
	$10 = ($11 & [1])
	$11 = *($0)
	$7 = ( *(($0 + [4])) ? uint_32($11 >> [1]) : $10 )
	if ( ($7 <= $5) ){ goto $label$1 }
	$11 = $5
	$12 = ($8 & [1])
	$8 = ( $13 ? uint_32(($8 & [254]) >> [1]) : $12 )
	if ( ($8 == 0) ){ goto $label$4 }
	$13 = ($6 + $5)
	$6 = ( *(($0 + [8])) ? $3 : $10 )
	$9 = ($6 + $7)
	$11 = ($9 - $13)
	if ( ((int_32)$11 < (int_32)$8) ){ goto $label$1 }
	$7 = ( *(($1 + [8])) ? $4 : $12 )
	$10 = *($7)
	
.LOOP $label$5:
	$11 = (($11 - $8) + [1])
	if ( ($11 == 0) ){ goto $label$1 }
	$11 = CALL memchr($13, $10, $11)
	if ( ($11 == 0) ){ goto $label$1 }
	if ( (CALL memcmp($11, $7, $8) == 0) ){ goto $label$6 }
	$13 = ($11 + [1])
	$11 = ($9 - $13)
	if ( ((int_32)$11 >= (int_32)$8) ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$6
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$1 }
	$11 = ($11 - $6)
	
.LABEL $label$4
	if ( ((int_32)$11 == (int_32)[-1]) ){ goto $label$1 }
	CALL $768($16, $0, $5, ($11 - $5), $0)
	$8 = *($15)
	if ( ((uint_32)$8 >= (uint_32)*($14)) ){ goto $label$8 }
	*($8) = *($16)
	$8 = ($16 + [8])
	*(($8 + [8])) = *($8)
	*($8) = [0]
	*($16) = [0]
	*($16 + [4]) = [0]
	*($15) = (*($15) + [12])
	goto $label$7 
	
.LABEL $label$8
	CALL $58($2, $16)
	if ( ((*($16) & [1]) == 0) ){ goto $label$7 }
	CALL $738(*(($16 + [8])))
	
.LABEL $label$7
	$8 = *($1)
	$13 = *(($1 + [4]))
	$5 = (( $13 ? uint_32($8 >> [1]) : ($8 & [1]) ) + $11)
	goto $label$3 
	
.LABEL $label$2
	$14 = ($2 + [8])
	$15 = ($2 + [4])
	$5 = [0]
	
.LABEL $label$1
	CALL $768($16, $0, $5, [-1], $0)
	$8 = *($15)
	if ( ((uint_32)$8 >= (uint_32)*($14)) ){ goto $label$10 }
	*($8) = *($16)
	$8 = ($16 + [8])
	*(($8 + [8])) = *($8)
	*($8) = [0]
	*($16) = [0]
	*($16 + [4]) = [0]
	*($15) = (*($15) + [12])
	goto $label$9 
	
.LABEL $label$10
	CALL $58($2, $16)
	if ( ((*($16) & [1]) == 0) ){ goto $label$9 }
	CALL $738(*($16 + [8]))
	
.LABEL $label$9
	*([0] + [4]) = ($16 + [16])
}

void .FUNC $62 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($6 + [24]) = $1
	CALL $56(($6 + [8]), ($6 + [24]))
	$3 = *($6 + [8])
	$4 = ($3 & [1])
	$2 = ( *($6 + [16]) ? (($6 + [8]) | [1]) : $4 )
	$4 = *($0 + [4])
	$3 = ( *($6 + [12]) ? uint_32($3 >> [1]) : $4 )
	$5 = *($0 + [8])
	if ( ((uint_32)($5 + $3) <= (uint_32)$4) ){ goto $label$2 }
	$5 = (($4 << [1]) + $3)
	*(($0 + [4])) = $5
	$4 = CALL realloc(*($0), $5)
	*($0) = $4
	$5 = *(($0 + [8]))
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0)
	
.LABEL $label$1
	CALL memcpy(($4 + $5), $2, $3)
	*(($0 = ($0 + [8]))) = (*($0) + $3)
	if ( ((*($6 + [8]) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*((($6 + [8]) + [8])))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $337 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [8])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $6
	CALL $738($6)
	
.LABEL $label$11
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $738($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $780 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_64 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	$39 = (*([0] + [4]) - [8128])
	*([0] + [4]) = $39
	$12 = (($39 + [692]) + [11])
	$11 = (($39 + [704]) | [8])
	$10 = (($39 + [704]) | [9])
	$9 = ($39 + [7664])
	$8 = ([-2] - ($39 + [704]))
	$7 = (($39 + [692]) + [12])
	$6 = (($39 + [352]) + [54])
	$5 = (($39 + [352]) + [55])
	$30 = [0]
	$38 = [0]
	$32 = [0]
	
.LOOP $label$17:
	$38 = ($30 + $38)
	$37 = $1
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$16 }
	$1 = $37
	$30 = ($30 & [255])
	if ( ($30 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	if ( ((int_32)$30 == (int_32)[37]) ){ goto $label$19 }
	$1 = ($1 + [1])
	$30 = (*($1) & [255])
	if ( $30 ){ goto $label$21 }
	
.LABEL $label$20
	$30 = $1
	goto $label$18 
	
.LABEL $label$19
	$30 = $1
	
.LOOP $label$22:
	if ( ((int_32)*(($1 + [1])) != (int_32)[37]) ){ goto $label$18 }
	$30 = ($30 + [1])
	$1 = ($1 + [2])
	if ( ((int_32)*($1) == (int_32)[37]) ){ goto $label$22 }
	
.LABEL $label$18
	$13 = ([2147483647] - $38)
	$30 = ($30 - $37)
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	if ( ($0 == 0) ){ goto $label$23 }
	if ( (*($0) & [32]) ){ goto $label$23 }
	CALL __fwritex($37, $30, $0)
	
.LABEL $label$23
	if ( $30 ){ goto $label$24 }
	$36 = ($1 + [1])
	$27 = [-1]
	$30 = *($1 + [1])
	$17 = ($30 + [-48])
	if ( ((uint_32)$17 > (uint_32)[9]) ){ goto $label$25 }
	$1 = ((int_32)*($1 + [2]) == (int_32)[36])
	$36 = ( ($1 + [3]) ? $36 : $1 )
	$30 = *($36)
	$27 = ( $17 ? [-1] : $1 )
	$32 = ( [1] ? $32 : $1 )
	
.LABEL $label$25
	$14 = [0]
	$1 = (int_32(($30 << [24]) >> [24]) + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$26 }
	$14 = [0]
	
.LOOP $label$27:
	if ( ((([1] << $1) & [75913]) == 0) ){ goto $label$26 }
	$14 = (([1] << (int_32(($30 << [24]) >> [24]) + [-32])) | $14)
	$36 = ($36 + [1])
	$30 = *($36)
	$1 = ($30 + [-32])
	if ( ($1 <= [32]) ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)($30 & [255]) != (int_32)[42]) ){ goto $label$33 }
	$1 = (*($36 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$32 }
	if ( ((int_32)*($36 + [2]) != (int_32)[36]) ){ goto $label$32 }
	*(($4 + ($1 << [2]))) = [10]
	$17 = ($36 + [3])
	$32 = [1]
	$15 = *((($3 + (*(($36 + [1])) << [4])) + [-768]))
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	goto $label$31 
	
.LABEL $label$33
	$15 = [0]
	$30 = (int_32(($30 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$30 > (uint_32)[9]) ){ goto $label$30 }
	$1 = [0]
	$17 = $36
	
.LOOP $label$34:
	$15 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$35 }
	$1 = ((int_32)$1 * (int_32)[10])
	$15 = ( [-1] ? ($1 + $30) : ((int_32)$30 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$35
	$1 = $15
	$17 = ($17 + [1])
	$30 = (*($17) + [-48])
	if ( ($30 <= [10]) ){ goto $label$34 }
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$28 }
	goto $label$15 
	
.LABEL $label$32
	if ( $32 ){ goto $label$3 }
	$17 = ($36 + [1])
	if ( ($0 == 0) ){ goto $label$29 }
	$1 = *($2)
	*($2) = ($1 + [4])
	$32 = [0]
	$15 = *($1)
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	
.LABEL $label$31
	$15 = ([0] - $15)
	$14 = ($14 | [8192])
	goto $label$28 
	
.LABEL $label$30
	$17 = $36
	goto $label$28 
	
.LABEL $label$29
	$32 = [0]
	$15 = [0]
	
.LABEL $label$28
	$30 = [0]
	$36 = [-1]
	if ( ((int_32)*($17) != (int_32)[46]) ){ goto $label$42 }
	$36 = *($17 + [1])
	if ( ((int_32)$36 != (int_32)[42]) ){ goto $label$41 }
	$1 = (*($17 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$40 }
	if ( ((int_32)*($17 + [3]) != (int_32)[36]) ){ goto $label$40 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($17 + [4])
	$36 = *((($3 + (*(($17 + [2])) << [4])) + [-768]))
	goto $label$37 
	
.LABEL $label$42
	$1 = $17
	$16 = [0]
	goto $label$36 
	
.LABEL $label$41
	$1 = ($17 + [1])
	$31 = ($36 + [-48])
	if ( ((uint_32)$31 > (uint_32)[9]) ){ goto $label$39 }
	$17 = [0]
	
.LOOP $label$43:
	$36 = [-1]
	if ( ((uint_32)$17 > (uint_32)[214748364]) ){ goto $label$44 }
	$17 = ((int_32)$17 * (int_32)[10])
	$36 = ( [-1] ? ($17 + $31) : ((int_32)$31 > (int_32)([2147483647] - $17)) )
	
.LABEL $label$44
	$16 = [1]
	$17 = $36
	$1 = ($1 + [1])
	$31 = (*($1) + [-48])
	if ( ($31 <= [10]) ){ goto $label$43 }
	goto $label$36 
	
.LABEL $label$40
	if ( $32 ){ goto $label$3 }
	$1 = ($17 + [2])
	if ( ($0 == 0) ){ goto $label$38 }
	$17 = *($2)
	*($2) = ($17 + [4])
	$36 = *($17)
	goto $label$37 
	
.LABEL $label$39
	$16 = [1]
	$36 = [0]
	goto $label$36 
	
.LABEL $label$38
	$36 = [0]
	
.LABEL $label$37
	$16 = ((int_32)uint_32($36 >> [31]) ^ (int_32)[1])
	
.LABEL $label$36
	
.LOOP $label$45:
	$17 = $30
	$30 = (*($1) + [-65])
	if ( ((uint_32)$30 > (uint_32)[57]) ){ goto $label$3 }
	$1 = ($1 + [1])
	$30 = *(((((int_32)$17 * (int_32)[58]) + $30) + [20544]))
	if ( (($30 + [-1]) <= [8]) ){ goto $label$45 }
	if ( ($30 == 0) ){ goto $label$3 }
	if ( ((int_32)$30 != (int_32)[27]) ){ goto $label$49 }
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$48 }
	goto $label$3 
	
.LABEL $label$49
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$47 }
	*(($4 + ($27 << [2]))) = $30
	$30 = ($3 + ($27 << [4]))
	*($39 + [428]) = *(($30 + [12]))
	*($39 + [424]) = *(($30 + [8]))
	*($39 + [420]) = *(($30 + [4]))
	*($39 + [416]) = *($30)
	
.LABEL $label$48
	if ( $0 ){ goto $label$46 }
	$30 = [0]
	goto $label$24 
	
.LABEL $label$47
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $784(($39 + [416]), $30, $2)
	
.LABEL $label$46
	$31 = ($14 & [-65537])
	$18 = ( $31 ? $14 : ($14 & [8192]) )
	$26 = [0]
	$24 = [21024]
	$30 = *(($1 + [-1]))
	$29 = ( ( ($30 & [-33]) ? $30 : ((int_32)($30 & [15]) == (int_32)[3]) ) ? $30 : $17 )
	$30 = ($29 + [-65])
	if ( ((uint_32)$30 > (uint_32)[55]) ){ goto $label$80 }
	$14 = $5
	goto $label$111 
	
.LABEL $label$111
	if ( ((int_32)$36 > (int_32)[-1]) ){ goto $label$112 }
	if ( $16 ){ goto $label$15 }
	
.LABEL $label$112
	$35 = *($39 + [424])
	$23 = *($39 + [416])
	*($39 + [748]) = [0]
	if ( (CALL __signbitl($23, $35) == 0) ){ goto $label$113 }
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	$20 = [1]
	$19 = [21056]
	goto $label$108 
	
.LABEL $label$113
	if ( ($18 & [2048]) ){ goto $label$109 }
	$20 = ($18 & [1])
	$19 = ( [21062] ? [21057] : $20 )
	goto $label$108 
	
.LABEL $label$110
	$35 = *($39 + [416])
	if ( ((int_64)$35 <= (int_64)-1) ){ goto $label$92 }
	if ( ($18 & [2048]) ){ goto $label$88 }
	$26 = ($18 & [1])
	$24 = ( [21026] ? [21024] : $26 )
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$109
	$20 = [1]
	$19 = [21059]
	
.LABEL $label$108
	if ( ((int_32)CALL __fpclassifyl($23, $35) <= (int_32)[1]) ){ goto $label$115 }
	CALL frexpl(($39 + [320]), $23, $35, ($39 + [748]))
	$23 = *($39 + [328])
	$35 = *($39 + [320])
	CALL __addtf3(($39 + [304]), $35, $23, $35, $23)
	$23 = *((($39 + [304]) + [8]))
	$35 = *($39 + [304])
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$116 }
	*($39 + [748]) = (*($39 + [748]) + [-1])
	
.LABEL $label$116
	$21 = ($29 | [32])
	if ( ((int_32)$21 != (int_32)[97]) ){ goto $label$114 }
	$37 = ($29 & [32])
	$24 = ( ($19 + [9]) ? $19 : $37 )
	if ( ((uint_32)$36 > (uint_32)[26]) ){ goto $label$77 }
	if ( (([27] - $36) == 0) ){ goto $label$77 }
	$30 = ($36 + [-27])
	$34 = (int_64)4612248968380809216
	$33 = (int_64)0
	
.LOOP $label$117:
	CALL __multf3(($39 + [208]), $33, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($39 + [208]) + [8]))
	$33 = *($39 + [208])
	$30 = ($30 + [1])
	if ( $30 ){ goto $label$117 }
	if ( ((int_32)*($24) != (int_32)[45]) ){ goto $label$78 }
	CALL __subtf3(($39 + [160]), $35, ((int_64)$23 ^ (int_64)-9223372036854775808), $33, $34)
	CALL __addtf3(($39 + [144]), $33, $34, *($39 + [160]), *((($39 + [160]) + [8])))
	$23 = ((int_64)*((($39 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$35 = *($39 + [144])
	goto $label$77 
	
.LABEL $label$115
	$16 = CALL __unordtf2($23, $35, $23, $35)
	$37 = ($20 + [3])
	if ( ($18 & [8192]) ){ goto $label$93 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$93 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$95 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$118:
	if ( (($30 & [1]) == 0) ){ goto $label$119 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$119
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$118 }
	if ( $14 ){ goto $label$93 }
	$31 = ($31 & [255])
	goto $label$94 
	
.LABEL $label$114
	$30 = ((int_32)$36 < (int_32)[0])
	if ( (CALL __netf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$90 }
	CALL __multf3(($39 + [288]), $35, $23, (int_64)0, (int_64)4619285842798575616)
	$31 = (*($39 + [748]) + [-28])
	*($39 + [748]) = $31
	$23 = *((($39 + [288]) + [8]))
	$35 = *($39 + [288])
	goto $label$89 
	
.LABEL $label$107
	$35 = *($39 + [416])
	*((($39 + [344]) + [4])) = [0]
	*($39 + [344]) = $35
	*($39 + [416]) = ($39 + [344])
	$36 = [-1]
	$37 = ($39 + [344])
	goto $label$105 
	
.LABEL $label$106
	$37 = *($39 + [416])
	if ( ($36 == 0) ){ goto $label$74 }
	
.LABEL $label$105
	$30 = [0]
	$14 = $37
	$17 = [0]
	
.LOOP $label$121:
	$31 = *($14)
	if ( ($31 == 0) ){ goto $label$120 }
	$17 = CALL wctomb(($39 + [340]), $31)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$120 }
	if ( ((uint_32)$17 > (uint_32)($36 - $30)) ){ goto $label$120 }
	$14 = ($14 + [4])
	$30 = ($17 + $30)
	if ( ((uint_32)$36 > (uint_32)$30) ){ goto $label$121 }
	
.LABEL $label$120
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$104
	*((($39 + [352]) + [54])) = *($39 + [416])
	$36 = [1]
	$37 = $6
	$14 = $5
	$18 = $31
	goto $label$79 
	
.LABEL $label$103
	$37 = CALL strerror(*(CALL $771()))
	goto $label$97 
	
.LABEL $label$102
	$30 = ($17 & [255])
	if ( ((uint_32)$30 > (uint_32)[7]) ){ goto $label$56 }
	goto $label$122 
	
.LABEL $label$122
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$101
	$37 = $5
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$123 }
	$37 = $5
	
.LOOP $label$124:
	*(($37 = ($37 + [-1]))) = ((int_64)((int_64)$35 & (int_64)7) | (int_64)48)
	$35 = (uint_64)$35 >> (uint_64)(int_64)3
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$124 }
	
.LABEL $label$123
	if ( ($18 & [8]) ){ goto $label$84 }
	$26 = [0]
	$24 = [21024]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$100
	$36 = ( $36 ? [8] : ((uint_32)$36 > (uint_32)[8]) )
	$18 = ($18 | [8])
	$29 = [120]
	
.LABEL $label$99
	$26 = [0]
	$24 = [21024]
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$125 }
	$30 = ($29 & [32])
	$37 = $5
	
.LOOP $label$126:
	*(($37 = ($37 + [-1]))) = (*((((CASTING uint_32)(uint_64 $35) & [15]) + [21008])) | $30)
	$35 = (uint_64)$35 >> (uint_64)(int_64)4
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$126 }
	if ( (($18 & [8]) == 0) ){ goto $label$83 }
	if ( (int_64)(*($39 + [416]) == 0) ){ goto $label$83 }
	$24 = (int_32($29 >> [4]) + [21024])
	$26 = [2]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$125
	$37 = $5
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$98
	$30 = *($39 + [416])
	$37 = ( $30 ? [21040] : $30 )
	
.LABEL $label$97
	$26 = [0]
	$30 = CALL strnlen($37, ( [2147483647] ? $36 : ((int_32)$36 < (int_32)[0]) ))
	$14 = ($37 + $30)
	if ( ((int_32)$36 <= (int_32)[-1]) ){ goto $label$91 }
	$18 = $31
	$36 = $30
	goto $label$79 
	
.LABEL $label$96
	$26 = [0]
	$24 = [21024]
	$35 = *($39 + [416])
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$95
	if ( $17 ){ goto $label$93 }
	
.LABEL $label$94
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$93
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$127 }
	CALL __fwritex($19, $20, $0)
	$30 = *($0)
	
.LABEL $label$127
	if ( ($30 & [32]) ){ goto $label$128 }
	$30 = uint_32(($29 & [32]) >> [5])
	CALL __fwritex(( ( [21120] ? [21136] : $30 ) ? ( [21088] ? [21104] : $30 ) : $16 ), [3], $0)
	
.LABEL $label$128
	if ( ((int_32)($18 & [73728]) != (int_32)[8192]) ){ goto $label$129 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$129 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$131 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$132:
	if ( (($30 & [1]) == 0) ){ goto $label$133 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$133
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$132 }
	if ( $14 ){ goto $label$129 }
	$31 = ($31 & [255])
	goto $label$130 
	
.LABEL $label$131
	if ( $17 ){ goto $label$129 }
	
.LABEL $label$130
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$129
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$92
	$35 = (int_64)
	*($39 + [416]) = $35((int_64)0 - $35))
	$26 = [1]
	$24 = [21024]
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$91
	$18 = $31
	$36 = $30
	if ( (*($14) == 0) ){ goto $label$79 }
	goto $label$15 
	
.LABEL $label$90
	$31 = *($39 + [748])
	
.LABEL $label$89
	$28 = ( [6] ? $36 : $30 )
	$22 = ( ($39 + [752]) ? $9 : ((int_32)$31 < (int_32)[0]) )
	$36 = $22
	
.LOOP $label$134:
	$30 = CALL __fixunstfsi($35, $23)
	CALL __floatunsitf(($39 + [272]), $30)
	CALL __subtf3(($39 + [256]), $35, $23, *($39 + [272]), *((($39 + [272]) + [8])))
	CALL __multf3(($39 + [240]), *($39 + [256]), *((($39 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($36) = $30
	$36 = ($36 + [4])
	$23 = *((($39 + [240]) + [8]))
	$35 = *($39 + [240])
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$134 }
	if ( ((int_32)$31 < (int_32)[1]) ){ goto $label$137 }
	$17 = $22
	
.LOOP $label$138:
	$14 = ( $31 ? [29] : ((int_32)$31 < (int_32)[29]) )
	$30 = ($36 + [-4])
	if ( ($30 <= $17) ){ goto $label$139 }
	$23 = (CASTING uint_64)(uint_32 $14)
	$35 = (int_64)0
	
.LOOP $label$140:
	$35 = ((int_64)((int_64)*($30) << (int_64)$23) + (int_64)((int_64)$35 & (int_64)4294967295))
	*($30) = ((uint_64)$35 % (uint_64)(int_64)1000000000)
	$35 = ((uint_64)$35 / (uint_64)(int_64)1000000000)
	$30 = ($30 + [-4])
	if ( ((uint_32)$30 >= (uint_32)$17) ){ goto $label$140 }
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( ($30 == 0) ){ goto $label$139 }
	*(($17 = ($17 + [-4]))) = $30
	
.LABEL $label$139
	
.LOOP $label$142:
	$30 = $36
	if ( ((uint_32)$30 <= (uint_32)$17) ){ goto $label$141 }
	$36 = ($30 + [-4])
	if ( (*($36) == 0) ){ goto $label$142 }
	
.LABEL $label$141
	$36 = $30
	$31 = ($31 - $14)
	if ( ((int_32)$31 > (int_32)[0]) ){ goto $label$138 }
	*($39 + [748]) = $31
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	goto $label$136 
	
.LABEL $label$137
	$30 = $36
	$17 = $22
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	
.LABEL $label$136
	$24 = (((uint_32)($28 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$21 != (int_32)[102]) ){ goto $label$144 }
	$25 = ($22 + ($24 << [2]))
	
.LOOP $label$145:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$147 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$148:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$148 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$146 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$146 
	
.LABEL $label$147
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$146
	$30 = ( $25 ? $30 : ((int_32)int_32(($30 - $22) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$145 }
	goto $label$143 
	
.LABEL $label$144
	
.LOOP $label$149:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$151 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$152:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$152 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$150 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$150 
	
.LABEL $label$151
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$150
	$30 = ( ($17 + ($24 << [2])) ? $30 : ((int_32)int_32(($30 - $17) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$149 }
	
.LABEL $label$143
	*($39 + [748]) = $31
	
.LABEL $label$135
	$36 = [0]
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$153 }
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$153 }
	$14 = [10]
	
.LOOP $label$154:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$154 }
	
.LABEL $label$153
	$16 = ((int_32)$21 == (int_32)[103])
	$14 = (($28 - ( $36 ? [0] : ((int_32)$21 != (int_32)[102]) )) - (((int_32)$28 != (int_32)[0]) & $16))
	if ( ((int_32)$14 >= (int_32)(((int_32)int_32(($30 - $22) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$155 }
	$37 = ($14 + [147456])
	$24 = ($22 + (((int_32)$37 / (int_32)[9]) << [2]))
	$31 = ($24 + [-65532])
	$14 = [10]
	$37 = ((int_32)$37 % (int_32)[9])
	if ( ((int_32)($37 + [1]) > (int_32)[8]) ){ goto $label$156 }
	$37 = ([8] - $37)
	$14 = [10]
	
.LOOP $label$157:
	$14 = ((int_32)$14 * (int_32)[10])
	$37 = ($37 + [-1])
	if ( $37 ){ goto $label$157 }
	
.LABEL $label$156
	$27 = *($31)
	$37 = ((uint_32)$27 % (uint_32)$14)
	$26 = ($31 + [4])
	if ( ((int_32)$26 != (int_32)$30) ){ goto $label$159 }
	if ( ($37 == 0) ){ goto $label$158 }
	
.LABEL $label$159
	if ( (((uint_32)$27 / (uint_32)$14) & [1]) ){ goto $label$161 }
	$35 = (int_64)4643211215818981376
	$23 = (int_64)0
	if ( ((uint_32)$31 <= (uint_32)$17) ){ goto $label$160 }
	if ( ((int_32)$14 != (int_32)[1000000000]) ){ goto $label$160 }
	if ( ((*(($31 + [-4])) & [1]) == 0) ){ goto $label$160 }
	
.LABEL $label$161
	$35 = (int_64)4643211215818981376
	$23 = (int_64)1
	
.LABEL $label$160
	$34 = (int_64)4611123068473966592
	$25 = ((int_32)$14 / (int_32)[2])
	if ( ($37 <= $25) ){ goto $label$162 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$37 == (int_32)$25) ) ? (int_64)4611545280939032576 : ((int_32)$26 == (int_32)$30) )
	
.LABEL $label$162
	if ( ($20 == 0) ){ goto $label$163 }
	if ( ((int_32)*($19) != (int_32)[45]) ){ goto $label$163 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	
.LABEL $label$163
	CALL __addtf3(($39 + [224]), $23, $35, (int_64)0, $34)
	$37 = ($27 - $37)
	*($31) = $37
	if ( (CALL __eqtf2(*($39 + [224]), *((($39 + [224]) + [8])), $23, $35) == 0) ){ goto $label$158 }
	$36 = ($37 + $14)
	*($31) = $36
	if ( ($36 <= [1000000000]) ){ goto $label$164 }
	$36 = ($24 + [-65536])
	
.LOOP $label$165:
	*(($36 + [4])) = [0]
	if ( ((uint_32)$36 >= (uint_32)$17) ){ goto $label$166 }
	*(($17 = ($17 + [-4]))) = [0]
	
.LABEL $label$166
	$14 = (*($36) + [1])
	*($36) = $14
	$36 = ($36 + [-4])
	if ( ((uint_32)$14 > (uint_32)[999999999]) ){ goto $label$165 }
	$31 = ($36 + [4])
	
.LABEL $label$164
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$158 }
	$14 = [10]
	
.LOOP $label$167:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$167 }
	
.LABEL $label$158
	$14 = ($31 + [4])
	$30 = ( $14 ? $30 : ((uint_32)$30 > (uint_32)$14) )
	
.LABEL $label$155
	$31 = ([0] - $36)
	
.LOOP $label$171:
	$14 = $30
	if ( ((uint_32)$14 <= (uint_32)$17) ){ goto $label$170 }
	$30 = ($14 + [-4])
	if ( (*($30) == 0) ){ goto $label$171 }
	$27 = [1]
	if ( $16 ){ goto $label$169 }
	goto $label$168 
	
.LABEL $label$170
	$27 = [0]
	if ( ($16 == 0) ){ goto $label$168 }
	
.LABEL $label$169
	$30 = (($28 == 0) + $28)
	if ( ((int_32)$30 <= (int_32)$36) ){ goto $label$76 }
	if ( ((int_32)$36 < (int_32)[-4]) ){ goto $label$76 }
	$29 = ($29 + [-1])
	$28 = (($30 + [-1]) - $36)
	$16 = ($18 & [8])
	if ( ($16 == 0) ){ goto $label$75 }
	goto $label$68 
	
.LABEL $label$168
	$16 = ($18 & [8])
	goto $label$68 
	
.LABEL $label$88
	$26 = [1]
	$24 = [21025]
	if ( (uint_64)($35 <= (int_64)4294967296) ){ goto $label$86 }
	
.LABEL $label$87
	$37 = $5
	
.LOOP $label$172:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$172 }
	goto $label$85 
	
.LABEL $label$86
	$23 = $35
	$37 = $5
	
.LABEL $label$85
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$83 }
	
.LOOP $label$173:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $17 ){ goto $label$173 }
	goto $label$83 
	
.LABEL $label$84
	$30 = ($5 - $37)
	$24 = ( [21024] ? [21029] : ((int_32)$36 > (int_32)$30) )
	$26 = ((int_32)$36 <= (int_32)$30)
	
.LABEL $label$83
	if ( ($16 == 0) ){ goto $label$81 }
	
.LABEL $label$82
	if ( ((int_32)$36 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$81
	$18 = ( ($18 & [-65537]) ? $18 : ((int_32)$36 > (int_32)[-1]) )
	$35 = *($39 + [416])
	if ( $36 ){ goto $label$174 }
	if ( ((int_64)($35 == 0) == 0) ){ goto $label$174 }
	$37 = $5
	$14 = $5
	$36 = [0]
	goto $label$79 
	
.LABEL $label$174
	$30 = ((int_64)($35 == 0) + ($5 - $37))
	$36 = ( $36 ? $30 : ((int_32)$36 > (int_32)$30) )
	
.LABEL $label$80
	$14 = $5
	
.LABEL $label$79
	$29 = ($14 - $37)
	$28 = ( $29 ? $36 : ((int_32)$36 < (int_32)$29) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$15 }
	$27 = ($26 + $28)
	$30 = ( $27 ? $15 : ((int_32)$15 < (int_32)$27) )
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$175 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$175 }
	$17 = ($22 <= [256])
	$22 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $22 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$177 }
	$17 = ($14 == 0)
	$14 = $22
	
.LOOP $label$178:
	if ( (($17 & [1]) == 0) ){ goto $label$179 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$179
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$178 }
	if ( $16 ){ goto $label$175 }
	$22 = ($22 & [255])
	goto $label$176 
	
.LABEL $label$177
	if ( $14 ){ goto $label$175 }
	
.LABEL $label$176
	CALL __fwritex(($39 + [432]), $22, $0)
	
.LABEL $label$175
	if ( (*($0) & [32]) ){ goto $label$180 }
	CALL __fwritex($24, $26, $0)
	
.LABEL $label$180
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$181 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$181 }
	$17 = ($26 <= [256])
	$26 = ($30 - $27)
	CALL memset(($39 + [432]), [48], ( $26 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$183 }
	$17 = ($14 == 0)
	$14 = $26
	
.LOOP $label$184:
	if ( (($17 & [1]) == 0) ){ goto $label$185 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$185
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$184 }
	if ( $16 ){ goto $label$181 }
	$26 = ($26 & [255])
	goto $label$182 
	
.LABEL $label$183
	if ( $14 ){ goto $label$181 }
	
.LABEL $label$182
	CALL __fwritex(($39 + [432]), $26, $0)
	
.LABEL $label$181
	if ( ((int_32)$29 >= (int_32)$36) ){ goto $label$186 }
	$17 = ($16 <= [256])
	$16 = ($28 - $29)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$188 }
	$17 = ($36 == 0)
	$36 = $16
	
.LOOP $label$189:
	if ( (($17 & [1]) == 0) ){ goto $label$190 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$190
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$189 }
	if ( $31 ){ goto $label$186 }
	$16 = ($16 & [255])
	goto $label$187 
	
.LABEL $label$188
	if ( $36 ){ goto $label$186 }
	
.LABEL $label$187
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$186
	if ( (*($0) & [32]) ){ goto $label$191 }
	CALL __fwritex($37, $29, $0)
	
.LABEL $label$191
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$24 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$24 }
	$17 = ($37 <= [256])
	$37 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $17 ))
	$36 = *($0)
	$15 = ($36 & [32])
	if ( $17 ){ goto $label$193 }
	$17 = ($15 == 0)
	$15 = $37
	
.LOOP $label$194:
	if ( (($17 & [1]) == 0) ){ goto $label$195 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$195
	$14 = ($36 & [32])
	$17 = ($14 == 0)
	$15 = ($15 + [-256])
	if ( ((uint_32)$15 > (uint_32)[255]) ){ goto $label$194 }
	if ( $14 ){ goto $label$24 }
	$37 = ($37 & [255])
	goto $label$192 
	
.LABEL $label$193
	if ( $15 ){ goto $label$24 }
	
.LABEL $label$192
	CALL __fwritex(($39 + [432]), $37, $0)
	goto $label$24 
	
.LABEL $label$78
	CALL __addtf3(($39 + [192]), $35, $23, $33, $34)
	CALL __subtf3(($39 + [176]), *($39 + [192]), *((($39 + [192]) + [8])), $33, $34)
	$23 = *((($39 + [176]) + [8]))
	$35 = *($39 + [176])
	
.LABEL $label$77
	$30 = int_32($31 >> [31])
	$31 = *($39 + [748])
	$17 = ((int_32)($31 + $30) ^ (int_32)$30)
	$34 = (CASTING int_64)(int_32 $17)
	$30 = [0]
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$198 }
	$17 = (CASTING uint_32)(uint_64 $34)
	if ( $17 ){ goto $label$197 }
	goto $label$196 
	
.LABEL $label$198
	$30 = [0]
	
.LOOP $label$199:
	*(($12 + $30)) = ((int_64)((uint_64)$34 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ($30 + [-1])
	$17 = ((uint_64)$34 > (uint_64)(int_64)42949672959)
	$33 = ((uint_64)$34 / (uint_64)(int_64)10)
	$34 = $33
	if ( $17 ){ goto $label$199 }
	$17 = (CASTING uint_32)(uint_64 $33)
	if ( ($17 == 0) ){ goto $label$196 }
	
.LABEL $label$197
	
.LOOP $label$200:
	*(((($39 + [692]) + $30) + [11])) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$30 = ($30 + [-1])
	$14 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $14 ){ goto $label$200 }
	
.LABEL $label$196
	$17 = ($7 + $30)
	if ( $30 ){ goto $label$201 }
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$201
	$16 = ($20 | [2])
	*(($27 = ($17 + [-2]))) = ($29 + [15])
	*(($17 + [-1])) = ((uint_32($31 >> [30]) & [2]) + [43])
	if ( ($18 & [8]) ){ goto $label$202 }
	if ( ((int_32)$36 < (int_32)[1]) ){ goto $label$71 }
	$30 = ($39 + [704])
	
.LOOP $label$203:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [80]), $17)
	CALL __subtf3(($39 + [64]), $35, $23, *($39 + [80]), *((($39 + [80]) + [8])))
	CALL __multf3(($39 + [48]), *($39 + [64]), *((($39 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [21008])) | $37)
	$23 = *((($39 + [48]) + [8]))
	$35 = *($39 + [48])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$204 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$204
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$203 }
	goto $label$70 
	
.LABEL $label$202
	$30 = ($39 + [704])
	
.LOOP $label$205:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [128]), $17)
	CALL __subtf3(($39 + [112]), $35, $23, *($39 + [128]), *((($39 + [128]) + [8])))
	CALL __multf3(($39 + [96]), *($39 + [112]), *((($39 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [21008])) | $37)
	$23 = *((($39 + [96]) + [8]))
	$35 = *($39 + [96])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$206 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$206
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$205 }
	goto $label$70 
	
.LABEL $label$76
	$28 = ($30 + [-1])
	$29 = ($29 + [-2])
	$16 = ($18 & [8])
	if ( $16 ){ goto $label$68 }
	
.LABEL $label$75
	$30 = [9]
	if ( ($27 == 0) ){ goto $label$207 }
	$16 = *(($14 + [-4]))
	if ( ($16 == 0) ){ goto $label$207 }
	$30 = [0]
	if ( ((uint_32)$16 % (uint_32)[10]) ){ goto $label$207 }
	$37 = [10]
	$30 = [0]
	
.LOOP $label$208:
	$30 = ($30 + [1])
	$37 = ((int_32)$37 * (int_32)[10])
	if ( (((uint_32)$16 % (uint_32)$37) == 0) ){ goto $label$208 }
	
.LABEL $label$207
	$37 = (((int_32)int_32(($14 - $22) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($29 | [32]) != (int_32)[102]) ){ goto $label$69 }
	$16 = [0]
	$30 = ($37 - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	goto $label$68 
	
.LABEL $label$74
	$30 = [0]
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	
.LABEL $label$73
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$72 }
	$17 = ($27 <= [256])
	$27 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $27 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$210 }
	$17 = ($36 == 0)
	$36 = $27
	
.LOOP $label$211:
	if ( (($17 & [1]) == 0) ){ goto $label$212 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$212
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$211 }
	if ( $31 ){ goto $label$72 }
	$27 = ($27 & [255])
	goto $label$209 
	
.LABEL $label$210
	if ( $36 ){ goto $label$72 }
	
.LABEL $label$209
	CALL __fwritex(($39 + [432]), $27, $0)
	
.LABEL $label$72
	if ( ($30 == 0) ){ goto $label$213 }
	$17 = [0]
	
.LOOP $label$214:
	$36 = *($37)
	if ( ($36 == 0) ){ goto $label$213 }
	$36 = CALL wctomb(($39 + [340]), $36)
	$17 = ($36 + $17)
	if ( ((uint_32)$17 > (uint_32)$30) ){ goto $label$213 }
	if ( (*($0) & [32]) ){ goto $label$215 }
	CALL __fwritex(($39 + [340]), $36, $0)
	
.LABEL $label$215
	$37 = ($37 + [4])
	if ( ($17 <= $30) ){ goto $label$214 }
	
.LABEL $label$213
	if ( ((int_32)$16 != (int_32)[8192]) ){ goto $label$216 }
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$216 }
	$17 = ($31 <= [256])
	$31 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$218 }
	$17 = ($36 == 0)
	$36 = $31
	
.LOOP $label$219:
	if ( (($17 & [1]) == 0) ){ goto $label$220 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$220
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$219 }
	if ( $37 ){ goto $label$216 }
	$31 = ($31 & [255])
	goto $label$217 
	
.LABEL $label$218
	if ( $36 ){ goto $label$216 }
	
.LABEL $label$217
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$216
	$30 = ( $15 ? $30 : ((int_32)$15 > (int_32)$30) )
	goto $label$24 
	
.LABEL $label$71
	$17 = ($39 + [704])
	
.LOOP $label$221:
	$14 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [32]), $14)
	CALL __subtf3(($39 + [16]), $35, $23, *($39 + [32]), *((($39 + [32]) + [8])))
	CALL __multf3($39, *($39 + [16]), *((($39 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($30 = $17)) = (*(($14 + [21008])) | $37)
	$23 = *(($39 + [8]))
	$35 = *($39)
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$222 }
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$222 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$222
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$221 }
	
.LABEL $label$70
	$30 = [-1]
	$31 = ($7 - $27)
	if ( ((int_32)(([2147483645] - $16) - $31) < (int_32)$36) ){ goto $label$50 }
	$26 = ($17 - ($39 + [704]))
	$29 = ( ( ($36 + [2]) ? $26 : ((int_32)($8 + $17) < (int_32)$36) ) ? $26 : $36 )
	$37 = (($31 + $16) + $29)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$65 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$65 }
	$30 = ($28 <= [256])
	$28 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$67 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$223:
	if ( (($30 & [1]) == 0) ){ goto $label$224 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$224
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$223 }
	if ( $14 ){ goto $label$65 }
	$28 = ($28 & [255])
	goto $label$66 
	
.LABEL $label$69
	$16 = [0]
	$30 = (($37 + $36) - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	
.LABEL $label$68
	$30 = [-1]
	$24 = ($28 | $16)
	$37 = ((int_32)$24 != (int_32)[0])
	if ( ((int_32)$28 > (int_32)([2147483646] - $37)) ){ goto $label$50 }
	$26 = (($28 + $37) + [1])
	$21 = ((int_32)($29 | [32]) != (int_32)[102])
	if ( $21 ){ goto $label$225 }
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	$36 = ( $36 ? [0] : ((int_32)$36 > (int_32)[0]) )
	goto $label$61 
	
.LABEL $label$225
	$30 = ( $31 ? $36 : ((int_32)$36 < (int_32)[0]) )
	$35 = (CASTING int_64)(int_32 $30)
	if ( ((int_32)$30 <= (int_32)[-1]) ){ goto $label$64 }
	$37 = $7
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( $30 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$67
	if ( $17 ){ goto $label$65 }
	
.LABEL $label$66
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$65
	if ( (*($0) & [32]) ){ goto $label$226 }
	CALL __fwritex($24, $16, $0)
	
.LABEL $label$226
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$227 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$227 }
	$30 = ($16 <= [256])
	$16 = ($15 - $37)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$229 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$230:
	if ( (($30 & [1]) == 0) ){ goto $label$231 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$231
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$230 }
	if ( $14 ){ goto $label$227 }
	$16 = ($16 & [255])
	goto $label$228 
	
.LABEL $label$229
	if ( $17 ){ goto $label$227 }
	
.LABEL $label$228
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$227
	if ( (*($0) & [32]) ){ goto $label$232 }
	CALL __fwritex(($39 + [704]), $26, $0)
	
.LABEL $label$232
	$16 = ($29 - $26)
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$233 }
	$30 = ($16 <= [256])
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$235 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$236:
	if ( (($30 & [1]) == 0) ){ goto $label$237 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$237
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$236 }
	if ( $14 ){ goto $label$233 }
	$16 = ($16 & [255])
	goto $label$234 
	
.LABEL $label$235
	if ( $17 ){ goto $label$233 }
	
.LABEL $label$234
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$233
	if ( (*($0) & [32]) ){ goto $label$238 }
	CALL __fwritex($27, $31, $0)
	
.LABEL $label$238
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$239 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$239 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$241 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$242:
	if ( (($30 & [1]) == 0) ){ goto $label$243 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$243
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$242 }
	if ( $14 ){ goto $label$239 }
	$31 = ($31 & [255])
	goto $label$240 
	
.LABEL $label$241
	if ( $17 ){ goto $label$239 }
	
.LABEL $label$240
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$239
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$64
	$37 = $7
	
.LOOP $label$244:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$244 }
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$62 }
	
.LABEL $label$63
	
.LOOP $label$245:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$31 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $31 ){ goto $label$245 }
	
.LABEL $label$62
	if ( ((int_32)($7 - $37) > (int_32)[1]) ){ goto $label$246 }
	$30 = ($37 + [-1])
	
.LOOP $label$247:
	*($30) = [48]
	$37 = ($7 - $30)
	$31 = ($30 + [-1])
	$30 = $31
	if ( ((int_32)$37 < (int_32)[2]) ){ goto $label$247 }
	$37 = ($31 + [1])
	
.LABEL $label$246
	*(($25 = ($37 + [-2]))) = $29
	$30 = [-1]
	*(($37 + [-1])) = ((uint_32($36 >> [30]) & [2]) + [43])
	$36 = ($7 - $25)
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	
.LABEL $label$61
	$30 = [-1]
	$36 = ($36 + $26)
	if ( ((int_32)$36 > (int_32)((int_32)$20 ^ (int_32)[2147483647])) ){ goto $label$50 }
	$26 = ($36 + $20)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$51 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$51 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$53 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$248:
	if ( (($30 & [1]) == 0) ){ goto $label$249 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$249
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$248 }
	if ( $31 ){ goto $label$51 }
	$29 = ($29 & [255])
	goto $label$52 
	
.LABEL $label$60
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$59
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$58
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$57
	*(*($39 + [416])) = $38
	
.LABEL $label$56
	$30 = [0]
	goto $label$24 
	
.LABEL $label$55
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$54
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$53
	if ( $36 ){ goto $label$51 }
	
.LABEL $label$52
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$51
	if ( (*($0) & [32]) ){ goto $label$250 }
	CALL __fwritex($19, $20, $0)
	
.LABEL $label$250
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$251 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$251 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [48], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$253 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$254:
	if ( (($30 & [1]) == 0) ){ goto $label$255 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$255
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$254 }
	if ( $31 ){ goto $label$251 }
	$29 = ($29 & [255])
	goto $label$252 
	
.LABEL $label$253
	if ( $36 ){ goto $label$251 }
	
.LABEL $label$252
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$251
	if ( $21 ){ goto $label$266 }
	$31 = ( $22 ? $17 : ((uint_32)$17 > (uint_32)$22) )
	$37 = $31
	
.LOOP $label$267:
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$269 }
	$17 = [0]
	
.LOOP $label$270:
	*(($11 + $17)) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ($17 + [-1])
	$36 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $36 ){ goto $label$270 }
	goto $label$268 
	
.LABEL $label$269
	$17 = [0]
	
.LABEL $label$268
	$30 = ($10 + $17)
	if ( ((int_32)$37 == (int_32)$31) ){ goto $label$272 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$271 }
	
.LOOP $label$273:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$273 }
	$30 = ($39 + [704])
	goto $label$271 
	
.LABEL $label$272
	if ( $17 ){ goto $label$271 }
	*(($30 = ($30 + [-1]))) = [48]
	
.LABEL $label$271
	if ( (*($0) & [32]) ){ goto $label$274 }
	CALL __fwritex($30, ($10 - $30), $0)
	
.LABEL $label$274
	$37 = ($37 + [4])
	if ( ((uint_32)$37 <= (uint_32)$22) ){ goto $label$267 }
	if ( ($24 == 0) ){ goto $label$275 }
	if ( (*($0) & [32]) ){ goto $label$275 }
	CALL __fwritex([21152], [1], $0)
	
.LABEL $label$275
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$265 }
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$264 }
	
.LOOP $label$276:
	$30 = $10
	$17 = *($37)
	if ( ($17 == 0) ){ goto $label$278 }
	$30 = $10
	
.LOOP $label$279:
	*(($30 = ($30 + [-1]))) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$36 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $36 ){ goto $label$279 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$277 }
	
.LABEL $label$278
	
.LOOP $label$280:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$280 }
	
.LABEL $label$277
	if ( (*($0) & [32]) ){ goto $label$281 }
	CALL __fwritex($30, ( $28 ? [9] : ((int_32)$28 < (int_32)[9]) ), $0)
	
.LABEL $label$281
	$30 = ($28 + [-9])
	if ( ((int_32)$28 < (int_32)[10]) ){ goto $label$263 }
	$28 = $30
	$37 = ($37 + [4])
	if ( ($37 <= $14) ){ goto $label$276 }
	goto $label$263 
	
.LABEL $label$266
	if ( ((int_32)$28 <= (int_32)[-1]) ){ goto $label$259 }
	$31 = ( $14 ? ($17 + [4]) : $27 )
	if ( ($16 == 0) ){ goto $label$261 }
	$37 = $17
	
.LOOP $label$282:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$284 }
	$36 = [0]
	
.LOOP $label$285:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$285 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$283 }
	
.LABEL $label$284
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$283
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$287 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$286 }
	
.LOOP $label$288:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$288 }
	goto $label$286 
	
.LABEL $label$287
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$289 }
	CALL __fwritex($14, [1], $0)
	$30 = *($0)
	
.LABEL $label$289
	$14 = ($14 + [1])
	if ( ($30 & [32]) ){ goto $label$286 }
	CALL __fwritex([21152], [1], $0)
	
.LABEL $label$286
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$290 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$290
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$282 }
	goto $label$260 
	
.LABEL $label$265
	$30 = $28
	if ( ((int_32)$30 >= (int_32)[1]) ){ goto $label$262 }
	goto $label$258 
	
.LABEL $label$264
	$30 = $28
	
.LABEL $label$263
	if ( ((int_32)$30 < (int_32)[1]) ){ goto $label$258 }
	
.LABEL $label$262
	$17 = ($30 <= [256])
	CALL memset(($39 + [432]), [48], ( $30 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$292 }
	$17 = ($36 == 0)
	$36 = $30
	
.LOOP $label$293:
	if ( (($17 & [1]) == 0) ){ goto $label$294 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$294
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$293 }
	if ( $37 ){ goto $label$258 }
	$30 = ($30 & [255])
	goto $label$291 
	
.LABEL $label$292
	if ( $36 ){ goto $label$258 }
	
.LABEL $label$291
	CALL __fwritex(($39 + [432]), $30, $0)
	if ( ((int_32)$18 == (int_32)[8192]) ){ goto $label$257 }
	goto $label$256 
	
.LABEL $label$261
	$37 = $17
	
.LOOP $label$295:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$297 }
	$36 = [0]
	
.LOOP $label$298:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$298 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$296 }
	
.LABEL $label$297
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$296
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$300 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$299 }
	
.LOOP $label$301:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$301 }
	goto $label$299 
	
.LABEL $label$300
	if ( (*($0) & [32]) ){ goto $label$302 }
	CALL __fwritex($14, [1], $0)
	
.LABEL $label$302
	$14 = ($14 + [1])
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$299 }
	if ( (*($0) & [32]) ){ goto $label$299 }
	CALL __fwritex([21152], [1], $0)
	
.LABEL $label$299
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$303 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$303
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$295 }
	
.LABEL $label$260
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$259 }
	$30 = ($28 <= [256])
	CALL memset(($39 + [432]), [48], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$305 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$306:
	if ( (($30 & [1]) == 0) ){ goto $label$307 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$307
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$306 }
	if ( $14 ){ goto $label$259 }
	$28 = ($28 & [255])
	goto $label$304 
	
.LABEL $label$305
	if ( $17 ){ goto $label$259 }
	
.LABEL $label$304
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$259
	if ( (*($0) & [32]) ){ goto $label$258 }
	CALL __fwritex($25, ($7 - $25), $0)
	
.LABEL $label$258
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$256 }
	
.LABEL $label$257
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$256 }
	$30 = ($37 <= [256])
	$37 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$309 }
	$30 = ($17 == 0)
	$17 = $37
	
.LOOP $label$310:
	if ( (($30 & [1]) == 0) ){ goto $label$311 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$311
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$310 }
	if ( $14 ){ goto $label$256 }
	$37 = ($37 & [255])
	goto $label$308 
	
.LABEL $label$309
	if ( $17 ){ goto $label$256 }
	
.LABEL $label$308
	CALL __fwritex(($39 + [432]), $37, $0)
	
.LABEL $label$256
	$30 = ( $15 ? $26 : ((int_32)$15 > (int_32)$26) )
	
.LABEL $label$50
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$24
	if ( ((int_32)$30 <= (int_32)$13) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( $0 ){ goto $label$1 }
	if ( ($32 == 0) ){ goto $label$14 }
	$30 = [1]
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $784(($3 + [16]), $1, $2)
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $784(($3 + [32]), $1, $2)
	$1 = *($4 + [12])
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $784(($3 + [48]), $1, $2)
	$1 = *($4 + [16])
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $784(($3 + [64]), $1, $2)
	$1 = *($4 + [20])
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $784(($3 + [80]), $1, $2)
	$1 = *($4 + [24])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL $784(($3 + [96]), $1, $2)
	$1 = *($4 + [28])
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $784(($3 + [112]), $1, $2)
	$1 = *($4 + [32])
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $784(($3 + [128]), $1, $2)
	$1 = *($4 + [36])
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $784(($3 + [144]), $1, $2)
	$38 = [1]
	goto $label$1 
	
.LABEL $label$15
	*(CALL __errno_location()) = [75]
	goto $label$2 
	
.LABEL $label$14
	$38 = [0]
	goto $label$1 
	
.LABEL $label$13
	$30 = [2]
	goto $label$4 
	
.LABEL $label$12
	$30 = [3]
	goto $label$4 
	
.LABEL $label$11
	$38 = [0]
	goto $label$1 
	
.LABEL $label$10
	$30 = [4]
	goto $label$4 
	
.LABEL $label$9
	$30 = [5]
	goto $label$4 
	
.LABEL $label$8
	$30 = [6]
	goto $label$4 
	
.LABEL $label$7
	$30 = [7]
	goto $label$4 
	
.LABEL $label$6
	$30 = [8]
	goto $label$4 
	
.LABEL $label$5
	$30 = [9]
	
.LABEL $label$4
	$1 = ($4 + ($30 << [2]))
	
.LOOP $label$312:
	if ( *($1) ){ goto $label$3 }
	$1 = ($1 + [4])
	$38 = [1]
	$30 = ($30 + [1])
	if ( ((uint_32)$30 <= (uint_32)[9]) ){ goto $label$312 }
	goto $label$1 
	
.LABEL $label$3
	*(CALL __errno_location()) = [22]
	
.LABEL $label$2
	$38 = [-1]
	
.LABEL $label$1
	*([0] + [4]) = ($39 + [8128])
	$30
	$30
	return $38
}

void .FUNC _ZN11walexchange12wal_exchange7airdropEyyyN5eosio14extended_assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [224])
	*([0] + [4]) = $14
	*($14 + [208]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($14 + [208]), $1, [1])
	if ( (CALL has_auth(*(($0 + [208]))) == 0) ){ goto $label$4 }
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [5712])
	*(($14 + [200])) = [0]
	*($14 + [176]) = $1
	*($14 + [184]) = (int_64)-1
	*($14 + [192]) = (int_64)0
	$11 = *($0)
	*($14 + [168]) = $11
	$13 = [0]
	$8 = CALL db_find_i64($11, $1, (int_64)-5914951336277429760, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	$13 = CALL $174(($14 + [168]), $8)
	CALL eosio_assert(((int_32)*($13 + [8]) == (int_32)($14 + [168])), [288])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [5760])
	$6 = *($14 + [192])
	if ( ($6 == 0) ){ goto $label$1 }
	$9 = ($14 + [196])
	$13 = *($9)
	if ( ((int_32)$13 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$6:
	$13 = ($13 + [-24])
	$8 = *($13)
	*($13) = [0]
	if ( ($8 == 0) ){ goto $label$7 }
	CALL $738($8)
	
.LABEL $label$7
	if ( ((int_32)$6 != (int_32)$13) ){ goto $label$6 }
	$13 = *(($14 + [192]))
	goto $label$2 
	
.LABEL $label$4
	CALL require_auth($2)
	goto $label$1 
	
.LABEL $label$3
	$13 = $6
	
.LABEL $label$2
	*($9) = $6
	CALL $738($13)
	
.LABEL $label$1
	CALL eosio_assert(CALL $fimport$46($2), [5808])
	$8 = [0]
	$7 = *($4)
	if ( ((uint_64)((int_64)$7 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$8 }
	$11 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8)
	$13 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$8 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$8 = [0]
	
.LABEL $label$8
	CALL eosio_assert($8, [5840])
	CALL eosio_assert(((int_64)$7 > (int_64)0), [5872])
	$13 = *($5)
	if ( ($13 & [1]) ){ goto $label$14 }
	$13 = uint_32($13 >> [1])
	goto $label$13 
	
.LABEL $label$14
	$13 = *($5 + [4])
	
.LABEL $label$13
	CALL eosio_assert(($13 <= [257]), [3264])
	if ( ((int_64)$2 != (int_64)$1) ){ goto $label$16 }
	$12 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($14 + [208]), $2, [1])
	goto $label$15 
	
.LABEL $label$16
	$12 = CALL _ZN11walexchange24contract_account_manager25get_or_create_eos_accountEyh(($14 + [208]), $2, [2])
	
.LABEL $label$15
	*($14 + [160]) = *($0)
	if ( (CALL $333(($14 + [160]), $3) == 0) ){ goto $label$18 }
	$2 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($14 + [208]), $3, [0])
	goto $label$17 
	
.LABEL $label$18
	$2 = CALL _ZN11walexchange24contract_account_manager25get_or_create_eos_accountEyh(($14 + [208]), $3, [5])
	
.LABEL $label$17
	CALL eosio_assert(((int_64)$12 != (int_64)$2), [5920])
	$3 = *($4 + [8])
	*($14 + [144]) = $3
	$11 = *($4 + [16])
	*((($14 + [24]) + [8])) = $3
	*($14 + [152]) = $11
	*((($14 + [24]) + [16])) = $11
	$7 = (int_64)
	*($14 + [136]) = $7((int_64)0 - $7))
	*($14 + [24]) = $7
	$13 = ($0 + [256])
	CALL _ZN11walexchange13asset_manager14adjust_balanceEyyN5eosio14extended_assetEy($13, $12, $1, ($14 + [24]), (int_64)0)
	$12 = *($4 + [16])
	*((($14 + [112]) + [16])) = $12
	$10 = *($4 + [8])
	*((($14 + [112]) + [8])) = $10
	$7 = *($4)
	*(($14 + [16])) = $12
	*(($14 + [8])) = $10
	*($14 + [112]) = $7
	*($14) = $7
	CALL _ZN11walexchange13asset_manager14adjust_balanceEyyN5eosio14extended_assetEy($13, $2, $1, $14, (int_64)0)
	*(($14 + [200])) = [0]
	*($14 + [184]) = (int_64)-1
	*($14 + [192]) = (int_64)0
	$1 = *($0)
	*($14 + [168]) = $1
	*($14 + [176]) = $1
	*($14 + [204]) = [0]
	*($14 + [104]) = ($14 + [168])
	*($14 + [88]) = $11
	*($14 + [80]) = (uint_64)$3 >> (uint_64)(int_64)8)
	CALL $46(($14 + [216]), ($14 + [104]), ($14 + [80]))
	$13 = [0]
	$8 = *($14 + [220])
	if ( ($8 == 0) ){ goto $label$19 }
	$13 = ( $8 ? [0] : (int_64)(((int_64)((int_64)*($14 + [80]) ^ (int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($14 + [88]) ^ (int_64)*(($8 + [16])))) == 0) )
	
.LABEL $label$19
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [1456])
	$4 = *($13)
	*((($14 + [64]) + [8])) = [0]
	*($14 + [64]) = (int_64)0
	$13 = CALL strlen([3920])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$20 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$23 }
	*($14 + [64]) = ($13 << [1])
	$8 = (($14 + [64]) | [1])
	if ( $13 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$6 = (($13 + [16]) & [-16])
	$8 = CALL $737($6)
	*($14 + [64]) = ($6 | [1])
	*($14 + [72]) = $8
	*($14 + [68]) = $13
	
.LABEL $label$22
	CALL memcpy($8, [3920], $13)
	
.LABEL $label$21
	*(($8 + $13)) = [0]
	CALL _ZNSt3__19to_stringEm(($14 + [48]), $4)
	CALL $83($0, $2, ($14 + [64]), ($14 + [48]))
	if ( ((*($14 + [48]) & [1]) == 0) ){ goto $label$24 }
	CALL $738(*($14 + [56]))
	
.LABEL $label$24
	if ( ((*($14 + [64]) & [1]) == 0) ){ goto $label$25 }
	CALL $738(*($14 + [72]))
	
.LABEL $label$25
	$4 = *($14 + [192])
	if ( ($4 == 0) ){ goto $label$26 }
	$0 = ($14 + [196])
	$13 = *($0)
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$28 }
	
.LOOP $label$29:
	$13 = ($13 + [-24])
	$8 = *($13)
	*($13) = [0]
	if ( ($8 == 0) ){ goto $label$30 }
	CALL $738($8)
	
.LABEL $label$30
	if ( ((int_32)$4 != (int_32)$13) ){ goto $label$29 }
	$13 = *(($14 + [192]))
	goto $label$27 
	
.LABEL $label$28
	$13 = $4
	
.LABEL $label$27
	*($0) = $4
	CALL $738($13)
	
.LABEL $label$26
	*([0] + [4]) = ($14 + [224])
	return (unreachable)
	
.LABEL $label$20
	CALL $739(($14 + [64]))
}

void .FUNC $549 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [256])
	*([0] + [4]) = $7
	$2 = CALL memset($0, [0], [69])
	$6 = *($1 + [4])
	if ( ($6 == 0) ){ goto $label$1 }
	$5 = *($1)
	$3 = ($5 + $6)
	
.LOOP $label$2:
	if ( *([0] + [16]) ){ goto $label$3 }
	$1 = [-256]
	
.LOOP $label$4:
	*(($1 + [288])) = [255]
	$1 = ($1 + [1])
	if ( $1 ){ goto $label$4 }
	$1 = [0]
	
.LOOP $label$5:
	*((*(($1 + [9536])) + [32])) = $1
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[59]) ){ goto $label$5 }
	*([0] + [16]) = [1]
	
.LABEL $label$3
	$6 = *((CALL memcpy($7, [32], [256]) + *($5)))
	if ( ((int_32)$6 >= (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9600])
	
.LABEL $label$6
	$1 = [0]
	
.LOOP $label$7:
	$6 = (((int_32)*($4) * (int_32)[58]) + $6)
	*(($4 = ($2 + $1))) = $6
	$6 = int_32($6 >> [8])
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[69]) ){ goto $label$7 }
	if ( ($6 == 0) ){ goto $label$8 }
	CALL eosio_assert([0], [9632])
	
.LABEL $label$8
	$5 = ($5 + [1])
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($2 + [68])
	
.LOOP $label$9:
	$6 = *($0)
	*($0) = *($1)
	*($1) = $6
	$1 = ($1 + [-1])
	$0 = ($0 + [1])
	if ( ($0 <= $1) ){ goto $label$9 }
	*([0] + [4]) = ($7 + [256])
}

int_32 .FUNC $621 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [144])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL memset(($6 + [20]), [0], [36])
	*($6 + [16]) = [0]
	*($6 + [108]) = $1
	*($6 + [104]) = $1
	*($6 + [112]) = ($1 + $3)
	*($6 + [56]) = ($6 + [104])
	*($6 + [64]) = ($6 + [8])
	CALL $714(($6 + [64]), ($6 + [56]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$4 = *($6 + [8])
	CALL memcpy(($6 + [64]), ($6 + [16]), [40])
	CALL memcpy(($6 + [104]), ($6 + [64]), [40])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $4), (int_64 ($6 + [104])), (int_32 $5))
	*([0] + [4]) = ($6 + [144])
	return [1]
}

int_32 .FUNC $622 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($6 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	*($5) = (int_64)0
	*($5 + [36]) = $1
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + $3)
	CALL $101(($5 + [32]), $5)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	CALL $767(($5 + [16]), $5)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL $767(($5 + [32]), ($5 + [16]))
	CALL void $1((int_32 ($5 + [32])), (int_32 $4))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL $738(*($5 + [40]))
	
.LABEL $label$6
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$7 }
	CALL $738(*($5 + [24]))
	
.LABEL $label$7
	if ( ((*($5) & [1]) == 0) ){ goto $label$8 }
	CALL $738(*(($5 + [8])))
	
.LABEL $label$8
	*([0] + [4]) = ($5 + [48])
	return [1]
}

int_32 .FUNC $623 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [2832])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [544])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [544])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [544])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

int_32 .FUNC $624 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = (*([0] + [4]) - [16])
	$7 = $5
	*([0] + [4]) = $5
	$2 = *($1 + [4])
	$6 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	$5 = ($5 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $1)
	
.LABEL $label$1
	*($7) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [544])
	CALL memcpy($7, $5, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [544])
	CALL memcpy(($7 + [8]), ($5 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($7 + [8])
	$3 = *($7)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($1) + $6))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $6))
	*([0] + [4]) = ($7 + [16])
	return [1]
}

int_32 .FUNC $625 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [592])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$6 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($7 + [128]) = [0]
	*($7 + [120]) = (int_64)0
	*($7 + [136]) = (int_64)0
	CALL memset(($7 + [148]), [0], [36])
	*($7 + [144]) = [0]
	$8 = CALL memset(($7 + [184]), [0], [66])
	*($7 + [484]) = $1
	*($7 + [480]) = $1
	*($7 + [488]) = ($1 + $3)
	*($7 + [256]) = ($7 + [480])
	*($7 + [408]) = ($7 + [120])
	CALL $713(($7 + [408]), ($7 + [256]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$5 = *(($7 + [136]))
	$3 = *(($7 + [128]))
	$4 = *($7 + [120])
	CALL memcpy(($7 + [328]), ($7 + [144]), [40])
	CALL memcpy(($7 + [256]), $8, [66])
	CALL memcpy(($7 + [408]), ($7 + [256]), [66])
	CALL memcpy(($7 + [368]), ($7 + [328]), [40])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($1) + $6))
	
.LABEL $label$5
	CALL memcpy(($7 + [552]), ($7 + [368]), [40])
	CALL memcpy(($7 + [480]), ($7 + [408]), [66])
	CALL memcpy(($7 + [80]), ($7 + [552]), [40])
	CALL memcpy(($7 + [14]), ($7 + [480]), [66])
	CALL void $1((int_32 $4), (int_64 $3), (int_32 $5), (int_64 ($7 + [80])), (int_32 ($7 + [14])), (int_32 $6))
	*([0] + [4]) = ($7 + [592])
	return [1]
}

void .FUNC $239 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [60]))
	$7 = *(($1 + [64]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3658914434178940928, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $238 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

int_32 .FUNC _ZN11walexchange24contract_account_manager18exists_eos_accountEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [64])
	*([0] + [4]) = $6
	*($6 + [48]) = $1
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$1 = *($0)
	*($6 + [8]) = $1
	*($6 + [16]) = $1
	*($6 + [44]) = [0]
	*($6) = ($6 + [8])
	CALL $16(($6 + [56]), $6, ($6 + [48]))
	$3 = *($6 + [60])
	if ( ($3 == 0) ){ goto $label$3 }
	$5 = [1]
	$1 = *($6 + [48])
	if ( ((int_64)$1 != (int_64)*($3 + [16])) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$1 = *($6 + [48])
	
.LABEL $label$2
	$5 = ((int_32)CALL _ZN11walexchange24contract_account_manager16get_account_typeEy($0, $1) != (int_32)[6])
	
.LABEL $label$1
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$4 }
	$4 = ($6 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $738($3)
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($6 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $2
	
.LABEL $label$5
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$4
	*([0] + [4]) = ($6 + [64])
	return $5
}

void .FUNC $236 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*($10 + [24]) = (int_64)0
	*($10 + [8]) = *(($2 + [8]))
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx128_lowerbound(*($8), *($8 + [8]), (int_64)-4418693909069692928, $10, ($10 + [24]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [24])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $221($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-4418693909069692928, $5))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [32])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [32])
}

void .FUNC _ZN11walexchange12wal_exchange8rollbackEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [464])
	*([0] + [4]) = $16
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	*($16 + [448]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($16 + [448]), $1, [1])
	*(($16 + [440])) = [0]
	*($16 + [416]) = $1
	*($16 + [424]) = (int_64)-1
	*($16 + [432]) = (int_64)0
	$3 = *($0)
	*($16 + [408]) = $3
	$14 = CALL db_find_i64($3, $1, (int_64)-7122859525593366528, (int_64)-7122859525593366528)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $197(($16 + [408]), $14) + [16]) == (int_32)($16 + [408])), [288])
	goto $label$2 
	
.LABEL $label$3
	*($16 + [376]) = (int_64)0
	*($16 + [368]) = (int_64)0
	CALL $198(($16 + [408]), ($16 + [368]), *($0))
	
.LABEL $label$2
	$14 = [0]
	*((($16 + [368]) + [32])) = [0]
	*($16 + [376]) = $1
	*($16 + [384]) = (int_64)-1
	*($16 + [392]) = (int_64)0
	*($16 + [368]) = *($0)
	*($16 + [404]) = [0]
	*($16 + [360]) = ($16 + [368])
	*($16 + [328]) = (int_64)0
	*($16 + [320]) = $2
	CALL printui128(($16 + [320]))
	*($16 + [328]) = (int_64)0
	*($16 + [320]) = $2
	CALL $236(($16 + [280]), ($16 + [360]), ($16 + [320]))
	$7 = [0]
	$15 = *($16 + [284])
	if ( ($15 == 0) ){ goto $label$4 }
	$7 = ( $15 ? [0] : (int_64)(((int_64)((int_64)*($16 + [320]) ^ (int_64)*($15 + [16])) | (int_64)((int_64)*($16 + [328]) ^ (int_64)*($15 + [8]))) == 0) )
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [5264])
	*((($16 + [320]) + [32])) = [0]
	*($16 + [328]) = $1
	*($16 + [336]) = (int_64)-1
	*($16 + [344]) = (int_64)0
	$3 = *($0)
	*($16 + [320]) = $3
	*((($16 + [280]) + [32])) = [0]
	*($16 + [288]) = $1
	*($16 + [280]) = $3
	*($16 + [296]) = (int_64)-1
	*($16 + [304]) = (int_64)0
	*((($16 + [240]) + [32])) = [0]
	*($16 + [248]) = $1
	*($16 + [240]) = $3
	*($16 + [256]) = (int_64)-1
	*($16 + [264]) = (int_64)0
	*($16 + [276]) = [0]
	*((($16 + [200]) + [32])) = [0]
	*($16 + [208]) = $1
	*($16 + [200]) = $3
	*($16 + [216]) = (int_64)-1
	*($16 + [224]) = (int_64)0
	*($16 + [236]) = [0]
	*((($16 + [160]) + [32])) = [0]
	*($16 + [168]) = $1
	*($16 + [160]) = $3
	*($16 + [176]) = (int_64)-1
	*($16 + [184]) = (int_64)0
	*((($16 + [120]) + [32])) = [0]
	*($16 + [128]) = $1
	*($16 + [120]) = $3
	*($16 + [136]) = (int_64)-1
	*($16 + [144]) = (int_64)0
	*((($16 + [80]) + [32])) = [0]
	*($16 + [88]) = $1
	*($16 + [80]) = $3
	*($16 + [96]) = (int_64)-1
	*($16 + [104]) = (int_64)0
	*($16 + [116]) = [0]
	*((($16 + [40]) + [32])) = [0]
	*($16 + [56]) = (int_64)-1
	*($16 + [64]) = (int_64)0
	$3 = *($0)
	*($16 + [40]) = $3
	*($16 + [48]) = $3
	$15 = CALL db_find_i64($3, $3, (int_64)-4417020450001911808, (int_64)-4417020450001911808)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$5 }
	$14 = CALL $33(($16 + [40]), $15)
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)($16 + [40])), [288])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [672])
	$13 = *($14)
	$14 = CALL db_lowerbound_i64(*($16 + [368]), *((($16 + [368]) + [8])), (int_64)-4418693909069692928, (int_64)0)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$6 }
	$14 = CALL $221(($16 + [368]), $14)
	$10 = (($16 + [320]) + [24])
	$11 = (($16 + [320]) + [28])
	$12 = (($16 + [320]) + [8])
	$8 = ($16 + [32])
	$9 = ($16 + [36])
	
.LOOP $label$8:
	$15 = *($14 + [8])
	if ( $15 ){ goto $label$9 }
	if ( ((int_64)*($14 + [16]) == (int_64)$2) ){ goto $label$7 }
	
.LABEL $label$9
	if ( (($13 & [65535]) == 0) ){ goto $label$10 }
	$15 = ($15 + [-1])
	if ( ((uint_32)$15 > (uint_32)[6]) ){ goto $label$11 }
	goto $label$35 
	
.LABEL $label$35
	$3 = *($14 + [16])
	$4 = *($10)
	$6 = *($11)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$36 }
	$15 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$37:
	if ( ((int_64)*(*($15)) == (int_64)$3) ){ goto $label$36 }
	$6 = $15
	$7 = ($15 + [-24])
	$15 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$37 }
	
.LABEL $label$36
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$28 }
	$15 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($15 + [64]) == (int_32)($16 + [320])), [288])
	if ( $15 ){ goto $label$27 }
	goto $label$11 
	
.LABEL $label$34
	$3 = *($14 + [16])
	$4 = *((($16 + [280]) + [24]))
	$6 = *((($16 + [280]) + [28]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$38 }
	$15 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$39:
	if ( ((int_64)*(*($15)) == (int_64)$3) ){ goto $label$38 }
	$6 = $15
	$7 = ($15 + [-24])
	$15 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$39 }
	
.LABEL $label$38
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$26 }
	$15 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($15 + [40]) == (int_32)($16 + [280])), [288])
	if ( $15 ){ goto $label$25 }
	goto $label$11 
	
.LABEL $label$33
	$3 = *($14 + [16])
	$4 = *((($16 + [240]) + [24]))
	$6 = *((($16 + [240]) + [28]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$40 }
	$15 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$41:
	if ( ((int_64)*(*($15)) == (int_64)$3) ){ goto $label$40 }
	$6 = $15
	$7 = ($15 + [-24])
	$15 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$41 }
	
.LABEL $label$40
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$24 }
	$15 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($15 + [56]) == (int_32)($16 + [240])), [288])
	if ( $15 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$32
	$3 = *($14 + [16])
	$4 = *((($16 + [200]) + [24]))
	$6 = *((($16 + [200]) + [28]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$42 }
	$15 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$43:
	if ( ((int_64)*(*($15)) == (int_64)$3) ){ goto $label$42 }
	$6 = $15
	$7 = ($15 + [-24])
	$15 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$43 }
	
.LABEL $label$42
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$21 }
	$15 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($15 + [56]) == (int_32)($16 + [200])), [288])
	if ( $15 ){ goto $label$20 }
	goto $label$11 
	
.LABEL $label$31
	$3 = *($14 + [16])
	$4 = *((($16 + [160]) + [24]))
	$6 = *((($16 + [160]) + [28]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$44 }
	$15 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$45:
	if ( ((int_64)*(*($15)) == (int_64)$3) ){ goto $label$44 }
	$6 = $15
	$7 = ($15 + [-24])
	$15 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$45 }
	
.LABEL $label$44
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$19 }
	$15 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($15 + [40]) == (int_32)($16 + [160])), [288])
	if ( $15 ){ goto $label$18 }
	goto $label$11 
	
.LABEL $label$30
	$3 = *($14 + [16])
	$4 = *((($16 + [120]) + [24]))
	$6 = *((($16 + [120]) + [28]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$46 }
	$15 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$47:
	if ( ((int_64)*(*($15)) == (int_64)$3) ){ goto $label$46 }
	$6 = $15
	$7 = ($15 + [-24])
	$15 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$47 }
	
.LABEL $label$46
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$17 }
	$15 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($15 + [8]) == (int_32)($16 + [120])), [288])
	if ( $15 ){ goto $label$16 }
	goto $label$11 
	
.LABEL $label$29
	$3 = *($14 + [16])
	$4 = *((($16 + [80]) + [24]))
	$6 = *((($16 + [80]) + [28]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$48 }
	$15 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$49:
	if ( ((int_64)*(*($15)) == (int_64)$3) ){ goto $label$48 }
	$6 = $15
	$7 = ($15 + [-24])
	$15 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$49 }
	
.LABEL $label$48
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$15 }
	$15 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($15 + [24]) == (int_32)($16 + [80])), [288])
	if ( $15 ){ goto $label$14 }
	goto $label$11 
	
.LABEL $label$28
	$15 = CALL db_find_i64(*($16 + [320]), *($12), (int_64)-3660455468297355264, $3)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$11 }
	$15 = CALL $193(($16 + [320]), $15)
	CALL eosio_assert(((int_32)*($15 + [64]) == (int_32)($16 + [320])), [288])
	
.LABEL $label$27
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$7 = CALL db_next_i64(*($15 + [68]), $16)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$50 }
	CALL $193(($16 + [320]), $7)
	
.LABEL $label$50
	CALL $237(($16 + [320]), $15)
	goto $label$11 
	
.LABEL $label$26
	$15 = CALL db_find_i64(*($16 + [280]), *((($16 + [280]) + [8])), (int_64)-3671300493912047616, $3)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$11 }
	$15 = CALL $213(($16 + [280]), $15)
	CALL eosio_assert(((int_32)*($15 + [40]) == (int_32)($16 + [280])), [288])
	
.LABEL $label$25
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$7 = CALL db_next_i64(*($15 + [44]), $16)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$51 }
	CALL $213(($16 + [280]), $7)
	
.LABEL $label$51
	CALL $238(($16 + [280]), $15)
	goto $label$11 
	
.LABEL $label$24
	$15 = CALL db_find_i64(*($16 + [240]), *((($16 + [240]) + [8])), (int_64)-3658914434178940928, $3)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$22 }
	$15 = CALL $230(($16 + [240]), $15)
	CALL eosio_assert(((int_32)*($15 + [56]) == (int_32)($16 + [240])), [288])
	
.LABEL $label$23
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$7 = CALL db_next_i64(*($15 + [60]), $16)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$52 }
	CALL $230(($16 + [240]), $7)
	
.LABEL $label$52
	CALL $239(($16 + [240]), $15)
	
.LABEL $label$22
	*(($16 + [8])) = $1
	*(($16 + [16])) = (int_64)-1
	*(($5 = ($16 + [24]))) = (int_64)0
	*($8) = [0]
	$3 = *($0)
	*($16) = $3
	*($9) = [0]
	$15 = CALL db_find_i64($3, $1, (int_64)-2039333636189044736, *(($14 + [16])))
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$53 }
	$15 = CALL $240($16, $15)
	CALL eosio_assert(((int_32)*($15 + [16]) == (int_32)$16), [288])
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$7 = CALL db_next_i64(*($15 + [20]), ($16 + [456]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$54 }
	CALL $240($16, $7)
	
.LABEL $label$54
	CALL $241($16, $15)
	
.LABEL $label$53
	$6 = *($5)
	if ( ($6 == 0) ){ goto $label$11 }
	$4 = ($16 + [28])
	$15 = *($4)
	if ( ((int_32)$15 == (int_32)$6) ){ goto $label$13 }
	
.LOOP $label$55:
	$15 = ($15 + [-24])
	$7 = *($15)
	*($15) = [0]
	if ( ($7 == 0) ){ goto $label$56 }
	CALL $738($7)
	
.LABEL $label$56
	if ( ((int_32)$6 != (int_32)$15) ){ goto $label$55 }
	$15 = *($5)
	goto $label$12 
	
.LABEL $label$21
	$15 = CALL db_find_i64(*($16 + [200]), *((($16 + [200]) + [8])), (int_64)-3660983113619603456, $3)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$11 }
	$15 = CALL $226(($16 + [200]), $15)
	CALL eosio_assert(((int_32)*($15 + [56]) == (int_32)($16 + [200])), [288])
	
.LABEL $label$20
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$7 = CALL db_next_i64(*($15 + [60]), $16)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$57 }
	CALL $226(($16 + [200]), $7)
	
.LABEL $label$57
	CALL $242(($16 + [200]), $15)
	goto $label$11 
	
.LABEL $label$19
	$15 = CALL db_find_i64(*($16 + [160]), *((($16 + [160]) + [8])), (int_64)-3661804062627594240, $3)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$11 }
	$15 = CALL $214(($16 + [160]), $15)
	CALL eosio_assert(((int_32)*($15 + [40]) == (int_32)($16 + [160])), [288])
	
.LABEL $label$18
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$7 = CALL db_next_i64(*($15 + [44]), $16)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$58 }
	CALL $214(($16 + [160]), $7)
	
.LABEL $label$58
	CALL $243(($16 + [160]), $15)
	goto $label$11 
	
.LABEL $label$17
	$15 = CALL db_find_i64(*($16 + [120]), *((($16 + [120]) + [8])), (int_64)-3661136964716855296, $3)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$11 }
	$15 = CALL $215(($16 + [120]), $15)
	CALL eosio_assert(((int_32)*($15 + [8]) == (int_32)($16 + [120])), [288])
	
.LABEL $label$16
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$7 = CALL db_next_i64(*($15 + [12]), $16)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$59 }
	CALL $215(($16 + [120]), $7)
	
.LABEL $label$59
	CALL $244(($16 + [120]), $15)
	goto $label$11 
	
.LABEL $label$15
	$15 = CALL db_find_i64(*($16 + [80]), *((($16 + [80]) + [8])), (int_64)-3670317554737348608, $3)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$11 }
	$15 = CALL $229(($16 + [80]), $15)
	CALL eosio_assert(((int_32)*($15 + [24]) == (int_32)($16 + [80])), [288])
	
.LABEL $label$14
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$7 = CALL db_next_i64(*($15 + [28]), $16)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$60 }
	CALL $229(($16 + [80]), $7)
	
.LABEL $label$60
	CALL $245(($16 + [80]), $15)
	goto $label$11 
	
.LABEL $label$13
	$15 = $6
	
.LABEL $label$12
	*($4) = $6
	CALL $738($15)
	
.LABEL $label$11
	$15 = [0]
	$7 = ((int_32)$14 != (int_32)[0])
	CALL eosio_assert($7, [736])
	CALL eosio_assert($7, [784])
	$7 = CALL db_next_i64(*($14 + [28]), $16)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$61 }
	$15 = CALL $221(($16 + [368]), $7)
	
.LABEL $label$61
	$13 = ($13 + [-1])
	CALL $246(($16 + [368]), $14)
	$14 = $15
	if ( $15 ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$10
	if ( $15 ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$15 = CALL db_next_i64(*($14 + [28]), $16)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$62 }
	CALL $221(($16 + [368]), $15)
	
.LABEL $label$62
	CALL $246(($16 + [368]), $14)
	
.LABEL $label$6
	$7 = *($16 + [64])
	if ( ($7 == 0) ){ goto $label$63 }
	$13 = ($16 + [68])
	$14 = *($13)
	if ( ((int_32)$14 == (int_32)$7) ){ goto $label$65 }
	
.LOOP $label$66:
	$14 = ($14 + [-24])
	$15 = *($14)
	*($14) = [0]
	if ( ($15 == 0) ){ goto $label$67 }
	CALL $738($15)
	
.LABEL $label$67
	if ( ((int_32)$7 != (int_32)$14) ){ goto $label$66 }
	$14 = *(($16 + [64]))
	goto $label$64 
	
.LABEL $label$65
	$14 = $7
	
.LABEL $label$64
	*($13) = $7
	CALL $738($14)
	
.LABEL $label$63
	$7 = *($16 + [104])
	if ( ($7 == 0) ){ goto $label$68 }
	$13 = ($16 + [108])
	$14 = *($13)
	if ( ((int_32)$14 == (int_32)$7) ){ goto $label$70 }
	
.LOOP $label$71:
	$14 = ($14 + [-24])
	$15 = *($14)
	*($14) = [0]
	if ( ($15 == 0) ){ goto $label$72 }
	CALL $738($15)
	
.LABEL $label$72
	if ( ((int_32)$7 != (int_32)$14) ){ goto $label$71 }
	$14 = *(($16 + [104]))
	goto $label$69 
	
.LABEL $label$70
	$14 = $7
	
.LABEL $label$69
	*($13) = $7
	CALL $738($14)
	
.LABEL $label$68
	$7 = *($16 + [144])
	if ( ($7 == 0) ){ goto $label$73 }
	$13 = ($16 + [148])
	$14 = *($13)
	if ( ((int_32)$14 == (int_32)$7) ){ goto $label$75 }
	
.LOOP $label$76:
	$14 = ($14 + [-24])
	$15 = *($14)
	*($14) = [0]
	if ( ($15 == 0) ){ goto $label$77 }
	CALL $738($15)
	
.LABEL $label$77
	if ( ((int_32)$7 != (int_32)$14) ){ goto $label$76 }
	$14 = *(($16 + [144]))
	goto $label$74 
	
.LABEL $label$75
	$14 = $7
	
.LABEL $label$74
	*($13) = $7
	CALL $738($14)
	
.LABEL $label$73
	$7 = *($16 + [184])
	if ( ($7 == 0) ){ goto $label$78 }
	$13 = ($16 + [188])
	$14 = *($13)
	if ( ((int_32)$14 == (int_32)$7) ){ goto $label$80 }
	
.LOOP $label$81:
	$14 = ($14 + [-24])
	$15 = *($14)
	*($14) = [0]
	if ( ($15 == 0) ){ goto $label$82 }
	if ( ((*($15 + [24]) & [1]) == 0) ){ goto $label$83 }
	CALL $738(*(($15 + [32])))
	
.LABEL $label$83
	CALL $738($15)
	
.LABEL $label$82
	if ( ((int_32)$7 != (int_32)$14) ){ goto $label$81 }
	$14 = *(($16 + [184]))
	goto $label$79 
	
.LABEL $label$80
	$14 = $7
	
.LABEL $label$79
	*($13) = $7
	CALL $738($14)
	
.LABEL $label$78
	$7 = *($16 + [224])
	if ( ($7 == 0) ){ goto $label$84 }
	$13 = ($16 + [228])
	$14 = *($13)
	if ( ((int_32)$14 == (int_32)$7) ){ goto $label$86 }
	
.LOOP $label$87:
	$14 = ($14 + [-24])
	$15 = *($14)
	*($14) = [0]
	if ( ($15 == 0) ){ goto $label$88 }
	CALL $738($15)
	
.LABEL $label$88
	if ( ((int_32)$7 != (int_32)$14) ){ goto $label$87 }
	$14 = *(($16 + [224]))
	goto $label$85 
	
.LABEL $label$86
	$14 = $7
	
.LABEL $label$85
	*($13) = $7
	CALL $738($14)
	
.LABEL $label$84
	$7 = *($16 + [264])
	if ( ($7 == 0) ){ goto $label$89 }
	$13 = ($16 + [268])
	$14 = *($13)
	if ( ((int_32)$14 == (int_32)$7) ){ goto $label$91 }
	
.LOOP $label$92:
	$14 = ($14 + [-24])
	$15 = *($14)
	*($14) = [0]
	if ( ($15 == 0) ){ goto $label$93 }
	CALL $738($15)
	
.LABEL $label$93
	if ( ((int_32)$7 != (int_32)$14) ){ goto $label$92 }
	$14 = *(($16 + [264]))
	goto $label$90 
	
.LABEL $label$91
	$14 = $7
	
.LABEL $label$90
	*($13) = $7
	CALL $738($14)
	
.LABEL $label$89
	$7 = *($16 + [304])
	if ( ($7 == 0) ){ goto $label$94 }
	$13 = ($16 + [308])
	$14 = *($13)
	if ( ((int_32)$14 == (int_32)$7) ){ goto $label$96 }
	
.LOOP $label$97:
	$14 = ($14 + [-24])
	$15 = *($14)
	*($14) = [0]
	if ( ($15 == 0) ){ goto $label$98 }
	CALL $738($15)
	
.LABEL $label$98
	if ( ((int_32)$7 != (int_32)$14) ){ goto $label$97 }
	$14 = *(($16 + [304]))
	goto $label$95 
	
.LABEL $label$96
	$14 = $7
	
.LABEL $label$95
	*($13) = $7
	CALL $738($14)
	
.LABEL $label$94
	$7 = *($16 + [344])
	if ( ($7 == 0) ){ goto $label$99 }
	$13 = ($16 + [348])
	$14 = *($13)
	if ( ((int_32)$14 == (int_32)$7) ){ goto $label$101 }
	
.LOOP $label$102:
	$14 = ($14 + [-24])
	$15 = *($14)
	*($14) = [0]
	if ( ($15 == 0) ){ goto $label$103 }
	CALL $738($15)
	
.LABEL $label$103
	if ( ((int_32)$7 != (int_32)$14) ){ goto $label$102 }
	$14 = *(($16 + [344]))
	goto $label$100 
	
.LABEL $label$101
	$14 = $7
	
.LABEL $label$100
	*($13) = $7
	CALL $738($14)
	
.LABEL $label$99
	$7 = *($16 + [392])
	if ( ($7 == 0) ){ goto $label$104 }
	$13 = ($16 + [396])
	$14 = *($13)
	if ( ((int_32)$14 == (int_32)$7) ){ goto $label$106 }
	
.LOOP $label$107:
	$14 = ($14 + [-24])
	$15 = *($14)
	*($14) = [0]
	if ( ($15 == 0) ){ goto $label$108 }
	CALL $738($15)
	
.LABEL $label$108
	if ( ((int_32)$7 != (int_32)$14) ){ goto $label$107 }
	$14 = *(($16 + [392]))
	goto $label$105 
	
.LABEL $label$106
	$14 = $7
	
.LABEL $label$105
	*($13) = $7
	CALL $738($14)
	
.LABEL $label$104
	$7 = *($16 + [432])
	if ( ($7 == 0) ){ goto $label$109 }
	$13 = ($16 + [436])
	$14 = *($13)
	if ( ((int_32)$14 == (int_32)$7) ){ goto $label$111 }
	
.LOOP $label$112:
	$14 = ($14 + [-24])
	$15 = *($14)
	*($14) = [0]
	if ( ($15 == 0) ){ goto $label$113 }
	CALL $738($15)
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$14) ){ goto $label$112 }
	$14 = *(($16 + [432]))
	goto $label$110 
	
.LABEL $label$111
	$14 = $7
	
.LABEL $label$110
	*($13) = $7
	CALL $738($14)
	
.LABEL $label$109
	*([0] + [4]) = ($16 + [464])
	$15
}

void .FUNC $234 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $233 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [432])
	*(($4 = CALL $737([32])) + [16]) = $1
	$3 = *($3)
	*($4) = *($3)
	*(($4 + [12])) = *(($3 + [12]))
	*(($5 = ($4 + [8]))) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 + [16]), $4, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($7 + [16]) | [8]), $5, [8])
	*($4 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)-7122859525593366528, $2, (int_64)-7122859525593366528, ($7 + [16]), [16])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-7122859525593366528) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)-7122859525593366527
	
.LABEL $label$1
	*($7 + [8]) = $4
	*($7 + [16]) = (int_64)-7122859525593366528
	$5 = *($4 + [20])
	*($7 + [4]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)-7122859525593366528
	*($3 + [16]) = $5
	*($7 + [8]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $234(($1 + [24]), ($7 + [8]), ($7 + [16]), ($7 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($7 + [8])
	*($7 + [8]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $738($4)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC _ZN11walexchange24contract_account_manager22exists_digital_accountEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [64])
	*([0] + [4]) = $6
	*($6 + [48]) = $1
	$5 = [0]
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$1 = *($0)
	*($6 + [8]) = $1
	*($6 + [16]) = $1
	*($6 + [44]) = [0]
	*($6) = ($6 + [8])
	CALL $15(($6 + [56]), $6, ($6 + [48]))
	$0 = *($6 + [60])
	if ( ($0 == 0) ){ goto $label$1 }
	$5 = ((int_64)*($6 + [48]) == (int_64)*($0 + [8]))
	
.LABEL $label$1
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = ($6 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $738($3)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($6 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [64])
	return $5
}

void .FUNC _ZN6abieos14get_base58_mapEv (int_32 $0)
{
	int_32 $1
	if ( *([0] + [16]) ){ goto $label$1 }
	$1 = [-256]
	
.LOOP $label$2:
	*(($1 + [288])) = [255]
	$1 = ($1 + [1])
	if ( $1 ){ goto $label$2 }
	$1 = [0]
	
.LOOP $label$3:
	*((*(($1 + [9536])) + [32])) = $1
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[59]) ){ goto $label$3 }
	*([0] + [16]) = [1]
	
.LABEL $label$1
	CALL memcpy($0, [32], [256])
}

int_32 .FUNC $230 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $737([72])) + [56]) = $0
	CALL $231(($8 + [32]), $6)
	*($6 + [64]) = [-1]
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [60])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $82(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_64 .FUNC _Z16string_to_uint64RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$3 = [1]
	$1 = ($2 & [1])
	$2 = *($0)
	$2 = ( *($0 + [4]) ? uint_32($2 >> [1]) : $1 )
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( *($0 + [8]) ? ($0 + [1]) : $1 )
	
.LOOP $label$3:
	if ( (CALL isdigit(*($3)) == 0) ){ goto $label$2 }
	$3 = ($3 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	$3 = [1]
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1408])
	$3 = *($0)
	if ( (( *(($0 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) ) == 0) ){ goto $label$4 }
	return CALL _ZNSt3__16stoullERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji($0, [0], [10])
	
.LABEL $label$4
	return (int_64)0
}

void .FUNC $115 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$7 = *(($1 + [32]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4508390640157634048, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _ZN11walexchange12wal_exchange10withdrawexEyyyN5eosio14extended_assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [176])
	*([0] + [4]) = $12
	*($12 + [168]) = $3
	CALL require_auth($2)
	CALL eosio_assert(CALL $fimport$46($2), [3168])
	CALL eosio_assert(CALL $fimport$46($3), [3200])
	CALL eosio_assert(((int_64)*($0) != (int_64)$3), [3232])
	$10 = [0]
	$6 = *($4)
	$7 = ((int_64)$6 + (int_64)4611686018427387903)
	if ( ((uint_64)$7 > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$3 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$10 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	
.LABEL $label$1
	CALL eosio_assert($10, [2896])
	CALL eosio_assert(((int_64)$6 > (int_64)0), [2928])
	$11 = *($5)
	if ( ($11 & [1]) ){ goto $label$7 }
	$11 = uint_32($11 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$11 = *($5 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($11 <= [257]), [3264])
	$3 = *($0)
	*($12 + [160]) = $3
	$9 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($12 + [160]), $2, ( ( [3] ? [1] : ((int_64)$3 == (int_64)$2) ) ? [2] : ((int_64)$2 == (int_64)$1) ))
	CALL prints([3296])
	$3 = *($4 + [8])
	*($12 + [144]) = $3
	$2 = *($4 + [16])
	*((($12 + [48]) + [8])) = $3
	*($12 + [152]) = $2
	*((($12 + [48]) + [16])) = $2
	$8 = (int_64)
	*($12 + [136]) = $8((int_64)0 - $6))
	*($12 + [48]) = $8
	$11 = ($0 + [256])
	CALL _ZN11walexchange13asset_manager14adjust_balanceEyyN5eosio14extended_assetEy($11, $9, $1, ($12 + [48]), (int_64)0)
	if ( ((int_64)*($0) == (int_64)$1) ){ goto $label$8 }
	CALL prints([3312])
	*($12 + [120]) = $3
	*((($12 + [24]) + [8])) = $3
	*($12 + [128]) = $2
	*((($12 + [24]) + [16])) = $2
	*($12 + [112]) = $8
	*($12 + [24]) = $8
	CALL _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE($11, $1, ($12 + [24]))
	
.LABEL $label$8
	$10 = ($4 + [16])
	CALL prints([3328])
	*($12 + [96]) = $3
	$1 = *($0)
	*(($12 + [8])) = $3
	*($12 + [104]) = $2
	*(($12 + [16])) = $2
	*($12 + [88]) = $8
	*($12) = $8
	CALL _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE($11, $1, $12)
	*($12 + [80]) = $3
	*($12 + [72]) = $6
	CALL eosio_assert((uint_64)($7 <= (int_64)9223372036854775807), [2768])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$4 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$4 = [0]
	
.LABEL $label$9
	CALL eosio_assert($4, [2832])
	CALL _ZN11walexchange12wal_exchange12out_transferERKyS2_RKN5eosio5assetERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE($0, ($12 + [168]), $10, ($12 + [72]), $5)
	*([0] + [4]) = ($12 + [176])
}

int_32 .FUNC $112 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [12]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4508390629029445632, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $35($0, $5)
	CALL eosio_assert(((int_32)*($6 + [12]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_64 .FUNC _Z15string_to_int64RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$3 = [1]
	$1 = ($2 & [1])
	$2 = *($0)
	$2 = ( *($0 + [4]) ? uint_32($2 >> [1]) : $1 )
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( *($0 + [8]) ? ($0 + [1]) : $1 )
	
.LOOP $label$3:
	if ( (CALL isdigit(*($3)) == 0) ){ goto $label$2 }
	$3 = ($3 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	$3 = [1]
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1408])
	$3 = *($0)
	if ( (( *(($0 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) ) == 0) ){ goto $label$4 }
	return CALL _ZNSt3__15stollERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji($0, [0], [10])
	
.LABEL $label$4
	return (int_64)0
}

void .FUNC $237 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
}

void .FUNC _ZN11walexchange13order_manager22try_clear_order_extendEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [16]) = (int_64)-1
	*($7 + [24]) = [0]
	$4 = *($0)
	*($7) = $4
	$5 = *($0 + [8])
	*($7 + [8]) = $5
	*(($7 + [28])) = [0]
	*(($7 + [32])) = [0]
	*($7 + [36]) = [0]
	$0 = CALL db_find_i64($4, $5, (int_64)-6497942558305103360, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $107($7, $0)
	CALL eosio_assert(((int_32)*($0 + [80]) == (int_32)$7), [288])
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$3 = CALL db_next_i64(*($0 + [84]), ($7 + [40]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	CALL $107($7, $3)
	
.LABEL $label$2
	CALL $117($7, $0)
	
.LABEL $label$1
	$2 = *($7 + [24])
	if ( ($2 == 0) ){ goto $label$3 }
	$6 = ($7 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $738($3)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($7 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($6) = $2
	CALL $738($0)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $414 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN11walexchange13order_manager12clear_ordersEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [160])
	*([0] + [4]) = $10
	*((($10 + [104]) + [32])) = [0]
	*($10 + [120]) = (int_64)-1
	*($10 + [128]) = (int_64)0
	$5 = *($0)
	*($10 + [104]) = $5
	*($10 + [112]) = $5
	$9 = [0]
	$4 = CALL db_find_i64($5, $5, (int_64)-4417020450001911808, (int_64)-4417020450001911808)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $33(($10 + [104]), $4)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)($10 + [104])), [288])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [672])
	$1 = *($9 + [4])
	*($10 + [80]) = (int_64)-1
	*($10 + [88]) = [0]
	$5 = *($0)
	*($10 + [64]) = $5
	$6 = *($0 + [8])
	*($10 + [72]) = $6
	*(($10 + [92])) = [0]
	*((($10 + [64]) + [32])) = [0]
	*($10 + [100]) = [0]
	*($10 + [56]) = ($10 + [64])
	*((($10 + [16]) + [32])) = [0]
	*($10 + [24]) = $6
	*($10 + [16]) = $5
	*($10 + [32]) = (int_64)-1
	*($10 + [40]) = (int_64)0
	*($10 + [144]) = (int_64)0
	CALL $111(($10 + [8]), ($10 + [56]), ($10 + [144]))
	$8 = $1
	$9 = *($10 + [12])
	if ( ($9 == 0) ){ goto $label$2 }
	$3 = (($10 + [144]) | [8])
	$2 = (($10 + [144]) | [4])
	$4 = ($0 + [16])
	$8 = $1
	
.LOOP $label$4:
	if ( (($8 & [65535]) == 0) ){ goto $label$3 }
	
.LOOP $label$5:
	if ( ((int_64)*($9 + [8]) >= (int_64)1) ){ goto $label$2 }
	$9 = *($9 + [16])
	$9 = CALL $112(($10 + [16]), (CASTING uint_64)(uint_32 ($9 - ((uint_32)$9 % (uint_32)*($4)))), [2608])
	if ( *($9 + [8]) ){ goto $label$6 }
	CALL $114(($10 + [8]))
	$9 = *($10 + [12])
	if ( $9 ){ goto $label$5 }
	goto $label$2 
	
.LABEL $label$6
	CALL _ZN11walexchange13order_manager22try_clear_order_extendEy($0, *(*($10 + [12])))
	$5 = *($10 + [8])
	*($10 + [144]) = $5
	$7 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$7) != (int_32)[0]), [736])
	CALL $114(($10 + [144]))
	CALL $115(*($10 + [56]), $7)
	*($10 + [8]) = *($10 + [144])
	CALL eosio_assert(((int_32)*($9 + [12]) == (int_32)($10 + [16])), [848])
	CALL eosio_assert(((int_64)*($10 + [16]) == (int_64)CALL $fimport$16()), [896])
	*($9 + [4]) = (*($9 + [4]) + [-1])
	$5 = *($9)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 + [144]), $9, [4])
	CALL eosio_assert([1], [496])
	CALL memcpy($2, ($9 + [4]), [4])
	*($10 + [159]) = *(($9 + [8]))
	CALL eosio_assert([1], [496])
	CALL memcpy($3, ($10 + [159]), [1])
	CALL db_update_i64(*(($9 + [16])), (int_64)0, ($10 + [144]), [9])
	$7 = (($10 + [16]) + [16])
	if ( (uint_64)($5 <= *($7)) ){ goto $label$7 }
	*($7) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$8 = ($8 + [-1])
	CALL _ZN11walexchange13order_manager16try_clear_bucketEm($0, *($9))
	$9 = *($10 + [12])
	if ( $9 ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$8 = [0]
	
.LABEL $label$2
	CALL eosio_assert(((int_32)($8 & [65535]) != (int_32)($1 & [65535])), [2576])
	$0 = *($10 + [40])
	if ( ($0 == 0) ){ goto $label$8 }
	$8 = ($10 + [44])
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$10 }
	
.LOOP $label$11:
	$9 = ($9 + [-24])
	$4 = *($9)
	*($9) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $738($4)
	
.LABEL $label$12
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$11 }
	$9 = *(($10 + [40]))
	goto $label$9 
	
.LABEL $label$10
	$9 = $0
	
.LABEL $label$9
	*($8) = $0
	CALL $738($9)
	
.LABEL $label$8
	$0 = *($10 + [88])
	if ( ($0 == 0) ){ goto $label$13 }
	$8 = ($10 + [92])
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($9 + [-24])
	$4 = *($9)
	*($9) = [0]
	if ( ($4 == 0) ){ goto $label$17 }
	CALL $738($4)
	
.LABEL $label$17
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$9 = *(($10 + [88]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $0
	
.LABEL $label$14
	*($8) = $0
	CALL $738($9)
	
.LABEL $label$13
	$0 = *($10 + [128])
	if ( ($0 == 0) ){ goto $label$18 }
	$8 = ($10 + [132])
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$20 }
	
.LOOP $label$21:
	$9 = ($9 + [-24])
	$4 = *($9)
	*($9) = [0]
	if ( ($4 == 0) ){ goto $label$22 }
	CALL $738($4)
	
.LABEL $label$22
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$21 }
	$9 = *(($10 + [128]))
	goto $label$19 
	
.LABEL $label$20
	$9 = $0
	
.LABEL $label$19
	*($8) = $0
	CALL $738($9)
	
.LABEL $label$18
	*([0] + [4]) = ($10 + [160])
}

int_32 .FUNC $413 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy($1, *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [4]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [544])
	CALL memcpy(($1 + [10]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [544])
	CALL memcpy(($1 + [12]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [544])
	CALL memcpy(($1 + [56]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [544])
	CALL memcpy(($1 + [58]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

void .FUNC $111 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)4508390640157634048, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $67($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)4508390640157634048, $5))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [32])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $412 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $737([80])) + [64]) = $0
	CALL $413(($8 + [32]), $6)
	*($6 + [68]) = $1
	*($8 + [24]) = $6
	$5 = ((int_64)((int_64)*($6) << (int_64)32) | (int_64)*($6 + [4]))
	*($8 + [16]) = $5
	$7 = *($6 + [68])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $414(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $303 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [36]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4417018949669575792, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $305($0, $5)
	CALL eosio_assert(((int_32)*($6 + [36]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN11walexchange12wal_exchange12clearsettresEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	*($7 + [40]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($7 + [40]), $1, [1])
	*(($7 + [32])) = [0]
	*($7 + [8]) = $1
	*($7 + [16]) = (int_64)-1
	*($7 + [24]) = (int_64)0
	*($7) = *($0)
	*($7 + [36]) = [0]
	CALL $304($7, CALL $303($7, $2, [5680]))
	$3 = *($7 + [24])
	if ( ($3 == 0) ){ goto $label$2 }
	$5 = ($7 + [28])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	$4 = *($0 + [24])
	if ( ($4 == 0) ){ goto $label$7 }
	*(($0 + [28])) = $4
	CALL $738($4)
	
.LABEL $label$7
	$4 = *($0 + [12])
	if ( ($4 == 0) ){ goto $label$8 }
	*(($0 + [16])) = $4
	CALL $738($4)
	
.LABEL $label$8
	CALL $738($0)
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$5 }
	$0 = *(($7 + [24]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $3
	
.LABEL $label$3
	*($5) = $3
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange13settle_relateEyNS_9to_relateE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$4 = *($2 + [24])
	$3 = CALL strlen([5328])
	if ( ((int_32)$3 != (int_32)( *(($2 + [28])) ? uint_32($4 >> [1]) : ($4 & [1]) )) ){ goto $label$1 }
	if ( CALL $752(($2 + [24]), [0], [-1], [5328], $3) ){ goto $label$1 }
	*($5 + [8]) = $1
	*($5) = *($0)
	CALL _ZN11walexchange11rex_manager15add_delegate_toEyy($5, *($2 + [8]), *($2 + [16]))
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $300 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $307 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [656])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = int_32(($3 - $4) >> [3])
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $308($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + ($5 << [3]))
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	
.LOOP $label$6:
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $7) > (uint_32)[7]), [544])
	CALL memcpy($4, *($5), [8])
	$7 = (*($5) + [8])
	*($5) = $7
	$4 = ($4 + [8])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

int_32 .FUNC $411 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$1 }
	$4 = ($0 + [8])
	
.LOOP $label$2:
	$3 = ($2 + [-24])
	*($4) = $3
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$3 }
	if ( ((*($2 + [32]) & [1]) == 0) ){ goto $label$4 }
	CALL $738(*(($2 + [40])))
	
.LABEL $label$4
	if ( ((*($2 + [20]) & [1]) == 0) ){ goto $label$5 }
	CALL $738(*(($2 + [28])))
	
.LABEL $label$5
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$6 }
	CALL $738(*(($2 + [16])))
	
.LABEL $label$6
	CALL $738($2)
	
.LABEL $label$3
	$2 = *($4)
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $738($2)
	
.LABEL $label$7
	return $0
}

int_32 .FUNC $305 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $737([48])) + [12 align=4]) = (int_64)0
	*($6 + [20 align=4]) = (int_64)0
	*($6 + [28 align=4]) = (int_64)0
	*($6 + [36]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [544])
	CALL memcpy($6, $4, [8])
	$3 = ($4 + [8])
	CALL eosio_assert(((uint_32)($7 - $3) > (uint_32)[3]), [544])
	CALL memcpy(($6 + [8]), $3, [4])
	*($8 + [36]) = ($4 + [12])
	CALL $307(CALL $306(($8 + [32]), ($6 + [12])), ($6 + [24]))
	*($6 + [44]) = [-1]
	*($6 + [40]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [40])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $249(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [24])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [28])) = $7
	CALL $738($7)
	
.LABEL $label$10
	$7 = *($4 + [12])
	if ( ($7 == 0) ){ goto $label$11 }
	*(($4 + [16])) = $7
	CALL $738($7)
	
.LABEL $label$11
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $304 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [36]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$4 = ($0 + [28])
	$7 = *($4)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$5 = ([0] - $3)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$8 = ($6 + [-24])
	$6 = $8
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$6 = *($4)
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$4 }
	$3 = ([0] - $6)
	$6 = $8
	
.LOOP $label$5:
	$8 = ($6 + [24])
	$5 = *($8)
	*($8) = [0]
	$7 = *($6)
	*($6) = $5
	if ( ($7 == 0) ){ goto $label$6 }
	$5 = *($7 + [24])
	if ( ($5 == 0) ){ goto $label$7 }
	*(($7 + [28])) = $5
	CALL $738($5)
	
.LABEL $label$7
	$5 = *($7 + [12])
	if ( ($5 == 0) ){ goto $label$8 }
	*(($7 + [16])) = $5
	CALL $738($5)
	
.LABEL $label$8
	CALL $738($7)
	
.LABEL $label$6
	*(($6 + [16])) = *(($6 + [40]))
	*(($6 + [8])) = *(($6 + [32]))
	$6 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$6 = *($7)
	*($7) = [0]
	if ( ($6 == 0) ){ goto $label$10 }
	$5 = *($6 + [24])
	if ( ($5 == 0) ){ goto $label$11 }
	*(($6 + [28])) = $5
	CALL $738($5)
	
.LABEL $label$11
	$5 = *($6 + [12])
	if ( ($5 == 0) ){ goto $label$12 }
	*(($6 + [16])) = $5
	CALL $738($5)
	
.LABEL $label$12
	CALL $738($6)
	
.LABEL $label$10
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [40]))
	$6 = *($1 + [44])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$14 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4417018949669575792, ($9 + [8]), *($1))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$13 }
	
.LABEL $label$14
	CALL db_idx64_remove($6)
	
.LABEL $label$13
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $309 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $737($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $766($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $738($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $410 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	$9 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $9) / (int_32)[24])
	$8 = ($4 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$2 }
	$5 = ($0 + [8])
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[24])
	if ( ((uint_32)$9 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($10 + [24])) = $5
	$5 = [0]
	*($10 + [20]) = [0]
	$7 = ($10 + [20])
	$9 = ($9 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	$5 = $9
	goto $label$4 
	
.LABEL $label$5
	*(($10 + [24])) = $5
	*($10 + [20]) = [0]
	$7 = ($10 + [20])
	$5 = [178956970]
	
.LABEL $label$4
	$8 = CALL $737(((int_32)$5 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	*($10 + [8]) = $8
	$9 = ($8 + ((int_32)$4 * (int_32)[24]))
	*($10 + [12]) = $9
	$5 = ($8 + ((int_32)$5 * (int_32)[24]))
	*($7) = $5
	$8 = *($1)
	*($1) = [0]
	$1 = *($3)
	$6 = *($2)
	*($9) = $8
	*($9 + [8]) = $6
	*($9 + [16]) = $1
	$1 = ($9 + [24])
	*($10 + [16]) = $1
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = ($8 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($9 + [-24])) = $1
	*(($9 + [-8])) = *(($8 + [-8]))
	*(($9 + [-12])) = *(($8 + [-12]))
	*(($9 + [-16])) = *(($8 + [-16]))
	$9 = (*($10 + [12]) + [-24])
	*($10 + [12]) = $9
	$8 = $5
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$7 }
	$8 = *(($0 + [4]))
	$5 = *($7)
	$2 = *($0)
	$1 = *(($10 + [16]))
	
.LABEL $label$6
	*($0) = $9
	*(($0 + [4])) = $1
	*((($10 + [8]) + [8])) = $8
	$9 = ($0 + [8])
	$8 = *($9)
	*($9) = $5
	*($10 + [12]) = $2
	*($7) = $8
	*($10 + [8]) = $2
	CALL $411(($10 + [8]))
	*([0] + [4]) = ($10 + [32])
	(unreachable)
}

void .FUNC _ZN11walexchange12wal_exchange12setsymescrowEyN5eosio11symbol_typeEy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [304])
	*([0] + [4]) = $11
	if ( CALL has_auth(*(($0 + [240]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [200])))
	
.LABEL $label$1
	$5 = [0]
	*(($11 + [280])) = [0]
	*($11 + [264]) = (int_64)-1
	*($11 + [272]) = (int_64)0
	$9 = *($0)
	*($11 + [248]) = $9
	*($11 + [256]) = $9
	if ( ((int_64)$9 != (int_64)$3) ){ goto $label$3 }
	CALL eosio_assert([1], [8240])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL db_find_i64($9, $9, (int_64)6201872786680856576, $3)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $436(($11 + [248]), $4)
	CALL eosio_assert(((int_32)*($5 + [8]) == (int_32)($11 + [248])), [288])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [8240])
	
.LABEL $label$2
	*((($11 + [208]) + [32])) = [0]
	*($11 + [224]) = (int_64)-1
	*($11 + [232]) = (int_64)0
	$9 = *($0)
	*($11 + [208]) = $9
	*($11 + [216]) = $9
	*($11 + [244]) = [0]
	*($11 + [200]) = ($11 + [208])
	*($11 + [24]) = $1
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	*($11 + [16]) = $2)
	CALL $46(($11 + [160]), ($11 + [200]), ($11 + [16]))
	$5 = [0]
	$4 = *($11 + [164])
	if ( ($4 == 0) ){ goto $label$5 }
	$5 = ( $4 ? [0] : (int_64)(((int_64)((int_64)*($11 + [16]) ^ (int_64)(uint_64)*($4 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($11 + [24]) ^ (int_64)*(($4 + [16])))) == 0) )
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [8272])
	*((($11 + [160]) + [32])) = [0]
	*($11 + [176]) = (int_64)-1
	*($11 + [184]) = (int_64)0
	$9 = *($0)
	*($11 + [160]) = $9
	*($11 + [168]) = $9
	*($11 + [196]) = [0]
	$4 = CALL db_find_i64($9, $9, (int_64)-4060986525729035840, *($5))
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$7 }
	$5 = CALL $148(($11 + [160]), $4)
	CALL eosio_assert(((int_32)*($5 + [16]) == (int_32)($11 + [160])), [288])
	CALL eosio_assert(((int_64)*($0) == (int_64)$3), [8336])
	$7 = *($5 + [8])
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$0 = CALL db_next_i64(*($5 + [20]), ($11 + [16]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$8 }
	CALL $148(($11 + [160]), $0)
	
.LABEL $label$8
	CALL $437(($11 + [160]), $5)
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert(((int_64)*($0) != (int_64)$3), [8304])
	$7 = *($0)
	CALL eosio_assert(((int_64)*($11 + [160]) == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([32])) + [16]) = ($11 + [160])
	*($0 + [8]) = $3
	*($0) = *($5)
	CALL eosio_assert([1], [496])
	CALL memcpy(($11 + [16]), $0, [4])
	CALL eosio_assert([1], [496])
	$5 = ($0 + [8])
	CALL memcpy((($11 + [16]) | [4]), $5, [8])
	$9 = *($0)
	$4 = (($11 + [160]) + [8])
	*($0 + [20]) = CALL db_store_i64(*($4), (int_64)-4060986525729035840, $7, $9, ($11 + [16]), [12])
	$6 = ($11 + [176])
	if ( (uint_64)($9 <= *($6)) ){ goto $label$9 }
	*($6) = ((int_64)$9 + (int_64)1)
	
.LABEL $label$9
	$9 = *($0)
	$8 = *($4)
	*($11 + [120]) = *($5)
	*($0 + [24]) = CALL db_idx64_store($8, (int_64)-4060986525729035840, $7, $9, ($11 + [120]))
	*($11 + [120]) = $0
	$9 = *($0)
	*($11 + [16]) = $9
	$4 = *(($0 + [20]))
	*($11 + [80]) = $4
	$6 = ($11 + [188])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*((($11 + [160]) + [32]))) ){ goto $label$11 }
	*($5 + [8]) = $9
	*($5 + [16]) = $4
	*($11 + [120]) = [0]
	*($5) = $0
	*($6) = ($5 + [24])
	goto $label$10 
	
.LABEL $label$11
	CALL $155(($11 + [184]), ($11 + [120]), ($11 + [16]), ($11 + [80]))
	
.LABEL $label$10
	$0 = *($11 + [120])
	*($11 + [120]) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL $738($0)
	
.LABEL $label$6
	*(($11 + [152])) = [0]
	*($11 + [136]) = (int_64)-1
	$9 = (int_64)0
	*($11 + [144]) = (int_64)0
	*($11 + [128]) = $7
	*($11 + [120]) = $1
	$0 = CALL db_find_i64($1, $7, (int_64)3607749779137757184, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$13 }
	$4 = CALL $420(($11 + [120]), $0)
	CALL eosio_assert(((int_32)*($4 + [16]) == (int_32)($11 + [120])), [288])
	$8 = (int_64)59
	$0 = [2144]
	$10 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$19 }
	$5 = *($0)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$5 = ($5 + [165])
	goto $label$17 
	
.LABEL $label$19
	$2 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$15
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$2 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$14 }
	*($11 + [72]) = $10
	*($11 + [64]) = $7
	$9 = (int_64)0
	$8 = (int_64)59
	$0 = [3360]
	$10 = (int_64)0
	
.LOOP $label$20:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$25 }
	$5 = *($0)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$5 = ($5 + [165])
	goto $label$23 
	
.LABEL $label$25
	$2 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$22
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$21
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$2 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$20 }
	*(($11 + [8])) = [0]
	*($11) = (int_64)0
	$0 = CALL strlen([8368])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$28 }
	*($11) = ($0 << [1])
	$5 = ($11 | [1])
	if ( $0 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$6 = (($0 + [16]) & [-16])
	$5 = CALL $737($6)
	*($11) = ($6 | [1])
	*($11 + [8]) = $5
	*($11 + [4]) = $0
	
.LABEL $label$27
	CALL memcpy($5, [8368], $0)
	
.LABEL $label$26
	*(($5 + $0)) = [0]
	*($11 + [24]) = $3
	*($11 + [16]) = $7
	*(($11 + [40])) = *(($4 + [8]))
	*($11 + [32]) = *($4)
	$0 = ($11 + [8])
	*(($11 + [56])) = *($0)
	*($11 + [48]) = *($11)
	*($11) = [0]
	*($11 + [4]) = [0]
	*($0) = [0]
	$0 = CALL $151(($11 + [80]), ($11 + [64]), $1, $10, ($11 + [16]))
	CALL $87(($11 + [288]), $0)
	$5 = *($11 + [288])
	CALL send_inline($5, (*($11 + [292]) - $5))
	$5 = *($11 + [288])
	if ( ($5 == 0) ){ goto $label$29 }
	*($11 + [292]) = $5
	CALL $738($5)
	
.LABEL $label$29
	$5 = *($0 + [28])
	if ( ($5 == 0) ){ goto $label$30 }
	*(($0 + [32])) = $5
	CALL $738($5)
	
.LABEL $label$30
	$5 = *($0 + [16])
	if ( ($5 == 0) ){ goto $label$31 }
	*(($0 + [20])) = $5
	CALL $738($5)
	
.LABEL $label$31
	if ( ((*(($11 + [48])) & [1]) == 0) ){ goto $label$32 }
	CALL $738(*(($11 + [56])))
	
.LABEL $label$32
	if ( ((*($11) & [1]) == 0) ){ goto $label$13 }
	CALL $738(*(($11 + [8])))
	
.LABEL $label$13
	$4 = *($11 + [144])
	if ( ($4 == 0) ){ goto $label$33 }
	$6 = ($11 + [148])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$35 }
	
.LOOP $label$36:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$37 }
	CALL $738($5)
	
.LABEL $label$37
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$36 }
	$0 = *(($11 + [144]))
	goto $label$34 
	
.LABEL $label$35
	$0 = $4
	
.LABEL $label$34
	*($6) = $4
	CALL $738($0)
	
.LABEL $label$33
	$4 = *($11 + [184])
	if ( ($4 == 0) ){ goto $label$38 }
	$6 = ($11 + [188])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$40 }
	
.LOOP $label$41:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$42 }
	CALL $738($5)
	
.LABEL $label$42
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$41 }
	$0 = *(($11 + [184]))
	goto $label$39 
	
.LABEL $label$40
	$0 = $4
	
.LABEL $label$39
	*($6) = $4
	CALL $738($0)
	
.LABEL $label$38
	$4 = *($11 + [232])
	if ( ($4 == 0) ){ goto $label$43 }
	$6 = ($11 + [236])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$45 }
	
.LOOP $label$46:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$47 }
	CALL $738($5)
	
.LABEL $label$47
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$46 }
	$0 = *(($11 + [232]))
	goto $label$44 
	
.LABEL $label$45
	$0 = $4
	
.LABEL $label$44
	*($6) = $4
	CALL $738($0)
	
.LABEL $label$43
	$4 = *($11 + [272])
	if ( ($4 == 0) ){ goto $label$48 }
	$6 = ($11 + [276])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$50 }
	
.LOOP $label$51:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$52 }
	CALL $738($5)
	
.LABEL $label$52
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$51 }
	$0 = *(($11 + [272]))
	goto $label$49 
	
.LABEL $label$50
	$0 = $4
	
.LABEL $label$49
	*($6) = $4
	CALL $738($0)
	
.LABEL $label$48
	*([0] + [4]) = ($11 + [304])
	return (unreachable)
	
.LABEL $label$12
	CALL $739($11)
}

void .FUNC $434 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $437 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$2 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$6 = *($1)
	$3 = ([0] - $2)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(*($8)) == (int_32)$6) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$2), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
	$7 = *(($1 + [24]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4060986525729035840, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $436 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $434(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $431 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $430 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [2768])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [2832])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

void .FUNC _ZN11walexchange12wal_exchange9addescrowEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	CALL eosio_assert(CALL $fimport$46($1), [8208])
	*(($4 = ($7 + [40]))) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($0)
	*($7 + [8]) = $5
	*($7 + [16]) = $5
	CALL eosio_assert(((int_64)$5 == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([24])) + [8]) = ($7 + [8])
	*($0) = $1
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 + [64]), $0, [8])
	$1 = *($0)
	$2 = CALL db_store_i64(*($7 + [16]), (int_64)6201872786680856576, $5, $1, ($7 + [64]), [8])
	*($0 + [12]) = $2
	if ( (uint_64)($1 <= *($7 + [24])) ){ goto $label$1 }
	*(($7 + [24])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($7 + [56]) = $0
	$5 = *($0)
	*($7 + [64]) = $5
	*($7 + [52]) = $2
	$6 = ($7 + [36])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*($4)) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $2
	*($7 + [56]) = [0]
	*($3) = $0
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $434(($7 + [32]), ($7 + [56]), ($7 + [64]), ($7 + [52]))
	
.LABEL $label$2
	$0 = *($7 + [56])
	*($7 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	CALL $738($0)
	
.LABEL $label$4
	$2 = *($7 + [32])
	if ( ($2 == 0) ){ goto $label$5 }
	$4 = ($7 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$9 }
	CALL $738($3)
	
.LABEL $label$9
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($7 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $2
	
.LABEL $label$6
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [80])
}

void .FUNC _ZN11walexchange12wal_exchange5claimEyN5eosio11symbol_typeEy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [352])
	*([0] + [4]) = $14
	if ( CALL has_auth(*(($0 + [240]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [200])))
	
.LABEL $label$1
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [8064]
	$9 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$7 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$7
	$10 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$3
	$6 = ($6 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$2 }
	CALL eosio_assert(((int_64)$9 != (int_64)$3), [8176])
	*((($14 + [304]) + [32])) = [0]
	*($14 + [320]) = (int_64)-1
	*($14 + [328]) = (int_64)0
	$8 = *($0)
	*($14 + [304]) = $8
	*($14 + [312]) = $8
	*($14 + [340]) = [0]
	*($14 + [296]) = ($14 + [304])
	*($14 + [264]) = $3
	$13 = (uint_64)$2 >> (uint_64)(int_64)8
	*($14 + [256]) = $13)
	CALL $46(($14 + [216]), ($14 + [296]), ($14 + [256]))
	$6 = [0]
	$4 = *($14 + [220])
	if ( ($4 == 0) ){ goto $label$8 }
	$6 = ( $4 ? [0] : (int_64)(((int_64)((int_64)*($14 + [256]) ^ (int_64)(uint_64)*($4 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($14 + [264]) ^ (int_64)*(($4 + [16])))) == 0) )
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [8080])
	*((($14 + [256]) + [32])) = [0]
	*($14 + [272]) = (int_64)-1
	*($14 + [280]) = (int_64)0
	$8 = *($0)
	*($14 + [256]) = $8
	*($14 + [264]) = $8
	*($14 + [292]) = [0]
	$6 = CALL db_find_i64($8, $8, (int_64)-4060986525729035840, *($6))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$10 }
	$6 = CALL $148(($14 + [256]), $6)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)($14 + [256])), [288])
	$6 = ($6 + [8])
	goto $label$9 
	
.LABEL $label$10
	$6 = $0
	
.LABEL $label$9
	$8 = *($6)
	$6 = [0]
	*((($14 + [216]) + [32])) = [0]
	*($14 + [224]) = $8
	*($14 + [232]) = (int_64)-1
	*($14 + [240]) = (int_64)0
	*($14 + [216]) = $3
	$11 = [0]
	$4 = CALL db_find_i64($3, $8, (int_64)3607749779137757184, $13)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$11 }
	$11 = CALL $420(($14 + [216]), $4)
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)($14 + [216])), [288])
	
.LABEL $label$11
	*((($14 + [176]) + [32])) = [0]
	*($14 + [192]) = (int_64)-1
	*($14 + [200]) = (int_64)0
	$8 = *($0)
	*($14 + [176]) = $8
	*($14 + [184]) = $8
	*($14 + [212]) = [0]
	*($14 + [168]) = ($14 + [176])
	CALL eosio_assert([1], [2768])
	$8 = $13
	
.LOOP $label$14:
	$4 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$12 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$12 = [0]
	
.LABEL $label$12
	CALL eosio_assert($12, [2832])
	*($14 + [152]) = $3
	*($14 + [144]) = $13
	CALL $156(($14 + [344]), ($14 + [168]), ($14 + [144]))
	$6 = *($14 + [348])
	if ( ($6 == 0) ){ goto $label$17 }
	$4 = ( $6 ? [0] : (int_64)(((int_64)((int_64)*($14 + [144]) ^ (int_64)(uint_64)*(($6 + [16])) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($14 + [152]) ^ (int_64)*(($6 + [24])))) == 0) )
	
.LABEL $label$17
	$8 = (int_64)0
	$10 = (int_64)0
	if ( ($11 == 0) ){ goto $label$18 }
	$10 = *($11)
	
.LABEL $label$18
	if ( ($4 == 0) ){ goto $label$19 }
	$8 = *($4 + [8])
	
.LABEL $label$19
	CALL printi($10)
	CALL prints([5360])
	CALL printi($8)
	CALL prints([5360])
	$5 = (int_64)
	CALL printi($5($10 - $8)))
	$8 = (int_64)0
	CALL eosio_assert(((int_64)$5 > (int_64)0), [8128])
	*($14 + [144]) = *($0)
	$10 = (int_64)59
	$6 = [8160]
	$9 = (int_64)0
	
.LOOP $label$20:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$21 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$4 = ($4 + [165])
	goto $label$22 
	
.LABEL $label$23
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$21
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$20 }
	$8 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($14 + [144]), $9, [2])
	CALL eosio_assert((uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$6 = [0]
	
.LOOP $label$26:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$25 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	
.LOOP $label$28:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$28 }
	
.LABEL $label$27
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	$4 = [0]
	
.LABEL $label$24
	CALL eosio_assert($4, [2832])
	*($14 + [128]) = $2
	*((($14 + [48]) + [8])) = $2
	*($14 + [136]) = $3
	*((($14 + [48]) + [16])) = $3
	*($14 + [120]) = $5
	*($14 + [48]) = $5
	$6 = ($0 + [256])
	CALL _ZN11walexchange13asset_manager14adjust_balanceEyyN5eosio14extended_assetEy($6, $8, $1, ($14 + [48]), (int_64)0)
	*($14 + [104]) = $2
	*((($14 + [24]) + [8])) = $2
	*($14 + [112]) = $3
	*((($14 + [24]) + [16])) = $3
	*($14 + [96]) = $5
	*($14 + [24]) = $5
	CALL _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE($6, $1, ($14 + [24]))
	*($14 + [80]) = $2
	$8 = *($0)
	*(($14 + [8])) = $2
	*($14 + [88]) = $3
	*(($14 + [16])) = $3
	*($14 + [72]) = $5
	*($14) = $5
	CALL _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE($6, $8, $14)
	$0 = *($14 + [200])
	if ( ($0 == 0) ){ goto $label$29 }
	$12 = ($14 + [204])
	$6 = *($12)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$31 }
	
.LOOP $label$32:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$33 }
	CALL $738($4)
	
.LABEL $label$33
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$32 }
	$6 = *(($14 + [200]))
	goto $label$30 
	
.LABEL $label$31
	$6 = $0
	
.LABEL $label$30
	*($12) = $0
	CALL $738($6)
	
.LABEL $label$29
	$0 = *($14 + [240])
	if ( ($0 == 0) ){ goto $label$34 }
	$12 = ($14 + [244])
	$6 = *($12)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$36 }
	
.LOOP $label$37:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$38 }
	CALL $738($4)
	
.LABEL $label$38
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$37 }
	$6 = *(($14 + [240]))
	goto $label$35 
	
.LABEL $label$36
	$6 = $0
	
.LABEL $label$35
	*($12) = $0
	CALL $738($6)
	
.LABEL $label$34
	$0 = *($14 + [280])
	if ( ($0 == 0) ){ goto $label$39 }
	$12 = ($14 + [284])
	$6 = *($12)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$41 }
	
.LOOP $label$42:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$43 }
	CALL $738($4)
	
.LABEL $label$43
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$42 }
	$6 = *(($14 + [280]))
	goto $label$40 
	
.LABEL $label$41
	$6 = $0
	
.LABEL $label$40
	*($12) = $0
	CALL $738($6)
	
.LABEL $label$39
	$0 = *($14 + [328])
	if ( ($0 == 0) ){ goto $label$44 }
	$12 = ($14 + [332])
	$6 = *($12)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$46 }
	
.LOOP $label$47:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$48 }
	CALL $738($4)
	
.LABEL $label$48
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$47 }
	$6 = *(($14 + [328]))
	goto $label$45 
	
.LABEL $label$46
	$6 = $0
	
.LABEL $label$45
	*($12) = $0
	CALL $738($6)
	
.LABEL $label$44
	*([0] + [4]) = ($14 + [352])
}

void .FUNC $439 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[3]), [496])
	CALL memcpy(*($3 + [4]), $2, [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$3 = *($1)
	*($4 + [15]) = *(*($0 + [4]))
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [496])
	CALL memcpy(*($3 + [4]), ($4 + [15]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$3 = *($1)
	*($4 + [14]) = *(*($0 + [8]))
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [496])
	CALL memcpy(*($3 + [4]), ($4 + [14]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$0 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), $0, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	*([0] + [4]) = ($4 + [16])
}

void .FUNC _ZN11walexchange12wal_exchange12setdefiproxyEyN5eosio11symbol_typeEbbyb (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_64 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [160])
	*([0] + [4]) = $10
	if ( CALL has_auth(*(($0 + [240]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [200])))
	
.LABEL $label$1
	*((($10 + [56]) + [32])) = [0]
	*($10 + [72]) = (int_64)-1
	*($10 + [80]) = (int_64)0
	$9 = *($0)
	*($10 + [56]) = $9
	*($10 + [64]) = $9
	*($10 + [92]) = [0]
	*($10 + [48]) = ($10 + [56])
	*($10 + [8]) = $1
	*($10) = (uint_64)$2 >> (uint_64)(int_64)8)
	CALL $46(($10 + [144]), ($10 + [48]), $10)
	$8 = [0]
	$7 = *($10 + [148])
	if ( ($7 == 0) ){ goto $label$2 }
	$8 = ( $7 ? [0] : (int_64)(((int_64)((int_64)*($10) ^ (int_64)(uint_64)*($7 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($10 + [8]) ^ (int_64)*(($7 + [16])))) == 0) )
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [8272])
	*(($10 + [32])) = [0]
	*($10 + [24]) = (int_64)0
	*($10 + [16]) = (int_64)-1
	$1 = *($0)
	*($10) = $1
	*($10 + [8]) = $1
	$7 = CALL db_find_i64($1, $1, (int_64)5374741447166656512, *($8))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	$0 = CALL $149($10, $7)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)$10), [288])
	if ( ($6 == 0) ){ goto $label$8 }
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$8 = CALL db_next_i64(*($0 + [20]), ($10 + [144]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	CALL $149($10, $8)
	
.LABEL $label$10
	CALL $440($10, $0)
	$7 = *($10 + [24])
	if ( $7 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$9
	$2 = *($0)
	CALL eosio_assert(((int_64)*($10) == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([32])) + [16]) = $10
	*($0 + [4]) = $3
	*($0 + [5]) = $4
	*($0 + [8]) = $5
	*($0) = *($8)
	*($10 + [128]) = (($10 + [96]) | [14])
	*($10 + [124]) = ($10 + [96])
	*($10 + [120]) = ($10 + [96])
	*($10 + [136]) = ($10 + [120])
	*($10 + [148]) = ($0 + [4])
	*($10 + [144]) = $0
	*($10 + [152]) = ($0 + [5])
	*($10 + [156]) = ($0 + [8])
	CALL $439(($10 + [144]), ($10 + [136]))
	$1 = *($0)
	$7 = CALL db_store_i64(*(($10 + [8])), (int_64)5374741447166656512, $2, $1, ($10 + [96]), [14])
	*($0 + [20]) = $7
	$8 = ($10 + [16])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$11 }
	*($8) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$11
	*($10 + [96]) = $0
	$1 = *($0)
	*($10 + [144]) = $1
	*($10 + [120]) = $7
	$3 = ($10 + [28])
	$8 = *($3)
	if ( ((uint_32)$8 >= (uint_32)*(($10 + [32]))) ){ goto $label$7 }
	*($8 + [8]) = $1
	*($8 + [16]) = $7
	*($10 + [96]) = [0]
	*($8) = $0
	*($3) = ($8 + [24])
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([1], [1328])
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)$10), [848])
	CALL eosio_assert(((int_64)*($10) == (int_64)CALL $fimport$16()), [896])
	*($0 + [4]) = $3
	*($0 + [5]) = $4
	*($0 + [8]) = $5
	$1 = *($0)
	CALL eosio_assert([1], [960])
	*($10 + [128]) = (($10 + [96]) | [14])
	*($10 + [124]) = ($10 + [96])
	*($10 + [120]) = ($10 + [96])
	*($10 + [136]) = ($10 + [120])
	*($10 + [148]) = ($0 + [4])
	*($10 + [144]) = $0
	*($10 + [152]) = ($0 + [5])
	*($10 + [156]) = ($0 + [8])
	CALL $439(($10 + [144]), ($10 + [136]))
	CALL db_update_i64(*(($0 + [20])), (int_64)0, ($10 + [96]), [14])
	$0 = ($10 + [16])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$5 }
	*($0) = ((int_64)$1 + (int_64)1)
	$7 = *($10 + [24])
	if ( $7 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$7
	CALL $154(($10 + [24]), ($10 + [96]), ($10 + [144]), ($10 + [120]))
	
.LABEL $label$6
	$0 = *($10 + [96])
	*($10 + [96]) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	CALL $738($0)
	
.LABEL $label$5
	$7 = *($10 + [24])
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$3 = ($10 + [28])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$13 }
	
.LOOP $label$14:
	$0 = ($0 + [-24])
	$8 = *($0)
	*($0) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	CALL $738($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$14 }
	$0 = *(($10 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$0 = $7
	
.LABEL $label$12
	*($3) = $7
	CALL $738($0)
	
.LABEL $label$3
	$7 = *($10 + [80])
	if ( ($7 == 0) ){ goto $label$16 }
	$3 = ($10 + [84])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$18 }
	
.LOOP $label$19:
	$0 = ($0 + [-24])
	$8 = *($0)
	*($0) = [0]
	if ( ($8 == 0) ){ goto $label$20 }
	CALL $738($8)
	
.LABEL $label$20
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$19 }
	$0 = *(($10 + [80]))
	goto $label$17 
	
.LABEL $label$18
	$0 = $7
	
.LABEL $label$17
	*($3) = $7
	CALL $738($0)
	
.LABEL $label$16
	*([0] + [4]) = ($10 + [160])
}

void .FUNC $282 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [3])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$3 }
	$4 = [536870911]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$4 = int_32($2 >> [2])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $737(($4 << [3]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $766($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [3])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [3]))
	$7 = ($3 + [8])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $738($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $283 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$7 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[0]), [496])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	if ( $3 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [8])
	$2 = ($0 + [4])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[0]), [496])
	CALL memcpy(*($2), $5, [1])
	$7 = (*($2) + [1])
	*($2) = $7
	$5 = ($5 + [1])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $135(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC _ZN11walexchange12wal_exchange19assert_has_pub_key3EPK11checksum256PK9signatureyPb (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [224])
	*([0] + [4]) = $9
	CALL recover_key($1, $2, [66], ($9 + [182]), [34])
	$1 = [0]
	*((($9 + [104]) + [32])) = [0]
	*($9 + [120]) = (int_64)-1
	*($9 + [128]) = (int_64)0
	$8 = *($0)
	*($9 + [104]) = $8
	*($9 + [112]) = $8
	$2 = CALL db_find_i64($8, $8, (int_64)3607749778918490112, $3)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$2 = CALL $136(($9 + [104]), $2)
	CALL eosio_assert(((int_32)*($2 + [52]) == (int_32)($9 + [104])), [288])
	*($9 + [144]) = *($2 + [8])
	CALL memcpy((($9 + [144]) | [1]), ($2 + [12]), [33])
	
.LOOP $label$5:
	if ( ((int_32)*((($9 + [182]) + $1)) != (int_32)*((($9 + [144]) + $1))) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((uint_32)$1 <= (uint_32)[33]) ){ goto $label$5 }
	if ( ($4 == 0) ){ goto $label$3 }
	*($4) = [1]
	$0 = *($9 + [128])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	*((($9 + [64]) + [32])) = [0]
	*($9 + [80]) = (int_64)-1
	*($9 + [88]) = (int_64)0
	$8 = *($0)
	*($9 + [64]) = $8
	*($9 + [72]) = $8
	$6 = *(($5 + [16]))
	$5 = CALL $19(($9 + [64]), $3, [592])
	$2 = *($5 + [12])
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$14 }
	$7 = (($9 + [144]) | [1])
	
.LOOP $label$15:
	*($9 + [144]) = *($2)
	CALL memcpy($7, ($2 + [4]), [33])
	$1 = [0]
	
.LOOP $label$17:
	if ( ((int_32)*((($9 + [182]) + $1)) != (int_32)*((($9 + [144]) + $1))) ){ goto $label$16 }
	$1 = ($1 + [1])
	if ( ((uint_32)$1 <= (uint_32)[33]) ){ goto $label$17 }
	goto $label$13 
	
.LABEL $label$16
	$2 = ($2 + [40])
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$15 }
	
.LABEL $label$14
	*(($9 + [56])) = [0]
	*($9 + [40]) = (int_64)-1
	*($9 + [48]) = (int_64)0
	$8 = *($0)
	*($9 + [24]) = $8
	*($9 + [32]) = $8
	*($9 + [60]) = [0]
	*($9 + [16]) = ($9 + [24])
	CALL $50(($9 + [216]), ($9 + [16]), $5)
	$1 = *($9 + [220])
	if ( ($1 == 0) ){ goto $label$12 }
	if ( ((int_64)*($5) != (int_64)*($1 + [8])) ){ goto $label$12 }
	$8 = *($9 + [216])
	*($9 + [8]) = $8
	$1 = (CASTING uint_32)(uint_64 (uint_64)$8 >> (uint_64)(int_64)32)
	if ( ($1) == 0) ){ goto $label$11 }
	$2 = (($9 + [144]) | [1])
	
.LOOP $label$18:
	if ( ((int_64)*($1 + [8]) != (int_64)*($5)) ){ goto $label$11 }
	*($9 + [144]) = *($1 + [16])
	CALL memcpy($2, ($1 + [20]), [33])
	$1 = [0]
	
.LOOP $label$20:
	if ( ((int_32)*((($9 + [182]) + $1)) != (int_32)*((($9 + [144]) + $1))) ){ goto $label$19 }
	$1 = ($1 + [1])
	if ( ((uint_32)$1 <= (uint_32)[33]) ){ goto $label$20 }
	goto $label$10 
	
.LABEL $label$19
	CALL $51(($9 + [8]))
	$1 = *($9 + [12])
	if ( $1 ){ goto $label$18 }
	goto $label$11 
	
.LABEL $label$13
	if ( ($4 == 0) ){ goto $label$7 }
	*($4) = [0]
	$4 = *($9 + [88])
	if ( $4 ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$12
	*($9 + [12]) = [0]
	*($9 + [8]) = ($9 + [16])
	
.LABEL $label$11
	CALL eosio_assert([0], [1520])
	goto $label$9 
	
.LABEL $label$10
	if ( ($4 == 0) ){ goto $label$9 }
	*($4) = [0]
	$0 = *($9 + [48])
	if ( $0 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$0 = *($9 + [48])
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$4 = ($9 + [52])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$22 }
	
.LOOP $label$23:
	$1 = ($1 + [-24])
	$2 = *($1)
	*($1) = [0]
	if ( ($2 == 0) ){ goto $label$24 }
	CALL $738($2)
	
.LABEL $label$24
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$23 }
	$1 = *(($9 + [48]))
	goto $label$21 
	
.LABEL $label$22
	$1 = $0
	
.LABEL $label$21
	*($4) = $0
	CALL $738($1)
	
.LABEL $label$7
	$4 = *($9 + [88])
	if ( ($4 == 0) ){ goto $label$3 }
	
.LABEL $label$6
	$5 = ($9 + [92])
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$26 }
	
.LOOP $label$27:
	$1 = ($1 + [-24])
	$2 = *($1)
	*($1) = [0]
	if ( ($2 == 0) ){ goto $label$28 }
	$0 = *($2 + [12])
	if ( ($0 == 0) ){ goto $label$29 }
	*(($2 + [16])) = $0
	CALL $738($0)
	
.LABEL $label$29
	CALL $738($2)
	
.LABEL $label$28
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$27 }
	$1 = *(($9 + [88]))
	goto $label$25 
	
.LABEL $label$26
	$1 = $4
	
.LABEL $label$25
	*($5) = $4
	CALL $738($1)
	
.LABEL $label$3
	$0 = *($9 + [128])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = ($9 + [132])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$31 }
	
.LOOP $label$32:
	$1 = ($1 + [-24])
	$2 = *($1)
	*($1) = [0]
	if ( ($2 == 0) ){ goto $label$33 }
	CALL $738($2)
	
.LABEL $label$33
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$32 }
	$1 = *(($9 + [128]))
	goto $label$30 
	
.LABEL $label$31
	$1 = $0
	
.LABEL $label$30
	*($4) = $0
	CALL $738($1)
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [224])
}

void .FUNC _ZN11walexchange13order_manager12cancel_orderEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [96])
	*([0] + [4]) = $6
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = [0]
	*($6 + [8]) = *($0)
	*($6 + [16]) = *($0 + [8])
	*(($6 + [36])) = [0]
	*(($6 + [40])) = [0]
	*($6 + [44]) = [0]
	$5 = CALL $190(($6 + [8]), $1, [5552])
	$4 = ($5 + [8])
	CALL eosio_assert(((int_64)*($4) != (int_64)0), [5584])
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($6 + [8])), [848])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)CALL $fimport$16()), [896])
	$3 = *($4)
	*($4) = (int_64)0
	$2 = ($5 + [16])
	*($6 + [72]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 ((int_64)$3 > (int_64)0)) << (int_64)32) | (int_64)*($2))
	$3 = *($5)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($6 + [48]), $5, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($6 + [48]) | [8]), $4, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($6 + [48]) + [16]), $2, [4])
	CALL db_update_i64(*($5 + [28]), (int_64)0, ($6 + [48]), [20])
	if ( (uint_64)($3 <= *($6 + [24])) ){ goto $label$1 }
	*((($6 + [8]) + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($6 + [88]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 ((int_64)*($4) > (int_64)0)) << (int_64)32) | (int_64)*($2))
	if ( (CALL memcmp(($6 + [72]), ($6 + [88]), [8]) == 0) ){ goto $label$2 }
	$4 = ($5 + [32])
	$5 = *($4)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$3 }
	$5 = CALL db_idx64_find_primary(*($6 + [8]), *(($6 + [16])), (int_64)4508390640157634048, ($6 + [80]), $3)
	*($4) = $5
	
.LABEL $label$3
	CALL db_idx64_update($5, (int_64)0, ($6 + [88]))
	
.LABEL $label$2
	CALL _ZN11walexchange13order_manager15try_clear_orderEy($0, $1)
	$0 = *($6 + [32])
	if ( ($0 == 0) ){ goto $label$4 }
	$2 = ($6 + [36])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$7 }
	$5 = *(($6 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$5 = $0
	
.LABEL $label$5
	*($2) = $0
	CALL $738($5)
	
.LABEL $label$4
	*([0] + [4]) = ($6 + [96])
}

int_32 .FUNC $287 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [544])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $288(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $284 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$7 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[0]), [496])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	if ( $3 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$2 = ($0 + [4])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $7) > (int_32)[7]), [496])
	CALL memcpy(*($2), $5, [8])
	$7 = (*($2) + [8])
	*($2) = $7
	$5 = ($5 + [8])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $285 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*($10 + [24]) = (int_64)0
	*($10 + [8]) = *(($2 + [8]))
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx128_lowerbound(*($8), *($8 + [8]), (int_64)-2039333636190801408, $10, ($10 + [24]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [24])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $97($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-2039333636190801408, $5))
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [64])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [32])
}

void .FUNC _ZN11walexchange12wal_exchange8resetkeyEymyN5eosio10public_keyE9signatureS2_S3_ (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [384])
	*([0] + [4]) = $12
	CALL require_auth(*($0))
	*($12 + [376]) = *($0)
	$9 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($12 + [376]), $3, [0])
	*(($12 + [368])) = [0]
	*($12 + [352]) = (int_64)-1
	*($12 + [360]) = (int_64)0
	$10 = *($0)
	*($12 + [336]) = $10
	*($12 + [344]) = $10
	$8 = CALL $526(($12 + [336]), $9, [592])
	CALL eosio_assert(((int_32)*($8 + [48]) ^ (int_32)[1]), [9728])
	*($12 + [224]) = $4
	CALL $535(($12 + [336]), $8, ($12 + [224]))
	CALL _ZNSt3__19to_stringEm(($12 + [304]), $2)
	$8 = CALL $745(($12 + [304]), [1648])
	$11 = ($8 + [8])
	*((($12 + [224]) + [8])) = *($11)
	*($12 + [224]) = *($8)
	*($8) = [0]
	*(($8 + [4])) = [0]
	*($11) = [0]
	*($12 + [264]) = $3
	CALL $56(($12 + [272]), ($12 + [264]))
	$8 = *($12 + [272])
	$11 = ($8 & [1])
	$8 = CALL $744(($12 + [224]), ( *($12 + [280]) ? (($12 + [272]) | [1]) : $11 ), ( *($12 + [276]) ? uint_32($8 >> [1]) : $11 ))
	$11 = ($8 + [8])
	*((($12 + [288]) + [8])) = *($11)
	*($12 + [288]) = *($8)
	*($8) = [0]
	*(($8 + [4])) = [0]
	*($11) = [0]
	if ( ((*($12 + [272]) & [1]) == 0) ){ goto $label$1 }
	CALL $738(*((($12 + [272]) + [8])))
	
.LABEL $label$1
	if ( ((*($12 + [224]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*($12 + [232]))
	
.LABEL $label$2
	if ( ((*($12 + [304]) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($12 + [312]))
	
.LABEL $label$3
	$8 = *($12 + [288])
	$11 = ($8 & [1])
	CALL sha256(( *($12 + [296]) ? (($12 + [288]) | [1]) : $11 ), ( *($12 + [292]) ? uint_32($8 >> [1]) : $11 ), ($12 + [304]))
	*($12 + [224]) = *($4)
	CALL memcpy((($12 + [224]) | [1]), ($4 + [4]), [33])
	CALL assert_recover_key(($12 + [304]), $5, [66], ($12 + [224]), [34])
	CALL memset((($12 + [224]) | [4]), [0], [36])
	*($12 + [224]) = [0]
	if ( (CALL $347($6, ($12 + [224])) == 0) ){ goto $label$5 }
	CALL memcpy(($12 + [184]), $6, [40])
	CALL memcpy(($12 + [112]), $7, [66])
	CALL memcpy(($12 + [72]), ($12 + [184]), [40])
	CALL memcpy(($12 + [6]), ($12 + [112]), [66])
	CALL _ZN11walexchange12wal_exchange7bindkeyEymyN5eosio10public_keyE9signature($0, $3, $2, $3, ($12 + [72]), ($12 + [6]))
	goto $label$4 
	
.LABEL $label$5
	CALL _ZN11walexchange12wal_exchange6add_idEyyt($0, (int_64)0, $1, [98])
	
.LABEL $label$4
	if ( ((*($12 + [288]) & [1]) == 0) ){ goto $label$6 }
	CALL $738(*(($12 + [296])))
	
.LABEL $label$6
	$8 = *($12 + [360])
	if ( ($8 == 0) ){ goto $label$7 }
	$6 = ($12 + [364])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$8) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $738($4)
	
.LABEL $label$11
	if ( ((int_32)$8 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($12 + [360]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $8
	
.LABEL $label$8
	*($6) = $8
	CALL $738($0)
	
.LABEL $label$7
	*([0] + [4]) = ($12 + [384])
}

void .FUNC $535 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*(($1 + [52])) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [896])
	$3 = *($1)
	CALL memcpy(($1 + [8]), *($2), [37])
	CALL eosio_assert([1], [960])
	$8 = *($1 + [8])
	$6 = [43]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($6 <= [513]) ){ goto $label$3 }
	$7 = CALL malloc($6)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$6 > (int_32)[7]), [496])
	CALL memcpy($7, $1, [8])
	$9 = ($7 + [8])
	$4 = ($7 + $6)
	$8 = *(($1 + [8]))
	
.LOOP $label$4:
	$2 = (CASTING uint_32)(uint_64 $8)
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	$5 = ((int_64)$8) != (int_64)0
	*($10 + [15]) = (($5) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)($4 - $9) > (int_32)[0]), [496])
	CALL memcpy($9, ($10 + [15]), [1])
	$9 = ($9 + [1])
	if ( $5 ){ goto $label$4 }
	$2 = [12]
	
.LOOP $label$5:
	$5 = $9
	CALL eosio_assert(((int_32)($4 - $5) > (int_32)[0]), [496])
	CALL memcpy($5, ($1 + $2), [1])
	$9 = ($5 + [1])
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[45]) ){ goto $label$5 }
	*($10 + [14]) = *($1 + [48])
	CALL eosio_assert(((int_32)($4 - $9) > (int_32)[0]), [496])
	CALL memcpy($9, ($10 + [14]), [1])
	$9 = ($5 + [2])
	CALL eosio_assert(((int_32)($4 - $9) > (int_32)[0]), [496])
	CALL memcpy($9, ($1 + [49]), [1])
	CALL db_update_i64(*($1 + [56]), (int_64)0, $7, $6)
	if ( ($6 <= [513]) ){ goto $label$6 }
	CALL free($7)
	
.LABEL $label$6
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $121 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	$10 = $11
	*([0] + [4]) = $11
	$3 = *($0 + [24])
	$8 = *(($0 + [28]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$7 = ($8 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$8 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($8 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($8 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$8 <= (uint_32)[512]) ){ goto $label$6 }
	$4 = CALL malloc($8)
	CALL db_get_i64($1, $4, $8)
	CALL free($4)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($11 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $4
	CALL db_get_i64($1, $4, $8)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $737([48])) + [16]) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$11 = ($5 + [16])
	$6 = ($5 + [8])
	$9 = (int_64)5462355
	$7 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$3 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$3 = [0]
	
.LABEL $label$7
	CALL eosio_assert($3, [2832])
	*($5 + [32]) = $0
	CALL eosio_assert(((uint_32)$8 > (uint_32)[3]), [544])
	CALL memcpy($5, $4, [4])
	CALL eosio_assert(((uint_32)($8 + [-4]) > (uint_32)[7]), [544])
	CALL memcpy($6, ($4 + [4]), [8])
	CALL eosio_assert(((uint_32)($8 + [-12]) > (uint_32)[7]), [544])
	CALL memcpy($11, ($4 + [12]), [8])
	CALL eosio_assert(((uint_32)($8 + [-20]) > (uint_32)[7]), [544])
	CALL memcpy(($5 + [24]), ($4 + [20]), [8])
	*($5 + [40]) = [-1]
	*($5 + [36]) = $1
	*($10 + [24]) = $5
	$9 = *($5)
	*($10 + [16]) = $9
	$8 = *($5 + [36])
	*($10 + [12]) = $8
	$1 = ($0 + [28])
	$7 = *($1)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($7 + [8]) = $9
	*($7 + [16]) = $8
	*($10 + [24]) = [0]
	*($7) = $5
	*($1) = ($7 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $121($2, ($10 + [24]), ($10 + [16]), ($10 + [12]))
	
.LABEL $label$12
	$7 = *($10 + [24])
	*($10 + [24]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $738($7)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [32])
	return $5
}

void .FUNC $530 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [256])
	*([0] + [4]) = $7
	$2 = CALL memset($0, [0], [37])
	$6 = *($1 + [4])
	if ( ($6 == 0) ){ goto $label$1 }
	$5 = *($1)
	$3 = ($5 + $6)
	
.LOOP $label$2:
	if ( *([0] + [16]) ){ goto $label$3 }
	$1 = [-256]
	
.LOOP $label$4:
	*(($1 + [288])) = [255]
	$1 = ($1 + [1])
	if ( $1 ){ goto $label$4 }
	$1 = [0]
	
.LOOP $label$5:
	*((*(($1 + [9536])) + [32])) = $1
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[59]) ){ goto $label$5 }
	*([0] + [16]) = [1]
	
.LABEL $label$3
	$6 = *((CALL memcpy($7, [32], [256]) + *($5)))
	if ( ((int_32)$6 >= (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9600])
	
.LABEL $label$6
	$1 = [0]
	
.LOOP $label$7:
	$6 = (((int_32)*($4) * (int_32)[58]) + $6)
	*(($4 = ($2 + $1))) = $6
	$6 = int_32($6 >> [8])
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[37]) ){ goto $label$7 }
	if ( ($6 == 0) ){ goto $label$8 }
	CALL eosio_assert([0], [9632])
	
.LABEL $label$8
	$5 = ($5 + [1])
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($2 + [36])
	
.LOOP $label$9:
	$6 = *($0)
	*($0) = *($1)
	*($1) = $6
	$1 = ($1 + [-1])
	$0 = ($0 + [1])
	if ( ($0 <= $1) ){ goto $label$9 }
	*([0] + [4]) = ($7 + [256])
}

void .FUNC $126 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	*([0] + [4]) = $7
	CALL $767(($7 + [32]), $1)
	CALL $68(($7 + [48]), $0, ($7 + [32]))
	if ( (*($1) & [1]) ){ goto $label$2 }
	*($1) = [0]
	goto $label$1 
	
.LABEL $label$2
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$1
	CALL $742($1, [0])
	$0 = (($7 + [48]) + [8])
	*(($1 + [8])) = *($0)
	*($1) = *($7 + [48])
	*($0) = [0]
	*($7 + [48]) = (int_64)0
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($7 + [40]))
	
.LABEL $label$3
	CALL $767(($7 + [16]), $1)
	CALL _Z5splitNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEc(($7 + [48]), ($7 + [16]), [35])
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$4 }
	CALL $738(*($7 + [24]))
	
.LABEL $label$4
	$0 = *($7 + [48])
	if ( ((int_32)(*($7 + [52]) - $0) != (int_32)[72]) ){ goto $label$5 }
	CALL _Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($7, $0)
	if ( (*($2) & [1]) ){ goto $label$7 }
	*($2) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*($2 + [8])) = [0]
	*($2 + [4]) = [0]
	
.LABEL $label$6
	CALL $742($2, [0])
	*(($2 + [8])) = *(($7 + [8]))
	*($2) = *($7)
	CALL _Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($7, (*($7 + [48]) + [12]))
	if ( (*($3) & [1]) ){ goto $label$9 }
	*($3) = [0]
	goto $label$8 
	
.LABEL $label$9
	*(*($3 + [8])) = [0]
	*($3 + [4]) = [0]
	
.LABEL $label$8
	CALL $742($3, [0])
	*(($3 + [8])) = *(($7 + [8]))
	*($3) = *($7)
	CALL _Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($7, (*($7 + [48]) + [36]))
	if ( (*($4) & [1]) ){ goto $label$11 }
	*($4) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($4 + [8])) = [0]
	*($4 + [4]) = [0]
	
.LABEL $label$10
	CALL $742($4, [0])
	*(($4 + [8])) = *(($7 + [8]))
	*($4) = *($7)
	CALL _Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($7, (*($7 + [48]) + [48]))
	if ( (*($5) & [1]) ){ goto $label$13 }
	*($5) = [0]
	goto $label$12 
	
.LABEL $label$13
	*(*($5 + [8])) = [0]
	*($5 + [4]) = [0]
	
.LABEL $label$12
	CALL $742($5, [0])
	*(($5 + [8])) = *(($7 + [8]))
	*($5) = *($7)
	CALL _Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($7, (*($7 + [48]) + [60]))
	if ( (*($6) & [1]) ){ goto $label$15 }
	*($6) = [0]
	goto $label$14 
	
.LABEL $label$15
	*(*($6 + [8])) = [0]
	*($6 + [4]) = [0]
	
.LABEL $label$14
	CALL $742($6, [0])
	*(($6 + [8])) = *(($7 + [8]))
	*($6) = *($7)
	$0 = *($7 + [48])
	
.LABEL $label$5
	if ( ($0 == 0) ){ goto $label$16 }
	$1 = *($7 + [52])
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$18 }
	$2 = ([0] - $0)
	$1 = ($1 + [-12])
	
.LOOP $label$19:
	if ( ((*($1) & [1]) == 0) ){ goto $label$20 }
	CALL $738(*(($1 + [8])))
	
.LABEL $label$20
	$1 = ($1 + [-12])
	if ( ((int_32)($1 + $2) != (int_32)[-12]) ){ goto $label$19 }
	$1 = *($7 + [48])
	goto $label$17 
	
.LABEL $label$18
	$1 = $0
	
.LABEL $label$17
	*($7 + [52]) = $0
	CALL $738($1)
	
.LABEL $label$16
	*([0] + [4]) = ($7 + [64])
}

void .FUNC _ZN11walexchange12wal_exchange9createkeyEymyN5eosio10public_keyE9signatureS2_S3_ (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [400])
	*([0] + [4]) = $15
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	CALL memset((($15 + [360]) | [4]), [0], [36])
	*($15 + [360]) = [0]
	CALL eosio_assert(CALL $347($4, ($15 + [360])), [9664])
	*($15 + [352]) = *($0)
	$12 = CALL _ZN11walexchange24contract_account_manager29get_or_create_digital_accountEy(($15 + [352]), $3)
	*($15 + [344]) = $12
	*(($14 = ($15 + [392]))) = [0]
	*($15 + [376]) = (int_64)-1
	*($15 + [384]) = (int_64)0
	$8 = *($0)
	*($15 + [360]) = $8
	*($15 + [368]) = $8
	$11 = CALL db_find_i64($8, $8, (int_64)3607749778918490112, $12)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$3 }
	$11 = CALL $136(($15 + [360]), $11)
	CALL eosio_assert(((int_32)*($11 + [52]) == (int_32)($15 + [360])), [288])
	CALL eosio_assert(CALL $354(($11 + [8]), $4), [9696])
	goto $label$2 
	
.LABEL $label$3
	$12 = *($0)
	*($15 + [292]) = $4
	*($15 + [288]) = ($15 + [344])
	*($15 + [304]) = $12
	CALL eosio_assert(((int_64)$8 == (int_64)CALL $fimport$16()), [432])
	*($15 + [228]) = ($15 + [288])
	*($15 + [224]) = ($15 + [360])
	*($15 + [232]) = ($15 + [304])
	*(($11 = CALL $737([64])) + [8]) = [0]
	*($11 + [52]) = ($15 + [360])
	CALL $533(($15 + [224]), $11)
	*($15 + [272]) = $11
	$8 = *($11)
	*($15 + [224]) = $8
	$9 = *($11 + [56])
	*($15 + [264]) = $9
	$13 = ($15 + [388])
	$10 = *($13)
	if ( ((uint_32)$10 >= (uint_32)*($14)) ){ goto $label$5 }
	*($10 + [8]) = $8
	*($10 + [16]) = $9
	*($15 + [272]) = [0]
	*($10) = $11
	*($13) = ($10 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $138(($15 + [384]), ($15 + [272]), ($15 + [224]), ($15 + [264]))
	
.LABEL $label$4
	$11 = *($15 + [272])
	*($15 + [272]) = [0]
	if ( ($11 == 0) ){ goto $label$2 }
	CALL $738($11)
	
.LABEL $label$2
	CALL _ZNSt3__19to_stringEm(($15 + [304]), $2)
	$11 = CALL $745(($15 + [304]), [1648])
	$14 = ($11 + [8])
	*((($15 + [224]) + [8])) = *($14)
	*($15 + [224]) = *($11)
	*($11) = [0]
	*(($11 + [4])) = [0]
	*($14) = [0]
	*($15 + [264]) = $3
	CALL $56(($15 + [272]), ($15 + [264]))
	$11 = *($15 + [272])
	$14 = ($11 & [1])
	$11 = CALL $744(($15 + [224]), ( *($15 + [280]) ? (($15 + [272]) | [1]) : $14 ), ( *($15 + [276]) ? uint_32($11 >> [1]) : $14 ))
	$14 = ($11 + [8])
	*((($15 + [288]) + [8])) = *($14)
	*($15 + [288]) = *($11)
	*($11) = [0]
	*(($11 + [4])) = [0]
	*($14) = [0]
	if ( ((*($15 + [272]) & [1]) == 0) ){ goto $label$6 }
	CALL $738(*((($15 + [272]) + [8])))
	
.LABEL $label$6
	if ( ((*($15 + [224]) & [1]) == 0) ){ goto $label$7 }
	CALL $738(*($15 + [232]))
	
.LABEL $label$7
	if ( ((*($15 + [304]) & [1]) == 0) ){ goto $label$8 }
	CALL $738(*($15 + [312]))
	
.LABEL $label$8
	$11 = *($15 + [288])
	$14 = ($11 & [1])
	CALL sha256(( *($15 + [296]) ? (($15 + [288]) | [1]) : $14 ), ( *($15 + [292]) ? uint_32($11 >> [1]) : $14 ), ($15 + [304]))
	*($15 + [224]) = *($4)
	CALL memcpy((($15 + [224]) | [1]), ($4 + [4]), [33])
	CALL assert_recover_key(($15 + [304]), $5, [66], ($15 + [224]), [34])
	CALL memset((($15 + [224]) | [4]), [0], [36])
	*($15 + [224]) = [0]
	if ( (CALL $347($6, ($15 + [224])) == 0) ){ goto $label$10 }
	CALL memcpy(($15 + [184]), $6, [40])
	CALL memcpy(($15 + [112]), $7, [66])
	CALL memcpy(($15 + [72]), ($15 + [184]), [40])
	CALL memcpy(($15 + [6]), ($15 + [112]), [66])
	CALL _ZN11walexchange12wal_exchange7bindkeyEymyN5eosio10public_keyE9signature($0, $8, $2, $3, ($15 + [72]), ($15 + [6]))
	goto $label$9 
	
.LABEL $label$10
	CALL _ZN11walexchange12wal_exchange6add_idEyyt($0, (int_64)0, $1, [98])
	
.LABEL $label$9
	if ( ((*($15 + [288]) & [1]) == 0) ){ goto $label$11 }
	CALL $738(*(($15 + [296])))
	
.LABEL $label$11
	$11 = *($15 + [384])
	if ( ($11 == 0) ){ goto $label$12 }
	$2 = ($15 + [388])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$11) ){ goto $label$14 }
	
.LOOP $label$15:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	CALL $738($4)
	
.LABEL $label$16
	if ( ((int_32)$11 != (int_32)$0) ){ goto $label$15 }
	$0 = *(($15 + [384]))
	goto $label$13 
	
.LABEL $label$14
	$0 = $11
	
.LABEL $label$13
	*($2) = $11
	CALL $738($0)
	
.LABEL $label$12
	*([0] + [4]) = ($15 + [400])
}

void .FUNC $533 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	$8 = *($0 + [4])
	*($1) = *(*($8))
	$2 = *($0)
	CALL memcpy(($1 + [8]), *($8 + [4]), [37])
	$7 = *($1 + [8])
	$5 = [43]
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($5)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$5 > (int_32)[7]), [496])
	CALL memcpy($6, $1, [8])
	$9 = ($6 + [8])
	$3 = ($6 + $5)
	$7 = *(($1 + [8]))
	
.LOOP $label$4:
	$8 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$4 = ((int_64)$7) != (int_64)0
	*($10 + [15]) = (($4) << [7]) | ($8 & [127]))
	CALL eosio_assert(((int_32)($3 - $9) > (int_32)[0]), [496])
	CALL memcpy($9, ($10 + [15]), [1])
	$9 = ($9 + [1])
	if ( $4 ){ goto $label$4 }
	$8 = [12]
	
.LOOP $label$5:
	$4 = $9
	CALL eosio_assert(((int_32)($3 - $4) > (int_32)[0]), [496])
	CALL memcpy($4, ($1 + $8), [1])
	$9 = ($4 + [1])
	$8 = ($8 + [1])
	if ( ((int_32)$8 != (int_32)[45]) ){ goto $label$5 }
	*($10 + [14]) = *($1 + [48])
	CALL eosio_assert(((int_32)($3 - $9) > (int_32)[0]), [496])
	CALL memcpy($9, ($10 + [14]), [1])
	$9 = ($4 + [2])
	CALL eosio_assert(((int_32)($3 - $9) > (int_32)[0]), [496])
	CALL memcpy($9, ($1 + [49]), [1])
	$7 = *($1)
	*($1 + [56]) = CALL db_store_i64(*($2 + [8]), (int_64)3607749778918490112, *(*($0 + [8])), $7, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL free($6)
	
.LABEL $label$6
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$7 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $722 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	CALL $767($4, $1)
	$2 = *($1 + [16])
	$0 = *($0 + [4])
	$3 = *($0 + [4])
	$1 = (*(*($0)) + int_32($3 >> [1]))
	$0 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	CALL $767(($4 + [16]), $4)
	CALL void $1((int_32 ($4 + [16])), (int_32 $2), (int_64 $0))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*($4 + [24]))
	
.LABEL $label$2
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($4 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [32])
}

void .FUNC $682 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [272])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($2 + [80]), *($3 + [4]), [2])
	*($3 + [4]) = (*($3 + [4]) + [2])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($3 + [82]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	*($4) = *($1)
	*($4 + [12]) = ($3 + [85])
	*($4 + [8]) = ($3 + [84])
	*($4 + [16]) = ($3 + [86])
	*($4 + [20]) = ($3 + [87])
	*($4 + [24]) = ($3 + [88])
	*($4 + [28]) = ($3 + [89])
	*($4 + [32]) = ($3 + [90])
	*($4 + [36]) = ($3 + [91])
	*($4 + [40]) = ($3 + [92])
	*($4 + [44]) = ($3 + [93])
	*($4 + [48]) = ($3 + [94])
	*($4 + [52]) = ($3 + [95])
	*($4 + [56]) = ($3 + [96])
	*($4 + [60]) = ($3 + [97])
	*($4 + [64]) = ($3 + [98])
	*($4 + [68]) = ($3 + [99])
	*($4 + [72]) = ($3 + [100])
	*($4 + [76]) = ($3 + [101])
	*($4 + [80]) = ($3 + [102])
	*($4 + [84]) = ($3 + [103])
	*($4 + [88]) = ($3 + [104])
	*($4 + [92]) = ($3 + [105])
	*($4 + [96]) = ($3 + [106])
	*($4 + [100]) = ($3 + [107])
	*($4 + [104]) = ($3 + [108])
	*($4 + [108]) = ($3 + [109])
	*($4 + [112]) = ($3 + [110])
	*($4 + [116]) = ($3 + [111])
	*($4 + [120]) = ($3 + [112])
	*($4 + [124]) = ($3 + [113])
	*($4 + [128]) = ($3 + [114])
	*($4 + [132]) = ($3 + [115])
	*($4 + [136]) = ($3 + [116])
	*($4 + [140]) = ($3 + [117])
	*($4 + [144]) = ($3 + [118])
	*($4 + [148]) = ($3 + [119])
	*($4 + [152]) = ($3 + [120])
	*($4 + [156]) = ($3 + [121])
	*($4 + [160]) = ($3 + [122])
	*($4 + [164]) = ($3 + [123])
	*($4 + [168]) = ($3 + [124])
	*($4 + [172]) = ($3 + [125])
	*($4 + [176]) = ($3 + [126])
	*($4 + [180]) = ($3 + [127])
	*($4 + [184]) = ($3 + [128])
	*($4 + [188]) = ($3 + [129])
	*($4 + [192]) = ($3 + [130])
	*($4 + [196]) = ($3 + [131])
	*($4 + [200]) = ($3 + [132])
	*($4 + [204]) = ($3 + [133])
	*($4 + [208]) = ($3 + [134])
	*($4 + [212]) = ($3 + [135])
	*($4 + [216]) = ($3 + [136])
	*($4 + [220]) = ($3 + [137])
	*($4 + [224]) = ($3 + [138])
	*($4 + [228]) = ($3 + [139])
	*($4 + [232]) = ($3 + [140])
	*($4 + [236]) = ($3 + [141])
	*($4 + [240]) = ($3 + [142])
	*($4 + [244]) = ($3 + [143])
	*($4 + [248]) = ($3 + [144])
	*($4 + [252]) = ($3 + [145])
	*($4 + [256]) = ($3 + [146])
	*($4 + [260]) = ($3 + [147])
	*($4 + [264]) = ($3 + [148])
	*($4 + [268]) = ($3 + [149])
	CALL $669(($4 + [8]), $4)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [152]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($4 + [8]) = $3
	CALL $683(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [272])
}

void .FUNC $683 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [160]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [168]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [176]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [184]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($4 + [8]) = $2
	CALL $684(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $479 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [88]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3020379700877741408, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $463($0, $5)
	CALL eosio_assert(((int_32)*($6 + [88]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $529 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$4 = (*([0] + [4]) - [16])
	$13 = $4
	*([0] + [4]) = $4
	$2 = *($0)
	$11 = *($0 + [4])
	$12 = *($11)
	$10 = *($12 + [16])
	if ( ((int_64)$10 != (int_64)-1) ){ goto $label$1 }
	$10 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($12), *($12 + [8]), (int_64)-3020370205707976704, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	CALL $52($12, $8)
	*($13 + [12]) = [0]
	*($13 + [8]) = $12
	$10 = *(*(CALL $358(($13 + [8])) + [4]))
	$10 = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($12 + [16])) = $10
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($10 <= (int_64)-2), [2192])
	*($1) = *(($12 + [16]))
	*($1 + [8]) = *(*($11 + [4]))
	CALL memcpy(($1 + [16]), *($11 + [8]), [37])
	*($1 + [56]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$3 = ($1 + [56])
	$12 = ($1 + [8])
	$10 = *($1 + [16])
	$8 = [53]
	
.LOOP $label$3:
	$8 = ($8 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$3 }
	if ( ($8 <= [513]) ){ goto $label$5 }
	$9 = CALL malloc($8)
	goto $label$4 
	
.LABEL $label$5
	$9 = ($4 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$8 > (int_32)[7]), [496])
	CALL memcpy($9, $1, [8])
	CALL eosio_assert(((int_32)($8 + [-8]) > (int_32)[7]), [496])
	CALL memcpy(($9 + [8]), $12, [8])
	$12 = ($9 + [16])
	$4 = ($9 + $8)
	$10 = *(($1 + [16]))
	
.LOOP $label$6:
	$11 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$5 = ((int_64)$10) != (int_64)0
	*($13 + [8]) = (($5) << [7]) | ($11 & [127]))
	CALL eosio_assert(((int_32)($4 - $12) > (int_32)[0]), [496])
	CALL memcpy($12, ($13 + [8]), [1])
	$12 = ($12 + [1])
	if ( $5 ){ goto $label$6 }
	$11 = [20]
	
.LOOP $label$7:
	CALL eosio_assert(((int_32)($4 - $12) > (int_32)[0]), [496])
	CALL memcpy($12, ($1 + $11), [1])
	$12 = ($12 + [1])
	$11 = ($11 + [1])
	if ( ((int_32)$11 != (int_32)[53]) ){ goto $label$7 }
	CALL eosio_assert(((int_32)($4 - $12) > (int_32)[3]), [496])
	CALL memcpy($12, $3, [4])
	$10 = *($1)
	*($1 + [64]) = CALL db_store_i64(*($2 + [8]), (int_64)-3020370205707976704, *(*($0 + [8])), $10, $9, $8)
	if ( ($8 <= [513]) ){ goto $label$8 }
	CALL free($9)
	
.LABEL $label$8
	if ( (uint_64)($10 <= *($2 + [16])) ){ goto $label$9 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$12 = ($2 + [8])
	$10 = *($12)
	$11 = *(($0 + [8]))
	$6 = *($11)
	$7 = *($1)
	*($13 + [8]) = *(($1 + [56]))
	*($1 + [68]) = CALL db_idx64_store($10, (int_64)-3020370205707976704, $6, $7, ($13 + [8]))
	$10 = *($11)
	$6 = *($12)
	$7 = *($1)
	*($13 + [8]) = *(($1 + [8]))
	*(($1 + [72])) = CALL db_idx64_store($6, (int_64)-3020370205707976703, $10, $7, ($13 + [8]))
	*([0] + [4]) = ($13 + [16])
}

void .FUNC _ZN11walexchange11rex_manager12get_delegateEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [48])
	*([0] + [4]) = $4
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = [0]
	*($4 + [8]) = *($1)
	*($4 + [16]) = *($1 + [8])
	*(($1 = ($4 + [36]))) = [0]
	*(($4 + [40])) = [0]
	*(($4 + [46])) = [0]
	*($4 + [44]) = [0]
	CALL memcpy($0, CALL $479(($4 + [8]), $2, [8688]), [88])
	$3 = *($4 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	$1 = *($1)
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$4:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	CALL $738($0)
	
.LABEL $label$5
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$4 }
	$1 = *(($4 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$1 = $3
	
.LABEL $label$2
	*(($4 + [36])) = $3
	CALL $738($1)
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [48])
}

void .FUNC $528 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [896])
	$3 = *($1)
	$6 = [0]
	$8 = ($1 + [16])
	$7 = *($1 + [12])
	if ( ((int_32)$7 == (int_32)*($8)) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( CALL $354($7, *($2)) ){ goto $label$2 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)*($8)) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($7 + [40])
	$6 = ($1 + [16])
	$2 = (*($6) - $5)
	$4 = ((int_32)$2 / (int_32)[40])
	if ( ($2 == 0) ){ goto $label$4 }
	CALL memmove($7, $5, $2)
	
.LABEL $label$4
	*($6) = ($7 + ((int_32)$4 * (int_32)[40]))
	$6 = [1]
	
.LABEL $label$1
	CALL eosio_assert($6, [6352])
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [960])
	$8 = *($1 + [12])
	$2 = *($8)
	$9 = (CASTING uint_64)(uint_32 ((int_32)($2 - $8) / (int_32)[40]))
	$7 = [10]
	
.LOOP $label$5:
	$7 = ($7 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = ($7 + [33])
	$9 = *($8)
	
.LOOP $label$8:
	$7 = ($7 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$8 }
	$8 = ($8 + [40])
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ($7 <= [513]) ){ goto $label$10 }
	$8 = CALL malloc($7)
	goto $label$9 
	
.LABEL $label$10
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$9
	*($10 + [4]) = $8
	*($10) = $8
	*($10 + [8]) = ($8 + $7)
	CALL $352($10, $1)
	CALL db_update_i64(*($1 + [28]), (int_64)0, $8, $7)
	if ( ($7 <= [513]) ){ goto $label$11 }
	CALL free($8)
	
.LABEL $label$11
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC _ZNSt3__14stolERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	$3 = CALL strlen([20384])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$6 }
	*($6) = ($3 << [1])
	$5 = ($6 | [1])
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = (($3 + [16]) & [-16])
	$5 = CALL $737($4)
	*($6) = ($4 | [1])
	*($6 + [8]) = $5
	*($6 + [4]) = $3
	
.LABEL $label$5
	CALL memcpy($5, [20384], $3)
	
.LABEL $label$4
	*(($5 + $3)) = [0]
	*($6 + [12]) = [0]
	$3 = *($0 + [8])
	$5 = *($0)
	$4 = *(CALL __errno_location())
	*(CALL __errno_location()) = [0]
	$3 = ( $3 ? ($0 + [1]) : ($5 & [1]) )
	$2 = CALL strtol($3, ($6 + [12]), $2)
	$0 = CALL __errno_location()
	$5 = *($0)
	*($0) = $4
	if ( ((int_32)$5 == (int_32)[34]) ){ goto $label$2 }
	$0 = *($6 + [12])
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($0 - $3)
	
.LABEL $label$7
	if ( ((*($6) & [1]) == 0) ){ goto $label$8 }
	CALL $738(*($6 + [8]))
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [16])
	return $2
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $755($6)
	
.LABEL $label$1
	CALL $756($6)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $295 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*($10 + [24]) = (int_64)0
	*($10 + [8]) = *(($2 + [8]))
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx128_lowerbound(*($8), *($8 + [8]), (int_64)-2039333636190596096, $10, ($10 + [24]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [24])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $120($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-2039333636190596096, $5))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [40])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [32])
}

void .FUNC _ZN11walexchange12wal_exchange10setrfwtimeEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($0 + [192])) = $1
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$3 = *($0)
	*($5 + [8]) = $3
	*($5 + [16]) = $3
	CALL $552(($5 + [8]), ($0 + [128]), $3)
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $738($1)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange19charge_exchange_feeEymx (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = ($0 + [12])
	$4 = *($12)
	if ( ($4 == 0) ){ goto $label$5 }
	$11 = ($0 + [12])
	
.LOOP $label$6:
	$7 = *($4 + [16])
	if ( ((uint_64)$7 <= (uint_64)$1) ){ goto $label$8 }
	$9 = *($4)
	if ( $9 ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$8
	if ( ((uint_64)$7 >= (uint_64)$1) ){ goto $label$3 }
	$11 = ($4 + [4])
	$9 = *($4 + [4])
	if ( ($9 == 0) ){ goto $label$3 }
	$4 = $11
	
.LABEL $label$7
	$11 = $4
	$4 = $9
	goto $label$6 
	
.LABEL $label$5
	$4 = $12
	$11 = $12
	$10 = *($11)
	if ( $10 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$11 = $4
	
.LABEL $label$3
	$10 = *($11)
	if ( $10 ){ goto $label$1 }
	
.LABEL $label$2
	*(($10 = CALL $737([40])) + [28]) = [0]
	*($10) = (int_64)0
	*($10 + [8]) = $4
	*($10 + [24]) = ($10 + [28])
	*($10 + [16]) = $1
	*($10 + [32]) = [0]
	*($11) = $10
	$4 = $10
	$9 = ($0 + [8])
	$5 = *(*($9))
	if ( ($5 == 0) ){ goto $label$9 }
	*($9) = $5
	$4 = *($11)
	
.LABEL $label$9
	CALL $289(*(($0 + [12])), $4)
	*(($4 = ($0 + [16]))) = (*($4) + [1])
	
.LABEL $label$1
	$11 = ($10 + [28])
	$4 = *($11)
	if ( ($4 == 0) ){ goto $label$14 }
	$11 = ($10 + [28])
	
.LOOP $label$15:
	$9 = *($4 + [16])
	if ( ((uint_32)$9 <= (uint_32)$2) ){ goto $label$17 }
	$9 = *($4)
	if ( $9 ){ goto $label$16 }
	goto $label$13 
	
.LABEL $label$17
	if ( ((uint_32)$9 >= (uint_32)$2) ){ goto $label$12 }
	$11 = ($4 + [4])
	$9 = *($4 + [4])
	if ( ($9 == 0) ){ goto $label$12 }
	$4 = $11
	
.LABEL $label$16
	$11 = $4
	$4 = $9
	goto $label$15 
	
.LABEL $label$14
	$4 = $11
	$9 = *($11)
	if ( $9 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$13
	$11 = $4
	
.LABEL $label$12
	$9 = *($11)
	if ( $9 ){ goto $label$10 }
	
.LABEL $label$11
	*(($9 = CALL $737([32]))) = (int_64)0
	*($9 + [8]) = $4
	*($11) = $9
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = $2
	$4 = $9
	$5 = ($10 + [24])
	$6 = *(*($5))
	if ( ($6 == 0) ){ goto $label$18 }
	*($5) = $6
	$4 = *($11)
	
.LABEL $label$18
	CALL $289(*(($10 + [28])), $4)
	*(($4 = ($10 + [32]))) = (*($4) + [1])
	
.LABEL $label$10
	*(($4 = ($9 + [24]))) = (int_64))(*($4) - $3)
	$4 = *($12)
	if ( ($4 == 0) ){ goto $label$23 }
	$12 = ($0 + [12])
	$7 = *($0)
	
.LOOP $label$24:
	$8 = *($4 + [16])
	if ( ((uint_64)$7 >= (uint_64)$8) ){ goto $label$26 }
	$11 = *($4)
	if ( $11 ){ goto $label$25 }
	goto $label$22 
	
.LABEL $label$26
	if ( ((uint_64)$8 >= (uint_64)$7) ){ goto $label$21 }
	$12 = ($4 + [4])
	$11 = *($4 + [4])
	if ( ($11 == 0) ){ goto $label$21 }
	$4 = $12
	
.LABEL $label$25
	$12 = $4
	$4 = $11
	goto $label$24 
	
.LABEL $label$23
	$4 = $12
	$9 = *($12)
	if ( $9 ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$22
	$12 = $4
	
.LABEL $label$21
	$9 = *($12)
	if ( $9 ){ goto $label$19 }
	
.LABEL $label$20
	*(($9 = CALL $737([40])) + [28]) = [0]
	*($9 + [32]) = [0]
	*($9) = (int_64)0
	*($9 + [16]) = *($0)
	*($9 + [24]) = ($9 + [28])
	*($9 + [8]) = $4
	*($12) = $9
	$4 = $9
	$11 = ($0 + [8])
	$10 = *(*($11))
	if ( ($10 == 0) ){ goto $label$27 }
	*($11) = $10
	$4 = *($12)
	
.LABEL $label$27
	CALL $289(*(($0 + [12])), $4)
	*(($4 = ($0 + [16]))) = (*($4) + [1])
	
.LABEL $label$19
	$12 = ($9 + [28])
	$4 = *($12)
	if ( ($4 == 0) ){ goto $label$32 }
	$12 = ($9 + [28])
	
.LOOP $label$33:
	$11 = *($4 + [16])
	if ( ((uint_32)$11 <= (uint_32)$2) ){ goto $label$35 }
	$11 = *($4)
	if ( $11 ){ goto $label$34 }
	goto $label$31 
	
.LABEL $label$35
	if ( ((uint_32)$11 >= (uint_32)$2) ){ goto $label$30 }
	$12 = ($4 + [4])
	$11 = *($4 + [4])
	if ( ($11 == 0) ){ goto $label$30 }
	$4 = $12
	
.LABEL $label$34
	$12 = $4
	$4 = $11
	goto $label$33 
	
.LABEL $label$32
	$4 = $12
	$11 = *($12)
	if ( $11 ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$31
	$12 = $4
	
.LABEL $label$30
	$11 = *($12)
	if ( $11 ){ goto $label$28 }
	
.LABEL $label$29
	*(($11 = CALL $737([32]))) = (int_64)0
	*($11 + [8]) = $4
	*($12) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = $2
	$4 = $11
	$10 = ($9 + [24])
	$5 = *(*($10))
	if ( ($5 == 0) ){ goto $label$36 }
	*($10) = $5
	$4 = *($12)
	
.LABEL $label$36
	CALL $289(*(($9 + [28])), $4)
	*(($4 = ($9 + [32]))) = (*($4) + [1])
	
.LABEL $label$28
	*(($4 = ($11 + [24]))) = ((int_64)*($4) + (int_64)$3)
	$12 = ($0 + [36])
	$4 = *($12)
	if ( ($4 == 0) ){ goto $label$41 }
	$12 = ($0 + [36])
	
.LOOP $label$42:
	$7 = *($4 + [16])
	if ( ((uint_64)$7 <= (uint_64)$1) ){ goto $label$44 }
	$11 = *($4)
	if ( $11 ){ goto $label$43 }
	goto $label$40 
	
.LABEL $label$44
	if ( ((uint_64)$7 >= (uint_64)$1) ){ goto $label$39 }
	$12 = ($4 + [4])
	$11 = *($4 + [4])
	if ( ($11 == 0) ){ goto $label$39 }
	$4 = $12
	
.LABEL $label$43
	$12 = $4
	$4 = $11
	goto $label$42 
	
.LABEL $label$41
	$4 = $12
	$9 = *($12)
	if ( $9 ){ goto $label$37 }
	goto $label$38 
	
.LABEL $label$40
	$12 = $4
	
.LABEL $label$39
	$9 = *($12)
	if ( $9 ){ goto $label$37 }
	
.LABEL $label$38
	*(($9 = CALL $737([40])) + [28]) = [0]
	*($9) = (int_64)0
	*($9 + [8]) = $4
	*($9 + [24]) = ($9 + [28])
	*($9 + [16]) = $1
	*($9 + [32]) = [0]
	*($12) = $9
	$4 = $9
	$11 = ($0 + [32])
	$10 = *(*($11))
	if ( ($10 == 0) ){ goto $label$45 }
	*($11) = $10
	$4 = *($12)
	
.LABEL $label$45
	CALL $289(*(($0 + [36])), $4)
	*(($4 = ($0 + [40]))) = (*($4) + [1])
	
.LABEL $label$37
	$12 = ($9 + [28])
	$4 = *($12)
	if ( ($4 == 0) ){ goto $label$50 }
	$12 = ($9 + [28])
	
.LOOP $label$51:
	$11 = *($4 + [16])
	if ( ((uint_32)$11 <= (uint_32)$2) ){ goto $label$53 }
	$11 = *($4)
	if ( $11 ){ goto $label$52 }
	goto $label$49 
	
.LABEL $label$53
	if ( ((uint_32)$11 >= (uint_32)$2) ){ goto $label$48 }
	$12 = ($4 + [4])
	$11 = *($4 + [4])
	if ( ($11 == 0) ){ goto $label$48 }
	$4 = $12
	
.LABEL $label$52
	$12 = $4
	$4 = $11
	goto $label$51 
	
.LABEL $label$50
	$4 = $12
	$11 = *($12)
	if ( $11 ){ goto $label$46 }
	goto $label$47 
	
.LABEL $label$49
	$12 = $4
	
.LABEL $label$48
	$11 = *($12)
	if ( $11 ){ goto $label$46 }
	
.LABEL $label$47
	*(($11 = CALL $737([32]))) = (int_64)0
	*($11 + [8]) = $4
	*($12) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = $2
	$4 = $11
	$2 = ($9 + [24])
	$0 = *(*($2))
	if ( ($0 == 0) ){ goto $label$54 }
	*($2) = $0
	$4 = *($12)
	
.LABEL $label$54
	CALL $289(*(($9 + [28])), $4)
	*(($4 = ($9 + [32]))) = (*($4) + [1])
	
.LABEL $label$46
	*(($4 = ($11 + [24]))) = (int_64))(*($4) - $3)
}

int_32 .FUNC $750 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$3 = ($6 & [1])
	if ( $3 ){ goto $label$3 }
	$4 = uint_32($6 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $3 ){ goto $label$6 }
	$5 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $3 ? $2 : ($3 <= $2) )
	$3 = ($4 - $1)
	$3 = ($3 - $2)
	if ( ($3 == 0) ){ goto $label$7 }
	$1 = ($5 + $1)
	CALL memmove($1, ($1 + $2), $3)
	$6 = *($0)
	
.LABEL $label$7
	$2 = ($4 - $2)
	if ( ($6 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($5 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $751 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = *($0)
	if ( ($4 & [1]) ){ goto $label$2 }
	$4 = uint_32($4 >> [1])
	$3 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0 + [4])
	$3 = *($0 + [8])
	
.LABEL $label$1
	$0 = [-1]
	if ( ((uint_32)$4 <= (uint_32)$2) ){ goto $label$3 }
	$0 = ($4 - $2)
	if ( ($0 == 0) ){ goto $label$5 }
	$0 = CALL memchr(($3 + $2), ($1 & [255]), $0)
	goto $label$4 
	
.LABEL $label$5
	$0 = [0]
	
.LABEL $label$4
	$0 = ( ($0 - $3) ? [-1] : $0 )
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $752 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

void .FUNC $753 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = CALL strlen($1)
	$3 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$6 = ($4 + $3)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$6 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($6 + [16]) & [-16])
	$6 = CALL $737($5)
	*($0) = ($5 | [1])
	*(($0 + [8])) = $6
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL $744($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	$3 = CALL strlen([20336])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$6 }
	*($6) = ($3 << [1])
	$5 = ($6 | [1])
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = (($3 + [16]) & [-16])
	$5 = CALL $737($4)
	*($6) = ($4 | [1])
	*($6 + [8]) = $5
	*($6 + [4]) = $3
	
.LABEL $label$5
	CALL memcpy($5, [20336], $3)
	
.LABEL $label$4
	*(($5 + $3)) = [0]
	*($6 + [12]) = [0]
	$3 = *($0 + [8])
	$5 = *($0)
	$4 = *(CALL __errno_location())
	*(CALL __errno_location()) = [0]
	$3 = ( $3 ? ($0 + [1]) : ($5 & [1]) )
	$2 = CALL strtol($3, ($6 + [12]), $2)
	$0 = CALL __errno_location()
	$5 = *($0)
	*($0) = $4
	if ( ((int_32)$5 == (int_32)[34]) ){ goto $label$2 }
	$0 = *($6 + [12])
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($0 - $3)
	
.LABEL $label$7
	if ( ((*($6) & [1]) == 0) ){ goto $label$8 }
	CALL $738(*($6 + [8]))
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [16])
	return $2
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $755($6)
	
.LABEL $label$1
	CALL $756($6)
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $297 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)6301537847124725072, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $187($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $756 (int_32 $0)
{
	int_32 $1
	$1 = (*([0] + [4]) - [16])
	*([0] + [4]) = $1
	CALL $757($1, $0, [20352])
	CALL abort()
	(unreachable)
}

void .FUNC $757 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL strlen($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($3 + $4)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	$5 = *($1)
	$6 = *($1 + [8])
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($8 + [16]) & [-16])
	$8 = CALL $737($7)
	*($0) = ($7 | [1])
	*(($0 + [8])) = $8
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($8, ( $6 ? ($1 + [1]) : ($5 & [1]) ), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	CALL $744($0, $2, $4)
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$6 = *($0 + [4])
	$9 = [0]
	$7 = (int_64)0
	$3 = ($0 + [8])
	$8 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($6 <= *($3)), [656])
	$6 = *($8)
	$2 = *($6)
	$6 = ($6 + [1])
	*($8) = $6
	$9 = ($9 & [255])
	$7 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $9)) | (int_64)$7)
	$9 = ($9 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$1 }
	$5 = *($1)
	$4 = *($1 + [4])
	$6 = ((int_32)($4 - $5) / (int_32)[40])
	$2 = (CASTING uint_32)(uint_64 $7)
	if ( ((uint_32)$2 <= (uint_32)$6) ){ goto $label$4 }
	CALL $30($1, ($2 - $6))
	$4 = *(($1 + [4]))
	$5 = *($1)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$2 >= (uint_32)$6) ){ goto $label$5 }
	$4 = ($5 + ((int_32)$2 * (int_32)[40]))
	*(($1 + [4])) = $4
	
.LABEL $label$5
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = ($0 + [4])
	$6 = *($2)
	$3 = ($0 + [8])
	
.LOOP $label$6:
	$8 = [0]
	$7 = (int_64)0
	
.LOOP $label$7:
	CALL eosio_assert(($6 <= *($3)), [656])
	$6 = *($2)
	$9 = *($6)
	$6 = ($6 + [1])
	*($2) = $6
	$8 = ($8 & [255])
	$7 = ((int_64)(CASTING uint_64)(uint_32 (($9 & [127]) << $8)) | (int_64)$7)
	$8 = ($8 + [7])
	if ( uint_32($9 >> [7]) ){ goto $label$7 }
	*($5) = $7
	$9 = [4]
	
.LOOP $label$8:
	CALL eosio_assert(((int_32)*($3) != (int_32)$6), [544])
	CALL memcpy(($5 + $9), *($2), [1])
	$6 = (*($2) + [1])
	*($2) = $6
	$9 = ($9 + [1])
	if ( ((int_32)$9 != (int_32)[37]) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [12])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [16])) = $6
	CALL $738($6)
	
.LABEL $label$11
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $738($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $296 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*($0 + [24 align=4]) = (int_64)0
	*($0 + [36]) = $1
	*(($0 + [32])) = [0]
	$1 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($0, *($1 + [4]), [8])
	$3 = (*($1 + [4]) + [8])
	*($1 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($1 + [8]) - $3) > (uint_32)[1]), [544])
	CALL memcpy(($0 + [8]), *($1 + [4]), [2])
	$3 = (*($1 + [4]) + [2])
	*($1 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [16]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
	CALL $101($1, ($0 + [24]))
	*($0 + [40]) = *(*($2 + [8]))
	return $0
}

int_32 .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [544])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	CALL eosio_assert(((int_32)$4 != (int_32)[12]), [544])
	CALL memcpy(($8 + [16]), ($7 + [12]), [1])
	*($6 + [12]) = ((int_32)*($8 + [16]) != (int_32)[0])
	*($6 + [24]) = [-1]
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $25(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $26(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[3]), [544])
	CALL memcpy($6, $7, [4])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[4]), [544])
	CALL memcpy(($6 + [4]), ($7 + [4]), [4])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [544])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [24]) = [-1]
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = ((int_64)((int_64)*($6) << (int_64)32) | (int_64)*($6 + [4]))
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $24(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $22 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($1 + [24])
	$7 = *(($1 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	$5 = *($6)
	if ( ((int_64)((int_64)((int_64)*($5) << (int_64)32) | (int_64)*($5 + [4])) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$1), [288])
	*($0 + [4]) = $6
	*($0) = $1
	return 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-3020381105862213632, $2)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$4 }
	$6 = CALL $23($1, $6)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$1), [288])
	*($0 + [4]) = $6
	*($0) = $1
	return 
	
.LABEL $label$4
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $24 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $27 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($0 + [12 align=4]) = (int_64)0
	*($0 + [24]) = $1
	*(($0 + [20])) = [0]
	$1 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($0, *($1 + [4]), [8])
	$3 = (*($1 + [4]) + [8])
	*($1 + [4]) = $3
	CALL eosio_assert(((int_32)*($1 + [8]) != (int_32)$3), [544])
	CALL memcpy(($4 + [15]), *($1 + [4]), [1])
	$3 = (*($1 + [4]) + [1])
	*($1 + [4]) = $3
	*($0 + [8]) = ((int_32)*($4 + [15]) != (int_32)[0])
	CALL eosio_assert(((int_32)*($1 + [8]) != (int_32)$3), [544])
	CALL memcpy(($0 + [9]), *($1 + [4]), [1])
	*($1 + [4]) = (*($1 + [4]) + [1])
	CALL $29($1, ($0 + [12]))
	*($0 + [28]) = *(*($2 + [8]))
	*([0] + [4]) = ($4 + [16])
	return $0
}

void .FUNC $26 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN11walexchange11rex_manager10undelegateEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [336])
	*([0] + [4]) = $15
	$8 = [0]
	*((($15 + [184]) + [32])) = [0]
	*($15 + [200]) = (int_64)-1
	*($15 + [208]) = (int_64)0
	$11 = *($0)
	*($15 + [184]) = $11
	*($15 + [192]) = $11
	$9 = [0]
	$4 = CALL db_find_i64($11, $11, (int_64)5031813144072871104, (int_64)5031813144072871104)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $453(($15 + [184]), $4)
	CALL eosio_assert(((int_32)*($9 + [40]) == (int_32)($15 + [184])), [288])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [672])
	CALL memcpy(($15 + [144]), $9, [40])
	*((($15 + [104]) + [32])) = [0]
	*($15 + [120]) = (int_64)-1
	*($15 + [128]) = (int_64)0
	$11 = *($0)
	*($15 + [104]) = $11
	*($15 + [112]) = $11
	*($15 + [140]) = [0]
	*($15 + [96]) = ($15 + [104])
	*($15 + [224]) = (int_64)0
	CALL $454(($15 + [88]), ($15 + [96]), ($15 + [224]))
	CALL eosio_assert(((int_32)*($15 + [92]) != (int_32)[0]), [8432])
	CALL eosio_assert((*(*($15 + [92]) + [8]) <= (CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$17() / (uint_64)(int_64)1000000))), [8448])
	CALL _ZN11walexchange11rex_manager10try_refundEy($15, *(*($15 + [92])))
	*($15 + [64]) = (int_64)-1
	*($15 + [72]) = [0]
	$11 = *($0)
	*($15 + [48]) = $11
	$10 = *($0 + [8])
	*($15 + [56]) = $10
	*(($15 + [76])) = [0]
	*((($15 + [48]) + [32])) = [0]
	*(($15 + [86])) = [0]
	*($15 + [84]) = [0]
	$9 = CALL db_find_i64($11, $10, (int_64)-3020379700877741408, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$2 }
	$8 = CALL $463(($15 + [48]), $9)
	CALL eosio_assert(((int_32)*($8 + [88]) == (int_32)($15 + [48])), [288])
	
.LABEL $label$2
	$2 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($2, [8560])
	CALL eosio_assert(((int_64)*($8 + [56]) == (int_64)*(*($15 + [92]))), [8592])
	$3 = *($8 + [56])
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [2144]
	$12 = (int_64)0
	
.LOOP $label$3:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$8 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$4 = ($4 + [165])
	goto $label$6 
	
.LABEL $label$8
	$1 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$4
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$1 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$3 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [8112]
	$13 = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_64)$11 > (uint_64)(int_64)4) ){ goto $label$14 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$4 = ($4 + [165])
	goto $label$12 
	
.LABEL $label$14
	$1 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$10
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$13 = ((int_64)$1 | (int_64)$13)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$9 }
	$11 = (int_64)0
	$1 = (int_64)59
	$9 = [8624]
	$14 = (int_64)0
	
.LOOP $label$15:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$16 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$4 = ($4 + [165])
	goto $label$17 
	
.LABEL $label$18
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$16
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$14 = ((int_64)$10 | (int_64)$14)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$15 }
	CALL eosio_assert([1], [2768])
	$11 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	
.LOOP $label$23:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$23 }
	
.LABEL $label$22
	$4 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	$4 = [0]
	
.LABEL $label$19
	CALL eosio_assert($4, [2832])
	$1 = *($8 + [40])
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$11 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$26:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$25 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	
.LOOP $label$28:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$28 }
	
.LABEL $label$27
	$4 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	$4 = [0]
	
.LABEL $label$24
	CALL eosio_assert($4, [2832])
	$11 = *(($8 + [56]))
	$10 = *(($8 + [64]))
	*((($15 + [224]) + [24])) = (int_64)1397703940
	*(($15 + [264])) = (int_64)1397703940
	*($15 + [232]) = $10
	*($15 + [224]) = $11
	*($15 + [240]) = (int_64)0
	*($15 + [256]) = $1
	*($15 + [16]) = $14
	*($15 + [8]) = $13
	*($15 + [24]) = [0]
	*(($4 = ($15 + [28]))) = [0]
	*(($5 = (($15 + [8]) + [24]))) = [0]
	*(($9 = CALL $737([16]))) = $3
	*($9 + [8]) = $12
	*(($6 = ($15 + [40]))) = [0]
	$7 = ($9 + [16])
	*($5) = $7
	*($4) = $7
	*($15 + [24]) = $9
	*($15 + [36]) = [0]
	*(($15 + [44])) = [0]
	CALL $88(($15 + [36]), [48])
	$9 = *($6)
	$4 = *($15 + [36])
	*($15 + [308]) = $4
	*($15 + [304]) = $4
	*($15 + [312]) = $9
	*($15 + [320]) = ($15 + [304])
	*($15 + [328]) = ($15 + [224])
	CALL $472(($15 + [328]), ($15 + [320]))
	CALL $87(($15 + [304]), ($15 + [8]))
	$9 = *($15 + [304])
	CALL send_inline($9, (*($15 + [308]) - $9))
	$9 = *($15 + [304])
	if ( ($9 == 0) ){ goto $label$29 }
	*($15 + [308]) = $9
	CALL $738($9)
	
.LABEL $label$29
	$9 = *($15 + [36])
	if ( ($9 == 0) ){ goto $label$30 }
	*(($15 + [40])) = $9
	CALL $738($9)
	
.LABEL $label$30
	$9 = *($15 + [24])
	if ( ($9 == 0) ){ goto $label$31 }
	*(($15 + [28])) = $9
	CALL $738($9)
	
.LABEL $label$31
	CALL eosio_assert($2, [1328])
	CALL eosio_assert(((int_32)*($8 + [88]) == (int_32)($15 + [48])), [848])
	CALL eosio_assert(((int_64)*($15 + [48]) == (int_64)CALL $fimport$16()), [896])
	$9 = ($8 + [54])
	$11 = *($9)
	*($15 + [8]) = $11
	$4 = ($8 + [76])
	$1 = *($4)
	$1 = *($8 + [72])
	*($15 + [16]) = ( $1 ? (int_64)4294967295 : (int_64)(((int_64)(CASTING uint_64)(uint_32 (int_64)($1 == 0)) | (int_64)( (int_64)4294967296 ? ((int_64)$1 << (int_64)32) : (int_64)($11 == 0) )) == 0) )
	$2 = ($8 + [80])
	$11 = *($2)
	*($15 + [24]) = ( $11 ? (int_64)4294967295 : (int_64)(((int_64)(CASTING uint_64)(uint_32 (int_64)($11 == 0)) | (int_64)((int_64)((int_64)$1 ^ (int_64)1) << (int_64)32)) == 0) )
	$11 = *($8)
	*($4) = [1]
	*($2) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [259200])
	CALL eosio_assert(((int_64)$11 == (int_64)*($8)), [960])
	*($15 + [312]) = (($15 + [224]) + [76])
	*($15 + [308]) = ($15 + [224])
	*($15 + [304]) = ($15 + [224])
	CALL $299(($15 + [304]), $8)
	CALL db_update_i64(*($8 + [92]), (int_64)0, ($15 + [224]), [76])
	$4 = (($15 + [48]) + [16])
	if ( (uint_64)($11 <= *($4)) ){ goto $label$32 }
	*($4) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$32
	*($15 + [328]) = *($9)
	if ( (CALL memcmp(($15 + [8]), ($15 + [328]), [8]) == 0) ){ goto $label$33 }
	$4 = ($8 + [96])
	$9 = *($4)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$34 }
	$9 = CALL db_idx64_find_primary(*($15 + [48]), *(($15 + [56])), (int_64)-3020379700877741408, ($15 + [320]), $11)
	*($4) = $9
	
.LABEL $label$34
	CALL db_idx64_update($9, (int_64)0, ($15 + [328]))
	
.LABEL $label$33
	$9 = (($15 + [8]) + [8])
	if ( (*(($8 + [54])) == 0) ){ goto $label$36 }
	$10 = ((int_64)*(($8 + [76])) << (int_64)32)
	goto $label$35 
	
.LABEL $label$36
	$10 = (int_64)4294967296
	
.LABEL $label$35
	$4 = (($15 + [8]) + [16])
	$1 = *(($8 + [72]))
	*($15 + [328]) = ( $1 ? (int_64)4294967295 : (int_64)(((int_64)(CASTING uint_64)(uint_32 (int_64)($1 == 0)) | (int_64)$10) == 0) )
	if ( (CALL memcmp($9, ($15 + [328]), [8]) == 0) ){ goto $label$37 }
	$2 = ($8 + [100])
	$9 = *($2)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$38 }
	$9 = CALL db_idx64_find_primary(*($15 + [48]), *(($15 + [56])), (int_64)-3020379700877741407, ($15 + [320]), $11)
	*($2) = $9
	
.LABEL $label$38
	CALL db_idx64_update($9, (int_64)0, ($15 + [328]))
	
.LABEL $label$37
	$1 = *(($8 + [80]))
	*($15 + [328]) = ( $1 ? (int_64)4294967295 : (int_64)(((int_64)((int_64)((int_64)*(($8 + [76])) ^ (int_64)1) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (int_64)($1 == 0))) == 0) )
	if ( (CALL memcmp($4, ($15 + [328]), [8]) == 0) ){ goto $label$39 }
	$4 = ($8 + [104])
	$9 = *($4)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$40 }
	$9 = CALL db_idx64_find_primary(*($15 + [48]), *(($15 + [56])), (int_64)-3020379700877741406, ($15 + [320]), $11)
	*($4) = $9
	
.LABEL $label$40
	CALL db_idx64_update($9, (int_64)0, ($15 + [328]))
	
.LABEL $label$39
	*($15) = ($15 + [48])
	*($15 + [224]) = (int_64)0
	CALL $456(($15 + [320]), $15, ($15 + [224]))
	$9 = *($15 + [324])
	if ( ($9 == 0) ){ goto $label$42 }
	CALL prints([8640])
	CALL printui(*($9 + [72]))
	CALL prints([5360])
	$9 = *($15 + [324])
	if ( ($9 == 0) ){ goto $label$42 }
	if ( ((uint_32)*($9 + [72]) <= (uint_32)*(*($15 + [92]) + [8])) ){ goto $label$41 }
	
.LABEL $label$42
	$4 = (*(*($15 + [92]) + [8]) + *($15 + [160]))
	$9 = (*($15 + [168]) + [1])
	$9 = ( $9 ? $4 : ($4 <= $9) )
	if ( ((uint_32)$9 <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$43 }
	if ( ((uint_32)$9 >= (uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [262800])) ){ goto $label$43 }
	$9 = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [262800])
	
.LABEL $label$43
	*(($2 = ($15 + [168]))) = $9
	CALL $458(($15 + [184]), ($15 + [144]), *($0))
	$9 = *($15 + [92])
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [1328])
	$8 = *($15 + [96])
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)$8), [848])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$16()), [896])
	$4 = ($9 + [8])
	$11 = *($4)
	*($4) = *($2)
	*($15 + [328]) = $11
	$11 = *($9)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($15 + [224]), $9, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($15 + [224]) | [8]), $4, [4])
	*($15 + [8]) = *($9 + [12])
	CALL eosio_assert([1], [496])
	CALL memcpy((($15 + [224]) | [12]), ($15 + [8]), [1])
	CALL db_update_i64(*($9 + [20]), (int_64)0, ($15 + [224]), [13])
	if ( (uint_64)($11 <= *($8 + [16])) ){ goto $label$44 }
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$44
	*($15 + [8]) = *($4)
	if ( (CALL memcmp(($15 + [328]), ($15 + [8]), [8]) == 0) ){ goto $label$41 }
	$4 = ($9 + [24])
	$9 = *($4)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$45 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)5031813150555504640, ($15 + [304]), $11)
	*($4) = $9
	
.LABEL $label$45
	CALL db_idx64_update($9, (int_64)0, ($15 + [8]))
	
.LABEL $label$41
	$8 = *($15 + [72])
	if ( ($8 == 0) ){ goto $label$46 }
	$0 = ($15 + [76])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$48 }
	
.LOOP $label$49:
	$9 = ($9 + [-24])
	$4 = *($9)
	*($9) = [0]
	if ( ($4 == 0) ){ goto $label$50 }
	CALL $738($4)
	
.LABEL $label$50
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$49 }
	$9 = *(($15 + [72]))
	goto $label$47 
	
.LABEL $label$48
	$9 = $8
	
.LABEL $label$47
	*($0) = $8
	CALL $738($9)
	
.LABEL $label$46
	$8 = *($15 + [128])
	if ( ($8 == 0) ){ goto $label$51 }
	$0 = ($15 + [132])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$53 }
	
.LOOP $label$54:
	$9 = ($9 + [-24])
	$4 = *($9)
	*($9) = [0]
	if ( ($4 == 0) ){ goto $label$55 }
	CALL $738($4)
	
.LABEL $label$55
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$54 }
	$9 = *(($15 + [128]))
	goto $label$52 
	
.LABEL $label$53
	$9 = $8
	
.LABEL $label$52
	*($0) = $8
	CALL $738($9)
	
.LABEL $label$51
	$8 = *($15 + [208])
	if ( ($8 == 0) ){ goto $label$56 }
	$0 = ($15 + [212])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$58 }
	
.LOOP $label$59:
	$9 = ($9 + [-24])
	$4 = *($9)
	*($9) = [0]
	if ( ($4 == 0) ){ goto $label$60 }
	CALL $738($4)
	
.LABEL $label$60
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$59 }
	$9 = *(($15 + [208]))
	goto $label$57 
	
.LABEL $label$58
	$9 = $8
	
.LABEL $label$57
	*($0) = $8
	CALL $738($9)
	
.LABEL $label$56
	*([0] + [4]) = ($15 + [336])
}

void .FUNC $232 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [896])
	$3 = *($3)
	*($1) = *($3)
	*(($4 = ($1 + [8]))) = *(($3 + [8]))
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($5 | [8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), $2, $5, [16])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-7122859525593366528) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)-7122859525593366527
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC _ZN11walexchange12wal_exchange19charge_withdraw_feeEym (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	$3 = [0]
	*(($7 + [64])) = [0]
	*($7 + [48]) = (int_64)-1
	*($7 + [56]) = (int_64)0
	$4 = *($0)
	*($7 + [32]) = $4
	*($7 + [40]) = $4
	*($7 + [68]) = [0]
	$2 = CALL db_find_i64($4, $4, (int_64)-2039333636190596096, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $120(($7 + [32]), $2)
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)($7 + [32])), [288])
	CALL _ZN11walexchange12wal_exchange19charge_exchange_feeEymx($0, $1, *($2), *($2 + [8]))
	$3 = *($7 + [56])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *(($0 + [136]))
	$5 = *($0 + [128])
	*($7 + [24]) = ($7 + [32])
	*($7 + [8]) = $4
	*($7) = (uint_64)$5 >> (uint_64)(int_64)8)
	CALL $295(($7 + [72]), ($7 + [24]), $7)
	$2 = *($7 + [76])
	if ( ($2 == 0) ){ goto $label$4 }
	$3 = ( $2 ? [0] : (int_64)(((int_64)((int_64)*($7) ^ (int_64)(uint_64)*(($2 + [16])) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($7 + [8]) ^ (int_64)*(($2 + [24])))) == 0) )
	
.LABEL $label$4
	CALL _ZN11walexchange12wal_exchange19charge_exchange_feeEymx($0, $1, *($3), *($3 + [8]))
	$3 = *($7 + [56])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($7 + [60])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	CALL $738($2)
	
.LABEL $label$8
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($7 + [56]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $3
	
.LABEL $label$5
	*($6) = $3
	CALL $738($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

void .FUNC _ZN11walexchange12wal_exchange10undelegateEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL require_auth(*(($0 + [200])))
	*($3 + [8]) = $1
	*($3) = *($0)
	CALL _ZN11walexchange11rex_manager10undelegateEy($3, $2)
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $292 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$7 = ( $6 ? $8 : ($8 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	*(($8 = ($6 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $737([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $88(($8 + [28]), [16])
	$2 = *($8 + [28])
	$1 = (*($2) - $2)
	CALL eosio_assert(((int_32)$1 > (int_32)[7]), [496])
	CALL memcpy($2, $4, [8])
	CALL eosio_assert(((int_32)($1 + [-8]) > (int_32)[7]), [496])
	CALL memcpy(($2 + [8]), ($4 + [8]), [8])
	$3 = ($6 + ((int_32)$7 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$6 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($7 = ($8 + [-16]))) = [0]
	$4 = ($2 + [-4])
	*($1) = *($4)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($7) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($4) = (int_64)0
	*(($7 = ($8 + [-4]))) = [0]
	$4 = ($2 + [8])
	*($1) = *($4)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($7) = *($1)
	*($1) = [0]
	*($4) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $6) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$7 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$7 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$8 }
	$1 = ([0] - $7)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $738($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $738($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($7 == 0) ){ goto $label$12 }
	CALL $738($7)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $727 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $101($0, ($1 + [32]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $620 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	*(($2 = $3) + [44]) = $0
	*($2 + [32]) = *($1)
	*($2 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [24])) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [56]) = ($1 + $0)
	*($2 + [48]) = $1
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [544])
	CALL memcpy(($2 + [8]), $1, [8])
	*($2 + [52]) = ($1 + [8])
	CALL $101(($2 + [48]), (($2 + [8]) + [8]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [52]) = ($2 + [32])
	*($2 + [48]) = ($2 + [44])
	CALL $715(($2 + [48]), ($2 + [8]))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $738(*(($2 + [24])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [64])
	return [1]
}

int_32 .FUNC $378 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [8]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4344997714595201024, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $380($0, $5)
	CALL eosio_assert(((int_32)*($6 + [8]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $379 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC _ZN6abieos19string_to_signatureENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	$2 = *($1)
	$4 = [0]
	$1 = *($1 + [4])
	$3 = ($1 <= [7])
	if ( $3 ){ goto $label$1 }
	if ( ((int_32)CALL strlen([10160]) != (int_32)[7]) ){ goto $label$3 }
	if ( (CALL memcmp($2, [10160], [7]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((int_32)CALL strlen([10176]) != (int_32)[7]) ){ goto $label$1 }
	$4 = (CALL memcmp($2, [10176], [7]) == 0)
	goto $label$1 
	
.LABEL $label$2
	$4 = [1]
	
.LABEL $label$1
	CALL eosio_assert($4, [10192])
	$4 = ( $1 ? [7] : $3 )
	if ( ((int_32)$4 != (int_32)CALL strlen([10160])) ){ goto $label$7 }
	if ( ($4 == 0) ){ goto $label$6 }
	if ( (CALL memcmp($2, [10160], $4) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ((uint_32)$1 <= (uint_32)[6]) ){ goto $label$4 }
	*($5 + [20]) = ($1 + [-7])
	*($5 + [16]) = ($2 + [7])
	*($5 + [8 align=4]) = *($5 + [16])
	CALL $549(($5 + [24]), ($5 + [8]))
	*($0) = [1]
	CALL memcpy(CALL $fimport$49(($0 + [1]), [0], [65]), ($5 + [24]), [65])
	goto $label$5 
	
.LABEL $label$6
	if ( ((uint_32)$1 <= (uint_32)[6]) ){ goto $label$4 }
	*($5 + [20]) = ($1 + [-7])
	*($5 + [16]) = ($2 + [7])
	*($5) = *($5 + [16])
	CALL $549(($5 + [24]), $5)
	*($0) = [0]
	CALL memcpy(CALL $fimport$49(($0 + [1]), [0], [65]), ($5 + [24]), [65])
	
.LABEL $label$5
	*([0] + [4]) = ($5 + [96])
	return (unreachable)
	
.LABEL $label$4
	CALL abort()
}

void .FUNC _ZN11walexchange12wal_exchange8rmadlistEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL require_auth($1)
	*($6 + [40]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($6 + [40]), $1, [1])
	$2 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($6 + [40]), $2, [0])
	*(($6 + [32])) = [0]
	*($6 + [8]) = $1
	*($6 + [16]) = (int_64)-1
	*($6 + [24]) = (int_64)0
	*($6) = *($0)
	CALL $374($6, CALL $373($6, $2, [6592]))
	$3 = *($6 + [24])
	if ( ($3 == 0) ){ goto $label$1 }
	$5 = ($6 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $738($4)
	
.LABEL $label$5
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($6 + [24]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $3
	
.LABEL $label$2
	*($5) = $3
	CALL $738($0)
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [48])
}

int_32 .FUNC $373 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [8]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-5914951336277429760, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $174($0, $5)
	CALL eosio_assert(((int_32)*($6 + [8]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $370 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $366(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC _ZN11walexchange12wal_exchange9addadlistEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	*([0] + [4]) = $8
	CALL require_auth($1)
	*($8 + [56]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($8 + [56]), $1, [1])
	*($8 + [48]) = *($0)
	if ( (CALL $333(($8 + [48]), $2) == 0) ){ goto $label$2 }
	$7 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($8 + [56]), $2, [0])
	goto $label$1 
	
.LABEL $label$2
	$7 = CALL _ZN11walexchange24contract_account_manager25get_or_create_eos_accountEyh(($8 + [56]), $2, [5])
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$2 != (int_64)$1), [6560])
	*(($5 = ($8 + [40]))) = [0]
	*($8 + [16]) = $1
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$1 = *($0)
	*($8 + [8]) = $1
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([24])) + [8]) = ($8 + [8])
	*($0) = $7
	CALL eosio_assert([1], [496])
	CALL memcpy(($8 + [80]), $0, [8])
	$2 = *($0)
	$3 = CALL db_store_i64(*($8 + [16]), (int_64)-5914951336277429760, $1, $2, ($8 + [80]), [8])
	*($0 + [12]) = $3
	if ( (uint_64)($2 <= *($8 + [24])) ){ goto $label$3 }
	*(($8 + [24])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($8 + [72]) = $0
	$1 = *($0)
	*($8 + [80]) = $1
	*($8 + [68]) = $3
	$6 = ($8 + [36])
	$4 = *($6)
	if ( ((uint_32)$4 >= (uint_32)*($5)) ){ goto $label$5 }
	*($4 + [8]) = $1
	*($4 + [16]) = $3
	*($8 + [72]) = [0]
	*($4) = $0
	*($6) = ($4 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $177(($8 + [32]), ($8 + [72]), ($8 + [80]), ($8 + [68]))
	
.LABEL $label$4
	$0 = *($8 + [72])
	*($8 + [72]) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL $738($0)
	
.LABEL $label$6
	$3 = *($8 + [32])
	if ( ($3 == 0) ){ goto $label$7 }
	$5 = ($8 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $738($4)
	
.LABEL $label$11
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($8 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $3
	
.LABEL $label$8
	*($5) = $3
	CALL $738($0)
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [96])
}

void .FUNC $376 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN11walexchange12wal_exchange11rmblackcoinEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$4 = *($0)
	*($6 + [8]) = $4
	*($6 + [16]) = $4
	CALL $379(($6 + [8]), CALL $378(($6 + [8]), $1, [6672]))
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$5 = ($6 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $738($3)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($6 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($5) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $374 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC _ZN11walexchange12wal_exchange12addblackcoinEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	CALL eosio_assert(CALL $fimport$46($1), [6624])
	*(($4 = ($7 + [40]))) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($0)
	*($7 + [8]) = $5
	*($7 + [16]) = $5
	CALL eosio_assert(((int_64)$5 == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([24])) + [8]) = ($7 + [8])
	*($0) = $1
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 + [64]), $0, [8])
	$1 = *($0)
	$2 = CALL db_store_i64(*($7 + [16]), (int_64)4344997714595201024, $5, $1, ($7 + [64]), [8])
	*($0 + [12]) = $2
	if ( (uint_64)($1 <= *($7 + [24])) ){ goto $label$2 }
	*(($7 + [24])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($7 + [56]) = $0
	$5 = *($0)
	*($7 + [64]) = $5
	*($7 + [52]) = $2
	$6 = ($7 + [36])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*($4)) ){ goto $label$4 }
	*($3 + [8]) = $5
	*($3 + [16]) = $2
	*($7 + [56]) = [0]
	*($3) = $0
	*($6) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $376(($7 + [32]), ($7 + [56]), ($7 + [64]), ($7 + [52]))
	
.LABEL $label$3
	$0 = *($7 + [56])
	*($7 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	CALL $738($0)
	
.LABEL $label$5
	$2 = *($7 + [32])
	if ( ($2 == 0) ){ goto $label$6 }
	$4 = ($7 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	CALL $738($3)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$9 }
	$0 = *(($7 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$0 = $2
	
.LABEL $label$7
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [80])
}

int_32 .FUNC $626 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [160])
	*([0] + [4]) = $3
	*(($2 = $3) + [124]) = $0
	*($2 + [112]) = *($1)
	*($2 + [116]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [36])) = [0]
	*(($2 + [40])) = [0]
	*($2 + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = [0]
	CALL memset(($2 + [44]), [0], [66])
	*($2 + [132]) = $1
	*($2 + [128]) = $1
	*($2 + [136]) = ($1 + $0)
	*($2 + [144]) = ($2 + [128])
	*($2 + [152]) = ($2 + [8])
	CALL $711(($2 + [152]), ($2 + [144]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [132]) = ($2 + [112])
	*($2 + [128]) = ($2 + [124])
	CALL $712(($2 + [128]), ($2 + [8]))
	if ( ((*($2 + [32]) & [1]) == 0) ){ goto $label$5 }
	CALL $738(*(($2 + [40])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [160])
	return [1]
}

void .FUNC $290 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = *([0] + [4])
	$12 = $13
	$10 = *($0 + [4])
	*($1) = *(*($10))
	$2 = *($0)
	*($1 + [8]) = *(*($10) + [24])
	$11 = *($10)
	$4 = *($11 + [40])
	$10 = CALL $267(*($10 + [4]), *($11 + [32]), [592])
	$6 = *(($10 + [16]))
	$5 = *($10 + [8])
	CALL eosio_assert((uint_64)(((int_64)$4 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$9 = (uint_64)$5 >> (uint_64)(int_64)8)
	$3 = ($1 + [8])
	$10 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$11 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$11 = [0]
	
.LABEL $label$1
	CALL eosio_assert($11, [2832])
	*(($7 = ($1 + [24]))) = $5
	*($1 + [16]) = $4
	*(($8 = ($1 + [32]))) = $6
	$10 = $13
	$11 = ($10 + [-48])
	*([0] + [4]) = $11
	CALL eosio_assert([1], [496])
	CALL memcpy($11, $1, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 + [-40]), $3, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 + [-32]), ($1 + [16]), [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 + [-24]), $7, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 + [-16]), $8, [8])
	$9 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($2 + [8]), (int_64)-4420672007217230400, *(*($0 + [8])), $9, $11, [40])
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = $12
}

int_32 .FUNC $627 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [1120])
	$8 = $9
	*([0] + [4]) = $9
	$3 = *($1 + [4])
	$7 = *($1)
	$1 = [0]
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($4)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $4)
	
.LABEL $label$1
	*($8 + [224]) = [0]
	*($8 + [216]) = (int_64)0
	*($8 + [232]) = (int_64)0
	CALL memset(($8 + [244]), [0], [36])
	*($8 + [240]) = [0]
	$9 = CALL memset(($8 + [280]), [0], [66])
	CALL memset(($8 + [352]), [0], [36])
	*($8 + [348]) = [0]
	$2 = CALL memset(($8 + [388]), [0], [66])
	*($8 + [1012]) = $1
	*($8 + [1008]) = $1
	*($8 + [1016]) = ($1 + $4)
	*($8 + [824]) = ($8 + [1008])
	*($8 + [896]) = ($8 + [216])
	CALL $709(($8 + [896]), ($8 + [824]))
	if ( ($4 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$6 = *(($8 + [232]))
	$4 = *(($8 + [224]))
	$5 = *($8 + [216])
	CALL memcpy(($8 + [632]), ($8 + [240]), [40])
	CALL memcpy(($8 + [566]), $9, [66])
	CALL memcpy(($8 + [524]), ($8 + [348]), [40])
	CALL memcpy(($8 + [458]), $2, [66])
	CALL memcpy(($8 + [824]), ($8 + [458]), [66])
	CALL memcpy(($8 + [784]), ($8 + [524]), [40])
	CALL memcpy(($8 + [712]), ($8 + [566]), [66])
	CALL memcpy(($8 + [672]), ($8 + [632]), [40])
	$1 = ($0 + int_32($3 >> [1]))
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$7 = *((*($1) + $7))
	
.LABEL $label$5
	CALL memcpy(($8 + [1080]), ($8 + [672]), [40])
	CALL memcpy(($8 + [1008]), ($8 + [712]), [66])
	CALL memcpy(($8 + [968]), ($8 + [784]), [40])
	CALL memcpy(($8 + [896]), ($8 + [824]), [66])
	CALL memcpy(($8 + [176]), ($8 + [1080]), [40])
	CALL memcpy(($8 + [110]), ($8 + [1008]), [66])
	CALL memcpy(($8 + [68]), ($8 + [968]), [40])
	CALL memcpy(($8 + [2]), ($8 + [896]), [66])
	CALL void $1((int_32 $5), (int_64 $4), (int_32 $6), (int_64 ($8 + [176])), (int_32 ($8 + [110])), (int_32 ($8 + [68])), (int_32 ($8 + [2])), (int_32 $7))
	*([0] + [4]) = ($8 + [1120])
	return [1]
}

int_32 .FUNC $628 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [416])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($6 + [80]) = (int_64)0
	CALL memset(($6 + [92]), [0], [36])
	*($6 + [88]) = [0]
	CALL memset(($6 + [132]), [0], [36])
	*($6 + [168]) = [0]
	*($6 + [128]) = [0]
	*($6 + [380]) = $1
	*($6 + [376]) = $1
	*($6 + [384]) = ($1 + $3)
	*($6 + [296]) = ($6 + [376])
	*($6 + [336]) = ($6 + [80])
	CALL $708(($6 + [336]), ($6 + [296]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$4 = *($6 + [80])
	CALL memcpy(($6 + [216]), ($6 + [88]), [40])
	CALL memcpy(($6 + [176]), ($6 + [128]), [40])
	$3 = *(($6 + [168]))
	CALL memcpy(($6 + [296]), ($6 + [176]), [40])
	CALL memcpy(($6 + [256]), ($6 + [216]), [40])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL memcpy(($6 + [376]), ($6 + [256]), [40])
	CALL memcpy(($6 + [336]), ($6 + [296]), [40])
	CALL memcpy(($6 + [40]), ($6 + [376]), [40])
	$6 = CALL memcpy($6, ($6 + [336]), [40])
	CALL void $1((int_32 $4), (int_64 ($6 + [40])), (int_32 $6), (int_32 ((int_32)($3 & [255]) != (int_32)[0])), (int_32 $5))
	*([0] + [4]) = ($6 + [416])
	return [1]
}

void .FUNC _ZN11walexchange12wal_exchange7bindeosEyy9signature (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [208])
	*([0] + [4]) = $12
	CALL require_auth($1)
	*($12 + [96]) = *($0)
	if ( (CALL $333(($12 + [96]), $1) == 0) ){ goto $label$1 }
	CALL eosio_assert(((int_64)$1 == (int_64)$2), [9936])
	
.LABEL $label$1
	$7 = *($0)
	*($12 + [88]) = $7
	CALL eosio_assert(((int_32)CALL $541(($12 + [88]), $1) ^ (int_32)[1]), [10000])
	$8 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($12 + [88]), $2, [0])
	*(($9 = ($12 + [136]))) = [0]
	*($12 + [112]) = $7
	*($12 + [104]) = $7
	*($12 + [120]) = (int_64)-1
	*($12 + [128]) = (int_64)0
	*($12 + [140]) = [0]
	$4 = CALL $11(($12 + [104]), $8, [592])
	$5 = *($12 + [128])
	if ( ($5 == 0) ){ goto $label$2 }
	$10 = ($12 + [132])
	$11 = *($10)
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	$11 = ($11 + [-24])
	$6 = *($11)
	*($11) = [0]
	if ( ($6 == 0) ){ goto $label$6 }
	CALL $738($6)
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)$11) ){ goto $label$5 }
	$11 = *(($12 + [128]))
	goto $label$3 
	
.LABEL $label$4
	$11 = $5
	
.LABEL $label$3
	*($10) = $5
	CALL $738($11)
	
.LABEL $label$2
	*($9) = [0]
	*($12 + [128]) = (int_64)0
	*($12 + [120]) = (int_64)-1
	$7 = *($0)
	*($12 + [104]) = $7
	*($12 + [112]) = $7
	$11 = CALL $526(($12 + [104]), *($4), [592])
	CALL memset((($12 + [48]) | [4]), [0], [36])
	*($12 + [48]) = [0]
	CALL eosio_assert(CALL $347(($11 + [8]), ($12 + [48])), [10032])
	CALL eosio_assert(((int_32)CALL $fimport$46(*($4 + [16])) ^ (int_32)[1]), [10064])
	*($12 + [176]) = $1
	CALL $56(($12 + [16]), ($12 + [176]))
	$6 = CALL $745(($12 + [16]), [1648])
	$5 = ($6 + [8])
	*((($12 + [48]) + [8])) = *($5)
	*($12 + [48]) = *($6)
	*($6) = [0]
	*(($6 + [4])) = [0]
	*($5) = [0]
	*($12 + [200]) = $2
	CALL $56(($12 + [144]), ($12 + [200]))
	$6 = *($12 + [144])
	$5 = ($6 & [1])
	$6 = CALL $744(($12 + [48]), ( *($12 + [152]) ? (($12 + [144]) | [1]) : $5 ), ( *($12 + [148]) ? uint_32($6 >> [1]) : $5 ))
	$5 = ($6 + [8])
	*(($12 + [8])) = *($5)
	*($12) = *($6)
	*($6) = [0]
	*(($6 + [4])) = [0]
	*($5) = [0]
	if ( ((*($12 + [144]) & [1]) == 0) ){ goto $label$7 }
	CALL $738(*((($12 + [144]) + [8])))
	
.LABEL $label$7
	if ( ((*($12 + [48]) & [1]) == 0) ){ goto $label$8 }
	CALL $738(*($12 + [56]))
	
.LABEL $label$8
	if ( ((*($12 + [16]) & [1]) == 0) ){ goto $label$9 }
	CALL $738(*($12 + [24]))
	
.LABEL $label$9
	$6 = *($12)
	$5 = ($6 & [1])
	CALL sha256(( *($12 + [8]) ? ($12 | [1]) : $5 ), ( *($12 + [4]) ? uint_32($6 >> [1]) : $5 ), ($12 + [16]))
	*($12 + [48]) = *(($11 + [8]))
	CALL memcpy((($12 + [48]) | [1]), ($11 + [12]), [33])
	CALL assert_recover_key(($12 + [16]), $3, [66], ($12 + [48]), [34])
	*(($12 + [80])) = [0]
	*($12 + [64]) = (int_64)-1
	*($12 + [72]) = (int_64)0
	$2 = *($0)
	*($12 + [48]) = $2
	*($12 + [56]) = $2
	*($12 + [84]) = [0]
	$11 = [0]
	$6 = CALL db_find_i64($2, $2, (int_64)-2067973376676056576, *($4))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$10 }
	$11 = CALL $12(($12 + [48]), $6)
	CALL eosio_assert(((int_32)*($11 + [32]) == (int_32)($12 + [48])), [288])
	
.LABEL $label$10
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [1328])
	CALL eosio_assert(((int_32)*($11 + [32]) == (int_32)($12 + [48])), [848])
	CALL eosio_assert(((int_64)*($12 + [48]) == (int_64)CALL $fimport$16()), [896])
	$6 = ($11 + [16])
	$2 = *($6)
	*($6) = $1
	$5 = ($11 + [8])
	*($12 + [176]) = *($5)
	*($12 + [184]) = $2
	$1 = *($11)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($12 + [144]), $11, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($12 + [144]) | [8]), $5, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($12 + [144]) + [16]), $6, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($12 + [144]) + [24]), ($11 + [24]), [1])
	CALL db_update_i64(*($11 + [36]), (int_64)0, ($12 + [144]), [25])
	$0 = (($12 + [48]) + [16])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$11 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	$0 = (($12 + [176]) + [8])
	*($12 + [200]) = *($5)
	if ( (CALL memcmp(($12 + [176]), ($12 + [200]), [8]) == 0) ){ goto $label$12 }
	$4 = ($11 + [40])
	$5 = *($4)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$13 }
	$5 = CALL db_idx64_find_primary(*($12 + [48]), *(($12 + [56])), (int_64)-2067973376676056576, ($12 + [192]), $1)
	*($4) = $5
	
.LABEL $label$13
	CALL db_idx64_update($5, (int_64)0, ($12 + [200]))
	
.LABEL $label$12
	*($12 + [200]) = *($6)
	if ( (CALL memcmp($0, ($12 + [200]), [8]) == 0) ){ goto $label$14 }
	$6 = ($11 + [44])
	$11 = *($6)
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$15 }
	$11 = CALL db_idx64_find_primary(*($12 + [48]), *(($12 + [56])), (int_64)-2067973376676056575, ($12 + [192]), $1)
	*($6) = $11
	
.LABEL $label$15
	CALL db_idx64_update($11, (int_64)0, ($12 + [200]))
	
.LABEL $label$14
	$5 = *($12 + [72])
	if ( ($5 == 0) ){ goto $label$16 }
	$0 = ($12 + [76])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$18 }
	
.LOOP $label$19:
	$11 = ($11 + [-24])
	$6 = *($11)
	*($11) = [0]
	if ( ($6 == 0) ){ goto $label$20 }
	CALL $738($6)
	
.LABEL $label$20
	if ( ((int_32)$5 != (int_32)$11) ){ goto $label$19 }
	$11 = *(($12 + [72]))
	goto $label$17 
	
.LABEL $label$18
	$11 = $5
	
.LABEL $label$17
	*($0) = $5
	CALL $738($11)
	
.LABEL $label$16
	if ( ((*($12) & [1]) == 0) ){ goto $label$21 }
	CALL $738(*(($12 + [8])))
	
.LABEL $label$21
	$5 = *($12 + [128])
	if ( ($5 == 0) ){ goto $label$22 }
	$0 = ($12 + [132])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$24 }
	
.LOOP $label$25:
	$11 = ($11 + [-24])
	$6 = *($11)
	*($11) = [0]
	if ( ($6 == 0) ){ goto $label$26 }
	CALL $738($6)
	
.LABEL $label$26
	if ( ((int_32)$5 != (int_32)$11) ){ goto $label$25 }
	$11 = *(($12 + [128]))
	goto $label$23 
	
.LABEL $label$24
	$11 = $5
	
.LABEL $label$23
	*($0) = $5
	CALL $738($11)
	
.LABEL $label$22
	*([0] + [4]) = ($12 + [208])
}

void .FUNC $543 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC _ZN11walexchange12wal_exchange12setstakefactEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($0 + [176])) = $1
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$3 = *($0)
	*($5 + [8]) = $3
	*($5 + [16]) = $3
	CALL $552(($5 + [8]), ($0 + [128]), $3)
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $738($1)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange12setstaketimeEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($0 + [180])) = $1
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$3 = *($0)
	*($5 + [8]) = $3
	*($5 + [16]) = $3
	CALL $552(($5 + [8]), ($0 + [128]), $3)
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $738($1)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange12setstakeacctEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(CALL $fimport$46($1), [10336])
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($0 + [184])) = $1
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$1 = *($0)
	*($5 + [8]) = $1
	*($5 + [16]) = $1
	CALL $552(($5 + [8]), ($0 + [128]), $1)
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $738($3)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange11uptwhiteoutEyb (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	$4 = [0]
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($0)
	*($7 + [8]) = $5
	*($7 + [16]) = $5
	$3 = CALL db_find_i64($5, $5, (int_64)-2063328869057822720, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $129(($7 + [8]), $3)
	CALL eosio_assert(((int_32)*($4 + [8]) == (int_32)($7 + [8])), [288])
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$5 }
	$0 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($0, [10096])
	CALL eosio_assert($0, [736])
	CALL eosio_assert($0, [784])
	$0 = CALL db_next_i64(*($4 + [12]), ($7 + [64]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	CALL $129(($7 + [8]), $0)
	
.LABEL $label$6
	CALL $543(($7 + [8]), $4)
	$2 = *($7 + [32])
	if ( $2 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert(($4 == 0), [10128])
	$6 = *($0)
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([24])) + [8]) = ($7 + [8])
	*($0) = $1
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 + [64]), $0, [8])
	$5 = *($0)
	$2 = CALL db_store_i64(*((($7 + [8]) + [8])), (int_64)-2063328869057822720, $6, $5, ($7 + [64]), [8])
	*($0 + [12]) = $2
	$4 = ($7 + [24])
	if ( (uint_64)($5 <= *($4)) ){ goto $label$7 }
	*($4) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($7 + [56]) = $0
	$5 = *($0)
	*($7 + [64]) = $5
	*($7 + [52]) = $2
	$3 = ($7 + [36])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($7 + [40]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $2
	*($7 + [56]) = [0]
	*($4) = $0
	*($3) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $135(($7 + [32]), ($7 + [56]), ($7 + [64]), ($7 + [52]))
	
.LABEL $label$8
	$0 = *($7 + [56])
	*($7 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $738($0)
	
.LABEL $label$10
	$2 = *($7 + [32])
	if ( ($2 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$3 = ($7 + [36])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$14 }
	CALL $738($4)
	
.LABEL $label$14
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$13 }
	$0 = *(($7 + [32]))
	goto $label$11 
	
.LABEL $label$12
	$0 = $2
	
.LABEL $label$11
	*($3) = $2
	CALL $738($0)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [80])
}

void .FUNC _ZN11walexchange12wal_exchange10setexptimeEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($0 + [196])) = $1
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$3 = *($0)
	*($5 + [8]) = $3
	*($5 + [16]) = $3
	CALL $552(($5 + [8]), ($0 + [128]), $3)
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $738($1)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange12setvalidatorEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(CALL $fimport$46($1), [10368])
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($0 + [200])) = $1
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$1 = *($0)
	*($5 + [8]) = $1
	*($5 + [16]) = $1
	CALL $552(($5 + [8]), ($0 + [128]), $1)
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $738($3)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange12setconfirmorEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(CALL $fimport$46($1), [10400])
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($0 + [208])) = $1
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$1 = *($0)
	*($5 + [8]) = $1
	*($5 + [16]) = $1
	CALL $552(($5 + [8]), ($0 + [128]), $1)
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $738($3)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange11setexecutorEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(CALL $fimport$46($1), [10432])
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($0 + [216])) = $1
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$1 = *($0)
	*($5 + [8]) = $1
	*($5 + [16]) = $1
	CALL $552(($5 + [8]), ($0 + [128]), $1)
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $738($3)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange11setsettingsEttttttmmb (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9)
{
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [64])
	*([0] + [4]) = $11
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	CALL eosio_assert((((int_32)$6 != (int_32)[0]) & ((((((int_32)$1 != (int_32)[0]) & ((int_32)$2 != (int_32)[0])) & ((int_32)$3 != (int_32)[0])) & ((int_32)$4 != (int_32)[0])) & ((int_32)$5 != (int_32)[0]))), [10464])
	*(($11 + [56])) = [0]
	*($11 + [40]) = (int_64)-1
	*($11 + [48]) = (int_64)0
	$10 = *($0)
	*($11 + [24]) = $10
	*($11 + [32]) = $10
	*($11 + [2]) = $2
	*($11) = $1
	*($11 + [4]) = $3
	*($11 + [6]) = $4
	*($11 + [8]) = $3
	*($11 + [10]) = $6
	*($11 + [12]) = $7
	*($11 + [16]) = $8
	*($11 + [20]) = $9
	CALL $553(($11 + [24]), $11, $10)
	$1 = *($11 + [48])
	if ( ($1 == 0) ){ goto $label$2 }
	$2 = ($11 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL $738($0)
	
.LABEL $label$6
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$5 }
	$3 = *(($11 + [48]))
	goto $label$3 
	
.LABEL $label$4
	$3 = $1
	
.LABEL $label$3
	*($2) = $1
	CALL $738($3)
	
.LABEL $label$2
	*([0] + [4]) = ($11 + [64])
}

void .FUNC _Z4joinRKNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEERKS6_ (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = (*($1 + [4]) - *($1))
	$3 = ((int_32)$5 / (int_32)[12])
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = ($2 + [1])
	$9 = [0]
	
.LOOP $label$2:
	if ( ($9 == 0) ){ goto $label$3 }
	$5 = *($2)
	$6 = ($5 & [1])
	CALL $744($0, ( *(($2 + [8])) ? $4 : $6 ), ( *(($2 + [4])) ? uint_32($5 >> [1]) : $6 ))
	
.LABEL $label$3
	$6 = *($5)
	$7 = ($6 & [1])
	$5 = (*($1) + $8)
	CALL $744($0, ( *(($5 + [8])) ? ($5 + [1]) : $7 ), ( *(($5 + [4])) ? uint_32($6 >> [1]) : $7 ))
	$8 = ($8 + [12])
	$9 = ($9 + [1])
	if ( ($9 <= $3) ){ goto $label$2 }
	
.LABEL $label$1
}

void .FUNC _ZN11walexchange12wal_exchange11batchrefundEy (int_32 $0, int_64 $1)
{
	CALL eosio_assert([0], [8384])
}

void .FUNC $472 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [32]), [8])
	$1 = (*($3 + [4]) + [8])
	*($3 + [4]) = $1
	CALL eosio_assert(((int_32)(*($3 + [8]) - $1) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [40]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC _ZN11walexchange11rex_manager18del_ext_symbol_mapEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	*(($5 + [32])) = [0]
	*($5 + [16]) = (int_64)-1
	*($5 + [24]) = (int_64)0
	$3 = *($0)
	*($5) = $3
	*($5 + [8]) = $3
	$0 = [0]
	$1 = CALL db_find_i64($3, $3, (int_64)6301537847124725072, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $187($5, $1)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)$5), [288])
	
.LABEL $label$1
	$1 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($1, [8656])
	CALL eosio_assert($1, [736])
	CALL eosio_assert($1, [784])
	$1 = CALL db_next_i64(*($0 + [20]), ($5 + [40]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	CALL $187($5, $1)
	
.LABEL $label$2
	CALL $476($5, $0)
	$2 = *($5 + [24])
	if ( ($2 == 0) ){ goto $label$3 }
	$4 = ($5 + [28])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $738($1)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($5 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($4) = $2
	CALL $738($0)
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN11walexchange12wal_exchange10refundbackEyyb (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	CALL eosio_assert([0], [8384])
}

void .FUNC _ZN11walexchange11rex_manager18add_ext_symbol_mapEN5eosio11symbol_typeEyS2_ymt (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6)
{
}

void .FUNC $476 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$2 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$6 = *($1)
	$3 = ([0] - $2)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(*($8)) == (int_32)$6) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$2), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*(($1 + [20])))
}

int_32 .FUNC $231 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [32]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $679 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [40]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	*($4 + [8]) = $0
	CALL $681(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $551 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [512])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [36]) = $4
	*($7 + [32]) = $4
	*($7 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($5 = CALL $737([112])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [96]) = $0
	CALL $562(($7 + [32]), $5)
	*($5 + [100]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)4982871454518345728
	$6 = *($5 + [100])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)4982871454518345728
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $561(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
	return $5
}

void .FUNC $677 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [272])
	*([0] + [4]) = $3
	CALL $101(*($1), (*($0) + [212]))
	$0 = *($0)
	*($3) = *($1)
	*($3 + [12]) = ($0 + [225])
	*($3 + [8]) = ($0 + [224])
	*($3 + [16]) = ($0 + [226])
	*($3 + [20]) = ($0 + [227])
	*($3 + [24]) = ($0 + [228])
	*($3 + [28]) = ($0 + [229])
	*($3 + [32]) = ($0 + [230])
	*($3 + [36]) = ($0 + [231])
	*($3 + [40]) = ($0 + [232])
	*($3 + [44]) = ($0 + [233])
	*($3 + [48]) = ($0 + [234])
	*($3 + [52]) = ($0 + [235])
	*($3 + [56]) = ($0 + [236])
	*($3 + [60]) = ($0 + [237])
	*($3 + [64]) = ($0 + [238])
	*($3 + [68]) = ($0 + [239])
	*($3 + [72]) = ($0 + [240])
	*($3 + [76]) = ($0 + [241])
	*($3 + [80]) = ($0 + [242])
	*($3 + [84]) = ($0 + [243])
	*($3 + [88]) = ($0 + [244])
	*($3 + [92]) = ($0 + [245])
	*($3 + [96]) = ($0 + [246])
	*($3 + [100]) = ($0 + [247])
	*($3 + [104]) = ($0 + [248])
	*($3 + [108]) = ($0 + [249])
	*($3 + [112]) = ($0 + [250])
	*($3 + [116]) = ($0 + [251])
	*($3 + [120]) = ($0 + [252])
	*($3 + [124]) = ($0 + [253])
	*($3 + [128]) = ($0 + [254])
	*($3 + [132]) = ($0 + [255])
	*($3 + [136]) = ($0 + [256])
	*($3 + [140]) = ($0 + [257])
	*($3 + [144]) = ($0 + [258])
	*($3 + [148]) = ($0 + [259])
	*($3 + [152]) = ($0 + [260])
	*($3 + [156]) = ($0 + [261])
	*($3 + [160]) = ($0 + [262])
	*($3 + [164]) = ($0 + [263])
	*($3 + [168]) = ($0 + [264])
	*($3 + [172]) = ($0 + [265])
	*($3 + [176]) = ($0 + [266])
	*($3 + [180]) = ($0 + [267])
	*($3 + [184]) = ($0 + [268])
	*($3 + [188]) = ($0 + [269])
	*($3 + [192]) = ($0 + [270])
	*($3 + [196]) = ($0 + [271])
	*($3 + [200]) = ($0 + [272])
	*($3 + [204]) = ($0 + [273])
	*($3 + [208]) = ($0 + [274])
	*($3 + [212]) = ($0 + [275])
	*($3 + [216]) = ($0 + [276])
	*($3 + [220]) = ($0 + [277])
	*($3 + [224]) = ($0 + [278])
	*($3 + [228]) = ($0 + [279])
	*($3 + [232]) = ($0 + [280])
	*($3 + [236]) = ($0 + [281])
	*($3 + [240]) = ($0 + [282])
	*($3 + [244]) = ($0 + [283])
	*($3 + [248]) = ($0 + [284])
	*($3 + [252]) = ($0 + [285])
	*($3 + [256]) = ($0 + [286])
	*($3 + [260]) = ($0 + [287])
	*($3 + [264]) = ($0 + [288])
	*($3 + [268]) = ($0 + [289])
	CALL $669(($3 + [8]), $3)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($0 + [290]), *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [296]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	*($3 + [8]) = $0
	CALL $678(($3 + [8]), $1)
	*([0] + [4]) = ($3 + [272])
}

void .FUNC $676 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [192]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [200]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($2 + [208]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($2 + [210]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	*($4 + [8]) = $2
	CALL $677(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $675 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($3 + [162]), *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [168]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [176]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [184]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	*($4 + [8]) = $2
	CALL $676(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $674 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [272])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($2 + [80]), *($3 + [4]), [2])
	*($3 + [4]) = (*($3 + [4]) + [2])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($3 + [82]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	CALL $101(*($1), ($3 + [84]))
	*($4) = *($1)
	*($4 + [12]) = ($3 + [97])
	*($4 + [8]) = ($3 + [96])
	*($4 + [16]) = ($3 + [98])
	*($4 + [20]) = ($3 + [99])
	*($4 + [24]) = ($3 + [100])
	*($4 + [28]) = ($3 + [101])
	*($4 + [32]) = ($3 + [102])
	*($4 + [36]) = ($3 + [103])
	*($4 + [40]) = ($3 + [104])
	*($4 + [44]) = ($3 + [105])
	*($4 + [48]) = ($3 + [106])
	*($4 + [52]) = ($3 + [107])
	*($4 + [56]) = ($3 + [108])
	*($4 + [60]) = ($3 + [109])
	*($4 + [64]) = ($3 + [110])
	*($4 + [68]) = ($3 + [111])
	*($4 + [72]) = ($3 + [112])
	*($4 + [76]) = ($3 + [113])
	*($4 + [80]) = ($3 + [114])
	*($4 + [84]) = ($3 + [115])
	*($4 + [88]) = ($3 + [116])
	*($4 + [92]) = ($3 + [117])
	*($4 + [96]) = ($3 + [118])
	*($4 + [100]) = ($3 + [119])
	*($4 + [104]) = ($3 + [120])
	*($4 + [108]) = ($3 + [121])
	*($4 + [112]) = ($3 + [122])
	*($4 + [116]) = ($3 + [123])
	*($4 + [120]) = ($3 + [124])
	*($4 + [124]) = ($3 + [125])
	*($4 + [128]) = ($3 + [126])
	*($4 + [132]) = ($3 + [127])
	*($4 + [136]) = ($3 + [128])
	*($4 + [140]) = ($3 + [129])
	*($4 + [144]) = ($3 + [130])
	*($4 + [148]) = ($3 + [131])
	*($4 + [152]) = ($3 + [132])
	*($4 + [156]) = ($3 + [133])
	*($4 + [160]) = ($3 + [134])
	*($4 + [164]) = ($3 + [135])
	*($4 + [168]) = ($3 + [136])
	*($4 + [172]) = ($3 + [137])
	*($4 + [176]) = ($3 + [138])
	*($4 + [180]) = ($3 + [139])
	*($4 + [184]) = ($3 + [140])
	*($4 + [188]) = ($3 + [141])
	*($4 + [192]) = ($3 + [142])
	*($4 + [196]) = ($3 + [143])
	*($4 + [200]) = ($3 + [144])
	*($4 + [204]) = ($3 + [145])
	*($4 + [208]) = ($3 + [146])
	*($4 + [212]) = ($3 + [147])
	*($4 + [216]) = ($3 + [148])
	*($4 + [220]) = ($3 + [149])
	*($4 + [224]) = ($3 + [150])
	*($4 + [228]) = ($3 + [151])
	*($4 + [232]) = ($3 + [152])
	*($4 + [236]) = ($3 + [153])
	*($4 + [240]) = ($3 + [154])
	*($4 + [244]) = ($3 + [155])
	*($4 + [248]) = ($3 + [156])
	*($4 + [252]) = ($3 + [157])
	*($4 + [256]) = ($3 + [158])
	*($4 + [260]) = ($3 + [159])
	*($4 + [264]) = ($3 + [160])
	*($4 + [268]) = ($3 + [161])
	CALL $669(($4 + [8]), $4)
	*($4 + [8]) = $3
	CALL $675(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [272])
}

void .FUNC $673 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [48]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [56]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [64]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [72]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($4 + [8]) = $2
	CALL $674(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $672 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_32 $22
	int_64 $23
	int_64 $24
	int_32 $25
	int_32 $26
	int_32 $27
	$27 = (*([0] + [4]) - [752])
	*([0] + [4]) = $27
	*((($27 + [352]) + [12])) = *(($1 + [20]))
	*(($25 = (($27 + [352]) + [8]))) = *(($1 + [16]))
	*($27 + [352]) = *($1 + [8])
	*($27 + [356]) = *(($1 + [12]))
	$2 = *($1)
	*(($26 = (($27 + [336]) + [8]))) = *(($1 + [32]))
	*($27 + [336]) = *($1 + [24])
	$9 = *($1 + [82])
	$8 = *($1 + [80])
	$7 = *($1 + [72])
	$6 = *($1 + [64])
	$5 = *($1 + [56])
	$4 = *($1 + [48])
	$3 = *($1 + [40])
	CALL $767(($27 + [320]), ($1 + [84]))
	CALL memcpy(($27 + [254]), ($1 + [96]), [66])
	$17 = *($1 + [210])
	$16 = *($1 + [208])
	$15 = *($1 + [200])
	$14 = *($1 + [192])
	$13 = *($1 + [184])
	$12 = *($1 + [176])
	$11 = *($1 + [168])
	$10 = *($1 + [162])
	CALL $767(($27 + [240]), ($1 + [212]))
	CALL memcpy(($27 + [174]), ($1 + [224]), [66])
	$24 = *($1 + [336])
	$23 = *($1 + [328])
	$22 = *($1 + [320])
	$21 = *($1 + [312])
	$20 = *($1 + [304])
	$19 = *($1 + [296])
	$18 = *($1 + [290])
	CALL memcpy(($27 + [472]), ($27 + [174]), [66])
	CALL memcpy(($27 + [400]), ($27 + [254]), [66])
	*((($27 + [384]) + [8])) = *($26)
	*((($27 + [368]) + [8])) = *($25)
	*($27 + [384]) = *($27 + [336])
	*($27 + [368]) = *($27 + [352])
	$1 = *($0 + [4])
	$25 = *($1 + [4])
	$0 = (*(*($0)) + int_32($25 >> [1]))
	$1 = *($1)
	if ( (($25 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($25 = (($27 + [736]) + [8]))) = *((($27 + [368]) + [8]))
	*(($26 = (($27 + [720]) + [8]))) = *((($27 + [384]) + [8]))
	*($27 + [736]) = *($27 + [368])
	*($27 + [720]) = *($27 + [384])
	CALL $767(($27 + [704]), ($27 + [320]))
	CALL memcpy(($27 + [632]), ($27 + [400]), [66])
	CALL $767(($27 + [616]), ($27 + [240]))
	CALL memcpy(($27 + [544]), ($27 + [472]), [66])
	*((($27 + [152]) + [8])) = *($25)
	*((($27 + [136]) + [8])) = *($26)
	*($27 + [152]) = *($27 + [736])
	*($27 + [136]) = *($27 + [720])
	CALL memcpy(($27 + [70]), ($27 + [632]), [66])
	CALL memcpy(($27 + [4]), ($27 + [544]), [66])
	CALL void $0((int_32 $2), (int_64 ($27 + [152])), (int_32 ($27 + [136])), (int_32 $3), (int_64 $4), (int_64 $5), (int_32 $6), (int_64 $7), (int_64 ($8 & [65535])), (int_32 ($9 & [65535])), (int_32 ($27 + [704])), (int_32 ($27 + [70])), (int_32 ($10 & [65535])), (int_32 $11), (int_64 $12), (int_64 $13), (int_32 $14), (int_64 $15), (int_64 ($16 & [65535])), (int_32 ($17 & [65535])), (int_32 ($27 + [616])), (int_32 ($27 + [4])), (int_32 ($18 & [65535])), (int_32 $19), (int_64 $20), (int_64 $21), (int_64 ((int_32)($22 & [255]) != (int_32)[0])), (int_32 $23), (int_64 $24), (int_64 $1))
	if ( ((*($27 + [616]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*($27 + [624]))
	
.LABEL $label$2
	if ( ((*($27 + [704]) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($27 + [712]))
	
.LABEL $label$3
	if ( ((*($27 + [240]) & [1]) == 0) ){ goto $label$4 }
	CALL $738(*($27 + [248]))
	
.LABEL $label$4
	if ( ((*($27 + [320]) & [1]) == 0) ){ goto $label$5 }
	CALL $738(*($27 + [328]))
	
.LABEL $label$5
	*([0] + [4]) = ($27 + [752])
}

void .FUNC $671 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [40]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	*($4 + [8]) = $0
	CALL $673(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $670 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [32]), *($1 + [4]), [8])
	$0 = (*($1 + [4]) + [8])
	*($1 + [4]) = $0
	CALL eosio_assert(((uint_32)(*($1 + [8]) - $0) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [40]), *($1 + [4]), [8])
	$0 = (*($1 + [4]) + [8])
	*($1 + [4]) = $0
	CALL eosio_assert(((uint_32)(*($1 + [8]) - $0) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [48]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC $273 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*($10 + [24]) = (int_64)0
	*($10 + [8]) = *(($2 + [8]))
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx128_lowerbound(*($8), *($8 + [8]), (int_64)-3020371202648571904, $10, ($10 + [24]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [24])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $278($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-3020371202648571904, $5))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [40])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [32])
}

void .FUNC $272 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $271 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $270 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [544])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $271(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $277 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
	$7 = *(($1 + [40]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-3020371202648571904, $9, *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx128_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $276 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [784])
	$6 = *($0 + [4])
	$7 = *($6 + [40])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx128_find_primary(*($7), *($7 + [8]), (int_64)-3020371202648571904, $9, *($6))
	*(*(($0 + [4])) + [40]) = $7
	
.LABEL $label$1
	*($9) = (int_64)0
	$1 = CALL db_idx128_next($7, $9)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9)
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$2), [288])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $278($2, CALL $fimport$19(*($2), *($2 + [8]), (int_64)-3020371202648571904, $3))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$2), [288])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [40])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $275 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $274 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$5 = *($4 + [16])
	if ( ((int_64)$5 != (int_64)-1) ){ goto $label$1 }
	$5 = (int_64)0
	$6 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-3020371202648571904, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $278($4, $6)
	*($9 + [4]) = [0]
	*($9) = $4
	$5 = *(*(CALL $280($9) + [4]))
	$5 = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $5
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($5 <= (int_64)-2), [2192])
	*($1) = *(($4 + [16]))
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	$5 = *(*($3 + [12]))
	*($1 + [24]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)0), [5520])
	$3 = $10
	$4 = ($3 + [-32])
	*([0] + [4]) = $4
	CALL eosio_assert([1], [496])
	CALL memcpy($4, $1, [8])
	CALL eosio_assert([1], [496])
	$10 = ($1 + [8])
	CALL memcpy(($3 + [-24]), $10, [8])
	CALL eosio_assert([1], [496])
	$6 = ($1 + [16])
	CALL memcpy(($3 + [-16]), $6, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($3 + [-8]), ($1 + [24]), [8])
	$5 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)-3020371202648571904, *(*($0 + [8])), $5, $4, [32])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$5 = *(($2 + [8]))
	$7 = *(*(($0 + [8])))
	$8 = *($1)
	*($9 + [8]) = *($10)
	*($9) = *($6)
	*($1 + [40]) = CALL db_idx128_store($5, (int_64)-3020371202648571904, $7, $8, $9)
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $279 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $278 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $737([48])) + [32]) = $0
	CALL $279(($8 + [32]), $6)
	*($6 + [40]) = [-1]
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $275(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_64 .FUNC strtoull (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [144])
	*([0] + [4]) = $4
	*($4 + [4]) = $0
	*($4 + [44]) = $0
	*($4) = [0]
	*($4 + [76]) = [-1]
	*($4 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL __shlim($4, (int_64)0)
	$3 = CALL __intscan($4, $2, [1], (int_64)-1)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + (CASTING uint_32)(uint_64 ((int_64)(CASTING uint_64)(uint_32 (*($4 + [4]) - *(($4 + [8])))) + (int_64)*($4 + [120]))))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [144])
	return $3
}

void .FUNC __shlim (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$2 = *($0 + [4])
	$3 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($3 - $2))
	*($0 + [120]) = $4
	*($0 + [104]) = ( ( ($2 + (CASTING uint_32)(uint_64 $1)) ? $3 : ((int_64)$4 > (int_64)$1) ) ? $3 : ((int_64)$1 != (int_64)0) )
}

int_32 .FUNC __lctrans_impl (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	$1 = CALL __mo_lookup(*($1), *($1 + [4]), $0)
	return ( $1 ? $0 : $1 )
	
.LABEL $label$1
	return ( [0] ? $0 : [0] )
}

int_32 .FUNC __mo_lookup (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = *($0)
	$10 = ((int_32)$3 == (int_32)[-1794895138])
	$9 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	$4 = *($0 + [8])
	$5 = ( $4 ? $9 : $10 )
	if ( ((uint_32)$5 >= (uint_32)uint_32($1 >> [2])) ){ goto $label$4 }
	$12 = ($1 - ($5 << [2]))
	$11 = *($0 + [12])
	$6 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$6 >= (uint_32)$12) ){ goto $label$3 }
	$11 = *($0 + [16])
	$10 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$10 >= (uint_32)$12) ){ goto $label$2 }
	if ( ((($10 | $6) & [3]) == 0) ){ goto $label$1 }
	return [0]
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	$12 = uint_32($6 >> [2])
	if ( ((int_32)$3 != (int_32)[-1794895138]) ){ goto $label$16 }
	$5 = uint_32($5 >> [1])
	$6 = ($5 << [1])
	$9 = ($0 + (($6 + $12) << [2]))
	$11 = *(($9 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$15 }
	$8 = *($9)
	if ( ((uint_32)$8 >= (uint_32)($1 - $11)) ){ goto $label$14 }
	$9 = $5
	$7 = [0]
	
.LOOP $label$17:
	if ( *(($0 + ($11 + $8))) ){ goto $label$9 }
	$11 = CALL strcmp($2, ($0 + $11))
	if ( ($11 == 0) ){ goto $label$11 }
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$7 }
	$13 = [0]
	$4 = ( $9 ? ($4 - $9) : $11 )
	$9 = uint_32($4 >> [1])
	$11 = ((int_32)$11 < (int_32)[0])
	$7 = ( $7 ? $5 : $11 )
	$5 = ($7 + $9)
	$6 = ($5 << [1])
	$8 = ($0 + (($6 + $12) << [2]))
	$11 = *(($8 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$10 }
	$8 = *($8)
	if ( ($8 <= ($1 - $11)) ){ goto $label$17 }
	goto $label$10 
	
.LABEL $label$16
	$8 = uint_32($9 >> [1])
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$13 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ((uint_32)$11 >= (uint_32)($1 - $4)) ){ goto $label$12 }
	$5 = $8
	$7 = [0]
	
.LOOP $label$18:
	if ( *(($0 + ($4 + $11))) ){ goto $label$8 }
	$4 = CALL strcmp($2, ($0 + $4))
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((int_32)$9 == (int_32)[1]) ){ goto $label$6 }
	$13 = [0]
	$9 = ( $5 ? ($9 - $5) : $4 )
	$5 = uint_32($9 >> [1])
	$4 = ((int_32)$4 < (int_32)[0])
	$7 = ( $7 ? $8 : $4 )
	$8 = ($7 + $5)
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$10 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ($11 <= ($1 - $4)) ){ goto $label$18 }
	goto $label$10 
	
.LABEL $label$15
	return [0]
	
.LABEL $label$14
	return [0]
	
.LABEL $label$13
	return [0]
	
.LABEL $label$12
	return [0]
	
.LABEL $label$11
	$9 = ((int_32)$3 == (int_32)[-1794895138])
	$10 = ($0 + (($6 + uint_32($10 >> [2])) << [2]))
	$4 = *(($10 + [4]))
	$11 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$5 }
	$13 = [0]
	$4 = *($10)
	$4 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$4 >= (uint_32)($1 - $11)) ){ goto $label$10 }
	return ( [0] ? ($0 + $11) : *(($0 + ($11 + $4))) )
	
.LABEL $label$10
	return $13
	
.LABEL $label$9
	return [0]
	
.LABEL $label$8
	return [0]
	
.LABEL $label$7
	return [0]
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	return [0]
}

int_32 .FUNC strcmp (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ((int_32)$2 != (int_32)($3 & [255])) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	
.LOOP $label$2:
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 == (int_32)($3 & [255])) ){ goto $label$2 }
	
.LABEL $label$1
	return ($2 - ($3 & [255]))
}

int_32 .FUNC __towrite (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

void .FUNC frexpl (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$5 = ($4) & [32767]
	if ( ((int_32)$5) == (int_32)[32767]) ){ goto $label$1 }
	if ( $5 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($6, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL frexpl(($6 + [16]), *($6), *(($6 + [8])), $3)
	$4 = (*($3) + [-120])
	$2 = *($6 + [24])
	$1 = *($6 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($4 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($4 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	*($3) = $4
	
.LABEL $label$1
	*($0) = $1
	*(($0 + [8])) = $2
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC wcrtomb (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL __errno_location()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL __errno_location()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

int_32 .FUNC __lctrans (int_32 $0, int_32 $1)
{
	return CALL __lctrans_impl($0, $1)
}

void .FUNC $152 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $91(*($1), ($0 + [32]))
}

void .FUNC $153 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [544])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy(($4 + [15]), *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	*($3) = ((int_32)*($4 + [15]) != (int_32)[0])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [544])
	CALL memcpy(($4 + [14]), *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	*($3) = ((int_32)*($4 + [14]) != (int_32)[0])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $150 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$1 = (*($3 + [4]) + [8])
	*($3 + [4]) = $1
	CALL eosio_assert(((int_32)(*($3 + [8]) - $1) > (int_32)[7]), [496])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

int_32 .FUNC $151 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $737([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $88($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $152(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

int_32 .FUNC $408 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = *($0 + [4])
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ((*($2 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL $738(*(($2 + [40])))
	
.LABEL $label$6
	if ( ((*($2 + [20]) & [1]) == 0) ){ goto $label$7 }
	CALL $738(*(($2 + [28])))
	
.LABEL $label$7
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$8 }
	CALL $738(*(($2 + [16])))
	
.LABEL $label$8
	CALL $738($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$2 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$2 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $738($2)
	
.LABEL $label$1
	return $0
}

void .FUNC _Z10get_trx_idv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = CALL transaction_size()
	$4 = *([0] + [4])
	$2 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	$3 = CALL read_transaction($2, $1)
	CALL eosio_assert(((int_32)$1 == (int_32)$3), [8032])
	CALL sha256($2, $3, $0)
	*([0] + [4]) = $4
}

void .FUNC $154 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $155 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN11walexchange13order_manager16add_order_extendEyRN5eosio14extended_assetENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	$22 = (*([0] + [4]) - [624])
	*([0] + [4]) = $22
	*($22 + [504]) = *($0)
	CALL $767(($22 + [472]), $3)
	CALL $405(($22 + [488]), ($22 + [504]), ($22 + [472]))
	if ( ((*($22 + [472]) & [1]) == 0) ){ goto $label$1 }
	CALL $738(*($22 + [480]))
	
.LABEL $label$1
	$21 = *($3)
	if ( ($21 & [1]) ){ goto $label$3 }
	$7 = uint_32($21 >> [1])
	$11 = ($3 + [1])
	goto $label$2 
	
.LABEL $label$3
	$7 = *($3 + [4])
	$11 = *($3 + [8])
	
.LABEL $label$2
	$7 = ($11 + $7)
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$6:
	if ( ((int_32)*($11) == (int_32)[32]) ){ goto $label$5 }
	$11 = ($11 + [1])
	if ( ((int_32)$7 != (int_32)$11) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$7 }
	$21 = $11
	
.LOOP $label$9:
	$21 = ($21 + [1])
	if ( ((int_32)$21 == (int_32)$7) ){ goto $label$8 }
	$9 = *($21)
	if ( ((int_32)$9 == (int_32)[32]) ){ goto $label$9 }
	*($11) = $9
	$11 = ($11 + [1])
	goto $label$9 
	
.LABEL $label$8
	$21 = *($3)
	
.LABEL $label$7
	$7 = $11
	
.LABEL $label$4
	if ( ($21 & [1]) ){ goto $label$11 }
	$11 = ($3 + [1])
	$21 = ($11 + uint_32(($21 & [254]) >> [1]))
	$9 = $11
	goto $label$10 
	
.LABEL $label$11
	$11 = ($3 + [1])
	$9 = *($3 + [8])
	$21 = ($9 + *($3 + [4]))
	
.LABEL $label$10
	CALL $750($3, ($7 - $9), ($21 - $7))
	$21 = *($3)
	$7 = ($21 & [1])
	CALL prints_l(( *($3 + [8]) ? $11 : $7 ), ( *($3 + [4]) ? uint_32($21 >> [1]) : $7 ))
	CALL $767(($22 + [440]), $3)
	CALL _Z5splitNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEc(($22 + [456]), ($22 + [440]), [124])
	if ( ((*($22 + [440]) & [1]) == 0) ){ goto $label$12 }
	CALL $738(*($22 + [448]))
	
.LABEL $label$12
	CALL eosio_assert(((uint_32)((int_32)(*($22 + [460]) - *($22 + [456])) / (int_32)[12]) > (uint_32)[15]), [7120])
	$11 = *($21 + [12])
	$21 = *($22 + [456])
	$7 = CALL strlen([1584])
	if ( ((int_32)$7 != (int_32)( *(($21 + [16])) ? uint_32($11 >> [1]) : ($11 & [1]) )) ){ goto $label$15 }
	if ( (CALL $752(($21 + [12]), [0], [-1], [1584], $7) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$21 = [0]
	$7 = *($11 + [12])
	$11 = *($22 + [456])
	$9 = CALL strlen([1600])
	if ( ((int_32)$9 != (int_32)( *(($11 + [16])) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$13 }
	$21 = (CALL $752(($11 + [12]), [0], [-1], [1600], $9) == 0)
	goto $label$13 
	
.LABEL $label$14
	$21 = [1]
	
.LABEL $label$13
	CALL eosio_assert($21, [7152])
	$21 = [1]
	$7 = *($11 + [24])
	$11 = *($22 + [456])
	$9 = CALL strlen([1632])
	if ( ((int_32)$9 != (int_32)( *(($11 + [28])) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$17 }
	if ( (CALL $752(($11 + [24]), [0], [-1], [1632], $9) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	$11 = *($22 + [456])
	$21 = *($11 + [24])
	$7 = ($21 & [1])
	$9 = uint_32($21 >> [1])
	$21 = [0]
	$3 = CALL strlen([1616])
	if ( ((int_32)$3 != (int_32)( *(($11 + [28])) ? $9 : $7 )) ){ goto $label$16 }
	$21 = (CALL $752(($11 + [24]), [0], [-1], [1616], $3) == 0)
	
.LABEL $label$16
	CALL eosio_assert($21, [7184])
	*(($22 + [432])) = [0]
	*($22 + [416]) = (int_64)-1
	*($22 + [424]) = (int_64)0
	$13 = *($0)
	*($22 + [400]) = $13
	*($22 + [408]) = $13
	*($22 + [436]) = [0]
	*($22 + [392]) = ($22 + [400])
	$3 = *($22 + [456])
	if ( (*($3 + [48]) & [1]) ){ goto $label$19 }
	$11 = (($3 + [48]) + [1])
	goto $label$18 
	
.LABEL $label$19
	$11 = *(($3 + [56]))
	
.LABEL $label$18
	$21 = [-1]
	
.LOOP $label$20:
	$7 = ($11 + $21)
	$9 = ($21 + [1])
	$21 = $9
	if ( *(($7 + [1])) ){ goto $label$20 }
	if ( ($9 == 0) ){ goto $label$22 }
	$12 = (CASTING uint_64)(uint_32 $9)
	$13 = (int_64)8
	$10 = (int_64)0
	
.LOOP $label$23:
	$21 = *($11)
	if ( ((uint_32)(($21 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$10 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $21) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$13 & (int_64)4294967288)) | (int_64)$10)
	
.LABEL $label$24
	$11 = ($11 + [1])
	$13 = ((int_64)$13 + (int_64)8)
	$12 = ((int_64)$12 + (int_64)-1)
	if ( ((int_64)$12 != (int_64)0) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$10 = (int_64)0
	
.LABEL $label$21
	if ( (*($3 + [36]) & [1]) ){ goto $label$26 }
	$21 = (($3 + [36]) + [1])
	goto $label$25 
	
.LABEL $label$26
	$21 = *(($3 + [44]))
	
.LABEL $label$25
	$11 = [-1]
	
.LOOP $label$27:
	$7 = ($21 + $11)
	$9 = ($11 + [1])
	$11 = $9
	if ( *(($7 + [1])) ){ goto $label$27 }
	$4 = (CASTING uint_64)(uint_32 $9)
	$13 = (int_64)0
	$12 = (int_64)59
	$14 = (int_64)0
	
.LOOP $label$28:
	$15 = (int_64)0
	if ( ((uint_64)$13 >= (uint_64)$4) ){ goto $label$29 }
	$11 = *($21)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$11 = ($11 + [165])
	goto $label$30 
	
.LABEL $label$31
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56)
	
.LABEL $label$29
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$33 }
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	goto $label$32 
	
.LABEL $label$33
	$15 = ((int_64)$15 & (int_64)15)
	
.LABEL $label$32
	$21 = ($21 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$28 }
	*($22 + [520]) = $14
	*($22 + [512]) = (uint_64)$10 >> (uint_64)(int_64)8)
	CALL $46(($22 + [352]), ($22 + [392]), ($22 + [512]))
	$5 = [0]
	$21 = *($22 + [356])
	if ( ($21 == 0) ){ goto $label$34 }
	$5 = ( $21 ? [0] : (int_64)(((int_64)((int_64)*($22 + [512]) ^ (int_64)(uint_64)*($21 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($22 + [520]) ^ (int_64)*(($21 + [16])))) == 0) )
	
.LABEL $label$34
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [7216])
	$3 = *($22 + [456])
	if ( (*($3 + [84]) & [1]) ){ goto $label$36 }
	$11 = (($3 + [84]) + [1])
	goto $label$35 
	
.LABEL $label$36
	$11 = *(($3 + [92]))
	
.LABEL $label$35
	$21 = [-1]
	
.LOOP $label$37:
	$7 = ($11 + $21)
	$9 = ($21 + [1])
	$21 = $9
	if ( *(($7 + [1])) ){ goto $label$37 }
	if ( ($9 == 0) ){ goto $label$39 }
	$12 = (CASTING uint_64)(uint_32 $9)
	$13 = (int_64)8
	$10 = (int_64)0
	
.LOOP $label$40:
	$21 = *($11)
	if ( ((uint_32)(($21 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$41 }
	$10 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $21) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$13 & (int_64)4294967288)) | (int_64)$10)
	
.LABEL $label$41
	$11 = ($11 + [1])
	$13 = ((int_64)$13 + (int_64)8)
	$12 = ((int_64)$12 + (int_64)-1)
	if ( ((int_64)$12 != (int_64)0) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	$10 = (int_64)0
	
.LABEL $label$38
	if ( (*($3 + [72]) & [1]) ){ goto $label$43 }
	$21 = (($3 + [72]) + [1])
	goto $label$42 
	
.LABEL $label$43
	$21 = *(($3 + [80]))
	
.LABEL $label$42
	$11 = [-1]
	
.LOOP $label$44:
	$7 = ($21 + $11)
	$9 = ($11 + [1])
	$11 = $9
	if ( *(($7 + [1])) ){ goto $label$44 }
	$4 = (CASTING uint_64)(uint_32 $9)
	$13 = (int_64)0
	$12 = (int_64)59
	$14 = (int_64)0
	
.LOOP $label$45:
	$15 = (int_64)0
	if ( ((uint_64)$13 >= (uint_64)$4) ){ goto $label$46 }
	$11 = *($21)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$11 = ($11 + [165])
	goto $label$47 
	
.LABEL $label$48
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56)
	
.LABEL $label$46
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$50 }
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	goto $label$49 
	
.LABEL $label$50
	$15 = ((int_64)$15 & (int_64)15)
	
.LABEL $label$49
	$21 = ($21 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$45 }
	*($22 + [520]) = $14
	*($22 + [512]) = (uint_64)$10 >> (uint_64)(int_64)8)
	CALL $46(($22 + [352]), ($22 + [392]), ($22 + [512]))
	$3 = [0]
	$16 = [0]
	$21 = *($22 + [356])
	if ( ($21 == 0) ){ goto $label$51 }
	$16 = ( $21 ? [0] : (int_64)(((int_64)((int_64)*($22 + [512]) ^ (int_64)(uint_64)*($21 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($22 + [520]) ^ (int_64)*(($21 + [16])))) == 0) )
	
.LABEL $label$51
	CALL eosio_assert(((int_32)$16 != (int_32)[0]), [7248])
	*($22 + [368]) = (int_64)-1
	*($22 + [376]) = [0]
	*($22 + [352]) = *($0)
	*($22 + [360]) = *($0 + [8])
	*((($22 + [352]) + [28])) = [0]
	*(($22 + [384])) = [0]
	CALL $406(($22 + [344]), ($22 + [352]), ((int_64)((int_64)*($5) << (int_64)32) | (int_64)*($16)))
	CALL eosio_assert(((int_32)*($22 + [348]) != (int_32)[0]), [7280])
	$11 = *($21 + [12])
	$21 = *($22 + [456])
	$7 = CALL strlen([1584])
	if ( ((int_32)$7 != (int_32)( *(($21 + [16])) ? uint_32($11 >> [1]) : ($11 & [1]) )) ){ goto $label$52 }
	$3 = (CALL $752(($21 + [12]), [0], [-1], [1584], $7) == 0)
	
.LABEL $label$52
	$17 = [0]
	$11 = *($21 + [24])
	$21 = *($22 + [456])
	$7 = CALL strlen([1632])
	if ( ((int_32)$7 != (int_32)( *(($21 + [28])) ? uint_32($11 >> [1]) : ($11 & [1]) )) ){ goto $label$53 }
	$17 = (CALL $752(($21 + [24]), [0], [-1], [1632], $7) == 0)
	
.LABEL $label$53
	$21 = *($22 + [456])
	$7 = ($21 + [60])
	$9 = [1]
	$19 = ($11 & [1])
	$11 = *($21 + [60])
	$6 = ($21 + [64])
	$11 = ( *($6) ? uint_32($11 >> [1]) : $19 )
	if ( ($11 == 0) ){ goto $label$54 }
	$21 = ( *(($21 + [68])) ? ($21 + [61]) : $19 )
	
.LOOP $label$56:
	if ( (CALL isdigit(*($21)) == 0) ){ goto $label$55 }
	$21 = ($21 + [1])
	$11 = ($11 + [-1])
	if ( $11 ){ goto $label$56 }
	$9 = [1]
	goto $label$54 
	
.LABEL $label$55
	$9 = [0]
	
.LABEL $label$54
	CALL eosio_assert($9, [1408])
	$21 = *($7)
	if ( (( *($6) ? uint_32($21 >> [1]) : ($21 & [1]) ) == 0) ){ goto $label$58 }
	$10 = CALL _ZNSt3__15stollERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji($7, [0], [10])
	goto $label$57 
	
.LABEL $label$58
	$10 = (int_64)0
	
.LABEL $label$57
	$21 = *($22 + [456])
	$7 = ($21 + [96])
	$9 = [1]
	$19 = ($11 & [1])
	$11 = *($21 + [96])
	$6 = ($21 + [100])
	$11 = ( *($6) ? uint_32($11 >> [1]) : $19 )
	if ( ($11 == 0) ){ goto $label$59 }
	$21 = ( *(($21 + [104])) ? ($21 + [97]) : $19 )
	
.LOOP $label$61:
	if ( (CALL isdigit(*($21)) == 0) ){ goto $label$60 }
	$21 = ($21 + [1])
	$11 = ($11 + [-1])
	if ( $11 ){ goto $label$61 }
	$9 = [1]
	goto $label$59 
	
.LABEL $label$60
	$9 = [0]
	
.LABEL $label$59
	CALL eosio_assert($9, [1408])
	$21 = *($7)
	if ( (( *($6) ? uint_32($21 >> [1]) : ($21 & [1]) ) == 0) ){ goto $label$63 }
	$18 = CALL _ZNSt3__15stollERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji($7, [0], [10])
	goto $label$62 
	
.LABEL $label$63
	$18 = (int_64)0
	
.LABEL $label$62
	$21 = *($22 + [456])
	$7 = ($21 + [108])
	$9 = [1]
	$19 = ($11 & [1])
	$11 = *($21 + [108])
	$6 = ($21 + [112])
	$11 = ( *($6) ? uint_32($11 >> [1]) : $19 )
	if ( ($11 == 0) ){ goto $label$64 }
	$21 = ( *(($21 + [116])) ? ($21 + [109]) : $19 )
	
.LOOP $label$66:
	if ( (CALL isdigit(*($21)) == 0) ){ goto $label$65 }
	$21 = ($21 + [1])
	$11 = ($11 + [-1])
	if ( $11 ){ goto $label$66 }
	$9 = [1]
	goto $label$64 
	
.LABEL $label$65
	$9 = [0]
	
.LABEL $label$64
	CALL eosio_assert($9, [1408])
	$21 = *($7)
	if ( (( *($6) ? uint_32($21 >> [1]) : ($21 & [1]) ) == 0) ){ goto $label$68 }
	$19 = CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji($7, [0], [10])
	goto $label$67 
	
.LABEL $label$68
	$19 = [0]
	
.LABEL $label$67
	$21 = *($22 + [456])
	$7 = ($21 + [120])
	$9 = [1]
	$20 = ($11 & [1])
	$11 = *($21 + [120])
	$6 = ($21 + [124])
	$11 = ( *($6) ? uint_32($11 >> [1]) : $20 )
	if ( ($11 == 0) ){ goto $label$69 }
	$21 = ( *(($21 + [128])) ? ($21 + [121]) : $20 )
	
.LOOP $label$71:
	if ( (CALL isdigit(*($21)) == 0) ){ goto $label$70 }
	$21 = ($21 + [1])
	$11 = ($11 + [-1])
	if ( $11 ){ goto $label$71 }
	$9 = [1]
	goto $label$69 
	
.LABEL $label$70
	$9 = [0]
	
.LABEL $label$69
	CALL eosio_assert($9, [1408])
	$21 = *($7)
	if ( (( *($6) ? uint_32($21 >> [1]) : ($21 & [1]) ) == 0) ){ goto $label$73 }
	$20 = CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji($7, [0], [10])
	goto $label$72 
	
.LABEL $label$73
	$20 = [0]
	
.LABEL $label$72
	$6 = *($22 + [456])
	if ( (*($6 + [132]) & [1]) ){ goto $label$75 }
	$21 = (($6 + [132]) + [1])
	goto $label$74 
	
.LABEL $label$75
	$21 = *(($6 + [140]))
	
.LABEL $label$74
	$11 = [-1]
	
.LOOP $label$76:
	$7 = ($21 + $11)
	$9 = ($11 + [1])
	$11 = $9
	if ( *(($7 + [1])) ){ goto $label$76 }
	$4 = (CASTING uint_64)(uint_32 $9)
	$13 = (int_64)0
	$12 = (int_64)59
	$14 = (int_64)0
	
.LOOP $label$77:
	$15 = (int_64)0
	if ( ((uint_64)$13 >= (uint_64)$4) ){ goto $label$78 }
	$11 = *($21)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$80 }
	$11 = ($11 + [165])
	goto $label$79 
	
.LABEL $label$80
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$79
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56)
	
.LABEL $label$78
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$82 }
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	goto $label$81 
	
.LABEL $label$82
	$15 = ((int_64)$15 & (int_64)15)
	
.LABEL $label$81
	$21 = ($21 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$77 }
	$7 = ($6 + [144])
	$21 = [1]
	$8 = ($11 & [1])
	$11 = *($6 + [144])
	$9 = ($6 + [148])
	$11 = ( *($9) ? uint_32($11 >> [1]) : $8 )
	if ( ($11 == 0) ){ goto $label$83 }
	$21 = ( *(($6 + [152])) ? ($6 + [145]) : $8 )
	
.LOOP $label$85:
	if ( (CALL isdigit(*($21)) == 0) ){ goto $label$84 }
	$21 = ($21 + [1])
	$11 = ($11 + [-1])
	if ( $11 ){ goto $label$85 }
	$21 = [1]
	goto $label$83 
	
.LABEL $label$84
	$21 = [0]
	
.LABEL $label$83
	CALL eosio_assert($21, [1408])
	$21 = *($7)
	if ( (( *($9) ? uint_32($21 >> [1]) : ($21 & [1]) ) == 0) ){ goto $label$87 }
	$13 = CALL _ZNSt3__16stoullERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji($7, [0], [10])
	goto $label$86 
	
.LABEL $label$87
	$13 = (int_64)0
	
.LABEL $label$86
	$21 = *($22 + [456])
	$7 = ($21 + [156])
	$9 = [1]
	$8 = ($11 & [1])
	$11 = *($21 + [156])
	$6 = ($21 + [160])
	$11 = ( *($6) ? uint_32($11 >> [1]) : $8 )
	if ( ($11 == 0) ){ goto $label$88 }
	$21 = ( *(($21 + [164])) ? ($21 + [157]) : $8 )
	
.LOOP $label$90:
	if ( (CALL isdigit(*($21)) == 0) ){ goto $label$89 }
	$21 = ($21 + [1])
	$11 = ($11 + [-1])
	if ( $11 ){ goto $label$90 }
	$9 = [1]
	goto $label$88 
	
.LABEL $label$89
	$9 = [0]
	
.LABEL $label$88
	CALL eosio_assert($9, [1408])
	$21 = *($7)
	if ( (( *($6) ? uint_32($21 >> [1]) : ($21 & [1]) ) == 0) ){ goto $label$92 }
	$6 = CALL _ZNSt3__14stolERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji($7, [0], [10])
	goto $label$91 
	
.LABEL $label$92
	$6 = [0]
	
.LABEL $label$91
	CALL eosio_assert((((int_64)$10 > (int_64)-1) & (uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)), [7312])
	CALL eosio_assert((((int_64)$18 > (int_64)-1) & (uint_64)(((int_64)$18 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)), [7344])
	if ( ($17 == 0) ){ goto $label$94 }
	CALL eosio_assert((((int_64)$10 != (int_64)0) & ((int_64)$18 != (int_64)0)), [7376])
	$21 = [1]
	goto $label$93 
	
.LABEL $label$94
	CALL eosio_assert([1], [7376])
	if ( ($3 == 0) ){ goto $label$95 }
	$21 = ((int_64)($10 == 0) & ((int_64)$18 != (int_64)0))
	goto $label$93 
	
.LABEL $label$95
	$21 = (((int_64)$10 != (int_64)0) & (int_64)($18 == 0))
	
.LABEL $label$93
	CALL eosio_assert($21, [7424])
	$21 = ($19 & [65535])
	CALL eosio_assert(($21 <= [10001]), [7472])
	$11 = ($20 & [65535])
	CALL eosio_assert(($11 <= [10001]), [7504])
	CALL eosio_assert(((uint_32)$21 >= (uint_32)*(*($22 + [348]) + [56])), [7536])
	CALL eosio_assert(((uint_32)$11 >= (uint_32)*(*($22 + [348]) + [58])), [7568])
	CALL eosio_assert(((int_64)$14 == (int_64)*(($0 + [8]))), [7600])
	$21 = [0]
	$11 = [0]
	if ( ((uint_32)$6 >= (uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [300])) ){ goto $label$96 }
	$11 = ((uint_32)$6 >= (uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [-300]))
	
.LABEL $label$96
	CALL eosio_assert($11, [7632])
	$12 = (uint_64)$13 >> (uint_64)(int_64)16
	if ( ((uint_64)$12) >= (uint_64)((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) + (int_64)300) & (int_64)4294967295)) ){ goto $label$97 }
	$21 = ((uint_64)$12 >= (uint_64)((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) + (int_64)4294966996) & (int_64)4294967295))
	
.LABEL $label$97
	CALL eosio_assert($21, [7664])
	$15 = *($0)
	*($22 + [328]) = $15
	*($22 + [336]) = *(($0 + [8]))
	*($22 + [112]) = [0]
	*($22 + [104]) = (int_64)0
	*($22 + [600]) = [0]
	*($22 + [592]) = (int_64)0
	*($22 + [200]) = [0]
	*($22 + [192]) = (int_64)0
	*($22 + [152]) = [0]
	*($22 + [144]) = (int_64)0
	*($22 + [320]) = [0]
	*($22 + [312]) = (int_64)0
	*($22 + [304]) = [0]
	*($22 + [296]) = (int_64)0
	*($22 + [288]) = [0]
	*($22 + [280]) = (int_64)0
	CALL $767(($22 + [264]), ($22 + [488]))
	CALL $44(($22 + [504]), ($22 + [264]), ($22 + [104]), ($22 + [592]), ($22 + [192]), ($22 + [144]), ($22 + [312]), ($22 + [296]), ($22 + [280]))
	if ( ((*($22 + [264]) & [1]) == 0) ){ goto $label$98 }
	CALL $738(*($22 + [272]))
	
.LABEL $label$98
	if ( (CALL $333(($22 + [504]), CALL $76(($22 + [504]), *($22 + [456]))) == 0) ){ goto $label$100 }
	*(($22 + [544])) = [0]
	*($22 + [528]) = (int_64)-1
	*($22 + [536]) = (int_64)0
	$12 = *($0)
	*($22 + [512]) = $12
	*($22 + [520]) = $12
	$21 = [0]
	$11 = CALL db_find_i64($12, $12, (int_64)8201437361402281984, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$101 }
	$21 = CALL $407(($22 + [512]), $11)
	CALL eosio_assert(((int_32)*($21 + [44]) == (int_32)($22 + [512])), [288])
	
.LABEL $label$101
	CALL eosio_assert(((int_32)$21 != (int_32)[0]), [7696])
	if ( ((int_32)($3 & CALL _ZN11walexchange11rex_manager17has_target_ref_idEm(($22 + [328]), *($5))) != (int_32)[1]) ){ goto $label$102 }
	CALL eosio_assert(CALL $fimport$46(CALL $76(($22 + [504]), ($22 + [104]))), [7744])
	
.LABEL $label$102
	CALL $408(($22 + [536]))
	goto $label$99 
	
.LABEL $label$100
	*(($22 + [544])) = [0]
	*($22 + [528]) = (int_64)-1
	*($22 + [536]) = (int_64)0
	$12 = *($0)
	*($22 + [512]) = $12
	*($22 + [520]) = $12
	$21 = CALL db_find_i64($12, $12, (int_64)8201437361402281984, $1)
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$104 }
	CALL eosio_assert(((int_32)*(CALL $407(($22 + [512]), $21) + [44]) == (int_32)($22 + [512])), [288])
	goto $label$103 
	
.LABEL $label$104
	CALL eosio_assert(((int_64)CALL $76(($22 + [504]), *($22 + [456])) == (int_64)$1), [7776])
	
.LABEL $label$103
	CALL $408(($22 + [536]))
	
.LABEL $label$99
	$12 = CALL $76(($22 + [504]), *($22 + [456]))
	$21 = [1]
	$7 = ($11 & [1])
	$11 = *($22 + [296])
	$11 = ( *($22 + [300]) ? uint_32($11 >> [1]) : $7 )
	if ( ($11 == 0) ){ goto $label$105 }
	$21 = ( *(($22 + [304])) ? (($22 + [296]) | [1]) : $7 )
	
.LOOP $label$107:
	if ( (CALL isdigit(*($21)) == 0) ){ goto $label$106 }
	$21 = ($21 + [1])
	$11 = ($11 + [-1])
	if ( $11 ){ goto $label$107 }
	$21 = [1]
	goto $label$105 
	
.LABEL $label$106
	$21 = [0]
	
.LABEL $label$105
	CALL eosio_assert($21, [1408])
	$21 = *($22 + [296])
	if ( (( *($22 + [300]) ? uint_32($21 >> [1]) : ($21 & [1]) ) == 0) ){ goto $label$109 }
	$7 = ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($22 + [296]), [0], [10]) & [65535]) == (int_32)[1])
	goto $label$108 
	
.LABEL $label$109
	$7 = [0]
	
.LABEL $label$108
	$21 = [1]
	$9 = ($11 & [1])
	$11 = *($22 + [592])
	$11 = ( *($22 + [596]) ? uint_32($11 >> [1]) : $9 )
	if ( ($11 == 0) ){ goto $label$110 }
	$21 = ( *(($22 + [600])) ? (($22 + [592]) | [1]) : $9 )
	
.LOOP $label$112:
	if ( (CALL isdigit(*($21)) == 0) ){ goto $label$111 }
	$21 = ($21 + [1])
	$11 = ($11 + [-1])
	if ( $11 ){ goto $label$112 }
	$21 = [1]
	goto $label$110 
	
.LABEL $label$111
	$21 = [0]
	
.LABEL $label$110
	CALL eosio_assert($21, [1408])
	$21 = *($22 + [592])
	if ( (( *($22 + [596]) ? uint_32($21 >> [1]) : ($21 & [1]) ) == 0) ){ goto $label$120 }
	$9 = ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($22 + [592]), [0], [10]) & [65535]) == (int_32)[1])
	if ( $3 ){ goto $label$119 }
	goto $label$118 
	
.LABEL $label$120
	$9 = [0]
	if ( ($3 == 0) ){ goto $label$118 }
	
.LABEL $label$119
	CALL $767(($22 + [248]), ($22 + [192]))
	$19 = *($5)
	$21 = [1]
	$20 = ($11 & [1])
	$11 = *($22 + [312])
	$11 = ( *($22 + [316]) ? uint_32($11 >> [1]) : $20 )
	if ( ($11 == 0) ){ goto $label$116 }
	$21 = ( *(($22 + [320])) ? (($22 + [312]) | [1]) : $20 )
	
.LOOP $label$121:
	if ( (CALL isdigit(*($21)) == 0) ){ goto $label$117 }
	$21 = ($21 + [1])
	$11 = ($11 + [-1])
	if ( $11 ){ goto $label$121 }
	$21 = [1]
	goto $label$116 
	
.LABEL $label$118
	CALL $767(($22 + [232]), ($22 + [192]))
	$19 = *($16)
	$21 = [1]
	$20 = ($11 & [1])
	$11 = *($22 + [312])
	$11 = ( *($22 + [316]) ? uint_32($11 >> [1]) : $20 )
	if ( ($11 == 0) ){ goto $label$114 }
	$21 = ( *(($22 + [320])) ? (($22 + [312]) | [1]) : $20 )
	
.LOOP $label$122:
	if ( (CALL isdigit(*($21)) == 0) ){ goto $label$115 }
	$21 = ($21 + [1])
	$11 = ($11 + [-1])
	if ( $11 ){ goto $label$122 }
	$21 = [1]
	goto $label$114 
	
.LABEL $label$117
	$21 = [0]
	
.LABEL $label$116
	CALL eosio_assert($21, [1408])
	$21 = *($22 + [312])
	if ( (( *($22 + [316]) ? uint_32($21 >> [1]) : ($21 & [1]) ) == 0) ){ goto $label$124 }
	$21 = ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($22 + [312]), [0], [10]) & [65535]) == (int_32)[1])
	goto $label$123 
	
.LABEL $label$124
	$21 = [0]
	
.LABEL $label$123
	CALL _ZN11walexchange21order_withdraw_helper25check_order_withdraw_memoEybbNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEmb(($22 + [504]), $12, $7, $9, ($22 + [248]), $19, $21)
	if ( ((*($22 + [248]) & [1]) == 0) ){ goto $label$125 }
	CALL $738(*($22 + [256]))
	
.LABEL $label$125
	if ( (CALL $333(($22 + [504]), CALL $76(($22 + [504]), *($22 + [456]))) == 0) ){ goto $label$113 }
	CALL eosio_assert(((int_64)*($2) >= (int_64)$18), [7808])
	goto $label$113 
	
.LABEL $label$115
	$21 = [0]
	
.LABEL $label$114
	CALL eosio_assert($21, [1408])
	$21 = *($22 + [312])
	if ( (( *($22 + [316]) ? uint_32($21 >> [1]) : ($21 & [1]) ) == 0) ){ goto $label$127 }
	$21 = ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($22 + [312]), [0], [10]) & [65535]) == (int_32)[1])
	goto $label$126 
	
.LABEL $label$127
	$21 = [0]
	
.LABEL $label$126
	CALL _ZN11walexchange21order_withdraw_helper25check_order_withdraw_memoEybbNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEmb(($22 + [504]), $12, $7, $9, ($22 + [232]), $19, $21)
	if ( ((*($22 + [232]) & [1]) == 0) ){ goto $label$128 }
	CALL $738(*($22 + [240]))
	
.LABEL $label$128
	if ( (CALL $333(($22 + [504]), CALL $76(($22 + [504]), *($22 + [456]))) == 0) ){ goto $label$113 }
	CALL eosio_assert(((int_64)*($2) >= (int_64)$10), [7856])
	
.LABEL $label$113
	if ( ((*($22 + [280]) & [1]) == 0) ){ goto $label$129 }
	CALL $738(*(($22 + [288])))
	
.LABEL $label$129
	if ( ((*($22 + [296]) & [1]) == 0) ){ goto $label$130 }
	CALL $738(*(($22 + [304])))
	
.LABEL $label$130
	if ( ((*($22 + [312]) & [1]) == 0) ){ goto $label$131 }
	CALL $738(*(($22 + [320])))
	
.LABEL $label$131
	if ( ((*($22 + [144]) & [1]) == 0) ){ goto $label$132 }
	CALL $738(*(($22 + [152])))
	
.LABEL $label$132
	if ( ((*($22 + [192]) & [1]) == 0) ){ goto $label$133 }
	CALL $738(*(($22 + [200])))
	
.LABEL $label$133
	if ( ((*($22 + [592]) & [1]) == 0) ){ goto $label$134 }
	CALL $738(*(($22 + [600])))
	
.LABEL $label$134
	if ( ((*($22 + [104]) & [1]) == 0) ){ goto $label$135 }
	CALL $738(*(($22 + [112])))
	
.LABEL $label$135
	if ( ($3 == 0) ){ goto $label$137 }
	$21 = [0]
	if ( ((int_64)*($2 + [8]) != (int_64)*($16 + [8])) ){ goto $label$138 }
	$21 = ((int_64)*($2 + [16]) == (int_64)*(($16 + [16])))
	
.LABEL $label$138
	CALL eosio_assert($21, [7904])
	goto $label$136 
	
.LABEL $label$137
	if ( (CALL _ZN11walexchange11rex_manager17has_target_ref_idEm(($22 + [328]), *($5)) == 0) ){ goto $label$142 }
	$12 = *($5)
	*(($22 + [544])) = [0]
	*($22 + [520]) = $15
	*($22 + [512]) = $15
	*($22 + [528]) = (int_64)-1
	*($22 + [536]) = (int_64)0
	$9 = *(CALL $297(($22 + [512]), $12, [5632]) + [4])
	$7 = *($22 + [536])
	if ( ($7 == 0) ){ goto $label$139 }
	$5 = ($22 + [540])
	$21 = *($5)
	if ( ((int_32)$21 == (int_32)$7) ){ goto $label$141 }
	
.LOOP $label$143:
	$21 = ($21 + [-24])
	$11 = *($21)
	*($21) = [0]
	if ( ($11 == 0) ){ goto $label$144 }
	CALL $738($11)
	
.LABEL $label$144
	if ( ((int_32)$7 != (int_32)$21) ){ goto $label$143 }
	$21 = *(($22 + [536]))
	goto $label$140 
	
.LABEL $label$142
	$21 = [0]
	if ( ((int_64)*($2 + [8]) != (int_64)*($5 + [8])) ){ goto $label$145 }
	$21 = ((int_64)*($2 + [16]) == (int_64)*(($5 + [16])))
	
.LABEL $label$145
	CALL eosio_assert($21, [7904])
	goto $label$136 
	
.LABEL $label$141
	$21 = $7
	
.LABEL $label$140
	*($5) = $7
	CALL $738($21)
	
.LABEL $label$139
	$16 = *(($22 + [424]))
	$7 = *(($22 + [428]))
	if ( ((int_32)$7 == (int_32)$16) ){ goto $label$146 }
	$21 = ($7 + [-24])
	$5 = ([0] - $16)
	
.LOOP $label$147:
	if ( ((int_32)*(*($21)) == (int_32)$9) ){ goto $label$146 }
	$7 = $21
	$11 = ($21 + [-24])
	$21 = $11
	if ( ((int_32)($11 + $5) != (int_32)[-24]) ){ goto $label$147 }
	
.LABEL $label$146
	if ( ((int_32)$7 == (int_32)$16) ){ goto $label$149 }
	$11 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)($22 + [400])), [288])
	goto $label$148 
	
.LABEL $label$149
	$11 = CALL $65(($22 + [400]), CALL $fimport$19(*($22 + [400]), *(($22 + [408])), (int_64)6301537847124808880, (CASTING uint_64)(uint_32 $9)))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)($22 + [400])), [288])
	
.LABEL $label$148
	$21 = [0]
	if ( ((int_64)*($2 + [8]) != (int_64)*($11 + [8])) ){ goto $label$150 }
	$21 = ((int_64)*($2 + [16]) == (int_64)*(($11 + [16])))
	
.LABEL $label$150
	CALL eosio_assert($21, [7904])
	
.LABEL $label$136
	$5 = ($17 | ((int_32)$3 ^ (int_32)[1]))
	if ( ((int_32)$5 != (int_32)[1]) ){ goto $label$151 }
	$21 = [0]
	$11 = *($22 + [348])
	if ( ((int_64)$10 < (int_64)*($11 + [32])) ){ goto $label$152 }
	$21 = ((int_64)$10 <= (int_64)*($11 + [40]))
	
.LABEL $label$152
	CALL eosio_assert($21, [7952])
	
.LABEL $label$151
	if ( ((int_32)($3 | $17) != (int_32)[1]) ){ goto $label$153 }
	CALL eosio_assert(((int_64)$18 >= (int_64)*(*($22 + [348]) + [48])), [8000])
	
.LABEL $label$153
	CALL _Z10get_trx_idv(($22 + [192]))
	$21 = [0]
	*($22 + [320]) = [0]
	*($22 + [312]) = (int_64)0
	$3 = (($22 + [512]) | [1])
	$9 = (($22 + [512]) + [8])
	
.LOOP $label$154:
	if ( ($21 == 0) ){ goto $label$155 }
	CALL $745(($22 + [312]), [1648])
	
.LABEL $label$155
	CALL $767(($22 + [176]), (*($22 + [456]) + $21))
	CALL _Z19join_space_with_numNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEi(($22 + [512]), ($22 + [176]), [12])
	$11 = *($22 + [512])
	$7 = ($11 & [1])
	CALL $744(($22 + [312]), ( *($9) ? $3 : $7 ), ( *($22 + [516]) ? uint_32($11 >> [1]) : $7 ))
	if ( ((*($22 + [512]) & [1]) == 0) ){ goto $label$156 }
	CALL $738(*($9))
	
.LABEL $label$156
	if ( ((*($22 + [176]) & [1]) == 0) ){ goto $label$157 }
	CALL $738(*((($22 + [176]) + [8])))
	
.LABEL $label$157
	$21 = ($21 + [12])
	if ( ((int_32)$21 != (int_32)[168]) ){ goto $label$154 }
	CALL _Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(($22 + [104]), ($22 + [488]))
	$21 = CALL $746(($22 + [104]), [0], [1648])
	$7 = ($21 + [8])
	*(($11 = (($22 + [512]) + [8]))) = *($7)
	*($22 + [512]) = *($21)
	*($21) = [0]
	*(($21 + [4])) = [0]
	*($7) = [0]
	$21 = *($22 + [512])
	$7 = ($21 & [1])
	CALL $744(($22 + [312]), ( *($11) ? (($22 + [512]) | [1]) : $7 ), ( *($22 + [516]) ? uint_32($21 >> [1]) : $7 ))
	if ( ((*($22 + [512]) & [1]) == 0) ){ goto $label$158 }
	CALL $738(*($11))
	
.LABEL $label$158
	if ( ((*($22 + [104]) & [1]) == 0) ){ goto $label$159 }
	CALL $738(*($22 + [112]))
	
.LABEL $label$159
	$7 = *($22 + [312])
	$9 = ($7 & [1])
	$11 = (($22 + [312]) | [1])
	$21 = (($22 + [312]) + [8])
	CALL prints_l(( *($21) ? $11 : $9 ), ( *($22 + [316]) ? uint_32($7 >> [1]) : $9 ))
	$21 = *($22 + [312])
	$7 = ($21 & [1])
	CALL sha256(( *($21) ? $11 : $7 ), ( *($22 + [316]) ? uint_32($21 >> [1]) : $7 ), ($22 + [144]))
	*($22 + [120]) = (int_64)-1
	*($22 + [128]) = [0]
	$12 = *($0)
	*($22 + [104]) = $12
	*($22 + [112]) = *(($0 + [8]))
	*(($11 = (($22 + [104]) + [28]))) = [0]
	*(($7 = (($22 + [104]) + [32]))) = [0]
	*($22 + [140]) = [0]
	CALL eosio_assert(((int_64)$12 == (int_64)CALL $fimport$16()), [432])
	*(($21 = CALL $737([96])) + [80]) = ($22 + [104])
	*($21) = $13
	*(($21 + [44])) = *((($22 + [192]) + [28]))
	*(($9 = ($21 + [40]))) = *((($22 + [192]) + [24]))
	*(($21 + [36])) = *((($22 + [192]) + [20]))
	*(($21 + [32])) = *((($22 + [192]) + [16]))
	*(($21 + [28])) = *($22 + [204])
	*(($3 = ($21 + [24]))) = *($22 + [200])
	*(($21 + [20])) = *($22 + [196])
	*($21 + [16]) = *($22 + [192])
	*(($21 + [72])) = *((($22 + [144]) + [24]))
	*(($21 + [64])) = *((($22 + [144]) + [16]))
	*(($21 + [56])) = *($22 + [152])
	*($21 + [48]) = *($22 + [144])
	CALL eosio_assert([1], [496])
	CALL memcpy(($22 + [512]), $21, [8])
	CALL eosio_assert([1], [496])
	$16 = ($21 + [16])
	CALL memcpy((($22 + [512]) | [8]), $16, [32])
	CALL eosio_assert([1], [496])
	CALL memcpy((($22 + [512]) + [40]), ($21 + [48]), [32])
	$15 = *($21)
	*($21 + [84]) = CALL db_store_i64(*($22 + [112]), (int_64)-6497942558305103360, $12, $15, ($22 + [512]), [72])
	if ( (uint_64)($15 <= *($22 + [120])) ){ goto $label$160 }
	*((($22 + [104]) + [16])) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$160
	$15 = *($21)
	$14 = *((($22 + [104]) + [8]))
	*((($22 + [592]) + [24])) = *($9)
	*($22 + [600]) = *($3)
	*($22 + [592]) = *($16)
	*($22 + [608]) = *($21 + [32])
	*($21 + [88]) = CALL db_idx256_store($14, (int_64)-6497942558305103360, $12, $15, ($22 + [592]), [2])
	*($22 + [592]) = $21
	$12 = *($21)
	*($22 + [512]) = $12
	$9 = *(($21 + [84]))
	*($22 + [296]) = $9
	$11 = *($11)
	if ( ((uint_32)$11 >= (uint_32)*($7)) ){ goto $label$162 }
	*($11 + [8]) = $12
	*($11 + [16]) = $9
	*($22 + [592]) = [0]
	*($11) = $21
	*(($22 + [132])) = ($11 + [24])
	goto $label$161 
	
.LABEL $label$162
	CALL $108(($22 + [128]), ($22 + [592]), ($22 + [512]), ($22 + [296]))
	
.LABEL $label$161
	$21 = *($22 + [592])
	*($22 + [592]) = [0]
	if ( ($21 == 0) ){ goto $label$163 }
	CALL $738($21)
	
.LABEL $label$163
	if ( ($5 == 0) ){ goto $label$166 }
	*($22 + [64]) = $10
	*((($22 + [8]) + [12])) = *((($22 + [56]) + [12]))
	*($22 + [72]) = $6
	*(($22 + [24])) = $6
	*((($22 + [8]) + [20])) = *((($22 + [56]) + [20]))
	*(($22 + [16])) = *($22 + [64])
	*($22 + [56]) = $13
	*($22 + [12]) = *($22 + [60])
	*($22 + [8]) = *($22 + [56])
	CALL _ZN11walexchange13order_manager9add_orderENS_12bucket_orderE($0, ($22 + [8]))
	$7 = *($22 + [128])
	if ( $7 ){ goto $label$165 }
	goto $label$164 
	
.LABEL $label$166
	*($22 + [88]) = $18
	*((($22 + [32]) + [12])) = *((($22 + [80]) + [12]))
	*($22 + [96]) = $6
	*(($22 + [48])) = $6
	*((($22 + [32]) + [20])) = *((($22 + [80]) + [20]))
	*(($22 + [40])) = *($22 + [88])
	*($22 + [80]) = $13
	*($22 + [36]) = *($22 + [84])
	*($22 + [32]) = *($22 + [80])
	CALL _ZN11walexchange13order_manager9add_orderENS_12bucket_orderE($0, ($22 + [32]))
	$7 = *($22 + [128])
	if ( ($7 == 0) ){ goto $label$164 }
	
.LABEL $label$165
	$9 = ($22 + [132])
	$21 = *($9)
	if ( ((int_32)$21 == (int_32)$7) ){ goto $label$168 }
	
.LOOP $label$169:
	$21 = ($21 + [-24])
	$11 = *($21)
	*($21) = [0]
	if ( ($11 == 0) ){ goto $label$170 }
	CALL $738($11)
	
.LABEL $label$170
	if ( ((int_32)$7 != (int_32)$21) ){ goto $label$169 }
	$21 = *(($22 + [128]))
	goto $label$167 
	
.LABEL $label$168
	$21 = $7
	
.LABEL $label$167
	*($9) = $7
	CALL $738($21)
	
.LABEL $label$164
	if ( ((*($22 + [312]) & [1]) == 0) ){ goto $label$171 }
	CALL $738(*(($22 + [320])))
	
.LABEL $label$171
	$7 = *($22 + [376])
	if ( ($7 == 0) ){ goto $label$172 }
	$9 = ($22 + [380])
	$21 = *($9)
	if ( ((int_32)$21 == (int_32)$7) ){ goto $label$174 }
	
.LOOP $label$175:
	$21 = ($21 + [-24])
	$11 = *($21)
	*($21) = [0]
	if ( ($11 == 0) ){ goto $label$176 }
	CALL $738($11)
	
.LABEL $label$176
	if ( ((int_32)$7 != (int_32)$21) ){ goto $label$175 }
	$21 = *(($22 + [376]))
	goto $label$173 
	
.LABEL $label$174
	$21 = $7
	
.LABEL $label$173
	*($9) = $7
	CALL $738($21)
	
.LABEL $label$172
	$7 = *($22 + [424])
	if ( ($7 == 0) ){ goto $label$177 }
	$9 = ($22 + [428])
	$21 = *($9)
	if ( ((int_32)$21 == (int_32)$7) ){ goto $label$179 }
	
.LOOP $label$180:
	$21 = ($21 + [-24])
	$11 = *($21)
	*($21) = [0]
	if ( ($11 == 0) ){ goto $label$181 }
	CALL $738($11)
	
.LABEL $label$181
	if ( ((int_32)$7 != (int_32)$21) ){ goto $label$180 }
	$21 = *(($22 + [424]))
	goto $label$178 
	
.LABEL $label$179
	$21 = $7
	
.LABEL $label$178
	*($9) = $7
	CALL $738($21)
	
.LABEL $label$177
	$7 = *($22 + [456])
	if ( ($7 == 0) ){ goto $label$182 }
	$21 = *($22 + [460])
	if ( ((int_32)$21 == (int_32)$7) ){ goto $label$184 }
	$11 = ([0] - $7)
	$21 = ($21 + [-12])
	
.LOOP $label$185:
	if ( ((*($21) & [1]) == 0) ){ goto $label$186 }
	CALL $738(*(($21 + [8])))
	
.LABEL $label$186
	$21 = ($21 + [-12])
	if ( ((int_32)($21 + $11) != (int_32)[-12]) ){ goto $label$185 }
	$21 = *($22 + [456])
	goto $label$183 
	
.LABEL $label$184
	$21 = $7
	
.LABEL $label$183
	*($22 + [460]) = $7
	CALL $738($21)
	
.LABEL $label$182
	if ( ((*($22 + [488]) & [1]) == 0) ){ goto $label$187 }
	CALL $738(*($22 + [496]))
	
.LABEL $label$187
	*([0] + [4]) = ($22 + [624])
}

void .FUNC $405 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	$3 = *($2)
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = uint_32($3 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$3 = *($2 + [4])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [7120])
	CALL $767($4, $2)
	CALL _Z5splitNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEc(($4 + [16]), $4, [124])
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($4 + [8]))
	
.LABEL $label$3
	CALL $767($0, (*($4 + [16]) + [168]))
	$3 = *($4 + [16])
	if ( ($3 == 0) ){ goto $label$4 }
	$2 = *($4 + [20])
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$6 }
	$0 = ([0] - $3)
	$2 = ($2 + [-12])
	
.LOOP $label$7:
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	CALL $738(*(($2 + [8])))
	
.LABEL $label$8
	$2 = ($2 + [-12])
	if ( ((int_32)($2 + $0) != (int_32)[-12]) ){ goto $label$7 }
	$2 = *($4 + [16])
	goto $label$5 
	
.LABEL $label$6
	$2 = $3
	
.LABEL $label$5
	*($4 + [20]) = $3
	CALL $738($2)
	
.LABEL $label$4
	*([0] + [4]) = ($4 + [32])
}

void .FUNC $158 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	$10 = $11
	*([0] + [4]) = $11
	$3 = *($0 + [24])
	$8 = *(($0 + [28]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$7 = ($8 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$8 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($8 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($4)
	CALL db_get_i64($1, $8, $4)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $4)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $737([48])) + [16]) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$11 = ($5 + [16])
	$6 = ($5 + [8])
	$9 = (int_64)5462355
	$7 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$3 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$3 = [0]
	
.LABEL $label$7
	CALL eosio_assert($3, [2832])
	*($5 + [32]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [544])
	CALL memcpy($5, $8, [8])
	$7 = ($4 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [544])
	CALL memcpy($6, ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [544])
	CALL memcpy($11, ($8 + [16]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[24]), [544])
	CALL memcpy(($5 + [24]), ($8 + [24]), [8])
	*($5 + [40]) = [-1]
	*($5 + [36]) = $1
	*($10 + [24]) = $5
	$9 = *($5)
	*($10 + [16]) = $9
	$8 = *($5 + [36])
	*($10 + [12]) = $8
	$1 = ($0 + [28])
	$7 = *($1)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($7 + [8]) = $9
	*($7 + [16]) = $8
	*($10 + [24]) = [0]
	*($7) = $5
	*($1) = ($7 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $158($2, ($10 + [24]), ($10 + [16]), ($10 + [12]))
	
.LABEL $label$12
	$7 = *($10 + [24])
	*($10 + [24]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $738($7)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [32])
	return $5
}

void .FUNC _ZN11walexchange12wal_exchange11refundwalexEy (int_32 $0, int_64 $1)
{
	CALL require_auth($1)
	CALL eosio_assert([0], [6992])
}

void .FUNC _ZN11walexchange12wal_exchange11unstakebackEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [288])
	*([0] + [4]) = $13
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$46($2), [6912])
	*($13 + [264]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($13 + [264]), $3, [1])
	$8 = [0]
	$12 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($13 + [264]), $1, [0])
	*(($13 + [256])) = [0]
	*($13 + [232]) = $12
	*($13 + [240]) = (int_64)-1
	*($13 + [248]) = (int_64)0
	*($13 + [224]) = *($0)
	$10 = CALL $170(($13 + [224]), $3, [7024])
	CALL eosio_assert(((uint_32)(*(($0 + [148])) + *($10 + [8])) <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$17() / (uint_64)(int_64)1000000))), [7072])
	$10 = ($0 + [264])
	$4 = CALL _ZN11walexchange13stake_manager16get_stake_amountEyyy($10, $12, $2, $3)
	if ( ((int_64)$4 < (int_64)1) ){ goto $label$2 }
	$11 = (int_64)
	CALL _ZN11walexchange13stake_manager12adjust_stakeEyyyxy($10, $12, $2, $3, $11((int_64)0 - $4)), (int_64)0)
	CALL _ZN11walexchange13stake_manager12adjust_stakeEyyyxy($10, $12, $2, *($0), $11, (int_64)0)
	CALL _ZN11walexchange13stake_manager11adjust_statEyx($10, $2, $11)
	$6 = *(($0 + [136]))
	$12 = *($0 + [128])
	$7 = (uint_64)(((int_64)$4 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)
	CALL eosio_assert($7, [2768])
	$5 = ($0 + [256])
	$2 = (uint_64)$12 >> (uint_64)(int_64)8)
	
.LOOP $label$5:
	$10 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$9 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$9 = [0]
	
.LABEL $label$3
	CALL eosio_assert($9, [2832])
	*($13 + [208]) = $12
	*(($13 + [40])) = $12
	*($13 + [216]) = $6
	*(($13 + [48])) = $6
	*($13 + [200]) = $11
	*($13 + [32]) = $11
	CALL _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE($5, $3, ($13 + [32]))
	$12 = *(($0 + [136]))
	$3 = *(($0 + [128]))
	$6 = *($0)
	CALL eosio_assert($7, [2768])
	$2 = (uint_64)$3 >> (uint_64)(int_64)8)
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$8 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$8 = [0]
	
.LABEL $label$8
	CALL eosio_assert($8, [2832])
	*($13 + [184]) = $3
	*(($13 + [16])) = $3
	*($13 + [192]) = $12
	*(($13 + [24])) = $12
	*($13 + [176]) = $11
	*($13 + [8]) = $11
	CALL _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE($5, $6, ($13 + [8]))
	$6 = *($0)
	$2 = (int_64)0
	$11 = (int_64)59
	$10 = [2144]
	$12 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$18 }
	$8 = *($10)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$8 = ($8 + [165])
	goto $label$16 
	
.LABEL $label$18
	$3 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$3 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$3 = ((int_64)((int_64)$3 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$14
	$10 = ($10 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$12 = ((int_64)$3 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$13 }
	*($13 + [128]) = $12
	*($13 + [120]) = $6
	$6 = *(($0 + [136]))
	$2 = (int_64)0
	$11 = (int_64)59
	$10 = [3360]
	$12 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$24 }
	$8 = *($10)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$8 = ($8 + [165])
	goto $label$22 
	
.LABEL $label$24
	$3 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$3 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$3 = ((int_64)((int_64)$3 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$20
	$10 = ($10 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$12 = ((int_64)$3 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$19 }
	$3 = *(($0 + [128]))
	CALL eosio_assert($7, [2768])
	$2 = (uint_64)$3 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$27:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	
.LOOP $label$29:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$26 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$29 }
	
.LABEL $label$28
	$8 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	$8 = [0]
	
.LABEL $label$25
	CALL eosio_assert($8, [2832])
	*(($13 + [64])) = [0]
	*($13 + [56]) = (int_64)0
	$10 = CALL strlen([3776])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$32 }
	*($13 + [56]) = ($10 << [1])
	$8 = (($13 + [56]) | [1])
	if ( $10 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	$9 = (($10 + [16]) & [-16])
	$8 = CALL $737($9)
	*($13 + [56]) = ($9 | [1])
	*($13 + [64]) = $8
	*($13 + [60]) = $10
	
.LABEL $label$31
	CALL memcpy($8, [3776], $10)
	
.LABEL $label$30
	*(($8 + $10)) = [0]
	*(($13 + [96])) = $3
	*(($13 + [108])) = *($13 + [60])
	*($13 + [80]) = $1
	$10 = ($13 + [64])
	*(($13 + [112])) = *($10)
	*($13 + [72]) = *($0)
	*($13 + [88]) = $4
	*($13 + [104]) = *($13 + [56])
	*($13 + [56]) = [0]
	*($13 + [60]) = [0]
	*($10) = [0]
	$10 = CALL $151(($13 + [136]), ($13 + [120]), $6, $12, ($13 + [72]))
	CALL $87(($13 + [272]), $10)
	$8 = *($13 + [272])
	CALL send_inline($8, (*($13 + [276]) - $8))
	$8 = *($13 + [272])
	if ( ($8 == 0) ){ goto $label$33 }
	*($13 + [276]) = $8
	CALL $738($8)
	
.LABEL $label$33
	$8 = *($10 + [28])
	if ( ($8 == 0) ){ goto $label$34 }
	*(($10 + [32])) = $8
	CALL $738($8)
	
.LABEL $label$34
	$8 = *($10 + [16])
	if ( ($8 == 0) ){ goto $label$35 }
	*(($10 + [20])) = $8
	CALL $738($8)
	
.LABEL $label$35
	if ( ((*(($13 + [104])) & [1]) == 0) ){ goto $label$36 }
	CALL $738(*(($13 + [112])))
	
.LABEL $label$36
	if ( ((*($13 + [56]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*(($13 + [64])))
	
.LABEL $label$2
	$0 = *($13 + [248])
	if ( ($0 == 0) ){ goto $label$37 }
	$9 = ($13 + [252])
	$10 = *($9)
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$39 }
	
.LOOP $label$40:
	$10 = ($10 + [-24])
	$8 = *($10)
	*($10) = [0]
	if ( ($8 == 0) ){ goto $label$41 }
	CALL $738($8)
	
.LABEL $label$41
	if ( ((int_32)$0 != (int_32)$10) ){ goto $label$40 }
	$10 = *(($13 + [248]))
	goto $label$38 
	
.LABEL $label$39
	$10 = $0
	
.LABEL $label$38
	*($9) = $0
	CALL $738($10)
	
.LABEL $label$37
	*([0] + [4]) = ($13 + [288])
	return (unreachable)
	
.LABEL $label$1
	CALL $739(($13 + [56]))
}

int_64 .FUNC _ZN11walexchange13stake_manager16get_stake_amountEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	*(($7 + [64])) = [0]
	*($7 + [40]) = $3
	*($7 + [48]) = (int_64)-1
	$3 = (int_64)0
	*($7 + [56]) = (int_64)0
	*($7 + [32]) = *($0)
	*($7 + [68]) = [0]
	*($7 + [24]) = ($7 + [32])
	*($7 + [8]) = $1
	*($7) = $2
	CALL $273(($7 + [72]), ($7 + [24]), $7)
	$0 = *($7 + [76])
	if ( ($0 == 0) ){ goto $label$3 }
	if ( ((int_64)(((int_64)((int_64)*($7) ^ (int_64)*($0 + [16])) | (int_64)((int_64)*($7 + [8]) ^ (int_64)*($0 + [8]))) == 0) == 0) ){ goto $label$3 }
	if ( ($0 == 0) ){ goto $label$4 }
	$3 = *($0 + [24])
	$4 = *($7 + [56])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$3 = (int_64)0
	
.LABEL $label$3
	$4 = *($7 + [56])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($7 + [60])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$8 }
	CALL $738($5)
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($7 + [56]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $4
	
.LABEL $label$5
	*($6) = $4
	CALL $738($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
	return $3
}

int_32 .FUNC _ZN11walexchange13order_manager15get_bucket_timeEm (int_32 $0, int_32 $1)
{
	return ($1 - ((uint_32)$1 % (uint_32)*($0 + [16])))
}

void .FUNC $343 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $347 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = [1]
	if ( ((int_32)*($0) != (int_32)*($1)) ){ goto $label$1 }
	if ( ((int_32)*($0 + [4]) != (int_32)*($1 + [4])) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [5])) != (int_32)*(($1 + [5]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [6])) != (int_32)*(($1 + [6]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [7])) != (int_32)*(($1 + [7]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [8])) != (int_32)*(($1 + [8]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [9])) != (int_32)*(($1 + [9]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [10])) != (int_32)*(($1 + [10]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [11])) != (int_32)*(($1 + [11]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [12])) != (int_32)*(($1 + [12]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [13])) != (int_32)*(($1 + [13]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [14])) != (int_32)*(($1 + [14]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [15])) != (int_32)*(($1 + [15]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [16])) != (int_32)*(($1 + [16]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [17])) != (int_32)*(($1 + [17]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [18])) != (int_32)*(($1 + [18]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [19])) != (int_32)*(($1 + [19]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [20])) != (int_32)*(($1 + [20]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [21])) != (int_32)*(($1 + [21]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [22])) != (int_32)*(($1 + [22]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [23])) != (int_32)*(($1 + [23]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [24])) != (int_32)*(($1 + [24]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [25])) != (int_32)*(($1 + [25]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [26])) != (int_32)*(($1 + [26]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [27])) != (int_32)*(($1 + [27]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [28])) != (int_32)*(($1 + [28]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [29])) != (int_32)*(($1 + [29]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [30])) != (int_32)*(($1 + [30]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [31])) != (int_32)*(($1 + [31]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [32])) != (int_32)*(($1 + [32]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [33])) != (int_32)*(($1 + [33]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [34])) != (int_32)*(($1 + [34]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [35])) != (int_32)*(($1 + [35]))) ){ goto $label$1 }
	$2 = ((int_32)*(($0 + [36])) != (int_32)*(($1 + [36])))
	
.LABEL $label$1
	return $2
}

void .FUNC _ZN11walexchange12wal_exchange4bindEyRKN5eosio10public_keyE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [128])
	*([0] + [4]) = $3
	CALL require_auth($1)
	CALL eosio_assert(((int_64)*($0) != (int_64)$1), [6224])
	CALL memset((($3 + [88]) | [4]), [0], [36])
	*($3 + [88]) = [0]
	CALL eosio_assert(CALL $347($2, ($3 + [88])), [6256])
	*($3 + [88]) = *($0)
	$1 = CALL _ZN11walexchange24contract_account_manager25get_or_create_eos_accountEyh(($3 + [88]), $1, [0])
	CALL memcpy(($3 + [48]), $2, [40])
	CALL memcpy(($3 + [8]), ($3 + [48]), [40])
	CALL _ZN11walexchange12wal_exchange13add_trade_keyEyN5eosio10public_keyE($0, $1, ($3 + [8]))
	*([0] + [4]) = ($3 + [128])
}

int_32 .FUNC $345 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [20]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2320])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)6291761009430009344)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2256])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2256])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $164(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_64 .FUNC $344 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [16])
	*([0] + [4]) = $14
	$7 = *($1)
	if ( ($7 & [1]) ){ goto $label$3 }
	$6 = ($8 + uint_32($7 >> [1]))
	$8 = ($1 + [1])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = ($8 + *($1 + [4]))
	$8 = *($1 + [8])
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = $8
	
.LOOP $label$4:
	*($8) = CALL tolower(*($7))
	$8 = ($8 + [1])
	$7 = ($7 + [1])
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$4 }
	
.LABEL $label$1
	CALL _Z4trimRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($14, $1)
	if ( (*($1) & [1]) ){ goto $label$6 }
	*($1) = [0]
	goto $label$5 
	
.LABEL $label$6
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$5
	CALL $742($1, [0])
	*($1) = *($14)
	*(($1 + [8])) = *(($14 + [8]))
	$8 = *($1)
	if ( ($8 & [1]) ){ goto $label$8 }
	$2 = uint_32($8 >> [1])
	goto $label$7 
	
.LABEL $label$8
	$2 = *($1 + [4])
	
.LABEL $label$7
	CALL eosio_assert((($2 + [-1]) <= [12]), [6160])
	$13 = *($1)
	$6 = (($13 & [1]) == 0)
	if ( ($2 == 0) ){ goto $label$9 }
	$3 = ($1 + [1])
	$8 = [0]
	$5 = ($1 + [8])
	
.LOOP $label$10:
	$7 = $3
	if ( ($6 & [1]) ){ goto $label$11 }
	$7 = *($5)
	
.LABEL $label$11
	$6 = [0]
	if ( ((int_32)*(($7 + $8)) < (int_32)[97]) ){ goto $label$12 }
	$7 = $3
	if ( (($13 & [1]) == 0) ){ goto $label$13 }
	$7 = *($5)
	
.LABEL $label$13
	$6 = ((int_32)*(($7 + $8)) < (int_32)[123])
	
.LABEL $label$12
	CALL eosio_assert($6, [6192])
	$13 = *($1)
	$6 = (($13 & [1]) == 0)
	$8 = ($8 + [1])
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ($6 == 0) ){ goto $label$15 }
	$8 = ($1 + [1])
	goto $label$14 
	
.LABEL $label$15
	$8 = *($1 + [8])
	
.LABEL $label$14
	$7 = [-1]
	
.LOOP $label$16:
	$6 = ($8 + $7)
	$1 = ($7 + [1])
	$7 = $1
	if ( *(($6 + [1])) ){ goto $label$16 }
	$4 = (CASTING uint_64)(uint_32 $1)
	$10 = (int_64)0
	$9 = (int_64)59
	$11 = (int_64)0
	
.LOOP $label$17:
	$12 = (int_64)0
	if ( ((uint_64)$10 >= (uint_64)$4) ){ goto $label$18 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$7 = ($7 + [165])
	goto $label$19 
	
.LABEL $label$20
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$22 }
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	goto $label$21 
	
.LABEL $label$22
	$12 = ((int_64)$12 & (int_64)15)
	
.LABEL $label$21
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$17 }
	*([0] + [4]) = ($14 + [16])
	return $11
}

int_32 .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [496])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [496])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [496])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $737($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $766($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $738($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $88($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [496])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [496])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $90(CALL $89($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ([0] - $5)
	$3 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$4 = ($4 + [-1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	$5 = *($1 + [12])
	$5 = ( *(($1 + [16])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$4 = ($4 - $5)
	$3 = (CASTING uint_64)(uint_32 $5)
	$2 = ($1 + [12])
	
.LOOP $label$2:
	$4 = ($4 + [-1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	$5 = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $88($0, ([0] - $4))
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$3 
	
.LABEL $label$4
	$4 = [0]
	
.LABEL $label$3
	*($6 + [4]) = $4
	*($6) = $4
	*($6 + [8]) = $5
	CALL $91($6, $1)
	CALL $91($6, $2)
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $85 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [32]) == (int_32)$0), [288])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4982871455592087552, (int_64)4982871455592087552)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $84($0, $3)
	CALL eosio_assert(((int_32)*($3 + [32]) == (int_32)$0), [288])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [1328])
	CALL $92($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $93($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [512])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [36]) = $4
	*($7 + [32]) = $4
	*($7 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($5 = CALL $737([48])) + [32]) = $0
	CALL $96(($7 + [32]), $5)
	*($5 + [36]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)4982871455592087552
	$6 = *($5 + [36])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)4982871455592087552
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $95(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
	return $5
}

void .FUNC $83 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [192])
	*([0] + [4]) = $13
	*(($13 + [168])) = [0]
	*($13 + [152]) = (int_64)-1
	*($13 + [160]) = (int_64)0
	$8 = *($0)
	*($13 + [136]) = $8
	*($13 + [144]) = $8
	$12 = CALL db_find_i64($8, $8, (int_64)4982871455592087552, (int_64)4982871455592087552)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $84(($13 + [136]), $12) + [32]) == (int_32)($13 + [136])), [288])
	goto $label$1 
	
.LABEL $label$2
	*($13 + [32]) = (int_64)0
	*($13 + [24]) = [1]
	*($13 + [40]) = (int_64)0
	*($13 + [48]) = (int_64)0
	CALL $85(($13 + [136]), ($13 + [24]), *($0))
	
.LABEL $label$1
	$12 = *(($13 + [164]))
	if ( ((int_32)$12 == (int_32)*(($13 + [160]))) ){ goto $label$4 }
	$12 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [32]) == (int_32)($13 + [136])), [288])
	goto $label$3 
	
.LABEL $label$4
	$12 = [0]
	$6 = CALL db_find_i64(*($13 + [136]), *(($13 + [144])), (int_64)4982871455592087552, (int_64)4982871455592087552)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$12 = CALL $84(($13 + [136]), $6)
	CALL eosio_assert(((int_32)*($12 + [32]) == (int_32)($13 + [136])), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [672])
	if ( (*($12) == 0) ){ goto $label$6 }
	*(($13 + [128])) = [0]
	*($13 + [120]) = (int_64)0
	$12 = CALL strlen([1568])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$9 }
	*($13 + [120]) = ($12 << [1])
	$6 = (($13 + [120]) | [1])
	if ( $12 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$5 = (($12 + [16]) & [-16])
	$6 = CALL $737($5)
	*($13 + [120]) = ($5 | [1])
	*($13 + [128]) = $6
	*($13 + [124]) = $12
	
.LABEL $label$8
	CALL memcpy($6, [1568], $12)
	
.LABEL $label$7
	*(($6 + $12)) = [0]
	*($13 + [64]) = $1
	CALL $56(($13 + [72]), ($13 + [64]))
	$12 = CALL $746(($13 + [72]), [0], [2096])
	$6 = ($12 + [8])
	*((($13 + [88]) + [8])) = *($6)
	*($13 + [88]) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($6) = [0]
	$12 = CALL $745(($13 + [88]), [2112])
	$6 = ($12 + [8])
	*((($13 + [176]) + [8])) = *($6)
	*($13 + [176]) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($6) = [0]
	$12 = *($2)
	$6 = ($12 & [1])
	$12 = CALL $744(($13 + [176]), ( *($2 + [8]) ? ($2 + [1]) : $6 ), ( *($2 + [4]) ? uint_32($12 >> [1]) : $6 ))
	$2 = ($12 + [8])
	*(($13 + [8])) = *($2)
	*($13) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($2) = [0]
	$12 = CALL $745($13, [2128])
	$2 = ($12 + [8])
	*((($13 + [24]) + [8])) = *($2)
	*($13 + [24]) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($2) = [0]
	$12 = *($3)
	$2 = ($12 & [1])
	$12 = CALL $744(($13 + [24]), ( *($3 + [8]) ? ($3 + [1]) : $2 ), ( *($3 + [4]) ? uint_32($12 >> [1]) : $2 ))
	$2 = ($12 + [8])
	*((($13 + [104]) + [8])) = *($2)
	*($13 + [104]) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($2) = [0]
	if ( ((*($13 + [24]) & [1]) == 0) ){ goto $label$10 }
	CALL $738(*($13 + [32]))
	
.LABEL $label$10
	if ( ((*($13) & [1]) == 0) ){ goto $label$11 }
	CALL $738(*($13 + [8]))
	
.LABEL $label$11
	if ( ((*($13 + [176]) & [1]) == 0) ){ goto $label$12 }
	CALL $738(*($13 + [184]))
	
.LABEL $label$12
	if ( ((*($13 + [88]) & [1]) == 0) ){ goto $label$13 }
	CALL $738(*($13 + [96]))
	
.LABEL $label$13
	if ( ((*($13 + [72]) & [1]) == 0) ){ goto $label$14 }
	CALL $738(*($13 + [80]))
	
.LABEL $label$14
	$4 = *($0)
	$8 = (int_64)0
	$7 = (int_64)59
	$12 = [2144]
	$9 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$20 }
	$2 = *($12)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$2 = ($2 + [165])
	goto $label$18 
	
.LABEL $label$20
	$1 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$16
	$12 = ($12 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$1 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$15 }
	$8 = (int_64)0
	$1 = (int_64)59
	$12 = [2160]
	$10 = (int_64)0
	
.LOOP $label$21:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$22 }
	$2 = *($12)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$2 = ($2 + [165])
	goto $label$23 
	
.LABEL $label$24
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$22
	$12 = ($12 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$10 = ((int_64)$7 | (int_64)$10)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$21 }
	$8 = (int_64)0
	$7 = (int_64)59
	$12 = [2176]
	$11 = (int_64)0
	
.LOOP $label$25:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$30 }
	$2 = *($12)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$2 = ($2 + [165])
	goto $label$28 
	
.LABEL $label$30
	$1 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$26
	$12 = ($12 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$11 = ((int_64)$1 | (int_64)$11)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$25 }
	CALL $767($13, ($13 + [120]))
	CALL $767(($13 + [12]), ($13 + [104]))
	*($13 + [32]) = $11
	*($13 + [24]) = $10
	*(($12 = CALL $737([16]))) = $4
	*($12 + [8]) = $9
	$2 = ($12 + [16])
	*(($13 + [48])) = $2
	*(($13 + [44])) = $2
	*($13 + [40]) = $12
	CALL $86(($13 + [52]), $13)
	CALL $87(($13 + [176]), ($13 + [24]))
	$12 = *($13 + [176])
	CALL send_inline($12, (*($13 + [180]) - $12))
	$12 = *($13 + [176])
	if ( ($12 == 0) ){ goto $label$31 }
	*($13 + [180]) = $12
	CALL $738($12)
	
.LABEL $label$31
	$12 = *($13 + [52])
	if ( ($12 == 0) ){ goto $label$32 }
	*(($13 + [56])) = $12
	CALL $738($12)
	
.LABEL $label$32
	$12 = *($13 + [40])
	if ( ($12 == 0) ){ goto $label$33 }
	*(($13 + [44])) = $12
	CALL $738($12)
	
.LABEL $label$33
	if ( ((*($13 + [12]) & [1]) == 0) ){ goto $label$34 }
	CALL $738(*(($13 + [20])))
	
.LABEL $label$34
	if ( ((*($13) & [1]) == 0) ){ goto $label$35 }
	CALL $738(*($13 + [8]))
	
.LABEL $label$35
	if ( ((*($13 + [104]) & [1]) == 0) ){ goto $label$36 }
	CALL $738(*($13 + [112]))
	
.LABEL $label$36
	if ( ((*($13 + [120]) & [1]) == 0) ){ goto $label$6 }
	CALL $738(*($13 + [128]))
	
.LABEL $label$6
	$3 = *($13 + [160])
	if ( ($3 == 0) ){ goto $label$37 }
	$0 = ($13 + [164])
	$12 = *($0)
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$39 }
	
.LOOP $label$40:
	$12 = ($12 + [-24])
	$2 = *($12)
	*($12) = [0]
	if ( ($2 == 0) ){ goto $label$41 }
	CALL $738($2)
	
.LABEL $label$41
	if ( ((int_32)$3 != (int_32)$12) ){ goto $label$40 }
	$12 = *(($13 + [160]))
	goto $label$38 
	
.LABEL $label$39
	$12 = $3
	
.LABEL $label$38
	*($0) = $3
	CALL $738($12)
	
.LABEL $label$37
	*([0] + [4]) = ($13 + [192])
	return (unreachable)
	
.LABEL $label$5
	CALL $739(($13 + [120]))
}

void .FUNC $82 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $80 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [44]) & [1]) == 0) ){ goto $label$11 }
	CALL $738(*(($1 + [52])))
	
.LABEL $label$11
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$12 }
	CALL $738(*(($1 + [40])))
	
.LABEL $label$12
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $738($6)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $707 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [64])
	*([0] + [4]) = $4
	$2 = *($1)
	CALL $767(($4 + [16]), ($1 + [8]))
	CALL $767($4, ($1 + [20]))
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $767(($4 + [48]), ($4 + [16]))
	CALL $767(($4 + [32]), $4)
	CALL void $0((int_32 $2), (int_64 ($4 + [48])), (int_32 ($4 + [32])), (int_32 $1))
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*($4 + [40]))
	
.LABEL $label$2
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($4 + [56]))
	
.LABEL $label$3
	if ( ((*($4) & [1]) == 0) ){ goto $label$4 }
	CALL $738(*($4 + [8]))
	
.LABEL $label$4
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $738(*($4 + [24]))
	
.LABEL $label$5
	*([0] + [4]) = ($4 + [64])
}

void .FUNC $706 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $767($6, ($1 + [16]))
	$4 = *($1 + [32])
	$1 = *($0 + [4])
	$5 = *($1 + [4])
	$0 = (*(*($0)) + int_32($5 >> [1]))
	$1 = *($1)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $767(($6 + [16]), $6)
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($6 + [16])), (int_32 $4), (int_64 $1))
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*($6 + [24]))
	
.LABEL $label$2
	if ( ((*($6) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($6 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $705 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [272])
	*([0] + [4]) = $5
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [48]), *($4 + [4]), [8])
	$2 = (*($4 + [4]) + [8])
	*($4 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [56]), *($4 + [4]), [8])
	$2 = (*($4 + [4]) + [8])
	*($4 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [64]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($4 + [72]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($4 + [80]), *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($4 + [84]), *($3 + [4]), [2])
	*($3 + [4]) = (*($3 + [4]) + [2])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($4 + [86]), *($3 + [4]), [2])
	*($3 + [4]) = (*($3 + [4]) + [2])
	*($5) = *($1)
	*($5 + [12]) = ($4 + [89])
	*($5 + [8]) = ($4 + [88])
	*($5 + [16]) = ($4 + [90])
	*($5 + [20]) = ($4 + [91])
	*($5 + [24]) = ($4 + [92])
	*($5 + [28]) = ($4 + [93])
	*($5 + [32]) = ($4 + [94])
	*($5 + [36]) = ($4 + [95])
	*($5 + [40]) = ($4 + [96])
	*($5 + [44]) = ($4 + [97])
	*($5 + [48]) = ($4 + [98])
	*($5 + [52]) = ($4 + [99])
	*($5 + [56]) = ($4 + [100])
	*($5 + [60]) = ($4 + [101])
	*($5 + [64]) = ($4 + [102])
	*($5 + [68]) = ($4 + [103])
	*($5 + [72]) = ($4 + [104])
	*($5 + [76]) = ($4 + [105])
	*($5 + [80]) = ($4 + [106])
	*($5 + [84]) = ($4 + [107])
	*($5 + [88]) = ($4 + [108])
	*($5 + [92]) = ($4 + [109])
	*($5 + [96]) = ($4 + [110])
	*($5 + [100]) = ($4 + [111])
	*($5 + [104]) = ($4 + [112])
	*($5 + [108]) = ($4 + [113])
	*($5 + [112]) = ($4 + [114])
	*($5 + [116]) = ($4 + [115])
	*($5 + [120]) = ($4 + [116])
	*($5 + [124]) = ($4 + [117])
	*($5 + [128]) = ($4 + [118])
	*($5 + [132]) = ($4 + [119])
	*($5 + [136]) = ($4 + [120])
	*($5 + [140]) = ($4 + [121])
	*($5 + [144]) = ($4 + [122])
	*($5 + [148]) = ($4 + [123])
	*($5 + [152]) = ($4 + [124])
	*($5 + [156]) = ($4 + [125])
	*($5 + [160]) = ($4 + [126])
	*($5 + [164]) = ($4 + [127])
	*($5 + [168]) = ($4 + [128])
	*($5 + [172]) = ($4 + [129])
	*($5 + [176]) = ($4 + [130])
	*($5 + [180]) = ($4 + [131])
	*($5 + [184]) = ($4 + [132])
	*($5 + [188]) = ($4 + [133])
	*($5 + [192]) = ($4 + [134])
	*($5 + [196]) = ($4 + [135])
	*($5 + [200]) = ($4 + [136])
	*($5 + [204]) = ($4 + [137])
	*($5 + [208]) = ($4 + [138])
	*($5 + [212]) = ($4 + [139])
	*($5 + [216]) = ($4 + [140])
	*($5 + [220]) = ($4 + [141])
	*($5 + [224]) = ($4 + [142])
	*($5 + [228]) = ($4 + [143])
	*($5 + [232]) = ($4 + [144])
	*($5 + [236]) = ($4 + [145])
	*($5 + [240]) = ($4 + [146])
	*($5 + [244]) = ($4 + [147])
	*($5 + [248]) = ($4 + [148])
	*($5 + [252]) = ($4 + [149])
	*($5 + [256]) = ($4 + [150])
	*($5 + [260]) = ($4 + [151])
	*($5 + [264]) = ($4 + [152])
	*($5 + [268]) = ($4 + [153])
	CALL $669(($5 + [8]), $5)
	*([0] + [4]) = ($5 + [272])
}

void .FUNC $704 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [544])
	CALL memcpy(($4 + [15]), *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	*($0 + [16]) = ((int_32)*($4 + [15]) != (int_32)[0])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [40]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	*($4 + [8]) = $0
	CALL $705(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $703 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	$4 = [0]
	*($0 + [16]) = [0]
	*($0 + [24]) = (int_64)0
	*(($0 + [40])) = (int_64)0
	*(($0 + [32])) = (int_64)1398362884
	CALL eosio_assert([1], [2768])
	$3 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [2832])
	*($0 + [48]) = (int_64)0
	*(($0 + [64])) = (int_64)0
	*(($0 + [56])) = (int_64)1398362884
	CALL eosio_assert([1], [2768])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [2832])
	*($0 + [72]) = (int_64)0
	*($0 + [80 align=4]) = (int_64)0
	CALL memset(($0 + [88]), [0], [66])
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $704(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $341 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$8 = *($4 + [16])
	if ( ((int_64)$8 != (int_64)-1) ){ goto $label$1 }
	$8 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)6291761009430009344, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $164($4, $5)
	*($9 + [12]) = [0]
	*($9 + [8]) = $4
	$8 = ((int_64)*(*(CALL $345(($9 + [8])) + [4])) + (int_64)1)
	
.LABEL $label$2
	*(($4 + [16])) = $8
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($8 <= (int_64)-2), [2192])
	*($1) = *(($4 + [16]))
	*($1 + [8]) = *(*($3 + [4]))
	$10 = $10
	$4 = ($10 + [-16])
	*([0] + [4]) = $4
	CALL eosio_assert([1], [496])
	CALL memcpy($4, $1, [4])
	CALL eosio_assert([1], [496])
	$10 = ($1 + [8])
	CALL memcpy(($10 + [-12]), $10, [8])
	$8 = *($1)
	*($1 + [20]) = CALL db_store_i64(*($2 + [8]), (int_64)6291761009430009344, *(*($0 + [8])), $8, $4, [12])
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ((int_64)$8 + (int_64)1)
	
.LABEL $label$3
	$8 = *(($2 + [8]))
	$6 = *(*(($0 + [8])))
	$7 = *($1)
	*($9 + [8]) = *($10)
	*($1 + [24]) = CALL db_idx64_store($8, (int_64)6291761009430009344, $6, $7, ($9 + [8]))
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $701 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$4 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($4 + [48]), *($2 + [4]), [8])
	$3 = (*($2 + [4]) + [8])
	*($2 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $3) > (uint_32)[7]), [544])
	CALL memcpy(($4 + [56]), *($2 + [4]), [8])
	$3 = (*($2 + [4]) + [8])
	*($2 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $3) > (uint_32)[7]), [544])
	CALL memcpy(($4 + [64]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [72]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [80]), *($4 + [4]), [4])
	*($4 + [4]) = (*($4 + [4]) + [4])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($2 + [84]), *($4 + [4]), [2])
	*($4 + [4]) = (*($4 + [4]) + [2])
	*($5 + [8]) = $2
	CALL $702(($5 + [8]), $1)
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $700 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [544])
	CALL memcpy(($4 + [15]), *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	*($0 + [16]) = ((int_32)*($4 + [15]) != (int_32)[0])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [40]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	*($4 + [8]) = $0
	CALL $701(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC _ZN11walexchange12wal_exchange11regexchangeEyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [160])
	*([0] + [4]) = $7
	*($7 + [112]) = $1
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*($0) != (int_64)$1), [6096])
	CALL eosio_assert(CALL $fimport$46($1), [6128])
	*($7 + [104]) = *($0)
	CALL _ZN11walexchange24contract_account_manager25get_or_create_eos_accountEyh(($7 + [104]), $1, [1])
	*(($7 + [96])) = [0]
	*($7 + [80]) = (int_64)-1
	*($7 + [88]) = (int_64)0
	$1 = *($0)
	*($7 + [64]) = $1
	*($7 + [72]) = $1
	*($7 + [100]) = [0]
	*($7 + [56]) = ($7 + [64])
	CALL $161(($7 + [16]), ($7 + [56]), ($7 + [112]))
	$3 = *($7 + [20])
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((int_64)*($7 + [112]) == (int_64)*($3 + [8])) ){ goto $label$2 }
	
.LABEL $label$3
	$1 = *($0)
	*($7 + [4]) = ($7 + [112])
	*($7) = ($7 + [64])
	*($7 + [128]) = $1
	CALL eosio_assert(((int_64)*($7 + [64]) == (int_64)CALL $fimport$16()), [432])
	*($7 + [20]) = $7
	*($7 + [16]) = ($7 + [64])
	*($7 + [24]) = ($7 + [128])
	*(($3 = CALL $737([32])) + [16]) = ($7 + [64])
	CALL $341(($7 + [16]), $3)
	*($7 + [144]) = $3
	$1 = *($3)
	*($7 + [16]) = $1
	$6 = *($3 + [20])
	*($7 + [152]) = $6
	$4 = ($7 + [92])
	$5 = *($4)
	if ( ((uint_32)$5 >= (uint_32)*((($7 + [64]) + [32]))) ){ goto $label$5 }
	*($5 + [8]) = $1
	*($5 + [16]) = $6
	*($7 + [144]) = [0]
	*($5) = $3
	*($4) = ($5 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $165(($7 + [88]), ($7 + [144]), ($7 + [16]), ($7 + [152]))
	
.LABEL $label$4
	$3 = *($7 + [144])
	*($7 + [144]) = [0]
	if ( ($3 == 0) ){ goto $label$2 }
	CALL $738($3)
	
.LABEL $label$2
	*(($5 = (($7 + [16]) + [32]))) = [0]
	*($7 + [32]) = (int_64)-1
	*($7 + [40]) = (int_64)0
	$1 = *($0)
	*($7 + [16]) = $1
	*($7 + [24]) = $1
	*($7 + [4]) = $2
	*($7) = $0
	*($7 + [8]) = ($7 + [112])
	*($7 + [144]) = $1
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$16()), [432])
	*($7 + [132]) = $7
	*($7 + [128]) = ($7 + [16])
	*($7 + [136]) = ($7 + [144])
	*(($0 = CALL $737([32])) + [16]) = ($7 + [16])
	CALL $342(($7 + [128]), $0)
	*($7 + [152]) = $0
	$1 = *($0)
	*($7 + [128]) = $1
	$2 = *($0 + [20])
	*($7 + [124]) = $2
	$6 = ($7 + [44])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*($5)) ){ goto $label$7 }
	*($3 + [8]) = $1
	*($3 + [16]) = $2
	*($7 + [152]) = [0]
	*($3) = $0
	*($6) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $343(($7 + [40]), ($7 + [152]), ($7 + [128]), ($7 + [124]))
	
.LABEL $label$6
	$0 = *($7 + [152])
	*($7 + [152]) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $738($0)
	
.LABEL $label$8
	$2 = *($7 + [40])
	if ( ($2 == 0) ){ goto $label$9 }
	$5 = ($7 + [44])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$13 }
	CALL $738($3)
	
.LABEL $label$13
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($7 + [40]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $2
	
.LABEL $label$10
	*($5) = $2
	CALL $738($0)
	
.LABEL $label$9
	$2 = *($7 + [88])
	if ( ($2 == 0) ){ goto $label$14 }
	$5 = ($7 + [92])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$16 }
	
.LOOP $label$17:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$18 }
	CALL $738($3)
	
.LABEL $label$18
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$17 }
	$0 = *(($7 + [88]))
	goto $label$15 
	
.LABEL $label$16
	$0 = $2
	
.LABEL $label$15
	*($5) = $2
	CALL $738($0)
	
.LABEL $label$14
	*([0] + [4]) = ($7 + [160])
}

void .FUNC $709 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$4 = *($0)
	$7 = *($1)
	CALL eosio_assert(((uint_32)(*($7 + [8]) - *($7 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($4, *($7 + [4]), [8])
	*($7 + [4]) = (*($7 + [4]) + [8])
	$2 = *($0)
	$7 = *($1)
	CALL eosio_assert(((uint_32)(*($7 + [8]) - *($7 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [8]), *($7 + [4]), [4])
	*($7 + [4]) = (*($7 + [4]) + [4])
	$7 = *($1)
	CALL eosio_assert(((uint_32)(*($7 + [8]) - *($7 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [16]), *($7 + [4]), [8])
	*($7 + [4]) = (*($7 + [4]) + [8])
	$4 = *($1)
	$7 = *($4 + [4])
	$6 = [0]
	$5 = (int_64)0
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *(($4 + [8]))), [656])
	$3 = ($4 + [4])
	$7 = *($3)
	$0 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($0 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($0 >> [7]) ){ goto $label$1 }
	*($2 + [24]) = $5
	$0 = [28]
	$6 = ($4 + [8])
	$4 = ($4 + [4])
	
.LOOP $label$2:
	CALL eosio_assert(((int_32)*($6) != (int_32)$7), [544])
	CALL memcpy(($2 + $0), *($4), [1])
	$7 = (*($4) + [1])
	*($4) = $7
	$0 = ($0 + [1])
	if ( ((int_32)$0 != (int_32)[61]) ){ goto $label$2 }
	*($8 + [8]) = $2
	CALL $710(($8 + [8]), $1)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $708 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = *($0)
	$8 = *($1)
	CALL eosio_assert(((uint_32)(*($8 + [8]) - *($8 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($6, *($8 + [4]), [8])
	*($8 + [4]) = (*($8 + [4]) + [8])
	$2 = *($0)
	$3 = *($1)
	$8 = *($3 + [4])
	$6 = [0]
	$7 = (int_64)0
	$5 = ($3 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($8 <= *(($3 + [8]))), [656])
	$8 = *($5)
	$0 = *($8)
	$8 = ($8 + [1])
	*($5) = $8
	$6 = ($6 & [255])
	$7 = ((int_64)(CASTING uint_64)(uint_32 (($0 & [127]) << $6)) | (int_64)$7)
	$6 = ($6 + [7])
	if ( uint_32($0 >> [7]) ){ goto $label$1 }
	*($2 + [8]) = $7
	$0 = [12]
	$5 = ($3 + [8])
	$6 = ($3 + [4])
	
.LOOP $label$2:
	CALL eosio_assert(((int_32)*($5) != (int_32)$8), [544])
	CALL memcpy(($2 + $0), *($6), [1])
	$8 = (*($6) + [1])
	*($6) = $8
	$0 = ($0 + [1])
	if ( ((int_32)$0 != (int_32)[45]) ){ goto $label$2 }
	$4 = *($1)
	$8 = *($4 + [4])
	$6 = [0]
	$7 = (int_64)0
	$3 = ($4 + [8])
	$5 = ($4 + [4])
	
.LOOP $label$3:
	CALL eosio_assert(($8 <= *($3)), [656])
	$8 = *($5)
	$0 = *($8)
	$8 = ($8 + [1])
	*($5) = $8
	$6 = ($6 & [255])
	$7 = ((int_64)(CASTING uint_64)(uint_32 (($0 & [127]) << $6)) | (int_64)$7)
	$6 = ($6 + [7])
	if ( uint_32($0 >> [7]) ){ goto $label$3 }
	*(($2 + [48])) = $7
	$5 = ($2 + [52])
	$0 = [0]
	$3 = ($4 + [8])
	$6 = ($4 + [4])
	
.LOOP $label$4:
	CALL eosio_assert(((int_32)*($3) != (int_32)$8), [544])
	CALL memcpy(($5 + $0), *($6), [1])
	$8 = (*($6) + [1])
	*($6) = $8
	$0 = ($0 + [1])
	if ( ((int_32)$0 != (int_32)[33]) ){ goto $label$4 }
	$8 = *($1)
	CALL eosio_assert(((int_32)*($8 + [8]) != (int_32)*($8 + [4])), [544])
	CALL memcpy(($9 + [15]), *($8 + [4]), [1])
	*($8 + [4]) = (*($8 + [4]) + [1])
	*($2 + [88]) = ((int_32)*($9 + [15]) != (int_32)[0])
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $497 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	$11 = $12
	*([0] + [4]) = $12
	$2 = *($0)
	$3 = *($0 + [4])
	$6 = *($3)
	if ( (*($6) & [1]) ){ goto $label$2 }
	$7 = ($6 + [1])
	goto $label$1 
	
.LABEL $label$2
	$7 = *($6 + [8])
	
.LABEL $label$1
	$6 = [-1]
	
.LOOP $label$3:
	$5 = ($7 + $6)
	$4 = ($6 + [1])
	$6 = $4
	if ( *(($5 + [1])) ){ goto $label$3 }
	$9 = (int_64)0
	if ( ($4 == 0) ){ goto $label$4 }
	$8 = (CASTING uint_64)(uint_32 $4)
	$10 = (int_64)8
	$9 = (int_64)0
	
.LOOP $label$5:
	$6 = *($7)
	if ( ((uint_32)(($6 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$9 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$10 & (int_64)4294967288)) | (int_64)$9)
	
.LABEL $label$6
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)8)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 != (int_64)0) ){ goto $label$5 }
	
.LABEL $label$4
	*($1) = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = ($1 + [8])
	CALL $740($5, *($3))
	$6 = *($1 + [8])
	$7 = ( *(($1 + [12])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($7 + [8])
	$10 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$7:
	$6 = ($6 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$7 }
	if ( ($6 <= [513]) ){ goto $label$9 }
	$7 = CALL malloc($6)
	goto $label$8 
	
.LABEL $label$9
	$7 = ($12 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$8
	*($11) = $7
	*($11 + [8]) = ($7 + $6)
	CALL eosio_assert(((int_32)$6 > (int_32)[7]), [496])
	CALL memcpy($7, $1, [8])
	*($11 + [4]) = ($7 + [8])
	CALL $91($11, $5)
	$10 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($2 + [8]), (int_64)8201287169113849856, *(*($0 + [8])), $10, $7, $6)
	if ( ($6 <= [513]) ){ goto $label$10 }
	CALL free($7)
	
.LABEL $label$10
	if ( (uint_64)($10 <= *($2 + [16])) ){ goto $label$11 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($11 + [16])
}

void .FUNC _ZN11walexchange12wal_exchange8addchainENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [96])
	*([0] + [4]) = $6
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($3 = (($6 + [16]) + [32]))) = [0]
	*($6 + [32]) = (int_64)-1
	*($6 + [40]) = (int_64)0
	$4 = *($0)
	*($6 + [16]) = $4
	*($6 + [24]) = $4
	*($6 + [8]) = $1
	*($6 + [88]) = $4
	CALL eosio_assert(((int_64)$4 == (int_64)CALL $fimport$16()), [432])
	*($6 + [68]) = ($6 + [8])
	*($6 + [64]) = ($6 + [16])
	*($6 + [72]) = ($6 + [88])
	*(($0 = CALL $737([32])) + [16]) = [0]
	*($0 + [8 align=4]) = (int_64)0
	*($0 + [20]) = ($6 + [16])
	CALL $497(($6 + [64]), $0)
	*($6 + [80]) = $0
	$4 = *($0)
	*($6 + [64]) = $4
	$2 = *($0 + [24])
	*($6 + [60]) = $2
	$5 = ($6 + [44])
	$1 = *($5)
	if ( ((uint_32)$1 >= (uint_32)*($3)) ){ goto $label$3 }
	*($1 + [8]) = $4
	*($1 + [16]) = $2
	*($6 + [80]) = [0]
	*($1) = $0
	*($5) = ($1 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $498(($6 + [40]), ($6 + [80]), ($6 + [64]), ($6 + [60]))
	
.LABEL $label$2
	$0 = *($6 + [80])
	*($6 + [80]) = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	if ( ((*($0 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $738(*(($0 + [16])))
	
.LABEL $label$5
	CALL $738($0)
	
.LABEL $label$4
	$3 = *($6 + [40])
	if ( ($3 == 0) ){ goto $label$6 }
	$2 = ($6 + [44])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $738(*(($1 + [16])))
	
.LABEL $label$11
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$9 }
	$0 = *(($6 + [40]))
	goto $label$7 
	
.LABEL $label$8
	$0 = $3
	
.LABEL $label$7
	*($2) = $3
	CALL $738($0)
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [96])
}

void .FUNC $495 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC _ZN11walexchange12wal_exchange11cancelorderEyybN5eosio14extended_assetES2_ymttNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE9signaturetyS2_S2_ (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_64 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12, int_64 $13, int_32 $14, int_32 $15)
{
	int_64 $16
	int_64 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_64 $21
	int_32 $22
	int_32 $23
	int_32 $24
	$24 = (*([0] + [4]) - [592])
	*([0] + [4]) = $24
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	*($24 + [544]) = *($0)
	$22 = [1]
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($24 + [544]), $1, [1])
	*($24 + [536]) = *($0)
	*($24 + [528]) = [0]
	*($24 + [520]) = (int_64)0
	*($24 + [512]) = [0]
	*($24 + [504]) = (int_64)0
	*($24 + [496]) = [0]
	*($24 + [488]) = (int_64)0
	*($24 + [480]) = [0]
	*($24 + [472]) = (int_64)0
	*($24 + [464]) = [0]
	*($24 + [456]) = (int_64)0
	*($24 + [448]) = [0]
	*($24 + [440]) = (int_64)0
	*($24 + [432]) = [0]
	*($24 + [424]) = (int_64)0
	CALL $767(($24 + [408]), $10)
	CALL $44(($24 + [536]), ($24 + [408]), ($24 + [520]), ($24 + [504]), ($24 + [488]), ($24 + [472]), ($24 + [456]), ($24 + [440]), ($24 + [424]))
	if ( ((*($24 + [408]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*($24 + [416]))
	
.LABEL $label$2
	$23 = ($18 & [1])
	$18 = *($24 + [440])
	$18 = ( *($24 + [444]) ? uint_32($18 >> [1]) : $23 )
	if ( ($18 == 0) ){ goto $label$3 }
	$22 = ( *(($24 + [448])) ? (($24 + [440]) | [1]) : $23 )
	
.LOOP $label$5:
	if ( (CALL isdigit(*($22)) == 0) ){ goto $label$4 }
	$22 = ($22 + [1])
	$18 = ($18 + [-1])
	if ( $18 ){ goto $label$5 }
	$22 = [1]
	goto $label$3 
	
.LABEL $label$4
	$22 = [0]
	
.LABEL $label$3
	CALL eosio_assert($22, [1408])
	$23 = [0]
	$22 = *($24 + [440])
	if ( (( *($24 + [444]) ? uint_32($22 >> [1]) : ($22 & [1]) ) == 0) ){ goto $label$6 }
	$23 = ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($24 + [440]), [0], [10]) & [65535]) == (int_32)[1])
	
.LABEL $label$6
	$16 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($24 + [544]), $2, [0])
	*($24 + [392]) = $1
	*($24 + [400]) = [60]
	*($24 + [384]) = *($0)
	if ( (CALL _ZN11walexchange13order_manager12exists_orderEy(($24 + [384]), $6) == 0) ){ goto $label$8 }
	*(($24 + [376])) = [0]
	*($24 + [360]) = (int_64)-1
	*($24 + [368]) = (int_64)0
	$17 = *($0)
	*($24 + [344]) = $17
	*($24 + [352]) = $17
	*($24 + [380]) = [0]
	*($24 + [336]) = ($24 + [344])
	*($24 + [200]) = *($5 + [16])
	*($24 + [192]) = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8)
	CALL $46(($24 + [128]), ($24 + [336]), ($24 + [192]))
	$18 = [0]
	$22 = *($24 + [132])
	if ( ($22 == 0) ){ goto $label$9 }
	$18 = ( $22 ? [0] : (int_64)(((int_64)((int_64)*($24 + [192]) ^ (int_64)(uint_64)*($22 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($24 + [200]) ^ (int_64)*(($22 + [16])))) == 0) )
	
.LABEL $label$9
	CALL eosio_assert(((int_32)$18 != (int_32)[0]), [1456])
	*(($22 = (($24 + [280]) + [16]))) = *(($4 + [16]))
	*(($18 = (($24 + [280]) + [8]))) = *(($4 + [8]))
	*($24 + [280]) = *($4)
	*(($19 = (($24 + [256]) + [16]))) = *(($5 + [16]))
	*(($20 = (($24 + [256]) + [8]))) = *(($5 + [8]))
	*($24 + [256]) = *($5)
	CALL $767(($24 + [240]), $10)
	*((($24 + [40]) + [16])) = *($22)
	*((($24 + [40]) + [8])) = *($18)
	*((($24 + [16]) + [16])) = *($19)
	*((($24 + [16]) + [8])) = *($20)
	*($24 + [40]) = *($24 + [280])
	*($24 + [16]) = *($24 + [256])
	CALL _ZN11walexchange21order_withdraw_helper14get_order_hashEyybN5eosio14extended_assetES2_ymttNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtP11checksum256(($24 + [536]), $2, $1, $3, ($24 + [40]), ($24 + [16]), $6, $7, $8, $9, ($24 + [240]), $12, ($24 + [304]))
	if ( ((*($24 + [240]) & [1]) == 0) ){ goto $label$10 }
	CALL $738(*($24 + [248]))
	
.LABEL $label$10
	*((($24 + [192]) + [32])) = [0]
	*($24 + [208]) = (int_64)-1
	*($24 + [216]) = (int_64)0
	$17 = *($0)
	*($24 + [192]) = $17
	*($24 + [200]) = $17
	$5 = CALL $19(($24 + [192]), $16, [592])
	if ( (uint_64)($6 <= (int_64)281474976710656) ){ goto $label$16 }
	$22 = [1]
	$10 = ($18 & [1])
	$18 = *($24 + [504])
	$18 = ( *($24 + [508]) ? uint_32($18 >> [1]) : $10 )
	if ( ($18 == 0) ){ goto $label$14 }
	$22 = ( *(($24 + [512])) ? (($24 + [504]) | [1]) : $10 )
	
.LOOP $label$17:
	if ( (CALL isdigit(*($22)) == 0) ){ goto $label$15 }
	$22 = ($22 + [1])
	$18 = ($18 + [-1])
	if ( $18 ){ goto $label$17 }
	$22 = [1]
	goto $label$14 
	
.LABEL $label$16
	*((($24 + [128]) + [32])) = [0]
	*($24 + [136]) = $1
	*($24 + [144]) = (int_64)-1
	*($24 + [152]) = (int_64)0
	*($24 + [128]) = *($0)
	*($24 + [164]) = [0]
	CALL eosio_assert((CALL $806(($24 + [304]), (CALL $72(($24 + [128]), $6, [1952]) + [48]), [32]) == 0), [1984])
	$5 = *($24 + [152])
	if ( ($5 == 0) ){ goto $label$11 }
	$10 = ($24 + [156])
	$22 = *($10)
	if ( ((int_32)$22 == (int_32)$5) ){ goto $label$13 }
	
.LOOP $label$18:
	$22 = ($22 + [-24])
	$18 = *($22)
	*($22) = [0]
	if ( ($18 == 0) ){ goto $label$19 }
	CALL $738($18)
	
.LABEL $label$19
	if ( ((int_32)$5 != (int_32)$22) ){ goto $label$18 }
	$22 = *(($24 + [152]))
	goto $label$12 
	
.LABEL $label$15
	$22 = [0]
	
.LABEL $label$14
	CALL eosio_assert($22, [1408])
	$22 = [0]
	$18 = *($24 + [504])
	if ( (( *($24 + [508]) ? uint_32($18 >> [1]) : ($18 & [1]) ) == 0) ){ goto $label$20 }
	$22 = ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($24 + [504]), [0], [10]) & [65535]) == (int_32)[1])
	
.LABEL $label$20
	CALL eosio_assert(((int_32)$22 ^ (int_32)[1]), [1920])
	$22 = *(($5 + [8]))
	$16 = *($5)
	*((($24 + [168]) + [16])) = (int_64)0
	*((($24 + [168]) + [8])) = $22
	*($24 + [168]) = $16
	*($24 + [180]) = [0]
	$22 = (*(($5 + [16])) - *($5 + [12]))
	$18 = ((int_32)$22 / (int_32)[40])
	if ( ($22 == 0) ){ goto $label$21 }
	if ( ((uint_32)$18 >= (uint_32)[107374183]) ){ goto $label$7 }
	$22 = CALL $737($22)
	*((($24 + [168]) + [12])) = $22
	*(($24 + [188])) = ($22 + ((int_32)$18 * (int_32)[40]))
	*(($18 = (($24 + [168]) + [16]))) = $22
	$10 = *(($5 + [12]))
	$5 = (*(($5 + [16])) - $10)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$21 }
	CALL memcpy($22, $10, $5)
	*($18) = (*($18) + ((int_32)((uint_32)$5 / (uint_32)[40]) * (int_32)[40]))
	
.LABEL $label$21
	CALL _ZN11walexchange12wal_exchange18assert_has_pub_keyERK11checksum256RK9signatureNS_4userE($0, ($24 + [304]), $11, ($24 + [168]))
	$22 = *($24 + [180])
	if ( ($22 == 0) ){ goto $label$11 }
	*(($24 + [184])) = $22
	CALL $738($22)
	goto $label$11 
	
.LABEL $label$13
	$22 = $5
	
.LABEL $label$12
	*($10) = $5
	CALL $738($22)
	
.LABEL $label$11
	*(($5 = ($24 + [160]))) = [0]
	*($24 + [136]) = $1
	*($24 + [144]) = (int_64)-1
	*($24 + [152]) = (int_64)0
	$16 = *($0)
	*($24 + [128]) = $16
	*($24 + [164]) = [0]
	CALL eosio_assert(((int_64)$16 == (int_64)CALL $fimport$16()), [432])
	*(($22 = CALL $737([40])) + [24]) = ($24 + [128])
	*($22 + [8]) = $13
	*($22) = $6
	CALL eosio_assert([1], [496])
	CALL memcpy(($24 + [560]), $22, [8])
	CALL eosio_assert([1], [496])
	$18 = ($22 + [8])
	CALL memcpy((($24 + [560]) | [8]), $18, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($24 + [560]) + [16]), ($22 + [16]), [1])
	$17 = *($22)
	*($22 + [28]) = CALL db_store_i64(*($24 + [136]), (int_64)-3670317554737348608, $16, $17, ($24 + [560]), [17])
	if ( (uint_64)($17 <= *($24 + [144])) ){ goto $label$22 }
	*((($24 + [128]) + [16])) = ( (int_64)-2 ? ((int_64)$17 + (int_64)1) : ((uint_64)$17 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	$17 = *($22)
	$21 = *((($24 + [128]) + [8]))
	*($24 + [584]) = *($18)
	*($22 + [32]) = CALL db_idx64_store($21, (int_64)-3670317554737348608, $16, $17, ($24 + [584]))
	*($24 + [584]) = $22
	$16 = *($22)
	*($24 + [560]) = $16
	$10 = *(($22 + [28]))
	*($24 + [556]) = $10
	$3 = (($24 + [128]) + [28])
	$18 = *($3)
	if ( ((uint_32)$18 >= (uint_32)*($5)) ){ goto $label$24 }
	*($18 + [8]) = $16
	*($18 + [16]) = $10
	*($24 + [584]) = [0]
	*($18) = $22
	*($3) = ($18 + [24])
	goto $label$23 
	
.LABEL $label$24
	CALL $73(($24 + [152]), ($24 + [584]), ($24 + [560]), ($24 + [556]))
	
.LABEL $label$23
	$22 = *($24 + [584])
	*($24 + [584]) = [0]
	if ( ($22 == 0) ){ goto $label$25 }
	CALL $738($22)
	
.LABEL $label$25
	$22 = [1]
	$5 = ($18 & [1])
	$18 = *($24 + [504])
	$18 = ( *($24 + [508]) ? uint_32($18 >> [1]) : $5 )
	if ( ($18 == 0) ){ goto $label$26 }
	$22 = ( *(($24 + [512])) ? (($24 + [504]) | [1]) : $5 )
	
.LOOP $label$28:
	if ( (CALL isdigit(*($22)) == 0) ){ goto $label$27 }
	$22 = ($22 + [1])
	$18 = ($18 + [-1])
	if ( $18 ){ goto $label$28 }
	$22 = [1]
	goto $label$26 
	
.LABEL $label$27
	$22 = [0]
	
.LABEL $label$26
	CALL eosio_assert($22, [1408])
	$22 = *($24 + [504])
	if ( (( *($24 + [508]) ? uint_32($22 >> [1]) : ($22 & [1]) ) == 0) ){ goto $label$29 }
	$22 = [1]
	if ( ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($24 + [504]), [0], [10]) & [65535]) != (int_32)[1]) ){ goto $label$29 }
	*($24 + [112]) = *($4 + [8])
	*($24 + [120]) = *($4 + [16])
	$16 = *($15)
	$17 = *($14)
	CALL $767(($24 + [96]), ($24 + [488]))
	CALL $767(($24 + [80]), ($24 + [472]))
	$5 = ($18 & [1])
	$18 = *($24 + [456])
	$18 = ( *($24 + [460]) ? uint_32($18 >> [1]) : $5 )
	if ( ($18 == 0) ){ goto $label$30 }
	$22 = ( *(($24 + [464])) ? (($24 + [456]) | [1]) : $5 )
	
.LOOP $label$32:
	if ( (CALL isdigit(*($22)) == 0) ){ goto $label$31 }
	$22 = ($22 + [1])
	$18 = ($18 + [-1])
	if ( $18 ){ goto $label$32 }
	$22 = [1]
	goto $label$30 
	
.LABEL $label$31
	$22 = [0]
	
.LABEL $label$30
	CALL eosio_assert($22, [1408])
	$22 = *($24 + [456])
	if ( (( *($24 + [460]) ? uint_32($22 >> [1]) : ($22 & [1]) ) == 0) ){ goto $label$34 }
	$22 = ((int_32)(CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($24 + [456]), [0], [10]) & [65535]) == (int_32)[1])
	goto $label$33 
	
.LABEL $label$34
	$22 = [0]
	
.LABEL $label$33
	CALL $767(($24 + [64]), ($24 + [424]))
	*(($24 + [8])) = *((($24 + [112]) + [8]))
	*($24) = *($24 + [112])
	CALL _ZN11walexchange12wal_exchange15create_withdrawEyyyyN5eosio15extended_symbolExxbhyNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_bbS9_($0, $2, $1, (int_64)0, $13, $24, $17, $16, [1], [2], $6, ($24 + [96]), ($24 + [80]), $22, $23, ($24 + [64]))
	if ( ((*($24 + [64]) & [1]) == 0) ){ goto $label$35 }
	CALL $738(*($24 + [72]))
	
.LABEL $label$35
	if ( ((*($24 + [80]) & [1]) == 0) ){ goto $label$36 }
	CALL $738(*($24 + [88]))
	
.LABEL $label$36
	if ( ((*($24 + [96]) & [1]) == 0) ){ goto $label$29 }
	CALL $738(*($24 + [104]))
	
.LABEL $label$29
	$0 = *($24 + [152])
	if ( ($0 == 0) ){ goto $label$37 }
	$5 = ($24 + [156])
	$22 = *($5)
	if ( ((int_32)$22 == (int_32)$0) ){ goto $label$39 }
	
.LOOP $label$40:
	$22 = ($22 + [-24])
	$18 = *($22)
	*($22) = [0]
	if ( ($18 == 0) ){ goto $label$41 }
	CALL $738($18)
	
.LABEL $label$41
	if ( ((int_32)$0 != (int_32)$22) ){ goto $label$40 }
	$22 = *(($24 + [152]))
	goto $label$38 
	
.LABEL $label$39
	$22 = $0
	
.LABEL $label$38
	*($5) = $0
	CALL $738($22)
	
.LABEL $label$37
	$5 = *($24 + [216])
	if ( ($5 == 0) ){ goto $label$42 }
	$4 = ($24 + [220])
	$22 = *($4)
	if ( ((int_32)$22 == (int_32)$5) ){ goto $label$44 }
	
.LOOP $label$45:
	$22 = ($22 + [-24])
	$18 = *($22)
	*($22) = [0]
	if ( ($18 == 0) ){ goto $label$46 }
	$0 = *($18 + [12])
	if ( ($0 == 0) ){ goto $label$47 }
	*(($18 + [16])) = $0
	CALL $738($0)
	
.LABEL $label$47
	CALL $738($18)
	
.LABEL $label$46
	if ( ((int_32)$5 != (int_32)$22) ){ goto $label$45 }
	$22 = *(($24 + [216]))
	goto $label$43 
	
.LABEL $label$44
	$22 = $5
	
.LABEL $label$43
	*($4) = $5
	CALL $738($22)
	
.LABEL $label$42
	$0 = *($24 + [368])
	if ( ($0 == 0) ){ goto $label$8 }
	$5 = ($24 + [372])
	$22 = *($5)
	if ( ((int_32)$22 == (int_32)$0) ){ goto $label$49 }
	
.LOOP $label$50:
	$22 = ($22 + [-24])
	$18 = *($22)
	*($22) = [0]
	if ( ($18 == 0) ){ goto $label$51 }
	CALL $738($18)
	
.LABEL $label$51
	if ( ((int_32)$0 != (int_32)$22) ){ goto $label$50 }
	$22 = *(($24 + [368]))
	goto $label$48 
	
.LABEL $label$49
	$22 = $0
	
.LABEL $label$48
	*($5) = $0
	CALL $738($22)
	
.LABEL $label$8
	if ( ((*($24 + [424]) & [1]) == 0) ){ goto $label$52 }
	CALL $738(*(($24 + [432])))
	
.LABEL $label$52
	if ( ((*($24 + [440]) & [1]) == 0) ){ goto $label$53 }
	CALL $738(*(($24 + [448])))
	
.LABEL $label$53
	if ( ((*($24 + [456]) & [1]) == 0) ){ goto $label$54 }
	CALL $738(*(($24 + [464])))
	
.LABEL $label$54
	if ( ((*($24 + [472]) & [1]) == 0) ){ goto $label$55 }
	CALL $738(*(($24 + [480])))
	
.LABEL $label$55
	if ( ((*($24 + [488]) & [1]) == 0) ){ goto $label$56 }
	CALL $738(*(($24 + [496])))
	
.LABEL $label$56
	if ( ((*($24 + [504]) & [1]) == 0) ){ goto $label$57 }
	CALL $738(*(($24 + [512])))
	
.LABEL $label$57
	if ( ((*($24 + [520]) & [1]) == 0) ){ goto $label$58 }
	CALL $738(*(($24 + [528])))
	
.LABEL $label$58
	*([0] + [4]) = ($24 + [592])
	return (unreachable)
	
.LABEL $label$7
	CALL $766(($24 + [180]))
}

void .FUNC _ZN11walexchange11rex_manager11rotate_backEh (int_32 $0, int_32 $1)
{
}

void .FUNC _ZN11walexchange11rex_manager17activate_creditorEyb (int_32 $0, int_64 $1, int_32 $2)
{
}

void .FUNC _ZN11walexchange11rex_manager17set_credit_configEmmmmm (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
}

void .FUNC _ZN11walexchange11rex_manager14set_vote_proxyEyy (int_32 $0, int_64 $1, int_64 $2)
{
}

int_32 .FUNC $78 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)8201287169478573024, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $103($0, $5)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [32])
	$10 = $9
	*([0] + [4]) = $9
	$2 = *($0)
	$8 = *($0 + [4])
	if ( (*(*($8)) == 0) ){ goto $label$2 }
	$3 = *($8 + [4])
	$7 = *($3 + [16])
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$3 }
	$7 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($3), *($3 + [8]), (int_64)-2039333636190801408, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	CALL $97($3, $4)
	*($10 + [20]) = [0]
	*($10 + [16]) = $3
	$7 = *(*(CALL $98(($10 + [16])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*(($3 + [16])) = $7
	
.LABEL $label$3
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [2192])
	$7 = ((int_64)*(($3 + [16])) + (int_64)10000)
	goto $label$1 
	
.LABEL $label$2
	$7 = *(*($8 + [8]))
	
.LABEL $label$1
	*($1) = $7
	$7 = (int_64)0
	if ( (*(*($8)) == 0) ){ goto $label$5 }
	$7 = *(*($8 + [12]))
	
.LABEL $label$5
	*($1 + [8]) = $7
	*($1 + [16]) = *(*($8 + [16]))
	*($1 + [24]) = *(*($8 + [20]))
	CALL $740(($1 + [32]), *($8 + [24]))
	CALL $740(($1 + [44]), *($8 + [28]))
	$8 = *($1 + [32])
	$3 = ( *(($1 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($3 + [25])
	$7 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$6:
	$8 = ($8 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$6 }
	$3 = *(($1 + [44]))
	$3 = ( *(($1 + [48])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($3 + $8)
	$7 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$7:
	$8 = ($8 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$7 }
	if ( ($8 <= [513]) ){ goto $label$9 }
	$9 = CALL malloc($8)
	goto $label$8 
	
.LABEL $label$9
	$9 = ($9 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$8
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($9 + $8)
	CALL $99($10, $1)
	$7 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($2 + [8]), (int_64)-2039333636190801408, *(*($0 + [8])), $7, $9, $8)
	if ( ($8 <= [513]) ){ goto $label$10 }
	CALL free($9)
	
.LABEL $label$10
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$11 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	$7 = *(($2 + [8]))
	$5 = *(*(($0 + [8])))
	$6 = *($1)
	*($10 + [24]) = *(($1 + [16]))
	*($10 + [16]) = *(($1 + [8]))
	*($1 + [64]) = CALL db_idx128_store($7, (int_64)-2039333636190801408, $5, $6, ($10 + [16]))
	*([0] + [4]) = ($10 + [32])
}

void .FUNC _ZN11walexchange12wal_exchange8addproxyEyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_ (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [112])
	*([0] + [4]) = $7
	*($7 + [64]) = $1
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	CALL eosio_assert(CALL $fimport$46($1), [9072])
	*(($5 = ($7 + [56]))) = [0]
	*($7 + [40]) = (int_64)-1
	*($7 + [48]) = (int_64)0
	$6 = *($0)
	*($7 + [24]) = $6
	*($7 + [32]) = $6
	$4 = CALL db_find_i64($6, $6, (int_64)8201437361402281984, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $407(($7 + [24]), $4)
	CALL eosio_assert(((int_32)*($0 + [44]) == (int_32)($7 + [24])), [288])
	*($7 + [84]) = $3
	*($7 + [80]) = $2
	CALL eosio_assert([1], [1328])
	CALL $500(($7 + [24]), $0, ($7 + [80]))
	goto $label$2 
	
.LABEL $label$3
	$1 = *($0)
	*($7 + [12]) = $2
	*($7 + [16]) = $3
	*($7 + [8]) = ($7 + [64])
	*($7 + [104]) = $1
	CALL eosio_assert(((int_64)*($7 + [24]) == (int_64)CALL $fimport$16()), [432])
	*($7 + [84]) = ($7 + [8])
	*($7 + [80]) = ($7 + [24])
	*($7 + [88]) = ($7 + [104])
	*(($0 = CALL $737([56])) + [8 align=4]) = (int_64)0
	*($0 + [16 align=4]) = (int_64)0
	*($0 + [24 align=4]) = (int_64)0
	*($0 + [32 align=4]) = (int_64)0
	*($0 + [40]) = [0]
	*($0 + [44]) = ($7 + [24])
	CALL $501(($7 + [80]), $0)
	*($7 + [96]) = $0
	$1 = *($0)
	*($7 + [80]) = $1
	$3 = *($0 + [48])
	*($7 + [76]) = $3
	$4 = ($7 + [52])
	$2 = *($4)
	if ( ((uint_32)$2 >= (uint_32)*($5)) ){ goto $label$5 }
	*($2 + [8]) = $1
	*($2 + [16]) = $3
	*($7 + [96]) = [0]
	*($2) = $0
	*($4) = ($2 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $410(($7 + [48]), ($7 + [96]), ($7 + [80]), ($7 + [76]))
	
.LABEL $label$4
	$0 = *($7 + [96])
	*($7 + [96]) = [0]
	if ( ($0 == 0) ){ goto $label$2 }
	if ( ((*($0 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL $738(*(($0 + [40])))
	
.LABEL $label$6
	if ( ((*($0 + [20]) & [1]) == 0) ){ goto $label$7 }
	CALL $738(*(($0 + [28])))
	
.LABEL $label$7
	if ( ((*($0 + [8]) & [1]) == 0) ){ goto $label$8 }
	CALL $738(*(($0 + [16])))
	
.LABEL $label$8
	CALL $738($0)
	
.LABEL $label$2
	CALL $408(($7 + [48]))
	*([0] + [4]) = ($7 + [112])
}

void .FUNC $498 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $738(*(($1 + [16])))
	
.LABEL $label$11
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $738($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $34 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-8524869990424887296, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $8($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $280 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [36]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2320])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-3020371202648571904)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2256])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2256])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $278(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $692 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [272])
	*([0] + [4]) = $5
	$2 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [32]), *($4 + [4]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $3) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [40]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($4 + [48]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($4 + [56]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($5) = *($1)
	*($5 + [12]) = ($4 + [65])
	*($5 + [8]) = ($4 + [64])
	*($5 + [16]) = ($4 + [66])
	*($5 + [20]) = ($4 + [67])
	*($5 + [24]) = ($4 + [68])
	*($5 + [28]) = ($4 + [69])
	*($5 + [32]) = ($4 + [70])
	*($5 + [36]) = ($4 + [71])
	*($5 + [40]) = ($4 + [72])
	*($5 + [44]) = ($4 + [73])
	*($5 + [48]) = ($4 + [74])
	*($5 + [52]) = ($4 + [75])
	*($5 + [56]) = ($4 + [76])
	*($5 + [60]) = ($4 + [77])
	*($5 + [64]) = ($4 + [78])
	*($5 + [68]) = ($4 + [79])
	*($5 + [72]) = ($4 + [80])
	*($5 + [76]) = ($4 + [81])
	*($5 + [80]) = ($4 + [82])
	*($5 + [84]) = ($4 + [83])
	*($5 + [88]) = ($4 + [84])
	*($5 + [92]) = ($4 + [85])
	*($5 + [96]) = ($4 + [86])
	*($5 + [100]) = ($4 + [87])
	*($5 + [104]) = ($4 + [88])
	*($5 + [108]) = ($4 + [89])
	*($5 + [112]) = ($4 + [90])
	*($5 + [116]) = ($4 + [91])
	*($5 + [120]) = ($4 + [92])
	*($5 + [124]) = ($4 + [93])
	*($5 + [128]) = ($4 + [94])
	*($5 + [132]) = ($4 + [95])
	*($5 + [136]) = ($4 + [96])
	*($5 + [140]) = ($4 + [97])
	*($5 + [144]) = ($4 + [98])
	*($5 + [148]) = ($4 + [99])
	*($5 + [152]) = ($4 + [100])
	*($5 + [156]) = ($4 + [101])
	*($5 + [160]) = ($4 + [102])
	*($5 + [164]) = ($4 + [103])
	*($5 + [168]) = ($4 + [104])
	*($5 + [172]) = ($4 + [105])
	*($5 + [176]) = ($4 + [106])
	*($5 + [180]) = ($4 + [107])
	*($5 + [184]) = ($4 + [108])
	*($5 + [188]) = ($4 + [109])
	*($5 + [192]) = ($4 + [110])
	*($5 + [196]) = ($4 + [111])
	*($5 + [200]) = ($4 + [112])
	*($5 + [204]) = ($4 + [113])
	*($5 + [208]) = ($4 + [114])
	*($5 + [212]) = ($4 + [115])
	*($5 + [216]) = ($4 + [116])
	*($5 + [220]) = ($4 + [117])
	*($5 + [224]) = ($4 + [118])
	*($5 + [228]) = ($4 + [119])
	*($5 + [232]) = ($4 + [120])
	*($5 + [236]) = ($4 + [121])
	*($5 + [240]) = ($4 + [122])
	*($5 + [244]) = ($4 + [123])
	*($5 + [248]) = ($4 + [124])
	*($5 + [252]) = ($4 + [125])
	*($5 + [256]) = ($4 + [126])
	*($5 + [260]) = ($4 + [127])
	*($5 + [264]) = ($4 + [128])
	*($5 + [268]) = ($4 + [129])
	CALL $669(($5 + [8]), $5)
	*([0] + [4]) = ($5 + [272])
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [512])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $737([24])) + [12]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[3]), [544])
	CALL memcpy($6, $7, [4])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[4]), [544])
	CALL memcpy(($6 + [4]), ($7 + [4]), [4])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [544])
	CALL memcpy(($8 + [16]), ($7 + [8]), [1])
	*($6 + [8]) = ((int_32)*($8 + [16]) != (int_32)[0])
	*($6 + [16]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [16])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $37(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $228 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $342 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$2 = *($0)
	$3 = *($0 + [4])
	$5 = *($3)
	$6 = $7
	CALL $767($6, *($3 + [4]))
	*($1) = CALL $344($5, $6)
	if ( ((*($6) & [1]) == 0) ){ goto $label$1 }
	CALL $738(*($6 + [8]))
	
.LABEL $label$1
	*($1 + [8]) = *(*($3 + [8]))
	$3 = $7
	$7 = ($3 + [-16])
	*([0] + [4]) = $7
	CALL eosio_assert([1], [496])
	CALL memcpy($7, $1, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($3 + [-8]), ($1 + [8]), [8])
	$4 = *($1)
	*($1 + [20]) = CALL db_store_i64(*($2 + [8]), (int_64)6291761009422676096, *(*($0 + [8])), $4, $7, [16])
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$2 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $306 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [656])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = ($3 - $4)
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $309($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + $5)
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	$2 = ($0 + [8])
	
.LOOP $label$6:
	CALL eosio_assert(((int_32)*($2) != (int_32)$7), [544])
	CALL memcpy($4, *($5), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	$4 = ($4 + [1])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

int_32 .FUNC $633 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	*(($3 = $4) + [60]) = $0
	*($3 + [48]) = *($1)
	*($3 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($4 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($3 + [32])) = [0]
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [64]) = $1
	$4 = ($1 + $0)
	*($3 + [72]) = $4
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [544])
	CALL memcpy(($3 + [8]), $1, [8])
	$2 = ($1 + [8])
	CALL eosio_assert(((uint_32)($4 - $2) > (uint_32)[7]), [544])
	CALL memcpy((($3 + [8]) + [8]), $2, [8])
	*($3 + [68]) = ($1 + [16])
	CALL $101(($3 + [64]), (($3 + [8]) + [16]))
	CALL eosio_assert(((uint_32)(*($3 + [72]) - *($3 + [68])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [40]), *($3 + [68]), [8])
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($3 + [68]) = ($3 + [48])
	*($3 + [64]) = ($3 + [60])
	CALL $706(($3 + [64]), ($3 + [8]))
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$5 }
	CALL $738(*(($3 + [32])))
	
.LABEL $label$5
	*([0] + [4]) = ($3 + [80])
	return [1]
}

int_32 .FUNC $632 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	*(($2 = $3) + [44]) = $0
	*($2 + [32]) = *($1)
	*($2 + [36]) = *($1 + [4])
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$4 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [16])) = (int_64)0
	*(($2 + [24])) = (int_64)0
	*($2) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2 + [56]) = ($1 + $0)
	*($2 + [48]) = $1
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [544])
	CALL memcpy($2, $1, [8])
	*($2 + [52]) = ($1 + [8])
	CALL $101(($2 + [48]), ($2 + [8]))
	CALL $101(($2 + [48]), ($2 + [20]))
	if ( ($0 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	*($2 + [52]) = ($2 + [32])
	*($2 + [48]) = ($2 + [44])
	CALL $707(($2 + [48]), $2)
	if ( ((*($2 + [20]) & [1]) == 0) ){ goto $label$6 }
	CALL $738(*(($2 + [28])))
	
.LABEL $label$6
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$7 }
	CALL $738(*(($2 + [16])))
	
.LABEL $label$7
	*([0] + [4]) = ($2 + [64])
	return [1]
}

void .FUNC $208 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_upperbound(*($8), *($8 + [8]), (int_64)-3660983113619603456, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $226($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-3660983113619603456, $5))
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [64])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $209 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-3660983113619603456, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $226($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-3660983113619603456, $5))
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [64])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $637 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [256])
	*([0] + [4]) = $2
	*(($3 = $2) + [252]) = $0
	*($3 + [240]) = *($1)
	*($3 + [244]) = *($1 + [4])
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$2 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$2
	CALL read_action_data($2, $1)
	
.LABEL $label$1
	CALL $693(($3 + [16]), $2, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($2)
	
.LABEL $label$5
	*($3 + [12]) = ($3 + [240])
	*($3 + [8]) = ($3 + [252])
	CALL $694(($3 + [8]), ($3 + [16]))
	if ( ((*($3 + [104]) & [1]) == 0) ){ goto $label$6 }
	CALL $738(*(($3 + [112])))
	
.LABEL $label$6
	*([0] + [4]) = ($3 + [256])
	return [1]
}

int_32 .FUNC $636 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [192])
	*([0] + [4]) = $2
	*(($3 = $2) + [188]) = $0
	*($3 + [176]) = *($1)
	*($3 + [180]) = *($1 + [4])
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$2 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$2
	CALL read_action_data($2, $1)
	
.LABEL $label$1
	CALL $698(($3 + [8]), $2, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($2)
	
.LABEL $label$5
	*($3 + [4]) = ($3 + [176])
	*($3) = ($3 + [188])
	CALL $699($3, ($3 + [8]))
	if ( ((*($3 + [96]) & [1]) == 0) ){ goto $label$6 }
	CALL $738(*(($3 + [104])))
	
.LABEL $label$6
	*([0] + [4]) = ($3 + [192])
	return [1]
}

int_32 .FUNC $635 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$12 = (*([0] + [4]) - [640])
	$14 = $12
	*([0] + [4]) = $12
	$2 = *($1 + [4])
	$13 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$12 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$12 = [0]
	goto $label$1 
	
.LABEL $label$3
	$12 = ($12 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $12
	
.LABEL $label$2
	CALL read_action_data($12, $1)
	
.LABEL $label$1
	CALL $703(($14 + [120]), $12, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($12)
	
.LABEL $label$5
	*(($14 + [396])) = *(($14 + [164]))
	$12 = *($14 + [136])
	*(($1 = (($14 + [376]) + [16]))) = *(($14 + [160]))
	$4 = *($14 + [128])
	*(($14 + [388])) = *(($14 + [156]))
	*(($9 = (($14 + [376]) + [8]))) = *(($14 + [152]))
	*($14 + [380]) = *(($14 + [148]))
	$3 = *($14 + [120])
	*($14 + [376]) = *($14 + [144])
	*(($10 = (($14 + [352]) + [16]))) = *(($14 + [184]))
	*(($11 = (($14 + [352]) + [8]))) = *(($14 + [176]))
	*($14 + [352]) = *($14 + [168])
	$8 = *($14 + [206])
	$7 = *($14 + [204])
	$6 = *($14 + [200])
	$5 = *($14 + [192])
	CALL memcpy(($14 + [286]), ($14 + [208]), [66])
	CALL memcpy(($14 + [448]), ($14 + [286]), [66])
	*((($14 + [424]) + [16])) = *($10)
	*((($14 + [424]) + [8])) = *($11)
	*((($14 + [400]) + [16])) = *($1)
	*((($14 + [400]) + [8])) = *($9)
	*($14 + [424]) = *($14 + [352])
	*($14 + [400]) = *($14 + [376])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$13 = *((*($1) + $13))
	
.LABEL $label$6
	*(($2 = (($14 + [616]) + [16]))) = *((($14 + [400]) + [16]))
	*(($0 = (($14 + [616]) + [8]))) = *((($14 + [400]) + [8]))
	*(($9 = (($14 + [592]) + [16]))) = *((($14 + [424]) + [16]))
	*(($10 = (($14 + [592]) + [8]))) = *((($14 + [424]) + [8]))
	*($14 + [616]) = *($14 + [400])
	*($14 + [592]) = *($14 + [424])
	CALL memcpy(($14 + [520]), ($14 + [448]), [66])
	*((($14 + [96]) + [16])) = *($2)
	*((($14 + [96]) + [8])) = *($0)
	*((($14 + [72]) + [16])) = *($9)
	*((($14 + [72]) + [8])) = *($10)
	*($14 + [96]) = *($14 + [616])
	*($14 + [72]) = *($14 + [592])
	CALL memcpy(($14 + [6]), ($14 + [520]), [66])
	CALL void $1((int_32 $3), (int_64 $4), (int_64 ((int_32)($12 & [255]) != (int_32)[0])), (int_32 ($14 + [96])), (int_32 ($14 + [72])), (int_32 $5), (int_64 $6), (int_32 ($7 & [65535])), (int_32 ($8 & [65535])), (int_32 ($14 + [6])), (int_32 $13))
	*([0] + [4]) = ($14 + [640])
	return [1]
}

int_32 .FUNC $634 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$4 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = [0]
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [544])
	CALL memcpy($6, $4, [8])
	CALL eosio_assert(((int_32)($1 & [-4]) != (int_32)[8]), [544])
	$7 = ($6 + [8])
	CALL memcpy($7, ($4 + [8]), [4])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($4)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($7)
	$3 = *($6)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 $4), (int_32 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC $202 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $203 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [784])
	$6 = *($0 + [4])
	$7 = *($6 + [64])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-3658914434178940928, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [64]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [56]) == (int_32)$2), [288])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $230($2, CALL $fimport$19(*($2), *($2 + [8]), (int_64)-3658914434178940928, $3))
	CALL eosio_assert(((int_32)*($7 + [56]) == (int_32)$2), [288])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [64])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $200 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-3658914434178940928, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $230($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-3658914434178940928, $5))
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [64])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $201 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$6 = *($4 + [16])
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$1 }
	$6 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-4418693909069692928, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $221($4, $5)
	*($9 + [4]) = [0]
	*($9) = $4
	$6 = *(*(CALL $222($9) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $6
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [2192])
	$6 = *(($4 + [16]))
	*($1 + [8]) = [3]
	*($1) = $6
	*($1 + [16]) = *(*(*($3 + [4]) + [4]))
	$4 = $10
	$10 = ($4 + [-32])
	*([0] + [4]) = $10
	CALL eosio_assert([1], [496])
	CALL memcpy($10, $1, [8])
	CALL eosio_assert([1], [496])
	$3 = ($1 + [8])
	CALL memcpy(($4 + [-24]), $3, [1])
	CALL eosio_assert([1], [496])
	$4 = ($1 + [16])
	CALL memcpy(($4 + [-23]), $4, [8])
	$6 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-4418693909069692928, *(*($0 + [8])), $6, $10, [17])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$6 = *(($2 + [8]))
	$7 = *(*(($0 + [8])))
	$8 = *($1)
	*($9 + [8]) = *($3)
	*($9) = *($4)
	*($1 + [32]) = CALL db_idx128_store($6, (int_64)-4418693909069692928, $7, $8, $9)
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $206 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$6 = *($4 + [16])
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$1 }
	$6 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-4418693909069692928, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $221($4, $5)
	*($9 + [4]) = [0]
	*($9) = $4
	$6 = *(*(CALL $222($9) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $6
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [2192])
	$6 = *(($4 + [16]))
	*($1 + [8]) = [7]
	*($1) = $6
	*($1 + [16]) = *(*(*($3 + [4]) + [4]))
	$4 = $10
	$10 = ($4 + [-32])
	*([0] + [4]) = $10
	CALL eosio_assert([1], [496])
	CALL memcpy($10, $1, [8])
	CALL eosio_assert([1], [496])
	$3 = ($1 + [8])
	CALL memcpy(($4 + [-24]), $3, [1])
	CALL eosio_assert([1], [496])
	$4 = ($1 + [16])
	CALL memcpy(($4 + [-23]), $4, [8])
	$6 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-4418693909069692928, *(*($0 + [8])), $6, $10, [17])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$6 = *(($2 + [8]))
	$7 = *(*(($0 + [8])))
	$8 = *($1)
	*($9 + [8]) = *($3)
	*($9) = *($4)
	*($1 + [32]) = CALL db_idx128_store($6, (int_64)-4418693909069692928, $7, $8, $9)
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $207 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [784])
	$6 = *($0 + [4])
	$7 = *($6 + [32])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-3670317554737348608, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [32]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [288])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $229($2, CALL $fimport$19(*($2), *($2 + [8]), (int_64)-3670317554737348608, $3))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [288])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [32])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $204 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_upperbound(*($8), *($8 + [8]), (int_64)-3670317554737348608, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $229($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-3670317554737348608, $5))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [32])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $205 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-3670317554737348608, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $229($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)-3670317554737348608, $5))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [32])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_64 .FUNC __intscan (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_64 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$4 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$4 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$5:
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$7 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$6 
	
.LABEL $label$7
	$13 = CALL __shgetc($0)
	
.LABEL $label$6
	$10 = ($13 + [-9])
	if ( ((uint_32)$10 > (uint_32)[36]) ){ goto $label$3 }
	goto $label$5 
	
.LABEL $label$8
	$4 = ( [-1] ? [0] : ((int_32)$13 == (int_32)[45]) )
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$2 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$1 
	
.LABEL $label$4
	*(CALL __errno_location()) = [22]
	return (int_64)0
	
.LABEL $label$3
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	$13 = CALL __shgetc($0)
	
.LABEL $label$1
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$20 }
	if ( ((int_32)$13 != (int_32)[48]) ){ goto $label$20 }
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$19 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$18 
	
.LABEL $label$20
	$1 = ( $1 ? [10] : $1 )
	if ( (*(($13 + [23073])) <= $1) ){ goto $label$17 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$21 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	
.LABEL $label$21
	CALL __shlim($0, (int_64)0)
	*(CALL __errno_location()) = [22]
	return (int_64)0
	
.LABEL $label$19
	$13 = CALL __shgetc($0)
	
.LABEL $label$18
	if ( ((int_32)($13 | [32]) != (int_32)[120]) ){ goto $label$22 }
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$16 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$15 
	
.LABEL $label$22
	if ( ($1 == 0) ){ goto $label$14 }
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$13 }
	$14 = (int_64)0
	$9 = ($13 + [-48])
	if ( ((uint_32)$9 > (uint_32)[9]) ){ goto $label$23 }
	$10 = [0]
	$8 = ($0 + [104])
	$1 = ($0 + [4])
	
.LOOP $label$24:
	$10 = ((int_32)$10 * (int_32)[10])
	$13 = *($1)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$26 }
	*($1) = ($13 + [1])
	$13 = *($13)
	goto $label$25 
	
.LABEL $label$26
	$13 = CALL __shgetc($0)
	
.LABEL $label$25
	$10 = ($10 + $9)
	$9 = ($13 + [-48])
	if ( ((uint_32)$9 > (uint_32)[9]) ){ goto $label$27 }
	if ( ($10 <= [429496729]) ){ goto $label$24 }
	
.LABEL $label$27
	$14 = (CASTING uint_64)(uint_32 $10)
	
.LABEL $label$23
	$10 = ($13 + [-48])
	if ( ((uint_32)$10 > (uint_32)[9]) ){ goto $label$11 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$28:
	$1 = [10]
	$5 = (CASTING int_64)(int_32 $10)
	$12 = ((int_64)$14 * (int_64)10)
	if ( ((uint_64)$12 > (uint_64)((int_64)$5 ^ (int_64)-1)) ){ goto $label$12 }
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$30 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$29 
	
.LABEL $label$30
	$13 = CALL __shgetc($0)
	
.LABEL $label$29
	$14 = ((int_64)$12 + (int_64)$5)
	$10 = ($13 + [-48])
	if ( ((uint_32)$10 > (uint_32)[9]) ){ goto $label$31 }
	if ( (uint_64)($14 <= (int_64)1844674407370955162) ){ goto $label$28 }
	
.LABEL $label$31
	if ( ((uint_32)$10 <= (uint_32)[9]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$16
	$13 = CALL __shgetc($0)
	
.LABEL $label$15
	$1 = [16]
	if ( (*(($13 + [23073])) <= [16]) ){ goto $label$13 }
	$13 = *(($0 + [104]))
	if ( ($13 == 0) ){ goto $label$32 }
	*(($10 = ($0 + [4]))) = (*($10) + [-1])
	
.LABEL $label$32
	if ( ($2 == 0) ){ goto $label$9 }
	$14 = (int_64)0
	if ( ($13 == 0) ){ goto $label$10 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	return (int_64)0
	
.LABEL $label$14
	$1 = [8]
	
.LABEL $label$13
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$37 }
	$10 = *(($13 + [23073]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$36 }
	$9 = [0]
	$2 = ($0 + [104])
	$8 = ($0 + [4])
	
.LOOP $label$38:
	$9 = ($10 + ((int_32)$9 * (int_32)$1))
	$13 = *($8)
	if ( ((uint_32)$13 >= (uint_32)*($2)) ){ goto $label$40 }
	*($8) = ($13 + [1])
	$13 = *($13)
	goto $label$39 
	
.LABEL $label$40
	$13 = CALL __shgetc($0)
	
.LABEL $label$39
	$10 = *(($13 + [23073]))
	if ( ((uint_32)$9 > (uint_32)[119304646]) ){ goto $label$41 }
	if ( ($10 <= $1) ){ goto $label$38 }
	
.LABEL $label$41
	$14 = (CASTING uint_64)(uint_32 $9)
	if ( ($10 <= $1) ){ goto $label$35 }
	goto $label$12 
	
.LABEL $label$37
	$2 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [23344]))
	$10 = *(($13 + [23073]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$34 }
	$9 = [0]
	$11 = ($0 + [104])
	$8 = ($0 + [4])
	
.LOOP $label$42:
	$9 = ($10 | ($9 << $2))
	$13 = *($8)
	if ( ((uint_32)$13 >= (uint_32)*($11)) ){ goto $label$44 }
	*($8) = ($13 + [1])
	$13 = *($13)
	goto $label$43 
	
.LABEL $label$44
	$13 = CALL __shgetc($0)
	
.LABEL $label$43
	$10 = *(($13 + [23073]))
	if ( ((uint_32)$9 > (uint_32)[134217727]) ){ goto $label$45 }
	if ( ($10 <= $1) ){ goto $label$42 }
	
.LABEL $label$45
	$14 = (CASTING uint_64)(uint_32 $9)
	if ( ($10 <= $1) ){ goto $label$33 }
	goto $label$12 
	
.LABEL $label$36
	$14 = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$35
	$7 = (CASTING uint_64)(uint_32 $1)
	$6 = ((uint_64)(int_64)-1 / (uint_64)$7)
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$46:
	if ( ((uint_64)$14 > (uint_64)$6) ){ goto $label$12 }
	$5 = (CASTING uint_64)(uint_32 ($10 & [255]))
	$12 = ((int_64)$14 * (int_64)$7)
	if ( ((uint_64)$12 > (uint_64)((int_64)$5 ^ (int_64)-1)) ){ goto $label$12 }
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$48 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$47 
	
.LABEL $label$48
	$13 = CALL __shgetc($0)
	
.LABEL $label$47
	$14 = ((int_64)$5 + (int_64)$12)
	$10 = *(($13 + [23073]))
	if ( ($10 <= $1) ){ goto $label$46 }
	goto $label$12 
	
.LABEL $label$34
	$14 = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$33
	$5 = (CASTING uint_64)(uint_32 $2)
	$6 = (uint_64)(int_64)-1 >> (uint_64)$5
	if ( ((uint_64)$14 > (uint_64)$6)) ){ goto $label$12 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$49:
	$14 = ((int_64)$14 << (int_64)$5)
	$12 = (CASTING uint_64)(uint_32 ($10 & [255]))
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$51 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$50 
	
.LABEL $label$51
	$13 = CALL __shgetc($0)
	
.LABEL $label$50
	$14 = ((int_64)$12 | (int_64)$14)
	$10 = *(($13 + [23073]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	if ( ((uint_64)$14 <= (uint_64)$6) ){ goto $label$49 }
	
.LABEL $label$12
	if ( ((uint_32)*(($13 + [23073])) >= (uint_32)$1) ){ goto $label$11 }
	$9 = ($0 + [104])
	$10 = ($0 + [4])
	
.LOOP $label$52:
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*($9)) ){ goto $label$54 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$53 
	
.LABEL $label$54
	$13 = CALL __shgetc($0)
	
.LABEL $label$53
	if ( (*(($13 + [23073])) <= $1) ){ goto $label$52 }
	*(CALL __errno_location()) = [34]
	$4 = ( $4 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$14 = $3
	
.LABEL $label$11
	if ( (*(($0 + [104])) == 0) ){ goto $label$55 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	
.LABEL $label$55
	if ( (uint_64)($14 <= $3) ){ goto $label$56 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$57 }
	if ( $4 ){ goto $label$57 }
	*(CALL __errno_location()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$57
	if ( ((uint_64)$14 <= (uint_64)$3) ){ goto $label$56 }
	*(CALL __errno_location()) = [34]
	return $3
	
.LABEL $label$56
	$12 = (CASTING int_64)(int_32 $4)
	$14 = (int_64))(((int_64)$14 ^ (int_64)$12) - $12)
	
.LABEL $label$10
	return $14
	
.LABEL $label$9
	CALL __shlim($0, (int_64)0)
	$10
	return (int_64)0
}

int_32 .FUNC __shgetc (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$7 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$6 }
	
.LABEL $label$7
	$4 = CALL __uflow($0)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$5 }
	$1 = (int_64)
	$2 = *($0 + [4])
	$3 = *(($0 + [8]))
	if ( ((int_64)(CASTING int_64)(int_32 ($3 - $2)) < (int_64)$1($1 - *($0 + [120])))) ){ goto $label$4 }
	*($0 + [104]) = ($2 + (CASTING uint_32)(uint_64 ((int_64)$1 + (int_64)4294967295)))
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$5
	$3 = *(($0 + [8]))
	
.LABEL $label$4
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)) + (int_64)*($0 + [120]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)*($0) == (int_32)$4) ){ goto $label$8 }
	*($0) = $4
	
.LABEL $label$8
	return $4
}

int_32 .FUNC __uflow (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = [-1]
	if ( CALL __toread($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($2 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$1 = *($2 + [15])
	
.LABEL $label$1
	*([0] + [4]) = ($2 + [16])
	return $1
}

int_32 .FUNC __toread (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

int_64 .FUNC strtoll (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [144])
	*([0] + [4]) = $4
	*($4 + [4]) = $0
	*($4 + [44]) = $0
	*($4) = [0]
	*($4 + [76]) = [-1]
	*($4 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL __shlim($4, (int_64)0)
	$3 = CALL __intscan($4, $2, [1], (int_64)-9223372036854775808)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + (CASTING uint_32)(uint_64 ((int_64)(CASTING uint_64)(uint_32 (*($4 + [4]) - *(($4 + [8])))) + (int_64)*($4 + [120]))))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [144])
	return $3
}

int_32 .FUNC strtol (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [144])
	*([0] + [4]) = $4
	*($4 + [4]) = $0
	*($4 + [44]) = $0
	*($4) = [0]
	*($4 + [76]) = [-1]
	*($4 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL __shlim($4, (int_64)0)
	$3 = CALL __intscan($4, $2, [1], (int_64)2147483648)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + (CASTING uint_32)(uint_64 ((int_64)(CASTING uint_64)(uint_32 (*($4 + [4]) - *(($4 + [8])))) + (int_64)*($4 + [120]))))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [144])
	return (CASTING uint_32)(uint_64 $3)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC $808 ()
{
	(unreachable)
}

void .FUNC $308 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $2) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$3 = *($0)
	$4 = int_32(($2 - $3) >> [3])
	$2 = ($4 + $1)
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = ($7 - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($7 >> [2])
	$6 = ( $2 ? $6 : ($6 <= $2) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$7 = CALL $737(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $2
	$7 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	*(($0 + [4])) = ($2 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $766($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$3 = ($7 + ($6 << [3]))
	$2 = ($7 + ($4 << [3]))
	$6 = $2
	$7 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$4 = ($2 + ($1 << [3]))
	$6 = *($0)
	$5 = ($0 + [4])
	$7 = (*($5) - $6)
	$1 = ($2 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($5) = $4
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $738($6)
	
.LABEL $label$10
	(unreachable)
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [544])
	CALL memcpy($1, *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [544])
	CALL memcpy(($1 + [2]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [544])
	CALL memcpy(($1 + [4]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [544])
	CALL memcpy(($1 + [6]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [544])
	CALL memcpy(($1 + [10]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [12]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [544])
	CALL memcpy(($3 + [15]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*($1 + [20]) = ((int_32)*($3 + [15]) != (int_32)[0])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $39 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN11walexchange12wal_exchange11airdroptoexEyyN5eosio14extended_assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [160])
	*([0] + [4]) = $10
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*($10 + [152]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($10 + [152]), $1, [1])
	$8 = [0]
	$5 = *($3)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$6 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$8 = [0]
	
.LABEL $label$2
	CALL eosio_assert($8, [5840])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [6032])
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$8 }
	$7 = uint_32($7 >> [1])
	goto $label$7 
	
.LABEL $label$8
	$7 = *($4 + [4])
	
.LABEL $label$7
	CALL eosio_assert(($7 <= [257]), [3264])
	*($10 + [144]) = *($0)
	if ( (CALL $333(($10 + [144]), $2) == 0) ){ goto $label$10 }
	$9 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($10 + [152]), $2, [0])
	goto $label$9 
	
.LABEL $label$10
	$9 = CALL _ZN11walexchange24contract_account_manager25get_or_create_eos_accountEyh(($10 + [152]), $2, [5])
	
.LABEL $label$9
	$5 = (int_64)
	*($10 + [120]) = $5((int_64)0 - $5))
	*($10 + [128]) = *($3 + [8])
	*($10 + [136]) = *($3 + [16])
	$6 = *($0)
	*((($10 + [48]) + [8])) = *($10 + [128])
	*((($10 + [48]) + [16])) = *($10 + [136])
	*($10 + [48]) = $5
	$7 = ($0 + [256])
	CALL _ZN11walexchange13asset_manager14adjust_balanceEyyN5eosio14extended_assetEy($7, $6, $6, ($10 + [48]), (int_64)0)
	$5 = *($3 + [16])
	*((($10 + [96]) + [16])) = $5
	$2 = *($3 + [8])
	*((($10 + [96]) + [8])) = $2
	$6 = *($3)
	*((($10 + [24]) + [16])) = $5
	*((($10 + [24]) + [8])) = $2
	*($10 + [96]) = $6
	*($10 + [24]) = $6
	CALL _ZN11walexchange13asset_manager14adjust_balanceEyyN5eosio14extended_assetEy($7, $9, $1, ($10 + [24]), (int_64)0)
	$5 = *($3 + [16])
	*((($10 + [72]) + [16])) = $5
	$2 = *($3 + [8])
	*((($10 + [72]) + [8])) = $2
	$6 = *($3)
	*(($10 + [16])) = $5
	*(($10 + [8])) = $2
	*($10 + [72]) = $6
	*($10) = $6
	CALL _ZN11walexchange13asset_manager11adjust_statEyN5eosio14extended_assetE($7, $1, $10)
	*([0] + [4]) = ($10 + [160])
}

void .FUNC _ZN11walexchange13asset_manager11get_balanceEyyN5eosio15extended_symbolE (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [176])
	*([0] + [4]) = $9
	*($9 + [168]) = $3
	*((($9 + [128]) + [32])) = [0]
	*($9 + [144]) = (int_64)-1
	*($9 + [152]) = (int_64)0
	$3 = *($1)
	*($9 + [128]) = $3
	*($9 + [136]) = $3
	*($9 + [164]) = [0]
	*($9 + [120]) = ($9 + [128])
	CALL $161(($9 + [80]), ($9 + [120]), ($9 + [168]))
	$5 = [0]
	$8 = *($9 + [84])
	if ( ($8 == 0) ){ goto $label$1 }
	$5 = ( $8 ? [0] : ((int_64)*($9 + [168]) == (int_64)*($8 + [8])) )
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [1456])
	*((($9 + [80]) + [32])) = [0]
	*($9 + [96]) = (int_64)-1
	*($9 + [104]) = (int_64)0
	$3 = *($1)
	*($9 + [80]) = $3
	*($9 + [88]) = $3
	*($9 + [116]) = [0]
	*($9 + [72]) = ($9 + [80])
	$7 = *($4 + [8])
	*($9 + [56]) = $7
	$6 = *($4)
	$3 = (uint_64)$6 >> (uint_64)(int_64)8
	*($9 + [48]) = $3)
	CALL $46(($9 + [8]), ($9 + [72]), ($9 + [48]))
	$8 = *($9 + [12])
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((int_64)(((int_64)((int_64)*($9 + [48]) ^ (int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($9 + [56]) ^ (int_64)*(($8 + [16])))) == 0) == 0) ){ goto $label$7 }
	if ( ($8 == 0) ){ goto $label$7 }
	$4 = [0]
	*(($9 + [40])) = [0]
	*($9 + [16]) = $2
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	*($9 + [8]) = *($1)
	*($9 + [44]) = [0]
	CALL $22($9, ($9 + [8]), ((int_64)((int_64)*($5) << (int_64)32) | (int_64)*($8)))
	$1 = *($9 + [4])
	if ( ($1 == 0) ){ goto $label$6 }
	*($0 + [8]) = $6
	$6 = *($1 + [8])
	*($0) = $6
	CALL eosio_assert((uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	
.LOOP $label$9:
	$1 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$1 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	CALL eosio_assert($1, [2832])
	goto $label$5 
	
.LABEL $label$7
	*($0 + [8]) = $6
	*($0) = (int_64)0
	CALL eosio_assert([1], [2768])
	$4 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$1 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$1 = [0]
	
.LABEL $label$12
	CALL eosio_assert($1, [2832])
	*($0 + [16]) = $7
	goto $label$4 
	
.LABEL $label$6
	*($0 + [8]) = $6
	*($0) = (int_64)0
	CALL eosio_assert([1], [2768])
	$4 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	
.LOOP $label$21:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$21 }
	
.LABEL $label$20
	$1 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	$1 = [0]
	
.LABEL $label$17
	CALL eosio_assert($1, [2832])
	
.LABEL $label$5
	*($0 + [16]) = $7
	$0 = *($9 + [32])
	if ( ($0 == 0) ){ goto $label$4 }
	$5 = ($9 + [36])
	$4 = *($5)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$23 }
	
.LOOP $label$24:
	$4 = ($4 + [-24])
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$25 }
	CALL $738($1)
	
.LABEL $label$25
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$24 }
	$4 = *(($9 + [32]))
	goto $label$22 
	
.LABEL $label$23
	$4 = $0
	
.LABEL $label$22
	*($5) = $0
	CALL $738($4)
	$0 = *($9 + [104])
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$0 = *($9 + [104])
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($9 + [108])
	$4 = *($5)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$27 }
	
.LOOP $label$28:
	$4 = ($4 + [-24])
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$29 }
	CALL $738($1)
	
.LABEL $label$29
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$28 }
	$4 = *(($9 + [104]))
	goto $label$26 
	
.LABEL $label$27
	$4 = $0
	
.LABEL $label$26
	*($5) = $0
	CALL $738($4)
	
.LABEL $label$2
	$0 = *($9 + [152])
	if ( ($0 == 0) ){ goto $label$30 }
	$5 = ($9 + [156])
	$4 = *($5)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$32 }
	
.LOOP $label$33:
	$4 = ($4 + [-24])
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$34 }
	CALL $738($1)
	
.LABEL $label$34
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$33 }
	$4 = *(($9 + [152]))
	goto $label$31 
	
.LABEL $label$32
	$4 = $0
	
.LABEL $label$31
	*($5) = $0
	CALL $738($4)
	
.LABEL $label$30
	*([0] + [4]) = ($9 + [176])
}

int_32 .FUNC $336 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [24]) = *(*($0 + [4]))
	CALL $56(($7 + [32]), ($7 + [24]))
	*($7) = *($1)
	CALL $56(($7 + [8]), $7)
	$5 = [0]
	$0 = ($6 & [1])
	$6 = *($7 + [32])
	$3 = ( *($7 + [36]) ? uint_32($6 >> [1]) : $0 )
	$2 = ($1 & [1])
	$1 = *($7 + [8])
	$1 = ( *($7 + [12]) ? uint_32($1 >> [1]) : $2 )
	if ( ((uint_32)$1 > (uint_32)$3) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$2 }
	$4 = ( *($7 + [16]) ? (($7 + [8]) | [1]) : $2 )
	$0 = ((( *($7 + [40]) ? (($7 + [32]) | [1]) : $0 ) + $3) + [-1])
	
.LOOP $label$3:
	if ( ((int_32)*((($4 + $1) + [-1])) != (int_32)*($0)) ){ goto $label$1 }
	$0 = ($0 + [-1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$3 }
	
.LABEL $label$2
	$5 = [1]
	
.LABEL $label$1
	if ( ($2 == 0) ){ goto $label$4 }
	CALL $738(*($7 + [16]))
	$6 = *($7 + [32])
	
.LABEL $label$4
	if ( (($6 & [1]) == 0) ){ goto $label$5 }
	CALL $738(*($7 + [40]))
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [48])
	return $5
}

void .FUNC $156 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*($10 + [24]) = (int_64)0
	*($10 + [8]) = *(($2 + [8]))
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx128_lowerbound(*($8), *($8 + [8]), (int_64)6300979411374047232, $10, ($10 + [24]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [24])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$4), [288])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $159($4, CALL $fimport$19(*($4), *($4 + [8]), (int_64)6300979411374047232, $5))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$4), [288])
	
.LABEL $label$4
	*(($2 + [40])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [32])
}

int_32 .FUNC $334 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [512])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [36]) = $4
	*($7 + [32]) = $4
	$6 = ($4 + $5)
	*($7 + [40]) = $6
	if ( ((uint_32)$5 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$6 = *(($7 + [40]))
	$4 = *($7 + [36])
	
.LABEL $label$7
	*(($5 = CALL $737([40])) + [16]) = [0]
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [24]) = $0
	CALL eosio_assert(((uint_32)($6 - $4) > (uint_32)[7]), [544])
	CALL memcpy($5, $4, [8])
	*($7 + [36]) = ($4 + [8])
	CALL $307(($7 + [32]), ($5 + [8]))
	*($5 + [28]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)5447364210270648832
	$6 = *($5 + [28])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)5447364210270648832
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $337(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$6 = *($4 + [8])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [12])) = $6
	CALL $738($6)
	
.LABEL $label$10
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
	return $5
}

void .FUNC $335 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *(($1 + [28]))
	if ( ((int_32)$3 == (int_32)*($1 + [24])) ){ goto $label$2 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$1), [288])
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)5447364210270648832, (int_64)5447364210270648832)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $334($1, $2)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$1), [288])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [672])
	*(($0 + [12])) = (int_64)0
	*($0 + [8]) = [0]
	*($0) = *($3)
	$1 = (*(($3 + [12])) - *($3 + [8]))
	$2 = int_32($1 >> [3])
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$3 }
	$1 = CALL $737($1)
	*(($0 + [8])) = $1
	*(($0 + [16])) = ($1 + ($2 << [3]))
	*(($0 = ($0 + [12]))) = $1
	$2 = *(($3 + [8]))
	$3 = (*(($3 + [12])) - $2)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($1, $2, $3)
	*($0) = (*($0) + $3)
	
.LABEL $label$4
	return (unreachable)
	
.LABEL $label$3
	CALL $766(($0 + [8]))
}

int_64 .FUNC _ZN11walexchange24contract_account_manager25get_or_create_eos_accountEyh (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [112])
	*([0] + [4]) = $9
	*($9 + [40]) = *($0)
	CALL eosio_assert(((int_32)CALL $333(($9 + [40]), $1) ^ (int_32)[1]), [6000])
	*(($9 + [32])) = [0]
	*($9 + [16]) = (int_64)-1
	*($9 + [24]) = (int_64)0
	$3 = *($0)
	*($9) = $3
	*($9 + [8]) = $3
	*($9 + [36]) = [0]
	$8 = CALL _ZN11walexchange24contract_account_manager15find_account_idEy($0, $1)
	if ( (int_64)($8 == 0) ){ goto $label$7 }
	$0 = CALL $11($9, $8, [592])
	$4 = *($0 + [24])
	$7 = ((int_32)$2 == (int_32)[5])
	if ( $7 ){ goto $label$6 }
	if ( ((int_32)($4 & [255]) != (int_32)[5]) ){ goto $label$6 }
	CALL eosio_assert(((int_32)*($0 + [32]) == (int_32)$9), [848])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$16()), [896])
	*(($0 + [24])) = $2
	$2 = ($0 + [8])
	*($9 + [80]) = *($2)
	$4 = ($0 + [16])
	*($9 + [88]) = *($4)
	$1 = *($0)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($9 + [48]), $0, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($9 + [48]) | [8]), $2, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($9 + [48]) + [16]), $4, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($9 + [48]) + [24]), ($0 + [24]), [1])
	CALL db_update_i64(*($0 + [36]), (int_64)0, ($9 + [48]), [25])
	$7 = ($9 + [16])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$8 }
	*($7) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$7 = (($9 + [80]) + [8])
	*($9 + [104]) = *($2)
	if ( (CALL memcmp(($9 + [80]), ($9 + [104]), [8]) == 0) ){ goto $label$9 }
	$5 = ($0 + [40])
	$2 = *($5)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$10 }
	$2 = CALL db_idx64_find_primary(*($9), *(($9 + [8])), (int_64)-2067973376676056576, ($9 + [96]), $1)
	*($5) = $2
	
.LABEL $label$10
	CALL db_idx64_update($2, (int_64)0, ($9 + [104]))
	
.LABEL $label$9
	*($9 + [104]) = *($4)
	if ( (CALL memcmp($7, ($9 + [104]), [8]) == 0) ){ goto $label$3 }
	$2 = ($0 + [44])
	$0 = *($2)
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$11 }
	$0 = CALL db_idx64_find_primary(*($9), *(($9 + [8])), (int_64)-2067973376676056575, ($9 + [96]), $1)
	*($2) = $0
	
.LABEL $label$11
	CALL db_idx64_update($0, (int_64)0, ($9 + [104]))
	$4 = *($9 + [24])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$8 = *($0)
	CALL eosio_assert(((int_64)$3 == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([48])) + [32]) = $9
	*($0 + [16]) = $1
	*($0) = $1
	*($0 + [24]) = $2
	CALL eosio_assert([1], [496])
	CALL memcpy(($9 + [48]), $0, [8])
	CALL eosio_assert([1], [496])
	$4 = ($0 + [8])
	CALL memcpy((($9 + [48]) | [8]), $4, [8])
	CALL eosio_assert([1], [496])
	$7 = ($0 + [16])
	CALL memcpy((($9 + [48]) + [16]), $7, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($9 + [48]) + [24]), ($0 + [24]), [1])
	$3 = *($0)
	$2 = ($9 + [8])
	*($0 + [36]) = CALL db_store_i64(*($2), (int_64)-2067973376676056576, $8, $3, ($9 + [48]), [25])
	$5 = ($9 + [16])
	if ( (uint_64)($3 <= *($5)) ){ goto $label$12 }
	*($5) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$3 = *($0)
	$6 = *($2)
	*($9 + [80]) = *($4)
	*($0 + [40]) = CALL db_idx64_store($6, (int_64)-2067973376676056576, $8, $3, ($9 + [80]))
	$3 = *($0)
	$6 = *($2)
	*($9 + [80]) = *($7)
	*($0 + [44]) = CALL db_idx64_store($6, (int_64)-2067973376676056575, $8, $3, ($9 + [80]))
	*($9 + [80]) = $0
	$8 = *($0)
	*($9 + [48]) = $8
	$4 = *(($0 + [36]))
	*($9 + [104]) = $4
	$7 = ($9 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($9 + [32]))) ){ goto $label$5 }
	*($2 + [8]) = $8
	*($2 + [16]) = $4
	*($9 + [80]) = [0]
	*($2) = $0
	*($7) = ($2 + [24])
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert(($7 | ((int_32)($4 & [255]) == (int_32)$2)), [624])
	$4 = *($9 + [24])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	CALL $14(($9 + [24]), ($9 + [80]), ($9 + [48]), ($9 + [104]))
	
.LABEL $label$4
	$0 = *($9 + [80])
	*($9 + [80]) = [0]
	if ( ($0 == 0) ){ goto $label$13 }
	CALL $738($0)
	
.LABEL $label$13
	$8 = $1
	
.LABEL $label$3
	$4 = *($9 + [24])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($9 + [28])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$15 }
	
.LOOP $label$16:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$17 }
	CALL $738($2)
	
.LABEL $label$17
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$16 }
	$0 = *(($9 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$0 = $4
	
.LABEL $label$14
	*($7) = $4
	CALL $738($0)
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [112])
	return $8
}

int_32 .FUNC $333 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	*($7 + [64]) = $1
	$3 = [0]
	*(($7 + [56])) = [0]
	*($7 + [40]) = (int_64)-1
	*($7 + [48]) = (int_64)0
	$1 = *($0)
	*($7 + [24]) = $1
	*($7 + [32]) = $1
	$6 = CALL db_find_i64($1, $1, (int_64)5447364210270648832, (int_64)5447364210270648832)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $334(($7 + [24]), $6) + [24]) == (int_32)($7 + [24])), [288])
	CALL $335($7, ($7 + [24]))
	$2 = ($7 + [12])
	$3 = *($2)
	$6 = *($7 + [8])
	goto $label$1 
	
.LABEL $label$2
	*(($7 + [16])) = [0]
	*($7) = (int_64)0
	*($7 + [8]) = (int_64)0
	$2 = ($7 + [12])
	$6 = [0]
	
.LABEL $label$1
	*($7 + [72]) = $0
	*($7 + [76]) = ($7 + [64])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$6:
	if ( CALL $336(($7 + [72]), $6) ){ goto $label$5 }
	$6 = ($6 + [8])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$6 }
	$6 = $3
	
.LABEL $label$5
	$5 = [1]
	if ( ((int_32)$6 != (int_32)*(($7 + [12]))) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert(CALL $fimport$46(*($7 + [64])), [5952])
	$5 = [0]
	
.LABEL $label$3
	$6 = *(($7 + [8]))
	if ( ($6 == 0) ){ goto $label$7 }
	*($2) = $6
	CALL $738($6)
	
.LABEL $label$7
	$2 = *($7 + [48])
	if ( ($2 == 0) ){ goto $label$8 }
	$4 = ($7 + [52])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$12 }
	$0 = *($3 + [8])
	if ( ($0 == 0) ){ goto $label$13 }
	*(($3 + [12])) = $0
	CALL $738($0)
	
.LABEL $label$13
	CALL $738($3)
	
.LABEL $label$12
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$11 }
	$6 = *(($7 + [48]))
	goto $label$9 
	
.LABEL $label$10
	$6 = $2
	
.LABEL $label$9
	*($4) = $2
	CALL $738($6)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [80])
	return $5
}

void .FUNC _ZN11walexchange11rex_manager18get_ext_symbol_mapEm (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$3 = *($1)
	*($5 + [8]) = $3
	*($5 + [16]) = $3
	$2 = CALL $297(($5 + [8]), (CASTING uint_64)(uint_32 $2), [5632])
	*($0) = *($2)
	*(($0 + [8])) = *(($2 + [8]))
	$1 = *($5 + [32])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $738($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($5 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $738($0)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	$2 = *($0)
	$3 = *($0 + [4])
	$7 = *($3)
	$4 = *($7 + [16])
	if ( ((int_64)$4 != (int_64)-1) ){ goto $label$1 }
	$4 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($7), *($7 + [8]), (int_64)6300979411374047232, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $159($7, $5)
	*($10 + [4]) = [0]
	*($10) = $7
	$4 = *(*(CALL $160($10) + [4]))
	$4 = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($7 + [16])) = $4
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($4 <= (int_64)-2), [2192])
	*($1) = *(($7 + [16]))
	$7 = *($3 + [4])
	*($1 + [8]) = *($7)
	*(($5 = ($1 + [24]))) = *(($7 + [16]))
	*(($6 = ($1 + [16]))) = *(($7 + [8]))
	CALL eosio_assert(((int_64)*(*($3 + [4])) > (int_64)0), [3552])
	$7 = $11
	$11 = ($7 + [-32])
	*([0] + [4]) = $11
	CALL eosio_assert([1], [496])
	CALL memcpy($11, $1, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 + [-24]), ($1 + [8]), [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 + [-16]), $6, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($7 + [-8]), $5, [8])
	$4 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)6300979411374047232, *(*($0 + [8])), $4, $11, [32])
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$4 = *(($2 + [8]))
	$8 = *(*(($0 + [8])))
	$9 = *($1)
	*($10 + [8]) = *($5)
	*($10) = (uint_64)*($6) >> (uint_64)(int_64)8)
	*($1 + [40]) = CALL db_idx128_store($4, (int_64)6300979411374047232, $8, $9, $10)
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $440 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$2 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$6 = *($1)
	$3 = ([0] - $2)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(*($8)) == (int_32)$6) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$2), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*(($1 + [20])))
}

void .FUNC _ZN11walexchange12wal_exchange11setcredconfEmmmmm (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	CALL eosio_assert([0], [8384])
}

void .FUNC _ZN11walexchange12wal_exchange12addextsymmapEN5eosio11symbol_typeEyS2_ymt (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6)
{
	CALL eosio_assert([0], [8384])
}

void .FUNC _ZN11walexchange12wal_exchange12delextsymmapEN5eosio11symbol_typeEy (int_32 $0, int_64 $1, int_64 $2)
{
	CALL eosio_assert([0], [8384])
}

void .FUNC _ZN11walexchange12wal_exchange11addcreditorEymy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	CALL eosio_assert([0], [8384])
}

void .FUNC _ZN11walexchange12wal_exchange12setvoteproxyEyy (int_32 $0, int_64 $1, int_64 $2)
{
	CALL eosio_assert([0], [8384])
}

void .FUNC _ZN11walexchange12wal_exchange11avtcreditorEyb (int_32 $0, int_64 $1, int_32 $2)
{
	CALL eosio_assert([0], [8384])
}

void .FUNC _ZN11walexchange12wal_exchange10rotatebackEh (int_32 $0, int_32 $1)
{
	CALL eosio_assert([0], [8384])
}

void .FUNC _ZN11walexchange12wal_exchange11adddelegatoEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	CALL require_auth($2)
	CALL eosio_assert([0], [8400])
}

void .FUNC _ZN11walexchange12wal_exchange10rmdelegatoEyy (int_32 $0, int_64 $1, int_64 $2)
{
	CALL require_auth($2)
	CALL eosio_assert([0], [8400])
}

void .FUNC _ZN11walexchange12wal_exchange8setwdfeeEN5eosio14extended_assetE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [192])
	*([0] + [4]) = $10
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	$7 = [0]
	if ( ((uint_64)((int_64)*($1) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$6 = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$7 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$7 = [0]
	
.LABEL $label$2
	CALL eosio_assert($7, [2704])
	CALL eosio_assert(CALL $fimport$46(*($1 + [16])), [2720])
	*(($10 + [104])) = [0]
	*($10 + [88]) = (int_64)-1
	*($10 + [96]) = (int_64)0
	$6 = *($0)
	*($10 + [72]) = $6
	*($10 + [80]) = $6
	*($10 + [108]) = [0]
	*($10 + [64]) = ($10 + [72])
	*($10 + [56]) = *($1 + [16])
	*($10 + [48]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	CALL $46(($10 + [8]), ($10 + [64]), ($10 + [48]))
	$7 = *($10 + [12])
	if ( ($7 == 0) ){ goto $label$8 }
	if ( ((int_64)(((int_64)((int_64)*($10 + [48]) ^ (int_64)(uint_64)*($7 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($10 + [56]) ^ (int_64)*(($7 + [16])))) == 0) == 0) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	
.LABEL $label$8
	$6 = *($0)
	*($10 + [180]) = $1
	*($10 + [176]) = ($10 + [72])
	*($10 + [112]) = $6
	CALL eosio_assert(((int_64)*($10 + [72]) == (int_64)CALL $fimport$16()), [432])
	*($10 + [12]) = ($10 + [176])
	*($10 + [8]) = ($10 + [72])
	*($10 + [16]) = ($10 + [112])
	*(($9 = CALL $737([40])) + [16]) = (int_64)0
	*($9 + [8]) = (int_64)0
	*($9 + [24]) = ($10 + [72])
	CALL $119(($10 + [8]), $9)
	*($10 + [160]) = $9
	$6 = *($9)
	*($10 + [8]) = $6
	$8 = *($9 + [28])
	*($10 + [144]) = $8
	$3 = ($10 + [100])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($10 + [104]))) ){ goto $label$10 }
	*($7 + [8]) = $6
	*($7 + [16]) = $8
	*($10 + [160]) = [0]
	*($7) = $9
	*($3) = ($7 + [24])
	goto $label$9 
	
.LABEL $label$10
	CALL $66(($10 + [96]), ($10 + [160]), ($10 + [8]), ($10 + [144]))
	
.LABEL $label$9
	$9 = *($10 + [160])
	*($10 + [160]) = [0]
	if ( ($9 == 0) ){ goto $label$11 }
	CALL $738($9)
	
.LABEL $label$11
	CALL $46(($10 + [8]), ($10 + [64]), ($10 + [48]))
	$9 = *($10 + [12])
	if ( ($9 == 0) ){ goto $label$13 }
	$6 = (int_64)0
	if ( ((int_64)((int_64)((int_64)*($10 + [48]) ^ (int_64)(uint_64)*($9 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($10 + [56]) ^ (int_64)*(($9 + [16])))) != (int_64)0) ){ goto $label$12 }
	$6 = *($10 + [12])
	goto $label$12 
	
.LABEL $label$13
	$6 = (int_64)0
	
.LABEL $label$12
	$7 = (CASTING uint_32)(uint_64 $6)
	
.LABEL $label$7
	$9 = [0]
	*(($10 + [40])) = [0]
	*($10 + [24]) = (int_64)-1
	*($10 + [32]) = (int_64)0
	$6 = *($0)
	*($10 + [8]) = $6
	*($10 + [16]) = $6
	*($10 + [44]) = [0]
	$8 = CALL db_find_i64($6, $6, (int_64)-2039333636190596096, *($7))
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$20 }
	$9 = CALL $120(($10 + [8]), $8)
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)($10 + [8])), [288])
	if ( ((int_64)*($1) <= (int_64)-1) ){ goto $label$19 }
	CALL eosio_assert([1], [1328])
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)($10 + [8])), [848])
	CALL eosio_assert(((int_64)*($10 + [8]) == (int_64)CALL $fimport$16()), [896])
	$0 = ($9 + [24])
	*($10 + [152]) = *($0)
	$7 = ($9 + [16])
	*($10 + [144]) = (uint_64)*($7) >> (uint_64)(int_64)8)
	*(($8 = ($9 + [8]))) = *($1)
	$6 = *($9)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 + [112]), $9, [4])
	CALL eosio_assert([1], [496])
	CALL memcpy((($10 + [112]) | [4]), $8, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($10 + [112]) | [12]), $7, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 + [132]), $0, [8])
	CALL db_update_i64(*($9 + [36]), (int_64)0, ($10 + [112]), [28])
	$1 = (($10 + [8]) + [16])
	if ( (uint_64)($6 <= *($1)) ){ goto $label$21 }
	*($1) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$21
	*($10 + [184]) = *($0)
	*($10 + [176]) = (uint_64)*($7) >> (uint_64)(int_64)8)
	if ( (CALL memcmp(($10 + [144]), ($10 + [176]), [16]) == 0) ){ goto $label$16 }
	$1 = ($9 + [40])
	$9 = *($1)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$22 }
	$9 = CALL db_idx128_find_primary(*($10 + [8]), *(($10 + [16])), (int_64)-2039333636190596096, ($10 + [160]), $6)
	*($1) = $9
	
.LABEL $label$22
	CALL db_idx128_update($9, (int_64)0, ($10 + [176]))
	$0 = *($10 + [32])
	if ( $0 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$20
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($1) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [2752])
	$2 = *($0)
	CALL eosio_assert(((int_64)*($10 + [8]) == (int_64)CALL $fimport$16()), [432])
	*(($0 = CALL $737([48])) + [16]) = (int_64)1398362884
	*($0 + [8]) = (int_64)0
	CALL eosio_assert([1], [2768])
	$4 = ($0 + [16])
	$3 = ($0 + [8])
	$6 = (int_64)5462355
	
.LOOP $label$24:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	
.LOOP $label$26:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$26 }
	
.LABEL $label$25
	$8 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	CALL eosio_assert($8, [2832])
	*($0 + [32]) = ($10 + [8])
	*($0) = *($7)
	*(($3 + [20])) = *(($1 + [20]))
	*(($3 + [16])) = *(($1 + [16]))
	*(($3 + [12])) = *(($1 + [12]))
	*(($3 + [8])) = *(($1 + [8]))
	*(($3 + [4])) = *(($1 + [4]))
	*($3) = *($1)
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 + [112]), $0, [4])
	CALL eosio_assert([1], [496])
	CALL memcpy((($10 + [112]) | [4]), $3, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($10 + [112]) | [12]), $4, [8])
	CALL eosio_assert([1], [496])
	$9 = ($0 + [24])
	CALL memcpy((($10 + [112]) + [20]), $9, [8])
	$6 = *($0)
	$1 = (($10 + [8]) + [8])
	*($0 + [36]) = CALL db_store_i64(*($1), (int_64)-2039333636190596096, $2, $6, ($10 + [112]), [28])
	$7 = (($10 + [8]) + [16])
	if ( (uint_64)($6 <= *($7)) ){ goto $label$27 }
	*($7) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$27
	$6 = *($0)
	$5 = *($1)
	*($10 + [184]) = *($9)
	*($10 + [176]) = (uint_64)*(($0 + [16])) >> (uint_64)(int_64)8)
	*($0 + [40]) = CALL db_idx128_store($5, (int_64)-2039333636190596096, $2, $6, ($10 + [176]))
	*($10 + [176]) = $0
	$6 = *($0)
	*($10 + [112]) = $6
	$1 = *(($0 + [36]))
	*($10 + [160]) = $1
	$9 = *((($10 + [8]) + [28]))
	if ( ((uint_32)$9 >= (uint_32)*(($10 + [40]))) ){ goto $label$18 }
	*($9 + [8]) = $6
	*($9 + [16]) = $1
	*($10 + [176]) = [0]
	*($9) = $0
	*(($10 + [36])) = ($9 + [24])
	goto $label$17 
	
.LABEL $label$19
	$7 = [1]
	if ( ((int_64)*($0 + [128]) != (int_64)*(($1 + [8]))) ){ goto $label$28 }
	$7 = ((int_64)*(($0 + [136])) != (int_64)*(($1 + [16])))
	
.LABEL $label$28
	CALL eosio_assert($7, [2864])
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$1 = CALL db_next_i64(*($9 + [36]), ($10 + [112]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$29 }
	CALL $120(($10 + [8]), $1)
	
.LABEL $label$29
	CALL $122(($10 + [8]), $9)
	$0 = *($10 + [32])
	if ( $0 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	CALL $121(($10 + [32]), ($10 + [176]), ($10 + [112]), ($10 + [160]))
	
.LABEL $label$17
	$9 = *($10 + [176])
	*($10 + [176]) = [0]
	if ( ($9 == 0) ){ goto $label$16 }
	CALL $738($9)
	
.LABEL $label$16
	$0 = *($10 + [32])
	if ( ($0 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = ($10 + [36])
	$9 = *($7)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$31 }
	
.LOOP $label$32:
	$9 = ($9 + [-24])
	$1 = *($9)
	*($9) = [0]
	if ( ($1 == 0) ){ goto $label$33 }
	CALL $738($1)
	
.LABEL $label$33
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$32 }
	$9 = *(($10 + [32]))
	goto $label$30 
	
.LABEL $label$31
	$9 = $0
	
.LABEL $label$30
	*($7) = $0
	CALL $738($9)
	
.LABEL $label$14
	$0 = *($10 + [96])
	if ( ($0 == 0) ){ goto $label$34 }
	$7 = ($10 + [100])
	$9 = *($7)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$36 }
	
.LOOP $label$37:
	$9 = ($9 + [-24])
	$1 = *($9)
	*($9) = [0]
	if ( ($1 == 0) ){ goto $label$38 }
	CALL $738($1)
	
.LABEL $label$38
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$37 }
	$9 = *(($10 + [96]))
	goto $label$35 
	
.LABEL $label$36
	$9 = $0
	
.LABEL $label$35
	*($7) = $0
	CALL $738($9)
	
.LABEL $label$34
	*([0] + [4]) = ($10 + [192])
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$4 = *($0 + [4])
	$3 = *($4)
	$8 = *($3 + [16])
	if ( ((int_64)$8 != (int_64)-1) ){ goto $label$1 }
	$8 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($3), *($3 + [8]), (int_64)6301537847124808880, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $65($3, $5)
	*($9 + [4]) = [0]
	*($9) = $3
	$8 = ((int_64)*(*(CALL $123($9) + [4])) + (int_64)1)
	
.LABEL $label$2
	*(($3 + [16])) = $8
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($8 <= (int_64)-2), [2192])
	*($1) = *(($3 + [16]))
	$4 = *($4 + [4])
	$8 = *($4 + [8])
	*(($3 = ($1 + [16]))) = *($4 + [16])
	*($1 + [8]) = $8
	$10 = $10
	$4 = ($10 + [-32])
	*([0] + [4]) = $4
	CALL eosio_assert([1], [496])
	CALL memcpy($4, $1, [4])
	CALL eosio_assert([1], [496])
	$5 = ($1 + [8])
	CALL memcpy(($10 + [-28]), $5, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy(($10 + [-20]), $3, [8])
	$8 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)6301537847124808880, *(*($0 + [8])), $8, $4, [20])
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ((int_64)$8 + (int_64)1)
	
.LABEL $label$3
	$8 = *(($2 + [8]))
	$6 = *(*(($0 + [8])))
	$7 = *($1)
	*($9 + [8]) = *($3)
	*($9) = (uint_64)*($5) >> (uint_64)(int_64)8)
	*($1 + [32]) = CALL db_idx128_store($8, (int_64)6301537847124808880, $6, $7, $9)
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $686 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($0 + [40]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $101(*($1), ($0 + [48]))
}

void .FUNC $687 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [128])
	*([0] + [4]) = $7
	*(($7 + [60])) = *(($1 + [44]))
	*(($5 = (($7 + [40]) + [16]))) = *(($1 + [40]))
	*(($7 + [52])) = *(($1 + [36]))
	*(($6 = (($7 + [40]) + [8]))) = *(($1 + [32]))
	*($7 + [40]) = *($1 + [24])
	*($7 + [44]) = *(($1 + [28]))
	$4 = *($1 + [16])
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $767(($7 + [24]), ($1 + [48]))
	*((($7 + [64]) + [16])) = *($5)
	*((($7 + [64]) + [8])) = *($6)
	*($7 + [64]) = *($7 + [40])
	$1 = *($0 + [4])
	$5 = *($1 + [4])
	$0 = (*(*($0)) + int_32($5 >> [1]))
	$1 = *($1)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($5 = (($7 + [104]) + [16]))) = *((($7 + [64]) + [16]))
	*(($6 = (($7 + [104]) + [8]))) = *((($7 + [64]) + [8]))
	*($7 + [104]) = *($7 + [64])
	CALL $767(($7 + [88]), ($7 + [24]))
	*(($7 + [16])) = *($5)
	*(($7 + [8])) = *($6)
	*($7) = *($7 + [104])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $4), (int_64 $7), (int_32 ($7 + [88])), (int_32 $1))
	if ( ((*($7 + [88]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*($7 + [96]))
	
.LABEL $label$2
	if ( ((*($7 + [24]) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($7 + [32]))
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [128])
}

void .FUNC $684 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [272])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($2 + [192]), *($3 + [4]), [2])
	*($3 + [4]) = (*($3 + [4]) + [2])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [544])
	CALL memcpy(($3 + [194]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	*($4) = *($1)
	*($4 + [12]) = ($3 + [197])
	*($4 + [8]) = ($3 + [196])
	*($4 + [16]) = ($3 + [198])
	*($4 + [20]) = ($3 + [199])
	*($4 + [24]) = ($3 + [200])
	*($4 + [28]) = ($3 + [201])
	*($4 + [32]) = ($3 + [202])
	*($4 + [36]) = ($3 + [203])
	*($4 + [40]) = ($3 + [204])
	*($4 + [44]) = ($3 + [205])
	*($4 + [48]) = ($3 + [206])
	*($4 + [52]) = ($3 + [207])
	*($4 + [56]) = ($3 + [208])
	*($4 + [60]) = ($3 + [209])
	*($4 + [64]) = ($3 + [210])
	*($4 + [68]) = ($3 + [211])
	*($4 + [72]) = ($3 + [212])
	*($4 + [76]) = ($3 + [213])
	*($4 + [80]) = ($3 + [214])
	*($4 + [84]) = ($3 + [215])
	*($4 + [88]) = ($3 + [216])
	*($4 + [92]) = ($3 + [217])
	*($4 + [96]) = ($3 + [218])
	*($4 + [100]) = ($3 + [219])
	*($4 + [104]) = ($3 + [220])
	*($4 + [108]) = ($3 + [221])
	*($4 + [112]) = ($3 + [222])
	*($4 + [116]) = ($3 + [223])
	*($4 + [120]) = ($3 + [224])
	*($4 + [124]) = ($3 + [225])
	*($4 + [128]) = ($3 + [226])
	*($4 + [132]) = ($3 + [227])
	*($4 + [136]) = ($3 + [228])
	*($4 + [140]) = ($3 + [229])
	*($4 + [144]) = ($3 + [230])
	*($4 + [148]) = ($3 + [231])
	*($4 + [152]) = ($3 + [232])
	*($4 + [156]) = ($3 + [233])
	*($4 + [160]) = ($3 + [234])
	*($4 + [164]) = ($3 + [235])
	*($4 + [168]) = ($3 + [236])
	*($4 + [172]) = ($3 + [237])
	*($4 + [176]) = ($3 + [238])
	*($4 + [180]) = ($3 + [239])
	*($4 + [184]) = ($3 + [240])
	*($4 + [188]) = ($3 + [241])
	*($4 + [192]) = ($3 + [242])
	*($4 + [196]) = ($3 + [243])
	*($4 + [200]) = ($3 + [244])
	*($4 + [204]) = ($3 + [245])
	*($4 + [208]) = ($3 + [246])
	*($4 + [212]) = ($3 + [247])
	*($4 + [216]) = ($3 + [248])
	*($4 + [220]) = ($3 + [249])
	*($4 + [224]) = ($3 + [250])
	*($4 + [228]) = ($3 + [251])
	*($4 + [232]) = ($3 + [252])
	*($4 + [236]) = ($3 + [253])
	*($4 + [240]) = ($3 + [254])
	*($4 + [244]) = ($3 + [255])
	*($4 + [248]) = ($3 + [256])
	*($4 + [252]) = ($3 + [257])
	*($4 + [256]) = ($3 + [258])
	*($4 + [260]) = ($3 + [259])
	*($4 + [264]) = ($3 + [260])
	*($4 + [268]) = ($3 + [261])
	CALL $669(($4 + [8]), $4)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [264]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($4 + [8]) = $3
	CALL $685(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [272])
}

void .FUNC $685 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [272]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [280]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [544])
	CALL memcpy(($4 + [15]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*($2 + [288]) = ((int_32)*($4 + [15]) != (int_32)[0])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [296]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [304]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $299 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [52]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	*($3 + [14]) = *($1 + [54])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [496])
	CALL memcpy(*($0 + [4]), ($3 + [14]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	*($3 + [15]) = *($1 + [76])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [496])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [496])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC _ZN11walexchange11rex_manager15create_delegateENS_8to_tradeE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [240])
	*([0] + [4]) = $15
	*((($15 + [88]) + [32])) = [0]
	*($15 + [104]) = (int_64)-1
	*($15 + [112]) = (int_64)0
	$5 = *($0)
	*($15 + [88]) = $5
	*($15 + [96]) = $5
	*($15 + [124]) = [0]
	*($15 + [80]) = ($15 + [88])
	$8 = ($0 + [8])
	CALL $161(($15 + [128]), ($15 + [80]), $8)
	$12 = [0]
	$13 = *($15 + [132])
	if ( ($13 == 0) ){ goto $label$1 }
	$12 = ( $13 ? [0] : ((int_64)*($8) == (int_64)*($13 + [8])) )
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [1456])
	$5 = *($1 + [24])
	*((($15 + [128]) + [32])) = [0]
	*($15 + [144]) = (int_64)-1
	*($15 + [152]) = (int_64)0
	$6 = *($0)
	*($15 + [128]) = $6
	*($15 + [136]) = $6
	$13 = CALL $297(($15 + [128]), $5, [5632])
	$3 = *($13 + [8])
	$2 = *($13 + [4])
	$4 = *($15 + [152])
	if ( ($4 == 0) ){ goto $label$2 }
	$9 = ($15 + [156])
	$13 = *($9)
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$13 = ($13 + [-24])
	$8 = *($13)
	*($13) = [0]
	if ( ($8 == 0) ){ goto $label$6 }
	CALL $738($8)
	
.LABEL $label$6
	if ( ((int_32)$4 != (int_32)$13) ){ goto $label$5 }
	$13 = *(($15 + [152]))
	goto $label$3 
	
.LABEL $label$4
	$13 = $4
	
.LABEL $label$3
	*($9) = $4
	CALL $738($13)
	
.LABEL $label$2
	*($15 + [56]) = (int_64)-1
	*($15 + [64]) = [0]
	$5 = *($0)
	*($15 + [40]) = $5
	$8 = ($0 + [8])
	$14 = *($8)
	*($15 + [48]) = $14
	*(($15 + [68])) = [0]
	*((($15 + [40]) + [32])) = [0]
	$6 = *($1)
	$13 = CALL db_find_i64($5, $14, (int_64)-3617352385659874816, $6)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$8 }
	$13 = CALL $252(($15 + [40]), $13)
	CALL eosio_assert(((int_32)*($13 + [36]) == (int_32)($15 + [40])), [288])
	$14 = *($13 + [16])
	goto $label$7 
	
.LABEL $label$8
	$5 = *($8)
	$6 = *($0)
	*(($15 + [32])) = [0]
	*($15 + [8]) = $5
	*($15) = $6
	*($15 + [16]) = (int_64)-1
	*($15 + [24]) = (int_64)0
	$13 = CALL db_find_i64($6, $5, (int_64)5378043540646199296, $5)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$10 }
	$13 = CALL $287($15, $13)
	CALL eosio_assert(((int_32)*($13 + [16]) == (int_32)$15), [288])
	$13 = ($13 + [8])
	goto $label$9 
	
.LABEL $label$10
	$6 = *($1 + [8])
	$5 = *($0)
	*(($15 + [160])) = [0]
	*($15 + [136]) = $5
	*($15 + [128]) = $5
	*($15 + [144]) = (int_64)-1
	*($15 + [152]) = (int_64)0
	*($15 + [164]) = [0]
	$9 = CALL $11(($15 + [128]), $6, [592])
	$4 = *($15 + [152])
	if ( ($4 == 0) ){ goto $label$11 }
	$10 = ($15 + [156])
	$13 = *($10)
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$13 }
	
.LOOP $label$14:
	$13 = ($13 + [-24])
	$8 = *($13)
	*($13) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	CALL $738($8)
	
.LABEL $label$15
	if ( ((int_32)$4 != (int_32)$13) ){ goto $label$14 }
	$13 = *(($15 + [152]))
	goto $label$12 
	
.LABEL $label$13
	$13 = $4
	
.LABEL $label$12
	*($10) = $4
	CALL $738($13)
	
.LABEL $label$11
	$13 = ($9 + [16])
	
.LABEL $label$9
	$14 = *($13)
	$4 = *($15 + [24])
	if ( ($4 == 0) ){ goto $label$16 }
	$9 = ($15 + [28])
	$13 = *($9)
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$18 }
	
.LOOP $label$19:
	$13 = ($13 + [-24])
	$8 = *($13)
	*($13) = [0]
	if ( ($8 == 0) ){ goto $label$20 }
	CALL $738($8)
	
.LABEL $label$20
	if ( ((int_32)$4 != (int_32)$13) ){ goto $label$19 }
	$13 = *(($15 + [24]))
	goto $label$17 
	
.LABEL $label$18
	$13 = $4
	
.LABEL $label$17
	*($9) = $4
	CALL $738($13)
	
.LABEL $label$16
	$6 = *($1)
	
.LABEL $label$7
	*($15 + [16]) = (int_64)-1
	*($15 + [24]) = [0]
	$5 = *($0)
	*($15) = $5
	*($15 + [8]) = *(($0 + [8]))
	*(($15 + [28])) = [0]
	*(($15 + [32])) = [0]
	*(($15 + [38])) = [0]
	*($15 + [36]) = [0]
	CALL eosio_assert(((int_64)$5 == (int_64)CALL $fimport$16()), [432])
	*(($13 = CALL $737([112])) + [88]) = $15
	*($13) = $6
	*($13 + [64]) = $14
	*($13 + [24]) = $3
	*($13 + [8]) = *($1 + [16])
	*($13 + [16]) = *($1 + [8])
	*($13 + [28]) = *($12)
	*($13 + [32]) = $2
	*($13 + [40]) = *($1 + [32])
	$6 = CALL current_time()
	*($13 + [52]) = [0]
	*($13 + [48]) = ((uint_64)$6 / (uint_64)(int_64)1000000)
	*($15 + [224]) = (($15 + [128]) + [76])
	*($15 + [220]) = ($15 + [128])
	*($15 + [216]) = ($15 + [128])
	CALL $299(($15 + [216]), $13)
	$6 = *($13)
	*($13 + [92]) = CALL db_store_i64(*($15 + [8]), (int_64)-3020379700877741408, $5, $6, ($15 + [128]), [76])
	if ( (uint_64)($6 <= *($15 + [16])) ){ goto $label$21 }
	*(($15 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$21
	$6 = *($13)
	$8 = ($15 + [8])
	$14 = *($8)
	*($15 + [232]) = *($13 + [54])
	*($13 + [96]) = CALL db_idx64_store($14, (int_64)-3020379700877741408, $5, $6, ($15 + [232]))
	$14 = *($13)
	$7 = *($8)
	if ( (*($13 + [54]) == 0) ){ goto $label$23 }
	$6 = ((int_64)*(($13 + [76])) << (int_64)32)
	goto $label$22 
	
.LABEL $label$23
	$6 = (int_64)4294967296
	
.LABEL $label$22
	$11 = *($13 + [72])
	*($15 + [232]) = ( $11 ? (int_64)4294967295 : (int_64)(((int_64)(CASTING uint_64)(uint_32 (int_64)($11 == 0)) | (int_64)$6) == 0) )
	*($13 + [100]) = CALL db_idx64_store($7, (int_64)-3020379700877741407, $5, $14, ($15 + [232]))
	$6 = *($13)
	$14 = *(($15 + [8]))
	$7 = *($13 + [80])
	*($15 + [232]) = ( $7 ? (int_64)4294967295 : (int_64)(((int_64)((int_64)((int_64)*(($13 + [76])) ^ (int_64)1) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (int_64)($7 == 0))) == 0) )
	*($13 + [104]) = CALL db_idx64_store($14, (int_64)-3020379700877741406, $5, $6, ($15 + [232]))
	*($15 + [216]) = $13
	$5 = *($13)
	*($15 + [128]) = $5
	$4 = *(($13 + [92]))
	*($15 + [232]) = $4
	$0 = ($15 + [28])
	$8 = *($0)
	if ( ((uint_32)$8 >= (uint_32)*(($15 + [32]))) ){ goto $label$25 }
	*($8 + [8]) = $5
	*($8 + [16]) = $4
	*($15 + [216]) = [0]
	*($8) = $13
	*($0) = ($8 + [24])
	goto $label$24 
	
.LABEL $label$25
	CALL $300(($15 + [24]), ($15 + [216]), ($15 + [128]), ($15 + [232]))
	
.LABEL $label$24
	$13 = *($15 + [216])
	*($15 + [216]) = [0]
	if ( ($13 == 0) ){ goto $label$26 }
	CALL $738($13)
	
.LABEL $label$26
	$4 = *($15 + [24])
	if ( ($4 == 0) ){ goto $label$27 }
	$0 = ($15 + [28])
	$13 = *($0)
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$29 }
	
.LOOP $label$30:
	$13 = ($13 + [-24])
	$8 = *($13)
	*($13) = [0]
	if ( ($8 == 0) ){ goto $label$31 }
	CALL $738($8)
	
.LABEL $label$31
	if ( ((int_32)$4 != (int_32)$13) ){ goto $label$30 }
	$13 = *(($15 + [24]))
	goto $label$28 
	
.LABEL $label$29
	$13 = $4
	
.LABEL $label$28
	*($0) = $4
	CALL $738($13)
	
.LABEL $label$27
	$4 = *($15 + [64])
	if ( ($4 == 0) ){ goto $label$32 }
	$0 = ($15 + [68])
	$13 = *($0)
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$34 }
	
.LOOP $label$35:
	$13 = ($13 + [-24])
	$8 = *($13)
	*($13) = [0]
	if ( ($8 == 0) ){ goto $label$36 }
	if ( ((*($8 + [24]) & [1]) == 0) ){ goto $label$37 }
	CALL $738(*(($8 + [32])))
	
.LABEL $label$37
	CALL $738($8)
	
.LABEL $label$36
	if ( ((int_32)$4 != (int_32)$13) ){ goto $label$35 }
	$13 = *(($15 + [64]))
	goto $label$33 
	
.LABEL $label$34
	$13 = $4
	
.LABEL $label$33
	*($0) = $4
	CALL $738($13)
	
.LABEL $label$32
	$4 = *($15 + [112])
	if ( ($4 == 0) ){ goto $label$38 }
	$0 = ($15 + [116])
	$13 = *($0)
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$40 }
	
.LOOP $label$41:
	$13 = ($13 + [-24])
	$8 = *($13)
	*($13) = [0]
	if ( ($8 == 0) ){ goto $label$42 }
	CALL $738($8)
	
.LABEL $label$42
	if ( ((int_32)$4 != (int_32)$13) ){ goto $label$41 }
	$13 = *(($15 + [112]))
	goto $label$39 
	
.LABEL $label$40
	$13 = $4
	
.LABEL $label$39
	*($0) = $4
	CALL $738($13)
	
.LABEL $label$38
	*([0] + [4]) = ($15 + [240])
}

void .FUNC $680 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_32 $20
	int_64 $21
	int_64 $22
	int_32 $23
	int_32 $24
	int_32 $25
	$25 = (*([0] + [4]) - [688])
	*([0] + [4]) = $25
	*((($25 + [320]) + [12])) = *(($1 + [20]))
	*(($23 = (($25 + [320]) + [8]))) = *(($1 + [16]))
	*($25 + [320]) = *($1 + [8])
	*($25 + [324]) = *(($1 + [12]))
	$2 = *($1)
	*(($24 = (($25 + [304]) + [8]))) = *(($1 + [32]))
	*($25 + [304]) = *($1 + [24])
	$9 = *($1 + [82])
	$8 = *($1 + [80])
	$7 = *($1 + [72])
	$6 = *($1 + [64])
	$5 = *($1 + [56])
	$4 = *($1 + [48])
	$3 = *($1 + [40])
	CALL memcpy(($25 + [238]), ($1 + [84]), [66])
	$16 = *($1 + [194])
	$15 = *($1 + [192])
	$14 = *($1 + [184])
	$13 = *($1 + [176])
	$12 = *($1 + [168])
	$11 = *($1 + [160])
	$10 = *($1 + [152])
	CALL memcpy(($25 + [172]), ($1 + [196]), [66])
	$22 = *($1 + [304])
	$21 = *($1 + [296])
	$20 = *($1 + [288])
	$19 = *($1 + [280])
	$18 = *($1 + [272])
	$17 = *($1 + [264])
	CALL memcpy(($25 + [440]), ($25 + [172]), [66])
	CALL memcpy(($25 + [368]), ($25 + [238]), [66])
	*((($25 + [352]) + [8])) = *($24)
	*((($25 + [336]) + [8])) = *($23)
	*($25 + [352]) = *($25 + [304])
	*($25 + [336]) = *($25 + [320])
	$1 = *($0 + [4])
	$23 = *($1 + [4])
	$0 = (*(*($0)) + int_32($23 >> [1]))
	$1 = *($1)
	if ( (($23 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($23 = (($25 + [672]) + [8]))) = *((($25 + [336]) + [8]))
	*(($24 = (($25 + [656]) + [8]))) = *((($25 + [352]) + [8]))
	*($25 + [672]) = *($25 + [336])
	*($25 + [656]) = *($25 + [352])
	CALL memcpy(($25 + [584]), ($25 + [368]), [66])
	CALL memcpy(($25 + [512]), ($25 + [440]), [66])
	*((($25 + [152]) + [8])) = *($23)
	*((($25 + [136]) + [8])) = *($24)
	*($25 + [152]) = *($25 + [672])
	*($25 + [136]) = *($25 + [656])
	CALL memcpy(($25 + [70]), ($25 + [584]), [66])
	CALL memcpy(($25 + [4]), ($25 + [512]), [66])
	CALL void $0((int_32 $2), (int_64 ($25 + [152])), (int_32 ($25 + [136])), (int_32 $3), (int_64 $4), (int_64 $5), (int_32 $6), (int_64 $7), (int_64 ($8 & [65535])), (int_32 ($9 & [65535])), (int_32 ($25 + [70])), (int_32 $10), (int_64 $11), (int_64 $12), (int_32 $13), (int_64 $14), (int_64 ($15 & [65535])), (int_32 ($16 & [65535])), (int_32 ($25 + [4])), (int_32 $17), (int_64 $18), (int_64 $19), (int_64 ((int_32)($20 & [255]) != (int_32)[0])), (int_32 $21), (int_64 $22), (int_64 $1))
	*([0] + [4]) = ($25 + [688])
}

void .FUNC $681 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($3 + [48]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [544])
	CALL memcpy(($2 + [56]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [64]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy(($2 + [72]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($4 + [8]) = $2
	CALL $682(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC _ZN6abieos20string_to_public_keyENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	if ( ((int_32)$2 == (int_32)[57]) ){ goto $label$3 }
	if ( ((int_32)$2 != (int_32)[53]) ){ goto $label$4 }
	$3 = *($1)
	if ( ((int_32)CALL strlen([9472]) != (int_32)[3]) ){ goto $label$4 }
	if ( (CALL memcmp($3, [9472], [3]) == 0) ){ goto $label$2 }
	
.LABEL $label$4
	$3 = *($1)
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = *($1)
	$1 = [0]
	if ( ((int_32)CALL strlen([9488]) != (int_32)[7]) ){ goto $label$1 }
	$1 = (CALL memcmp($3, [9488], [7]) == 0)
	goto $label$1 
	
.LABEL $label$2
	$1 = [1]
	
.LABEL $label$1
	CALL eosio_assert($1, [9504])
	$1 = ( $2 ? [3] : ($2 <= [3]) )
	if ( ((int_32)$1 != (int_32)CALL strlen([9472])) ){ goto $label$8 }
	if ( ($1 == 0) ){ goto $label$7 }
	if ( (CALL memcmp($3, [9472], $1) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	if ( ((uint_32)$2 <= (uint_32)[6]) ){ goto $label$5 }
	*($4 + [36]) = ($2 + [-7])
	*($4 + [32]) = ($3 + [7])
	*($4 + [16 align=4]) = *($4 + [32])
	CALL $530(($4 + [40]), ($4 + [16]))
	*($0) = [1]
	CALL memcpy(CALL $fimport$49(($0 + [1]), [0], [33]), ($4 + [40]), [33])
	goto $label$6 
	
.LABEL $label$7
	if ( ((uint_32)$2 <= (uint_32)[2]) ){ goto $label$5 }
	*($4 + [28]) = ($2 + [-3])
	*($4 + [24]) = ($3 + [3])
	*($4 + [8 align=4]) = *($4 + [24])
	CALL $530(($4 + [40]), ($4 + [8]))
	*($0) = [0]
	CALL memcpy(CALL $fimport$49(($0 + [1]), [0], [33]), ($4 + [40]), [33])
	
.LABEL $label$6
	*([0] + [4]) = ($4 + [80])
	return (unreachable)
	
.LABEL $label$5
	CALL abort()
}

int_32 .FUNC $526 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*(($6 + [52])) == (int_32)$0), [288])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749778918490112, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $136($0, $5)
	CALL eosio_assert(((int_32)*($6 + [52]) == (int_32)$0), [288])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN11walexchange12wal_exchange9unbindkeyEymyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE9signature (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	$31 = (*([0] + [4]) - [320])
	*([0] + [4]) = $31
	*($31 + [288]) = $3
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	*($31 + [280]) = *($0)
	$3 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($31 + [280]), $3, [0])
	*((($31 + [240]) + [32])) = [0]
	*($31 + [256]) = (int_64)-1
	*($31 + [264]) = (int_64)0
	$7 = *($0)
	*($31 + [240]) = $7
	*($31 + [248]) = $7
	$6 = CALL $526(($31 + [240]), $3, [592])
	CALL memset((($31 + [200]) | [4]), [0], [36])
	*($31 + [200]) = [0]
	CALL eosio_assert(CALL $347(($6 + [8]), ($31 + [200])), [9408])
	*((($31 + [200]) + [32])) = [0]
	*($31 + [216]) = (int_64)-1
	*($31 + [224]) = (int_64)0
	$3 = *($0)
	*($31 + [200]) = $3
	*($31 + [208]) = $3
	CALL _ZNSt3__19to_stringEm(($31 + [304]), $2)
	$2 = CALL $745(($31 + [304]), [1648])
	$8 = ($2 + [8])
	*((($31 + [160]) + [8])) = *($8)
	*($31 + [160]) = *($2)
	*($2) = [0]
	*(($2 + [4])) = [0]
	*($8) = [0]
	*($31 + [120]) = *($31 + [288])
	CALL $56(($31 + [128]), ($31 + [120]))
	$2 = *($31 + [128])
	$8 = ($2 & [1])
	$2 = CALL $744(($31 + [160]), ( *($31 + [136]) ? (($31 + [128]) | [1]) : $8 ), ( *($31 + [132]) ? uint_32($2 >> [1]) : $8 ))
	$8 = ($2 + [8])
	*((($31 + [8]) + [8])) = *($8)
	*($31 + [8]) = *($2)
	*($2) = [0]
	*(($2 + [4])) = [0]
	*($8) = [0]
	$2 = CALL $745(($31 + [8]), [1648])
	$8 = ($2 + [8])
	*((($31 + [48]) + [8])) = *($8)
	*($31 + [48]) = *($2)
	*($2) = [0]
	*(($2 + [4])) = [0]
	*($8) = [0]
	CALL $767(($31 + [88]), $4)
	CALL _Z19join_space_with_numNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEi(($31 + [104]), ($31 + [88]), [12])
	$2 = *($31 + [104])
	$8 = ($2 & [1])
	$2 = CALL $744(($31 + [48]), ( *($31 + [112]) ? (($31 + [104]) | [1]) : $8 ), ( *($31 + [108]) ? uint_32($2 >> [1]) : $8 ))
	$8 = ($2 + [8])
	*((($31 + [144]) + [8])) = *($8)
	*($31 + [144]) = *($2)
	*($2) = [0]
	*(($2 + [4])) = [0]
	*($8) = [0]
	if ( ((*($31 + [104]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*((($31 + [104]) + [8])))
	
.LABEL $label$2
	if ( ((*($31 + [88]) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($31 + [96]))
	
.LABEL $label$3
	if ( ((*($31 + [48]) & [1]) == 0) ){ goto $label$4 }
	CALL $738(*($31 + [56]))
	
.LABEL $label$4
	if ( ((*($31 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $738(*($31 + [16]))
	
.LABEL $label$5
	if ( ((*($31 + [128]) & [1]) == 0) ){ goto $label$6 }
	CALL $738(*(($31 + [136])))
	
.LABEL $label$6
	if ( ((*($31 + [160]) & [1]) == 0) ){ goto $label$7 }
	CALL $738(*($31 + [168]))
	
.LABEL $label$7
	if ( ((*($31 + [304]) & [1]) == 0) ){ goto $label$8 }
	CALL $738(*($31 + [312]))
	
.LABEL $label$8
	$2 = *($31 + [144])
	$8 = ($2 & [1])
	CALL sha256(( *($31 + [152]) ? (($31 + [144]) | [1]) : $8 ), ( *($31 + [148]) ? uint_32($2 >> [1]) : $8 ), ($31 + [160]))
	*($31 + [48]) = *(($6 + [8]))
	CALL memcpy((($31 + [48]) | [1]), ($6 + [12]), [33])
	CALL assert_recover_key(($31 + [160]), $5, [66], ($31 + [48]), [34])
	$6 = CALL $19(($31 + [200]), *($31 + [288]), [592])
	*($31 + [48]) = [0]
	$2 = *($4)
	$5 = ($2 & [1])
	*($31 + [304]) = ( *($4 + [8]) ? ($4 + [1]) : $5 )
	*($31 + [308]) = ( *($4 + [4]) ? uint_32($2 >> [1]) : $5 )
	*($31) = *($31 + [304])
	CALL _ZN6abieos20string_to_public_keyENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE(($31 + [8]), $31)
	$5 = *((($31 + [8]) + [33]))
	$4 = (($31 + [8]) + [32])
	$8 = *($4)
	$9 = *((($31 + [8]) + [31]))
	$10 = *((($31 + [8]) + [30]))
	$11 = *((($31 + [8]) + [29]))
	$2 = (($31 + [8]) + [28])
	$12 = *($2)
	$13 = *((($31 + [8]) + [27]))
	$14 = *((($31 + [8]) + [26]))
	$15 = *((($31 + [8]) + [25]))
	$16 = (($31 + [8]) + [24])
	$17 = *($16)
	$18 = *((($31 + [8]) + [23]))
	$19 = *((($31 + [8]) + [22]))
	$20 = *((($31 + [8]) + [21]))
	$21 = *((($31 + [8]) + [20]))
	$22 = *((($31 + [8]) + [19]))
	$23 = *((($31 + [8]) + [18]))
	$24 = *(($31 + [25]))
	$25 = *((($31 + [8]) + [16]))
	$26 = *(($31 + [23]))
	$27 = *(($31 + [21]))
	$28 = *(($31 + [17]))
	$29 = *($31 + [9 align=1])
	$30 = *($31 + [8])
	*((($31 + [48]) + [8])) = *($31 + [13 align=1])
	*((($31 + [48]) + [12])) = $28
	*((($31 + [48]) + [16])) = $27
	*((($31 + [48]) + [18])) = $26
	*($31 + [48]) = ((int_32)$30 != (int_32)[0])
	*($31 + [52]) = $29
	*((($31 + [48]) + [19])) = $25
	*((($31 + [48]) + [20])) = $24
	*((($31 + [48]) + [21])) = $23
	*((($31 + [48]) + [22])) = $22
	*((($31 + [48]) + [23])) = $21
	*((($31 + [48]) + [24])) = $20
	*((($31 + [48]) + [25])) = $19
	*((($31 + [48]) + [26])) = $18
	*((($31 + [48]) + [27])) = $17
	*((($31 + [48]) + [28])) = $15
	*((($31 + [48]) + [29])) = $14
	*((($31 + [48]) + [30])) = $13
	*((($31 + [48]) + [31])) = $12
	*((($31 + [48]) + [32])) = $11
	*((($31 + [48]) + [33])) = $10
	*((($31 + [48]) + [34])) = $9
	*(($31 + [83])) = $8
	*((($31 + [48]) + [36])) = $5
	CALL memset((($31 + [8]) | [4]), [0], [36])
	*($31 + [8]) = [0]
	CALL eosio_assert(CALL $347(($31 + [48]), ($31 + [8])), [9440])
	*($31 + [8]) = ($31 + [48])
	CALL $528(($31 + [200]), $6, ($31 + [8]))
	*($4) = [0]
	*($31 + [24]) = (int_64)-1
	*($31 + [32]) = (int_64)0
	$3 = *($0)
	*($31 + [8]) = $3
	*($31 + [16]) = $3
	*($31 + [44]) = [0]
	*($31 + [132]) = ($31 + [288])
	*($31 + [128]) = ($31 + [8])
	*($31 + [136]) = ($31 + [48])
	*($31 + [104]) = $3
	CALL eosio_assert(((int_64)$3 == (int_64)CALL $fimport$16()), [432])
	*($31 + [308]) = ($31 + [128])
	*($31 + [304]) = ($31 + [8])
	*($31 + [312]) = ($31 + [104])
	*(($0 = CALL $737([80])) + [16]) = [0]
	*($0 + [60]) = ($31 + [8])
	CALL $529(($31 + [304]), $0)
	*($31 + [120]) = $0
	$3 = *($0)
	*($31 + [304]) = $3
	$5 = *($0 + [64])
	*($31 + [300]) = $5
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($4)) ){ goto $label$10 }
	*($6 + [8]) = $3
	*($6 + [16]) = $5
	*($31 + [120]) = [0]
	*($6) = $0
	*($2) = ($6 + [24])
	goto $label$9 
	
.LABEL $label$10
	CALL $54($16, ($31 + [120]), ($31 + [304]), ($31 + [300]))
	
.LABEL $label$9
	$0 = *($31 + [120])
	*($31 + [120]) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $738($0)
	
.LABEL $label$11
	$6 = *($31 + [32])
	if ( ($6 == 0) ){ goto $label$12 }
	$2 = ($31 + [36])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$14 }
	
.LOOP $label$15:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	CALL $738($4)
	
.LABEL $label$16
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$15 }
	$0 = *(($31 + [32]))
	goto $label$13 
	
.LABEL $label$14
	$0 = $6
	
.LABEL $label$13
	*($2) = $6
	CALL $738($0)
	
.LABEL $label$12
	if ( ((*($31 + [144]) & [1]) == 0) ){ goto $label$17 }
	CALL $738(*(($31 + [152])))
	
.LABEL $label$17
	$2 = *($31 + [224])
	if ( ($2 == 0) ){ goto $label$18 }
	$5 = ($31 + [228])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$20 }
	
.LOOP $label$21:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$22 }
	$6 = *($4 + [12])
	if ( ($6 == 0) ){ goto $label$23 }
	*(($4 + [16])) = $6
	CALL $738($6)
	
.LABEL $label$23
	CALL $738($4)
	
.LABEL $label$22
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$21 }
	$0 = *(($31 + [224]))
	goto $label$19 
	
.LABEL $label$20
	$0 = $2
	
.LABEL $label$19
	*($5) = $2
	CALL $738($0)
	
.LABEL $label$18
	$6 = *($31 + [264])
	if ( ($6 == 0) ){ goto $label$24 }
	$2 = ($31 + [268])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$26 }
	
.LOOP $label$27:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$28 }
	CALL $738($4)
	
.LABEL $label$28
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$27 }
	$0 = *(($31 + [264]))
	goto $label$25 
	
.LABEL $label$26
	$0 = $6
	
.LABEL $label$25
	*($2) = $6
	CALL $738($0)
	
.LABEL $label$24
	*([0] + [4]) = ($31 + [320])
}

void .FUNC _ZN11walexchange12wal_exchange7bindkeyEymyN5eosio10public_keyE9signature (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [224])
	*([0] + [4]) = $9
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	*($9 + [216]) = *($0)
	$6 = CALL _ZN11walexchange24contract_account_manager29get_or_create_digital_accountEy(($9 + [216]), $3)
	CALL memcpy(($9 + [176]), $4, [40])
	$4 = CALL memcpy($9, ($9 + [176]), [40])
	CALL _ZN11walexchange12wal_exchange13add_trade_keyEyN5eosio10public_keyE($0, $6, $4)
	CALL _ZNSt3__19to_stringEm(($4 + [144]), $2)
	$9 = CALL $745(($4 + [144]), [1648])
	$2 = ($9 + [8])
	*((($4 + [64]) + [8])) = *($2)
	*($4 + [64]) = *($9)
	*($9) = [0]
	*(($9 + [4])) = [0]
	*($2) = [0]
	*($4 + [104]) = $3
	CALL $56(($4 + [112]), ($4 + [104]))
	$9 = *($4 + [112])
	$2 = ($9 & [1])
	$9 = CALL $744(($4 + [64]), ( *($4 + [120]) ? (($4 + [112]) | [1]) : $2 ), ( *($4 + [116]) ? uint_32($9 >> [1]) : $2 ))
	$2 = ($9 + [8])
	*((($4 + [128]) + [8])) = *($2)
	*($4 + [128]) = *($9)
	*($9) = [0]
	*(($9 + [4])) = [0]
	*($2) = [0]
	if ( ((*($4 + [112]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*((($4 + [112]) + [8])))
	
.LABEL $label$2
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($4 + [72]))
	
.LABEL $label$3
	if ( ((*($4 + [144]) & [1]) == 0) ){ goto $label$4 }
	CALL $738(*($4 + [152]))
	
.LABEL $label$4
	$9 = *($4 + [128])
	$2 = ($9 & [1])
	CALL sha256(( *($4 + [136]) ? (($4 + [128]) | [1]) : $2 ), ( *($4 + [132]) ? uint_32($9 >> [1]) : $2 ), ($4 + [144]))
	*(($4 + [96])) = [0]
	*($4 + [80]) = (int_64)-1
	*($4 + [88]) = (int_64)0
	$3 = *($0)
	*($4 + [64]) = $3
	*($4 + [72]) = $3
	$9 = CALL $19(($4 + [64]), $6, [592])
	$3 = *($9)
	$2 = *(($9 + [8]))
	*((($4 + [40]) + [16])) = (int_64)0
	*((($4 + [40]) + [8])) = $2
	*($4 + [52]) = [0]
	*($4 + [40]) = $3
	$2 = (*(($9 + [16])) - *($9 + [12]))
	$8 = ((int_32)$2 / (int_32)[40])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$5 }
	$2 = CALL $737($2)
	*((($4 + [40]) + [12])) = $2
	*(($4 + [60])) = ($2 + ((int_32)$8 * (int_32)[40]))
	*(($8 = (($4 + [40]) + [16]))) = $2
	$7 = *(($9 + [12]))
	$9 = (*(($9 + [16])) - $7)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $7, $9)
	*($8) = (*($8) + ((int_32)((uint_32)$9 / (uint_32)[40]) * (int_32)[40]))
	
.LABEL $label$6
	CALL _ZN11walexchange12wal_exchange18assert_has_pub_keyERK11checksum256RK9signatureNS_4userE($0, ($4 + [144]), $5, ($4 + [40]))
	$0 = *($4 + [52])
	if ( ($0 == 0) ){ goto $label$7 }
	*(($4 + [56])) = $0
	CALL $738($0)
	
.LABEL $label$7
	$8 = *($4 + [88])
	if ( ($8 == 0) ){ goto $label$8 }
	$5 = ($4 + [92])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$8) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$9 = *($0)
	*($0) = [0]
	if ( ($9 == 0) ){ goto $label$12 }
	$2 = *($9 + [12])
	if ( ($2 == 0) ){ goto $label$13 }
	*(($9 + [16])) = $2
	CALL $738($2)
	
.LABEL $label$13
	CALL $738($9)
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($4 + [88]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $8
	
.LABEL $label$9
	*($5) = $8
	CALL $738($0)
	
.LABEL $label$8
	if ( ((*($4 + [128]) & [1]) == 0) ){ goto $label$14 }
	CALL $738(*(($4 + [136])))
	
.LABEL $label$14
	*([0] + [4]) = ($4 + [224])
	return (unreachable)
	
.LABEL $label$5
	CALL $766(($4 + [52]))
}

void .FUNC $291 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN11walexchange12wal_exchange11createdigitEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	*($3 + [8]) = *($0)
	CALL _ZN11walexchange24contract_account_manager29get_or_create_digital_accountEy(($3 + [8]), $2)
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $521 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	$6 = *($4 + [12])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [16])) = $6
	CALL $738($6)
	
.LABEL $label$7
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = *($4 + [12])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [16])) = $6
	CALL $738($6)
	
.LABEL $label$10
	CALL $738($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $520 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*(($1 + [52])) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [56]))
}

int_32 .FUNC $407 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $737([56])) + [8 align=4]) = (int_64)0
	*($6 + [16 align=4]) = (int_64)0
	*($6 + [24 align=4]) = (int_64)0
	*($6 + [32 align=4]) = (int_64)0
	*($6 + [40]) = [0]
	*($6 + [44]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [544])
	CALL memcpy($6, $4, [8])
	*($8 + [36]) = ($4 + [8])
	CALL $101(CALL $101(CALL $101(($8 + [32]), ($6 + [8])), ($6 + [20])), ($6 + [32]))
	*($6 + [48]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [48])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $410(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $738(*(($4 + [40])))
	
.LABEL $label$10
	if ( ((*($4 + [20]) & [1]) == 0) ){ goto $label$11 }
	CALL $738(*(($4 + [28])))
	
.LABEL $label$11
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$12 }
	CALL $738(*(($4 + [16])))
	
.LABEL $label$12
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $699 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [512])
	*([0] + [4]) = $14
	*(($14 + [252])) = *(($1 + [44]))
	*(($10 = (($14 + [232]) + [16]))) = *(($1 + [40]))
	*(($14 + [244])) = *(($1 + [36]))
	*(($11 = (($14 + [232]) + [8]))) = *(($1 + [32]))
	*($14 + [232]) = *($1 + [24])
	*($14 + [236]) = *(($1 + [28]))
	$4 = *($1 + [16])
	$3 = *($1 + [8])
	$2 = *($1)
	*(($12 = (($14 + [208]) + [16]))) = *(($1 + [64]))
	*(($13 = (($14 + [208]) + [8]))) = *(($1 + [56]))
	*($14 + [208]) = *($1 + [48])
	$8 = *($1 + [86])
	$7 = *($1 + [84])
	$6 = *($1 + [80])
	$5 = *($1 + [72])
	CALL $767(($14 + [192]), ($1 + [88]))
	CALL memcpy(($14 + [126]), ($1 + [100]), [66])
	$9 = *($1 + [166])
	CALL memcpy(($14 + [304]), ($14 + [126]), [66])
	*((($14 + [280]) + [16])) = *($12)
	*((($14 + [280]) + [8])) = *($13)
	*((($14 + [256]) + [16])) = *($10)
	*((($14 + [256]) + [8])) = *($11)
	*($14 + [280]) = *($14 + [208])
	*($14 + [256]) = *($14 + [232])
	$1 = *($0 + [4])
	$10 = *($1 + [4])
	$0 = (*(*($0)) + int_32($10 >> [1]))
	$1 = *($1)
	if ( (($10 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($10 = (($14 + [488]) + [16]))) = *((($14 + [256]) + [16]))
	*(($11 = (($14 + [488]) + [8]))) = *((($14 + [256]) + [8]))
	*(($12 = (($14 + [464]) + [16]))) = *((($14 + [280]) + [16]))
	*(($13 = (($14 + [464]) + [8]))) = *((($14 + [280]) + [8]))
	*($14 + [488]) = *($14 + [256])
	*($14 + [464]) = *($14 + [280])
	CALL $767(($14 + [448]), ($14 + [192]))
	CALL memcpy(($14 + [376]), ($14 + [304]), [66])
	*((($14 + [96]) + [16])) = *($10)
	*((($14 + [96]) + [8])) = *($11)
	*((($14 + [72]) + [16])) = *($12)
	*((($14 + [72]) + [8])) = *($13)
	*($14 + [96]) = *($14 + [488])
	*($14 + [72]) = *($14 + [464])
	CALL memcpy(($14 + [6]), ($14 + [376]), [66])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ((int_32)($4 & [255]) != (int_32)[0])), (int_32 ($14 + [96])), (int_32 ($14 + [72])), (int_32 $5), (int_64 $6), (int_32 ($7 & [65535])), (int_32 ($8 & [65535])), (int_32 ($14 + [448])), (int_32 ($14 + [6])), (int_32 ($9 & [65535])), (int_32 $1))
	if ( ((*($14 + [448]) & [1]) == 0) ){ goto $label$2 }
	CALL $738(*($14 + [456]))
	
.LABEL $label$2
	if ( ((*($14 + [192]) & [1]) == 0) ){ goto $label$3 }
	CALL $738(*($14 + [200]))
	
.LABEL $label$3
	*([0] + [4]) = ($14 + [512])
}

int_32 .FUNC _Z9is_digitsRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$3 = [1]
	$1 = ($2 & [1])
	$2 = *($0)
	$2 = ( *($0 + [4]) ? uint_32($2 >> [1]) : $1 )
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = ( *($0 + [8]) ? ($0 + [1]) : $1 )
	
.LOOP $label$3:
	if ( (CALL isdigit(*($0)) == 0) ){ goto $label$2 }
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	return [1]
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	return $3
}

void .FUNC $749 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$8 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($0 + [8])
	
.LABEL $label$2
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$9 = [11]
	$2 = ($2 + $1)
	$7 = ($1 << [1])
	$2 = ( $7 ? $2 : ($2 <= $7) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $737($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $738($8)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $748 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$7 = ($6 & [1])
	if ( $7 ){ goto $label$3 }
	$5 = uint_32($6 >> [1])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0 + [4])
	if ( ($5 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $7 ){ goto $label$6 }
	$7 = [10]
	goto $label$5 
	
.LABEL $label$6
	$6 = *($0)
	$7 = (($6 & [-2]) + [-1])
	
.LABEL $label$5
	if ( ((uint_32)($7 - $5) >= (uint_32)$2) ){ goto $label$8 }
	CALL $749($0, $7, (($5 + $2) - $7), $5, $1, [0], $2)
	$6 = *($0 + [8])
	goto $label$7 
	
.LABEL $label$8
	if ( ($6 & [1]) ){ goto $label$10 }
	$6 = ($0 + [1])
	$7 = ($5 - $1)
	if ( $7 ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$6 = *($0 + [8])
	$7 = ($5 - $1)
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$9
	$4 = ($6 + $1)
	CALL memmove(($4 + $2), $4, $7)
	
.LABEL $label$7
	CALL memset(($6 + $1), ($3 & [255]), $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$12 }
	*($0) = ($2 << [1])
	goto $label$11 
	
.LABEL $label$12
	*($0 + [4]) = $2
	
.LABEL $label$11
	*(($6 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $743 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL strlen($1)
	$5 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$5) ){ goto $label$7 }
	if ( $4 ){ goto $label$6 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$5 
	
.LABEL $label$7
	if ( $4 ){ goto $label$4 }
	$5 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$3 = *($0 + [4])
	
.LABEL $label$5
	CALL $741($0, $5, ($2 - $5), $3, [0], $3, $2, $1)
	return $0
	
.LABEL $label$4
	$5 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memmove($5, $1, $2)
	
.LABEL $label$2
	*(($5 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$8 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$8
	*($0 + [4]) = $2
	return $0
}

void .FUNC $742 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $737(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $738($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $741 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $737($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $738($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $740 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$4 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $4 )
	$5 = ($1 + [1])
	$6 = *($1 + [8])
	$1 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$3 = *($0)
	$1 = (($3 & [-2]) + [-1])
	
.LABEL $label$5
	$5 = ( $6 ? $5 : $4 )
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $4 ){ goto $label$7 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $4 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$3 = *($0 + [4])
	
.LABEL $label$6
	CALL $741($0, $1, ($2 - $1), $3, [0], $3, $2, $5)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $5, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $747 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$3 }
	$4 = uint_32($5 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( $6 ){ goto $label$5 }
	$6 = [10]
	goto $label$4 
	
.LABEL $label$5
	$5 = *($0)
	$6 = (($5 & [-2]) + [-1])
	
.LABEL $label$4
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$6 }
	CALL $741($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	return $0
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ($5 & [1]) ){ goto $label$8 }
	$5 = ($0 + [1])
	goto $label$7 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	
.LABEL $label$7
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$10 }
	CALL memmove(($6 + $3), $6, $1)
	$2 = ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) )
	
.LABEL $label$10
	CALL memmove($6, $2, $3)
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$12 }
	*($0) = ($3 << [1])
	goto $label$11 
	
.LABEL $label$12
	*($0 + [4]) = $3
	
.LABEL $label$11
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $746 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $747($0, $1, $2, CALL $807($2))
}

int_32 .FUNC $745 (int_32 $0, int_32 $1)
{
	return CALL $744($0, $1, CALL $807($1))
}

int_32 .FUNC $744 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $741($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

int_32 .FUNC $592 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [32]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2320])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-6434641899079037616)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2256])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2256])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $591(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $593 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [544])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [544])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [544])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $590 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $591 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [512])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $737([40])) + [28]) = $0
	CALL $593(($8 + [32]), $6)
	*($6 + [36]) = [-1]
	*($6 + [32]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [32])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $590(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $596 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [28]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [32]))
	$7 = *($1 + [36])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-6434641899079037616, $9, *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx128_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _ZN11walexchange12wal_exchange16get_rex_receivedERKN5eosio5assetE (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [80])
	*([0] + [4]) = $10
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [8112]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [8112]
	$9 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$12 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$3 = ($3 + [165])
	goto $label$10 
	
.LABEL $label$12
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$8
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$7 }
	$4 = [0]
	*(($10 + [72])) = [0]
	*($10 + [56]) = (int_64)-1
	*($10 + [48]) = $9
	*($10 + [40]) = $7
	*($10 + [64]) = (int_64)0
	$3 = CALL db_lowerbound_i64($7, $9, (int_64)-4991296453239373824, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$17 }
	$3 = CALL $423(($10 + [40]), $3)
	$6 = *($3 + [72])
	if ( ((int_64)$6 < (int_64)1) ){ goto $label$17 }
	$8 = *($3 + [56])
	$5 = ((int_64)*($2) + (int_64)$8)
	CALL __multi3(($10 + [24]), $5, (int_64)$5 >> (int_64)63), $6, (int_64)$6 >> (int_64)63))
	CALL __udivti3(($10 + [8]), *($10 + [24]), *(($10 + [32])), $8, (int_64)$8 >> (int_64)63))
	*($0 + [8]) = (int_64)1480937988
	$6 = (int_64)
	*($0) = $6(*($10 + [8]) - $6))
	CALL eosio_assert((uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$6 = (int_64)5784914
	$4 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$18 }
	goto $label$15 
	
.LABEL $label$17
	*($0 + [8]) = (int_64)1480937988
	$6 = ((int_64)*($2) * (int_64)10000)
	*($0) = $6
	CALL eosio_assert((uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$6 = (int_64)5784914
	
.LOOP $label$22:
	$3 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	
.LOOP $label$24:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	$3 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$22 }
	
.LABEL $label$21
	CALL eosio_assert($3, [2832])
	$0 = *($10 + [64])
	if ( $0 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$3 = [0]
	
.LABEL $label$15
	CALL eosio_assert($3, [2832])
	$0 = *($10 + [64])
	if ( ($0 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$2 = ($10 + [68])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$26 }
	
.LOOP $label$27:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$28 }
	CALL $738($3)
	
.LABEL $label$28
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$27 }
	$4 = *(($10 + [64]))
	goto $label$25 
	
.LABEL $label$26
	$4 = $0
	
.LABEL $label$25
	*($2) = $0
	CALL $738($4)
	
.LABEL $label$13
	*([0] + [4]) = ($10 + [80])
}

void .FUNC _ZN11walexchange12wal_exchange12deloutsymmapEN5eosio11symbol_typeEy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL require_auth(*(($0 + [216])))
	
.LABEL $label$1
	*(($7 + [64])) = [0]
	*($7 + [48]) = (int_64)-1
	*($7 + [56]) = (int_64)0
	$5 = *($0)
	*($7 + [32]) = $5
	*($7 + [40]) = $5
	*($7 + [68]) = [0]
	*($7 + [24]) = ($7 + [32])
	*($7 + [8]) = $2
	*($7) = (uint_64)$1 >> (uint_64)(int_64)8)
	CALL $588(($7 + [72]), ($7 + [24]), $7)
	$3 = ($7 + [24])
	$4 = *($7 + [76])
	if ( ($4 == 0) ){ goto $label$3 }
	$0 = [0]
	if ( ((int_64)((int_64)((int_64)*($7) ^ (int_64)(uint_64)*($4 + [8]) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($7 + [8]) ^ (int_64)*($4 + [16]))) != (int_64)0) ){ goto $label$2 }
	$3 = *($7 + [72])
	$0 = $4
	goto $label$2 
	
.LABEL $label$3
	$0 = [0]
	
.LABEL $label$2
	$4 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($4, [10688])
	*($7) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $3))
	CALL eosio_assert($4, [736])
	CALL $595($7)
	CALL $596(*($7 + [24]), $0)
	$3 = *($7 + [56])
	if ( ($3 == 0) ){ goto $label$4 }
	$6 = ($7 + [60])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($7 + [56]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $3
	
.LABEL $label$5
	*($6) = $3
	CALL $738($0)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [80])
}

int_32 .FUNC $595 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$7 = [0]
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [784])
	$8 = *($0 + [4])
	$6 = *($8 + [36])
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$1 }
	$6 = *(*($0))
	$6 = CALL db_idx128_find_primary(*($6), *($6 + [8]), (int_64)-6434641899079037616, $9, *($8))
	*(*(($0 + [4])) + [36]) = $6
	
.LABEL $label$1
	*($9) = (int_64)0
	$1 = CALL db_idx128_next($6, $9)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$3 = *($9)
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$4:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$3 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [28]) == (int_32)$2), [288])
	goto $label$5 
	
.LABEL $label$6
	$7 = CALL $591($2, CALL $fimport$19(*($2), *($2 + [8]), (int_64)-6434641899079037616, $3))
	CALL eosio_assert(((int_32)*($7 + [28]) == (int_32)$2), [288])
	
.LABEL $label$5
	*($7 + [36]) = $1
	
.LABEL $label$2
	*(($0 + [4])) = $7
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [1072])
	$2 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$6 = *($1)
	$3 = ([0] - $2)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(*($8)) == (int_32)$6) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$2), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $738($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*(($1 + [16])))
}

void .FUNC $37 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $737(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $738($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $738($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN11walexchange12wal_exchange12try_sell_rexERKN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [192])
	*([0] + [4]) = $10
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [8064]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$6 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$1 }
	*(($10 + [168])) = [0]
	*($10 + [152]) = (int_64)-1
	*($10 + [160]) = (int_64)0
	$6 = *($0)
	*($10 + [144]) = $6
	*($10 + [136]) = $7
	$4 = CALL db_find_i64($7, $6, (int_64)3607749779137757184, (int_64)5459781)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$8 }
	$4 = CALL $420(($10 + [136]), $4)
	CALL eosio_assert(((int_32)*($4 + [16]) == (int_32)($10 + [136])), [288])
	$6 = *(($1 + [8]))
	*((($10 + [120]) + [8])) = $6
	*($10 + [120]) = *($1)
	CALL eosio_assert(((int_64)$6 == (int_64)*($4 + [8])), [10720])
	$6 = (int_64)
	*($10 + [120]) = $6(*($10 + [120]) - *($4)))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [10768])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [10800])
	goto $label$7 
	
.LABEL $label$8
	*((($10 + [120]) + [8])) = *(($1 + [8]))
	$6 = *($1)
	*($10 + [120]) = $6
	
.LABEL $label$7
	if ( ((int_64)$6 <= (int_64)0) ){ goto $label$9 }
	CALL _ZN11walexchange12wal_exchange16get_rex_receivedERKN5eosio5assetE(($10 + [64]), $4, ($10 + [120]))
	CALL eosio_assert([1], [2768])
	$6 = (int_64)5784914
	$4 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$2 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	$2 = [0]
	
.LABEL $label$10
	CALL eosio_assert($2, [2832])
	$6 = *((($10 + [64]) + [8]))
	*((($10 + [104]) + [8])) = $6
	*($10 + [104]) = *($10 + [64])
	CALL eosio_assert(((int_64)$6 == (int_64)1480937988), [3408])
	$6 = *($10 + [104])
	$8 = ((int_64)$6 + (int_64)1)
	*($10 + [104]) = $8
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387905), [3456])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [3488])
	$3 = *($0)
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [2144]
	$7 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$20 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$2 = ($2 + [165])
	goto $label$18 
	
.LABEL $label$20
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$16
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$15 }
	*($10 + [56]) = $7
	*($10 + [48]) = $3
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [8112]
	$7 = (int_64)0
	
.LOOP $label$21:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$26 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$2 = ($2 + [165])
	goto $label$24 
	
.LABEL $label$26
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$23
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$22
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$21 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [10832]
	$9 = (int_64)0
	
.LOOP $label$27:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$32 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$2 = ($2 + [165])
	goto $label$30 
	
.LABEL $label$32
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$31
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$29
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$28
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$27 }
	*((($10 + [24]) + [12])) = *($10 + [108])
	*(($10 + [44])) = *((($10 + [104]) + [12]))
	*(($10 + [40])) = *(($10 + [112]))
	*($10 + [24]) = $3
	*($10 + [32]) = *($10 + [104])
	$4 = CALL $599(($10 + [64]), ($10 + [48]), $7, $9, ($10 + [24]))
	CALL $87(($10 + [8]), $4)
	$2 = *($10 + [8])
	CALL send_inline($2, (*($10 + [12]) - $2))
	$2 = *($10 + [8])
	if ( ($2 == 0) ){ goto $label$33 }
	*($10 + [12]) = $2
	CALL $738($2)
	
.LABEL $label$33
	$2 = *($4 + [28])
	if ( ($2 == 0) ){ goto $label$34 }
	*(($4 + [32])) = $2
	CALL $738($2)
	
.LABEL $label$34
	$2 = *($4 + [16])
	if ( ($2 == 0) ){ goto $label$35 }
	*(($4 + [20])) = $2
	CALL $738($2)
	
.LABEL $label$35
	$9 = *($0)
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [2144]
	$7 = (int_64)0
	
.LOOP $label$36:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$41 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$2 = ($2 + [165])
	goto $label$39 
	
.LABEL $label$41
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$38
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$37
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$36 }
	*($10 + [56]) = $7
	*($10 + [48]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [8112]
	$7 = (int_64)0
	
.LOOP $label$42:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$47 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$46 }
	$2 = ($2 + [165])
	goto $label$45 
	
.LABEL $label$47
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$46
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$45
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$44
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$43
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$42 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [2080]
	$9 = (int_64)0
	
.LOOP $label$48:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$53 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$2 = ($2 + [165])
	goto $label$51 
	
.LABEL $label$53
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$50
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$49
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$48 }
	CALL _ZN11walexchange12wal_exchange16get_eos_receivedERKN5eosio5assetE(($10 + [8]), $4, ($10 + [104]))
	*(($10 + [44])) = *((($10 + [8]) + [12]))
	*(($10 + [40])) = *(($10 + [16]))
	*((($10 + [24]) + [12])) = *($10 + [12])
	*($10 + [24]) = *($0)
	*($10 + [32]) = *($10 + [8])
	$4 = CALL $599(($10 + [64]), ($10 + [48]), $7, $9, ($10 + [24]))
	CALL $87(($10 + [176]), $4)
	$2 = *($10 + [176])
	CALL send_inline($2, (*($10 + [180]) - $2))
	$2 = *($10 + [176])
	if ( ($2 == 0) ){ goto $label$54 }
	*($10 + [180]) = $2
	CALL $738($2)
	
.LABEL $label$54
	$2 = *($4 + [28])
	if ( ($2 == 0) ){ goto $label$55 }
	*(($4 + [32])) = $2
	CALL $738($2)
	
.LABEL $label$55
	$2 = *($4 + [16])
	if ( ($2 == 0) ){ goto $label$9 }
	*(($4 + [20])) = $2
	CALL $738($2)
	
.LABEL $label$9
	$0 = *($10 + [160])
	if ( ($0 == 0) ){ goto $label$56 }
	$1 = ($10 + [164])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$58 }
	
.LOOP $label$59:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$60 }
	CALL $738($2)
	
.LABEL $label$60
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$59 }
	$4 = *(($10 + [160]))
	goto $label$57 
	
.LABEL $label$58
	$4 = $0
	
.LABEL $label$57
	*($1) = $0
	CALL $738($4)
	
.LABEL $label$56
	*([0] + [4]) = ($10 + [192])
}

int_32 .FUNC $599 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$6 = CALL $737([16])
	*($0 + [16]) = $6
	*(($7 = ($0 + [20]))) = $6
	$8 = ($6 + [16])
	*($5) = $8
	*(($6 + [8])) = *(($1 + [8]))
	*($6) = *($1)
	*($7) = $8
	*($0 + [28]) = [0]
	*(($6 = ($0 + [32]))) = [0]
	*(($0 + [36])) = [0]
	CALL $88(($0 + [28]), [24])
	$6 = *($0 + [28])
	$1 = (*($6) - $6)
	CALL eosio_assert(((int_32)$1 > (int_32)[7]), [496])
	CALL memcpy($6, $4, [8])
	CALL eosio_assert(((int_32)($1 + [-8]) > (int_32)[7]), [496])
	CALL memcpy(($6 + [8]), ($4 + [8]), [8])
	CALL eosio_assert(((int_32)($1 + [-16]) > (int_32)[7]), [496])
	CALL memcpy(($6 + [16]), ($4 + [16]), [8])
	return $0
}

void .FUNC _ZN11walexchange13order_manager18update_last_bucketEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$14 = (*([0] + [4]) - [144])
	*([0] + [4]) = $14
	*((($14 + [88]) + [32])) = [0]
	*($14 + [104]) = (int_64)-1
	*($14 + [112]) = (int_64)0
	$7 = *($0)
	*($14 + [88]) = $7
	*($14 + [96]) = $7
	$6 = [0]
	$13 = CALL db_find_i64($7, $7, (int_64)-4417020450001911808, (int_64)-4417020450001911808)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $33(($14 + [88]), $13)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)($14 + [88])), [288])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [672])
	$3 = *($6 + [10])
	*((($14 + [48]) + [32])) = [0]
	*($14 + [64]) = (int_64)-1
	*($14 + [72]) = (int_64)0
	$7 = *($0)
	*($14 + [48]) = $7
	*($14 + [56]) = $7
	$1 = CALL $34(($14 + [48]), *($0 + [8]), [704])
	$4 = *($1 + [8])
	*($14 + [24]) = (int_64)-1
	*($14 + [32]) = [0]
	*($14 + [8]) = *($0)
	*($14 + [16]) = *($0 + [8])
	*(($8 = ($14 + [36]))) = [0]
	*((($14 + [8]) + [32])) = [0]
	$2 = ($1 + [8])
	if ( ($3 == 0) ){ goto $label$4 }
	$9 = (($14 + [8]) + [8])
	$10 = ($0 + [16])
	$11 = ($14 + [32])
	$12 = [0]
	$13 = [0]
	if ( ((int_32)[0] != (int_32)[0]) ){ goto $label$3 }
	$15 = [2]
	goto $label$2 
	
.LABEL $label$4
	$0 = $4
	$15 = [10]
	goto $label$2 
	
.LABEL $label$3
	$15 = [8]
	
.LABEL $label$2
	
.LOOP $label$5:
	goto $label$67 
	
.LABEL $label$79
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$30 }
	$15 = [3]
	goto $label$5 
	
.LABEL $label$78
	$0 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [12]) == (int_32)($14 + [8])), [288])
	if ( $0 ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$77
	$0 = CALL db_find_i64(*($14 + [8]), *($9), (int_64)4508390629029445632, (CASTING uint_64)(uint_32 $4))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$24 }
	$15 = [44]
	goto $label$5 
	
.LABEL $label$76
	$0 = CALL $35(($14 + [8]), $0)
	CALL eosio_assert(((int_32)*($0 + [12]) == (int_32)($14 + [8])), [288])
	$15 = [4]
	goto $label$5 
	
.LABEL $label$75
	if ( (*($0 + [8]) == 0) ){ goto $label$27 }
	$15 = [5]
	goto $label$5 
	
.LABEL $label$74
	$3 = ($3 + [-1])
	if ( *($0 + [4]) ){ goto $label$26 }
	$15 = [40]
	goto $label$5 
	
.LABEL $label$73
	CALL eosio_assert([1], [736])
	CALL eosio_assert([1], [784])
	$6 = CALL db_next_i64(*($0 + [16]), ($14 + [128]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$15 = [41]
	goto $label$5 
	
.LABEL $label$72
	CALL $35(($14 + [8]), $6)
	$15 = [42]
	goto $label$5 
	
.LABEL $label$71
	CALL $36(($14 + [8]), $0)
	$15 = [6]
	goto $label$5 
	
.LABEL $label$70
	$4 = (*($10) + $4)
	if ( (($3 & [65535]) == 0) ){ goto $label$25 }
	$15 = [7]
	goto $label$5 
	
.LABEL $label$69
	$12 = *($11)
	$13 = *($8)
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$31 }
	$15 = [8]
	goto $label$5 
	
.LABEL $label$68
	$0 = ($13 + [-24])
	$5 = ([0] - $12)
	$15 = [0]
	goto $label$5 
	
.LABEL $label$67
	if ( ((int_32)*(*($0)) == (int_32)$4) ){ goto $label$34 }
	$15 = [1]
	goto $label$5 
	
.LABEL $label$66
	$13 = $0
	$6 = ($0 + [-24])
	$0 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$32 }
	goto $label$33 
	
.LABEL $label$65
	$0 = *($2)
	goto $label$23 
	
.LABEL $label$64
	CALL eosio_assert(((int_32)$4 != (int_32)$0), [816])
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)($14 + [48])), [848])
	CALL eosio_assert(((int_64)*($14 + [48]) == (int_64)CALL $fimport$16()), [896])
	*($2) = $4
	$7 = *($1)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($14 + [128]), $1, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($14 + [128]) | [8]), $2, [4])
	CALL db_update_i64(*($1 + [20]), (int_64)0, ($14 + [128]), [12])
	$0 = ($14 + [64])
	if ( (uint_64)($7 <= *($0)) ){ goto $label$22 }
	$15 = [11]
	goto $label$5 
	
.LABEL $label$63
	*($0) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$15 = [12]
	goto $label$5 
	
.LABEL $label$62
	$13 = *($14 + [32])
	if ( ($13 == 0) ){ goto $label$21 }
	$15 = [13]
	goto $label$5 
	
.LABEL $label$61
	$4 = ($14 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$13) ){ goto $label$20 }
	$15 = [14]
	goto $label$5 
	
.LABEL $label$60
	$15 = [15]
	goto $label$5 
	
.LABEL $label$59
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$18 }
	$15 = [16]
	goto $label$5 
	
.LABEL $label$58
	CALL $738($6)
	$15 = [17]
	goto $label$5 
	
.LABEL $label$57
	if ( ((int_32)$13 != (int_32)$0) ){ goto $label$19 }
	$15 = [18]
	goto $label$5 
	
.LABEL $label$56
	$0 = *(($14 + [32]))
	goto $label$17 
	
.LABEL $label$55
	$0 = $13
	$15 = [19]
	goto $label$5 
	
.LABEL $label$54
	*($4) = $13
	CALL $738($0)
	$15 = [20]
	goto $label$5 
	
.LABEL $label$53
	$13 = *($14 + [72])
	if ( ($13 == 0) ){ goto $label$16 }
	$15 = [21]
	goto $label$5 
	
.LABEL $label$52
	$4 = ($14 + [76])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$13) ){ goto $label$15 }
	$15 = [22]
	goto $label$5 
	
.LABEL $label$51
	$15 = [23]
	goto $label$5 
	
.LABEL $label$50
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$13 }
	$15 = [24]
	goto $label$5 
	
.LABEL $label$49
	CALL $738($6)
	$15 = [25]
	goto $label$5 
	
.LABEL $label$48
	if ( ((int_32)$13 != (int_32)$0) ){ goto $label$14 }
	$15 = [26]
	goto $label$5 
	
.LABEL $label$47
	$0 = *(($14 + [72]))
	goto $label$12 
	
.LABEL $label$46
	$0 = $13
	$15 = [27]
	goto $label$5 
	
.LABEL $label$45
	*($4) = $13
	CALL $738($0)
	$15 = [28]
	goto $label$5 
	
.LABEL $label$44
	$13 = *($14 + [112])
	if ( ($13 == 0) ){ goto $label$11 }
	$15 = [29]
	goto $label$5 
	
.LABEL $label$43
	$4 = ($14 + [116])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$13) ){ goto $label$10 }
	$15 = [30]
	goto $label$5 
	
.LABEL $label$42
	$15 = [31]
	goto $label$5 
	
.LABEL $label$41
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$8 }
	$15 = [32]
	goto $label$5 
	
.LABEL $label$40
	CALL $738($6)
	$15 = [33]
	goto $label$5 
	
.LABEL $label$39
	if ( ((int_32)$13 != (int_32)$0) ){ goto $label$9 }
	$15 = [34]
	goto $label$5 
	
.LABEL $label$38
	$0 = *(($14 + [112]))
	goto $label$7 
	
.LABEL $label$37
	$0 = $13
	$15 = [35]
	goto $label$5 
	
.LABEL $label$36
	*($4) = $13
	CALL $738($0)
	$15 = [36]
	goto $label$5 
	
.LABEL $label$35
	*([0] + [4]) = ($14 + [144])
	return 
	
.LABEL $label$34
	$15 = [2]
	goto $label$5 
	
.LABEL $label$33
	$15 = [2]
	goto $label$5 
	
.LABEL $label$32
	$15 = [0]
	goto $label$5 
	
.LABEL $label$31
	$15 = [2]
	goto $label$5 
	
.LABEL $label$30
	$15 = [43]
	goto $label$5 
	
.LABEL $label$29
	$15 = [9]
	goto $label$5 
	
.LABEL $label$28
	$15 = [4]
	goto $label$5 
	
.LABEL $label$27
	$15 = [9]
	goto $label$5 
	
.LABEL $label$26
	$15 = [6]
	goto $label$5 
	
.LABEL $label$25
	$15 = [9]
	goto $label$5 
	
.LABEL $label$24
	$15 = [9]
	goto $label$5 
	
.LABEL $label$23
	$15 = [10]
	goto $label$5 
	
.LABEL $label$22
	$15 = [12]
	goto $label$5 
	
.LABEL $label$21
	$15 = [20]
	goto $label$5 
	
.LABEL $label$20
	$15 = [39]
	goto $label$5 
	
.LABEL $label$19
	$15 = [15]
	goto $label$5 
	
.LABEL $label$18
	$15 = [17]
	goto $label$5 
	
.LABEL $label$17
	$15 = [19]
	goto $label$5 
	
.LABEL $label$16
	$15 = [28]
	goto $label$5 
	
.LABEL $label$15
	$15 = [38]
	goto $label$5 
	
.LABEL $label$14
	$15 = [23]
	goto $label$5 
	
.LABEL $label$13
	$15 = [25]
	goto $label$5 
	
.LABEL $label$12
	$15 = [27]
	goto $label$5 
	
.LABEL $label$11
	$15 = [36]
	goto $label$5 
	
.LABEL $label$10
	$15 = [37]
	goto $label$5 
	
.LABEL $label$9
	$15 = [31]
	goto $label$5 
	
.LABEL $label$8
	$15 = [33]
	goto $label$5 
	
.LABEL $label$7
	$15 = [35]
	goto $label$5 
	
.LABEL $label$6
	$15 = [42]
	goto $label$5 
	$15
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [512])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [36]) = $4
	*($7 + [32]) = $4
	*($7 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($5 = CALL $737([36])) + [24]) = $0
	CALL $38(($7 + [32]), $5)
	*($5 + [28]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)-4417020450001911808
	$6 = *($5 + [28])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)-4417020450001911808
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $39(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $738($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
	return $5
}

void .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $6) / (int_32)[40]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ((int_32)($6 - $5) / (int_32)[40])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[107374183]) ){ goto $label$3 }
	$6 = [107374182]
	$2 = ((int_32)($2 - $5) / (int_32)[40])
	if ( ((uint_32)$2 > (uint_32)[53687090]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $737(((int_32)$6 * (int_32)[40]))
	goto $label$2 
	
.LABEL $label$5
	
.LOOP $label$7:
	CALL memset(($6 + [4]), [0], [36])
	*($6) = [0]
	$6 = (*($6) + [40])
	*(($6 = ($0 + [4]))) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $766($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$6 * (int_32)[40]))
	$5 = ($2 + ((int_32)$3 * (int_32)[40]))
	$6 = $5
	
.LOOP $label$8:
	CALL memset(($6 + [4]), [0], [36])
	*($6) = [0]
	$6 = ($6 + [40])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 + ((int_32)((int_32)$2 / (int_32)[-40]) * (int_32)[40]))
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $738($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC _ZN11walexchange12wal_exchange12uptbucketposEy (int_32 $0, int_64 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [32])
	*([0] + [4]) = $2
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	*($2 + [24]) = *($0)
	CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($2 + [24]), $1, [1])
	*($2 + [8]) = $1
	*($2 + [16]) = [60]
	*($2) = *($0)
	CALL _ZN11walexchange13order_manager18update_last_bucketEv($2)
	*([0] + [4]) = ($2 + [32])
}

void .FUNC $281 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$3 = ($5 - $4)
	$7 = ($3 + [1])
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = [2147483647]
	$2 = (*($0 + [8]) - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$4 }
	$6 = ($2 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $737($6)
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $766($0)
	
.LABEL $label$1
	*(($3 = ($7 + $3))) = *($1)
	$5 = ($5 - $4)
	$1 = ($3 - $5)
	$6 = ($7 + $6)
	$7 = ($3 + [1])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $4, $5)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $738($4)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $538 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [16])
	$10 = $8
	*([0] + [4]) = $8
	$9 = *($0 + [4])
	*($1) = *(*($9))
	$2 = *($0)
	CALL memcpy(($1 + [8]), *($9 + [4]), [37])
	*($1 + [48]) = *(*($9 + [8]))
	$7 = *($1 + [8])
	$5 = [43]
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($5)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$5 > (int_32)[7]), [496])
	CALL memcpy($6, $1, [8])
	$9 = ($6 + [8])
	$3 = ($6 + $5)
	$7 = *(($1 + [8]))
	
.LOOP $label$4:
	$8 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$4 = ((int_64)$7) != (int_64)0
	*($10 + [15]) = (($4) << [7]) | ($8 & [127]))
	CALL eosio_assert(((int_32)($3 - $9) > (int_32)[0]), [496])
	CALL memcpy($9, ($10 + [15]), [1])
	$9 = ($9 + [1])
	if ( $4 ){ goto $label$4 }
	$8 = [12]
	
.LOOP $label$5:
	$4 = $9
	CALL eosio_assert(((int_32)($3 - $4) > (int_32)[0]), [496])
	CALL memcpy($4, ($1 + $8), [1])
	$9 = ($4 + [1])
	$8 = ($8 + [1])
	if ( ((int_32)$8 != (int_32)[45]) ){ goto $label$5 }
	*($10 + [14]) = *(($1 + [48]))
	CALL eosio_assert(((int_32)($3 - $9) > (int_32)[0]), [496])
	CALL memcpy($9, ($10 + [14]), [1])
	$9 = ($4 + [2])
	CALL eosio_assert(((int_32)($3 - $9) > (int_32)[0]), [496])
	CALL memcpy($9, ($1 + [49]), [1])
	$7 = *($1)
	*($1 + [56]) = CALL db_store_i64(*($2 + [8]), (int_64)3607749778918490112, *(*($0 + [8])), $7, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL free($6)
	
.LABEL $label$6
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$7 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [16])
}

void .FUNC _ZN11walexchange12wal_exchange11binddigitalEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [144])
	*([0] + [4]) = $8
	*($8 + [72]) = $2
	if ( CALL has_auth(*(($0 + [248]))) ){ goto $label$1 }
	CALL require_auth(*(($0 + [208])))
	
.LABEL $label$1
	*($8 + [64]) = *($0)
	$5 = [1]
	CALL eosio_assert(((int_32)CALL $333(($8 + [64]), $3) ^ (int_32)[1]), [9776])
	CALL eosio_assert(CALL $333(($8 + [64]), $2), [9824])
	*($8 + [56]) = *($0)
	$7 = [0]
	$2 = CALL _ZN11walexchange24contract_account_manager14get_account_idEyh(($8 + [56]), $3, [0])
	*(($8 + [48])) = [0]
	*($8 + [32]) = (int_64)-1
	*($8 + [40]) = (int_64)0
	$3 = *($0)
	*($8 + [16]) = $3
	*($8 + [24]) = $3
	*($8 + [52]) = [0]
	$0 = CALL db_find_i64($3, $3, (int_64)-2067973376676056576, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	$7 = CALL $12(($8 + [16]), $0)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)($8 + [16])), [288])
	
.LABEL $label$2
	CALL eosio_assert((int_64)(*($7 + [8]) == 0), [9856])
	*($8 + [8]) = ($8 + [16])
	CALL $15(($8 + [80]), ($8 + [8]), ($8 + [72]))
	$0 = *($8 + [84])
	if ( ($0 == 0) ){ goto $label$3 }
	$5 = ((int_64)*($8 + [72]) != (int_64)*($0 + [8]))
	
.LABEL $label$3
	CALL eosio_assert($5, [9888])
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [1328])
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)($8 + [16])), [848])
	CALL eosio_assert(((int_64)*($8 + [16]) == (int_64)CALL $fimport$16()), [896])
	$0 = ($7 + [8])
	*($8 + [112]) = *($0)
	$5 = ($7 + [16])
	*($8 + [120]) = *($5)
	*($0) = *($8 + [72])
	$3 = *($7)
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [496])
	CALL memcpy(($8 + [80]), $7, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($8 + [80]) | [8]), $0, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($8 + [80]) + [16]), $5, [8])
	CALL eosio_assert([1], [496])
	CALL memcpy((($8 + [80]) + [24]), ($7 + [24]), [1])
	CALL db_update_i64(*($7 + [36]), (int_64)0, ($8 + [80]), [25])
	$4 = (($8 + [16]) + [16])
	if ( (uint_64)($3 <= *($4)) ){ goto $label$4 }
	*($4) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$4 = (($8 + [112]) + [8])
	*($8 + [136]) = *($0)
	if ( (CALL memcmp(($8 + [112]), ($8 + [136]), [8]) == 0) ){ goto $label$5 }
	$6 = ($7 + [40])
	$0 = *($6)
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$6 }
	$0 = CALL db_idx64_find_primary(*($8 + [16]), *(($8 + [24])), (int_64)-2067973376676056576, ($8 + [128]), $3)
	*($6) = $0
	
.LABEL $label$6
	CALL db_idx64_update($0, (int_64)0, ($8 + [136]))
	
.LABEL $label$5
	*($8 + [136]) = *($5)
	if ( (CALL memcmp($4, ($8 + [136]), [8]) == 0) ){ goto $label$7 }
	$0 = ($7 + [44])
	$7 = *($0)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$8 }
	$7 = CALL db_idx64_find_primary(*($8 + [16]), *(($8 + [24])), (int_64)-2067973376676056575, ($8 + [128]), $3)
	*($0) = $7
	
.LABEL $label$8
	CALL db_idx64_update($7, (int_64)0, ($8 + [136]))
	
.LABEL $label$7
	$5 = *($8 + [40])
	if ( ($5 == 0) ){ goto $label$9 }
	$4 = ($8 + [44])
	$7 = *($4)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = ($7 + [-24])
	$0 = *($7)
	*($7) = [0]
	if ( ($0 == 0) ){ goto $label$13 }
	CALL $738($0)
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$12 }
	$7 = *(($8 + [40]))
	goto $label$10 
	
.LABEL $label$11
	$7 = $5
	
.LABEL $label$10
	*($4) = $5
	CALL $738($7)
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [144])
}