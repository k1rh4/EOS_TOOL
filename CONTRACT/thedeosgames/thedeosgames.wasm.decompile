(data (i32.const 4) "\90\83\00\00")
(data (i32.const 16) "\00\00\00\00\00\00\00\00")
(data (i32.const 32) "invalid symbol name\00")
(data (i32.const 64) "global eos settings must be set up\00")
(data (i32.const 112) "bet amount is out of the range\00")
(data (i32.const 144) "game is on pause\00")
(data (i32.const 176) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 240) "token with the symbol is not supported\00")
(data (i32.const 288) "cannot pass end iterator to modify\00")
(data (i32.const 336) "object passed to modify is not in multi_index\00")
(data (i32.const 384) "cannot modify objects in table of another contract\00")
(data (i32.const 448) "updater cannot change primary key when modifying an object\00")
(data (i32.const 512) "cannot create objects in table of another contract\00")
(data (i32.const 576) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 640) "write\00")
(data (i32.const 656) "attempt to add asset with different symbol\00")
(data (i32.const 704) "addition underflow\00")
(data (i32.const 736) "addition overflow\00")
(data (i32.const 768) "error reading iterator\00")
(data (i32.const 800) "read\00")
(data (i32.const 816) " no balance object found\00")
(data (i32.const 848) " overdrawn balance\00")
(data (i32.const 880) " overdrawn balance - staked\00")
(data (i32.const 912) "attempt to subtract asset with different symbol\00")
(data (i32.const 960) "subtraction underflow\00")
(data (i32.const 992) "subtraction overflow\00")
(data (i32.const 1024) "object passed to erase is not in multi_index\00")
(data (i32.const 1072) "cannot erase objects in table of another contract\00")
(data (i32.const 1136) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1200) "global eos settings for slots must be set up\00")
(data (i32.const 1248) "not EOS token\00")
(data (i32.const 1264) "player cannot be referrer for self\00")
(data (i32.const 1312) "the contract cannot be referrer\00")
(data (i32.const 1344) "Dividents commission for bet ID: \00")
(data (i32.const 1392) "Dev commission for bet ID: \00")
(data (i32.const 1424) "eosio.token\00")
(data (i32.const 1440) "active\00")
(data (i32.const 1456) "deosgamesdiv\00")
(data (i32.const 1472) "deosgamesdev\00")
(data (i32.const 1488) "read_transaction failed\00")
(data (i32.const 1520) " global settings must be set up\00")
(data (i32.const 1552) "seed should be within (0, 1000) range\00")
(data (i32.const 1600) "could not find the game record\00")
(data (i32.const 1632) "game records aleady processed\00")
(data (i32.const 1664) "LOST\00")
(data (i32.const 1680) "percentage_to_win: % \00")
(data (i32.const 1712) "I won playing SLOTS at app.deosgames.com, bet ID: \00")
(data (i32.const 1776) "thedeosgames\00")
(data (i32.const 1792) "transfer\00")
(data (i32.const 1808) "memo\00")
(data (i32.const 1824) "WON\00")
(data (i32.const 1840) " loss % \00")
(data (i32.const 1856) "SLOTS CLOSE, bet ID: \00")
(data (i32.const 1888) "slotsclose\00")
(data (i32.const 1904) "3 SLOTS\00")
(data (i32.const 1920) "memo_close\00")
(data (i32.const 1936) "unable to find key\00")
(data (i32.const 1968) " | \00")
(data (i32.const 1984) "Seven\00")
(data (i32.const 2000) "Cherry\00")
(data (i32.const 2016) "Plum\00")
(data (i32.const 2032) "Watermelon\00")
(data (i32.const 2048) "Orange\00")
(data (i32.const 2064) "Grapes\00")
(data (i32.const 2080) "Empty\00")
(data (i32.const 2096) "[Unknown Slot]\00")
(data (i32.const 2112) "I won playing SLOTS EOS at app.deosgames.com, bet ID: \00")
(data (i32.const 2176) "ref bonus for SLOTS EOS bet ID: \00")
(data (i32.const 2224) " Join app.deosgames.com\00")
(data (i32.const 2256) "eos_ref_commission : % \00")
(data (i32.const 2288) "I got rakeback when playing at SLOTS EOS DEOS games, \00")
(data (i32.const 2352) " DEOS paid\00")
(data (i32.const 2368) "memo_deos + to_string(id)\00")
(data (i32.const 2400) "SLOTS EOS CLOSE, bet ID: \00")
(data (i32.const 2432) "slotseclose\00")
(data (i32.const 2448) "cannot pass end iterator to erase\00")
(data (i32.const 2496) "cannot increment end iterator\00")
(data (i32.const 2528) "global settings for slots must be set up\00")
(data (i32.const 2576) "custom settings must be set up\00")
(data (i32.const 2608) "I won playing SLOTS at app.deosgames.com,  bet ID: \00")
(data (i32.const 2672) "ref bonus for SLOTS  bet ID:  \00")
(data (i32.const 2704) "accounts\00")
(data (i32.const 2720) "SLOTS custom  CLOSE, bet ID: \00")
(data (i32.const 2752) "horustokenio\00")
(data (i32.const 2768) "eosblackteam\00")
(data (i32.const 2784) "everipediaiq\00")
(data (i32.const 2800) "octtothemoon\00")
(data (i32.const 2816) "eosiomeetone\00")
(data (i32.const 2832) "boidcomtoken\00")
(data (i32.const 2848) "eosdactokens\00")
(data (i32.const 2864) "therealkarma\00")
(data (i32.const 2880) "global settings must be set up\00")
(data (i32.const 2912) "roll_number should be within [0, 99] range\00")
(data (i32.const 2960) "cannot transfer to self\00")
(data (i32.const 2992) "I won playing dice at app.deosgames.com, bet ID: \00")
(data (i32.const 3056) "ref bonus for bet ID: \00")
(data (i32.const 3088) "I got rakeback when playing at DEOS games,   \00")
(data (i32.const 3136) "UNDER\00")
(data (i32.const 3152) "OVER\00")
(data (i32.const 3168) "invalid quantity\00")
(data (i32.const 3200) "must transfer positive quantity\00")
(data (i32.const 3232) "symbol precision mismatch\00")
(data (i32.const 3264) "settings are not initialised\00")
(data (i32.const 3296) "staking is locked\00")
(data (i32.const 3328) "no DEOS balance found\00")
(data (i32.const 3360) "overdrawn balace when staking\00")
(data (i32.const 3392) "overdrawn balace during staking\00")
(data (i32.const 3424) "no staked tokens found \00")
(data (i32.const 3456) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 3520) "overdrawn staked amount \00")
(data (i32.const 3552) "staking for the user already updated\00")
(data (i32.const 3600) "must stake positive quantity\00")
(data (i32.const 3632) "must claim positive quantity\00")
(data (i32.const 3664) "deosdivpayer\00")
(data (i32.const 3680) "DEOS games dividends payment\00")
(data (i32.const 3712) "no more records to proceeed with\00")
(data (i32.const 3760) "deosvidpoker\00")
(data (i32.const 3776) "startgame\00")
(data (i32.const 3792) "hold\00")
(data (i32.const 3808) "resolvegame\00")
(data (i32.const 3824) "resolve2game\00")
(data (i32.const 3840) "no records found\00")
(data (i32.const 3872) "get\00")
(data (i32.const 3888) "global eos settings for poker must be set up\00")
(data (i32.const 3936) "Dividents commission for Poker game, user: \00")
(data (i32.const 3984) "Dev commission for Poker game, user: \00")
(data (i32.const 4032) "I got rakeback when playing at POKER EOS DEOS games\00")
(data (i32.const 4096) "ref bonus for POKER EOS. Join app.deosgames.com\00")
(data (i32.const 4144) "amount should be within [10, 5000] range\00")
(data (i32.const 4192) "percentage should be within [0, 98] range\00")
(data (i32.const 4240) "percentage should be within [1, 99] range\00")
(data (i32.const 4288) " dicing user % anount: % percentage: % \00")
(data (i32.const 4336) " dice_game_num: % \00")
(data (i32.const 4368) "EOS amount is out of the range\00")
(data (i32.const 4400) "percentage should be within [4, 95] range\00")
(data (i32.const 4448) "game records has not been processed\00")
(data (i32.const 4496) "payout rate: %\00")
(data (i32.const 4512) " loss % vs % withdrawn % \00")
(data (i32.const 4544) "memo + std::string(\"_EOS_DICE\")\00")
(data (i32.const 4576) "I got rakeback when playing at DEOS games,  \00")
(data (i32.const 4624) "beteosclose\00")
(data (i32.const 4640) "string(\"Close EOS DICE \") + to_string(id)\00")
(data (i32.const 4688) "del: % \00")
(data (i32.const 4704) "invalid symbol name \00")
(data (i32.const 4736) "invalid supply\00")
(data (i32.const 4752) "max-supply must be positive\00")
(data (i32.const 4784) "token with symbol already exists\00")
(data (i32.const 4832) "memo has more than 256 bytes \00")
(data (i32.const 4864) "token with symbol does not exist, create token before issue\00")
(data (i32.const 4928) "must issue positive quantity\00")
(data (i32.const 4960) "quantity exceeds available supply\00")
(data (i32.const 5008) "memo has more than 256 bytes\00")
(data (i32.const 5040) "token with symbol does not exist, create token before burn\00")
(data (i32.const 5104) "must burn positive quantity\00")
(data (i32.const 5136) "token with symbol does not exist, create token before signup\00")
(data (i32.const 5200) "you have already signed up\00")
(data (i32.const 5232) "quantity exceeds signup allowance\00")
(data (i32.const 5280) ":\00")
(data (i32.const 5296) "dice\00")
(data (i32.const 5312) "%\00")
(data (i32.const 5328) "rollover\00")
(data (i32.const 5344) " dice num: % \00")
(data (i32.const 5360) "slots\00")
(data (i32.const 5376) "poker\00")
(data (i32.const 5392) "the token is not supported\00")
(data (i32.const 5424) "to account does not exist\00")
(data (i32.const 5456) "percentage should be within [2, 98] range\00")
(data (i32.const 5504) "percentage should be within [1, 97] range\00")
(data (i32.const 5552) "staking is not initialized\00")
(data (i32.const 5584) "not enough DEOS tokens for staking\00")
(data (i32.const 5632) "not enough staked DEOS tokens for unstaking\00")
(data (i32.const 5680) "game record aleady processed\00")
(data (i32.const 5712) "game record has not been processed\00")
(data (i32.const 5760) "eos_commission % \00")
(data (i32.const 5792) "onerror\00")
(data (i32.const 5808) "eosio\00")
(data (i32.const 5824) "onerror actions are only valid from the eosio system account\00")
(data (i32.const 14288) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 14384) "stoul\00")
(data (i32.const 14400) ": no conversion\00")
(data (i32.const 14416) ": out of range\00")
(data (i32.const 14432) "%lu\00")
(data (i32.const 14448) "%lld\00")
(data (i32.const 14464) "%llu\00")
(data (i32.const 14480) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 14944) "0123456789ABCDEF")
(data (i32.const 14960) "-+   0X0x\00")
(data (i32.const 14976) "(null)\00")
(data (i32.const 14992) "-0X+0X 0X-0x+0x 0x\00")
(data (i32.const 15024) "inf\00")
(data (i32.const 15040) "INF\00")
(data (i32.const 15056) "nan\00")
(data (i32.const 15072) "NAN\00")
(data (i32.const 15088) ".\00")
(data (i32.const 15104) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 15200) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(data (i32.const 17008) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 17280) "\00\01\02\04\07\03\06\05\00")
(import "env" "__addtf3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "__eqtf2" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "__extenddftf2" (func $fimport$2 (param i32 f64)))
(import "env" "__fixtfsi" (func $fimport$3 (param i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$4 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$5 (param i32 i32)))
(import "env" "__floatunsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$8 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$9 (param i32 i64 i64 i64 i64)))
(import "env" "__unordtf2" (func $fimport$10 (param i64 i64 i64 i64) (result i32)))
(import "env" "abort" (func $fimport$11))
(import "env" "action_data_size" (func $fimport$12 (result i32)))
(import "env" "cancel_deferred" (func $fimport$13 (param i32) (result i32)))
(import "env" "current_receiver" (func $fimport$14 (result i64)))
(import "env" "current_time" (func $fimport$15 (result i64)))
(import "env" "db_find_i64" (func $fimport$16 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$17 (param i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$18 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$19 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$20 (param i32)))
(import "env" "db_store_i64" (func $fimport$21 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$22 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$23 (param i32 i32)))
(import "env" "is_account" (func $fimport$24 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$25 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$26 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$27 (param i32 i32 i32) (result i32)))
(import "env" "printdf" (func $fimport$28 (param f64)))
(import "env" "printi" (func $fimport$29 (param i64)))
(import "env" "printn" (func $fimport$30 (param i64)))
(import "env" "prints" (func $fimport$31 (param i32)))
(import "env" "prints_l" (func $fimport$32 (param i32 i32)))
(import "env" "printsf" (func $fimport$33 (param f32)))
(import "env" "printui" (func $fimport$34 (param i64)))
(import "env" "read_action_data" (func $fimport$35 (param i32 i32) (result i32)))
(import "env" "read_transaction" (func $fimport$36 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$37 (param i64)))
(import "env" "require_auth2" (func $fimport$38 (param i64 i64)))
(import "env" "require_recipient" (func $fimport$39 (param i64)))
(import "env" "send_deferred" (func $fimport$40 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$41 (param i32 i32)))
(import "env" "sha256" (func $fimport$42 (param i32 i32 i32)))
(import "env" "tapos_block_num" (func $fimport$43 (result i32)))
(import "env" "tapos_block_prefix" (func $fimport$44 (result i32)))
(import "env" "transaction_size" (func $fimport$45 (result i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN12thedeosgames9slotsdeosEyN5eosio5assetEy" (func $5))
(export "_ZN12thedeosgames11sub_balanceEyN5eosio5assetE" (func $9))
(export "_ZN12thedeosgames11add_balanceEyN5eosio5assetEy" (func $10))
(export "_ZN12thedeosgames9getstakedEy" (func $17))
(export "_ZN12thedeosgames8slotseosEyN5eosio5assetEy" (func $31))
(export "_ZN12thedeosgames8gettransEv" (func $32))
(export "_ZN12thedeosgames6paydivEmyN5eosio5assetEmm" (func $35))
(export "_ZN12thedeosgames6slotscEyy" (func $48))
(export "_ZN12thedeosgames15slots_to_stringENS_4SlotES0_S0_" (func $50))
(export "_ZN12thedeosgames14slot_to_stringENS_4SlotE" (func $68))
(export "_ZN12thedeosgames10slots_spinEy" (func $70))
(export "_ZN12thedeosgames9slots_winEmmm" (func $71))
(export "_ZN12thedeosgames9slotseoscEyy" (func $72))
(export "_ZN12thedeosgames13add_to_totalsEyN5eosio5assetES1_" (func $74))
(export "_ZN12thedeosgames13slots_eos_winEmmm" (func $88))
(export "_ZN12thedeosgames10slotscloseEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_S8_S1_S1_S1_y" (func $89))
(export "_ZN12thedeosgames11slotsecloseEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_S8_S1_S1_S1_y11checksum256" (func $90))
(export "_ZN12thedeosgames10slotscleanEy" (func $91))
(export "_ZN12thedeosgames9cleanbyidEyh" (func $94))
(export "_ZN12thedeosgames12setslotsconfEymmmymmmm" (func $111))
(export "_ZN12thedeosgames7slotscmEyN5eosio5assetEy" (func $112))
(export "_ZN12thedeosgames7tkncodeEN5eosio5assetE" (func $113))
(export "_ZN12thedeosgames8slotscmcEyy" (func $116))
(export "_ZN12thedeosgames10tknaccountEN5eosio5assetE" (func $118))
(export "_ZN12thedeosgames10dicerevealEym" (func $121))
(export "_ZN12thedeosgames6nstakeEyN5eosio5assetE" (func $131))
(export "_ZN12thedeosgames8nunstakeEyN5eosio5assetE" (func $140))
(export "_ZN12thedeosgames7initstkEm" (func $141))
(export "_ZN12thedeosgames9updatestkEy" (func $143))
(export "_ZN12thedeosgames11nddividendsEyN5eosio5assetE" (func $145))
(export "_ZN12thedeosgames6nclaimEy" (func $149))
(export "_ZN12thedeosgames11nupdatestkwEm" (func $151))
(export "_ZN12thedeosgames12nupdateunstkEv" (func $152))
(export "_ZN12thedeosgames10pokerstartEyN5eosio5assetEy" (func $154))
(export "_ZN12thedeosgames9pokerholdEyNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $155))
(export "_ZN12thedeosgames11resolvegameEy11checksum256" (func $157))
(export "_ZN12thedeosgames12resolve2gameEy11checksum256" (func $158))
(export "_ZN12thedeosgames8pokerlogEyyN5eosio5assetES1_NSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_S8_y" (func $159))
(export "_ZN12thedeosgames12resolve3gameEy" (func $160))
(export "_ZN12thedeosgames9pokerdivsEyN5eosio5assetEyy" (func $169))
(export "_ZN12thedeosgames8dicedeosEyN5eosio5assetEmm" (func $170))
(export "_ZN12thedeosgames4randEmy" (func $172))
(export "_ZN12thedeosgames7diceeosEyN5eosio5assetEmym" (func $176))
(export "_ZN12thedeosgames9dicecloseEyy" (func $179))
(export "_ZN12thedeosgames5dicepEy" (func $180))
(export "_ZN12thedeosgames12dicecloseeosEyy" (func $187))
(export "_ZN12thedeosgames11beteoscloseEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEmS1_mS8_S1_S1_S1_y11checksum256" (func $189))
(export "_ZN12thedeosgames8betcloseEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEmS1_mS8_S1_S1_S1_" (func $190))
(export "_ZN12thedeosgames7cleanupEy" (func $191))
(export "_ZN12thedeosgames10cleanupeosEy" (func $192))
(export "_ZN12thedeosgames7setrateEm" (func $193))
(export "_ZN12thedeosgames5pauseEm" (func $194))
(export "_ZN12thedeosgames10seteosconfEmmmymmmm" (func $195))
(export "_ZN12thedeosgames6createEyN5eosio5assetE" (func $196))
(export "_ZN12thedeosgames5issueEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $198))
(export "_ZN12thedeosgames4burnEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $199))
(export "_ZN12thedeosgames5claimEyN5eosio5assetE" (func $200))
(export "_ZN12thedeosgames8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $201))
(export "_ZN12thedeosgames5dicecEyN5eosio5assetEmym" (func $202))
(export "_ZN12thedeosgames5stakeEyN5eosio5assetE" (func $204))
(export "_ZN12thedeosgames7unstakeEyN5eosio5assetE" (func $208))
(export "_ZN12thedeosgames12lockstakeingEm" (func $209))
(export "_ZN12thedeosgames7randextEv" (func $210))
(export "_ZN12thedeosgames10diceclosecEyy" (func $211))
(export "_ZN12thedeosgames6dicepcEy" (func $212))
(export "_ZN12thedeosgames8cleanupcEy" (func $214))
(export "_ZN12thedeosgames7setconfEymmmymmmm" (func $215))
(export "_ZN12thedeosgames5helloEyNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $216))
(export "apply" (func $217))
(export "malloc" (func $271))
(export "free" (func $274))
(export "_ZNSt3__15stoulERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji" (func $285))
(export "_ZNSt3__19to_stringEm" (func $289))
(export "_ZNSt3__19to_stringEx" (func $292))
(export "_ZNSt3__19to_stringEy" (func $293))
(export "__errno_location" (func $297))
(export "floorf" (func $298))
(export "snprintf" (func $299))
(export "vsnprintf" (func $300))
(export "vfprintf" (func $302))
(export "__lockfile" (func $304))
(export "__unlockfile" (func $305))
(export "__fwritex" (func $306))
(export "strerror" (func $308))
(export "strnlen" (func $309))
(export "wctomb" (func $310))
(export "__signbitl" (func $311))
(export "__fpclassifyl" (func $312))
(export "frexpl" (func $313))
(export "wcrtomb" (func $314))
(export "memchr" (func $315))
(export "__lctrans" (func $316))
(export "__lctrans_impl" (func $317))
(export "__mo_lookup" (func $318))
(export "strcmp" (func $319))
(export "__towrite" (func $320))
(export "strtoul" (func $321))
(export "__shlim" (func $322))
(export "__intscan" (func $323))
(export "__shgetc" (func $324))
(export "__uflow" (func $325))
(export "__toread" (func $326))
(export "memcmp" (func $327))
(export "strlen" (func $328))
(table $0 49 49 anyfunc)
(elem (i32.const 0) $329 $201 $215 $179 $194 $200 $89 $121 $140 $190 $111 $170 $158 $214 $90 $198 $149 $72 $204 $160 $157 $192 $196 $151 $152 $189 $199 $48 $91 $180 $212 $145 $131 $208 $143 $195 $193 $211 $187 $155 $159 $94 $191 $116 $5 $216 $141 $209 $301)



int_32 .FUNC $220 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [800])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC $284 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

int_32 .FUNC _ZNSt3__15stoulERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	$3 = CALL strlen([14384])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$6 }
	*($6) = ($3 << [1])
	$5 = ($6 | [1])
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = (($3 + [16]) & [-16])
	$5 = CALL $275($4)
	*($6) = ($4 | [1])
	*($6 + [8]) = $5
	*($6 + [4]) = $3
	
.LABEL $label$5
	CALL memcpy($5, [14384], $3)
	
.LABEL $label$4
	*(($5 + $3)) = [0]
	*($6 + [12]) = [0]
	$3 = *($0 + [8])
	$5 = *($0)
	$4 = *(CALL __errno_location())
	*(CALL __errno_location()) = [0]
	$3 = ( $3 ? ($0 + [1]) : ($5 & [1]) )
	$2 = CALL strtoul($3, ($6 + [12]), $2)
	$0 = CALL __errno_location()
	$5 = *($0)
	*($0) = $4
	if ( ((int_32)$5 == (int_32)[34]) ){ goto $label$2 }
	$0 = *($6 + [12])
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($0 - $3)
	
.LABEL $label$7
	if ( ((*($6) & [1]) == 0) ){ goto $label$8 }
	CALL $276(*($6 + [8]))
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [16])
	return $2
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $286($6)
	
.LABEL $label$1
	CALL $287($6)
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC __lctrans_impl (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	$1 = CALL __mo_lookup(*($1), *($1 + [4]), $0)
	return ( $1 ? $0 : $1 )
	
.LABEL $label$1
	return ( [0] ? $0 : [0] )
}

int_32 .FUNC $174 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [768])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $275([72])) + [8]) = [0]
	*($6) = (int_64)0
	*($6 + [16]) = (int_64)0
	*($6 + [24]) = [0]
	*($6 + [28]) = [0]
	*($6 + [32]) = (int_64)0
	*($6 + [40]) = [0]
	*($6 + [44]) = [0]
	*($6 + [48]) = [0]
	*($6 + [52]) = [0]
	*($6 + [56]) = $0
	CALL $29(($8 + [32]), $6)
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [60])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $30(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $276($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN12thedeosgames7diceeosEyN5eosio5assetEmym (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [192])
	*([0] + [4]) = $14
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)1397703940), [1248])
	CALL eosio_assert(((int_64)$1 != (int_64)$4), [1264])
	CALL eosio_assert(((int_64)*($0 + [176]) != (int_64)$4), [1312])
	$12 = ($0 + [2088])
	$8 = [0]
	$10 = [0]
	$13 = CALL db_lowerbound_i64(*($0 + [2088]), *(($0 + [2096])), (int_64)6138558357033713664, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$1 }
	$10 = CALL $122($12, $13)
	
.LABEL $label$1
	$13 = ((int_32)$10 != (int_32)[0])
	CALL eosio_assert($13, [64])
	$11 = *($2)
	if ( ((int_64)*($10 + [48]) > (int_64)$11) ){ goto $label$2 }
	$8 = ((int_64)$11 <= (int_64)*($10 + [52]))
	
.LABEL $label$2
	CALL eosio_assert($8, [4368])
	CALL eosio_assert((($3 + [-4]) <= [92]), [4400])
	CALL eosio_assert((*($10 + [16]) == 0), [144])
	CALL eosio_assert($13, [288])
	CALL eosio_assert(((int_32)*($10 + [56]) == (int_32)$12), [336])
	CALL eosio_assert(((int_64)*(($0 + [2088])) == (int_64)CALL $fimport$14()), [384])
	*($10 + [8]) = ((int_64)*($10 + [8]) + (int_64)1)
	$11 = *($10)
	CALL eosio_assert([1], [448])
	*($14 + [40]) = (($14 + [80]) + [52])
	*($14 + [36]) = ($14 + [80])
	*($14 + [32]) = ($14 + [80])
	CALL $177(($14 + [32]), $10)
	CALL db_update_i64(*($10 + [60]), (int_64)0, ($14 + [80]), [52])
	$12 = ($0 + [2104])
	if ( (uint_64)($11 <= *($12)) ){ goto $label$3 }
	*($12) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	CALL require_auth($1)
	CALL _ZN12thedeosgames8gettransEv(($14 + [32]), $12)
	$7 = *(($0 + [176]))
	CALL eosio_assert(((int_64)*($0 + [1808]) == (int_64)CALL $fimport$14()), [512])
	*(($8 = CALL $275([112])) + [16]) = (int_64)1398362884
	*($8 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$6 = ($0 + [1808])
	$9 = ($8 + [8])
	$11 = (int_64)5462355
	$12 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$13 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$13 = [0]
	
.LABEL $label$4
	CALL eosio_assert($13, [32])
	*($8 + [88]) = $6
	*($8) = *(($10 + [8]))
	*(($9 + [12])) = *(($2 + [12]))
	*(($9 + [8])) = *(($2 + [8]))
	*(($9 + [4])) = *(($2 + [4]))
	*($9) = *($2)
	*($8 + [24]) = $3
	*($8 + [28]) = ([1] - $5)
	*($8 + [32]) = $1
	*(($8 + [72])) = *(($14 + [56]))
	*(($8 + [64])) = *(($14 + [48]))
	*(($8 + [56])) = *($14 + [40])
	*($8 + [48]) = *($14 + [32])
	$11 = CALL current_time()
	*($8 + [40]) = $4
	*($8 + [80]) = ((int_64)((uint_64)$11 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($14 + [184]) = (($14 + [80]) + [88])
	*($14 + [180]) = ($14 + [80])
	*($14 + [176]) = ($14 + [80])
	CALL $178(($14 + [176]), $8)
	$11 = *($8)
	$13 = CALL db_store_i64(*(($0 + [1816])), (int_64)5445034581344550912, $7, $11, ($14 + [80]), [88])
	*($8 + [92]) = $13
	$12 = ($0 + [1824])
	if ( (uint_64)($11 <= *($12)) ){ goto $label$9 }
	*($12) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($14 + [176]) = $8
	$11 = *($8)
	*($14 + [80]) = $11
	*($14 + [76]) = $13
	$9 = ($0 + [1836])
	$12 = *($9)
	if ( ((uint_32)$12 >= (uint_32)*(($0 + [1840]))) ){ goto $label$11 }
	*($12 + [8]) = $11
	*($12 + [16]) = $13
	*($14 + [176]) = [0]
	*($12) = $8
	*($9) = ($12 + [24])
	goto $label$10 
	
.LABEL $label$11
	CALL $106(($0 + [1832]), ($14 + [176]), ($14 + [80]), ($14 + [76]))
	
.LABEL $label$10
	$12 = *($14 + [176])
	*($14 + [176]) = [0]
	if ( ($12 == 0) ){ goto $label$12 }
	CALL $276($12)
	
.LABEL $label$12
	$12 = *(($10 + [8]))
	*(($8 = (($14 + [16]) + [8]))) = *(($2 + [8]))
	*($14 + [16]) = *($2)
	*(($14 + [8])) = *($8)
	*($14 + [4]) = *($14 + [20])
	*($14) = *($14 + [16])
	CALL _ZN12thedeosgames6paydivEmyN5eosio5assetEmm($0, $12, $1, $14, ((int_64)$4 != (int_64)0), [1])
	*([0] + [4]) = ($14 + [192])
}

int_32 .FUNC $177 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [20]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [44]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [52]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC _ZN12thedeosgames8dicedeosEyN5eosio5assetEmm (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [192])
	*([0] + [4]) = $16
	$5 = *($2)
	$6 = ((int_64)$5 / (int_64)*($0 + [172]))
	$15 = [0]
	$7 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$13 = $7)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$12 = [1]
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$12 = [0]
	
.LABEL $label$1
	CALL eosio_assert($12, [32])
	$15 = [0]
	$12 = *(($0 + [172]))
	if ( ((int_64)(CASTING uint_64)(uint_32 ((int_32)$12 * (int_32)[10])) > (int_64)$5) ){ goto $label$6 }
	$15 = ((int_64)$5 <= (int_64)(CASTING uint_64)(uint_32 ((int_32)$12 * (int_32)[5000])))
	
.LABEL $label$6
	CALL eosio_assert($15, [4144])
	if ( ($4 == 0) ){ goto $label$8 }
	CALL eosio_assert(($3 <= [99]), [4192])
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert((($3 + [-1]) <= [99]), [4240])
	
.LABEL $label$7
	CALL require_auth($1)
	$11 = ($0 + [2048])
	$14 = [0]
	$15 = CALL db_lowerbound_i64(*($0 + [2048]), *(($0 + [2056])), (int_64)-4417020450001911808, (int_64)0)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$9 }
	$14 = CALL $171($11, $15)
	
.LABEL $label$9
	$9 = ((int_32)$14 != (int_32)[0])
	CALL eosio_assert($9, [2880])
	CALL eosio_assert((*($14 + [8]) == 0), [144])
	$8 = ($14 + [8])
	$15 = [4288]
	$12 = *([4288])
	if ( ($12 == 0) ){ goto $label$10 }
	
.LOOP $label$12:
	if ( ((int_32)$12 == (int_32)[37]) ){ goto $label$11 }
	CALL prints_l($15, [1])
	$15 = ($15 + [1])
	$12 = *($15)
	if ( $12 ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL printn($1)
	$15 = ($15 + [1])
	$12 = *($15)
	if ( ($12 == 0) ){ goto $label$10 }
	
.LOOP $label$14:
	if ( ((int_32)$12 == (int_32)[37]) ){ goto $label$13 }
	CALL prints_l($15, [1])
	$15 = ($15 + [1])
	$12 = *($15)
	if ( $12 ){ goto $label$14 }
	goto $label$10 
	
.LABEL $label$13
	CALL printi($5)
	$15 = ($15 + [1])
	$12 = *($15)
	if ( ($12 == 0) ){ goto $label$10 }
	
.LOOP $label$16:
	if ( ((int_32)$12 == (int_32)[37]) ){ goto $label$15 }
	CALL prints_l($15, [1])
	$15 = ($15 + [1])
	$12 = *($15)
	if ( $12 ){ goto $label$16 }
	goto $label$10 
	
.LABEL $label$15
	CALL printui((CASTING uint_64)(uint_32 $3))
	CALL prints(($15 + [1]))
	
.LABEL $label$10
	$15 = [0]
	*(($16 + [96])) = [0]
	*($16 + [80]) = (int_64)-1
	*($16 + [88]) = (int_64)0
	$13 = *($0 + [176])
	*($16 + [64]) = $13
	*($16 + [72]) = $7
	$12 = CALL db_find_i64($13, $7, (int_64)-4157508551318700032, $7)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$17 }
	CALL eosio_assert(((int_32)*(CALL $7(($16 + [64]), $12) + [40]) == (int_32)($16 + [64])), [176])
	$15 = [1]
	
.LABEL $label$17
	CALL eosio_assert($15, [240])
	CALL eosio_assert($9, [288])
	CALL eosio_assert(((int_32)*($14 + [28]) == (int_32)$11), [336])
	CALL eosio_assert(((int_64)*(($0 + [2048])) == (int_64)CALL $fimport$14()), [384])
	*($14 + [16]) = ((int_64)*($14 + [16]) + (int_64)1)
	$13 = *($14)
	CALL eosio_assert([1], [448])
	CALL eosio_assert([1], [640])
	CALL memcpy(($16 + [112]), $14, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($16 + [112]) | [8]), $8, [4])
	CALL eosio_assert([1], [640])
	$9 = ($14 + [16])
	CALL memcpy((($16 + [112]) | [12]), $9, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy(($16 + [132]), ($14 + [24]), [4])
	CALL db_update_i64(*($14 + [32]), (int_64)0, ($16 + [112]), [24])
	$15 = ($0 + [2064])
	if ( (uint_64)($13 <= *($15)) ){ goto $label$18 }
	*($15) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	
.LABEL $label$18
	$13 = *($9)
	$15 = [4336]
	$12 = *([4336])
	if ( ($12 == 0) ){ goto $label$19 }
	
.LOOP $label$21:
	if ( ((int_32)$12 == (int_32)[37]) ){ goto $label$20 }
	CALL prints_l($15, [1])
	$15 = ($15 + [1])
	$12 = *($15)
	if ( $12 ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	CALL printui($13)
	CALL prints(($15 + [1]))
	
.LABEL $label$19
	$8 = CALL _ZN12thedeosgames4randEmy($0, (CASTING uint_32)(uint_64 ((int_64)$6 + (int_64)(CASTING uint_64)(uint_32 $3))), (int_64)1)
	$12 = ($2 + [8])
	*(($15 = (($16 + [48]) + [8]))) = *($12)
	$13 = *($2)
	*((($16 + [16]) + [12])) = *((($16 + [48]) + [12]))
	*((($16 + [16]) + [8])) = *($15)
	*($16 + [48]) = $13
	*($16 + [20]) = *($16 + [52])
	*($16 + [16]) = *($16 + [48])
	CALL _ZN12thedeosgames11sub_balanceEyN5eosio5assetE($0, $1, ($16 + [16]))
	*(($15 = (($16 + [32]) + [12]))) = *(($2 + [12]))
	*(($14 = (($16 + [32]) + [8]))) = *($12)
	*($16 + [36]) = *(($2 + [4]))
	*($16 + [32]) = *($2)
	$12 = ($0 + [176])
	$13 = *($12)
	*(($16 + [12])) = *($15)
	*(($16 + [8])) = *($14)
	*($16 + [4]) = *($16 + [36])
	*($16) = *($16 + [32])
	CALL _ZN12thedeosgames11add_balanceEyN5eosio5assetEy($0, $13, $16, $13)
	$7 = *($12)
	CALL eosio_assert(((int_64)*($0 + [1728]) == (int_64)CALL $fimport$14()), [512])
	*(($12 = CALL $275([88])) + [16]) = (int_64)1398362884
	*($12 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$10 = ($0 + [1728])
	$11 = ($12 + [8])
	$13 = (int_64)5462355
	$15 = [0]
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	
.LOOP $label$26:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$26 }
	
.LABEL $label$25
	$14 = [1]
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	$14 = [0]
	
.LABEL $label$22
	CALL eosio_assert($14, [32])
	*($12 + [72]) = $10
	*($12) = *($9)
	*(($11 + [12])) = *(($2 + [12]))
	*(($11 + [8])) = *(($2 + [8]))
	*(($11 + [4])) = *(($2 + [4]))
	*($11) = *($2)
	*($12 + [24]) = $3
	*($12 + [28]) = $8
	*($12 + [32]) = ([1] - $4)
	*($12 + [40]) = $1
	*($12 + [56]) = [0]
	$13 = CALL current_time()
	*($12 + [64]) = $1
	*($12 + [48]) = ((int_64)((uint_64)$13 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($16 + [184]) = (($16 + [112]) + [64])
	*($16 + [180]) = ($16 + [112])
	*($16 + [176]) = ($16 + [112])
	CALL $173(($16 + [176]), $12)
	$13 = *($12)
	$14 = CALL db_store_i64(*(($0 + [1736])), (int_64)5445034581344387072, $7, $13, ($16 + [112]), [64])
	*($12 + [76]) = $14
	$15 = ($0 + [1744])
	if ( (uint_64)($13 <= *($15)) ){ goto $label$27 }
	*($15) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	
.LABEL $label$27
	*($16 + [176]) = $12
	$13 = *($12)
	*($16 + [112]) = $13
	*($16 + [108]) = $14
	$2 = ($0 + [1756])
	$15 = *($2)
	if ( ((uint_32)$15 >= (uint_32)*(($0 + [1760]))) ){ goto $label$29 }
	*($15 + [8]) = $13
	*($15 + [16]) = $14
	*($16 + [176]) = [0]
	*($15) = $12
	*($2) = ($15 + [24])
	goto $label$28 
	
.LABEL $label$29
	CALL $110(($0 + [1752]), ($16 + [176]), ($16 + [112]), ($16 + [108]))
	
.LABEL $label$28
	$15 = *($16 + [176])
	*($16 + [176]) = [0]
	if ( ($15 == 0) ){ goto $label$30 }
	CALL $276($15)
	
.LABEL $label$30
	$0 = *($16 + [88])
	if ( ($0 == 0) ){ goto $label$31 }
	$14 = ($16 + [92])
	$15 = *($14)
	if ( ((int_32)$15 == (int_32)$0) ){ goto $label$33 }
	
.LOOP $label$34:
	$15 = ($15 + [-24])
	$12 = *($15)
	*($15) = [0]
	if ( ($12 == 0) ){ goto $label$35 }
	CALL $276($12)
	
.LABEL $label$35
	if ( ((int_32)$0 != (int_32)$15) ){ goto $label$34 }
	$15 = *(($16 + [88]))
	goto $label$32 
	
.LABEL $label$33
	$15 = $0
	
.LABEL $label$32
	*($14) = $0
	CALL $276($15)
	
.LABEL $label$31
	*([0] + [4]) = ($16 + [192])
}

int_32 .FUNC $171 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [768])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $275([40])) + [8]) = [0]
	*($6) = (int_64)0
	*($6 + [16]) = (int_64)0
	*($6 + [24]) = [0]
	*($6 + [28]) = $0
	CALL $174(($8 + [32]), $6)
	*($6 + [32]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [32])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $175(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $276($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC _ZN12thedeosgames4randEmy (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = (CASTING int_64)(int_32 CALL tapos_block_prefix())
	$6 = $2
	if ( ((int_64)$2 != (int_64)1) ){ goto $label$1 }
	$6 = (CASTING int_64)(int_32 CALL tapos_block_num())
	
.LABEL $label$1
	$2 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $1) + (int_64)$2) + (int_64)((int_64)$6 * (int_64)$3)) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295))
	*($0 + [2272]) = $2
	$2 = ((int_64)(uint_64)$2 >> (uint_64)(int_64)12) ^ (int_64)$2
	$2 = ((int_64)((int_64)$2) << (int_64)25) ^ (int_64)$2
	$2 = ((int_64)(uint_64)$2) >> (uint_64)(int_64)27
	*($0 + [2272]) = $2 ^ (int_64)$2))
	*(($0 + [2208])) = ((int_64)$2 * (int_64)2685821657736338717)
	$4 = ($0 + [2212])
	$1 = [0]
	$5 = ($0 + [2272])
	
.LOOP $label$2:
	$2 = *($5)
	$2 = ((int_64)(uint_64)$2 >> (uint_64)(int_64)12) ^ (int_64)$2
	$2 = ((int_64)((int_64)$2) << (int_64)25) ^ (int_64)$2
	$2 = ((int_64)(uint_64)$2) >> (uint_64)(int_64)27
	*($5) = $2 ^ (int_64)$2))
	*(($4 + $1)) = ((int_64)$2 * (int_64)2685821657736338717)
	$1 = ($1 + [4])
	if ( ((int_32)$1 != (int_32)[60]) ){ goto $label$2 }
	$2 = *($1)
	$2 = ((int_64)((int_64)$2 << (int_64)31) ^ (int_64)$2)
	$2 = *($0 + [2208])
	$2 = ((int_64)((int_64)((int_64)(uint_64)$2 >> (uint_64)(int_64)30) ^ (int_64)$2) ^ (int_64)$2) ^ (int_64)(uint_64)$2 >> (uint_64)(int_64)11
	*(($1 = ($0 + [2212]))) = $2))
	return (CASTING uint_32)(uint_64 ((uint_64)((int_64)((int_64)$2 & (int_64)4294967295) * (int_64)1181783497276652981) % (uint_64)(int_64)100))
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [768])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $275([56])
	$4 = CALL $26($6)
	*($6 + [40]) = $0
	CALL $27(($8 + [32]), $4)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($8 + [16]) = $5)
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $28(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $276($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $246 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($2 + [44]), *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [48]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [56]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($0 + [64]), *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	CALL $167(*($1), ($0 + [68]))
	*($4 + [8]) = $0
	CALL $247(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $178 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[31]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [32])
	$2 = (*($0 + [4]) + [32])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC $276 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $221 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$3 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$3 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$2
	CALL read_action_data($3, $1)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[3]), [800])
	CALL memcpy(($5 + [8]), $3, [4])
	$6 = *($5 + [8])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($3)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL void $1((int_32 $6), (int_32 $4))
	*([0] + [4]) = ($5 + [16])
	return [1]
}

void .FUNC _ZN12thedeosgames9slotsdeosEyN5eosio5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [192])
	*([0] + [4]) = $12
	$9 = [0]
	$4 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$8 = $4)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [32])
	$9 = ($0 + [2008])
	$6 = [0]
	$10 = [0]
	$11 = CALL db_lowerbound_i64(*($0 + [2008]), *(($0 + [2016])), (int_64)-4293729097406218240, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$6 }
	$10 = CALL $6($9, $11)
	
.LABEL $label$6
	$11 = ((int_32)$10 != (int_32)[0])
	CALL eosio_assert($11, [64])
	$8 = *($2)
	if ( ((int_64)*($10 + [48]) > (int_64)$8) ){ goto $label$7 }
	$6 = ((int_64)$8 <= (int_64)*($10 + [52]))
	
.LABEL $label$7
	CALL eosio_assert($6, [112])
	CALL eosio_assert((*($10 + [8]) == 0), [144])
	CALL require_auth($1)
	$6 = [0]
	*(($12 + [96])) = [0]
	*($12 + [80]) = (int_64)-1
	*($12 + [88]) = (int_64)0
	$8 = *($0 + [176])
	*($12 + [64]) = $8
	*($12 + [72]) = $4
	$7 = CALL db_find_i64($8, $4, (int_64)-4157508551318700032, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert(((int_32)*(CALL $7(($12 + [64]), $7) + [40]) == (int_32)($12 + [64])), [176])
	$6 = [1]
	
.LABEL $label$8
	CALL eosio_assert($6, [240])
	CALL eosio_assert($11, [288])
	CALL eosio_assert(((int_32)*($10 + [56]) == (int_32)$9), [336])
	CALL eosio_assert(((int_64)*(($0 + [2008])) == (int_64)CALL $fimport$14()), [384])
	*($10 + [16]) = ((int_64)*($10 + [16]) + (int_64)1)
	$8 = *($10)
	CALL eosio_assert([1], [448])
	*($12 + [184]) = (($12 + [112]) + [52])
	*($12 + [180]) = ($12 + [112])
	*($12 + [176]) = ($12 + [112])
	CALL $8(($12 + [176]), $10)
	CALL db_update_i64(*($10 + [60]), (int_64)0, ($12 + [112]), [52])
	$9 = ($0 + [2024])
	if ( (uint_64)($8 <= *($9)) ){ goto $label$9 }
	*($9) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$6 = ($2 + [8])
	*(($9 = (($12 + [48]) + [8]))) = *($6)
	$8 = *($2)
	*((($12 + [16]) + [12])) = *((($12 + [48]) + [12]))
	*((($12 + [16]) + [8])) = *($9)
	*($12 + [48]) = $8
	*($12 + [20]) = *($12 + [52])
	*($12 + [16]) = *($12 + [48])
	CALL _ZN12thedeosgames11sub_balanceEyN5eosio5assetE($0, $1, ($12 + [16]))
	*(($9 = (($12 + [32]) + [12]))) = *(($2 + [12]))
	*(($11 = (($12 + [32]) + [8]))) = *($6)
	*($12 + [36]) = *(($2 + [4]))
	*($12 + [32]) = *($2)
	$6 = ($0 + [176])
	$8 = *($6)
	*(($12 + [12])) = *($9)
	*(($12 + [8])) = *($11)
	*($12 + [4]) = *($12 + [36])
	*($12) = *($12 + [32])
	CALL _ZN12thedeosgames11add_balanceEyN5eosio5assetEy($0, $8, $12, $8)
	$4 = *($6)
	CALL eosio_assert(((int_64)*($0 + [1888]) == (int_64)CALL $fimport$14()), [512])
	*(($6 = CALL $275([80])) + [16]) = (int_64)1398362884
	*($6 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$5 = ($0 + [1888])
	$7 = ($6 + [8])
	$8 = (int_64)5462355
	$9 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$11 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	$11 = [0]
	
.LABEL $label$10
	CALL eosio_assert($11, [32])
	*($6 + [64]) = $5
	*($6) = *(($10 + [16]))
	*(($7 + [12])) = *(($2 + [12]))
	*(($7 + [8])) = *(($2 + [8]))
	*(($7 + [4])) = *(($2 + [4]))
	*($7) = *($2)
	*($6 + [24]) = [0]
	*($6 + [32]) = $1
	*($6 + [48]) = [0]
	$8 = CALL current_time()
	*($6 + [56]) = $3
	*($6 + [40]) = ((int_64)((uint_64)$8 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($12 + [184]) = (($12 + [112]) + [56])
	*($12 + [180]) = ($12 + [112])
	*($12 + [176]) = ($12 + [112])
	CALL $11(($12 + [176]), $6)
	$8 = *($6)
	$10 = CALL db_store_i64(*(($0 + [1896])), (int_64)-4293729036219842560, $4, $8, ($12 + [112]), [56])
	*($6 + [68]) = $10
	$9 = ($0 + [1904])
	if ( (uint_64)($8 <= *($9)) ){ goto $label$15 }
	*($9) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	*($12 + [176]) = $6
	$8 = *($6)
	*($12 + [112]) = $8
	*($12 + [108]) = $10
	$2 = ($0 + [1916])
	$9 = *($2)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [1920]))) ){ goto $label$17 }
	*($9 + [8]) = $8
	*($9 + [16]) = $10
	*($12 + [176]) = [0]
	*($9) = $6
	*($2) = ($9 + [24])
	goto $label$16 
	
.LABEL $label$17
	CALL $12(($0 + [1912]), ($12 + [176]), ($12 + [112]), ($12 + [108]))
	
.LABEL $label$16
	$9 = *($12 + [176])
	*($12 + [176]) = [0]
	if ( ($9 == 0) ){ goto $label$18 }
	CALL $276($9)
	
.LABEL $label$18
	$6 = *($12 + [88])
	if ( ($6 == 0) ){ goto $label$19 }
	$10 = ($12 + [92])
	$9 = *($10)
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$21 }
	
.LOOP $label$22:
	$9 = ($9 + [-24])
	$0 = *($9)
	*($9) = [0]
	if ( ($0 == 0) ){ goto $label$23 }
	CALL $276($0)
	
.LABEL $label$23
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$22 }
	$9 = *(($12 + [88]))
	goto $label$20 
	
.LABEL $label$21
	$9 = $6
	
.LABEL $label$20
	*($10) = $6
	CALL $276($9)
	
.LABEL $label$19
	*([0] + [4]) = ($12 + [192])
}

void .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[3]), [640])
	CALL memcpy(*($3 + [4]), ($2 + [44]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [48]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [56]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[3]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [64]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	CALL $46(*($1), ($0 + [68]))
	*($4 + [8]) = $0
	CALL $128(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

void .FUNC _ZN12thedeosgames11beteoscloseEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEmS1_mS8_S1_S1_S1_y11checksum256 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_64 $12, int_32 $13)
{
	CALL require_auth(*($0 + [176]))
	CALL require_recipient($2)
}

void .FUNC $188 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $275(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $275([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	CALL $125(($8 + [28]), $4)
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $276($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $276($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $276($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [768])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $275([80])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [32])
	*($4 + [64]) = $0
	CALL $69(($8 + [32]), $4)
	*($4 + [68]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [68])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $12($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $276($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC _ZN12thedeosgames6slotscEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_32 $20
	$20 = (*([0] + [4]) - [336])
	*([0] + [4]) = $20
	CALL require_auth(*($0 + [176]))
	$14 = [0]
	$13 = CALL db_lowerbound_i64(*($0 + [2008]), *(($0 + [2016])), (int_64)-4293729097406218240, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$1 }
	$14 = CALL $6(($0 + [2008]), $13)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [1520])
	CALL eosio_assert((*($14 + [8]) == 0), [144])
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)-1) <= (int_64)999), [1552])
	$5 = *(($0 + [1912]))
	$3 = *(($0 + [1916]))
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$2 }
	$14 = ($3 + [-24])
	$12 = ([0] - $5)
	
.LOOP $label$3:
	if ( ((int_64)*(*($14)) == (int_64)$1) ){ goto $label$2 }
	$3 = $14
	$13 = ($14 + [-24])
	$14 = $13
	if ( ((int_32)($13 + $12) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$15 = ($0 + [1888])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [64]) == (int_32)$15), [176])
	goto $label$4 
	
.LABEL $label$5
	$3 = [0]
	$14 = CALL db_find_i64(*(($0 + [1888])), *(($0 + [1896])), (int_64)-4293729036219842560, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$4 }
	$3 = CALL $49($15, $14)
	CALL eosio_assert(((int_32)*($3 + [64]) == (int_32)$15), [176])
	
.LABEL $label$4
	$4 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($4, [1600])
	CALL eosio_assert((*($3 + [48]) == 0), [1632])
	$18 = ((int_64)((int_64)((int_64)((uint_64)$2 % (uint_64)((int_64)$1 + (int_64)1)) + (int_64)$2) + (int_64)((uint_64)$1 % (uint_64)$2)) + (int_64)(CASTING uint_64)(uint_32 ((CALL tapos_block_prefix() + CALL $fimport$43()) + (CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$15() / (uint_64)(int_64)1000000)))))
	$18 = ((int_64)(uint_64)$18 >> (uint_64)(int_64)12) ^ (int_64)$18
	$18 = ((int_64)((int_64)$18) << (int_64)25) ^ (int_64)$18
	$18 = ((int_64)(uint_64)$18) >> (uint_64)(int_64)27
	*($0 + [2272]) = $18 ^ (int_64)$18))
	*($0 + [2208]) = ((int_64)$18 * (int_64)2685821657736338717)
	$18 = ((int_64)(uint_64)$18 >> (uint_64)(int_64)12) ^ (int_64)$18
	$18 = ((int_64)((int_64)$18) << (int_64)25) ^ (int_64)$18
	$18 = ((int_64)(uint_64)$18) >> (uint_64)(int_64)27
	*($0 + [2272]) = $18 ^ (int_64)$18))
	*(($0 + [2212])) = ((int_64)$18 * (int_64)2685821657736338717)
	$14 = [2216]
	
.LOOP $label$6:
	$18 = *($13)
	$18 = ((int_64)(uint_64)$18 >> (uint_64)(int_64)12) ^ (int_64)$18
	$18 = ((int_64)((int_64)$18) << (int_64)25) ^ (int_64)$18
	$18 = ((int_64)(uint_64)$18) >> (uint_64)(int_64)27
	*(($13 = ($0 + [2272]))) = $18 ^ (int_64)$18))
	*(($0 + $14)) = ((int_64)$18 * (int_64)2685821657736338717)
	$14 = ($14 + [4])
	if ( ((int_32)$14 != (int_32)[2272]) ){ goto $label$6 }
	$18 = *($14)
	$18 = ((int_64)((int_64)$18 << (int_64)31) ^ (int_64)$18)
	$12 = ($0 + [2208])
	$18 = *($12)
	$18 = ((int_64)((int_64)((int_64)(uint_64)$18 >> (uint_64)(int_64)30) ^ (int_64)$18) ^ (int_64)$18) ^ (int_64)(uint_64)$18 >> (uint_64)(int_64)11
	*(($14 = ($0 + [2212]))) = $18))
	$17 = ((int_64)((int_64)$18 & (int_64)4294967295) * (int_64)1181783497276652981)
	$18 = ((int_64)((int_64)((int_64)$1 + (int_64)(CASTING uint_64)(uint_32 ((CALL tapos_block_prefix() + CALL $fimport$43()) + (CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$15() / (uint_64)(int_64)1000000))))) + (int_64)((int_64)((int_64)$17 & (int_64)63) * (int_64)$2)) + (int_64)10000)
	$18 = ((int_64)(uint_64)$18 >> (uint_64)(int_64)12) ^ (int_64)$18
	$18 = ((int_64)((int_64)$18) << (int_64)25) ^ (int_64)$18
	$18 = ((int_64)(uint_64)$18) >> (uint_64)(int_64)27
	*(($13 = ($0 + [2272]))) = $18 ^ (int_64)$18))
	*($12) = ((int_64)$18 * (int_64)2685821657736338717)
	$18 = ((int_64)(uint_64)$18 >> (uint_64)(int_64)12) ^ (int_64)$18
	$18 = ((int_64)((int_64)$18) << (int_64)25) ^ (int_64)$18
	$18 = ((int_64)(uint_64)$18) >> (uint_64)(int_64)27
	*($13) = $18 ^ (int_64)$18))
	*($14) = ((int_64)$18 * (int_64)2685821657736338717)
	$12 = ((CASTING uint_32)(uint_64 $17) & [63])
	$14 = [2216]
	
.LOOP $label$7:
	$18 = *($13)
	$18 = ((int_64)(uint_64)$18 >> (uint_64)(int_64)12) ^ (int_64)$18
	$18 = ((int_64)((int_64)$18) << (int_64)25) ^ (int_64)$18
	$18 = ((int_64)(uint_64)$18) >> (uint_64)(int_64)27
	*($13) = $18 ^ (int_64)$18))
	*(($0 + $14)) = ((int_64)$18 * (int_64)2685821657736338717)
	$14 = ($14 + [4])
	if ( ((int_32)$14 != (int_32)[2272]) ){ goto $label$7 }
	$18 = *($14)
	$18 = ((int_64)((int_64)$18 << (int_64)31) ^ (int_64)$18)
	$5 = ($0 + [2208])
	$18 = *($5)
	$18 = ((int_64)((int_64)((int_64)(uint_64)$18 >> (uint_64)(int_64)30) ^ (int_64)$18) ^ (int_64)$18) ^ (int_64)(uint_64)$18 >> (uint_64)(int_64)11
	*(($14 = ($0 + [2212]))) = $18))
	$6 = ((CASTING uint_32)(uint_64 $18) & [63])
	$18 = ((int_64)((int_64)$18 & (int_64)4294967295) * (int_64)1181783497276652981)
	$18 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 ((CALL tapos_block_prefix() + CALL $fimport$43()) + (CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$15() / (uint_64)(int_64)1000000)))) + (int_64)((int_64)((int_64)$18 & (int_64)63) * (int_64)$2)) + (int_64)(CASTING uint_64)(uint_32 ((int_32)$6 * (int_32)$12))) + (int_64)1000000)
	$18 = ((int_64)(uint_64)$18 >> (uint_64)(int_64)12) ^ (int_64)$18
	$18 = ((int_64)((int_64)$18) << (int_64)25) ^ (int_64)$18
	$18 = ((int_64)(uint_64)$18) >> (uint_64)(int_64)27
	*(($13 = ($0 + [2272]))) = $18 ^ (int_64)$18))
	*($5) = ((int_64)$18 * (int_64)2685821657736338717)
	$18 = ((int_64)(uint_64)$18 >> (uint_64)(int_64)12) ^ (int_64)$18
	$18 = ((int_64)((int_64)$18) << (int_64)25) ^ (int_64)$18
	$18 = ((int_64)(uint_64)$18) >> (uint_64)(int_64)27
	*($13) = $18 ^ (int_64)$18))
	*($14) = ((int_64)$18 * (int_64)2685821657736338717)
	$14 = [2216]
	
.LOOP $label$8:
	$18 = *($13)
	$18 = ((int_64)(uint_64)$18 >> (uint_64)(int_64)12) ^ (int_64)$18
	$18 = ((int_64)((int_64)$18) << (int_64)25) ^ (int_64)$18
	$18 = ((int_64)(uint_64)$18) >> (uint_64)(int_64)27
	*($13) = $18 ^ (int_64)$18))
	*(($0 + $14)) = ((int_64)$18 * (int_64)2685821657736338717)
	$14 = ($14 + [4])
	if ( ((int_32)$14 != (int_32)[2272]) ){ goto $label$8 }
	$18 = *($14)
	$18 = ((int_64)((int_64)$18 << (int_64)31) ^ (int_64)$18)
	$18 = *(($0 + [2208]))
	$18 = ((int_64)((int_64)((int_64)(uint_64)$18 >> (uint_64)(int_64)30) ^ (int_64)$18) ^ (int_64)$18) ^ (int_64)(uint_64)$18 >> (uint_64)(int_64)11
	*(($14 = ($0 + [2212]))) = $18))
	$6 = *((($14 + (((CASTING uint_32)(uint_64 ((int_64)$18 * (int_64)1181783497276652981)) & [63]) << [2])) + [512]))
	$5 = *((($14 + ($6 << [2])) + [256]))
	$14 = ($0 + [192])
	$12 = *(($14 + ($12 << [2])))
	CALL _ZN12thedeosgames15slots_to_stringENS_4SlotES0_S0_(($20 + [320]), $0, $12, $5, $6)
	CALL eosio_assert($4, [288])
	CALL eosio_assert(((int_32)*($3 + [64]) == (int_32)$15), [336])
	CALL eosio_assert(((int_64)*(($0 + [1888])) == (int_64)CALL $fimport$14()), [384])
	*($3 + [24]) = ($6 + (((int_32)$5 * (int_32)[10]) + ((int_32)$12 * (int_32)[100])))
	*($3 + [48]) = [1]
	$18 = *($3)
	CALL eosio_assert([1], [448])
	*($20 + [184]) = (($20 + [16]) + [56])
	*($20 + [180]) = ($20 + [16])
	*($20 + [176]) = ($20 + [16])
	CALL $11(($20 + [176]), $3)
	CALL db_update_i64(*($3 + [68]), (int_64)0, ($20 + [16]), [56])
	$14 = ($0 + [1904])
	if ( (uint_64)($18 <= *($14)) ){ goto $label$9 }
	*($14) = ( (int_64)-2 ? ((int_64)$18 + (int_64)1) : ((uint_64)$18 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*(($20 + [312])) = [0]
	*($20 + [304]) = (int_64)0
	$14 = CALL strlen([1664])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$17 }
	*($20 + [304]) = ($14 << [1])
	$13 = (($20 + [304]) | [1])
	if ( $14 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$15 = (($14 + [16]) & [-16])
	$13 = CALL $275($15)
	*($20 + [304]) = ($15 | [1])
	*($20 + [312]) = $13
	*($20 + [308]) = $14
	
.LABEL $label$16
	CALL memcpy($13, [1664], $14)
	
.LABEL $label$15
	*(($13 + $14)) = [0]
	$7 = *(($3 + [16]))
	$8 = *($3 + [32])
	$18 = *($3 + [8])
	CALL eosio_assert((uint_64)((int_64))((int_64)4611686018427387903 - $18) <= (int_64)9223372036854775807), [576])
	$16 = (int_64))((int_64)0 - $18)
	$14 = [0]
	$9 = (uint_64)$7 >> (uint_64)(int_64)8
	$18 = $9)
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	
.LOOP $label$22:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$22 }
	
.LABEL $label$21
	$13 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	$13 = [0]
	
.LABEL $label$18
	CALL eosio_assert($13, [32])
	if ( ((int_32)$12 != (int_32)[1]) ){ goto $label$24 }
	if ( ((int_32)$5 != (int_32)[1]) ){ goto $label$24 }
	$15 = [500]
	if ( ((int_32)$6 == (int_32)[1]) ){ goto $label$23 }
	
.LABEL $label$24
	$14 = (((int_32)$12 == (int_32)[2]) & ((int_32)$5 == (int_32)[2]))
	if ( ((int_32)$14 != (int_32)[1]) ){ goto $label$25 }
	$15 = [100]
	if ( ((int_32)$6 == (int_32)[2]) ){ goto $label$23 }
	
.LABEL $label$25
	if ( ((int_32)$12 != (int_32)[3]) ){ goto $label$26 }
	if ( ((int_32)$5 != (int_32)[3]) ){ goto $label$26 }
	$15 = [50]
	if ( ((int_32)$6 == (int_32)[3]) ){ goto $label$23 }
	
.LABEL $label$26
	if ( ((int_32)$12 != (int_32)[4]) ){ goto $label$27 }
	if ( ((int_32)$5 != (int_32)[4]) ){ goto $label$27 }
	$15 = [30]
	if ( ((int_32)$6 == (int_32)[4]) ){ goto $label$23 }
	
.LABEL $label$27
	if ( ((int_32)$12 != (int_32)[5]) ){ goto $label$28 }
	if ( ((int_32)$5 != (int_32)[5]) ){ goto $label$28 }
	$15 = [20]
	if ( ((int_32)$6 == (int_32)[5]) ){ goto $label$23 }
	
.LABEL $label$28
	if ( ((int_32)$12 != (int_32)[6]) ){ goto $label$29 }
	if ( ((int_32)$5 != (int_32)[6]) ){ goto $label$29 }
	$15 = [10]
	if ( ((int_32)$6 == (int_32)[6]) ){ goto $label$23 }
	
.LABEL $label$29
	$15 = [5]
	$13 = ((int_32)$6 == (int_32)[2])
	if ( (((int_32)$12 == (int_32)[2]) & $13) ){ goto $label$23 }
	if ( ($14 | (((int_32)$5 == (int_32)[2]) & $13)) ){ goto $label$23 }
	$15 = ( [2] ? ( [2] ? (((int_32)$6 == (int_32)[2]) << [1]) : ((int_32)$5 == (int_32)[2]) ) : ((int_32)$12 == (int_32)[2]) )
	
.LABEL $label$23
	$14 = [1680]
	$13 = *([1680])
	if ( ($13 == 0) ){ goto $label$30 }
	
.LOOP $label$32:
	if ( ((int_32)$13 == (int_32)[37]) ){ goto $label$31 }
	CALL prints_l($14, [1])
	$14 = ($14 + [1])
	$13 = *($14)
	if ( $13 ){ goto $label$32 }
	goto $label$30 
	
.LABEL $label$31
	CALL printui((CASTING uint_64)(uint_32 $15))
	CALL prints(($14 + [1]))
	
.LABEL $label$30
	if ( ($15 == 0) ){ goto $label$38 }
	$16 = ((int_64)*(($3 + [8])) * (int_64)(CASTING uint_64)(uint_32 $15))
	CALL eosio_assert((uint_64)(((int_64)$16 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$14 = [0]
	$18 = $9
	
.LOOP $label$41:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$40 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$42 }
	
.LOOP $label$43:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$40 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$43 }
	
.LABEL $label$42
	$13 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$40
	$13 = [0]
	
.LABEL $label$39
	CALL eosio_assert($13, [32])
	*(($20 + [24])) = [0]
	*($20 + [16]) = (int_64)0
	$14 = CALL strlen([1712])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$37 }
	*($20 + [16]) = ($14 << [1])
	$13 = (($20 + [16]) | [1])
	if ( $14 ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$2 = *(($3 + [8]))
	$18 = *($3 + [24])
	$14 = [1840]
	$13 = *([1840])
	if ( ($13 == 0) ){ goto $label$33 }
	
.LOOP $label$44:
	if ( ((int_32)$13 == (int_32)[37]) ){ goto $label$34 }
	CALL prints_l($14, [1])
	$14 = ($14 + [1])
	$13 = *($14)
	if ( $13 ){ goto $label$44 }
	goto $label$33 
	
.LABEL $label$37
	$12 = (($14 + [16]) & [-16])
	$13 = CALL $275($12)
	*($20 + [16]) = ($12 | [1])
	*($20 + [24]) = $13
	*($20 + [20]) = $14
	
.LABEL $label$36
	CALL memcpy($13, [1712], $14)
	
.LABEL $label$35
	*(($13 + $14)) = [0]
	CALL _ZNSt3__19to_stringEy(($20 + [176]), $1)
	$14 = *($20 + [176])
	$13 = ($14 & [1])
	$14 = CALL $279(($20 + [16]), ( *($20 + [184]) ? (($20 + [176]) | [1]) : $13 ), ( *($20 + [180]) ? uint_32($14 >> [1]) : $13 ))
	$13 = ($14 + [8])
	*((($20 + [248]) + [8])) = *($13)
	*($20 + [248]) = *($14)
	*($14) = [0]
	*(($14 + [4])) = [0]
	*($13) = [0]
	if ( ((*($20 + [176]) & [1]) == 0) ){ goto $label$45 }
	CALL $276(*((($20 + [176]) + [8])))
	
.LABEL $label$45
	if ( ((*($20 + [16]) & [1]) == 0) ){ goto $label$46 }
	CALL $276(*($20 + [24]))
	
.LABEL $label$46
	$18 = CALL current_time()
	*(($20 + [44])) = [0]
	*(($20 + [48])) = [0]
	*($20 + [28]) = [0]
	*($20 + [32]) = [0]
	*($20 + [36]) = [0]
	*($20 + [40]) = [0]
	*($20 + [16]) = ((CASTING uint_32)(uint_64 ((uint_64)$18 / (uint_64)(int_64)1000000)) + [60])
	*($20 + [52]) = [0]
	*(($20 + [56])) = [0]
	*(($20 + [60])) = [0]
	*($20 + [64]) = [0]
	*(($20 + [68])) = [0]
	*(($20 + [72])) = [0]
	$10 = *(($0 + [176]))
	$12 = ($20 + [52])
	$18 = (int_64)0
	$17 = (int_64)59
	$14 = [1440]
	$19 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$18 > (uint_64)(int_64)5) ){ goto $label$52 }
	$13 = *($14)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$13 = ($13 + [165])
	goto $label$50 
	
.LABEL $label$52
	$2 = (int_64)0
	if ( ((uint_64)$18 <= (uint_64)(int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$48
	$14 = ($14 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$19 = ((int_64)$2 | (int_64)$19)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$47 }
	*($20 + [272]) = $19
	*($20 + [264]) = $10
	$18 = (int_64)0
	$2 = (int_64)59
	$14 = [1776]
	$19 = (int_64)0
	
.LOOP $label$53:
	$17 = (int_64)0
	if ( ((uint_64)$18 > (uint_64)(int_64)11) ){ goto $label$54 }
	$13 = *($14)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$56 }
	$13 = ($13 + [165])
	goto $label$55 
	
.LABEL $label$56
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$55
	$17 = ((int_64)(CASTING uint_64)(uint_32 ($13 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$54
	$14 = ($14 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$19 = ((int_64)$17 | (int_64)$19)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$53 }
	*($20 + [160]) = $19
	$18 = (int_64)0
	$17 = (int_64)59
	$14 = [1792]
	$19 = (int_64)0
	
.LOOP $label$57:
	if ( ((uint_64)$18 > (uint_64)(int_64)7) ){ goto $label$62 }
	$13 = *($14)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$61 }
	$13 = ($13 + [165])
	goto $label$60 
	
.LABEL $label$62
	$2 = (int_64)0
	if ( ((uint_64)$18 <= (uint_64)(int_64)11) ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$61
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$60
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$59
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$58
	$14 = ($14 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$19 = ((int_64)$2 | (int_64)$19)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$57 }
	*($20) = $19
	*(($20 + [200])) = $7
	*($20 + [184]) = $8
	*($20 + [176]) = $10
	*($20 + [192]) = $16
	CALL $295(($20 + [208]), ($20 + [248]))
	$14 = (($20 + [16]) + [40])
	$13 = *($14)
	if ( ((uint_32)$13 >= (uint_32)*(($20 + [60]))) ){ goto $label$64 }
	CALL $51($13, ($20 + [264]), *($20 + [160]), *($20), ($20 + [176]))
	*($14) = (*($14) + [40])
	goto $label$63 
	
.LABEL $label$64
	CALL $52($12, ($20 + [264]), ($20 + [160]), $20, ($20 + [176]))
	
.LABEL $label$63
	if ( ((*($20 + [208]) & [1]) == 0) ){ goto $label$65 }
	CALL $276(*(($20 + [216])))
	
.LABEL $label$65
	*(($20 + [36])) = [2]
	$18 = (int_64)0
	$17 = (int_64)59
	$14 = [1808]
	$19 = (int_64)0
	
.LOOP $label$66:
	if ( ((uint_64)$18 > (uint_64)(int_64)3) ){ goto $label$71 }
	$13 = *($14)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$70 }
	$13 = ($13 + [165])
	goto $label$69 
	
.LABEL $label$71
	$2 = (int_64)0
	if ( ((uint_64)$18 <= (uint_64)(int_64)11) ){ goto $label$68 }
	goto $label$67 
	
.LABEL $label$70
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$69
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$68
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$67
	$14 = ($14 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$19 = ((int_64)$2 | (int_64)$19)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$66 }
	*($20 + [184]) = (int_64)0
	*($20 + [176]) = $19
	$18 = *(($0 + [176]))
	CALL $53(($20 + [264]), ($20 + [16]))
	$14 = *($20 + [264])
	CALL send_deferred(($20 + [176]), $18, $14, (*($20 + [268]) - $14), [1])
	$14 = *($20 + [264])
	if ( ($14 == 0) ){ goto $label$72 }
	*($20 + [268]) = $14
	CALL $276($14)
	
.LABEL $label$72
	*(($20 + [184])) = [0]
	*($20 + [176]) = (int_64)0
	$14 = CALL strlen([1824])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$75 }
	*($20 + [176]) = ($14 << [1])
	$13 = (($20 + [176]) | [1])
	if ( $14 ){ goto $label$74 }
	goto $label$73 
	
.LABEL $label$75
	$12 = (($14 + [16]) & [-16])
	$13 = CALL $275($12)
	*($20 + [176]) = ($12 | [1])
	*($20 + [184]) = $13
	*($20 + [180]) = $14
	
.LABEL $label$74
	CALL memcpy($13, [1824], $14)
	
.LABEL $label$73
	*(($13 + $14)) = [0]
	if ( (*($20 + [304]) & [1]) ){ goto $label$77 }
	*($20 + [304]) = [0]
	goto $label$76 
	
.LABEL $label$77
	*(*($20 + [312])) = [0]
	*($20 + [308]) = [0]
	
.LABEL $label$76
	CALL $278(($20 + [304]), [0])
	*((($20 + [304]) + [8])) = *((($20 + [176]) + [8]))
	*($20 + [304]) = *($20 + [176])
	$16 = (int_64)
	CALL eosio_assert((uint_64)(((int_64)$16($16 - *(($3 + [8])))) + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$14 = [0]
	$18 = $9
	
.LOOP $label$80:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$79 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$81 }
	
.LOOP $label$82:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$79 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$82 }
	
.LABEL $label$81
	$13 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$80 }
	goto $label$78 
	
.LABEL $label$79
	$13 = [0]
	
.LABEL $label$78
	CALL eosio_assert($13, [32])
	CALL $54(($20 + [16]))
	if ( ((*($20 + [248]) & [1]) == 0) ){ goto $label$33 }
	CALL $276(*($20 + [256]))
	goto $label$33 
	
.LABEL $label$34
	CALL printui($18)
	$14 = ($14 + [1])
	$13 = *($14)
	if ( ($13 == 0) ){ goto $label$33 }
	
.LOOP $label$84:
	if ( ((int_32)$13 == (int_32)[37]) ){ goto $label$83 }
	CALL prints_l($14, [1])
	$14 = ($14 + [1])
	$13 = *($14)
	if ( $13 ){ goto $label$84 }
	goto $label$33 
	
.LABEL $label$83
	CALL printi($2)
	CALL prints(($14 + [1]))
	
.LABEL $label$33
	CALL eosio_assert([1], [576])
	$14 = [0]
	$18 = $9
	
.LOOP $label$87:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$86 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$88 }
	
.LOOP $label$89:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$86 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$89 }
	
.LABEL $label$88
	$13 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$87 }
	goto $label$85 
	
.LABEL $label$86
	$13 = [0]
	
.LABEL $label$85
	CALL eosio_assert($13, [32])
	*(($20 + [296])) = [0]
	*($20 + [280]) = (int_64)-1
	$18 = (int_64)0
	*($20 + [288]) = (int_64)0
	$2 = *(($0 + [176]))
	*($20 + [264]) = $2
	*($20 + [272]) = $8
	$10 = (int_64)0
	$11 = $7
	$14 = CALL db_find_i64($2, $8, (int_64)3607749779137757184, $9)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$90 }
	$14 = CALL $13(($20 + [264]), $14)
	CALL eosio_assert(((int_32)*($14 + [16]) == (int_32)($20 + [264])), [176])
	$11 = *($14 + [8])
	$10 = *($14)
	
.LABEL $label$90
	$17 = (int_64)59
	$14 = [1424]
	$19 = (int_64)0
	
.LOOP $label$91:
	if ( ((uint_64)$18 > (uint_64)(int_64)10) ){ goto $label$96 }
	$13 = *($14)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$95 }
	$13 = ($13 + [165])
	goto $label$94 
	
.LABEL $label$96
	$2 = (int_64)0
	if ( ((int_64)$18 == (int_64)11) ){ goto $label$93 }
	goto $label$92 
	
.LABEL $label$95
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$94
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$93
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$92
	$14 = ($14 + [1])
	$17 = ((int_64)$17 + (int_64)-5)
	$19 = ((int_64)$2 | (int_64)$19)
	$18 = ((int_64)$18 + (int_64)1)
	if ( ((int_64)$18 != (int_64)13) ){ goto $label$91 }
	*(($20 + [48])) = [0]
	*($20 + [24]) = $8
	*($20 + [16]) = $19
	*($20 + [32]) = (int_64)-1
	*($20 + [40]) = (int_64)0
	$14 = CALL $57(($20 + [16]), (int_64)5459781, [1936])
	*((($20 + [248]) + [8])) = *(($14 + [8]))
	*($20 + [248]) = *($14)
	$12 = *($20 + [40])
	if ( ($12 == 0) ){ goto $label$97 }
	$5 = ($20 + [44])
	$14 = *($5)
	if ( ((int_32)$14 == (int_32)$12) ){ goto $label$99 }
	
.LOOP $label$100:
	$14 = ($14 + [-24])
	$13 = *($14)
	*($14) = [0]
	if ( ($13 == 0) ){ goto $label$101 }
	CALL $276($13)
	
.LABEL $label$101
	if ( ((int_32)$12 != (int_32)$14) ){ goto $label$100 }
	$14 = *(($20 + [40]))
	goto $label$98 
	
.LABEL $label$99
	$14 = $12
	
.LABEL $label$98
	*($5) = $12
	CALL $276($14)
	
.LABEL $label$97
	*((($20 + [16]) + [8])) = [0]
	*($20 + [16]) = (int_64)0
	$14 = CALL strlen([1856])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$104 }
	*($20 + [16]) = ($14 << [1])
	$13 = (($20 + [16]) | [1])
	if ( $14 ){ goto $label$103 }
	goto $label$102 
	
.LABEL $label$104
	$12 = (($14 + [16]) & [-16])
	$13 = CALL $275($12)
	*($20 + [16]) = ($12 | [1])
	*($20 + [24]) = $13
	*($20 + [20]) = $14
	
.LABEL $label$103
	CALL memcpy($13, [1856], $14)
	
.LABEL $label$102
	*(($13 + $14)) = [0]
	CALL _ZNSt3__19to_stringEy(($20 + [176]), $1)
	$14 = *($20 + [176])
	$13 = ($14 & [1])
	$14 = CALL $279(($20 + [16]), ( *($20 + [184]) ? (($20 + [176]) | [1]) : $13 ), ( *($20 + [180]) ? uint_32($14 >> [1]) : $13 ))
	$5 = *($14)
	*($14) = [0]
	*($14 + [4]) = [0]
	$15 = *($14 + [8])
	*($14 + [8]) = [0]
	if ( ((*($20 + [176]) & [1]) == 0) ){ goto $label$105 }
	CALL $276(*(($20 + [184])))
	
.LABEL $label$105
	if ( ((*($20 + [16]) & [1]) == 0) ){ goto $label$106 }
	CALL $276(*($20 + [24]))
	
.LABEL $label$106
	$18 = CALL current_time()
	*(($20 + [204])) = [0]
	*(($20 + [208])) = [0]
	*($20 + [188]) = [0]
	*($20 + [192]) = [0]
	*($20 + [196]) = [0]
	*($20 + [200]) = [0]
	*($20 + [176]) = ((CASTING uint_32)(uint_64 ((uint_64)$18 / (uint_64)(int_64)1000000)) + [60])
	*($20 + [212]) = [0]
	*(($20 + [216])) = [0]
	*(($20 + [220])) = [0]
	*($20 + [224]) = [0]
	*(($20 + [228])) = [0]
	*(($20 + [232])) = [0]
	$8 = *(($0 + [176]))
	$6 = ($20 + [212])
	$18 = (int_64)0
	$17 = (int_64)59
	$14 = [1440]
	$19 = (int_64)0
	
.LOOP $label$107:
	if ( ((uint_64)$18 > (uint_64)(int_64)5) ){ goto $label$112 }
	$13 = *($14)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$111 }
	$13 = ($13 + [165])
	goto $label$110 
	
.LABEL $label$112
	$2 = (int_64)0
	if ( ((uint_64)$18 <= (uint_64)(int_64)11) ){ goto $label$109 }
	goto $label$108 
	
.LABEL $label$111
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$110
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$109
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$108
	$14 = ($14 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$19 = ((int_64)$2 | (int_64)$19)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$107 }
	*($20 + [168]) = $19
	*($20 + [160]) = $8
	$18 = (int_64)0
	$2 = (int_64)59
	$14 = [1776]
	$19 = (int_64)0
	
.LOOP $label$113:
	$17 = (int_64)0
	if ( ((uint_64)$18 > (uint_64)(int_64)11) ){ goto $label$114 }
	$13 = *($14)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$116 }
	$13 = ($13 + [165])
	goto $label$115 
	
.LABEL $label$116
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$115
	$17 = ((int_64)(CASTING uint_64)(uint_32 ($13 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$114
	$14 = ($14 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$19 = ((int_64)$17 | (int_64)$19)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$113 }
	*($20 + [152]) = $19
	$18 = (int_64)0
	$17 = (int_64)59
	$14 = [1888]
	$19 = (int_64)0
	
.LOOP $label$117:
	if ( ((uint_64)$18 > (uint_64)(int_64)9) ){ goto $label$122 }
	$13 = *($14)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$121 }
	$13 = ($13 + [165])
	goto $label$120 
	
.LABEL $label$122
	$2 = (int_64)0
	if ( ((uint_64)$18 <= (uint_64)(int_64)11) ){ goto $label$119 }
	goto $label$118 
	
.LABEL $label$121
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$120
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$119
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$118
	$14 = ($14 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$19 = ((int_64)$2 | (int_64)$19)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$117 }
	*($20 + [144]) = $19
	*(($20 + [8])) = [0]
	*($20) = (int_64)0
	$14 = CALL strlen([1904])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$12 }
	$13 = ($3 + [8])
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$125 }
	*($20) = ($14 << [1])
	$12 = ($20 | [1])
	if ( $14 ){ goto $label$124 }
	goto $label$123 
	
.LABEL $label$125
	$4 = (($14 + [16]) & [-16])
	$12 = CALL $275($4)
	*($20) = ($4 | [1])
	*($20 + [8]) = $12
	*($20 + [4]) = $14
	
.LABEL $label$124
	CALL memcpy($12, [1904], $14)
	
.LABEL $label$123
	*(($12 + $14)) = [0]
	*($20 + [24]) = *(($3 + [32]))
	*((($20 + [16]) + [28])) = *(($13 + [12]))
	*((($20 + [16]) + [24])) = *(($13 + [8]))
	*((($20 + [16]) + [20])) = *(($13 + [4]))
	*($20 + [16]) = $1
	*($20 + [32]) = *($13)
	*(($20 + [52])) = *($20 + [4 align=4])
	*($20 + [48]) = *($20)
	*($20) = [0]
	*($20 + [4]) = [0]
	*(($20 + [8])) = [0]
	CALL $295((($20 + [16]) + [44]), ($20 + [320]))
	CALL $295(($20 + [72]), ($20 + [304]))
	*(($20 + [96])) = $7
	*(($20 + [112])) = $11
	*(($20 + [132])) = *((($20 + [248]) + [12]))
	*(($20 + [128])) = *((($20 + [248]) + [8]))
	*(($20 + [124])) = *($20 + [252])
	*($20 + [88]) = $16
	*($20 + [104]) = $10
	*($20 + [120]) = *($20 + [248])
	*($20 + [136]) = *($3 + [40])
	$13 = (($20 + [176]) + [40])
	$14 = *($13)
	if ( ((uint_32)$14 >= (uint_32)*((($20 + [176]) + [44]))) ){ goto $label$127 }
	*($14 + [8]) = *($20 + [144])
	*($14) = *($20 + [152])
	*($14 + [16 align=4]) = (int_64)0
	*(($12 = ($14 + [24]))) = [0]
	$3 = CALL $275([16])
	*($14 + [16]) = $3
	$6 = ($3 + [16])
	*($12) = $6
	*(($3 + [8])) = *((($20 + [160]) + [8]))
	*($3) = *($20 + [160])
	*(($14 + [20])) = $6
	CALL $55(($14 + [28]), ($20 + [16]))
	*($13) = (*($13) + [40])
	goto $label$126 
	
.LABEL $label$127
	CALL $56($6, ($20 + [160]), ($20 + [152]), ($20 + [144]), ($20 + [16]))
	
.LABEL $label$126
	if ( ((*($20 + [72]) & [1]) == 0) ){ goto $label$128 }
	CALL $276(*(($20 + [80])))
	
.LABEL $label$128
	if ( ((*($20 + [60]) & [1]) == 0) ){ goto $label$129 }
	CALL $276(*(($20 + [68])))
	
.LABEL $label$129
	if ( ((*(($20 + [48])) & [1]) == 0) ){ goto $label$130 }
	CALL $276(*(($20 + [56])))
	
.LABEL $label$130
	if ( ((*($20) & [1]) == 0) ){ goto $label$131 }
	CALL $276(*(($20 + [8])))
	
.LABEL $label$131
	*(($20 + [196])) = [2]
	$18 = (int_64)0
	$17 = (int_64)59
	$14 = [1920]
	$19 = (int_64)0
	
.LOOP $label$132:
	if ( ((uint_64)$18 > (uint_64)(int_64)9) ){ goto $label$137 }
	$13 = *($14)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$136 }
	$13 = ($13 + [165])
	goto $label$135 
	
.LABEL $label$137
	$2 = (int_64)0
	if ( ((uint_64)$18 <= (uint_64)(int_64)11) ){ goto $label$134 }
	goto $label$133 
	
.LABEL $label$136
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$135
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$134
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$133
	$14 = ($14 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$19 = ((int_64)$2 | (int_64)$19)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$132 }
	*($20 + [24]) = (int_64)0
	*($20 + [16]) = $19
	$18 = *(($0 + [176]))
	CALL $53(($20 + [160]), ($20 + [176]))
	$0 = *($20 + [160])
	CALL send_deferred(($20 + [16]), $18, $0, (*($20 + [164]) - $0), [0])
	$0 = *($20 + [160])
	if ( ($0 == 0) ){ goto $label$138 }
	*($20 + [164]) = $0
	CALL $276($0)
	
.LABEL $label$138
	CALL $54(($20 + [176]))
	if ( (($5 & [1]) == 0) ){ goto $label$139 }
	CALL $276($15)
	
.LABEL $label$139
	$13 = *($20 + [288])
	if ( ($13 == 0) ){ goto $label$140 }
	$3 = ($20 + [292])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$13) ){ goto $label$142 }
	
.LOOP $label$143:
	$0 = ($0 + [-24])
	$14 = *($0)
	*($0) = [0]
	if ( ($14 == 0) ){ goto $label$144 }
	CALL $276($14)
	
.LABEL $label$144
	if ( ((int_32)$13 != (int_32)$0) ){ goto $label$143 }
	$0 = *(($20 + [288]))
	goto $label$141 
	
.LABEL $label$142
	$0 = $13
	
.LABEL $label$141
	*($3) = $13
	CALL $276($0)
	
.LABEL $label$140
	if ( ((*($20 + [304]) & [1]) == 0) ){ goto $label$145 }
	CALL $276(*($20 + [312]))
	
.LABEL $label$145
	if ( ((*($20 + [320]) & [1]) == 0) ){ goto $label$146 }
	CALL $276(*($20 + [328]))
	
.LABEL $label$146
	*([0] + [4]) = ($20 + [336])
	return (unreachable)
	
.LABEL $label$14
	CALL $277(($20 + [304]))
	
.LABEL $label$13
	CALL $277(($20 + [16]))
	
.LABEL $label$12
	CALL $277($20)
	
.LABEL $label$11
	CALL $277(($20 + [16]))
	
.LABEL $label$10
	CALL $277(($20 + [176]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $264 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [80]), *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [88]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [96]), *($2 + [4]), [8])
	$3 = (*($2 + [4]) + [8])
	*($2 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $3) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [104]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [112]), *($2 + [4]), [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $1) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [120]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC $266 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $295(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $295(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $276(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $276(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

int_32 .FUNC $236 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [128])
	*([0] + [4]) = $2
	*(($3 = $2) + [124]) = $0
	*($3 + [112]) = *($1)
	*($3 + [116]) = *($1 + [4])
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$2 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$2
	CALL read_action_data($2, $1)
	
.LABEL $label$1
	CALL $239(($3 + [16]), $2, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($2)
	
.LABEL $label$5
	*($3 + [12]) = ($3 + [112])
	*($3 + [8]) = ($3 + [124])
	CALL $240(($3 + [8]), ($3 + [16]))
	if ( ((*($3 + [88]) & [1]) == 0) ){ goto $label$6 }
	CALL $276(*(($3 + [96])))
	
.LABEL $label$6
	if ( ((*($3 + [76]) & [1]) == 0) ){ goto $label$7 }
	CALL $276(*(($3 + [84])))
	
.LABEL $label$7
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$8 }
	CALL $276(*(($3 + [72])))
	
.LABEL $label$8
	*([0] + [4]) = ($3 + [128])
	return [1]
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $41($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [640])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [640])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $45(CALL $44($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $46(*($1), ($0 + [32]))
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $275($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $294($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $276($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $40 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [96])
	*([0] + [4]) = $9
	*($9 + [16]) = [0]
	*($9 + [8]) = (int_64)0
	$6 = [0]
	$7 = [0]
	$8 = [0]
	$4 = (*($2 + [4]) - *($2))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $275($4)
	$6 = ($8 + ($5 << [4]))
	*(($9 + [16])) = $6
	*($9 + [8]) = $8
	*($9 + [12]) = $8
	$7 = *($2)
	$2 = (*(($2 + [4])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $7, $2)
	$7 = ($8 + $2)
	*($9 + [12]) = $7
	goto $label$2 
	
.LABEL $label$3
	$7 = $8
	
.LABEL $label$2
	*(($9 + [44])) = $7
	*($9 + [32]) = $1
	*(($9 + [16])) = [0]
	*(($9 + [48])) = $6
	*($9 + [24]) = $0
	*($9 + [40]) = $8
	*($9 + [8]) = (int_64)0
	*($9 + [52]) = [0]
	*((($9 + [24]) + [32])) = [0]
	*((($9 + [24]) + [36])) = [0]
	$8 = *($3 + [32])
	$2 = ( *(($3 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($9 + [52])
	
.LOOP $label$4:
	$8 = ($8 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($8 == 0) ){ goto $label$6 }
	CALL $41($2, $8)
	$2 = *(($9 + [56]))
	$8 = *(($9 + [52]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$8 = [0]
	
.LABEL $label$5
	*($9 + [84]) = $8
	*($9 + [80]) = $8
	*($9 + [88]) = $2
	*($9 + [64]) = ($9 + [80])
	*($9 + [72]) = $3
	CALL $42(($9 + [72]), ($9 + [64]))
	CALL $43(($9 + [80]), ($9 + [24]))
	$8 = *($9 + [80])
	CALL send_inline($8, (*($9 + [84]) - $8))
	$8 = *($9 + [80])
	if ( ($8 == 0) ){ goto $label$7 }
	*($9 + [84]) = $8
	CALL $276($8)
	
.LABEL $label$7
	$8 = *($9 + [52])
	if ( ($8 == 0) ){ goto $label$8 }
	*(($9 + [56])) = $8
	CALL $276($8)
	
.LABEL $label$8
	$8 = *($9 + [40])
	if ( ($8 == 0) ){ goto $label$9 }
	*(($9 + [44])) = $8
	CALL $276($8)
	
.LABEL $label$9
	$8 = *($9 + [8])
	if ( ($8 == 0) ){ goto $label$10 }
	*($9 + [12]) = $8
	CALL $276($8)
	
.LABEL $label$10
	*([0] + [4]) = ($9 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $294(($9 + [8]))
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [640])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [640])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [640])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [640])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [640])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [640])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [640])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $222 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [80])
	$10 = $11
	*([0] + [4]) = $11
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($11 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($10 + [16]) = [0]
	*($10 + [8]) = (int_64)0
	*($10 + [24]) = (int_64)0
	*($10 + [32]) = [0]
	*($10 + [36]) = [0]
	*($10 + [40]) = [0]
	*($10 + [44]) = [0]
	*($10 + [52]) = $1
	*($10 + [48]) = $1
	*($10 + [56]) = ($1 + $3)
	*($10 + [64]) = ($10 + [48])
	*($10 + [72]) = ($10 + [8])
	CALL $268(($10 + [72]), ($10 + [64]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *(($10 + [44]))
	$11 = *(($10 + [40]))
	$0 = *(($10 + [36]))
	$8 = *(($10 + [32]))
	$7 = *(($10 + [24]))
	$6 = *(($10 + [16]))
	$5 = *($10 + [12])
	$4 = *($10 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$9 = *((*($1) + $9))
	
.LABEL $label$5
	CALL void $1((int_32 $4), (int_32 $5), (int_32 $6), (int_32 $7), (int_64 $8), (int_32 $0), (int_32 $11), (int_32 $3), (int_32 $9))
	*([0] + [4]) = ($10 + [80])
	return [1]
}

void .FUNC $267 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*((($4 + [32]) + [12])) = *(($1 + [20]))
	*(($3 = (($4 + [32]) + [8]))) = *(($1 + [16]))
	*($4 + [32]) = *($1 + [8])
	*($4 + [36]) = *(($1 + [12]))
	$2 = *($1)
	CALL $295(($4 + [16]), ($1 + [24]))
	*((($4 + [48]) + [8])) = *($3)
	*($4 + [48]) = *($4 + [32])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($3 = (($4 + [80]) + [8]))) = *((($4 + [48]) + [8]))
	*($4 + [80]) = *($4 + [48])
	CALL $295(($4 + [64]), ($4 + [16]))
	*(($4 + [8])) = *($3)
	*($4) = *($4 + [80])
	CALL void $0((int_32 $2), (int_64 $4), (int_32 ($4 + [64])), (int_32 $1))
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $276(*($4 + [72]))
	
.LABEL $label$2
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $276(*($4 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [96])
}

int_32 .FUNC $234 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	*(($2 = $3) + [44]) = $0
	*($2 + [32]) = *($1)
	*($2 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [24])) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [56]) = ($1 + $0)
	*($2 + [48]) = $1
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [800])
	CALL memcpy(($2 + [8]), $1, [8])
	*($2 + [52]) = ($1 + [8])
	CALL $167(($2 + [48]), (($2 + [8]) + [8]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [52]) = ($2 + [32])
	*($2 + [48]) = ($2 + [44])
	CALL $242(($2 + [48]), ($2 + [8]))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $276(*(($2 + [24])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [64])
	return [1]
}

int_32 .FUNC $233 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$4 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = [0]
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [800])
	CALL memcpy($6, $4, [8])
	CALL eosio_assert(((int_32)($1 & [-4]) != (int_32)[8]), [800])
	$7 = ($6 + [8])
	CALL memcpy($7, ($4 + [8]), [4])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($4)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($7)
	$3 = *($6)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 $4), (int_32 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC $249 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [480])
	*([0] + [4]) = $11
	*(($11 + [236])) = *(($1 + [28]))
	*(($5 = (($11 + [224]) + [8]))) = *(($1 + [24]))
	*($11 + [224]) = *($1 + [16])
	*($11 + [228]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $295(($11 + [208]), ($1 + [32]))
	CALL $295(($11 + [192]), ($1 + [44]))
	CALL $295(($11 + [176]), ($1 + [56]))
	*(($6 = (($11 + [160]) + [8]))) = *(($1 + [80]))
	*(($7 = (($11 + [144]) + [8]))) = *(($1 + [96]))
	*($11 + [160]) = *($1 + [72])
	*($11 + [144]) = *($1 + [88])
	*(($8 = (($11 + [128]) + [8]))) = *(($1 + [112]))
	*($11 + [128]) = *($1 + [104])
	$4 = *($1 + [120])
	*(($9 = (($11 + [96]) + [24]))) = *(($1 + [152]))
	*(($10 = (($11 + [96]) + [16]))) = *(($1 + [144]))
	*($11 + [104]) = *(($1 + [136]))
	*($11 + [96]) = *($1 + [128])
	*((($11 + [304]) + [24])) = *($9)
	*((($11 + [304]) + [16])) = *($10)
	*($11 + [312]) = *($11 + [104])
	*($11 + [304]) = *($11 + [96])
	*((($11 + [288]) + [8])) = *($8)
	*($11 + [288]) = *($11 + [128])
	*((($11 + [272]) + [8])) = *($7)
	*($11 + [272]) = *($11 + [144])
	*((($11 + [256]) + [8])) = *($6)
	*($11 + [256]) = *($11 + [160])
	*((($11 + [240]) + [8])) = *($5)
	*($11 + [240]) = *($11 + [224])
	$1 = *($0 + [4])
	$5 = *($1 + [4])
	$0 = (*(*($0)) + int_32($5 >> [1]))
	$1 = *($1)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($5 = (($11 + [464]) + [8]))) = *((($11 + [240]) + [8]))
	*($11 + [464]) = *($11 + [240])
	CALL $295(($11 + [448]), ($11 + [208]))
	CALL $295(($11 + [432]), ($11 + [192]))
	CALL $295(($11 + [416]), ($11 + [176]))
	*(($6 = (($11 + [400]) + [8]))) = *((($11 + [256]) + [8]))
	*(($7 = (($11 + [384]) + [8]))) = *((($11 + [272]) + [8]))
	*($11 + [400]) = *($11 + [256])
	*($11 + [384]) = *($11 + [272])
	*(($8 = (($11 + [368]) + [8]))) = *((($11 + [288]) + [8]))
	*($11 + [368]) = *($11 + [288])
	*(($9 = (($11 + [336]) + [24]))) = *((($11 + [304]) + [24]))
	*(($10 = (($11 + [336]) + [16]))) = *((($11 + [304]) + [16]))
	*($11 + [344]) = *($11 + [312])
	*($11 + [336]) = *($11 + [304])
	*((($11 + [80]) + [8])) = *($5)
	*($11 + [80]) = *($11 + [464])
	*((($11 + [64]) + [8])) = *($6)
	*($11 + [64]) = *($11 + [400])
	*((($11 + [48]) + [8])) = *($7)
	*($11 + [48]) = *($11 + [384])
	*((($11 + [32]) + [8])) = *($8)
	*($11 + [32]) = *($11 + [368])
	*(($11 + [24])) = *($9)
	*(($11 + [16])) = *($10)
	*($11 + [8]) = *($11 + [344])
	*($11) = *($11 + [336])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($11 + [80])), (int_32 ($11 + [448])), (int_32 ($11 + [432])), (int_32 ($11 + [416])), (int_32 ($11 + [64])), (int_32 ($11 + [48])), (int_32 ($11 + [32])), (int_32 $4), (int_64 $11), (int_32 $1))
	if ( ((*($11 + [416]) & [1]) == 0) ){ goto $label$2 }
	CALL $276(*($11 + [424]))
	
.LABEL $label$2
	if ( ((*($11 + [432]) & [1]) == 0) ){ goto $label$3 }
	CALL $276(*($11 + [440]))
	
.LABEL $label$3
	if ( ((*($11 + [448]) & [1]) == 0) ){ goto $label$4 }
	CALL $276(*($11 + [456]))
	
.LABEL $label$4
	if ( ((*($11 + [176]) & [1]) == 0) ){ goto $label$5 }
	CALL $276(*($11 + [184]))
	
.LABEL $label$5
	if ( ((*($11 + [192]) & [1]) == 0) ){ goto $label$6 }
	CALL $276(*($11 + [200]))
	
.LABEL $label$6
	if ( ((*($11 + [208]) & [1]) == 0) ){ goto $label$7 }
	CALL $276(*($11 + [216]))
	
.LABEL $label$7
	*([0] + [4]) = ($11 + [480])
}

int_32 .FUNC $226 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [160])
	*([0] + [4]) = $2
	*(($3 = $2) + [156]) = $0
	*($3 + [144]) = *($1)
	*($3 + [148]) = *($1 + [4])
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$2 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$2
	CALL read_action_data($2, $1)
	
.LABEL $label$1
	CALL $260(($3 + [16]), $2, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($2)
	
.LABEL $label$5
	*($3 + [12]) = ($3 + [144])
	*($3 + [8]) = ($3 + [156])
	CALL $261(($3 + [8]), ($3 + [16]))
	if ( ((*($3 + [84]) & [1]) == 0) ){ goto $label$6 }
	CALL $276(*(($3 + [92])))
	
.LABEL $label$6
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$7 }
	CALL $276(*(($3 + [56])))
	
.LABEL $label$7
	*([0] + [4]) = ($3 + [160])
	return [1]
}

int_32 .FUNC $167 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $168($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $278($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $275($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $278($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $276($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $277($7)
	return (unreachable)
}

int_32 .FUNC $166 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$1 }
	$4 = ($0 + [8])
	
.LOOP $label$2:
	$3 = ($2 + [-24])
	*($4) = $3
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$3 }
	if ( ((*($2 + [84]) & [1]) == 0) ){ goto $label$4 }
	CALL $276(*(($2 + [92])))
	
.LABEL $label$4
	if ( ((*($2 + [72]) & [1]) == 0) ){ goto $label$5 }
	CALL $276(*(($2 + [80])))
	
.LABEL $label$5
	if ( ((*($2 + [60]) & [1]) == 0) ){ goto $label$6 }
	CALL $276(*(($2 + [68])))
	
.LABEL $label$6
	if ( ((*($2 + [48]) & [1]) == 0) ){ goto $label$7 }
	CALL $276(*(($2 + [56])))
	
.LABEL $label$7
	CALL $276($2)
	
.LABEL $label$3
	$2 = *($4)
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$8 }
	CALL $276($2)
	
.LABEL $label$8
	return $0
}

void .FUNC $165 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	$9 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $9) / (int_32)[24])
	$8 = ($4 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$2 }
	$5 = ($0 + [8])
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[24])
	if ( ((uint_32)$9 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($10 + [24])) = $5
	$5 = [0]
	*($10 + [20]) = [0]
	$7 = ($10 + [20])
	$9 = ($9 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	$5 = $9
	goto $label$4 
	
.LABEL $label$5
	*(($10 + [24])) = $5
	*($10 + [20]) = [0]
	$7 = ($10 + [20])
	$5 = [178956970]
	
.LABEL $label$4
	$8 = CALL $275(((int_32)$5 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	*($10 + [8]) = $8
	$9 = ($8 + ((int_32)$4 * (int_32)[24]))
	*($10 + [12]) = $9
	$5 = ($8 + ((int_32)$5 * (int_32)[24]))
	*($7) = $5
	$8 = *($1)
	*($1) = [0]
	$1 = *($3)
	$6 = *($2)
	*($9) = $8
	*($9 + [8]) = $6
	*($9 + [16]) = $1
	$1 = ($9 + [24])
	*($10 + [16]) = $1
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = ($8 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($9 + [-24])) = $1
	*(($9 + [-8])) = *(($8 + [-8]))
	*(($9 + [-12])) = *(($8 + [-12]))
	*(($9 + [-16])) = *(($8 + [-16]))
	$9 = (*($10 + [12]) + [-24])
	*($10 + [12]) = $9
	$8 = $5
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$7 }
	$8 = *(($0 + [4]))
	$5 = *($7)
	$2 = *($0)
	$1 = *(($10 + [16]))
	
.LABEL $label$6
	*($0) = $9
	*(($0 + [4])) = $1
	*((($10 + [8]) + [8])) = $8
	$9 = ($0 + [8])
	$8 = *($9)
	*($9) = $5
	*($10 + [12]) = $2
	*($7) = $8
	*($10 + [8]) = $2
	CALL $166(($10 + [8]))
	*([0] + [4]) = ($10 + [32])
	(unreachable)
}

int_32 .FUNC $164 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $167(CALL $167(CALL $167(CALL $167($0, ($1 + [48])), ($1 + [60])), ($1 + [72])), ($1 + [84]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $163 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [576])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [32])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [576])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [32])
	*($0 + [48 align=4]) = (int_64)0
	*(($0 + [56])) = (int_64)0
	*(($0 + [64])) = (int_64)0
	*($0 + [72 align=4]) = (int_64)0
	*(($0 + [80])) = (int_64)0
	*(($0 + [88])) = [0]
	*(($0 + [92])) = [0]
	return $0
}

int_32 .FUNC $162 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = *($0 + [4])
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ((*($2 + [84]) & [1]) == 0) ){ goto $label$6 }
	CALL $276(*(($2 + [92])))
	
.LABEL $label$6
	if ( ((*($2 + [72]) & [1]) == 0) ){ goto $label$7 }
	CALL $276(*(($2 + [80])))
	
.LABEL $label$7
	if ( ((*($2 + [60]) & [1]) == 0) ){ goto $label$8 }
	CALL $276(*(($2 + [68])))
	
.LABEL $label$8
	if ( ((*($2 + [48]) & [1]) == 0) ){ goto $label$9 }
	CALL $276(*(($2 + [56])))
	
.LABEL $label$9
	CALL $276($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$2 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$2 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $276($2)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [768])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $275([112])
	$4 = CALL $163($6)
	*($6 + [96]) = $0
	CALL $164(($8 + [32]), $4)
	*($6 + [100]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [100])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $165(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [84]) & [1]) == 0) ){ goto $label$10 }
	CALL $276(*(($4 + [92])))
	
.LABEL $label$10
	if ( ((*($4 + [72]) & [1]) == 0) ){ goto $label$11 }
	CALL $276(*(($4 + [80])))
	
.LABEL $label$11
	if ( ((*($4 + [60]) & [1]) == 0) ){ goto $label$12 }
	CALL $276(*(($4 + [68])))
	
.LABEL $label$12
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$13 }
	CALL $276(*(($4 + [56])))
	
.LABEL $label$13
	CALL $276($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN12thedeosgames12resolve3gameEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	CALL require_auth(*($0 + [176]))
	$4 = (int_64)0
	$3 = (int_64)59
	$0 = [3760]
	$5 = (int_64)0
	
.LOOP $label$1:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($0)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$1 }
	$4 = (int_64)0
	$3 = (int_64)59
	$0 = [3760]
	$7 = (int_64)0
	
.LOOP $label$5:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$6 }
	$2 = *($0)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$2 = ($2 + [165])
	goto $label$7 
	
.LABEL $label$8
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$6
	$0 = ($0 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$7 = ((int_64)$6 | (int_64)$7)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$5 }
	*(($8 + [40])) = [0]
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	*($8 + [16]) = $7
	*($8 + [8]) = $5
	$0 = [0]
	$2 = CALL db_find_i64($5, $7, (int_64)-5971361775621242880, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$9 }
	$0 = CALL $161(($8 + [8]), $2)
	CALL eosio_assert(((int_32)*($0 + [96]) == (int_32)($8 + [8])), [176])
	
.LABEL $label$9
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [3840])
	if ( (*($0 + [84]) & [1]) ){ goto $label$11 }
	$0 = (($0 + [84]) + [1])
	goto $label$10 
	
.LABEL $label$11
	$0 = *(($0 + [92]))
	
.LABEL $label$10
	CALL eosio_assert([0], $0)
	CALL $162(($8 + [32]))
	*([0] + [4]) = ($8 + [48])
}

void .FUNC _ZNSt3__19to_stringEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [14432], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $290(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $290(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC $230 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [192])
	*([0] + [4]) = $2
	*(($3 = $2) + [188]) = $0
	*($3 + [176]) = *($1)
	*($3 + [180]) = *($1 + [4])
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$2 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$2
	CALL read_action_data($2, $1)
	
.LABEL $label$1
	CALL $248(($3 + [16]), $2, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($2)
	
.LABEL $label$5
	*($3 + [12]) = ($3 + [176])
	*($3 + [8]) = ($3 + [188])
	CALL $249(($3 + [8]), ($3 + [16]))
	if ( ((*($3 + [72]) & [1]) == 0) ){ goto $label$6 }
	CALL $276(*(($3 + [80])))
	
.LABEL $label$6
	if ( ((*($3 + [60]) & [1]) == 0) ){ goto $label$7 }
	CALL $276(*(($3 + [68])))
	
.LABEL $label$7
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$8 }
	CALL $276(*(($3 + [56])))
	
.LABEL $label$8
	*([0] + [4]) = ($3 + [192])
	return [1]
}

void .FUNC $244 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [512])
	*([0] + [4]) = $14
	*((($14 + [240]) + [12])) = *(($1 + [28]))
	*(($7 = (($14 + [240]) + [8]))) = *(($1 + [24]))
	*($14 + [240]) = *($1 + [16])
	*($14 + [244]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $295(($14 + [224]), ($1 + [32]))
	*((($14 + [208]) + [12])) = *(($1 + [60]))
	*(($8 = (($14 + [208]) + [8]))) = *(($1 + [56]))
	*($14 + [212]) = *(($1 + [52]))
	*($14 + [208]) = *($1 + [48])
	$4 = *($1 + [44])
	$5 = *($1 + [64])
	CALL $295(($14 + [192]), ($1 + [68]))
	*(($9 = (($14 + [176]) + [8]))) = *(($1 + [88]))
	*(($10 = (($14 + [160]) + [8]))) = *(($1 + [104]))
	*($14 + [176]) = *($1 + [80])
	*($14 + [160]) = *($1 + [96])
	*(($11 = (($14 + [144]) + [8]))) = *(($1 + [120]))
	*($14 + [144]) = *($1 + [112])
	$6 = *($1 + [128])
	*(($12 = (($14 + [112]) + [24]))) = *(($1 + [168]))
	*(($13 = (($14 + [112]) + [16]))) = *(($1 + [160]))
	*($14 + [120]) = *(($1 + [152]))
	*($14 + [112]) = *($1 + [144])
	*((($14 + [336]) + [24])) = *($12)
	*((($14 + [336]) + [16])) = *($13)
	*($14 + [344]) = *($14 + [120])
	*($14 + [336]) = *($14 + [112])
	*((($14 + [320]) + [8])) = *($11)
	*($14 + [320]) = *($14 + [144])
	*((($14 + [304]) + [8])) = *($10)
	*($14 + [304]) = *($14 + [160])
	*((($14 + [288]) + [8])) = *($9)
	*($14 + [288]) = *($14 + [176])
	*((($14 + [272]) + [8])) = *($8)
	*($14 + [272]) = *($14 + [208])
	*((($14 + [256]) + [8])) = *($7)
	*($14 + [256]) = *($14 + [240])
	$1 = *($0 + [4])
	$7 = *($1 + [4])
	$0 = (*(*($0)) + int_32($7 >> [1]))
	$1 = *($1)
	if ( (($7 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($7 = (($14 + [496]) + [8]))) = *((($14 + [256]) + [8]))
	*($14 + [496]) = *($14 + [256])
	CALL $295(($14 + [480]), ($14 + [224]))
	*(($8 = (($14 + [464]) + [8]))) = *((($14 + [272]) + [8]))
	*($14 + [464]) = *($14 + [272])
	CALL $295(($14 + [448]), ($14 + [192]))
	*(($9 = (($14 + [432]) + [8]))) = *((($14 + [288]) + [8]))
	*(($10 = (($14 + [416]) + [8]))) = *((($14 + [304]) + [8]))
	*($14 + [432]) = *($14 + [288])
	*($14 + [416]) = *($14 + [304])
	*(($11 = (($14 + [400]) + [8]))) = *((($14 + [320]) + [8]))
	*($14 + [400]) = *($14 + [320])
	*(($12 = (($14 + [368]) + [24]))) = *((($14 + [336]) + [24]))
	*(($13 = (($14 + [368]) + [16]))) = *((($14 + [336]) + [16]))
	*($14 + [376]) = *($14 + [344])
	*($14 + [368]) = *($14 + [336])
	*((($14 + [96]) + [8])) = *($7)
	*($14 + [96]) = *($14 + [496])
	*((($14 + [80]) + [8])) = *($8)
	*($14 + [80]) = *($14 + [464])
	*((($14 + [64]) + [8])) = *($9)
	*($14 + [64]) = *($14 + [432])
	*((($14 + [48]) + [8])) = *($10)
	*($14 + [48]) = *($14 + [416])
	*((($14 + [32]) + [8])) = *($11)
	*($14 + [32]) = *($14 + [400])
	*(($14 + [24])) = *($12)
	*(($14 + [16])) = *($13)
	*($14 + [8]) = *($14 + [376])
	*($14) = *($14 + [368])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($14 + [96])), (int_32 ($14 + [480])), (int_32 $4), (int_32 ($14 + [80])), (int_32 $5), (int_32 ($14 + [448])), (int_32 ($14 + [64])), (int_32 ($14 + [48])), (int_32 ($14 + [32])), (int_32 $6), (int_64 $14), (int_32 $1))
	if ( ((*($14 + [448]) & [1]) == 0) ){ goto $label$2 }
	CALL $276(*($14 + [456]))
	
.LABEL $label$2
	if ( ((*($14 + [480]) & [1]) == 0) ){ goto $label$3 }
	CALL $276(*($14 + [488]))
	
.LABEL $label$3
	if ( ((*($14 + [192]) & [1]) == 0) ){ goto $label$4 }
	CALL $276(*($14 + [200]))
	
.LABEL $label$4
	if ( ((*($14 + [224]) & [1]) == 0) ){ goto $label$5 }
	CALL $276(*($14 + [232]))
	
.LABEL $label$5
	*([0] + [4]) = ($14 + [512])
}

void .FUNC _ZN12thedeosgames9pokerdivsEyN5eosio5assetEyy (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	float_64 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_32 $20
	$20 = (*([0] + [4]) - [320])
	*([0] + [4]) = $20
	CALL require_auth($1)
	$18 = *($2)
	$16 = *($2 + [8])
	CALL eosio_assert(((int_64)$16 == (int_64)1397703940), [1248])
	CALL eosio_assert(((int_64)$1 != (int_64)$4), [1264])
	CALL eosio_assert(((int_64)*($0 + [176]) != (int_64)$4), [1312])
	$16 = (uint_64)$16 >> (uint_64)(int_64)8)
	$14 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$10 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	
.LABEL $label$1
	CALL eosio_assert($10, [32])
	$5 = *(($0 + [2032]))
	$13 = *(($0 + [2036]))
	if ( ((int_32)$13 == (int_32)$5) ){ goto $label$6 }
	$14 = ($13 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$7:
	if ( ((int_64)*(*($14)) == (int_64)2) ){ goto $label$6 }
	$13 = $14
	$10 = ($14 + [-24])
	$14 = $10
	if ( ((int_32)($10 + $6) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$14 = ($0 + [2008])
	if ( ((int_32)$13 == (int_32)$5) ){ goto $label$9 }
	$13 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [56]) == (int_32)$14), [176])
	goto $label$8 
	
.LABEL $label$9
	$13 = [0]
	$10 = CALL db_find_i64(*(($0 + [2008])), *(($0 + [2016])), (int_64)-4293729097406218240, (int_64)2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$8 }
	$13 = CALL $6($14, $10)
	CALL eosio_assert(((int_32)*($13 + [56]) == (int_32)$14), [176])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [3888])
	$14 = [0]
	if ( ((int_64)*($13 + [48]) > (int_64)$18) ){ goto $label$10 }
	$14 = ((int_64)$18 <= (int_64)*($13 + [52]))
	
.LABEL $label$10
	CALL eosio_assert($14, [112])
	CALL eosio_assert((*($13 + [8]) == 0), [144])
	*(($20 + [280])) = [0]
	*($20 + [272]) = (int_64)0
	$12 = (CASTING float_64)(int_64 $18)
	$14 = ((int_64)$4 != (int_64)0)
	$8 = (Rounds 0)(((float_64)((float_64)( (float_64)0.29879999999999995 ? (float_64)0.49799999999999994 : $14 ) * (float_64)$12) / (float_64)(float_64)100))
	$7 = (Rounds 0)(((float_64)((float_64)( (float_64)0.5975999999999999 ? (float_64)0.9959999999999999 : $14 ) * (float_64)$12) / (float_64)(float_64)100))
	$14 = CALL strlen([3936])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$17 }
	*($20 + [272]) = ($14 << [1])
	$10 = (($20 + [272]) | [1])
	if ( $14 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$6 = (($14 + [16]) & [-16])
	$10 = CALL $275($6)
	*($20 + [272]) = ($6 | [1])
	*($20 + [280]) = $10
	*($20 + [276]) = $14
	
.LABEL $label$16
	CALL memcpy($10, [3936], $14)
	
.LABEL $label$15
	*(($10 + $14)) = [0]
	CALL _ZNSt3__19to_stringEy(($20 + [168]), $1)
	$14 = *($20 + [168])
	$10 = ($14 & [1])
	$14 = CALL $279(($20 + [272]), ( *($20 + [176]) ? (($20 + [168]) | [1]) : $10 ), ( *($20 + [172]) ? uint_32($14 >> [1]) : $10 ))
	$10 = ($14 + [8])
	*((($20 + [240]) + [8])) = *($10)
	*($20 + [240]) = *($14)
	*($14) = [0]
	*(($14 + [4])) = [0]
	*($10) = [0]
	if ( ((*($20 + [168]) & [1]) == 0) ){ goto $label$18 }
	CALL $276(*((($20 + [168]) + [8])))
	
.LABEL $label$18
	if ( ((*($20 + [272]) & [1]) == 0) ){ goto $label$19 }
	CALL $276(*($20 + [280]))
	
.LABEL $label$19
	*(($20 + [280])) = [0]
	*($20 + [272]) = (int_64)0
	$14 = CALL strlen([3984])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$22 }
	*($20 + [272]) = ($14 << [1])
	$10 = (($20 + [272]) | [1])
	if ( $14 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$6 = (($14 + [16]) & [-16])
	$10 = CALL $275($6)
	*($20 + [272]) = ($6 | [1])
	*($20 + [280]) = $10
	*($20 + [276]) = $14
	
.LABEL $label$21
	CALL memcpy($10, [3984], $14)
	
.LABEL $label$20
	*(($10 + $14)) = [0]
	CALL _ZNSt3__19to_stringEy(($20 + [168]), $1)
	$14 = *($20 + [168])
	$10 = ($14 & [1])
	$14 = CALL $279(($20 + [272]), ( *($20 + [176]) ? (($20 + [168]) | [1]) : $10 ), ( *($20 + [172]) ? uint_32($14 >> [1]) : $10 ))
	$10 = ($14 + [8])
	*((($20 + [224]) + [8])) = *($10)
	*($20 + [224]) = *($14)
	*($14) = [0]
	*(($14 + [4])) = [0]
	*($10) = [0]
	if ( ((*($20 + [168]) & [1]) == 0) ){ goto $label$23 }
	CALL $276(*((($20 + [168]) + [8])))
	
.LABEL $label$23
	if ( ((*($20 + [272]) & [1]) == 0) ){ goto $label$24 }
	CALL $276(*($20 + [280]))
	
.LABEL $label$24
	$14 = *($13 + [40])
	if ( ($14 == 0) ){ goto $label$25 }
	$11 = ((int_64)*($2) * (int_64)(CASTING uint_64)(uint_32 $14))
	CALL eosio_assert((uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$16 = (int_64)1397704004
	$14 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$10 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$10 = [0]
	
.LABEL $label$26
	CALL eosio_assert($10, [32])
	*(($20 + [216])) = [0]
	*($20 + [208]) = (int_64)0
	$14 = CALL strlen([4032])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$33 }
	*($20 + [208]) = ($14 << [1])
	$10 = (($20 + [208]) | [1])
	if ( $14 ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	$6 = (($14 + [16]) & [-16])
	$10 = CALL $275($6)
	*($20 + [208]) = ($6 | [1])
	*($20 + [216]) = $10
	*($20 + [212]) = $14
	
.LABEL $label$32
	CALL memcpy($10, [4032], $14)
	
.LABEL $label$31
	*(($10 + $14)) = [0]
	$9 = *(($0 + [176]))
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1440]
	$17 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$39 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$10 = ($10 + [165])
	goto $label$37 
	
.LABEL $label$39
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$35
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$34 }
	*($20 + [160]) = $17
	*($20 + [152]) = $9
	$16 = (int_64)0
	$18 = (int_64)59
	$14 = [1776]
	$17 = (int_64)0
	
.LOOP $label$40:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$41 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$43 }
	$10 = ($10 + [165])
	goto $label$42 
	
.LABEL $label$43
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$42
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$41
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$15 | (int_64)$17)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$40 }
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1792]
	$19 = (int_64)0
	
.LOOP $label$44:
	if ( ((uint_64)$16 > (uint_64)(int_64)7) ){ goto $label$49 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$10 = ($10 + [165])
	goto $label$47 
	
.LABEL $label$49
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$48
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$46
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$45
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$19 = ((int_64)$18 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$44 }
	*(($20 + [296])) = (int_64)357812225028
	*($20 + [280]) = $1
	*($20 + [272]) = $9
	*($20 + [288]) = $11
	CALL $295(($20 + [304]), ($20 + [208]))
	$14 = CALL $51(($20 + [168]), ($20 + [152]), $17, $19, ($20 + [272]))
	CALL $43(($20 + [256]), $14)
	$10 = *($20 + [256])
	CALL send_inline($10, (*($20 + [260]) - $10))
	$10 = *($20 + [256])
	if ( ($10 == 0) ){ goto $label$50 }
	*($20 + [260]) = $10
	CALL $276($10)
	
.LABEL $label$50
	$10 = *($14 + [28])
	if ( ($10 == 0) ){ goto $label$51 }
	*(($14 + [32])) = $10
	CALL $276($10)
	
.LABEL $label$51
	$10 = *($14 + [16])
	if ( ($10 == 0) ){ goto $label$52 }
	*(($14 + [20])) = $10
	CALL $276($10)
	
.LABEL $label$52
	if ( ((*($20 + [304]) & [1]) == 0) ){ goto $label$53 }
	CALL $276(*(($20 + [312])))
	
.LABEL $label$53
	if ( ((*($20 + [208]) & [1]) == 0) ){ goto $label$25 }
	CALL $276(*($20 + [216]))
	
.LABEL $label$25
	if ( (*($13 + [28]) == 0) ){ goto $label$54 }
	$6 = *($2)
	if ( (CALL is_account($4) == 0) ){ goto $label$54 }
	*(($20 + [264])) = [0]
	*($20 + [256]) = (int_64)0
	$14 = CALL strlen([4096])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$57 }
	*($20 + [256]) = ($14 << [1])
	$10 = (($20 + [256]) | [1])
	if ( $14 ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$57
	$2 = (($14 + [16]) & [-16])
	$10 = CALL $275($2)
	*($20 + [256]) = ($2 | [1])
	*($20 + [264]) = $10
	*($20 + [260]) = $14
	
.LABEL $label$56
	CALL memcpy($10, [4096], $14)
	
.LABEL $label$55
	*(($10 + $14)) = [0]
	$14 = *(($0 + [172]))
	$10 = *(($13 + [28]))
	CALL eosio_assert([1], [576])
	$12 = ((float_64)(CASTING float_64)(uint_32 $6) * (float_64)((float_64)(CASTING float_64)(uint_32 $10) / (float_64)(CASTING float_64)(uint_32 ((int_32)$14 * (int_32)[100]))))
	$14 = [0]
	$16 = (int_64)1397704004
	
.LOOP $label$60:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$59 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$61 }
	
.LOOP $label$62:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$59 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$62 }
	
.LABEL $label$61
	$10 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$60 }
	goto $label$58 
	
.LABEL $label$59
	$10 = [0]
	
.LABEL $label$58
	CALL eosio_assert($10, [32])
	*(($20 + [200])) = [0]
	*($20 + [184]) = (int_64)-1
	$16 = (int_64)0
	*($20 + [192]) = (int_64)0
	$18 = *(($0 + [176]))
	*($20 + [168]) = $18
	*($20 + [176]) = $4
	$14 = CALL db_find_i64($18, $4, (int_64)3607749779137757184, (int_64)1397704004)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$63 }
	$14 = CALL $13(($20 + [168]), $14)
	CALL eosio_assert(((int_32)*($14 + [16]) == (int_32)($20 + [168])), [176])
	$12 = ( $12 ? ((float_64)$12 + (float_64)$12) : (uint_64)(*($14) <= ((int_64)*(($0 + [172])) * (int_64)*($13 + [32]))) )
	
.LABEL $label$63
	$15 = (int_64)59
	$14 = [1424]
	$17 = (int_64)0
	
.LOOP $label$64:
	if ( ((uint_64)$16 > (uint_64)(int_64)10) ){ goto $label$69 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$68 }
	$10 = ($10 + [165])
	goto $label$67 
	
.LABEL $label$69
	$18 = (int_64)0
	if ( ((int_64)$16 == (int_64)11) ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$68
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$67
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$66
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$65
	$14 = ($14 + [1])
	$15 = ((int_64)$15 + (int_64)-5)
	$17 = ((int_64)$18 | (int_64)$17)
	$16 = ((int_64)$16 + (int_64)1)
	if ( ((int_64)$16 != (int_64)13) ){ goto $label$64 }
	$1 = *(($0 + [176]))
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1440]
	$19 = (int_64)0
	
.LOOP $label$70:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$75 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$74 }
	$10 = ($10 + [165])
	goto $label$73 
	
.LABEL $label$75
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$74
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$73
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$72
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$71
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$19 = ((int_64)$18 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$70 }
	$18 = (Rounds 0)($12)
	CALL eosio_assert((uint_64)(((int_64)$18 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$16 = (int_64)5459781
	$14 = [0]
	
.LOOP $label$78:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$77 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$79 }
	
.LOOP $label$80:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$77 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$80 }
	
.LABEL $label$79
	$10 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$78 }
	goto $label$76 
	
.LABEL $label$77
	$10 = [0]
	
.LABEL $label$76
	CALL eosio_assert($10, [32])
	*(($10 = (($20 + [104]) + [24]))) = (int_64)1397703940
	*($20 + [112]) = $4
	*($20 + [120]) = $18
	*($20 + [104]) = *(($0 + [176]))
	CALL $295(($20 + [136]), ($20 + [256]))
	*(($14 = CALL $275([16]))) = $1
	*($14 + [8]) = $19
	*($20 + [152]) = $14
	$14 = ($14 + [16])
	*($20 + [160]) = $14
	*($20 + [156]) = $14
	*($20 + [272]) = *($20 + [104])
	*($20 + [280]) = *($20 + [112])
	*((($20 + [272]) + [24])) = *($10)
	*($20 + [288]) = *($20 + [120])
	$14 = (($20 + [104]) + [40])
	*(($10 = (($20 + [272]) + [40]))) = *($14)
	*($20 + [304]) = *($20 + [136])
	*($20 + [136]) = [0]
	*(($20 + [140])) = [0]
	*($14) = [0]
	CALL $40($17, (int_64)-3617168760277827584, ($20 + [152]), ($20 + [272]))
	if ( ((*($20 + [304]) & [1]) == 0) ){ goto $label$81 }
	CALL $276(*($10))
	
.LABEL $label$81
	$14 = *($20 + [152])
	if ( ($14 == 0) ){ goto $label$82 }
	*($20 + [156]) = $14
	CALL $276($14)
	
.LABEL $label$82
	if ( ((*(($20 + [136])) & [1]) == 0) ){ goto $label$83 }
	CALL $276(*(($20 + [144])))
	
.LABEL $label$83
	$13 = *($20 + [192])
	if ( ($13 == 0) ){ goto $label$84 }
	$6 = ($20 + [196])
	$14 = *($6)
	if ( ((int_32)$14 == (int_32)$13) ){ goto $label$86 }
	
.LOOP $label$87:
	$14 = ($14 + [-24])
	$10 = *($14)
	*($14) = [0]
	if ( ($10 == 0) ){ goto $label$88 }
	CALL $276($10)
	
.LABEL $label$88
	if ( ((int_32)$13 != (int_32)$14) ){ goto $label$87 }
	$14 = *(($20 + [192]))
	goto $label$85 
	
.LABEL $label$86
	$14 = $13
	
.LABEL $label$85
	*($6) = $13
	CALL $276($14)
	
.LABEL $label$84
	if ( ((*($20 + [256]) & [1]) == 0) ){ goto $label$54 }
	CALL $276(*($20 + [264]))
	
.LABEL $label$54
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1424]
	$17 = (int_64)0
	
.LOOP $label$89:
	if ( ((uint_64)$16 > (uint_64)(int_64)10) ){ goto $label$94 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$93 }
	$10 = ($10 + [165])
	goto $label$92 
	
.LABEL $label$94
	$18 = (int_64)0
	if ( ((int_64)$16 == (int_64)11) ){ goto $label$91 }
	goto $label$90 
	
.LABEL $label$93
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$92
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$91
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$90
	$14 = ($14 + [1])
	$15 = ((int_64)$15 + (int_64)-5)
	$17 = ((int_64)$18 | (int_64)$17)
	$16 = ((int_64)$16 + (int_64)1)
	if ( ((int_64)$16 != (int_64)13) ){ goto $label$89 }
	$4 = *(($0 + [176]))
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1440]
	$19 = (int_64)0
	
.LOOP $label$95:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$100 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$99 }
	$10 = ($10 + [165])
	goto $label$98 
	
.LABEL $label$100
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$97 }
	goto $label$96 
	
.LABEL $label$99
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$98
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$97
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$96
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$19 = ((int_64)$18 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$95 }
	$16 = (int_64)0
	$18 = (int_64)59
	$14 = [1456]
	$1 = (int_64)0
	
.LOOP $label$101:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$102 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$104 }
	$10 = ($10 + [165])
	goto $label$103 
	
.LABEL $label$104
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$103
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$102
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$1 = ((int_64)$15 | (int_64)$1)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$101 }
	CALL eosio_assert((uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$16 = (int_64)5459781
	$14 = [0]
	
.LOOP $label$107:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$106 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$108 }
	
.LOOP $label$109:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$106 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$109 }
	
.LABEL $label$108
	$10 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$107 }
	goto $label$105 
	
.LABEL $label$106
	$10 = [0]
	
.LABEL $label$105
	CALL eosio_assert($10, [32])
	*(($10 = (($20 + [56]) + [24]))) = (int_64)1397703940
	*($20 + [64]) = $1
	*($20 + [72]) = $7
	*($20 + [56]) = *(($0 + [176]))
	CALL $295(($20 + [88]), ($20 + [240]))
	*(($14 = CALL $275([16]))) = $4
	*($14 + [8]) = $19
	*($20 + [168]) = $14
	$14 = ($14 + [16])
	*($20 + [176]) = $14
	*($20 + [172]) = $14
	*($20 + [272]) = *($20 + [56])
	*($20 + [280]) = *($20 + [64])
	*((($20 + [272]) + [24])) = *($10)
	*($20 + [288]) = *($20 + [72])
	$14 = (($20 + [56]) + [40])
	*(($10 = (($20 + [272]) + [40]))) = *($14)
	*($20 + [304]) = *($20 + [88])
	*($20 + [88]) = [0]
	*(($20 + [92])) = [0]
	*($14) = [0]
	CALL $40($17, (int_64)-3617168760277827584, ($20 + [168]), ($20 + [272]))
	if ( ((*($20 + [304]) & [1]) == 0) ){ goto $label$110 }
	CALL $276(*($10))
	
.LABEL $label$110
	$14 = *($20 + [168])
	if ( ($14 == 0) ){ goto $label$111 }
	*($20 + [172]) = $14
	CALL $276($14)
	
.LABEL $label$111
	if ( ((*(($20 + [88])) & [1]) == 0) ){ goto $label$112 }
	CALL $276(*(($20 + [96])))
	
.LABEL $label$112
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1424]
	$17 = (int_64)0
	
.LOOP $label$113:
	if ( ((uint_64)$16 > (uint_64)(int_64)10) ){ goto $label$118 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$117 }
	$10 = ($10 + [165])
	goto $label$116 
	
.LABEL $label$118
	$18 = (int_64)0
	if ( ((int_64)$16 == (int_64)11) ){ goto $label$115 }
	goto $label$114 
	
.LABEL $label$117
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$116
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$115
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$114
	$14 = ($14 + [1])
	$15 = ((int_64)$15 + (int_64)-5)
	$17 = ((int_64)$18 | (int_64)$17)
	$16 = ((int_64)$16 + (int_64)1)
	if ( ((int_64)$16 != (int_64)13) ){ goto $label$113 }
	$4 = *(($0 + [176]))
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1440]
	$19 = (int_64)0
	
.LOOP $label$119:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$124 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$123 }
	$10 = ($10 + [165])
	goto $label$122 
	
.LABEL $label$124
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$121 }
	goto $label$120 
	
.LABEL $label$123
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$122
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$121
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$120
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$19 = ((int_64)$18 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$119 }
	$16 = (int_64)0
	$18 = (int_64)59
	$14 = [1472]
	$1 = (int_64)0
	
.LOOP $label$125:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$126 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$128 }
	$10 = ($10 + [165])
	goto $label$127 
	
.LABEL $label$128
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$127
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$126
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$1 = ((int_64)$15 | (int_64)$1)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$125 }
	CALL eosio_assert((uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$16 = (int_64)5459781
	$14 = [0]
	
.LOOP $label$131:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$130 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$132 }
	
.LOOP $label$133:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$130 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$133 }
	
.LABEL $label$132
	$10 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$131 }
	goto $label$129 
	
.LABEL $label$130
	$10 = [0]
	
.LABEL $label$129
	CALL eosio_assert($10, [32])
	*(($10 = (($20 + [8]) + [24]))) = (int_64)1397703940
	*($20 + [16]) = $1
	*($20 + [24]) = $8
	*($20 + [8]) = *(($0 + [176]))
	CALL $295(($20 + [40]), ($20 + [224]))
	*(($14 = CALL $275([16]))) = $4
	*($14 + [8]) = $19
	*($20 + [168]) = $14
	$14 = ($14 + [16])
	*($20 + [176]) = $14
	*($20 + [172]) = $14
	*($20 + [272]) = *($20 + [8])
	*($20 + [280]) = *($20 + [16])
	*((($20 + [272]) + [24])) = *($10)
	*($20 + [288]) = *($20 + [24])
	$14 = (($20 + [8]) + [40])
	*(($10 = (($20 + [272]) + [40]))) = *($14)
	*($20 + [304]) = *($20 + [40])
	*($20 + [40]) = [0]
	*(($20 + [44])) = [0]
	*($14) = [0]
	CALL $40($17, (int_64)-3617168760277827584, ($20 + [168]), ($20 + [272]))
	if ( ((*($20 + [304]) & [1]) == 0) ){ goto $label$134 }
	CALL $276(*($10))
	
.LABEL $label$134
	$14 = *($20 + [168])
	if ( ($14 == 0) ){ goto $label$135 }
	*($20 + [172]) = $14
	CALL $276($14)
	
.LABEL $label$135
	if ( ((*(($20 + [40])) & [1]) == 0) ){ goto $label$136 }
	CALL $276(*(($20 + [48])))
	
.LABEL $label$136
	if ( ((*($20 + [224]) & [1]) == 0) ){ goto $label$137 }
	CALL $276(*($20 + [232]))
	
.LABEL $label$137
	if ( ((*($20 + [240]) & [1]) == 0) ){ goto $label$138 }
	CALL $276(*($20 + [248]))
	
.LABEL $label$138
	*([0] + [4]) = ($20 + [320])
	return (unreachable)
	
.LABEL $label$14
	CALL $277(($20 + [272]))
	
.LABEL $label$13
	CALL $277(($20 + [272]))
	
.LABEL $label$12
	CALL $277(($20 + [208]))
	
.LABEL $label$11
	CALL $277(($20 + [256]))
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $168 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [3872])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $41($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [800])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $245 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $167(*($1), ($0 + [32]))
	*($4 + [8]) = $0
	CALL $246(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $279 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $280($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

void .FUNC $175 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $242 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	$2 = *($1)
	CALL $295($4, ($1 + [8]))
	$0 = *($0 + [4])
	$3 = *($0 + [4])
	$1 = (*(*($0)) + int_32($3 >> [1]))
	$0 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	CALL $295(($4 + [16]), $4)
	CALL void $1((int_32 $2), (int_64 ($4 + [16])), (int_32 $0))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $276(*($4 + [24]))
	
.LABEL $label$2
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	CALL $276(*($4 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [32])
}

void .FUNC $288 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL strlen($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($3 + $4)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	$5 = *($1)
	$6 = *($1 + [8])
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($8 + [16]) & [-16])
	$8 = CALL $275($7)
	*($0) = ($7 | [1])
	*(($0 + [8])) = $8
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($8, ( $6 ? ($1 + [1]) : ($5 & [1]) ), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	CALL $279($0, $2, $4)
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $243 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($4 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [32])
	*($0 + [32]) = (int_64)0
	*(($0 + [40])) = (int_64)0
	*($0 + [48]) = (int_64)0
	*(($4 = ($0 + [56]))) = (int_64)1398362884
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [32])
	*($0 + [64]) = (int_64)0
	*(($0 + [72])) = (int_64)0
	*($0 + [80]) = (int_64)0
	*(($4 = ($0 + [88]))) = (int_64)1398362884
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$5 = [0]
	
.LABEL $label$11
	CALL eosio_assert($5, [32])
	*(($4 = ($0 + [104]))) = (int_64)1398362884
	*($0 + [96]) = (int_64)0
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$5 = [0]
	
.LABEL $label$16
	CALL eosio_assert($5, [32])
	*(($4 = ($0 + [120]))) = (int_64)1398362884
	*($0 + [112]) = (int_64)0
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$5 = [0]
	
.LABEL $label$21
	CALL eosio_assert($5, [32])
	*(($0 + [168])) = (int_64)0
	*(($0 + [160])) = (int_64)0
	*(($0 + [152])) = (int_64)0
	*($0 + [144]) = (int_64)0
	*($0 + [128]) = (int_64)0
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $245(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [768])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $275([32])
	$6 = CALL $59($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $60(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $276($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $59 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [32])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $272([5888], $0)
}

void .FUNC $270 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($0 + [24]), *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($0 + [28]), *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
}

void .FUNC $277 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $240 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [224])
	*([0] + [4]) = $7
	*(($7 + [108])) = *(($1 + [28]))
	*(($5 = (($7 + [96]) + [8]))) = *(($1 + [24]))
	*($7 + [96]) = *($1 + [16])
	*($7 + [100]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	*(($6 = (($7 + [80]) + [8]))) = *(($1 + [40]))
	*($7 + [80]) = *($1 + [32])
	CALL $295(($7 + [64]), ($1 + [48]))
	CALL $295(($7 + [48]), ($1 + [60]))
	CALL $295(($7 + [32]), ($1 + [72]))
	$4 = *($1 + [88])
	*((($7 + [128]) + [8])) = *($6)
	*((($7 + [112]) + [8])) = *($5)
	*($7 + [128]) = *($7 + [80])
	*($7 + [112]) = *($7 + [96])
	$1 = *($0 + [4])
	$5 = *($1 + [4])
	$0 = (*(*($0)) + int_32($5 >> [1]))
	$1 = *($1)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($5 = (($7 + [208]) + [8]))) = *((($7 + [112]) + [8]))
	*(($6 = (($7 + [192]) + [8]))) = *((($7 + [128]) + [8]))
	*($7 + [208]) = *($7 + [112])
	*($7 + [192]) = *($7 + [128])
	CALL $295(($7 + [176]), ($7 + [64]))
	CALL $295(($7 + [160]), ($7 + [48]))
	CALL $295(($7 + [144]), ($7 + [32]))
	*((($7 + [16]) + [8])) = *($5)
	*(($7 + [8])) = *($6)
	*($7 + [16]) = *($7 + [208])
	*($7) = *($7 + [192])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($7 + [16])), (int_32 $7), (int_32 ($7 + [176])), (int_32 ($7 + [160])), (int_32 ($7 + [144])), (int_32 $4), (int_64 $1))
	if ( ((*($7 + [144]) & [1]) == 0) ){ goto $label$2 }
	CALL $276(*($7 + [152]))
	
.LABEL $label$2
	if ( ((*($7 + [160]) & [1]) == 0) ){ goto $label$3 }
	CALL $276(*($7 + [168]))
	
.LABEL $label$3
	if ( ((*($7 + [176]) & [1]) == 0) ){ goto $label$4 }
	CALL $276(*($7 + [184]))
	
.LABEL $label$4
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$5 }
	CALL $276(*($7 + [40]))
	
.LABEL $label$5
	if ( ((*($7 + [48]) & [1]) == 0) ){ goto $label$6 }
	CALL $276(*($7 + [56]))
	
.LABEL $label$6
	if ( ((*($7 + [64]) & [1]) == 0) ){ goto $label$7 }
	CALL $276(*($7 + [72]))
	
.LABEL $label$7
	*([0] + [4]) = ($7 + [224])
}

int_32 .FUNC $275 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [14380])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [14272])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [14080]
	$1 = (((int_32)$2 * (int_32)[12]) + [14080])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

void .FUNC _ZN12thedeosgames15slots_to_stringENS_4SlotES0_S0_ (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	CALL _ZN12thedeosgames14slot_to_stringENS_4SlotE(($7 + [32]), $7, $2)
	$2 = CALL $281(($7 + [32]), [1968])
	$5 = ($2 + [8])
	*((($7 + [48]) + [8])) = *($5)
	*($7 + [48]) = *($2)
	*($2) = [0]
	*(($2 + [4])) = [0]
	*($5) = [0]
	CALL _ZN12thedeosgames14slot_to_stringENS_4SlotE(($7 + [16]), $7, $3)
	$2 = *($7 + [16])
	$3 = ($2 & [1])
	$2 = CALL $279(($7 + [48]), ( *($7 + [24]) ? (($7 + [16]) | [1]) : $3 ), ( *($7 + [20]) ? uint_32($2 >> [1]) : $3 ))
	$3 = ($2 + [8])
	*((($7 + [64]) + [8])) = *($3)
	*($7 + [64]) = *($2)
	*($2) = [0]
	*(($2 + [4])) = [0]
	*($3) = [0]
	$2 = CALL $281(($7 + [64]), [1968])
	$3 = ($2 + [8])
	*((($7 + [80]) + [8])) = *($3)
	*($7 + [80]) = *($2)
	*($2) = [0]
	*(($2 + [4])) = [0]
	*($3) = [0]
	CALL _ZN12thedeosgames14slot_to_stringENS_4SlotE($7, $7, $4)
	$2 = *($7)
	$4 = ($2 & [1])
	$2 = CALL $279(($7 + [80]), ( *($7 + [8]) ? ($7 | [1]) : $4 ), ( *($7 + [4]) ? uint_32($2 >> [1]) : $4 ))
	$6 = *($2)
	*($2) = (int_64)0
	*($0) = $6
	$2 = ($2 + [8])
	*(($0 + [8])) = *($2)
	*($2) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$1 }
	CALL $276(*(($7 + [8])))
	
.LABEL $label$1
	if ( ((*($7 + [80]) & [1]) == 0) ){ goto $label$2 }
	CALL $276(*($7 + [88]))
	
.LABEL $label$2
	if ( ((*($7 + [64]) & [1]) == 0) ){ goto $label$3 }
	CALL $276(*($7 + [72]))
	
.LABEL $label$3
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$4 }
	CALL $276(*(($7 + [24])))
	
.LABEL $label$4
	if ( ((*($7 + [48]) & [1]) == 0) ){ goto $label$5 }
	CALL $276(*($7 + [56]))
	
.LABEL $label$5
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL $276(*($7 + [40]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [96])
}

int_32 .FUNC $51 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $275([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $41($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $42(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

void .FUNC $52 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = *($0)
	$9 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $275(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$9 = ($8 + ((int_32)$9 * (int_32)[40]))
	$8 = CALL $51($9, $1, *($2), *($3), $4)
	$6 = ($8 + [40])
	$7 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$6 }
	$4 = ([0] - $7)
	$7 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($7 + [-12]))
	*(($8 + [-40])) = *(($7 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($2 = ($8 + [-16]))) = [0]
	$3 = ($7 + [-4])
	*($1) = *($3)
	*(($8 + [-20])) = *($7)
	$1 = ($7 + [4])
	*($2) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($3) = (int_64)0
	*(($2 = ($8 + [-4]))) = [0]
	$3 = ($7 + [8])
	*($1) = *($3)
	*(($8 + [-8])) = *(($7 + [12]))
	$8 = ($7 + [16])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$9 = ($9 + [-40])
	$8 = $9
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $4) != (int_32)[-20]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $7
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	$9 = ([0] - $1)
	$7 = ($7 + [-24])
	
.LOOP $label$9:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $276($8)
	
.LABEL $label$10
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$11 }
	*(($7 + [4])) = $8
	CALL $276($8)
	
.LABEL $label$11
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $276($1)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $64($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $41($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $65($4, $1)
	CALL $67(CALL $66(CALL $66($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $54 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $276($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $276($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $276($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $276($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $276($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $276($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $276($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $276($5)
	
.LABEL $label$12
	return $0
}

void .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [32])
	$2 = *(($1 + [36]))
	*($5 + [24]) = ($5 + [16])
	*($5 + [16]) = [32]
	$2 = ( $2 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($2 + [32])
	$4 = (CASTING uint_64)(uint_32 $2)
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	*($5 + [16]) = $3
	*($5) = $1
	CALL $61($5, ($5 + [24]))
	$3 = *($5 + [16])
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $41($0, $3)
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$2 = [0]
	$3 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = $2
	*($5 + [16]) = $5
	*($5 + [24]) = $1
	CALL $62(($5 + [24]), ($5 + [16]))
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $56 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $275(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $275([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	CALL $55(($8 + [28]), $4)
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $276($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $276($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $276($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $57 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [176])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $58($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [176])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $247 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [80]), *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [88]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [96]), *($2 + [4]), [8])
	$3 = (*($2 + [4]) + [8])
	*($2 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $3) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [104]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [112]), *($2 + [4]), [8])
	$3 = (*($2 + [4]) + [8])
	*($2 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $3) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [120]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [128]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[31]), [800])
	CALL memcpy(($0 + [144]), *($2 + [4]), [32])
	*($2 + [4]) = (*($2 + [4]) + [32])
}

int_32 .FUNC $173 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN12thedeosgames12nupdateunstkEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$19 = (*([0] + [4]) - [80])
	*([0] + [4]) = $19
	CALL require_auth(*($0 + [176]))
	$1 = ($0 + [8])
	$15 = [0]
	$14 = [0]
	$17 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)-4151882783574196224, (int_64)0)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$1 }
	$14 = CALL $133($1, $17)
	
.LABEL $label$1
	$2 = ((int_32)$14 != (int_32)[0])
	CALL eosio_assert($2, [3264])
	$3 = CALL current_time()
	*($19 + [8]) = [0]
	$6 = *(($0 + [96]))
	*($19) = (int_64)0
	$17 = CALL db_lowerbound_i64(*($0 + [88]), $6, (int_64)-3102531239517618176, (int_64)0)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$2 }
	$4 = ($0 + [88])
	$17 = CALL $20($4, $17)
	$6 = ((int_64)((uint_64)$3 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$9 = [0]
	$8 = ($19 + [8])
	$15 = [0]
	
.LOOP $label$4:
	if ( ((uint_64)((int_64)*($17 + [24]) + (int_64)86400) >= (uint_64)$6) ){ goto $label$5 }
	$18 = *($19 + [4])
	if ( ((int_32)$18 == (int_32)*($8)) ){ goto $label$7 }
	*($18) = *($17)
	*($19 + [4]) = ($18 + [8])
	goto $label$6 
	
.LABEL $label$7
	CALL $92($19, $17)
	
.LABEL $label$6
	$15 = (CASTING uint_32)(uint_64 ((int_64)*($17 + [8]) + (int_64)(CASTING uint_64)(uint_32 $15)))
	if ( ((int_32)$9 > (int_32)[20]) ){ goto $label$3 }
	$9 = ($9 + [1])
	
.LABEL $label$5
	CALL eosio_assert([1], [2496])
	$17 = CALL db_next_i64(*($17 + [36]), ($19 + [16]))
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$3 }
	$17 = CALL $20($4, $17)
	goto $label$4 
	
.LABEL $label$3
	$5 = *($19 + [4])
	$16 = *($19)
	if ( ((int_32)$16 == (int_32)$5) ){ goto $label$2 }
	$10 = ($0 + [112])
	$11 = ($0 + [116])
	$12 = ($0 + [96])
	$13 = ($0 + [88])
	
.LOOP $label$8:
	$6 = *($16)
	$7 = *($10)
	$18 = *($11)
	if ( ((int_32)$18 == (int_32)$7) ){ goto $label$9 }
	$17 = ($18 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$10:
	if ( ((int_64)*(*($17)) == (int_64)$6) ){ goto $label$9 }
	$18 = $17
	$9 = ($17 + [-24])
	$17 = $9
	if ( ((int_32)($9 + $8) != (int_32)[-24]) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$18 == (int_32)$7) ){ goto $label$13 }
	$17 = *(($18 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [32]) == (int_32)$4), [176])
	if ( $17 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$17 = CALL db_find_i64(*($13), *($12), (int_64)-3102531239517618176, $6)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$11 }
	$17 = CALL $20($4, $17)
	CALL eosio_assert(((int_32)*($17 + [32]) == (int_32)$4), [176])
	
.LABEL $label$12
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$9 = CALL db_next_i64(*($17 + [36]), ($19 + [16]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$14 }
	CALL $20($4, $9)
	
.LABEL $label$14
	CALL $153($4, $17)
	
.LABEL $label$11
	$16 = ($16 + [8])
	if ( ((int_32)$16 != (int_32)$5) ){ goto $label$8 }
	
.LABEL $label$2
	CALL eosio_assert($2, [288])
	CALL eosio_assert(((int_32)*($14 + [48]) == (int_32)$1), [336])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$14()), [384])
	*($14 + [32]) = (int_64))(*($14 + [32]) - (CASTING int_64)(int_32 $15))
	$6 = *($14)
	CALL eosio_assert([1], [448])
	*($19 + [72]) = (($19 + [16]) + [44])
	*($19 + [68]) = ($19 + [16])
	*($19 + [64]) = ($19 + [16])
	CALL $134(($19 + [64]), $14)
	CALL db_update_i64(*($14 + [52]), (int_64)0, ($19 + [16]), [44])
	$17 = ($0 + [24])
	if ( (uint_64)($6 <= *($17)) ){ goto $label$15 }
	*($17) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	$17 = *($19)
	if ( ($17 == 0) ){ goto $label$16 }
	*($19 + [4]) = $17
	CALL $276($17)
	
.LABEL $label$16
	*([0] + [4]) = ($19 + [80])
}

void .FUNC $153 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $276($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $276($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $150 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $276($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $276($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC _ZN12thedeosgames11nupdatestkwEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	*([0] + [4]) = $10
	CALL require_auth(*($0 + [176]))
	$6 = [0]
	$9 = CALL db_lowerbound_i64(*($0 + [48]), *(($0 + [56])), (int_64)-4152008587998134272, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$2 = ($0 + [48])
	$9 = CALL $19($2, $9)
	$3 = ($10 + [40])
	$6 = [0]
	$8 = ($10 + [56])
	$0 = ($0 + [64])
	
.LOOP $label$2:
	$4 = *($9 + [24])
	if ( ((int_64)$4 < (int_64)1) ){ goto $label$3 }
	$7 = *(($9 + [32]))
	CALL eosio_assert(((int_32)*($9 + [40]) == (int_32)$2), [336])
	CALL eosio_assert(((int_64)*($2) == (int_64)CALL $fimport$14()), [384])
	$5 = *($9)
	CALL eosio_assert(((int_64)$7 == (int_64)*(($9 + [16]))), [656])
	$4 = ((int_64)*($9 + [8]) + (int_64)$4)
	*($9 + [8]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [704])
	CALL eosio_assert(((int_64)*($9 + [8]) < (int_64)4611686018427387904), [736])
	*(($9 + [24])) = (int_64)0
	CALL eosio_assert(((int_64)$5 == (int_64)*($9)), [448])
	*($8) = $3
	*($10 + [52]) = $10
	*($10 + [48]) = $10
	CALL $136(($10 + [48]), $9)
	CALL db_update_i64(*($9 + [44]), (int_64)0, $10, [40])
	if ( (uint_64)($5 <= *($0)) ){ goto $label$4 }
	*($0) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$6 = ($6 + [1])
	
.LABEL $label$3
	if ( ((uint_32)$6 > (uint_32)$1) ){ goto $label$1 }
	CALL eosio_assert([1], [2496])
	$9 = CALL db_next_i64(*($9 + [44]), $10)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$1 }
	$9 = CALL $19($2, $9)
	goto $label$2 
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$6 > (int_32)[0]), [3712])
	*([0] + [4]) = ($10 + [64])
}

void .FUNC $156 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [8])
	$5 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([-8] - $5)
	$4 = (CASTING uint_64)(uint_32 $5)
	$2 = ($1 + [8])
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	$5 = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $41($0, ([0] - $3))
	$5 = *(($0 + [4]))
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	
.LABEL $label$2
	*($6) = $3
	*($6 + [8]) = $5
	CALL eosio_assert(((int_32)($5 - $3) > (int_32)[7]), [640])
	CALL memcpy($3, $1, [8])
	*($6 + [4]) = ($3 + [8])
	CALL $46($6, $2)
	*([0] + [4]) = ($6 + [16])
}

void .FUNC _ZN12thedeosgames11resolvegameEy11checksum256 (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [96])
	*([0] + [4]) = $11
	CALL require_auth(*($0 + [176]))
	$3 = *($0 + [176])
	$6 = (int_64)0
	$5 = (int_64)59
	$0 = [1440]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$6 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	$6 = (int_64)0
	$8 = (int_64)59
	$0 = [3760]
	$9 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$8 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$4 = ($4 + [165])
	goto $label$9 
	
.LABEL $label$10
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$8
	$0 = ($0 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$5 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$0 = [3808]
	$10 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$16 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$4 = ($4 + [165])
	goto $label$14 
	
.LABEL $label$16
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$12
	$0 = ($0 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$10 = ((int_64)$8 | (int_64)$10)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$11 }
	*(($11 + [44])) = *(($2 + [28]))
	*(($11 + [40])) = *(($2 + [24]))
	*(($11 + [36])) = *(($2 + [20]))
	*(($11 + [32])) = *(($2 + [16]))
	*(($11 + [28])) = *(($2 + [12]))
	*(($11 + [24])) = *(($2 + [8]))
	*(($11 + [20])) = *(($2 + [4]))
	*($11) = $1
	*($11 + [16]) = *($2)
	*($11 + [64]) = $10
	*($11 + [56]) = $9
	*(($0 = CALL $275([16]))) = $3
	*($0 + [8]) = $7
	*(($4 = (($11 + [56]) + [32]))) = [0]
	$2 = ($0 + [16])
	*((($11 + [56]) + [24])) = $2
	*((($11 + [56]) + [20])) = $2
	*($11 + [72]) = $0
	*($11 + [84]) = [0]
	*((($11 + [56]) + [36])) = [0]
	CALL $41((($11 + [56]) + [28]), [40])
	$0 = *($11 + [84])
	$4 = (*($4) - $0)
	CALL eosio_assert(((int_32)$4 > (int_32)[7]), [640])
	CALL memcpy($0, $11, [8])
	CALL eosio_assert(((int_32)($4 + [-8]) > (int_32)[31]), [640])
	CALL memcpy(($0 + [8]), ($11 + [16]), [32])
	CALL $43($11, ($11 + [56]))
	$0 = *($11)
	CALL send_inline($0, (*($11 + [4]) - $0))
	$0 = *($11)
	if ( ($0 == 0) ){ goto $label$17 }
	*($11 + [4]) = $0
	CALL $276($0)
	
.LABEL $label$17
	$0 = *($11 + [84])
	if ( ($0 == 0) ){ goto $label$18 }
	*(($11 + [88])) = $0
	CALL $276($0)
	
.LABEL $label$18
	$0 = *($11 + [72])
	if ( ($0 == 0) ){ goto $label$19 }
	*(($11 + [76])) = $0
	CALL $276($0)
	
.LABEL $label$19
	*([0] + [4]) = ($11 + [96])
}

void .FUNC _ZN12thedeosgames10pokerstartEyN5eosio5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [64])
	*([0] + [4]) = $16
	$4 = *(($0 + [2032]))
	$8 = *(($0 + [2036]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$1 }
	$9 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($9)) == (int_64)2) ){ goto $label$1 }
	$8 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$7 = ($0 + [2008])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$9 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [56]) == (int_32)$7), [176])
	goto $label$3 
	
.LABEL $label$4
	$9 = [0]
	$8 = CALL db_find_i64(*(($0 + [2008])), *(($0 + [2016])), (int_64)-4293729097406218240, (int_64)2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $6($7, $8)
	CALL eosio_assert(((int_32)*($9 + [56]) == (int_32)$7), [176])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [64])
	$7 = [0]
	$11 = *($2)
	if ( ((int_64)*($9 + [48]) > (int_64)$11) ){ goto $label$5 }
	$7 = ((int_64)$11 <= (int_64)*($9 + [52]))
	
.LABEL $label$5
	CALL eosio_assert($7, [112])
	CALL eosio_assert((*($9 + [8]) == 0), [144])
	$6 = *($0 + [176])
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1440]
	$12 = (int_64)0
	
.LOOP $label$6:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$11 }
	$7 = *($9)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [165])
	goto $label$9 
	
.LABEL $label$11
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$8
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$7
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$6 }
	$11 = (int_64)0
	$13 = (int_64)59
	$9 = [3760]
	$14 = (int_64)0
	
.LOOP $label$12:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$13 }
	$7 = *($9)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$7 = ($7 + [165])
	goto $label$14 
	
.LABEL $label$15
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$13
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$14 = ((int_64)$10 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$12 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [3776]
	$15 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$11 > (uint_64)(int_64)8) ){ goto $label$21 }
	$7 = *($9)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$7 = ($7 + [165])
	goto $label$19 
	
.LABEL $label$21
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$17
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$16 }
	*(($16 + [20])) = *(($2 + [12]))
	*(($8 = ($16 + [16]))) = *(($2 + [8]))
	*(($16 + [12])) = *(($2 + [4]))
	*($16) = $1
	*($16 + [8]) = *($2)
	*($16 + [24]) = $14
	*($16 + [32]) = $15
	*(($9 = CALL $275([16]))) = $6
	*($9 + [8]) = $12
	*(($7 = ($16 + [56]))) = [0]
	$5 = ($9 + [16])
	*((($16 + [24]) + [24])) = $5
	*((($16 + [24]) + [20])) = $5
	*($16 + [40]) = $9
	*($16 + [52]) = [0]
	*(($16 + [60])) = [0]
	CALL $41(($16 + [52]), [24])
	$9 = *($16 + [52])
	$7 = (*($7) - $9)
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [640])
	CALL memcpy($9, $16, [8])
	CALL eosio_assert(((int_32)($7 + [-8]) > (int_32)[7]), [640])
	CALL memcpy(($9 + [8]), ($16 + [8]), [8])
	CALL eosio_assert(((int_32)($7 + [-16]) > (int_32)[7]), [640])
	CALL memcpy(($9 + [16]), $8, [8])
	CALL $43($16, ($16 + [24]))
	$9 = *($16)
	CALL send_inline($9, (*($16 + [4]) - $9))
	$9 = *($16)
	if ( ($9 == 0) ){ goto $label$22 }
	*($16 + [4]) = $9
	CALL $276($9)
	
.LABEL $label$22
	$9 = *($16 + [52])
	if ( ($9 == 0) ){ goto $label$23 }
	*(($16 + [56])) = $9
	CALL $276($9)
	
.LABEL $label$23
	$9 = *($16 + [40])
	if ( ($9 == 0) ){ goto $label$24 }
	*(($16 + [44])) = $9
	CALL $276($9)
	
.LABEL $label$24
	*([0] + [4]) = ($16 + [64])
}

void .FUNC _ZN12thedeosgames9pokerholdEyNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [64])
	*([0] + [4]) = $11
	CALL require_auth($1)
	$3 = *($0 + [176])
	$6 = (int_64)0
	$5 = (int_64)59
	$0 = [1440]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$6 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	$6 = (int_64)0
	$8 = (int_64)59
	$0 = [3760]
	$9 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$8 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$4 = ($4 + [165])
	goto $label$9 
	
.LABEL $label$10
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$8
	$0 = ($0 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$5 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$0 = [3792]
	$10 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$6 > (uint_64)(int_64)3) ){ goto $label$16 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$4 = ($4 + [165])
	goto $label$14 
	
.LABEL $label$16
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$12
	$0 = ($0 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$10 = ((int_64)$8 | (int_64)$10)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$11 }
	*($11) = $1
	CALL $295(($11 + [8]), $2)
	*($11 + [32]) = $10
	*($11 + [24]) = $9
	*(($0 = CALL $275([16]))) = $3
	*($0 + [8]) = $7
	$4 = ($0 + [16])
	*(($11 + [48])) = $4
	*(($11 + [44])) = $4
	*($11 + [40]) = $0
	CALL $156(($11 + [52]), $11)
	if ( ((*($11 + [8]) & [1]) == 0) ){ goto $label$17 }
	CALL $276(*(($11 + [16])))
	
.LABEL $label$17
	CALL $43($11, ($11 + [24]))
	$0 = *($11)
	CALL send_inline($0, (*($11 + [4]) - $0))
	$0 = *($11)
	if ( ($0 == 0) ){ goto $label$18 }
	*($11 + [4]) = $0
	CALL $276($0)
	
.LABEL $label$18
	$0 = *($11 + [52])
	if ( ($0 == 0) ){ goto $label$19 }
	*(($11 + [56])) = $0
	CALL $276($0)
	
.LABEL $label$19
	$0 = *($11 + [40])
	if ( ($0 == 0) ){ goto $label$20 }
	*(($11 + [44])) = $0
	CALL $276($0)
	
.LABEL $label$20
	*([0] + [4]) = ($11 + [64])
}

void .FUNC _ZN12thedeosgames12resolve2gameEy11checksum256 (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [96])
	*([0] + [4]) = $11
	CALL require_auth(*($0 + [176]))
	$3 = *($0 + [176])
	$6 = (int_64)0
	$5 = (int_64)59
	$0 = [1440]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$6 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	$6 = (int_64)0
	$8 = (int_64)59
	$0 = [3760]
	$9 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$8 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$4 = ($4 + [165])
	goto $label$9 
	
.LABEL $label$10
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$8
	$0 = ($0 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$5 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$7 }
	$6 = (int_64)0
	$8 = (int_64)59
	$0 = [3824]
	$10 = (int_64)0
	
.LOOP $label$11:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$12 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$4 = ($4 + [165])
	goto $label$13 
	
.LABEL $label$14
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$12
	$0 = ($0 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$10 = ((int_64)$5 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$11 }
	*(($11 + [44])) = *(($2 + [28]))
	*(($11 + [40])) = *(($2 + [24]))
	*(($11 + [36])) = *(($2 + [20]))
	*(($11 + [32])) = *(($2 + [16]))
	*(($11 + [28])) = *(($2 + [12]))
	*(($11 + [24])) = *(($2 + [8]))
	*(($11 + [20])) = *(($2 + [4]))
	*($11) = $1
	*($11 + [16]) = *($2)
	*($11 + [64]) = $10
	*($11 + [56]) = $9
	*(($0 = CALL $275([16]))) = $3
	*($0 + [8]) = $7
	*(($4 = (($11 + [56]) + [32]))) = [0]
	$2 = ($0 + [16])
	*((($11 + [56]) + [24])) = $2
	*((($11 + [56]) + [20])) = $2
	*($11 + [72]) = $0
	*($11 + [84]) = [0]
	*((($11 + [56]) + [36])) = [0]
	CALL $41((($11 + [56]) + [28]), [40])
	$0 = *($11 + [84])
	$4 = (*($4) - $0)
	CALL eosio_assert(((int_32)$4 > (int_32)[7]), [640])
	CALL memcpy($0, $11, [8])
	CALL eosio_assert(((int_32)($4 + [-8]) > (int_32)[31]), [640])
	CALL memcpy(($0 + [8]), ($11 + [16]), [32])
	CALL $43($11, ($11 + [56]))
	$0 = *($11)
	CALL send_inline($0, (*($11 + [4]) - $0))
	$0 = *($11)
	if ( ($0 == 0) ){ goto $label$15 }
	*($11 + [4]) = $0
	CALL $276($0)
	
.LABEL $label$15
	$0 = *($11 + [84])
	if ( ($0 == 0) ){ goto $label$16 }
	*(($11 + [88])) = $0
	CALL $276($0)
	
.LABEL $label$16
	$0 = *($11 + [72])
	if ( ($0 == 0) ){ goto $label$17 }
	*(($11 + [76])) = $0
	CALL $276($0)
	
.LABEL $label$17
	*([0] + [4]) = ($11 + [96])
}

void .FUNC _ZN12thedeosgames8pokerlogEyyN5eosio5assetES1_NSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_S8_y (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_64 $8)
{
	CALL require_auth(*($0 + [176]))
	CALL require_recipient($1)
}

int_32 .FUNC $273 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [14374]) == 0) ){ goto $label$2 }
	$7 = *([0] + [14376])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [14374]) = [1]
	$7 = ($7 << [16])
	*([0] + [14376]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [14376])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [14376]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [14374]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [14374]) = [1]
	$3 = ($3 << [16])
	*([0] + [14376]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [14376])
	
.LABEL $label$8
	*([0] + [14376]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $272 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $273($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [14288])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

void .FUNC _ZN12thedeosgames9dicecloseEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	CALL require_auth(*($0 + [176]))
	$6 = [0]
	$5 = CALL db_lowerbound_i64(*($0 + [2048]), *(($0 + [2056])), (int_64)-4417020450001911808, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $171(($0 + [2048]), $5)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [1520])
	CALL eosio_assert((*($6 + [8]) == 0), [144])
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)-1) <= (int_64)999), [1552])
	$3 = *(($0 + [1752]))
	$7 = *(($0 + [1756]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$3:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$2 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$5 = ($0 + [1728])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$5 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$5), [176])
	goto $label$4 
	
.LABEL $label$5
	$6 = [0]
	$7 = CALL db_find_i64(*(($0 + [1728])), *(($0 + [1736])), (int_64)5445034581344387072, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = CALL $95($5, $7)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$5), [176])
	
.LABEL $label$4
	$7 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($7, [1600])
	CALL eosio_assert((*($6 + [56]) == 0), [1632])
	$4 = CALL _ZN12thedeosgames4randEmy($0, *($6 + [28]), $2)
	CALL eosio_assert($7, [288])
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$5), [336])
	CALL eosio_assert(((int_64)*(($0 + [1728])) == (int_64)CALL $fimport$14()), [384])
	*($6 + [28]) = $4
	*($6 + [56]) = [1]
	$1 = *($6)
	CALL eosio_assert([1], [448])
	*($8 + [72]) = ($8 + [64])
	*($8 + [68]) = $8
	*($8 + [64]) = $8
	CALL $173(($8 + [64]), $6)
	CALL db_update_i64(*($6 + [76]), (int_64)0, $8, [64])
	$6 = ($0 + [1744])
	if ( (uint_64)($1 <= *($6)) ){ goto $label$6 }
	*($6) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($8 + [80])
}

int_32 .FUNC $224 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [32])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [64]) = $0
	$1 = ($0 + $2)
	*($5 + [72]) = $1
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [800])
	CALL memcpy(($5 + [8]), $0, [8])
	$4 = ($0 + [8])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [800])
	CALL memcpy((($5 + [8]) + [8]), $4, [8])
	$4 = ($0 + [16])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [800])
	CALL memcpy((($5 + [8]) + [16]), $4, [8])
	*($5 + [68]) = ($0 + [24])
	CALL $167(($5 + [64]), (($5 + [8]) + [24]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $267(($5 + [64]), ($5 + [8]))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $276(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [80])
	return [1]
}

void .FUNC $183 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	*(($2 = *($1))) = (*($2) + [8])
	$2 = *($0)
	*(($0 = *($1))) = (*($0) + [8])
	*(($0 = *($1))) = (*($0) + [16])
	$0 = *($2 + [32])
	$5 = (CASTING uint_64)(uint_32 ( *(($2 + [36])) ? uint_32($0 >> [1]) : ($0 & [1]) ))
	$3 = *($1)
	$0 = *($3)
	
.LOOP $label$1:
	$0 = ($0 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($3) = $0
	$4 = *(($2 + [32]))
	$4 = ( *(($2 + [36])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	if ( ($4 == 0) ){ goto $label$2 }
	*($3) = ($4 + $0)
	
.LABEL $label$2
	*(($0 = *($1))) = (*($0) + [4])
	*(($0 = *($1))) = (*($0) + [16])
	*(($0 = *($1))) = (*($0) + [4])
	$0 = *($2 + [68])
	$5 = (CASTING uint_64)(uint_32 ( *(($2 + [72])) ? uint_32($0 >> [1]) : ($0 & [1]) ))
	$3 = *($1)
	$0 = *($3)
	
.LOOP $label$3:
	$0 = ($0 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($3) = $0
	$2 = *(($2 + [68]))
	$2 = ( *(($2 + [72])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	if ( ($2 == 0) ){ goto $label$4 }
	*($3) = ($2 + $0)
	
.LABEL $label$4
	*(($0 = *($1))) = (*($0) + [16])
	*(($0 = *($1))) = (*($0) + [16])
	*(($0 = *($1))) = (*($0) + [16])
}

int_32 .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [48]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN12thedeosgames14slot_to_stringENS_4SlotE (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$2 = ($2 + [-1])
	if ( ((uint_32)$2 > (uint_32)[6]) ){ goto $label$30 }
	goto $label$34 
	
.LABEL $label$34
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$2 = CALL strlen([1984])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$26 }
	*($0) = ($2 << [1])
	$4 = ($0 + [1])
	if ( $2 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$33
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$2 = CALL strlen([2016])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$23 }
	*($0) = ($2 << [1])
	$4 = ($0 + [1])
	if ( $2 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$32
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$2 = CALL strlen([2032])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$20 }
	*($0) = ($2 << [1])
	$4 = ($0 + [1])
	if ( $2 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$31
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$2 = CALL strlen([2048])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$17 }
	*($0) = ($2 << [1])
	$4 = ($0 + [1])
	if ( $2 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$30
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$2 = CALL strlen([2096])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$14 }
	*($0) = ($2 << [1])
	$4 = ($0 + [1])
	if ( $2 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$29
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$2 = CALL strlen([2000])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$11 }
	*($0) = ($2 << [1])
	$4 = ($0 + [1])
	if ( $2 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$28
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$2 = CALL strlen([2064])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$8 }
	*($0) = ($2 << [1])
	$4 = ($0 + [1])
	if ( $2 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$27
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$2 = CALL strlen([2080])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($2 << [1])
	$4 = ($0 + [1])
	if ( $2 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$26
	$3 = (($2 + [16]) & [-16])
	$4 = CALL $275($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $2
	
.LABEL $label$25
	CALL memcpy($4, [1984], $2)
	
.LABEL $label$24
	$0 = ($4 + $2)
	goto $label$2 
	
.LABEL $label$23
	$3 = (($2 + [16]) & [-16])
	$4 = CALL $275($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $2
	
.LABEL $label$22
	CALL memcpy($4, [2016], $2)
	
.LABEL $label$21
	$0 = ($4 + $2)
	goto $label$2 
	
.LABEL $label$20
	$3 = (($2 + [16]) & [-16])
	$4 = CALL $275($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $2
	
.LABEL $label$19
	CALL memcpy($4, [2032], $2)
	
.LABEL $label$18
	$0 = ($4 + $2)
	goto $label$2 
	
.LABEL $label$17
	$3 = (($2 + [16]) & [-16])
	$4 = CALL $275($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $2
	
.LABEL $label$16
	CALL memcpy($4, [2048], $2)
	
.LABEL $label$15
	$0 = ($4 + $2)
	goto $label$2 
	
.LABEL $label$14
	$3 = (($2 + [16]) & [-16])
	$4 = CALL $275($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $2
	
.LABEL $label$13
	CALL memcpy($4, [2096], $2)
	
.LABEL $label$12
	$0 = ($4 + $2)
	goto $label$2 
	
.LABEL $label$11
	$3 = (($2 + [16]) & [-16])
	$4 = CALL $275($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $2
	
.LABEL $label$10
	CALL memcpy($4, [2000], $2)
	
.LABEL $label$9
	$0 = ($4 + $2)
	goto $label$2 
	
.LABEL $label$8
	$3 = (($2 + [16]) & [-16])
	$4 = CALL $275($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $2
	
.LABEL $label$7
	CALL memcpy($4, [2064], $2)
	
.LABEL $label$6
	$0 = ($4 + $2)
	goto $label$2 
	
.LABEL $label$5
	$3 = (($2 + [16]) & [-16])
	$4 = CALL $275($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $2
	
.LABEL $label$4
	CALL memcpy($4, [2080], $2)
	
.LABEL $label$3
	$0 = ($4 + $2)
	
.LABEL $label$2
	*($0) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL $277($0)
	$2
}

void .FUNC $248 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($4 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [32])
	*($0 + [32]) = (int_64)0
	*(($0 + [40])) = (int_64)0
	*(($0 + [48])) = (int_64)0
	*($0 + [56]) = (int_64)0
	*(($0 + [64])) = [0]
	*($0 + [72]) = (int_64)0
	*(($4 = ($0 + [80]))) = (int_64)1398362884
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [32])
	*(($4 = ($0 + [96]))) = (int_64)1398362884
	*($0 + [88]) = (int_64)0
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$5 = [0]
	
.LABEL $label$11
	CALL eosio_assert($5, [32])
	*(($4 = ($0 + [112]))) = (int_64)1398362884
	*($0 + [104]) = (int_64)0
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$5 = [0]
	
.LABEL $label$16
	CALL eosio_assert($5, [32])
	*(($0 + [152])) = (int_64)0
	*(($0 + [144])) = (int_64)0
	*(($0 + [136])) = (int_64)0
	*($0 + [128]) = (int_64)0
	*($0 + [120]) = (int_64)0
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $250(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC $225 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [576])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [32])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $265(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $266(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $276(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

int_32 .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [640])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [640])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [640])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [640])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [640])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $45($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [640])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [640])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [640])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $45(CALL $44($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$4 = *($2 + [44])
	$2 = *($0)
	$5 = (CASTING uint_64)(uint_32 ( *(($2 + [48])) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	$3 = *($1)
	$4 = *($3)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($3) = $4
	$2 = *(($2 + [44]))
	$2 = ( *(($2 + [48])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	if ( ($2 == 0) ){ goto $label$2 }
	*($3) = ($2 + $4)
	
.LABEL $label$2
	$4 = *($2 + [56])
	$2 = *($0)
	$5 = (CASTING uint_64)(uint_32 ( *(($2 + [60])) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	$0 = *($1)
	$4 = *($0)
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($0) = $4
	$2 = *(($2 + [56]))
	$2 = ( *(($2 + [60])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	if ( ($2 == 0) ){ goto $label$4 }
	*($0) = ($2 + $4)
	
.LABEL $label$4
	*(($4 = *($1))) = (*($4) + [16])
	*(($4 = *($1))) = (*($4) + [16])
	*(($4 = *($1))) = (*($4) + [16])
	*(($4 = *($1))) = (*($4) + [8])
}

void .FUNC $60 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	CALL $46(*($1), (*($0) + [44]))
	$2 = *($0)
	CALL $46(*($1), ($2 + [56]))
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($2 + [72]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($2 + [80]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($2 + [88]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($2 + [96]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($2 + [104]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($2 + [112]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($2 + [120]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $46(*($1), ($0 + [32]))
	*($4 + [8]) = $0
	CALL $63(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC $227 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [80])
	$11 = $12
	*([0] + [4]) = $12
	$2 = *($1 + [4])
	$10 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($12 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($11) = (int_64)0
	*($11 + [8]) = (int_64)0
	*($11 + [16]) = [0]
	*($11 + [24]) = (int_64)0
	*($11 + [32]) = [0]
	*($11 + [36]) = [0]
	*($11 + [40]) = [0]
	*($11 + [44]) = [0]
	*($11 + [52]) = $1
	*($11 + [48]) = $1
	*($11 + [56]) = ($1 + $3)
	*($11 + [64]) = ($11 + [48])
	*($11 + [72]) = $11
	CALL $258(($11 + [72]), ($11 + [64]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *(($11 + [44]))
	$12 = *(($11 + [40]))
	$0 = *(($11 + [36]))
	$9 = *(($11 + [32]))
	$8 = *(($11 + [24]))
	$7 = *(($11 + [16]))
	$6 = *(($11 + [12]))
	$5 = *(($11 + [8]))
	$4 = *($11)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$10 = *((*($1) + $10))
	
.LABEL $label$5
	CALL void $1((int_32 $4), (int_64 $5), (int_32 $6), (int_32 $7), (int_32 $8), (int_64 $9), (int_32 $0), (int_32 $12), (int_32 $3), (int_32 $10))
	*([0] + [4]) = ($11 + [80])
	return [1]
}

int_32 .FUNC $228 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [96])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = [0]
	$6 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $3)
	
.LABEL $label$1
	*(($10 + [32])) = (int_64)1398362884
	*($10 + [24]) = (int_64)0
	*($10 + [16]) = (int_64)0
	CALL eosio_assert([1], [576])
	$7 = (int_64)5462355
	
.LOOP $label$5:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($8, [32])
	*($10 + [40]) = (int_64)0
	*($10 + [84]) = $6
	*($10 + [80]) = $6
	*($10 + [88]) = ($6 + $3)
	*($10 + [48]) = ($10 + [80])
	*($10 + [64]) = ($10 + [16])
	CALL $257(($10 + [64]), ($10 + [48]))
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($6)
	
.LABEL $label$8
	*(($1 = (($10 + [48]) + [8]))) = *(($10 + [32]))
	$7 = *($10 + [16])
	*($10 + [48]) = *($10 + [24])
	$4 = *(($10 + [40]))
	*((($10 + [64]) + [8])) = *($1)
	*($10 + [64]) = *($10 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$9 = *((*($1) + $9))
	
.LABEL $label$9
	$5 = *((($10 + [64]) + [8]))
	*((($10 + [80]) + [8])) = $5
	*(($10 + [8])) = $5
	$5 = *($10 + [64])
	*($10 + [80]) = $5
	*($10) = $5
	CALL void $1((int_32 $7), (int_64 $10), (int_32 $4), (int_64 $9))
	*([0] + [4]) = ($10 + [96])
	return [1]
}

int_32 .FUNC $229 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [160])
	*([0] + [4]) = $2
	*(($3 = $2) + [156]) = $0
	*($3 + [144]) = *($1)
	*($3 + [148]) = *($1 + [4])
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$2 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$2
	CALL read_action_data($2, $1)
	
.LABEL $label$1
	CALL $253(($3 + [16]), $2, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($2)
	
.LABEL $label$5
	*($3 + [12]) = ($3 + [144])
	*($3 + [8]) = ($3 + [156])
	CALL $254(($3 + [8]), ($3 + [16]))
	if ( ((*($3 + [72]) & [1]) == 0) ){ goto $label$6 }
	CALL $276(*(($3 + [80])))
	
.LABEL $label$6
	if ( ((*($3 + [60]) & [1]) == 0) ){ goto $label$7 }
	CALL $276(*(($3 + [68])))
	
.LABEL $label$7
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$8 }
	CALL $276(*(($3 + [56])))
	
.LABEL $label$8
	*([0] + [4]) = ($3 + [160])
	return [1]
}

void .FUNC _ZN12thedeosgames10slotscloseEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_S8_S1_S1_S1_y (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_64 $10)
{
	CALL require_auth(*($0 + [176]))
	CALL require_recipient($2)
}

int_32 .FUNC _ZN12thedeosgames13slots_eos_winEmmm (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$2 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$2 }
	$6 = [500]
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = (((int_32)$1 == (int_32)[2]) & ((int_32)$2 == (int_32)[2]))
	if ( ((int_32)$4 != (int_32)[1]) ){ goto $label$3 }
	$6 = [100]
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$1 }
	
.LABEL $label$3
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$4 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$4 }
	$6 = [50]
	if ( ((int_32)$3 == (int_32)[3]) ){ goto $label$1 }
	
.LABEL $label$4
	if ( ((int_32)$1 != (int_32)[4]) ){ goto $label$5 }
	if ( ((int_32)$2 != (int_32)[4]) ){ goto $label$5 }
	$6 = [30]
	if ( ((int_32)$3 == (int_32)[4]) ){ goto $label$1 }
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)[5]) ){ goto $label$6 }
	if ( ((int_32)$2 != (int_32)[5]) ){ goto $label$6 }
	$6 = [20]
	if ( ((int_32)$3 == (int_32)[5]) ){ goto $label$1 }
	
.LABEL $label$6
	if ( ((int_32)$1 != (int_32)[6]) ){ goto $label$7 }
	if ( ((int_32)$2 != (int_32)[6]) ){ goto $label$7 }
	$6 = [10]
	if ( ((int_32)$3 == (int_32)[6]) ){ goto $label$1 }
	
.LABEL $label$7
	$6 = [5]
	$5 = ((int_32)$3 == (int_32)[2])
	if ( (((int_32)$1 == (int_32)[2]) & $5) ){ goto $label$1 }
	if ( ($4 | (((int_32)$2 == (int_32)[2]) & $5)) ){ goto $label$1 }
	$6 = ( [2] ? ( [2] ? (((int_32)$3 == (int_32)[2]) << [1]) : ((int_32)$2 == (int_32)[2]) ) : ((int_32)$1 == (int_32)[2]) )
	
.LABEL $label$1
	return $6
}

int_32 .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[31]), [800])
	CALL memcpy(($1 + [48]), *($0 + [4]), [32])
	$2 = (*($0 + [4]) + [32])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $85 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $83 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [576])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [32])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [576])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [32])
	return $0
}

int_32 .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [768])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $275([64])
	$4 = CALL $83($6)
	*($6 + [48]) = $0
	CALL $86(($8 + [32]), $4)
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $85(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $276($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($2 + [4]), ($3 + [104]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [640])
	CALL memcpy(*($2 + [4]), ($3 + [112]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($2 + [4]), ($0 + [120]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[31]), [640])
	CALL memcpy(*($2 + [4]), ($0 + [128]), [32])
	*($2 + [4]) = (*($2 + [4]) + [32])
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	CALL $46(*($1), (*($0) + [44]))
	$2 = *($0)
	CALL $46(*($1), ($2 + [56]))
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($2 + [72]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($2 + [80]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($2 + [88]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($2 + [96]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($4 + [8]) = $2
	CALL $81(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $182 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [96])
	*([0] + [4]) = $10
	$9 = [0]
	*($10 + [16]) = [0]
	*($10 + [8]) = (int_64)0
	$6 = [0]
	$7 = [0]
	$8 = [0]
	$4 = (*($2 + [4]) - *($2))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $275($4)
	$6 = ($8 + ($5 << [4]))
	*(($10 + [16])) = $6
	*($10 + [8]) = $8
	*($10 + [12]) = $8
	$7 = *($2)
	$2 = (*(($2 + [4])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $7, $2)
	$7 = ($8 + $2)
	*($10 + [12]) = $7
	goto $label$2 
	
.LABEL $label$3
	$7 = $8
	
.LABEL $label$2
	*(($10 + [44])) = $7
	*($10 + [32]) = $1
	*(($10 + [16])) = [0]
	*(($10 + [48])) = $6
	*($10 + [24]) = $0
	*($10 + [40]) = $8
	*($10 + [8]) = (int_64)0
	*($10 + [52]) = [0]
	*(($8 = ($10 + [56]))) = [0]
	*(($10 + [60])) = [0]
	*($10 + [64]) = [0]
	*($10 + [72]) = ($10 + [64])
	*($10 + [80]) = $3
	CALL $183(($10 + [80]), ($10 + [72]))
	$2 = *($10 + [64])
	if ( ($2 == 0) ){ goto $label$5 }
	$6 = ($10 + [52])
	CALL $41($6, $2)
	$9 = *($8)
	$8 = *($6)
	goto $label$4 
	
.LABEL $label$5
	$8 = [0]
	
.LABEL $label$4
	*($10 + [84]) = $8
	*($10 + [80]) = $8
	*($10 + [88]) = $9
	*($10 + [64]) = ($10 + [80])
	*($10 + [72]) = $3
	CALL $184(($10 + [72]), ($10 + [64]))
	CALL $43(($10 + [80]), ($10 + [24]))
	$8 = *($10 + [80])
	CALL send_inline($8, (*($10 + [84]) - $8))
	$8 = *($10 + [80])
	if ( ($8 == 0) ){ goto $label$6 }
	*($10 + [84]) = $8
	CALL $276($8)
	
.LABEL $label$6
	$8 = *($10 + [52])
	if ( ($8 == 0) ){ goto $label$7 }
	*(($10 + [56])) = $8
	CALL $276($8)
	
.LABEL $label$7
	$8 = *($10 + [40])
	if ( ($8 == 0) ){ goto $label$8 }
	*(($10 + [44])) = $8
	CALL $276($8)
	
.LABEL $label$8
	$8 = *($10 + [8])
	if ( ($8 == 0) ){ goto $label$9 }
	*($10 + [12]) = $8
	CALL $276($8)
	
.LABEL $label$9
	*([0] + [4]) = ($10 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $294(($10 + [8]))
}

void .FUNC _ZN12thedeosgames6nclaimEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [96])
	*([0] + [4]) = $17
	CALL require_auth($1)
	$2 = *(($0 + [152]))
	$8 = *(($0 + [156]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$1 }
	$9 = ($8 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$1 }
	$8 = $9
	$4 = ($9 + [-24])
	$9 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [128])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$4 }
	$8 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)$3), [176])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$9 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)-3288278638864105472, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $146($3, $9)
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)$3), [176])
	
.LABEL $label$3
	$0 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($0, [3632])
	$11 = (int_64)0
	CALL eosio_assert(((int_64)*($8 + [8]) > (int_64)0), [3632])
	$10 = (int_64)59
	$9 = [1424]
	$12 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$11 > (uint_64)(int_64)10) ){ goto $label$10 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$4 = ($4 + [165])
	goto $label$8 
	
.LABEL $label$10
	$13 = (int_64)0
	if ( ((int_64)$11 == (int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$6
	$9 = ($9 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)1)
	if ( ((int_64)$11 != (int_64)13) ){ goto $label$5 }
	$11 = (int_64)0
	$13 = (int_64)59
	$9 = [3664]
	$14 = (int_64)0
	
.LOOP $label$11:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$12 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$4 = ($4 + [165])
	goto $label$13 
	
.LABEL $label$14
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$12
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$14 = ((int_64)$10 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$11 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1440]
	$15 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$20 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$4 = ($4 + [165])
	goto $label$18 
	
.LABEL $label$20
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$16
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$15 }
	$11 = (int_64)0
	$13 = (int_64)59
	$9 = [3664]
	$16 = (int_64)0
	
.LOOP $label$21:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$22 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$4 = ($4 + [165])
	goto $label$23 
	
.LABEL $label$24
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$22
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$16 = ((int_64)$10 | (int_64)$16)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$21 }
	*(($17 + [8])) = [0]
	*($17) = (int_64)0
	$9 = CALL strlen([3680])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$25 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$28 }
	*($17) = ($9 << [1])
	$4 = ($17 | [1])
	if ( $9 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$2 = (($9 + [16]) & [-16])
	$4 = CALL $275($2)
	*($17) = ($2 | [1])
	*($17 + [8]) = $4
	*($17 + [4]) = $9
	
.LABEL $label$27
	CALL memcpy($4, [3680], $9)
	
.LABEL $label$26
	*(($4 + $9)) = [0]
	*(($4 = ($17 + [24]))) = *(($8 + [16]))
	*($17 + [16]) = *($8 + [8])
	$2 = *($17)
	*($17) = [0]
	$5 = *($17 + [8])
	$6 = *($17 + [4])
	*($17 + [4]) = [0]
	*($17 + [8]) = [0]
	*(($9 = CALL $275([16]))) = $14
	*($9 + [8]) = $15
	$7 = ($9 + [16])
	*($17 + [88]) = $7
	*($17 + [80]) = $9
	*($17 + [40]) = $1
	*($17 + [32]) = $16
	*($17 + [84]) = $7
	*(($17 + [56])) = *($4)
	*($17 + [48]) = *($17 + [16])
	*($17 + [64]) = $2
	*(($17 + [68])) = $6
	*(($9 = ($17 + [72]))) = $5
	CALL $40($12, (int_64)-3617168760277827584, ($17 + [80]), ($17 + [32]))
	if ( ((*($17 + [64]) & [1]) == 0) ){ goto $label$29 }
	CALL $276(*($9))
	
.LABEL $label$29
	$9 = *($17 + [80])
	if ( ($9 == 0) ){ goto $label$30 }
	*($17 + [84]) = $9
	CALL $276($9)
	
.LABEL $label$30
	if ( ((*($17) & [1]) == 0) ){ goto $label$31 }
	CALL $276(*(($17 + [8])))
	
.LABEL $label$31
	CALL eosio_assert($0, [2448])
	CALL eosio_assert($0, [2496])
	$9 = CALL db_next_i64(*($8 + [36]), ($17 + [32]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$32 }
	CALL $146($3, $9)
	
.LABEL $label$32
	CALL $150($3, $8)
	*([0] + [4]) = ($17 + [96])
	return (unreachable)
	
.LABEL $label$25
	CALL $277($17)
}

int_32 .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN12thedeosgames11nddividendsEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [48])
	*([0] + [4]) = $11
	CALL require_auth(*($0 + [176]))
	$6 = [0]
	$3 = *($2)
	if ( ((uint_64)((int_64)$3 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$8 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [3168])
	CALL eosio_assert(((int_64)$3 > (int_64)0), [3600])
	$4 = *(($0 + [152]))
	$10 = *(($0 + [156]))
	if ( ((int_32)$10 == (int_32)$4) ){ goto $label$6 }
	$9 = ($10 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$6 }
	$10 = $9
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = ($0 + [128])
	if ( ((int_32)$10 == (int_32)$4) ){ goto $label$11 }
	$9 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)$5), [176])
	if ( $9 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$9 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)-3288278638864105472, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$9 }
	$9 = CALL $146($5, $9)
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)$5), [176])
	
.LABEL $label$10
	CALL eosio_assert([1], [288])
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)$5), [336])
	CALL eosio_assert(((int_64)*(($0 + [128])) == (int_64)CALL $fimport$14()), [384])
	$8 = *($9)
	$6 = ($9 + [16])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*($6)), [656])
	$1 = ((int_64)*($9 + [8]) + (int_64)$3)
	*($9 + [8]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [704])
	CALL eosio_assert(((int_64)*($9 + [8]) < (int_64)4611686018427387904), [736])
	*($9 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$8 == (int_64)*($9)), [448])
	CALL eosio_assert([1], [640])
	CALL memcpy($11, $9, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy(($11 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [640])
	CALL memcpy(($11 + [16]), $6, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy(($11 + [24]), ($9 + [24]), [8])
	CALL db_update_i64(*($9 + [36]), (int_64)0, $11, [32])
	$9 = ($0 + [144])
	if ( (uint_64)($8 <= *($9)) ){ goto $label$8 }
	*($9) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	goto $label$8 
	
.LABEL $label$9
	$3 = *(($0 + [176]))
	CALL eosio_assert(((int_64)*(($0 + [128])) == (int_64)CALL $fimport$14()), [512])
	*(($6 = CALL $275([48])) + [16]) = (int_64)1398362884
	*($6 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$7 = ($6 + [16])
	$10 = ($6 + [8])
	$8 = (int_64)5462355
	$9 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$4 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$4 = [0]
	
.LABEL $label$12
	CALL eosio_assert($4, [32])
	*($6 + [32]) = $5
	*($6) = $1
	*(($10 + [12])) = *(($2 + [12]))
	*(($10 + [8])) = *(($2 + [8]))
	*(($10 + [4])) = *(($2 + [4]))
	*($10) = *($2)
	*($6 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert([1], [640])
	CALL memcpy($11, $6, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy(($11 | [8]), $10, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy(($11 + [16]), $7, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy(($11 + [24]), ($6 + [24]), [8])
	$8 = *($6)
	$10 = CALL db_store_i64(*(($0 + [136])), (int_64)-3288278638864105472, $3, $8, $11, [32])
	*($6 + [36]) = $10
	$9 = ($0 + [144])
	if ( (uint_64)($8 <= *($9)) ){ goto $label$17 }
	*($9) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	*($11 + [40]) = $6
	$8 = *($6)
	*($11) = $8
	*($11 + [36]) = $10
	$5 = ($0 + [156])
	$9 = *($5)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [160]))) ){ goto $label$19 }
	*($9 + [8]) = $8
	*($9 + [16]) = $10
	*($11 + [40]) = [0]
	*($9) = $6
	*($5) = ($9 + [24])
	goto $label$18 
	
.LABEL $label$19
	CALL $147(($0 + [152]), ($11 + [40]), $11, ($11 + [36]))
	
.LABEL $label$18
	$9 = *($11 + [40])
	*($11 + [40]) = [0]
	if ( ($9 == 0) ){ goto $label$8 }
	CALL $276($9)
	
.LABEL $label$8
	*([0] + [4]) = ($11 + [48])
}

void .FUNC $144 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*($9 + [16]) = [0]
	*($9 + [8]) = (int_64)0
	$6 = [0]
	$7 = [0]
	$8 = [0]
	$4 = (*($2 + [4]) - *($2))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $275($4)
	$6 = ($8 + ($5 << [4]))
	*(($9 + [16])) = $6
	*($9 + [8]) = $8
	*($9 + [12]) = $8
	$7 = *($2)
	$2 = (*(($2 + [4])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $7, $2)
	$7 = ($8 + $2)
	*($9 + [12]) = $7
	goto $label$2 
	
.LABEL $label$3
	$7 = $8
	
.LABEL $label$2
	*(($9 + [44])) = $7
	*($9 + [32]) = $1
	*((($9 + [8]) + [8])) = [0]
	*((($9 + [24]) + [24])) = $6
	*($9 + [24]) = $0
	*($9 + [40]) = $8
	*($9 + [8]) = (int_64)0
	*($9 + [52]) = [0]
	*(($8 = ($9 + [56]))) = [0]
	*(($9 + [60])) = [0]
	CALL $41(($9 + [52]), [24])
	$8 = *($9 + [52])
	$2 = (*($8) - $8)
	CALL eosio_assert(((int_32)$2 > (int_32)[7]), [640])
	CALL memcpy($8, $3, [8])
	CALL eosio_assert(((int_32)($2 + [-8]) > (int_32)[7]), [640])
	CALL memcpy(($8 + [8]), ($3 + [8]), [8])
	CALL eosio_assert(((int_32)($2 + [-16]) > (int_32)[7]), [640])
	CALL memcpy(($8 + [16]), ($3 + [16]), [8])
	CALL $43(($9 + [64]), ($9 + [24]))
	$8 = *($9 + [64])
	CALL send_inline($8, (*($9 + [68]) - $8))
	$8 = *($9 + [64])
	if ( ($8 == 0) ){ goto $label$4 }
	*($9 + [68]) = $8
	CALL $276($8)
	
.LABEL $label$4
	$8 = *($9 + [52])
	if ( ($8 == 0) ){ goto $label$5 }
	*(($9 + [56])) = $8
	CALL $276($8)
	
.LABEL $label$5
	$8 = *($9 + [40])
	if ( ($8 == 0) ){ goto $label$6 }
	*(($9 + [44])) = $8
	CALL $276($8)
	
.LABEL $label$6
	$8 = *($9 + [8])
	if ( ($8 == 0) ){ goto $label$7 }
	*($9 + [12]) = $8
	CALL $276($8)
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $294(($9 + [8]))
}

void .FUNC $147 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [768])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $275([48])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [32])
	*($4 + [32]) = $0
	CALL $148(($8 + [32]), $4)
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [36])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $147($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $276($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC _ZN12thedeosgames7initstkEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	*([0] + [4]) = $8
	*($8 + [16]) = $1
	CALL require_auth(*($0 + [176]))
	$2 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( (int_64)(*(*($6)) == 0) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)$4), [176])
	if ( $6 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-4151882783574196224, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$6 = CALL $133($4, $6)
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)$4), [176])
	
.LABEL $label$5
	CALL eosio_assert([1], [288])
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)$4), [336])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$14()), [384])
	*($6 + [8]) = $1
	$5 = *($6)
	CALL eosio_assert([1], [448])
	*($8 + [88]) = (($8 + [32]) + [44])
	*($8 + [84]) = ($8 + [32])
	*($8 + [80]) = ($8 + [32])
	CALL $134(($8 + [80]), $6)
	CALL db_update_i64(*($6 + [52]), (int_64)0, ($8 + [32]), [44])
	$6 = ($0 + [24])
	if ( (uint_64)($5 <= *($6)) ){ goto $label$3 }
	*($6) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$4
	$5 = *(($0 + [176]))
	*($8 + [8]) = ($8 + [16])
	*($8 + [80]) = $5
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$14()), [512])
	*($8 + [32]) = $4
	*($8 + [36]) = ($8 + [8])
	*($8 + [40]) = ($8 + [80])
	$6 = CALL $275([64])
	CALL $137($6)
	*($6 + [48]) = $4
	CALL $142(($8 + [32]), $6)
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [52])
	*($8 + [20]) = $7
	$3 = ($0 + [36])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [40]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($3) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $139(($0 + [32]), ($8 + [24]), ($8 + [32]), ($8 + [20]))
	
.LABEL $label$7
	$6 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $276($6)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [96])
}

void .FUNC _ZN12thedeosgames8nunstakeEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [112])
	*([0] + [4]) = $12
	$4 = *($2 + [8])
	$8 = [0]
	$10 = [0]
	$3 = *($2)
	if ( ((uint_64)((int_64)$3 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$9 = (uint_64)$4 >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$10 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	
.LABEL $label$1
	CALL eosio_assert($10, [3168])
	CALL eosio_assert(((int_64)$3 > (int_64)0), [3200])
	*(($12 + [40])) = [0]
	*($12 + [24]) = (int_64)-1
	*($12 + [32]) = (int_64)0
	*($12 + [8]) = *($0 + [176])
	$9 = (uint_64)$4 >> (uint_64)(int_64)8
	*($12 + [16]) = $9)
	CALL eosio_assert(((int_64)$4 == (int_64)*(CALL $132(($12 + [8]), $9, [1936]) + [8])), [3232])
	CALL require_auth($1)
	$11 = ($0 + [8])
	$10 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)-4151882783574196224, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$6 }
	$8 = CALL $133($11, $10)
	
.LABEL $label$6
	$10 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($10, [3264])
	CALL eosio_assert($10, [288])
	CALL eosio_assert(((int_32)*($8 + [48]) == (int_32)$11), [336])
	CALL eosio_assert(((int_64)*($11) == (int_64)CALL $fimport$14()), [384])
	*($8 + [16]) = (int_64))(*($8 + [16]) - $3)
	*($8 + [32]) = ((int_64)*($8 + [32]) + (int_64)$3)
	$9 = *($8)
	CALL eosio_assert([1], [448])
	*($12 + [104]) = (($12 + [48]) + [44])
	*($12 + [100]) = ($12 + [48])
	*($12 + [96]) = ($12 + [48])
	CALL $134(($12 + [96]), $8)
	CALL db_update_i64(*($8 + [52]), (int_64)0, ($12 + [48]), [44])
	$11 = ($0 + [24])
	if ( (uint_64)($9 <= *($11)) ){ goto $label$7 }
	*($11) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$5 = *(($0 + [72]))
	$10 = *(($0 + [76]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$8 }
	$11 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$9:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$8 }
	$10 = $11
	$8 = ($11 + [-24])
	$11 = $8
	if ( ((int_32)($8 + $6) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	$8 = ($0 + [48])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$11 }
	$11 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [40]) == (int_32)$8), [176])
	goto $label$10 
	
.LABEL $label$11
	$11 = [0]
	$10 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-4152008587998134272, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$10 }
	$11 = CALL $19($8, $10)
	CALL eosio_assert(((int_32)*($11 + [40]) == (int_32)$8), [176])
	
.LABEL $label$10
	$10 = ((int_32)$11 != (int_32)[0])
	CALL eosio_assert($10, [3424])
	CALL eosio_assert(((int_64)*(($11 + [16])) == (int_64)$4), [3456])
	CALL eosio_assert(((int_64)*($11 + [8]) >= (int_64)$3), [3520])
	CALL eosio_assert($10, [288])
	CALL eosio_assert(((int_32)*($11 + [40]) == (int_32)$8), [336])
	CALL eosio_assert(((int_64)*(($0 + [48])) == (int_64)CALL $fimport$14()), [384])
	*($11 + [8]) = (int_64))(*($11 + [8]) - $3)
	$9 = *($11)
	CALL eosio_assert([1], [448])
	*($12 + [104]) = (($12 + [48]) + [40])
	*($12 + [100]) = ($12 + [48])
	*($12 + [96]) = ($12 + [48])
	CALL $136(($12 + [96]), $11)
	CALL db_update_i64(*($11 + [44]), (int_64)0, ($12 + [48]), [40])
	$11 = ($0 + [64])
	if ( (uint_64)($9 <= *($11)) ){ goto $label$12 }
	*($11) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$5 = *(($0 + [112]))
	$10 = *(($0 + [116]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$13 }
	$11 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$14:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$13 }
	$10 = $11
	$8 = ($11 + [-24])
	$11 = $8
	if ( ((int_32)($8 + $6) != (int_32)[-24]) ){ goto $label$14 }
	
.LABEL $label$13
	$6 = ($0 + [88])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$20 }
	$11 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [32]) == (int_32)$6), [176])
	if ( $11 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$11 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)-3102531239517618176, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$18 }
	$11 = CALL $20($6, $11)
	CALL eosio_assert(((int_32)*($11 + [32]) == (int_32)$6), [176])
	
.LABEL $label$19
	CALL eosio_assert([1], [288])
	CALL eosio_assert(((int_32)*($11 + [32]) == (int_32)$6), [336])
	CALL eosio_assert(((int_64)*(($0 + [88])) == (int_64)CALL $fimport$14()), [384])
	*($11 + [8]) = ((int_64)*($11 + [8]) + (int_64)*($2))
	$9 = *($11)
	*($11 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$9 == (int_64)*($11)), [448])
	CALL eosio_assert([1], [640])
	CALL memcpy(($12 + [48]), $11, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($12 + [48]) | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($12 + [48]) + [16]), ($11 + [16]), [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($12 + [48]) + [24]), ($11 + [24]), [8])
	CALL db_update_i64(*($11 + [36]), (int_64)0, ($12 + [48]), [32])
	$11 = ($0 + [104])
	if ( (uint_64)($9 <= *($11)) ){ goto $label$17 }
	*($11) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$0 = *($12 + [32])
	if ( $0 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$3 = *(($0 + [176]))
	CALL eosio_assert(((int_64)*(($0 + [88])) == (int_64)CALL $fimport$14()), [512])
	*(($8 = CALL $275([48])) + [16]) = (int_64)1398362884
	*($8 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$7 = ($8 + [16])
	$10 = ($8 + [8])
	$9 = (int_64)5462355
	$11 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$5 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$5 = [0]
	
.LABEL $label$21
	CALL eosio_assert($5, [32])
	*($8 + [32]) = $6
	*($8) = $1
	*(($10 + [12])) = *(($2 + [12]))
	*(($10 + [8])) = *(($2 + [8]))
	*(($10 + [4])) = *(($2 + [4]))
	*($10) = *($2)
	*($8 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert([1], [640])
	CALL memcpy(($12 + [48]), $8, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($12 + [48]) | [8]), $10, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy(($12 + [64]), $7, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($12 + [48]) + [24]), ($8 + [24]), [8])
	$9 = *($8)
	$10 = CALL db_store_i64(*(($0 + [96])), (int_64)-3102531239517618176, $3, $9, ($12 + [48]), [32])
	*($8 + [36]) = $10
	$11 = ($0 + [104])
	if ( (uint_64)($9 <= *($11)) ){ goto $label$26 }
	*($11) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$26
	*($12 + [96]) = $8
	$9 = *($8)
	*($12 + [48]) = $9
	*($12 + [108]) = $10
	$6 = ($0 + [116])
	$11 = *($6)
	if ( ((uint_32)$11 >= (uint_32)*(($0 + [120]))) ){ goto $label$28 }
	*($11 + [8]) = $9
	*($11 + [16]) = $10
	*($12 + [96]) = [0]
	*($11) = $8
	*($6) = ($11 + [24])
	goto $label$27 
	
.LABEL $label$28
	CALL $22(($0 + [112]), ($12 + [96]), ($12 + [48]), ($12 + [108]))
	
.LABEL $label$27
	$11 = *($12 + [96])
	*($12 + [96]) = [0]
	if ( ($11 == 0) ){ goto $label$17 }
	CALL $276($11)
	
.LABEL $label$17
	$0 = *($12 + [32])
	if ( ($0 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$10 = ($12 + [36])
	$11 = *($10)
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$30 }
	
.LOOP $label$31:
	$11 = ($11 + [-24])
	$8 = *($11)
	*($11) = [0]
	if ( ($8 == 0) ){ goto $label$32 }
	CALL $276($8)
	
.LABEL $label$32
	if ( ((int_32)$0 != (int_32)$11) ){ goto $label$31 }
	$11 = *(($12 + [32]))
	goto $label$29 
	
.LABEL $label$30
	$11 = $0
	
.LABEL $label$29
	*($10) = $0
	CALL $276($11)
	
.LABEL $label$15
	*([0] + [4]) = ($12 + [112])
}

void .FUNC _ZN12thedeosgames9updatestkEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [112])
	*([0] + [4]) = $15
	CALL require_auth(*($0 + [176]))
	CALL eosio_assert([1], [576])
	$10 = [0]
	$9 = (int_64)357812225028
	$12 = (int_64)1397704004
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [32])
	*(($15 + [64])) = [0]
	*($15 + [48]) = (int_64)-1
	$8 = (int_64)0
	*($15 + [56]) = (int_64)0
	$12 = *(($0 + [176]))
	*($15 + [32]) = $12
	*($15 + [40]) = $1
	$10 = CALL db_find_i64($12, $1, (int_64)5300888951328866304, (int_64)1397704004)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$6 }
	$10 = CALL $36(($15 + [32]), $10)
	CALL eosio_assert(((int_32)*($10 + [40]) == (int_32)($15 + [32])), [176])
	$9 = *($10 + [8])
	$8 = *($10)
	
.LABEL $label$6
	$2 = *(($0 + [72]))
	$7 = *(($0 + [76]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$7 }
	$10 = ($7 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$8:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$7 }
	$7 = $10
	$6 = ($10 + [-24])
	$10 = $6
	if ( ((int_32)($6 + $3) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	$6 = ($0 + [48])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	$10 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [40]) == (int_32)$6), [176])
	goto $label$9 
	
.LABEL $label$10
	$10 = [0]
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-4152008587998134272, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	$10 = CALL $19($6, $7)
	CALL eosio_assert(((int_32)*($10 + [40]) == (int_32)$6), [176])
	
.LABEL $label$9
	CALL eosio_assert(($10 == 0), [3552])
	$5 = *(($0 + [176]))
	$4 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1440]
	$13 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$16 }
	$6 = *($10)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$6 = ($6 + [165])
	goto $label$14 
	
.LABEL $label$16
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$12
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$11 }
	*(($10 = CALL $275([16]))) = $5
	*($10 + [8]) = $13
	*($15 + [96]) = $10
	$10 = ($10 + [16])
	*($15 + [104]) = $10
	*($15 + [72]) = $1
	*($15 + [100]) = $10
	*($15 + [80]) = $8
	*((($15 + [72]) + [16])) = $9
	*(($15 + [16])) = *($15 + [80])
	*((($15 + [8]) + [16])) = $9
	*($15 + [8]) = *($15 + [72])
	CALL $144($4, (int_64)-7047455945873424384, ($15 + [96]), ($15 + [8]))
	$10 = *($15 + [96])
	if ( ($10 == 0) ){ goto $label$17 }
	*($15 + [100]) = $10
	CALL $276($10)
	
.LABEL $label$17
	$7 = *($15 + [56])
	if ( ($7 == 0) ){ goto $label$18 }
	$3 = ($15 + [60])
	$10 = *($3)
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$20 }
	
.LOOP $label$21:
	$10 = ($10 + [-24])
	$6 = *($10)
	*($10) = [0]
	if ( ($6 == 0) ){ goto $label$22 }
	CALL $276($6)
	
.LABEL $label$22
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$21 }
	$10 = *(($15 + [56]))
	goto $label$19 
	
.LABEL $label$20
	$10 = $7
	
.LABEL $label$19
	*($3) = $7
	CALL $276($10)
	
.LABEL $label$18
	*([0] + [4]) = ($15 + [112])
}

void .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$4 = *($0 + [4])
	*($1) = (int_64)0
	*($1 + [8]) = *(*($4))
	$2 = *($0)
	CALL eosio_assert([1], [576])
	$3 = (int_64)1397704004
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [32])
	*(($1 + [24])) = (int_64)357812225028
	*($1 + [16]) = (int_64)0
	CALL eosio_assert([1], [576])
	$3 = (int_64)1397704004
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [32])
	*(($1 + [40])) = (int_64)357812225028
	*($1 + [32]) = (int_64)0
	$5 = $7
	$4 = ($5 + [-48])
	*([0] + [4]) = $4
	*($6 + [4]) = $4
	*($6) = $4
	*($6 + [8]) = ($5 + [-4])
	CALL $134($6, $1)
	$3 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)-4151882783574196224, *(*($0 + [8])), $3, $4, [44])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$11 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($6 + [16])
}

void .FUNC _ZN12thedeosgames9slotseoscEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_32 $19
	float_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_32 $24
	$24 = (*([0] + [4]) - [464])
	*([0] + [4]) = $24
	CALL require_auth(*($0 + [176]))
	$14 = *(($0 + [2032]))
	$5 = *(($0 + [2036]))
	if ( ((int_32)$5 == (int_32)$14) ){ goto $label$1 }
	$19 = ($5 + [-24])
	$17 = ([0] - $14)
	
.LOOP $label$2:
	if ( ((int_64)*(*($19)) == (int_64)1) ){ goto $label$1 }
	$5 = $19
	$18 = ($19 + [-24])
	$19 = $18
	if ( ((int_32)($18 + $17) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$19 = ($0 + [2008])
	if ( ((int_32)$5 == (int_32)$14) ){ goto $label$4 }
	$3 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [56]) == (int_32)$19), [176])
	goto $label$3 
	
.LABEL $label$4
	$3 = [0]
	$18 = CALL db_find_i64(*(($0 + [2008])), *(($0 + [2016])), (int_64)-4293729097406218240, (int_64)1)
	if ( ((int_32)$18 < (int_32)[0]) ){ goto $label$3 }
	$3 = CALL $6($19, $18)
	CALL eosio_assert(((int_32)*($3 + [56]) == (int_32)$19), [176])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [1520])
	CALL eosio_assert((*($3 + [8]) == 0), [144])
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)-1) <= (int_64)999), [1552])
	$14 = *(($0 + [1952]))
	$5 = *(($0 + [1956]))
	if ( ((int_32)$5 == (int_32)$14) ){ goto $label$5 }
	$19 = ($5 + [-24])
	$17 = ([0] - $14)
	
.LOOP $label$6:
	if ( ((int_64)*(*($19)) == (int_64)$1) ){ goto $label$5 }
	$5 = $19
	$18 = ($19 + [-24])
	$19 = $18
	if ( ((int_32)($18 + $17) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$4 = ($0 + [1928])
	if ( ((int_32)$5 == (int_32)$14) ){ goto $label$8 }
	$5 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [88]) == (int_32)$4), [176])
	goto $label$7 
	
.LABEL $label$8
	$5 = [0]
	$19 = CALL db_find_i64(*(($0 + [1928])), *(($0 + [1936])), (int_64)-4293729067555704832, $1)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$7 }
	$5 = CALL $73($4, $19)
	CALL eosio_assert(((int_32)*($5 + [88]) == (int_32)$4), [176])
	
.LABEL $label$7
	$6 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($6, [1600])
	$22 = ((int_64)((int_64)((int_64)((uint_64)$2 % (uint_64)((int_64)$1 + (int_64)1)) + (int_64)$2) + (int_64)((uint_64)$1 % (uint_64)$2)) + (int_64)(CASTING uint_64)(uint_32 ((CALL tapos_block_prefix() + CALL $fimport$43()) + (CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$15() / (uint_64)(int_64)1000000)))))
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*($0 + [2272]) = $22 ^ (int_64)$22))
	*($0 + [2208]) = ((int_64)$22 * (int_64)2685821657736338717)
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*($0 + [2272]) = $22 ^ (int_64)$22))
	*(($0 + [2212])) = ((int_64)$22 * (int_64)2685821657736338717)
	$19 = [2216]
	
.LOOP $label$9:
	$22 = *($18)
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*(($18 = ($0 + [2272]))) = $22 ^ (int_64)$22))
	*(($0 + $19)) = ((int_64)$22 * (int_64)2685821657736338717)
	$19 = ($19 + [4])
	if ( ((int_32)$19 != (int_32)[2272]) ){ goto $label$9 }
	$22 = *($19)
	$22 = ((int_64)((int_64)$22 << (int_64)31) ^ (int_64)$22)
	$17 = ($0 + [2208])
	$22 = *($17)
	$22 = ((int_64)((int_64)((int_64)(uint_64)$22 >> (uint_64)(int_64)30) ^ (int_64)$22) ^ (int_64)$22) ^ (int_64)(uint_64)$22 >> (uint_64)(int_64)11
	*(($19 = ($0 + [2212]))) = $22))
	$21 = ((int_64)((int_64)$22 & (int_64)4294967295) * (int_64)1181783497276652981)
	$22 = ((int_64)((int_64)((int_64)((int_64)$1 + (int_64)((uint_64)*($5 + [80]) % (uint_64)(int_64)100000)) + (int_64)(CASTING uint_64)(uint_32 ((CALL tapos_block_prefix() + CALL $fimport$43()) + (CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$15() / (uint_64)(int_64)1000000))))) + (int_64)((int_64)((int_64)$21 & (int_64)63) * (int_64)$2)) + (int_64)10000)
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*(($18 = ($0 + [2272]))) = $22 ^ (int_64)$22))
	*($17) = ((int_64)$22 * (int_64)2685821657736338717)
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*($18) = $22 ^ (int_64)$22))
	*($19) = ((int_64)$22 * (int_64)2685821657736338717)
	$17 = ((CASTING uint_32)(uint_64 $21) & [63])
	$19 = [2216]
	
.LOOP $label$10:
	$22 = *($18)
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*($18) = $22 ^ (int_64)$22))
	*(($0 + $19)) = ((int_64)$22 * (int_64)2685821657736338717)
	$19 = ($19 + [4])
	if ( ((int_32)$19 != (int_32)[2272]) ){ goto $label$10 }
	$22 = *($19)
	$22 = ((int_64)((int_64)$22 << (int_64)31) ^ (int_64)$22)
	$14 = ($0 + [2208])
	$22 = *($14)
	$22 = ((int_64)((int_64)((int_64)(uint_64)$22 >> (uint_64)(int_64)30) ^ (int_64)$22) ^ (int_64)$22) ^ (int_64)(uint_64)$22 >> (uint_64)(int_64)11
	*(($19 = ($0 + [2212]))) = $22))
	$7 = ((CASTING uint_32)(uint_64 $22) & [63])
	$22 = ((int_64)((int_64)$22 & (int_64)4294967295) * (int_64)1181783497276652981)
	$22 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 ((CALL tapos_block_prefix() + CALL $fimport$43()) + (CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$15() / (uint_64)(int_64)1000000)))) + (int_64)((int_64)((int_64)$22 & (int_64)63) * (int_64)$2)) + (int_64)(CASTING uint_64)(uint_32 ((int_32)$7 * (int_32)$17))) + (int_64)1000000)
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*(($18 = ($0 + [2272]))) = $22 ^ (int_64)$22))
	*($14) = ((int_64)$22 * (int_64)2685821657736338717)
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*($18) = $22 ^ (int_64)$22))
	*($19) = ((int_64)$22 * (int_64)2685821657736338717)
	$19 = [2216]
	
.LOOP $label$11:
	$22 = *($18)
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*($18) = $22 ^ (int_64)$22))
	*(($0 + $19)) = ((int_64)$22 * (int_64)2685821657736338717)
	$19 = ($19 + [4])
	if ( ((int_32)$19 != (int_32)[2272]) ){ goto $label$11 }
	$22 = *($19)
	$22 = ((int_64)((int_64)$22 << (int_64)31) ^ (int_64)$22)
	$22 = *(($0 + [2208]))
	$22 = ((int_64)((int_64)((int_64)(uint_64)$22 >> (uint_64)(int_64)30) ^ (int_64)$22) ^ (int_64)$22) ^ (int_64)(uint_64)$22 >> (uint_64)(int_64)11
	*(($19 = ($0 + [2212]))) = $22))
	$8 = *((($19 + (((CASTING uint_32)(uint_64 ((int_64)$22 * (int_64)1181783497276652981)) & [63]) << [2])) + [512]))
	$7 = *((($19 + ($7 << [2])) + [256]))
	$19 = ($0 + [960])
	$14 = *(($19 + ($17 << [2])))
	CALL _ZN12thedeosgames15slots_to_stringENS_4SlotES0_S0_(($24 + [448]), $0, $14, $7, $8)
	*(($24 + [440])) = [0]
	*($24 + [432]) = (int_64)0
	$19 = CALL strlen([1664])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$18 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$21 }
	*($24 + [432]) = ($19 << [1])
	$18 = (($24 + [432]) | [1])
	if ( $19 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$17 = (($19 + [16]) & [-16])
	$18 = CALL $275($17)
	*($24 + [432]) = ($17 | [1])
	*($24 + [440]) = $18
	*($24 + [436]) = $19
	
.LABEL $label$20
	CALL memcpy($18, [1664], $19)
	
.LABEL $label$19
	*(($18 + $19)) = [0]
	$9 = *(($5 + [16]))
	$10 = *($5 + [24])
	$22 = *($5 + [8])
	CALL eosio_assert((uint_64)((int_64))((int_64)4611686018427387903 - $22) <= (int_64)9223372036854775807), [576])
	$12 = (int_64))((int_64)0 - $22)
	$19 = [0]
	$11 = (uint_64)$9 >> (uint_64)(int_64)8
	$22 = $11)
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	
.LOOP $label$26:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$26 }
	
.LABEL $label$25
	$18 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	$18 = [0]
	
.LABEL $label$22
	CALL eosio_assert($18, [32])
	if ( ((int_32)$14 != (int_32)[1]) ){ goto $label$28 }
	if ( ((int_32)$7 != (int_32)[1]) ){ goto $label$28 }
	$17 = [500]
	if ( ((int_32)$8 == (int_32)[1]) ){ goto $label$27 }
	
.LABEL $label$28
	$19 = (((int_32)$14 == (int_32)[2]) & ((int_32)$7 == (int_32)[2]))
	if ( ((int_32)$19 != (int_32)[1]) ){ goto $label$29 }
	$17 = [100]
	if ( ((int_32)$8 == (int_32)[2]) ){ goto $label$27 }
	
.LABEL $label$29
	if ( ((int_32)$14 != (int_32)[3]) ){ goto $label$30 }
	if ( ((int_32)$7 != (int_32)[3]) ){ goto $label$30 }
	$17 = [50]
	if ( ((int_32)$8 == (int_32)[3]) ){ goto $label$27 }
	
.LABEL $label$30
	if ( ((int_32)$14 != (int_32)[4]) ){ goto $label$31 }
	if ( ((int_32)$7 != (int_32)[4]) ){ goto $label$31 }
	$17 = [30]
	if ( ((int_32)$8 == (int_32)[4]) ){ goto $label$27 }
	
.LABEL $label$31
	if ( ((int_32)$14 != (int_32)[5]) ){ goto $label$32 }
	if ( ((int_32)$7 != (int_32)[5]) ){ goto $label$32 }
	$17 = [20]
	if ( ((int_32)$8 == (int_32)[5]) ){ goto $label$27 }
	
.LABEL $label$32
	if ( ((int_32)$14 != (int_32)[6]) ){ goto $label$33 }
	if ( ((int_32)$7 != (int_32)[6]) ){ goto $label$33 }
	$17 = [10]
	if ( ((int_32)$8 == (int_32)[6]) ){ goto $label$27 }
	
.LABEL $label$33
	$17 = [5]
	$18 = ((int_32)$8 == (int_32)[2])
	if ( (((int_32)$14 == (int_32)[2]) & $18) ){ goto $label$27 }
	if ( ($19 | (((int_32)$7 == (int_32)[2]) & $18)) ){ goto $label$27 }
	$17 = ( [2] ? ( [2] ? (((int_32)$8 == (int_32)[2]) << [1]) : ((int_32)$7 == (int_32)[2]) ) : ((int_32)$14 == (int_32)[2]) )
	
.LABEL $label$27
	$19 = [1680]
	$18 = *([1680])
	if ( ($18 == 0) ){ goto $label$34 }
	
.LOOP $label$36:
	if ( ((int_32)$18 == (int_32)[37]) ){ goto $label$35 }
	CALL prints_l($19, [1])
	$19 = ($19 + [1])
	$18 = *($19)
	if ( $18 ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$35
	CALL printui((CASTING uint_64)(uint_32 $17))
	CALL prints(($19 + [1]))
	
.LABEL $label$34
	$16 = *(($5 + [8]))
	if ( ($17 == 0) ){ goto $label$41 }
	$13 = ((int_64)$16 * (int_64)(CASTING uint_64)(uint_32 $17))
	CALL eosio_assert((uint_64)(((int_64)$13 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$19 = [0]
	$22 = $11
	
.LOOP $label$44:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$43 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$45 }
	
.LOOP $label$46:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$43 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$46 }
	
.LABEL $label$45
	$18 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$43
	$18 = [0]
	
.LABEL $label$42
	CALL eosio_assert($18, [32])
	*(($24 + [72])) = [0]
	*($24 + [64]) = (int_64)0
	$19 = CALL strlen([2112])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$40 }
	*($24 + [64]) = ($19 << [1])
	$18 = (($24 + [64]) | [1])
	if ( $19 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$41
	$13 = (int_64)0
	goto $label$37 
	
.LABEL $label$40
	$17 = (($19 + [16]) & [-16])
	$18 = CALL $275($17)
	*($24 + [64]) = ($17 | [1])
	*($24 + [72]) = $18
	*($24 + [68]) = $19
	
.LABEL $label$39
	CALL memcpy($18, [2112], $19)
	
.LABEL $label$38
	*(($18 + $19)) = [0]
	CALL _ZNSt3__19to_stringEy(($24 + [256]), $1)
	$19 = *($24 + [256])
	$18 = ($19 & [1])
	$19 = CALL $279(($24 + [64]), ( *($24 + [264]) ? (($24 + [256]) | [1]) : $18 ), ( *($24 + [260]) ? uint_32($19 >> [1]) : $18 ))
	$18 = ($19 + [8])
	*((($24 + [376]) + [8])) = *($18)
	*($24 + [376]) = *($19)
	*($19) = [0]
	*(($19 + [4])) = [0]
	*($18) = [0]
	if ( ((*($24 + [256]) & [1]) == 0) ){ goto $label$47 }
	CALL $276(*((($24 + [256]) + [8])))
	
.LABEL $label$47
	if ( ((*($24 + [64]) & [1]) == 0) ){ goto $label$48 }
	CALL $276(*($24 + [72]))
	
.LABEL $label$48
	$22 = CALL current_time()
	*(($24 + [92])) = [0]
	*(($24 + [96])) = [0]
	*($24 + [76]) = [0]
	*($24 + [80]) = [0]
	*($24 + [84]) = [0]
	*($24 + [88]) = [0]
	*($24 + [64]) = ((CASTING uint_32)(uint_64 ((uint_64)$22 / (uint_64)(int_64)1000000)) + [60])
	*($24 + [100]) = [0]
	*(($24 + [104])) = [0]
	*(($24 + [108])) = [0]
	*($24 + [112]) = [0]
	*(($24 + [116])) = [0]
	*(($24 + [120])) = [0]
	$12 = *(($0 + [176]))
	$17 = ($24 + [100])
	$22 = (int_64)0
	$21 = (int_64)59
	$19 = [1440]
	$23 = (int_64)0
	
.LOOP $label$49:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$54 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$53 }
	$18 = ($18 + [165])
	goto $label$52 
	
.LABEL $label$54
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$53
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$52
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$51
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$50
	$19 = ($19 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$49 }
	*($24 + [400]) = $23
	*($24 + [392]) = $12
	$22 = (int_64)0
	$21 = (int_64)59
	$19 = [1424]
	$23 = (int_64)0
	
.LOOP $label$55:
	if ( ((uint_64)$22 > (uint_64)(int_64)10) ){ goto $label$60 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$18 = ($18 + [165])
	goto $label$58 
	
.LABEL $label$60
	$2 = (int_64)0
	if ( ((int_64)$22 == (int_64)11) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$59
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$57
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$56
	$19 = ($19 + [1])
	$21 = ((int_64)$21 + (int_64)-5)
	$23 = ((int_64)$2 | (int_64)$23)
	$22 = ((int_64)$22 + (int_64)1)
	if ( ((int_64)$22 != (int_64)13) ){ goto $label$55 }
	*($24 + [240]) = $23
	$22 = (int_64)0
	$21 = (int_64)59
	$19 = [1792]
	$23 = (int_64)0
	
.LOOP $label$61:
	if ( ((uint_64)$22 > (uint_64)(int_64)7) ){ goto $label$66 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$65 }
	$18 = ($18 + [165])
	goto $label$64 
	
.LABEL $label$66
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$65
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$64
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$63
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$62
	$19 = ($19 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$61 }
	*($24 + [48]) = $23
	*(($24 + [280])) = $9
	*($24 + [264]) = $10
	*($24 + [256]) = $12
	*($24 + [272]) = $13
	CALL $295(($24 + [288]), ($24 + [376]))
	$19 = (($24 + [64]) + [40])
	$18 = *($19)
	if ( ((uint_32)$18 >= (uint_32)*(($24 + [108]))) ){ goto $label$68 }
	CALL $51($18, ($24 + [392]), *($24 + [240]), *($24 + [48]), ($24 + [256]))
	*($19) = (*($19) + [40])
	goto $label$67 
	
.LABEL $label$68
	CALL $52($17, ($24 + [392]), ($24 + [240]), ($24 + [48]), ($24 + [256]))
	
.LABEL $label$67
	if ( ((*($24 + [288]) & [1]) == 0) ){ goto $label$69 }
	CALL $276(*(($24 + [296])))
	
.LABEL $label$69
	*(($24 + [84])) = [1]
	$22 = (int_64)0
	$21 = (int_64)59
	$19 = [1808]
	$23 = (int_64)0
	
.LOOP $label$70:
	if ( ((uint_64)$22 > (uint_64)(int_64)3) ){ goto $label$75 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$74 }
	$18 = ($18 + [165])
	goto $label$73 
	
.LABEL $label$75
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$74
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$73
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$72
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$71
	$19 = ($19 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$70 }
	*($24 + [264]) = (int_64)0
	*($24 + [256]) = $23
	$22 = *(($0 + [176]))
	CALL $53(($24 + [392]), ($24 + [64]))
	$19 = *($24 + [392])
	CALL send_deferred(($24 + [256]), $22, $19, (*($24 + [396]) - $19), [1])
	$19 = *($24 + [392])
	if ( ($19 == 0) ){ goto $label$76 }
	*($24 + [396]) = $19
	CALL $276($19)
	
.LABEL $label$76
	*(($24 + [264])) = [0]
	*($24 + [256]) = (int_64)0
	$19 = CALL strlen([1824])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$79 }
	*($24 + [256]) = ($19 << [1])
	$18 = (($24 + [256]) | [1])
	if ( $19 ){ goto $label$78 }
	goto $label$77 
	
.LABEL $label$79
	$17 = (($19 + [16]) & [-16])
	$18 = CALL $275($17)
	*($24 + [256]) = ($17 | [1])
	*($24 + [264]) = $18
	*($24 + [260]) = $19
	
.LABEL $label$78
	CALL memcpy($18, [1824], $19)
	
.LABEL $label$77
	*(($18 + $19)) = [0]
	if ( (*($24 + [432]) & [1]) ){ goto $label$81 }
	*($24 + [432]) = [0]
	goto $label$80 
	
.LABEL $label$81
	*(*($24 + [440])) = [0]
	*($24 + [436]) = [0]
	
.LABEL $label$80
	CALL $278(($24 + [432]), [0])
	*((($24 + [432]) + [8])) = *((($24 + [256]) + [8]))
	*($24 + [432]) = *($24 + [256])
	$12 = (int_64)
	CALL eosio_assert((uint_64)(((int_64)$12($13 - *(($5 + [8])))) + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$19 = [0]
	$22 = $11
	
.LOOP $label$84:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$83 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$85 }
	
.LOOP $label$86:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$83 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$86 }
	
.LABEL $label$85
	$18 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$84 }
	goto $label$82 
	
.LABEL $label$83
	$18 = [0]
	
.LABEL $label$82
	CALL eosio_assert($18, [32])
	CALL $54(($24 + [64]))
	if ( ((*($24 + [376]) & [1]) == 0) ){ goto $label$37 }
	CALL $276(*($24 + [384]))
	
.LABEL $label$37
	$19 = [0]
	if ( (*($3 + [28]) == 0) ){ goto $label$87 }
	$19 = [0]
	if ( (CALL is_account(*($5 + [32])) == 0) ){ goto $label$87 }
	*(($24 + [264])) = [0]
	*($24 + [256]) = (int_64)0
	$19 = CALL strlen([2176])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$90 }
	*($24 + [256]) = ($19 << [1])
	$18 = (($24 + [256]) | [1])
	if ( $19 ){ goto $label$89 }
	goto $label$88 
	
.LABEL $label$90
	$17 = (($19 + [16]) & [-16])
	$18 = CALL $275($17)
	*($24 + [256]) = ($17 | [1])
	*($24 + [264]) = $18
	*($24 + [260]) = $19
	
.LABEL $label$89
	CALL memcpy($18, [2176], $19)
	
.LABEL $label$88
	*(($18 + $19)) = [0]
	CALL _ZNSt3__19to_stringEy(($24 + [392]), $1)
	$19 = *($24 + [392])
	$18 = ($19 & [1])
	$19 = CALL $279(($24 + [256]), ( *($24 + [400]) ? (($24 + [392]) | [1]) : $18 ), ( *($24 + [396]) ? uint_32($19 >> [1]) : $18 ))
	$18 = ($19 + [8])
	*((($24 + [64]) + [8])) = *($18)
	*($24 + [64]) = *($19)
	*($19) = [0]
	*(($19 + [4])) = [0]
	*($18) = [0]
	*((($24 + [376]) + [8])) = [0]
	*($24 + [376]) = (int_64)0
	$19 = CALL strlen([2224])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$93 }
	*($24 + [376]) = ($19 << [1])
	$17 = (($24 + [376]) | [1])
	$18 = $17
	if ( $19 ){ goto $label$92 }
	goto $label$91 
	
.LABEL $label$93
	$17 = (($19 + [16]) & [-16])
	$18 = CALL $275($17)
	*($24 + [376]) = ($17 | [1])
	*($24 + [384]) = $18
	*($24 + [380]) = $19
	$17 = (($24 + [376]) | [1])
	
.LABEL $label$92
	CALL memcpy($18, [2224], $19)
	
.LABEL $label$91
	*(($18 + $19)) = [0]
	$19 = *($24 + [376])
	$18 = ($19 & [1])
	$19 = CALL $279(($24 + [64]), ( *($24 + [384]) ? $17 : $18 ), ( *($24 + [380]) ? uint_32($19 >> [1]) : $18 ))
	$18 = ($19 + [8])
	*((($24 + [240]) + [8])) = *($18)
	*($24 + [240]) = *($19)
	*($19) = [0]
	*(($19 + [4])) = [0]
	*($18) = [0]
	if ( ((*($24 + [376]) & [1]) == 0) ){ goto $label$94 }
	CALL $276(*((($24 + [376]) + [8])))
	
.LABEL $label$94
	if ( ((*($24 + [64]) & [1]) == 0) ){ goto $label$95 }
	CALL $276(*($24 + [72]))
	
.LABEL $label$95
	if ( ((*($24 + [392]) & [1]) == 0) ){ goto $label$96 }
	CALL $276(*(($24 + [400])))
	
.LABEL $label$96
	$19 = (CASTING uint_32)(uint_64 $16)
	if ( ((*($24 + [256]) & [1]) == 0) ){ goto $label$97 }
	CALL $276(*($24 + [264]))
	
.LABEL $label$97
	$20 = ((float_64)(CASTING float_64)(uint_32 $19) * (float_64)((float_64)(CASTING float_64)(uint_32 *(($3 + [28]))) / (float_64)(CASTING float_64)(uint_32 ((int_32)*($0 + [172]) * (int_32)[100]))))
	$19 = [2256]
	$18 = *([2256])
	if ( ($18 == 0) ){ goto $label$98 }
	
.LOOP $label$100:
	if ( ((int_32)$18 == (int_32)[37]) ){ goto $label$99 }
	CALL prints_l($19, [1])
	$19 = ($19 + [1])
	$18 = *($19)
	if ( $18 ){ goto $label$100 }
	goto $label$98 
	
.LABEL $label$99
	CALL printdf($20)
	CALL prints(($19 + [1]))
	
.LABEL $label$98
	CALL eosio_assert([1], [576])
	$19 = [0]
	$22 = (int_64)1397704004
	
.LOOP $label$103:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$102 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$104 }
	
.LOOP $label$105:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$102 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$105 }
	
.LABEL $label$104
	$18 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$103 }
	goto $label$101 
	
.LABEL $label$102
	$18 = [0]
	
.LABEL $label$101
	CALL eosio_assert($18, [32])
	*($24 + [416]) = [0]
	$22 = *(($5 + [32]))
	$19 = ($0 + [176])
	$2 = *($19)
	*($24 + [392]) = $2
	*($24 + [400]) = $22
	*($24 + [408]) = (int_64)-1
	*((($24 + [392]) + [28])) = [0]
	*((($24 + [392]) + [32])) = [0]
	$18 = CALL db_find_i64($2, $22, (int_64)3607749779137757184, (int_64)1397704004)
	if ( ((int_32)$18 < (int_32)[0]) ){ goto $label$106 }
	$18 = CALL $13(($24 + [392]), $18)
	CALL eosio_assert(((int_32)*($18 + [16]) == (int_32)($24 + [392])), [176])
	$20 = ( $20 ? ((float_64)$20 + (float_64)$20) : (uint_64)(*($18) <= ((int_64)*(($0 + [172])) * (int_64)*($3 + [32]))) )
	
.LABEL $label$106
	$22 = CALL current_time()
	*((($24 + [64]) + [28])) = [0]
	*((($24 + [64]) + [32])) = [0]
	*($24 + [76]) = [0]
	*($24 + [80]) = [0]
	*($24 + [84]) = [0]
	*($24 + [88]) = [0]
	*($24 + [64]) = ((CASTING uint_32)(uint_64 ((uint_64)$22 / (uint_64)(int_64)1000000)) + [60])
	*($24 + [100]) = [0]
	*(($24 + [104])) = [0]
	*(($24 + [108])) = [0]
	*($24 + [112]) = [0]
	*(($24 + [116])) = [0]
	*(($24 + [120])) = [0]
	$16 = *($19)
	$17 = ($24 + [100])
	$22 = (int_64)0
	$21 = (int_64)59
	$19 = [1440]
	$23 = (int_64)0
	
.LOOP $label$107:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$112 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$111 }
	$18 = ($18 + [165])
	goto $label$110 
	
.LABEL $label$112
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$109 }
	goto $label$108 
	
.LABEL $label$111
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$110
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$109
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$108
	$19 = ($19 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$107 }
	*($24 + [384]) = $23
	*($24 + [376]) = $16
	$22 = (int_64)0
	$21 = (int_64)59
	$19 = [1424]
	$23 = (int_64)0
	
.LOOP $label$113:
	if ( ((uint_64)$22 > (uint_64)(int_64)10) ){ goto $label$118 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$117 }
	$18 = ($18 + [165])
	goto $label$116 
	
.LABEL $label$118
	$2 = (int_64)0
	if ( ((int_64)$22 == (int_64)11) ){ goto $label$115 }
	goto $label$114 
	
.LABEL $label$117
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$116
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$115
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$114
	$19 = ($19 + [1])
	$21 = ((int_64)$21 + (int_64)-5)
	$23 = ((int_64)$2 | (int_64)$23)
	$22 = ((int_64)$22 + (int_64)1)
	if ( ((int_64)$22 != (int_64)13) ){ goto $label$113 }
	*($24 + [48]) = $23
	$22 = (int_64)0
	$21 = (int_64)59
	$19 = [1792]
	$23 = (int_64)0
	
.LOOP $label$119:
	if ( ((uint_64)$22 > (uint_64)(int_64)7) ){ goto $label$124 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$123 }
	$18 = ($18 + [165])
	goto $label$122 
	
.LABEL $label$124
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$121 }
	goto $label$120 
	
.LABEL $label$123
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$122
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$121
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$120
	$19 = ($19 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$119 }
	*($24 + [368]) = $23
	$2 = (Rounds 0)($20)
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$22 = (int_64)5459781
	$19 = [0]
	
.LOOP $label$127:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$126 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$128 }
	
.LOOP $label$129:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$126 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$129 }
	
.LABEL $label$128
	$18 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$127 }
	goto $label$125 
	
.LABEL $label$126
	$18 = [0]
	
.LABEL $label$125
	CALL eosio_assert($18, [32])
	$22 = *(($5 + [32]))
	*(($24 + [280])) = (int_64)1397703940
	*($24 + [256]) = *(($0 + [176]))
	*($24 + [272]) = $2
	*($24 + [264]) = $22
	CALL $295((($24 + [256]) + [32]), ($24 + [240]))
	$19 = (($24 + [64]) + [40])
	$18 = *($19)
	if ( ((uint_32)$18 >= (uint_32)*(($24 + [108]))) ){ goto $label$131 }
	CALL $51($18, ($24 + [376]), *($24 + [48]), *($24 + [368]), ($24 + [256]))
	*($19) = (*($19) + [40])
	goto $label$130 
	
.LABEL $label$131
	CALL $52($17, ($24 + [376]), ($24 + [48]), ($24 + [368]), ($24 + [256]))
	
.LABEL $label$130
	if ( ((*($24 + [288]) & [1]) == 0) ){ goto $label$132 }
	CALL $276(*(($24 + [296])))
	
.LABEL $label$132
	*(($24 + [84])) = [2]
	$22 = (int_64)0
	$21 = (int_64)59
	$19 = [1808]
	$23 = (int_64)0
	
.LOOP $label$133:
	if ( ((uint_64)$22 > (uint_64)(int_64)3) ){ goto $label$138 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$137 }
	$18 = ($18 + [165])
	goto $label$136 
	
.LABEL $label$138
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$135 }
	goto $label$134 
	
.LABEL $label$137
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$136
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$135
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$134
	$19 = ($19 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$133 }
	*($24 + [264]) = (int_64)0
	*($24 + [256]) = $23
	$22 = *(($0 + [176]))
	CALL $53(($24 + [376]), ($24 + [64]))
	$19 = *($24 + [376])
	CALL send_deferred(($24 + [256]), $22, $19, (*($24 + [380]) - $19), [1])
	$19 = *($24 + [376])
	if ( ($19 == 0) ){ goto $label$139 }
	*($24 + [380]) = $19
	CALL $276($19)
	
.LABEL $label$139
	CALL $54(($24 + [64]))
	$17 = *($24 + [416])
	if ( ($17 == 0) ){ goto $label$140 }
	$14 = ($24 + [420])
	$19 = *($14)
	if ( ((int_32)$19 == (int_32)$17) ){ goto $label$142 }
	
.LOOP $label$143:
	$19 = ($19 + [-24])
	$18 = *($19)
	*($19) = [0]
	if ( ($18 == 0) ){ goto $label$144 }
	CALL $276($18)
	
.LABEL $label$144
	if ( ((int_32)$17 != (int_32)$19) ){ goto $label$143 }
	$19 = *(($24 + [416]))
	goto $label$141 
	
.LABEL $label$142
	$19 = $17
	
.LABEL $label$141
	*($14) = $17
	CALL $276($19)
	
.LABEL $label$140
	$19 = [1]
	if ( ((*($24 + [240]) & [1]) == 0) ){ goto $label$87 }
	CALL $276(*($24 + [248]))
	
.LABEL $label$87
	$22 = *(($5 + [16]))
	*((($24 + [352]) + [8])) = $22
	$2 = *($5 + [8])
	*((($24 + [32]) + [8])) = $22
	*($24 + [352]) = $2
	*($24 + [36]) = *($24 + [356])
	*($24 + [32]) = *($24 + [352])
	CALL _ZN12thedeosgames6paydivEmyN5eosio5assetEmm($0, (CASTING uint_32)(uint_64 $1), $10, ($24 + [32]), $19, [0])
	$14 = ($5 + [8])
	$19 = *($3 + [40])
	if ( ($19 == 0) ){ goto $label$145 }
	$16 = ((int_64)*($14) * (int_64)(CASTING uint_64)(uint_32 $19))
	CALL eosio_assert((uint_64)(((int_64)$16 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$22 = (int_64)1397704004
	$19 = [0]
	
.LOOP $label$148:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$147 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$149 }
	
.LOOP $label$150:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$147 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$150 }
	
.LABEL $label$149
	$18 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$148 }
	goto $label$146 
	
.LABEL $label$147
	$18 = [0]
	
.LABEL $label$146
	CALL eosio_assert($18, [32])
	CALL _ZNSt3__19to_stringEx(($24 + [256]), ((int_64)$16 / (int_64)*($0 + [172])))
	$19 = CALL $282(($24 + [256]), [0], [2288])
	$18 = ($19 + [8])
	*((($24 + [64]) + [8])) = *($18)
	*($24 + [64]) = *($19)
	*($19) = [0]
	*(($19 + [4])) = [0]
	*($18) = [0]
	$19 = CALL $281(($24 + [64]), [2352])
	$18 = ($19 + [8])
	*((($24 + [376]) + [8])) = *($18)
	*($24 + [376]) = *($19)
	*($19) = [0]
	*(($19 + [4])) = [0]
	*($18) = [0]
	if ( ((*($24 + [64]) & [1]) == 0) ){ goto $label$151 }
	CALL $276(*($24 + [72]))
	
.LABEL $label$151
	if ( ((*($24 + [256]) & [1]) == 0) ){ goto $label$152 }
	CALL $276(*($24 + [264]))
	
.LABEL $label$152
	$22 = CALL current_time()
	*(($24 + [92])) = [0]
	*(($24 + [96])) = [0]
	*($24 + [76]) = [0]
	*($24 + [80]) = [0]
	*($24 + [84]) = [0]
	*($24 + [88]) = [0]
	*($24 + [64]) = ((CASTING uint_32)(uint_64 ((uint_64)$22 / (uint_64)(int_64)1000000)) + [60])
	*($24 + [100]) = [0]
	*(($24 + [104])) = [0]
	*(($24 + [108])) = [0]
	*($24 + [112]) = [0]
	*(($24 + [116])) = [0]
	*(($24 + [120])) = [0]
	$15 = *(($0 + [176]))
	$17 = ($24 + [100])
	$22 = (int_64)0
	$21 = (int_64)59
	$19 = [1440]
	$23 = (int_64)0
	
.LOOP $label$153:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$158 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$157 }
	$18 = ($18 + [165])
	goto $label$156 
	
.LABEL $label$158
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$155 }
	goto $label$154 
	
.LABEL $label$157
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$156
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$155
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$154
	$19 = ($19 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$153 }
	*($24 + [400]) = $23
	*($24 + [392]) = $15
	$22 = (int_64)0
	$2 = (int_64)59
	$19 = [1776]
	$23 = (int_64)0
	
.LOOP $label$159:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$160 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$162 }
	$18 = ($18 + [165])
	goto $label$161 
	
.LABEL $label$162
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$161
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$160
	$19 = ($19 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$159 }
	*($24 + [240]) = $23
	$22 = (int_64)0
	$21 = (int_64)59
	$19 = [1792]
	$23 = (int_64)0
	
.LOOP $label$163:
	if ( ((uint_64)$22 > (uint_64)(int_64)7) ){ goto $label$168 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$167 }
	$18 = ($18 + [165])
	goto $label$166 
	
.LABEL $label$168
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$165 }
	goto $label$164 
	
.LABEL $label$167
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$166
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$165
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$164
	$19 = ($19 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$163 }
	*($24 + [48]) = $23
	*(($24 + [280])) = (int_64)357812225028
	*($24 + [264]) = $10
	*($24 + [256]) = $15
	*($24 + [272]) = $16
	CALL $295(($24 + [288]), ($24 + [376]))
	$19 = (($24 + [64]) + [40])
	$18 = *($19)
	if ( ((uint_32)$18 >= (uint_32)*(($24 + [108]))) ){ goto $label$170 }
	CALL $51($18, ($24 + [392]), *($24 + [240]), *($24 + [48]), ($24 + [256]))
	*($19) = (*($19) + [40])
	goto $label$169 
	
.LABEL $label$170
	CALL $52($17, ($24 + [392]), ($24 + [240]), ($24 + [48]), ($24 + [256]))
	
.LABEL $label$169
	if ( ((*($24 + [288]) & [1]) == 0) ){ goto $label$171 }
	CALL $276(*(($24 + [296])))
	
.LABEL $label$171
	*(($24 + [84])) = [1]
	$22 = (int_64)0
	$21 = (int_64)59
	$19 = [2368]
	$23 = (int_64)0
	
.LOOP $label$172:
	$2 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)24) ){ goto $label$174 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$176 }
	$18 = ($18 + [165])
	goto $label$175 
	
.LABEL $label$176
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$175
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$174 }
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	goto $label$173 
	
.LABEL $label$174
	$2 = ((int_64)$2 & (int_64)15)
	
.LABEL $label$173
	$19 = ($19 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$172 }
	*($24 + [264]) = (int_64)0
	*($24 + [256]) = $23
	$22 = *(($0 + [176]))
	CALL $53(($24 + [392]), ($24 + [64]))
	$19 = *($24 + [392])
	CALL send_deferred(($24 + [256]), $22, $19, (*($24 + [396]) - $19), [1])
	$19 = *($24 + [392])
	if ( ($19 == 0) ){ goto $label$177 }
	*($24 + [396]) = $19
	CALL $276($19)
	
.LABEL $label$177
	CALL $54(($24 + [64]))
	if ( ((*($24 + [376]) & [1]) == 0) ){ goto $label$145 }
	CALL $276(*($24 + [384]))
	
.LABEL $label$145
	*((($24 + [336]) + [8])) = *(($14 + [8]))
	*($24 + [336]) = *($14)
	*($24 + [328]) = $9
	*($24 + [320]) = $13
	CALL eosio_assert((uint_64)(((int_64)$13 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$22 = (uint_64)*($24 + [328]) >> (uint_64)(int_64)8)
	$19 = [0]
	
.LOOP $label$180:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$179 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$181 }
	
.LOOP $label$182:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$179 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$182 }
	
.LABEL $label$181
	$18 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$180 }
	goto $label$178 
	
.LABEL $label$179
	$18 = [0]
	
.LABEL $label$178
	CALL eosio_assert($18, [32])
	*((($24 + [16]) + [8])) = *((($24 + [336]) + [8]))
	*(($24 + [8])) = *((($24 + [320]) + [8]))
	*($24 + [16]) = *($24 + [336])
	*($24) = *($24 + [320])
	CALL _ZN12thedeosgames13add_to_totalsEyN5eosio5assetES1_($0, (int_64)0, ($24 + [16]), $24)
	CALL eosio_assert([1], [576])
	$19 = [0]
	$22 = $11
	
.LOOP $label$185:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$184 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$186 }
	
.LOOP $label$187:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$184 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$187 }
	
.LABEL $label$186
	$18 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$185 }
	goto $label$183 
	
.LABEL $label$184
	$18 = [0]
	
.LABEL $label$183
	CALL eosio_assert($18, [32])
	*(($24 + [424])) = [0]
	*($24 + [408]) = (int_64)-1
	$22 = (int_64)0
	*($24 + [416]) = (int_64)0
	$2 = *(($0 + [176]))
	*($24 + [392]) = $2
	*($24 + [400]) = $10
	$13 = $9
	$16 = (int_64)0
	$19 = CALL db_find_i64($2, $10, (int_64)3607749779137757184, $11)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$188 }
	$19 = CALL $13(($24 + [392]), $19)
	CALL eosio_assert(((int_32)*($19 + [16]) == (int_32)($24 + [392])), [176])
	$13 = *($19 + [8])
	$16 = *($19)
	
.LABEL $label$188
	$21 = (int_64)59
	$19 = [1424]
	$23 = (int_64)0
	
.LOOP $label$189:
	if ( ((uint_64)$22 > (uint_64)(int_64)10) ){ goto $label$194 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$193 }
	$18 = ($18 + [165])
	goto $label$192 
	
.LABEL $label$194
	$2 = (int_64)0
	if ( ((int_64)$22 == (int_64)11) ){ goto $label$191 }
	goto $label$190 
	
.LABEL $label$193
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$192
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$191
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$190
	$19 = ($19 + [1])
	$21 = ((int_64)$21 + (int_64)-5)
	$23 = ((int_64)$2 | (int_64)$23)
	$22 = ((int_64)$22 + (int_64)1)
	if ( ((int_64)$22 != (int_64)13) ){ goto $label$189 }
	*(($24 + [96])) = [0]
	*($24 + [72]) = $10
	*($24 + [64]) = $23
	*($24 + [80]) = (int_64)-1
	*($24 + [88]) = (int_64)0
	$19 = CALL $57(($24 + [64]), (int_64)5459781, [1936])
	*((($24 + [376]) + [8])) = *(($19 + [8]))
	*($24 + [376]) = *($19)
	$17 = *($24 + [88])
	if ( ($17 == 0) ){ goto $label$195 }
	$3 = ($24 + [92])
	$19 = *($3)
	if ( ((int_32)$19 == (int_32)$17) ){ goto $label$197 }
	
.LOOP $label$198:
	$19 = ($19 + [-24])
	$18 = *($19)
	*($19) = [0]
	if ( ($18 == 0) ){ goto $label$199 }
	CALL $276($18)
	
.LABEL $label$199
	if ( ((int_32)$17 != (int_32)$19) ){ goto $label$198 }
	$19 = *(($24 + [88]))
	goto $label$196 
	
.LABEL $label$197
	$19 = $17
	
.LABEL $label$196
	*($3) = $17
	CALL $276($19)
	
.LABEL $label$195
	*((($24 + [64]) + [8])) = [0]
	*($24 + [64]) = (int_64)0
	$19 = CALL strlen([2400])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$17 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$202 }
	*($24 + [64]) = ($19 << [1])
	$18 = (($24 + [64]) | [1])
	if ( $19 ){ goto $label$201 }
	goto $label$200 
	
.LABEL $label$202
	$17 = (($19 + [16]) & [-16])
	$18 = CALL $275($17)
	*($24 + [64]) = ($17 | [1])
	*($24 + [72]) = $18
	*($24 + [68]) = $19
	
.LABEL $label$201
	CALL memcpy($18, [2400], $19)
	
.LABEL $label$200
	*(($18 + $19)) = [0]
	CALL _ZNSt3__19to_stringEy(($24 + [256]), $1)
	$19 = *($24 + [256])
	$18 = ($19 & [1])
	$19 = CALL $279(($24 + [64]), ( *($24 + [264]) ? (($24 + [256]) | [1]) : $18 ), ( *($24 + [260]) ? uint_32($19 >> [1]) : $18 ))
	$17 = *($19)
	*($19) = [0]
	*($19 + [4]) = [0]
	$3 = *($19 + [8])
	*($19 + [8]) = [0]
	if ( ((*($24 + [256]) & [1]) == 0) ){ goto $label$203 }
	CALL $276(*(($24 + [264])))
	
.LABEL $label$203
	if ( ((*($24 + [64]) & [1]) == 0) ){ goto $label$204 }
	CALL $276(*($24 + [72]))
	
.LABEL $label$204
	$22 = CALL current_time()
	*(($24 + [284])) = [0]
	*(($24 + [288])) = [0]
	*($24 + [268]) = [0]
	*($24 + [272]) = [0]
	*($24 + [276]) = [0]
	*($24 + [280]) = [0]
	*($24 + [256]) = ((CASTING uint_32)(uint_64 ((uint_64)$22 / (uint_64)(int_64)1000000)) + [60])
	*($24 + [292]) = [0]
	*(($24 + [296])) = [0]
	*(($24 + [300])) = [0]
	*($24 + [304]) = [0]
	*(($24 + [308])) = [0]
	*(($24 + [312])) = [0]
	$10 = *(($0 + [176]))
	$7 = ($24 + [292])
	$22 = (int_64)0
	$21 = (int_64)59
	$19 = [1440]
	$23 = (int_64)0
	
.LOOP $label$205:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$210 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$209 }
	$18 = ($18 + [165])
	goto $label$208 
	
.LABEL $label$210
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$207 }
	goto $label$206 
	
.LABEL $label$209
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$208
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$207
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$206
	$19 = ($19 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$205 }
	*($24 + [248]) = $23
	*($24 + [240]) = $10
	$22 = (int_64)0
	$2 = (int_64)59
	$19 = [1776]
	$23 = (int_64)0
	
.LOOP $label$211:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$212 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$214 }
	$18 = ($18 + [165])
	goto $label$213 
	
.LABEL $label$214
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$213
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$212
	$19 = ($19 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$211 }
	*($24 + [368]) = $23
	$22 = (int_64)0
	$21 = (int_64)59
	$19 = [2432]
	$23 = (int_64)0
	
.LOOP $label$215:
	if ( ((uint_64)$22 > (uint_64)(int_64)10) ){ goto $label$220 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$219 }
	$18 = ($18 + [165])
	goto $label$218 
	
.LABEL $label$220
	$2 = (int_64)0
	if ( ((int_64)$22 == (int_64)11) ){ goto $label$217 }
	goto $label$216 
	
.LABEL $label$219
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$218
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$217
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$216
	$19 = ($19 + [1])
	$21 = ((int_64)$21 + (int_64)-5)
	$23 = ((int_64)$2 | (int_64)$23)
	$22 = ((int_64)$22 + (int_64)1)
	if ( ((int_64)$22 != (int_64)13) ){ goto $label$215 }
	*($24 + [232]) = $23
	*(($24 + [56])) = [0]
	*($24 + [48]) = (int_64)0
	$19 = CALL strlen([1904])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$223 }
	*($24 + [48]) = ($19 << [1])
	$18 = (($24 + [48]) | [1])
	if ( $19 ){ goto $label$222 }
	goto $label$221 
	
.LABEL $label$223
	$8 = (($19 + [16]) & [-16])
	$18 = CALL $275($8)
	*($24 + [48]) = ($8 | [1])
	*($24 + [56]) = $18
	*($24 + [52]) = $19
	
.LABEL $label$222
	CALL memcpy($18, [1904], $19)
	
.LABEL $label$221
	*(($18 + $19)) = [0]
	*($24 + [72]) = *(($5 + [24]))
	*((($24 + [64]) + [28])) = *(($14 + [12]))
	*((($24 + [64]) + [24])) = *(($14 + [8]))
	*((($24 + [64]) + [20])) = *(($14 + [4]))
	*($24 + [64]) = $1
	*($24 + [80]) = *($14)
	*(($24 + [100])) = *($24 + [52 align=4])
	*($24 + [96]) = *($24 + [48])
	*($24 + [48]) = [0]
	*($24 + [52]) = [0]
	*((($24 + [48]) + [8])) = [0]
	CALL $295((($24 + [64]) + [44]), ($24 + [448]))
	CALL $295((($24 + [64]) + [56]), ($24 + [432]))
	*((($24 + [64]) + [80])) = $9
	*(($24 + [160])) = $13
	*(($24 + [180])) = *((($24 + [376]) + [12]))
	*(($24 + [176])) = *((($24 + [376]) + [8]))
	*(($24 + [172])) = *($24 + [380])
	*($24 + [136]) = $12
	*($24 + [152]) = $16
	*($24 + [168]) = *($24 + [376])
	*($24 + [184]) = *(($5 + [80]))
	*(($24 + [216])) = *(($5 + [72]))
	*(($24 + [208])) = *(($5 + [64]))
	*(($24 + [200])) = *(($5 + [56]))
	*($24 + [192]) = *($5 + [48])
	$18 = (($24 + [256]) + [40])
	$19 = *($18)
	if ( ((uint_32)$19 >= (uint_32)*((($24 + [256]) + [44]))) ){ goto $label$225 }
	*($19 + [8]) = *($24 + [232])
	*($19) = *($24 + [368])
	*($19 + [16 align=4]) = (int_64)0
	*(($7 = ($19 + [24]))) = [0]
	$14 = CALL $275([16])
	*($19 + [16]) = $14
	$8 = ($14 + [16])
	*($7) = $8
	*(($14 + [8])) = *((($24 + [240]) + [8]))
	*($14) = *($24 + [240])
	*(($19 + [20])) = $8
	CALL $75(($19 + [28]), ($24 + [64]))
	*($18) = (*($18) + [40])
	goto $label$224 
	
.LABEL $label$225
	CALL $76($7, ($24 + [240]), ($24 + [368]), ($24 + [232]), ($24 + [64]))
	
.LABEL $label$224
	if ( ((*($24 + [120]) & [1]) == 0) ){ goto $label$226 }
	CALL $276(*(($24 + [128])))
	
.LABEL $label$226
	if ( ((*($24 + [108]) & [1]) == 0) ){ goto $label$227 }
	CALL $276(*(($24 + [116])))
	
.LABEL $label$227
	if ( ((*(($24 + [96])) & [1]) == 0) ){ goto $label$228 }
	CALL $276(*(($24 + [104])))
	
.LABEL $label$228
	if ( ((*($24 + [48]) & [1]) == 0) ){ goto $label$229 }
	CALL $276(*(($24 + [56])))
	
.LABEL $label$229
	*(($24 + [276])) = [1]
	$22 = (int_64)0
	$21 = (int_64)59
	$19 = [1920]
	$23 = (int_64)0
	
.LOOP $label$230:
	if ( ((uint_64)$22 > (uint_64)(int_64)9) ){ goto $label$235 }
	$18 = *($19)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$234 }
	$18 = ($18 + [165])
	goto $label$233 
	
.LABEL $label$235
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$232 }
	goto $label$231 
	
.LABEL $label$234
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$233
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$232
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$231
	$19 = ($19 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$230 }
	*($24 + [72]) = (int_64)0
	*($24 + [64]) = $23
	$22 = *(($0 + [176]))
	CALL $53(($24 + [240]), ($24 + [256]))
	$0 = *($24 + [240])
	CALL send_deferred(($24 + [64]), $22, $0, (*($24 + [244]) - $0), [0])
	$0 = *($24 + [240])
	if ( ($0 == 0) ){ goto $label$236 }
	*($24 + [244]) = $0
	CALL $276($0)
	
.LABEL $label$236
	CALL eosio_assert($6, [2448])
	CALL eosio_assert($6, [2496])
	$0 = CALL db_next_i64(*($5 + [92]), ($24 + [64]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$237 }
	CALL $73($4, $0)
	
.LABEL $label$237
	CALL $77($4, $5)
	CALL $54(($24 + [256]))
	if ( (($17 & [1]) == 0) ){ goto $label$238 }
	CALL $276($3)
	
.LABEL $label$238
	$18 = *($24 + [416])
	if ( ($18 == 0) ){ goto $label$239 }
	$5 = ($24 + [420])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$18) ){ goto $label$241 }
	
.LOOP $label$242:
	$0 = ($0 + [-24])
	$19 = *($0)
	*($0) = [0]
	if ( ($19 == 0) ){ goto $label$243 }
	CALL $276($19)
	
.LABEL $label$243
	if ( ((int_32)$18 != (int_32)$0) ){ goto $label$242 }
	$0 = *(($24 + [416]))
	goto $label$240 
	
.LABEL $label$241
	$0 = $18
	
.LABEL $label$240
	*($5) = $18
	CALL $276($0)
	
.LABEL $label$239
	if ( ((*($24 + [432]) & [1]) == 0) ){ goto $label$244 }
	CALL $276(*($24 + [440]))
	
.LABEL $label$244
	if ( ((*($24 + [448]) & [1]) == 0) ){ goto $label$245 }
	CALL $276(*($24 + [456]))
	
.LABEL $label$245
	*([0] + [4]) = ($24 + [464])
	return (unreachable)
	
.LABEL $label$18
	CALL $277(($24 + [432]))
	
.LABEL $label$17
	CALL $277(($24 + [64]))
	
.LABEL $label$16
	CALL $277(($24 + [48]))
	
.LABEL $label$15
	CALL $277(($24 + [64]))
	
.LABEL $label$14
	CALL $277(($24 + [256]))
	
.LABEL $label$13
	CALL $277(($24 + [256]))
	
.LABEL $label$12
	CALL $277(($24 + [376]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [768])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $275([112])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [32])
	*($4 + [88]) = $0
	CALL $87(($8 + [32]), $4)
	*($4 + [92]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [92])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $34($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $276($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC _ZN12thedeosgames10slots_spinEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = ((int_64)(CASTING uint_64)(uint_32 ((CALL tapos_block_prefix() + CALL $fimport$43()) + (CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$15() / (uint_64)(int_64)1000000)))) + (int_64)$1)
	*($0 + [2272]) = $1
	$1 = ((int_64)(uint_64)$1 >> (uint_64)(int_64)12) ^ (int_64)$1
	$1 = ((int_64)((int_64)$1) << (int_64)25) ^ (int_64)$1
	$1 = ((int_64)(uint_64)$1) >> (uint_64)(int_64)27
	*($0 + [2272]) = $1 ^ (int_64)$1))
	*(($0 + [2208])) = ((int_64)$1 * (int_64)2685821657736338717)
	$2 = ($0 + [2212])
	$4 = [0]
	$3 = ($0 + [2272])
	
.LOOP $label$1:
	$1 = *($3)
	$1 = ((int_64)(uint_64)$1 >> (uint_64)(int_64)12) ^ (int_64)$1
	$1 = ((int_64)((int_64)$1) << (int_64)25) ^ (int_64)$1
	$1 = ((int_64)(uint_64)$1) >> (uint_64)(int_64)27
	*($3) = $1 ^ (int_64)$1))
	*(($2 + $4)) = ((int_64)$1 * (int_64)2685821657736338717)
	$4 = ($4 + [4])
	if ( ((int_32)$4 != (int_32)[60]) ){ goto $label$1 }
	$1 = *($4)
	$1 = ((int_64)((int_64)$1 << (int_64)31) ^ (int_64)$1)
	$1 = *($0 + [2208])
	$1 = ((int_64)((int_64)((int_64)(uint_64)$1 >> (uint_64)(int_64)30) ^ (int_64)$1) ^ (int_64)$1) ^ (int_64)(uint_64)$1 >> (uint_64)(int_64)11
	*(($4 = ($0 + [2212]))) = $1))
	return ((CASTING uint_32)(uint_64 ((int_64)$1 * (int_64)1181783497276652981)) & [63])
}

int_32 .FUNC _ZN12thedeosgames9slots_winEmmm (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$2 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$2 }
	$6 = [500]
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = (((int_32)$1 == (int_32)[2]) & ((int_32)$2 == (int_32)[2]))
	if ( ((int_32)$4 != (int_32)[1]) ){ goto $label$3 }
	$6 = [100]
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$1 }
	
.LABEL $label$3
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$4 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$4 }
	$6 = [50]
	if ( ((int_32)$3 == (int_32)[3]) ){ goto $label$1 }
	
.LABEL $label$4
	if ( ((int_32)$1 != (int_32)[4]) ){ goto $label$5 }
	if ( ((int_32)$2 != (int_32)[4]) ){ goto $label$5 }
	$6 = [30]
	if ( ((int_32)$3 == (int_32)[4]) ){ goto $label$1 }
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)[5]) ){ goto $label$6 }
	if ( ((int_32)$2 != (int_32)[5]) ){ goto $label$6 }
	$6 = [20]
	if ( ((int_32)$3 == (int_32)[5]) ){ goto $label$1 }
	
.LABEL $label$6
	if ( ((int_32)$1 != (int_32)[6]) ){ goto $label$7 }
	if ( ((int_32)$2 != (int_32)[6]) ){ goto $label$7 }
	$6 = [10]
	if ( ((int_32)$3 == (int_32)[6]) ){ goto $label$1 }
	
.LABEL $label$7
	$6 = [5]
	$5 = ((int_32)$3 == (int_32)[2])
	if ( (((int_32)$1 == (int_32)[2]) & $5) ){ goto $label$1 }
	if ( ($4 | (((int_32)$2 == (int_32)[2]) & $5)) ){ goto $label$1 }
	$6 = ( [2] ? ( [2] ? (((int_32)$3 == (int_32)[2]) << [1]) : ((int_32)$2 == (int_32)[2]) ) : ((int_32)$1 == (int_32)[2]) )
	
.LABEL $label$1
	return $6
}

void .FUNC $76 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $275(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $275([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	CALL $75(($8 + [28]), $4)
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $276($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $276($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $276($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $276($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $276($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*(($1 + [92])))
}

void .FUNC _ZN12thedeosgames13add_to_totalsEyN5eosio5assetES1_ (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [80])
	*([0] + [4]) = $10
	CALL require_auth(*($0 + [176]))
	$4 = *(($0 + [2192]))
	$9 = *(($0 + [2196]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$8 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$1 }
	$9 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [2168])
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$6 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [48]) == (int_32)$6), [176])
	if ( $8 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$8 = CALL db_find_i64(*(($0 + [2168])), *(($0 + [2176])), (int_64)-4157494450294226944, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $82($6, $8)
	CALL eosio_assert(((int_32)*($8 + [48]) == (int_32)$6), [176])
	
.LABEL $label$5
	CALL eosio_assert([1], [288])
	CALL eosio_assert(((int_32)*($8 + [48]) == (int_32)$6), [336])
	CALL eosio_assert(((int_64)*(($0 + [2168])) == (int_64)CALL $fimport$14()), [384])
	$1 = *($8)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($8 + [16]))), [656])
	$7 = ((int_64)*($8 + [8]) + (int_64)*($2))
	*($8 + [8]) = $7
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [704])
	CALL eosio_assert(((int_64)*($8 + [8]) < (int_64)4611686018427387904), [736])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($8 + [32]))), [656])
	$7 = ((int_64)*($8 + [24]) + (int_64)*($3))
	*($8 + [24]) = $7
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [704])
	CALL eosio_assert(((int_64)*($8 + [24]) < (int_64)4611686018427387904), [736])
	*($8 + [40]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$1 == (int_64)*($8)), [448])
	*($10 + [72]) = (($10 + [16]) + [48])
	*($10 + [68]) = ($10 + [16])
	*($10 + [64]) = ($10 + [16])
	CALL $84(($10 + [64]), $8)
	CALL db_update_i64(*($8 + [52]), (int_64)0, ($10 + [16]), [48])
	$8 = ($0 + [2184])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$3 }
	*($8) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$4
	$7 = *(($0 + [176]))
	CALL eosio_assert(((int_64)*(($0 + [2168])) == (int_64)CALL $fimport$14()), [512])
	$8 = CALL $275([64])
	$9 = CALL $83($8)
	*($8 + [48]) = $6
	*($8) = $1
	*(($8 + [20])) = *(($2 + [12]))
	*(($8 + [16])) = *(($2 + [8]))
	*(($8 + [12])) = *(($2 + [4]))
	*($8 + [8]) = *($2)
	*(($8 + [32])) = *(($3 + [8]))
	*($8 + [24]) = *($3)
	*($8 + [40]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($10 + [72]) = (($10 + [16]) + [48])
	*($10 + [68]) = ($10 + [16])
	*($10 + [64]) = ($10 + [16])
	CALL $84(($10 + [64]), $9)
	$1 = *($8)
	$9 = CALL db_store_i64(*(($0 + [2176])), (int_64)-4157494450294226944, $7, $1, ($10 + [16]), [48])
	*($8 + [52]) = $9
	$6 = ($0 + [2184])
	if ( (uint_64)($1 <= *($6)) ){ goto $label$7 }
	*($6) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($10 + [64]) = $8
	$1 = *($8)
	*($10 + [16]) = $1
	*($10 + [12]) = $9
	$5 = ($0 + [2196])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [2200]))) ){ goto $label$9 }
	*($6 + [8]) = $1
	*($6 + [16]) = $9
	*($10 + [64]) = [0]
	*($6) = $8
	*($5) = ($6 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $85(($0 + [2192]), ($10 + [64]), ($10 + [16]), ($10 + [12]))
	
.LABEL $label$8
	$8 = *($10 + [64])
	*($10 + [64]) = [0]
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $276($8)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [80])
}

void .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [32])
	$2 = *(($1 + [36]))
	*($5 + [24]) = ($5 + [16])
	*($5 + [16]) = [32]
	$2 = ( $2 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($2 + [32])
	$4 = (CASTING uint_64)(uint_32 $2)
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	*($5 + [16]) = $3
	*($5) = $1
	CALL $78($5, ($5 + [24]))
	$3 = *($5 + [16])
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $41($0, $3)
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$2 = [0]
	$3 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = $2
	*($5 + [16]) = $5
	*($5 + [24]) = $1
	CALL $79(($5 + [24]), ($5 + [16]))
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$4 = *($2 + [44])
	$2 = *($0)
	$5 = (CASTING uint_64)(uint_32 ( *(($2 + [48])) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	$3 = *($1)
	$4 = *($3)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($3) = $4
	$2 = *(($2 + [44]))
	$2 = ( *(($2 + [48])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	if ( ($2 == 0) ){ goto $label$2 }
	*($3) = ($2 + $4)
	
.LABEL $label$2
	$4 = *($2 + [56])
	$2 = *($0)
	$5 = (CASTING uint_64)(uint_32 ( *(($2 + [60])) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	$0 = *($1)
	$4 = *($0)
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($0) = $4
	$2 = *(($2 + [56]))
	$2 = ( *(($2 + [60])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	if ( ($2 == 0) ){ goto $label$4 }
	*($0) = ($2 + $4)
	
.LABEL $label$4
	*(($4 = *($1))) = (*($4) + [16])
	*(($4 = *($1))) = (*($4) + [16])
	*(($4 = *($1))) = (*($4) + [16])
	*(($4 = *($1))) = (*($4) + [8])
	*(($4 = *($1))) = (*($4) + [32])
}

void .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $46(*($1), ($0 + [32]))
	*($4 + [8]) = $0
	CALL $80(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $241 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL $167(*($1), ($3 + [48]))
	CALL $167(*($1), ($3 + [60]))
	CALL $167(*($1), ($3 + [72]))
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [88]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC $259 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [24]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($2 + [32]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($2 + [36]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($2 + [40]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($2 + [44]), *($1 + [4]), [4])
	*($1 + [4]) = (*($1 + [4]) + [4])
}

void .FUNC $258 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($2 + [8]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($2 + [12]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($2 + [16]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	*($4 + [8]) = $2
	CALL $259(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC __fpclassifyl (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [3] ? [2] : ((int_64)((int_64)$2 | (int_64)$0) != (int_64)0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

void .FUNC frexpl (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$5 = ($4) & [32767]
	if ( ((int_32)$5) == (int_32)[32767]) ){ goto $label$1 }
	if ( $5 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($6, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL frexpl(($6 + [16]), *($6), *(($6 + [8])), $3)
	$4 = (*($3) + [-120])
	$2 = *($6 + [24])
	$1 = *($6 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($4 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($4 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	*($3) = $4
	
.LABEL $label$1
	*($0) = $1
	*(($0 + [8])) = $2
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC wcrtomb (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL __errno_location()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL __errno_location()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $223 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [576])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [32])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [800])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [800])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [800])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

int_32 .FUNC __lctrans (int_32 $0, int_32 $1)
{
	return CALL __lctrans_impl($0, $1)
}

void .FUNC $268 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [800])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($2 + [4]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($2 + [8]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($2 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($4 + [8]) = $2
	CALL $269(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $251 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	CALL $167(*($1), (*($0) + [44]))
	$2 = *($0)
	CALL $167(*($1), ($2 + [56]))
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($2 + [72]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [800])
	CALL memcpy(($2 + [80]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($2 + [88]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [800])
	CALL memcpy(($2 + [96]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($4 + [8]) = $2
	CALL $252(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $250 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $167(*($1), ($0 + [32]))
	*($4 + [8]) = $0
	CALL $251(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $253 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($4 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [32])
	*($0 + [32]) = (int_64)0
	*(($0 + [40])) = (int_64)0
	*(($0 + [48])) = (int_64)0
	*($0 + [56]) = (int_64)0
	*(($0 + [64])) = [0]
	*($0 + [72]) = (int_64)0
	*(($4 = ($0 + [80]))) = (int_64)1398362884
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [32])
	*(($4 = ($0 + [96]))) = (int_64)1398362884
	*($0 + [88]) = (int_64)0
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$5 = [0]
	
.LABEL $label$11
	CALL eosio_assert($5, [32])
	*(($4 = ($0 + [112]))) = (int_64)1398362884
	*($0 + [104]) = (int_64)0
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$5 = [0]
	
.LABEL $label$16
	CALL eosio_assert($5, [32])
	*($0 + [120]) = (int_64)0
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $255(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $252 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [104]), *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [112]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [120]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[31]), [800])
	CALL memcpy(($0 + [128]), *($2 + [4]), [32])
	*($2 + [4]) = (*($2 + [4]) + [32])
}

void .FUNC $255 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $167(*($1), ($0 + [32]))
	*($4 + [8]) = $0
	CALL $256(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $254 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [352])
	*([0] + [4]) = $9
	*(($9 + [172])) = *(($1 + [28]))
	*(($5 = (($9 + [160]) + [8]))) = *(($1 + [24]))
	*($9 + [160]) = *($1 + [16])
	*($9 + [164]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $295(($9 + [144]), ($1 + [32]))
	CALL $295(($9 + [128]), ($1 + [44]))
	CALL $295(($9 + [112]), ($1 + [56]))
	*(($6 = (($9 + [96]) + [8]))) = *(($1 + [80]))
	*(($7 = (($9 + [80]) + [8]))) = *(($1 + [96]))
	*($9 + [96]) = *($1 + [72])
	*($9 + [80]) = *($1 + [88])
	*(($8 = (($9 + [64]) + [8]))) = *(($1 + [112]))
	*($9 + [64]) = *($1 + [104])
	$4 = *($1 + [120])
	*((($9 + [224]) + [8])) = *($8)
	*((($9 + [208]) + [8])) = *($7)
	*($9 + [224]) = *($9 + [64])
	*($9 + [208]) = *($9 + [80])
	*((($9 + [192]) + [8])) = *($6)
	*($9 + [192]) = *($9 + [96])
	*((($9 + [176]) + [8])) = *($5)
	*($9 + [176]) = *($9 + [160])
	$1 = *($0 + [4])
	$5 = *($1 + [4])
	$0 = (*(*($0)) + int_32($5 >> [1]))
	$1 = *($1)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($5 = (($9 + [336]) + [8]))) = *((($9 + [176]) + [8]))
	*($9 + [336]) = *($9 + [176])
	CALL $295(($9 + [320]), ($9 + [144]))
	CALL $295(($9 + [304]), ($9 + [128]))
	CALL $295(($9 + [288]), ($9 + [112]))
	*(($6 = (($9 + [272]) + [8]))) = *((($9 + [192]) + [8]))
	*(($7 = (($9 + [256]) + [8]))) = *((($9 + [208]) + [8]))
	*($9 + [272]) = *($9 + [192])
	*($9 + [256]) = *($9 + [208])
	*(($8 = (($9 + [240]) + [8]))) = *((($9 + [224]) + [8]))
	*($9 + [240]) = *($9 + [224])
	*((($9 + [48]) + [8])) = *($5)
	*($9 + [48]) = *($9 + [336])
	*((($9 + [32]) + [8])) = *($6)
	*($9 + [32]) = *($9 + [272])
	*((($9 + [16]) + [8])) = *($7)
	*($9 + [16]) = *($9 + [256])
	*(($9 + [8])) = *($8)
	*($9) = *($9 + [240])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($9 + [48])), (int_32 ($9 + [320])), (int_32 ($9 + [304])), (int_32 ($9 + [288])), (int_32 ($9 + [32])), (int_32 ($9 + [16])), (int_32 $9), (int_32 $4), (int_64 $1))
	if ( ((*($9 + [288]) & [1]) == 0) ){ goto $label$2 }
	CALL $276(*($9 + [296]))
	
.LABEL $label$2
	if ( ((*($9 + [304]) & [1]) == 0) ){ goto $label$3 }
	CALL $276(*($9 + [312]))
	
.LABEL $label$3
	if ( ((*($9 + [320]) & [1]) == 0) ){ goto $label$4 }
	CALL $276(*($9 + [328]))
	
.LABEL $label$4
	if ( ((*($9 + [112]) & [1]) == 0) ){ goto $label$5 }
	CALL $276(*($9 + [120]))
	
.LABEL $label$5
	if ( ((*($9 + [128]) & [1]) == 0) ){ goto $label$6 }
	CALL $276(*($9 + [136]))
	
.LABEL $label$6
	if ( ((*($9 + [144]) & [1]) == 0) ){ goto $label$7 }
	CALL $276(*($9 + [152]))
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [352])
}

void .FUNC $257 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC $256 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	CALL $167(*($1), (*($0) + [44]))
	$2 = *($0)
	CALL $167(*($1), ($2 + [56]))
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($2 + [72]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [800])
	CALL memcpy(($2 + [80]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($2 + [88]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [800])
	CALL memcpy(($2 + [96]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($2 + [104]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [800])
	CALL memcpy(($2 + [112]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($2 + [120]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $98 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $276($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $276($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [76]))
}

int_32 .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [768])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $275([112])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [32])
	*($4 + [88]) = $0
	CALL $105(($8 + [32]), $4)
	*($4 + [92]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [92])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $106($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $276($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $239 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)1398362884
	CALL eosio_assert([1], [576])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [32])
	*(($0 + [40])) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [576])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [32])
	*($0 + [48]) = (int_64)0
	*(($0 + [56])) = (int_64)0
	*(($0 + [64])) = (int_64)0
	*($0 + [72]) = (int_64)0
	*(($0 + [80])) = [0]
	*($0 + [88]) = (int_64)0
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $241(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC $238 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [2192]))
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = ($0 + [2196])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $276($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$4 = *(($0 + [2192]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*($3) = $1
	CALL $276($4)
	
.LABEL $label$1
	$1 = *(($0 + [2152]))
	if ( ($1 == 0) ){ goto $label$6 }
	$3 = ($0 + [2156])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $276($2)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$4 = *(($0 + [2152]))
	goto $label$7 
	
.LABEL $label$8
	$4 = $1
	
.LABEL $label$7
	*($3) = $1
	CALL $276($4)
	
.LABEL $label$6
	$1 = *(($0 + [2112]))
	if ( ($1 == 0) ){ goto $label$11 }
	$3 = ($0 + [2116])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	CALL $276($2)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$14 }
	$4 = *(($0 + [2112]))
	goto $label$12 
	
.LABEL $label$13
	$4 = $1
	
.LABEL $label$12
	*($3) = $1
	CALL $276($4)
	
.LABEL $label$11
	$1 = *(($0 + [2072]))
	if ( ($1 == 0) ){ goto $label$16 }
	$3 = ($0 + [2076])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$20 }
	CALL $276($2)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$19 }
	$4 = *(($0 + [2072]))
	goto $label$17 
	
.LABEL $label$18
	$4 = $1
	
.LABEL $label$17
	*($3) = $1
	CALL $276($4)
	
.LABEL $label$16
	$1 = *(($0 + [2032]))
	if ( ($1 == 0) ){ goto $label$21 }
	$3 = ($0 + [2036])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$23 }
	
.LOOP $label$24:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$25 }
	CALL $276($2)
	
.LABEL $label$25
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$24 }
	$4 = *(($0 + [2032]))
	goto $label$22 
	
.LABEL $label$23
	$4 = $1
	
.LABEL $label$22
	*($3) = $1
	CALL $276($4)
	
.LABEL $label$21
	$1 = *(($0 + [1992]))
	if ( ($1 == 0) ){ goto $label$26 }
	$3 = ($0 + [1996])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$28 }
	
.LOOP $label$29:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$30 }
	CALL $276($2)
	
.LABEL $label$30
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$29 }
	$4 = *(($0 + [1992]))
	goto $label$27 
	
.LABEL $label$28
	$4 = $1
	
.LABEL $label$27
	*($3) = $1
	CALL $276($4)
	
.LABEL $label$26
	$1 = *(($0 + [1952]))
	if ( ($1 == 0) ){ goto $label$31 }
	$3 = ($0 + [1956])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$33 }
	
.LOOP $label$34:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$35 }
	CALL $276($2)
	
.LABEL $label$35
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$34 }
	$4 = *(($0 + [1952]))
	goto $label$32 
	
.LABEL $label$33
	$4 = $1
	
.LABEL $label$32
	*($3) = $1
	CALL $276($4)
	
.LABEL $label$31
	$1 = *(($0 + [1912]))
	if ( ($1 == 0) ){ goto $label$36 }
	$3 = ($0 + [1916])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$38 }
	
.LOOP $label$39:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$40 }
	CALL $276($2)
	
.LABEL $label$40
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$39 }
	$4 = *(($0 + [1912]))
	goto $label$37 
	
.LABEL $label$38
	$4 = $1
	
.LABEL $label$37
	*($3) = $1
	CALL $276($4)
	
.LABEL $label$36
	$1 = *(($0 + [1872]))
	if ( ($1 == 0) ){ goto $label$41 }
	$3 = ($0 + [1876])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$43 }
	
.LOOP $label$44:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$45 }
	CALL $276($2)
	
.LABEL $label$45
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$44 }
	$4 = *(($0 + [1872]))
	goto $label$42 
	
.LABEL $label$43
	$4 = $1
	
.LABEL $label$42
	*($3) = $1
	CALL $276($4)
	
.LABEL $label$41
	$1 = *(($0 + [1832]))
	if ( ($1 == 0) ){ goto $label$46 }
	$3 = ($0 + [1836])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$48 }
	
.LOOP $label$49:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$50 }
	CALL $276($2)
	
.LABEL $label$50
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$49 }
	$4 = *(($0 + [1832]))
	goto $label$47 
	
.LABEL $label$48
	$4 = $1
	
.LABEL $label$47
	*($3) = $1
	CALL $276($4)
	
.LABEL $label$46
	$1 = *(($0 + [1792]))
	if ( ($1 == 0) ){ goto $label$51 }
	$3 = ($0 + [1796])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$53 }
	
.LOOP $label$54:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$55 }
	CALL $276($2)
	
.LABEL $label$55
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$54 }
	$4 = *(($0 + [1792]))
	goto $label$52 
	
.LABEL $label$53
	$4 = $1
	
.LABEL $label$52
	*($3) = $1
	CALL $276($4)
	
.LABEL $label$51
	$1 = *(($0 + [1752]))
	if ( ($1 == 0) ){ goto $label$56 }
	$3 = ($0 + [1756])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$58 }
	
.LOOP $label$59:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$60 }
	CALL $276($2)
	
.LABEL $label$60
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$59 }
	$4 = *(($0 + [1752]))
	goto $label$57 
	
.LABEL $label$58
	$4 = $1
	
.LABEL $label$57
	*($3) = $1
	CALL $276($4)
	
.LABEL $label$56
	$1 = *(($0 + [152]))
	if ( ($1 == 0) ){ goto $label$61 }
	$3 = ($0 + [156])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$63 }
	
.LOOP $label$64:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$65 }
	CALL $276($2)
	
.LABEL $label$65
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$64 }
	$4 = *(($0 + [152]))
	goto $label$62 
	
.LABEL $label$63
	$4 = $1
	
.LABEL $label$62
	*($3) = $1
	CALL $276($4)
	
.LABEL $label$61
	$1 = *(($0 + [112]))
	if ( ($1 == 0) ){ goto $label$66 }
	$3 = ($0 + [116])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$68 }
	
.LOOP $label$69:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$70 }
	CALL $276($2)
	
.LABEL $label$70
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$69 }
	$4 = *(($0 + [112]))
	goto $label$67 
	
.LABEL $label$68
	$4 = $1
	
.LABEL $label$67
	*($3) = $1
	CALL $276($4)
	
.LABEL $label$66
	$1 = *(($0 + [72]))
	if ( ($1 == 0) ){ goto $label$71 }
	$3 = ($0 + [76])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$73 }
	
.LOOP $label$74:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$75 }
	CALL $276($2)
	
.LABEL $label$75
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$74 }
	$4 = *(($0 + [72]))
	goto $label$72 
	
.LABEL $label$73
	$4 = $1
	
.LABEL $label$72
	*($3) = $1
	CALL $276($4)
	
.LABEL $label$71
	$1 = *(($0 + [32]))
	if ( ($1 == 0) ){ goto $label$76 }
	$3 = ($0 + [36])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$78 }
	
.LOOP $label$79:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$80 }
	CALL $276($2)
	
.LABEL $label$80
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$79 }
	$4 = *(($0 + [32]))
	goto $label$77 
	
.LABEL $label$78
	$4 = $1
	
.LABEL $label$77
	*($3) = $1
	CALL $276($4)
	
.LABEL $label$76
	return $0
}

void .FUNC _ZN12thedeosgames9cleanbyidEyh (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	CALL require_auth(*($0 + [176]))
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$1 }
	goto $label$11 
	
.LABEL $label$11
	$4 = *(($0 + [1752]))
	$2 = *(($0 + [1756]))
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$12 }
	$7 = ($2 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$13:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$12 }
	$2 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	$7 = ($0 + [1728])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$9 }
	$6 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$7), [176])
	if ( $6 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$10
	$3 = *(($0 + [1792]))
	$5 = *(($0 + [1796]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$14 }
	$7 = ($5 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$15:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$14 }
	$5 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$15 }
	
.LABEL $label$14
	$7 = ($0 + [1768])
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$6 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$7), [176])
	if ( $6 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$9
	$6 = CALL db_find_i64(*(($0 + [1728])), *(($0 + [1736])), (int_64)5445034581344387072, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $95($7, $6)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$7), [176])
	
.LABEL $label$8
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$0 = CALL db_next_i64(*($6 + [76]), ($8 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$16 }
	CALL $95($7, $0)
	
.LABEL $label$16
	CALL $96($7, $6)
	goto $label$1 
	
.LABEL $label$7
	$6 = CALL db_find_i64(*(($0 + [1768])), *(($0 + [1776])), (int_64)5445034581344561536, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $97($7, $6)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$7), [176])
	
.LABEL $label$6
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$5 = CALL db_next_i64(*($6 + [76]), ($8 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$17 }
	CALL $97($7, $5)
	
.LABEL $label$17
	CALL $98($7, $6)
	
.LABEL $label$5
	$3 = *(($0 + [1832]))
	$5 = *(($0 + [1836]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$18 }
	$7 = ($5 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$19:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$18 }
	$5 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$19 }
	
.LABEL $label$18
	$7 = ($0 + [1808])
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$22 }
	$6 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [88]) == (int_32)$7), [176])
	if ( $6 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$6 = CALL db_find_i64(*(($0 + [1808])), *(($0 + [1816])), (int_64)5445034581344550912, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$20 }
	$6 = CALL $99($7, $6)
	CALL eosio_assert(((int_32)*($6 + [88]) == (int_32)$7), [176])
	
.LABEL $label$21
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$5 = CALL db_next_i64(*($6 + [92]), ($8 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$23 }
	CALL $99($7, $5)
	
.LABEL $label$23
	CALL $100($7, $6)
	
.LABEL $label$20
	if ( ((int_32)$2 == (int_32)[4]) ){ goto $label$2 }
	if ( ((int_32)$2 == (int_32)[3]) ){ goto $label$3 }
	if ( ((int_32)$2 != (int_32)[2]) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = *(($0 + [1872]))
	$5 = *(($0 + [1876]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$24 }
	$7 = ($5 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$25:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$24 }
	$5 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$25 }
	
.LABEL $label$24
	$7 = ($0 + [1848])
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$28 }
	$6 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$7), [176])
	if ( $6 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$6 = CALL db_find_i64(*(($0 + [1848])), *(($0 + [1856])), (int_64)5445034581344518144, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$26 }
	$6 = CALL $101($7, $6)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$7), [176])
	
.LABEL $label$27
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$5 = CALL db_next_i64(*($6 + [76]), ($8 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$29 }
	CALL $101($7, $5)
	
.LABEL $label$29
	CALL $102($7, $6)
	
.LABEL $label$26
	if ( ((int_32)$2 == (int_32)[4]) ){ goto $label$2 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$1 }
	
.LABEL $label$3
	$3 = *(($0 + [1912]))
	$5 = *(($0 + [1916]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$30 }
	$7 = ($5 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$31:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$30 }
	$5 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$31 }
	
.LABEL $label$30
	$7 = ($0 + [1888])
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$34 }
	$6 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$7), [176])
	if ( $6 ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	$6 = CALL db_find_i64(*(($0 + [1888])), *(($0 + [1896])), (int_64)-4293729036219842560, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$32 }
	$6 = CALL $49($7, $6)
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$7), [176])
	
.LABEL $label$33
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$5 = CALL db_next_i64(*($6 + [68]), ($8 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$35 }
	CALL $49($7, $5)
	
.LABEL $label$35
	CALL $93($7, $6)
	
.LABEL $label$32
	if ( ((int_32)$2 != (int_32)[4]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(($0 + [1952]))
	$2 = *(($0 + [1956]))
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$36 }
	$7 = ($2 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$37:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$36 }
	$2 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$37 }
	
.LABEL $label$36
	$7 = ($0 + [1928])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$39 }
	$6 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [88]) == (int_32)$7), [176])
	if ( $6 ){ goto $label$38 }
	goto $label$1 
	
.LABEL $label$39
	$6 = CALL db_find_i64(*(($0 + [1928])), *(($0 + [1936])), (int_64)-4293729067555704832, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $73($7, $6)
	CALL eosio_assert(((int_32)*($6 + [88]) == (int_32)$7), [176])
	
.LABEL $label$38
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$0 = CALL db_next_i64(*($6 + [92]), ($8 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$40 }
	CALL $73($7, $0)
	
.LABEL $label$40
	CALL $77($7, $6)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [16])
	$2
}

int_32 .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [768])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $275([88])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [32])
	*($4 + [72]) = $0
	CALL $109(($8 + [32]), $4)
	*($4 + [76]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [76])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $110($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $276($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $96 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $276($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $276($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [76]))
}

int_32 .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [768])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $275([88])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [32])
	*($4 + [72]) = $0
	CALL $107(($8 + [32]), $4)
	*($4 + [76]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [76])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $108($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $276($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC _ZN12thedeosgames11slotsecloseEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_S8_S1_S1_S1_y11checksum256 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_64 $10, int_32 $11)
{
	CALL require_auth(*($0 + [176]))
	CALL require_recipient($2)
}

void .FUNC _ZN12thedeosgames10slotscleanEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [32])
	*([0] + [4]) = $15
	CALL require_auth(*($0 + [176]))
	$6 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$3 = *(($0 + [1896]))
	$5 = [0]
	*($15 + [16]) = [0]
	*($15 + [8]) = (int_64)0
	$13 = CALL db_lowerbound_i64(*($0 + [1888]), $3, (int_64)-4293729036219842560, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$1 }
	$3 = (int_64))(((int_64)$6 & (int_64)4294967295) - $1)
	$2 = ($0 + [1888])
	$13 = CALL $49($2, $13)
	$12 = (($15 + [8]) + [8])
	$4 = ($0 + [168])
	
.LOOP $label$3:
	if ( ((uint_32)(*($13 + [48]) + [-1]) > (uint_32)[1]) ){ goto $label$4 }
	if ( ((uint_64)*($13 + [40]) >= (uint_64)$3) ){ goto $label$4 }
	$14 = *($15 + [12])
	if ( ((int_32)$14 == (int_32)*($12)) ){ goto $label$6 }
	*($14) = *($13)
	*($15 + [12]) = ($14 + [8])
	goto $label$5 
	
.LABEL $label$6
	CALL $92(($15 + [8]), $13)
	
.LABEL $label$5
	if ( ((uint_32)$5 > (uint_32)*($4)) ){ goto $label$2 }
	$5 = ($5 + [1])
	
.LABEL $label$4
	CALL eosio_assert([1], [2496])
	$13 = CALL db_next_i64(*($13 + [68]), ($15 + [24]))
	if ( ((int_32)$13 <= (int_32)[-1]) ){ goto $label$2 }
	$13 = CALL $49($2, $13)
	goto $label$3 
	
.LABEL $label$2
	$11 = *($15 + [12])
	$12 = *($15 + [8])
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$7 }
	$7 = ($0 + [1912])
	$8 = ($0 + [1916])
	$9 = ($0 + [1896])
	$10 = ($0 + [1888])
	
.LOOP $label$8:
	$3 = *($12)
	$4 = *($7)
	$14 = *($8)
	if ( ((int_32)$14 == (int_32)$4) ){ goto $label$9 }
	$13 = ($14 + [-24])
	$0 = ([0] - $4)
	
.LOOP $label$10:
	if ( ((int_64)*(*($13)) == (int_64)$3) ){ goto $label$9 }
	$14 = $13
	$5 = ($13 + [-24])
	$13 = $5
	if ( ((int_32)($5 + $0) != (int_32)[-24]) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$14 == (int_32)$4) ){ goto $label$13 }
	$13 = *(($14 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [64]) == (int_32)$2), [176])
	if ( $13 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$13 = CALL db_find_i64(*($10), *($9), (int_64)-4293729036219842560, $3)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$11 }
	$13 = CALL $49($2, $13)
	CALL eosio_assert(((int_32)*($13 + [64]) == (int_32)$2), [176])
	
.LABEL $label$12
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$5 = CALL db_next_i64(*($13 + [68]), ($15 + [24]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$14 }
	CALL $49($2, $5)
	
.LABEL $label$14
	CALL $93($2, $13)
	
.LABEL $label$11
	$12 = ($12 + [8])
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$8 }
	$11 = *($15 + [8])
	
.LABEL $label$7
	if ( ($11 == 0) ){ goto $label$1 }
	*($15 + [12]) = $11
	CALL $276($11)
	
.LABEL $label$1
	*([0] + [4]) = ($15 + [32])
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [3])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$3 }
	$4 = [536870911]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$4 = int_32($2 >> [2])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $275(($4 << [3]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $294($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [3])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [3]))
	$7 = ($3 + [8])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $276($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $276($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $276($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
}

int_32 .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $139 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $269 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($3 + [24]), *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($0 + [28]), *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($0 + [32]), *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($0 + [36]), *($1 + [4]), [4])
	*($1 + [4]) = (*($1 + [4]) + [4])
}

void .FUNC $130 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN12thedeosgames6nstakeEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [176])
	*([0] + [4]) = $12
	*($12 + [88]) = $1
	$3 = *($2 + [8])
	$7 = [0]
	$10 = [0]
	$9 = *($2)
	if ( ((uint_64)((int_64)$9 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$8 = (uint_64)$3 >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$10 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	
.LABEL $label$1
	CALL eosio_assert($10, [3168])
	CALL eosio_assert(((int_64)$9 > (int_64)0), [3200])
	*(($12 + [80])) = [0]
	$4 = (uint_64)$3 >> (uint_64)(int_64)8
	*($12 + [56]) = $4)
	*($12 + [64]) = (int_64)-1
	*($12 + [72]) = (int_64)0
	*($12 + [48]) = *($0 + [176])
	CALL eosio_assert(((int_64)$3 == (int_64)*(CALL $132(($12 + [48]), $4, [1936]) + [8])), [3232])
	CALL require_auth($1)
	$11 = ($0 + [8])
	$10 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)-4151882783574196224, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$6 }
	$7 = CALL $133($11, $10)
	$9 = *($2)
	
.LABEL $label$6
	$10 = [0]
	$6 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($6, [3264])
	CALL eosio_assert((*($7 + [8]) == 0), [3296])
	CALL eosio_assert($6, [288])
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)$11), [336])
	CALL eosio_assert(((int_64)*($11) == (int_64)CALL $fimport$14()), [384])
	*($7 + [16]) = ((int_64)*($7 + [16]) + (int_64)$9)
	$8 = *($7)
	CALL eosio_assert([1], [448])
	*($12 + [16]) = (($12 + [112]) + [44])
	*($12 + [12]) = ($12 + [112])
	*($12 + [8]) = ($12 + [112])
	CALL $134(($12 + [8]), $7)
	CALL db_update_i64(*($7 + [52]), (int_64)0, ($12 + [112]), [44])
	$11 = ($0 + [24])
	if ( (uint_64)($8 <= *($11)) ){ goto $label$7 }
	*($11) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($12 + [24]) = (int_64)-1
	*($12 + [32]) = [0]
	$8 = *($12 + [88])
	$9 = *(($0 + [176]))
	*($12 + [8]) = $9
	*($12 + [16]) = $8
	*(($12 + [36])) = [0]
	*(($12 + [40])) = [0]
	$11 = CALL db_find_i64($9, $8, (int_64)3607749779137757184, $4)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$8 }
	$10 = CALL $13(($12 + [8]), $11)
	CALL eosio_assert(((int_32)*($10 + [16]) == (int_32)($12 + [8])), [176])
	$8 = *($12 + [88])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [3328])
	$9 = *($10)
	$5 = *(($0 + [112]))
	$10 = *(($0 + [116]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$9 }
	$11 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$10:
	if ( ((int_64)*(*($11)) == (int_64)$8) ){ goto $label$9 }
	$10 = $11
	$7 = ($11 + [-24])
	$11 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$10 }
	
.LABEL $label$9
	$7 = ($0 + [88])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$13 }
	$11 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [32]) == (int_32)$7), [176])
	if ( $11 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$11 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)-3102531239517618176, $8)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$11 }
	$11 = CALL $20($7, $11)
	CALL eosio_assert(((int_32)*($11 + [32]) == (int_32)$7), [176])
	
.LABEL $label$12
	$9 = (int_64))($9 - *($11 + [8]))
	
.LABEL $label$11
	$8 = *($12 + [88])
	$5 = *(($0 + [72]))
	$10 = *(($0 + [76]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$14 }
	$11 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$15:
	if ( ((int_64)*(*($11)) == (int_64)$8) ){ goto $label$14 }
	$10 = $11
	$7 = ($11 + [-24])
	$11 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$15 }
	
.LABEL $label$14
	$7 = ($0 + [48])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$22 }
	$11 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [40]) == (int_32)$7), [176])
	$8 = *($2)
	if ( $11 ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$22
	$11 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-4152008587998134272, $8)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$20 }
	$11 = CALL $19($7, $11)
	CALL eosio_assert(((int_32)*($11 + [40]) == (int_32)$7), [176])
	$8 = *($2)
	
.LABEL $label$21
	CALL eosio_assert(((int_64)((int_64)((int_64)*($11 + [8]) + (int_64)$8) + (int_64)*($11 + [24])) <= (int_64)$9), [3392])
	CALL eosio_assert([1], [288])
	CALL eosio_assert(((int_32)*($11 + [40]) == (int_32)$7), [336])
	CALL eosio_assert(((int_64)*(($0 + [48])) == (int_64)CALL $fimport$14()), [384])
	$8 = *($11)
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*(($11 + [32]))), [656])
	$9 = ((int_64)*($11 + [24]) + (int_64)*($2))
	*($11 + [24]) = $9
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [704])
	CALL eosio_assert(((int_64)*($11 + [24]) < (int_64)4611686018427387904), [736])
	CALL eosio_assert(((int_64)$8 == (int_64)*($11)), [448])
	*($12 + [104]) = (($12 + [112]) + [40])
	*($12 + [100]) = ($12 + [112])
	*($12 + [96]) = ($12 + [112])
	CALL $136(($12 + [96]), $11)
	CALL db_update_i64(*($11 + [44]), (int_64)0, ($12 + [112]), [40])
	$11 = ($0 + [64])
	if ( (uint_64)($8 <= *($11)) ){ goto $label$18 }
	*($11) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$0 = *($12 + [32])
	if ( $0 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$20
	$8 = *($2)
	
.LABEL $label$19
	CALL eosio_assert(((int_64)$8 <= (int_64)$9), [3360])
	$8 = *(($0 + [176]))
	*($12 + [4]) = $2
	*($12) = ($12 + [88])
	*($12 + [96]) = $8
	CALL eosio_assert(((int_64)*(($0 + [48])) == (int_64)CALL $fimport$14()), [512])
	*($12 + [112]) = $7
	*($12 + [116]) = $12
	*($12 + [120]) = ($12 + [96])
	$11 = CALL $275([56])
	CALL $23($11)
	*($11 + [40]) = $7
	CALL $135(($12 + [112]), $11)
	*($12 + [168]) = $11
	$8 = *($11)
	*($12 + [112]) = $8
	$10 = *($11 + [44])
	*($12 + [164]) = $10
	$6 = ($0 + [76])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [80]))) ){ goto $label$24 }
	*($7 + [8]) = $8
	*($7 + [16]) = $10
	*($12 + [168]) = [0]
	*($7) = $11
	*($6) = ($7 + [24])
	goto $label$23 
	
.LABEL $label$24
	CALL $25(($0 + [72]), ($12 + [168]), ($12 + [112]), ($12 + [164]))
	
.LABEL $label$23
	$11 = *($12 + [168])
	*($12 + [168]) = [0]
	if ( ($11 == 0) ){ goto $label$18 }
	CALL $276($11)
	
.LABEL $label$18
	$0 = *($12 + [32])
	if ( ($0 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	$10 = ($12 + [36])
	$11 = *($10)
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$26 }
	
.LOOP $label$27:
	$11 = ($11 + [-24])
	$7 = *($11)
	*($11) = [0]
	if ( ($7 == 0) ){ goto $label$28 }
	CALL $276($7)
	
.LABEL $label$28
	if ( ((int_32)$0 != (int_32)$11) ){ goto $label$27 }
	$11 = *(($12 + [32]))
	goto $label$25 
	
.LABEL $label$26
	$11 = $0
	
.LABEL $label$25
	*($10) = $0
	CALL $276($11)
	
.LABEL $label$16
	$0 = *($12 + [72])
	if ( ($0 == 0) ){ goto $label$29 }
	$10 = ($12 + [76])
	$11 = *($10)
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$31 }
	
.LOOP $label$32:
	$11 = ($11 + [-24])
	$7 = *($11)
	*($11) = [0]
	if ( ($7 == 0) ){ goto $label$33 }
	CALL $276($7)
	
.LABEL $label$33
	if ( ((int_32)$0 != (int_32)$11) ){ goto $label$32 }
	$11 = *(($12 + [72]))
	goto $label$30 
	
.LABEL $label$31
	$11 = $0
	
.LABEL $label$30
	*($10) = $0
	CALL $276($11)
	
.LABEL $label$29
	*([0] + [4]) = ($12 + [176])
}

int_32 .FUNC $132 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [176])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $7($0, $5)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [176])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [768])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $275([64])
	$4 = CALL $137($6)
	*($6 + [48]) = $0
	CALL $138(($8 + [32]), $4)
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $139(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $276($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	$3 = *($0 + [4])
	*($1) = *(*($3))
	$2 = *($0)
	CALL eosio_assert([1], [576])
	$4 = (int_64)1397704004
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [32])
	*(($1 + [16])) = (int_64)357812225028
	*($1 + [8]) = (int_64)0
	$5 = *($3 + [4])
	*($1 + [24]) = *($5)
	*(($1 + [32])) = *(($5 + [8]))
	$6 = $8
	$5 = ($6 + [-48])
	*([0] + [4]) = $5
	*($7 + [4]) = $5
	*($7) = $5
	*($7 + [8]) = ($6 + [-8])
	CALL $136($7, $1)
	$4 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($2 + [8]), (int_64)-4152008587998134272, *(*($0 + [8])), $4, $5, [40])
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $137 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	$2 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($3 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [576])
	$1 = (uint_64)*($3) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [32])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [576])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [32])
	return $0
}

void .FUNC $260 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($4 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [32])
	*($0 + [32]) = (int_64)0
	*(($0 + [40])) = (int_64)0
	*($0 + [48]) = (int_64)0
	*(($4 = ($0 + [56]))) = (int_64)1398362884
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [32])
	*($0 + [64]) = (int_64)0
	*(($0 + [72])) = (int_64)0
	*($0 + [80]) = (int_64)0
	*(($4 = ($0 + [88]))) = (int_64)1398362884
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$5 = [0]
	
.LABEL $label$11
	CALL eosio_assert($5, [32])
	*(($4 = ($0 + [104]))) = (int_64)1398362884
	*($0 + [96]) = (int_64)0
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$5 = [0]
	
.LABEL $label$16
	CALL eosio_assert($5, [32])
	*(($4 = ($0 + [120]))) = (int_64)1398362884
	*($0 + [112]) = (int_64)0
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$5 = [0]
	
.LABEL $label$21
	CALL eosio_assert($5, [32])
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $262(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

int_64 .FUNC __intscan (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_64 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$4 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$4 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$5:
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$7 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$6 
	
.LABEL $label$7
	$13 = CALL __shgetc($0)
	
.LABEL $label$6
	$10 = ($13 + [-9])
	if ( ((uint_32)$10 > (uint_32)[36]) ){ goto $label$3 }
	goto $label$5 
	
.LABEL $label$8
	$4 = ( [-1] ? [0] : ((int_32)$13 == (int_32)[45]) )
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$2 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$1 
	
.LABEL $label$4
	*(CALL __errno_location()) = [22]
	return (int_64)0
	
.LABEL $label$3
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	$13 = CALL __shgetc($0)
	
.LABEL $label$1
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$20 }
	if ( ((int_32)$13 != (int_32)[48]) ){ goto $label$20 }
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$19 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$18 
	
.LABEL $label$20
	$1 = ( $1 ? [10] : $1 )
	if ( (*(($13 + [17009])) <= $1) ){ goto $label$17 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$21 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	
.LABEL $label$21
	CALL __shlim($0, (int_64)0)
	*(CALL __errno_location()) = [22]
	return (int_64)0
	
.LABEL $label$19
	$13 = CALL __shgetc($0)
	
.LABEL $label$18
	if ( ((int_32)($13 | [32]) != (int_32)[120]) ){ goto $label$22 }
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$16 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$15 
	
.LABEL $label$22
	if ( ($1 == 0) ){ goto $label$14 }
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$13 }
	$14 = (int_64)0
	$9 = ($13 + [-48])
	if ( ((uint_32)$9 > (uint_32)[9]) ){ goto $label$23 }
	$10 = [0]
	$8 = ($0 + [104])
	$1 = ($0 + [4])
	
.LOOP $label$24:
	$10 = ((int_32)$10 * (int_32)[10])
	$13 = *($1)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$26 }
	*($1) = ($13 + [1])
	$13 = *($13)
	goto $label$25 
	
.LABEL $label$26
	$13 = CALL __shgetc($0)
	
.LABEL $label$25
	$10 = ($10 + $9)
	$9 = ($13 + [-48])
	if ( ((uint_32)$9 > (uint_32)[9]) ){ goto $label$27 }
	if ( ($10 <= [429496729]) ){ goto $label$24 }
	
.LABEL $label$27
	$14 = (CASTING uint_64)(uint_32 $10)
	
.LABEL $label$23
	$10 = ($13 + [-48])
	if ( ((uint_32)$10 > (uint_32)[9]) ){ goto $label$11 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$28:
	$1 = [10]
	$5 = (CASTING int_64)(int_32 $10)
	$12 = ((int_64)$14 * (int_64)10)
	if ( ((uint_64)$12 > (uint_64)((int_64)$5 ^ (int_64)-1)) ){ goto $label$12 }
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$30 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$29 
	
.LABEL $label$30
	$13 = CALL __shgetc($0)
	
.LABEL $label$29
	$14 = ((int_64)$12 + (int_64)$5)
	$10 = ($13 + [-48])
	if ( ((uint_32)$10 > (uint_32)[9]) ){ goto $label$31 }
	if ( (uint_64)($14 <= (int_64)1844674407370955162) ){ goto $label$28 }
	
.LABEL $label$31
	if ( ((uint_32)$10 <= (uint_32)[9]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$16
	$13 = CALL __shgetc($0)
	
.LABEL $label$15
	$1 = [16]
	if ( (*(($13 + [17009])) <= [16]) ){ goto $label$13 }
	$13 = *(($0 + [104]))
	if ( ($13 == 0) ){ goto $label$32 }
	*(($10 = ($0 + [4]))) = (*($10) + [-1])
	
.LABEL $label$32
	if ( ($2 == 0) ){ goto $label$9 }
	$14 = (int_64)0
	if ( ($13 == 0) ){ goto $label$10 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	return (int_64)0
	
.LABEL $label$14
	$1 = [8]
	
.LABEL $label$13
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$37 }
	$10 = *(($13 + [17009]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$36 }
	$9 = [0]
	$2 = ($0 + [104])
	$8 = ($0 + [4])
	
.LOOP $label$38:
	$9 = ($10 + ((int_32)$9 * (int_32)$1))
	$13 = *($8)
	if ( ((uint_32)$13 >= (uint_32)*($2)) ){ goto $label$40 }
	*($8) = ($13 + [1])
	$13 = *($13)
	goto $label$39 
	
.LABEL $label$40
	$13 = CALL __shgetc($0)
	
.LABEL $label$39
	$10 = *(($13 + [17009]))
	if ( ((uint_32)$9 > (uint_32)[119304646]) ){ goto $label$41 }
	if ( ($10 <= $1) ){ goto $label$38 }
	
.LABEL $label$41
	$14 = (CASTING uint_64)(uint_32 $9)
	if ( ($10 <= $1) ){ goto $label$35 }
	goto $label$12 
	
.LABEL $label$37
	$2 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [17280]))
	$10 = *(($13 + [17009]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$34 }
	$9 = [0]
	$11 = ($0 + [104])
	$8 = ($0 + [4])
	
.LOOP $label$42:
	$9 = ($10 | ($9 << $2))
	$13 = *($8)
	if ( ((uint_32)$13 >= (uint_32)*($11)) ){ goto $label$44 }
	*($8) = ($13 + [1])
	$13 = *($13)
	goto $label$43 
	
.LABEL $label$44
	$13 = CALL __shgetc($0)
	
.LABEL $label$43
	$10 = *(($13 + [17009]))
	if ( ((uint_32)$9 > (uint_32)[134217727]) ){ goto $label$45 }
	if ( ($10 <= $1) ){ goto $label$42 }
	
.LABEL $label$45
	$14 = (CASTING uint_64)(uint_32 $9)
	if ( ($10 <= $1) ){ goto $label$33 }
	goto $label$12 
	
.LABEL $label$36
	$14 = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$35
	$7 = (CASTING uint_64)(uint_32 $1)
	$6 = ((uint_64)(int_64)-1 / (uint_64)$7)
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$46:
	if ( ((uint_64)$14 > (uint_64)$6) ){ goto $label$12 }
	$5 = (CASTING uint_64)(uint_32 ($10 & [255]))
	$12 = ((int_64)$14 * (int_64)$7)
	if ( ((uint_64)$12 > (uint_64)((int_64)$5 ^ (int_64)-1)) ){ goto $label$12 }
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$48 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$47 
	
.LABEL $label$48
	$13 = CALL __shgetc($0)
	
.LABEL $label$47
	$14 = ((int_64)$5 + (int_64)$12)
	$10 = *(($13 + [17009]))
	if ( ($10 <= $1) ){ goto $label$46 }
	goto $label$12 
	
.LABEL $label$34
	$14 = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$33
	$5 = (CASTING uint_64)(uint_32 $2)
	$6 = (uint_64)(int_64)-1 >> (uint_64)$5
	if ( ((uint_64)$14 > (uint_64)$6)) ){ goto $label$12 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$49:
	$14 = ((int_64)$14 << (int_64)$5)
	$12 = (CASTING uint_64)(uint_32 ($10 & [255]))
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$51 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$50 
	
.LABEL $label$51
	$13 = CALL __shgetc($0)
	
.LABEL $label$50
	$14 = ((int_64)$12 | (int_64)$14)
	$10 = *(($13 + [17009]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	if ( ((uint_64)$14 <= (uint_64)$6) ){ goto $label$49 }
	
.LABEL $label$12
	if ( ((uint_32)*(($13 + [17009])) >= (uint_32)$1) ){ goto $label$11 }
	$9 = ($0 + [104])
	$10 = ($0 + [4])
	
.LOOP $label$52:
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*($9)) ){ goto $label$54 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$53 
	
.LABEL $label$54
	$13 = CALL __shgetc($0)
	
.LABEL $label$53
	if ( (*(($13 + [17009])) <= $1) ){ goto $label$52 }
	*(CALL __errno_location()) = [34]
	$4 = ( $4 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$14 = $3
	
.LABEL $label$11
	if ( (*(($0 + [104])) == 0) ){ goto $label$55 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	
.LABEL $label$55
	if ( (uint_64)($14 <= $3) ){ goto $label$56 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$57 }
	if ( $4 ){ goto $label$57 }
	*(CALL __errno_location()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$57
	if ( ((uint_64)$14 <= (uint_64)$3) ){ goto $label$56 }
	*(CALL __errno_location()) = [34]
	return $3
	
.LABEL $label$56
	$12 = (CASTING int_64)(int_32 $4)
	$14 = (int_64))(((int_64)$14 ^ (int_64)$12) - $12)
	
.LABEL $label$10
	return $14
	
.LABEL $label$9
	CALL __shlim($0, (int_64)0)
	$10
	return (int_64)0
}

void .FUNC $261 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [384])
	*([0] + [4]) = $11
	*((($11 + [176]) + [12])) = *(($1 + [28]))
	*(($6 = (($11 + [176]) + [8]))) = *(($1 + [24]))
	*($11 + [176]) = *($1 + [16])
	*($11 + [180]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $295(($11 + [160]), ($1 + [32]))
	*((($11 + [144]) + [12])) = *(($1 + [60]))
	*(($7 = (($11 + [144]) + [8]))) = *(($1 + [56]))
	*($11 + [148]) = *(($1 + [52]))
	*($11 + [144]) = *($1 + [48])
	$4 = *($1 + [44])
	$5 = *($1 + [64])
	CALL $295(($11 + [128]), ($1 + [68]))
	*(($8 = (($11 + [112]) + [8]))) = *(($1 + [88]))
	*(($9 = (($11 + [96]) + [8]))) = *(($1 + [104]))
	*($11 + [112]) = *($1 + [80])
	*($11 + [96]) = *($1 + [96])
	*(($10 = (($11 + [80]) + [8]))) = *(($1 + [120]))
	*($11 + [80]) = *($1 + [112])
	*((($11 + [256]) + [8])) = *($10)
	*((($11 + [240]) + [8])) = *($9)
	*($11 + [256]) = *($11 + [80])
	*($11 + [240]) = *($11 + [96])
	*((($11 + [224]) + [8])) = *($8)
	*($11 + [224]) = *($11 + [112])
	*((($11 + [208]) + [8])) = *($7)
	*($11 + [208]) = *($11 + [144])
	*((($11 + [192]) + [8])) = *($6)
	*($11 + [192]) = *($11 + [176])
	$1 = *($0 + [4])
	$6 = *($1 + [4])
	$0 = (*(*($0)) + int_32($6 >> [1]))
	$1 = *($1)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($6 = (($11 + [368]) + [8]))) = *((($11 + [192]) + [8]))
	*($11 + [368]) = *($11 + [192])
	CALL $295(($11 + [352]), ($11 + [160]))
	*(($7 = (($11 + [336]) + [8]))) = *((($11 + [208]) + [8]))
	*($11 + [336]) = *($11 + [208])
	CALL $295(($11 + [320]), ($11 + [128]))
	*(($8 = (($11 + [304]) + [8]))) = *((($11 + [224]) + [8]))
	*(($9 = (($11 + [288]) + [8]))) = *((($11 + [240]) + [8]))
	*($11 + [304]) = *($11 + [224])
	*($11 + [288]) = *($11 + [240])
	*(($10 = (($11 + [272]) + [8]))) = *((($11 + [256]) + [8]))
	*($11 + [272]) = *($11 + [256])
	*((($11 + [64]) + [8])) = *($6)
	*($11 + [64]) = *($11 + [368])
	*((($11 + [48]) + [8])) = *($7)
	*($11 + [48]) = *($11 + [336])
	*((($11 + [32]) + [8])) = *($8)
	*($11 + [32]) = *($11 + [304])
	*((($11 + [16]) + [8])) = *($9)
	*($11 + [16]) = *($11 + [288])
	*(($11 + [8])) = *($10)
	*($11) = *($11 + [272])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($11 + [64])), (int_32 ($11 + [352])), (int_32 $4), (int_32 ($11 + [48])), (int_32 $5), (int_32 ($11 + [320])), (int_32 ($11 + [32])), (int_32 ($11 + [16])), (int_32 $11), (int_32 $1))
	if ( ((*($11 + [320]) & [1]) == 0) ){ goto $label$2 }
	CALL $276(*($11 + [328]))
	
.LABEL $label$2
	if ( ((*($11 + [352]) & [1]) == 0) ){ goto $label$3 }
	CALL $276(*($11 + [360]))
	
.LABEL $label$3
	if ( ((*($11 + [128]) & [1]) == 0) ){ goto $label$4 }
	CALL $276(*($11 + [136]))
	
.LABEL $label$4
	if ( ((*($11 + [160]) & [1]) == 0) ){ goto $label$5 }
	CALL $276(*($11 + [168]))
	
.LABEL $label$5
	*([0] + [4]) = ($11 + [384])
}

int_32 .FUNC $213 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $275([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [24])
	$1 = ( *(($4 + [28])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [24])
	$2 = (CASTING uint_64)(uint_32 $1)
	$5 = ($4 + [24])
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $41($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9) = $8
	*($9 + [8]) = $1
	CALL eosio_assert(((int_32)($1 - $8) > (int_32)[7]), [640])
	CALL memcpy($8, $4, [8])
	$6 = ($8 + [8])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[7]), [640])
	CALL memcpy($6, ($4 + [8]), [8])
	$6 = ($8 + [16])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[7]), [640])
	CALL memcpy($6, ($4 + [16]), [8])
	*($9 + [4]) = ($8 + [24])
	CALL $46($9, $5)
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $262 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $167(*($1), ($0 + [32]))
	*($4 + [8]) = $0
	CALL $263(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $283 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$3 }
	$4 = uint_32($5 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( $6 ){ goto $label$5 }
	$6 = [10]
	goto $label$4 
	
.LABEL $label$5
	$5 = *($0)
	$6 = (($5 & [-2]) + [-1])
	
.LABEL $label$4
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$6 }
	CALL $280($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	return $0
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ($5 & [1]) ){ goto $label$8 }
	$5 = ($0 + [1])
	goto $label$7 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	
.LABEL $label$7
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$10 }
	CALL memmove(($6 + $3), $6, $1)
	$2 = ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) )
	
.LABEL $label$10
	CALL memmove($6, $2, $3)
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$12 }
	*($0) = ($3 << [1])
	goto $label$11 
	
.LABEL $label$12
	*($0 + [4]) = $3
	
.LABEL $label$11
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $303 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_64 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	$39 = (*([0] + [4]) - [8128])
	*([0] + [4]) = $39
	$12 = (($39 + [692]) + [11])
	$11 = (($39 + [704]) | [8])
	$10 = (($39 + [704]) | [9])
	$9 = ($39 + [7664])
	$8 = ([-2] - ($39 + [704]))
	$7 = (($39 + [692]) + [12])
	$6 = (($39 + [352]) + [54])
	$5 = (($39 + [352]) + [55])
	$30 = [0]
	$38 = [0]
	$32 = [0]
	
.LOOP $label$17:
	$38 = ($30 + $38)
	$37 = $1
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$16 }
	$1 = $37
	$30 = ($30 & [255])
	if ( ($30 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	if ( ((int_32)$30 == (int_32)[37]) ){ goto $label$19 }
	$1 = ($1 + [1])
	$30 = (*($1) & [255])
	if ( $30 ){ goto $label$21 }
	
.LABEL $label$20
	$30 = $1
	goto $label$18 
	
.LABEL $label$19
	$30 = $1
	
.LOOP $label$22:
	if ( ((int_32)*(($1 + [1])) != (int_32)[37]) ){ goto $label$18 }
	$30 = ($30 + [1])
	$1 = ($1 + [2])
	if ( ((int_32)*($1) == (int_32)[37]) ){ goto $label$22 }
	
.LABEL $label$18
	$13 = ([2147483647] - $38)
	$30 = ($30 - $37)
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	if ( ($0 == 0) ){ goto $label$23 }
	if ( (*($0) & [32]) ){ goto $label$23 }
	CALL __fwritex($37, $30, $0)
	
.LABEL $label$23
	if ( $30 ){ goto $label$24 }
	$36 = ($1 + [1])
	$27 = [-1]
	$30 = *($1 + [1])
	$17 = ($30 + [-48])
	if ( ((uint_32)$17 > (uint_32)[9]) ){ goto $label$25 }
	$1 = ((int_32)*($1 + [2]) == (int_32)[36])
	$36 = ( ($1 + [3]) ? $36 : $1 )
	$30 = *($36)
	$27 = ( $17 ? [-1] : $1 )
	$32 = ( [1] ? $32 : $1 )
	
.LABEL $label$25
	$14 = [0]
	$1 = (int_32(($30 << [24]) >> [24]) + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$26 }
	$14 = [0]
	
.LOOP $label$27:
	if ( ((([1] << $1) & [75913]) == 0) ){ goto $label$26 }
	$14 = (([1] << (int_32(($30 << [24]) >> [24]) + [-32])) | $14)
	$36 = ($36 + [1])
	$30 = *($36)
	$1 = ($30 + [-32])
	if ( ($1 <= [32]) ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)($30 & [255]) != (int_32)[42]) ){ goto $label$33 }
	$1 = (*($36 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$32 }
	if ( ((int_32)*($36 + [2]) != (int_32)[36]) ){ goto $label$32 }
	*(($4 + ($1 << [2]))) = [10]
	$17 = ($36 + [3])
	$32 = [1]
	$15 = *((($3 + (*(($36 + [1])) << [4])) + [-768]))
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	goto $label$31 
	
.LABEL $label$33
	$15 = [0]
	$30 = (int_32(($30 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$30 > (uint_32)[9]) ){ goto $label$30 }
	$1 = [0]
	$17 = $36
	
.LOOP $label$34:
	$15 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$35 }
	$1 = ((int_32)$1 * (int_32)[10])
	$15 = ( [-1] ? ($1 + $30) : ((int_32)$30 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$35
	$1 = $15
	$17 = ($17 + [1])
	$30 = (*($17) + [-48])
	if ( ($30 <= [10]) ){ goto $label$34 }
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$28 }
	goto $label$15 
	
.LABEL $label$32
	if ( $32 ){ goto $label$3 }
	$17 = ($36 + [1])
	if ( ($0 == 0) ){ goto $label$29 }
	$1 = *($2)
	*($2) = ($1 + [4])
	$32 = [0]
	$15 = *($1)
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	
.LABEL $label$31
	$15 = ([0] - $15)
	$14 = ($14 | [8192])
	goto $label$28 
	
.LABEL $label$30
	$17 = $36
	goto $label$28 
	
.LABEL $label$29
	$32 = [0]
	$15 = [0]
	
.LABEL $label$28
	$30 = [0]
	$36 = [-1]
	if ( ((int_32)*($17) != (int_32)[46]) ){ goto $label$42 }
	$36 = *($17 + [1])
	if ( ((int_32)$36 != (int_32)[42]) ){ goto $label$41 }
	$1 = (*($17 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$40 }
	if ( ((int_32)*($17 + [3]) != (int_32)[36]) ){ goto $label$40 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($17 + [4])
	$36 = *((($3 + (*(($17 + [2])) << [4])) + [-768]))
	goto $label$37 
	
.LABEL $label$42
	$1 = $17
	$16 = [0]
	goto $label$36 
	
.LABEL $label$41
	$1 = ($17 + [1])
	$31 = ($36 + [-48])
	if ( ((uint_32)$31 > (uint_32)[9]) ){ goto $label$39 }
	$17 = [0]
	
.LOOP $label$43:
	$36 = [-1]
	if ( ((uint_32)$17 > (uint_32)[214748364]) ){ goto $label$44 }
	$17 = ((int_32)$17 * (int_32)[10])
	$36 = ( [-1] ? ($17 + $31) : ((int_32)$31 > (int_32)([2147483647] - $17)) )
	
.LABEL $label$44
	$16 = [1]
	$17 = $36
	$1 = ($1 + [1])
	$31 = (*($1) + [-48])
	if ( ($31 <= [10]) ){ goto $label$43 }
	goto $label$36 
	
.LABEL $label$40
	if ( $32 ){ goto $label$3 }
	$1 = ($17 + [2])
	if ( ($0 == 0) ){ goto $label$38 }
	$17 = *($2)
	*($2) = ($17 + [4])
	$36 = *($17)
	goto $label$37 
	
.LABEL $label$39
	$16 = [1]
	$36 = [0]
	goto $label$36 
	
.LABEL $label$38
	$36 = [0]
	
.LABEL $label$37
	$16 = ((int_32)uint_32($36 >> [31]) ^ (int_32)[1])
	
.LABEL $label$36
	
.LOOP $label$45:
	$17 = $30
	$30 = (*($1) + [-65])
	if ( ((uint_32)$30 > (uint_32)[57]) ){ goto $label$3 }
	$1 = ($1 + [1])
	$30 = *(((((int_32)$17 * (int_32)[58]) + $30) + [14480]))
	if ( (($30 + [-1]) <= [8]) ){ goto $label$45 }
	if ( ($30 == 0) ){ goto $label$3 }
	if ( ((int_32)$30 != (int_32)[27]) ){ goto $label$49 }
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$48 }
	goto $label$3 
	
.LABEL $label$49
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$47 }
	*(($4 + ($27 << [2]))) = $30
	$30 = ($3 + ($27 << [4]))
	*($39 + [428]) = *(($30 + [12]))
	*($39 + [424]) = *(($30 + [8]))
	*($39 + [420]) = *(($30 + [4]))
	*($39 + [416]) = *($30)
	
.LABEL $label$48
	if ( $0 ){ goto $label$46 }
	$30 = [0]
	goto $label$24 
	
.LABEL $label$47
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $307(($39 + [416]), $30, $2)
	
.LABEL $label$46
	$31 = ($14 & [-65537])
	$18 = ( $31 ? $14 : ($14 & [8192]) )
	$26 = [0]
	$24 = [14960]
	$30 = *(($1 + [-1]))
	$29 = ( ( ($30 & [-33]) ? $30 : ((int_32)($30 & [15]) == (int_32)[3]) ) ? $30 : $17 )
	$30 = ($29 + [-65])
	if ( ((uint_32)$30 > (uint_32)[55]) ){ goto $label$80 }
	$14 = $5
	goto $label$111 
	
.LABEL $label$111
	if ( ((int_32)$36 > (int_32)[-1]) ){ goto $label$112 }
	if ( $16 ){ goto $label$15 }
	
.LABEL $label$112
	$35 = *($39 + [424])
	$23 = *($39 + [416])
	*($39 + [748]) = [0]
	if ( (CALL __signbitl($23, $35) == 0) ){ goto $label$113 }
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	$20 = [1]
	$19 = [14992]
	goto $label$108 
	
.LABEL $label$113
	if ( ($18 & [2048]) ){ goto $label$109 }
	$20 = ($18 & [1])
	$19 = ( [14998] ? [14993] : $20 )
	goto $label$108 
	
.LABEL $label$110
	$35 = *($39 + [416])
	if ( ((int_64)$35 <= (int_64)-1) ){ goto $label$92 }
	if ( ($18 & [2048]) ){ goto $label$88 }
	$26 = ($18 & [1])
	$24 = ( [14962] ? [14960] : $26 )
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$109
	$20 = [1]
	$19 = [14995]
	
.LABEL $label$108
	if ( ((int_32)CALL __fpclassifyl($23, $35) <= (int_32)[1]) ){ goto $label$115 }
	CALL frexpl(($39 + [320]), $23, $35, ($39 + [748]))
	$23 = *($39 + [328])
	$35 = *($39 + [320])
	CALL __addtf3(($39 + [304]), $35, $23, $35, $23)
	$23 = *((($39 + [304]) + [8]))
	$35 = *($39 + [304])
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$116 }
	*($39 + [748]) = (*($39 + [748]) + [-1])
	
.LABEL $label$116
	$21 = ($29 | [32])
	if ( ((int_32)$21 != (int_32)[97]) ){ goto $label$114 }
	$37 = ($29 & [32])
	$24 = ( ($19 + [9]) ? $19 : $37 )
	if ( ((uint_32)$36 > (uint_32)[26]) ){ goto $label$77 }
	if ( (([27] - $36) == 0) ){ goto $label$77 }
	$30 = ($36 + [-27])
	$34 = (int_64)4612248968380809216
	$33 = (int_64)0
	
.LOOP $label$117:
	CALL __multf3(($39 + [208]), $33, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($39 + [208]) + [8]))
	$33 = *($39 + [208])
	$30 = ($30 + [1])
	if ( $30 ){ goto $label$117 }
	if ( ((int_32)*($24) != (int_32)[45]) ){ goto $label$78 }
	CALL __subtf3(($39 + [160]), $35, ((int_64)$23 ^ (int_64)-9223372036854775808), $33, $34)
	CALL __addtf3(($39 + [144]), $33, $34, *($39 + [160]), *((($39 + [160]) + [8])))
	$23 = ((int_64)*((($39 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$35 = *($39 + [144])
	goto $label$77 
	
.LABEL $label$115
	$16 = CALL __unordtf2($23, $35, $23, $35)
	$37 = ($20 + [3])
	if ( ($18 & [8192]) ){ goto $label$93 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$93 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$95 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$118:
	if ( (($30 & [1]) == 0) ){ goto $label$119 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$119
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$118 }
	if ( $14 ){ goto $label$93 }
	$31 = ($31 & [255])
	goto $label$94 
	
.LABEL $label$114
	$30 = ((int_32)$36 < (int_32)[0])
	if ( (CALL __netf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$90 }
	CALL __multf3(($39 + [288]), $35, $23, (int_64)0, (int_64)4619285842798575616)
	$31 = (*($39 + [748]) + [-28])
	*($39 + [748]) = $31
	$23 = *((($39 + [288]) + [8]))
	$35 = *($39 + [288])
	goto $label$89 
	
.LABEL $label$107
	$35 = *($39 + [416])
	*((($39 + [344]) + [4])) = [0]
	*($39 + [344]) = $35
	*($39 + [416]) = ($39 + [344])
	$36 = [-1]
	$37 = ($39 + [344])
	goto $label$105 
	
.LABEL $label$106
	$37 = *($39 + [416])
	if ( ($36 == 0) ){ goto $label$74 }
	
.LABEL $label$105
	$30 = [0]
	$14 = $37
	$17 = [0]
	
.LOOP $label$121:
	$31 = *($14)
	if ( ($31 == 0) ){ goto $label$120 }
	$17 = CALL wctomb(($39 + [340]), $31)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$120 }
	if ( ((uint_32)$17 > (uint_32)($36 - $30)) ){ goto $label$120 }
	$14 = ($14 + [4])
	$30 = ($17 + $30)
	if ( ((uint_32)$36 > (uint_32)$30) ){ goto $label$121 }
	
.LABEL $label$120
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$104
	*((($39 + [352]) + [54])) = *($39 + [416])
	$36 = [1]
	$37 = $6
	$14 = $5
	$18 = $31
	goto $label$79 
	
.LABEL $label$103
	$37 = CALL strerror(*(CALL $297()))
	goto $label$97 
	
.LABEL $label$102
	$30 = ($17 & [255])
	if ( ((uint_32)$30 > (uint_32)[7]) ){ goto $label$56 }
	goto $label$122 
	
.LABEL $label$122
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$101
	$37 = $5
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$123 }
	$37 = $5
	
.LOOP $label$124:
	*(($37 = ($37 + [-1]))) = ((int_64)((int_64)$35 & (int_64)7) | (int_64)48)
	$35 = (uint_64)$35 >> (uint_64)(int_64)3
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$124 }
	
.LABEL $label$123
	if ( ($18 & [8]) ){ goto $label$84 }
	$26 = [0]
	$24 = [14960]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$100
	$36 = ( $36 ? [8] : ((uint_32)$36 > (uint_32)[8]) )
	$18 = ($18 | [8])
	$29 = [120]
	
.LABEL $label$99
	$26 = [0]
	$24 = [14960]
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$125 }
	$30 = ($29 & [32])
	$37 = $5
	
.LOOP $label$126:
	*(($37 = ($37 + [-1]))) = (*((((CASTING uint_32)(uint_64 $35) & [15]) + [14944])) | $30)
	$35 = (uint_64)$35 >> (uint_64)(int_64)4
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$126 }
	if ( (($18 & [8]) == 0) ){ goto $label$83 }
	if ( (int_64)(*($39 + [416]) == 0) ){ goto $label$83 }
	$24 = (int_32($29 >> [4]) + [14960])
	$26 = [2]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$125
	$37 = $5
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$98
	$30 = *($39 + [416])
	$37 = ( $30 ? [14976] : $30 )
	
.LABEL $label$97
	$26 = [0]
	$30 = CALL strnlen($37, ( [2147483647] ? $36 : ((int_32)$36 < (int_32)[0]) ))
	$14 = ($37 + $30)
	if ( ((int_32)$36 <= (int_32)[-1]) ){ goto $label$91 }
	$18 = $31
	$36 = $30
	goto $label$79 
	
.LABEL $label$96
	$26 = [0]
	$24 = [14960]
	$35 = *($39 + [416])
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$95
	if ( $17 ){ goto $label$93 }
	
.LABEL $label$94
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$93
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$127 }
	CALL __fwritex($19, $20, $0)
	$30 = *($0)
	
.LABEL $label$127
	if ( ($30 & [32]) ){ goto $label$128 }
	$30 = uint_32(($29 & [32]) >> [5])
	CALL __fwritex(( ( [15056] ? [15072] : $30 ) ? ( [15024] ? [15040] : $30 ) : $16 ), [3], $0)
	
.LABEL $label$128
	if ( ((int_32)($18 & [73728]) != (int_32)[8192]) ){ goto $label$129 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$129 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$131 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$132:
	if ( (($30 & [1]) == 0) ){ goto $label$133 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$133
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$132 }
	if ( $14 ){ goto $label$129 }
	$31 = ($31 & [255])
	goto $label$130 
	
.LABEL $label$131
	if ( $17 ){ goto $label$129 }
	
.LABEL $label$130
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$129
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$92
	$35 = (int_64)
	*($39 + [416]) = $35((int_64)0 - $35))
	$26 = [1]
	$24 = [14960]
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$91
	$18 = $31
	$36 = $30
	if ( (*($14) == 0) ){ goto $label$79 }
	goto $label$15 
	
.LABEL $label$90
	$31 = *($39 + [748])
	
.LABEL $label$89
	$28 = ( [6] ? $36 : $30 )
	$22 = ( ($39 + [752]) ? $9 : ((int_32)$31 < (int_32)[0]) )
	$36 = $22
	
.LOOP $label$134:
	$30 = CALL __fixunstfsi($35, $23)
	CALL __floatunsitf(($39 + [272]), $30)
	CALL __subtf3(($39 + [256]), $35, $23, *($39 + [272]), *((($39 + [272]) + [8])))
	CALL __multf3(($39 + [240]), *($39 + [256]), *((($39 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($36) = $30
	$36 = ($36 + [4])
	$23 = *((($39 + [240]) + [8]))
	$35 = *($39 + [240])
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$134 }
	if ( ((int_32)$31 < (int_32)[1]) ){ goto $label$137 }
	$17 = $22
	
.LOOP $label$138:
	$14 = ( $31 ? [29] : ((int_32)$31 < (int_32)[29]) )
	$30 = ($36 + [-4])
	if ( ($30 <= $17) ){ goto $label$139 }
	$23 = (CASTING uint_64)(uint_32 $14)
	$35 = (int_64)0
	
.LOOP $label$140:
	$35 = ((int_64)((int_64)*($30) << (int_64)$23) + (int_64)((int_64)$35 & (int_64)4294967295))
	*($30) = ((uint_64)$35 % (uint_64)(int_64)1000000000)
	$35 = ((uint_64)$35 / (uint_64)(int_64)1000000000)
	$30 = ($30 + [-4])
	if ( ((uint_32)$30 >= (uint_32)$17) ){ goto $label$140 }
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( ($30 == 0) ){ goto $label$139 }
	*(($17 = ($17 + [-4]))) = $30
	
.LABEL $label$139
	
.LOOP $label$142:
	$30 = $36
	if ( ((uint_32)$30 <= (uint_32)$17) ){ goto $label$141 }
	$36 = ($30 + [-4])
	if ( (*($36) == 0) ){ goto $label$142 }
	
.LABEL $label$141
	$36 = $30
	$31 = ($31 - $14)
	if ( ((int_32)$31 > (int_32)[0]) ){ goto $label$138 }
	*($39 + [748]) = $31
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	goto $label$136 
	
.LABEL $label$137
	$30 = $36
	$17 = $22
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	
.LABEL $label$136
	$24 = (((uint_32)($28 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$21 != (int_32)[102]) ){ goto $label$144 }
	$25 = ($22 + ($24 << [2]))
	
.LOOP $label$145:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$147 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$148:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$148 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$146 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$146 
	
.LABEL $label$147
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$146
	$30 = ( $25 ? $30 : ((int_32)int_32(($30 - $22) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$145 }
	goto $label$143 
	
.LABEL $label$144
	
.LOOP $label$149:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$151 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$152:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$152 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$150 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$150 
	
.LABEL $label$151
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$150
	$30 = ( ($17 + ($24 << [2])) ? $30 : ((int_32)int_32(($30 - $17) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$149 }
	
.LABEL $label$143
	*($39 + [748]) = $31
	
.LABEL $label$135
	$36 = [0]
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$153 }
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$153 }
	$14 = [10]
	
.LOOP $label$154:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$154 }
	
.LABEL $label$153
	$16 = ((int_32)$21 == (int_32)[103])
	$14 = (($28 - ( $36 ? [0] : ((int_32)$21 != (int_32)[102]) )) - (((int_32)$28 != (int_32)[0]) & $16))
	if ( ((int_32)$14 >= (int_32)(((int_32)int_32(($30 - $22) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$155 }
	$37 = ($14 + [147456])
	$24 = ($22 + (((int_32)$37 / (int_32)[9]) << [2]))
	$31 = ($24 + [-65532])
	$14 = [10]
	$37 = ((int_32)$37 % (int_32)[9])
	if ( ((int_32)($37 + [1]) > (int_32)[8]) ){ goto $label$156 }
	$37 = ([8] - $37)
	$14 = [10]
	
.LOOP $label$157:
	$14 = ((int_32)$14 * (int_32)[10])
	$37 = ($37 + [-1])
	if ( $37 ){ goto $label$157 }
	
.LABEL $label$156
	$27 = *($31)
	$37 = ((uint_32)$27 % (uint_32)$14)
	$26 = ($31 + [4])
	if ( ((int_32)$26 != (int_32)$30) ){ goto $label$159 }
	if ( ($37 == 0) ){ goto $label$158 }
	
.LABEL $label$159
	if ( (((uint_32)$27 / (uint_32)$14) & [1]) ){ goto $label$161 }
	$35 = (int_64)4643211215818981376
	$23 = (int_64)0
	if ( ((uint_32)$31 <= (uint_32)$17) ){ goto $label$160 }
	if ( ((int_32)$14 != (int_32)[1000000000]) ){ goto $label$160 }
	if ( ((*(($31 + [-4])) & [1]) == 0) ){ goto $label$160 }
	
.LABEL $label$161
	$35 = (int_64)4643211215818981376
	$23 = (int_64)1
	
.LABEL $label$160
	$34 = (int_64)4611123068473966592
	$25 = ((int_32)$14 / (int_32)[2])
	if ( ($37 <= $25) ){ goto $label$162 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$37 == (int_32)$25) ) ? (int_64)4611545280939032576 : ((int_32)$26 == (int_32)$30) )
	
.LABEL $label$162
	if ( ($20 == 0) ){ goto $label$163 }
	if ( ((int_32)*($19) != (int_32)[45]) ){ goto $label$163 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	
.LABEL $label$163
	CALL __addtf3(($39 + [224]), $23, $35, (int_64)0, $34)
	$37 = ($27 - $37)
	*($31) = $37
	if ( (CALL __eqtf2(*($39 + [224]), *((($39 + [224]) + [8])), $23, $35) == 0) ){ goto $label$158 }
	$36 = ($37 + $14)
	*($31) = $36
	if ( ($36 <= [1000000000]) ){ goto $label$164 }
	$36 = ($24 + [-65536])
	
.LOOP $label$165:
	*(($36 + [4])) = [0]
	if ( ((uint_32)$36 >= (uint_32)$17) ){ goto $label$166 }
	*(($17 = ($17 + [-4]))) = [0]
	
.LABEL $label$166
	$14 = (*($36) + [1])
	*($36) = $14
	$36 = ($36 + [-4])
	if ( ((uint_32)$14 > (uint_32)[999999999]) ){ goto $label$165 }
	$31 = ($36 + [4])
	
.LABEL $label$164
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$158 }
	$14 = [10]
	
.LOOP $label$167:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$167 }
	
.LABEL $label$158
	$14 = ($31 + [4])
	$30 = ( $14 ? $30 : ((uint_32)$30 > (uint_32)$14) )
	
.LABEL $label$155
	$31 = ([0] - $36)
	
.LOOP $label$171:
	$14 = $30
	if ( ((uint_32)$14 <= (uint_32)$17) ){ goto $label$170 }
	$30 = ($14 + [-4])
	if ( (*($30) == 0) ){ goto $label$171 }
	$27 = [1]
	if ( $16 ){ goto $label$169 }
	goto $label$168 
	
.LABEL $label$170
	$27 = [0]
	if ( ($16 == 0) ){ goto $label$168 }
	
.LABEL $label$169
	$30 = (($28 == 0) + $28)
	if ( ((int_32)$30 <= (int_32)$36) ){ goto $label$76 }
	if ( ((int_32)$36 < (int_32)[-4]) ){ goto $label$76 }
	$29 = ($29 + [-1])
	$28 = (($30 + [-1]) - $36)
	$16 = ($18 & [8])
	if ( ($16 == 0) ){ goto $label$75 }
	goto $label$68 
	
.LABEL $label$168
	$16 = ($18 & [8])
	goto $label$68 
	
.LABEL $label$88
	$26 = [1]
	$24 = [14961]
	if ( (uint_64)($35 <= (int_64)4294967296) ){ goto $label$86 }
	
.LABEL $label$87
	$37 = $5
	
.LOOP $label$172:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$172 }
	goto $label$85 
	
.LABEL $label$86
	$23 = $35
	$37 = $5
	
.LABEL $label$85
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$83 }
	
.LOOP $label$173:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $17 ){ goto $label$173 }
	goto $label$83 
	
.LABEL $label$84
	$30 = ($5 - $37)
	$24 = ( [14960] ? [14965] : ((int_32)$36 > (int_32)$30) )
	$26 = ((int_32)$36 <= (int_32)$30)
	
.LABEL $label$83
	if ( ($16 == 0) ){ goto $label$81 }
	
.LABEL $label$82
	if ( ((int_32)$36 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$81
	$18 = ( ($18 & [-65537]) ? $18 : ((int_32)$36 > (int_32)[-1]) )
	$35 = *($39 + [416])
	if ( $36 ){ goto $label$174 }
	if ( ((int_64)($35 == 0) == 0) ){ goto $label$174 }
	$37 = $5
	$14 = $5
	$36 = [0]
	goto $label$79 
	
.LABEL $label$174
	$30 = ((int_64)($35 == 0) + ($5 - $37))
	$36 = ( $36 ? $30 : ((int_32)$36 > (int_32)$30) )
	
.LABEL $label$80
	$14 = $5
	
.LABEL $label$79
	$29 = ($14 - $37)
	$28 = ( $29 ? $36 : ((int_32)$36 < (int_32)$29) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$15 }
	$27 = ($26 + $28)
	$30 = ( $27 ? $15 : ((int_32)$15 < (int_32)$27) )
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$175 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$175 }
	$17 = ($22 <= [256])
	$22 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $22 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$177 }
	$17 = ($14 == 0)
	$14 = $22
	
.LOOP $label$178:
	if ( (($17 & [1]) == 0) ){ goto $label$179 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$179
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$178 }
	if ( $16 ){ goto $label$175 }
	$22 = ($22 & [255])
	goto $label$176 
	
.LABEL $label$177
	if ( $14 ){ goto $label$175 }
	
.LABEL $label$176
	CALL __fwritex(($39 + [432]), $22, $0)
	
.LABEL $label$175
	if ( (*($0) & [32]) ){ goto $label$180 }
	CALL __fwritex($24, $26, $0)
	
.LABEL $label$180
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$181 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$181 }
	$17 = ($26 <= [256])
	$26 = ($30 - $27)
	CALL memset(($39 + [432]), [48], ( $26 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$183 }
	$17 = ($14 == 0)
	$14 = $26
	
.LOOP $label$184:
	if ( (($17 & [1]) == 0) ){ goto $label$185 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$185
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$184 }
	if ( $16 ){ goto $label$181 }
	$26 = ($26 & [255])
	goto $label$182 
	
.LABEL $label$183
	if ( $14 ){ goto $label$181 }
	
.LABEL $label$182
	CALL __fwritex(($39 + [432]), $26, $0)
	
.LABEL $label$181
	if ( ((int_32)$29 >= (int_32)$36) ){ goto $label$186 }
	$17 = ($16 <= [256])
	$16 = ($28 - $29)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$188 }
	$17 = ($36 == 0)
	$36 = $16
	
.LOOP $label$189:
	if ( (($17 & [1]) == 0) ){ goto $label$190 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$190
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$189 }
	if ( $31 ){ goto $label$186 }
	$16 = ($16 & [255])
	goto $label$187 
	
.LABEL $label$188
	if ( $36 ){ goto $label$186 }
	
.LABEL $label$187
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$186
	if ( (*($0) & [32]) ){ goto $label$191 }
	CALL __fwritex($37, $29, $0)
	
.LABEL $label$191
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$24 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$24 }
	$17 = ($37 <= [256])
	$37 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $17 ))
	$36 = *($0)
	$15 = ($36 & [32])
	if ( $17 ){ goto $label$193 }
	$17 = ($15 == 0)
	$15 = $37
	
.LOOP $label$194:
	if ( (($17 & [1]) == 0) ){ goto $label$195 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$195
	$14 = ($36 & [32])
	$17 = ($14 == 0)
	$15 = ($15 + [-256])
	if ( ((uint_32)$15 > (uint_32)[255]) ){ goto $label$194 }
	if ( $14 ){ goto $label$24 }
	$37 = ($37 & [255])
	goto $label$192 
	
.LABEL $label$193
	if ( $15 ){ goto $label$24 }
	
.LABEL $label$192
	CALL __fwritex(($39 + [432]), $37, $0)
	goto $label$24 
	
.LABEL $label$78
	CALL __addtf3(($39 + [192]), $35, $23, $33, $34)
	CALL __subtf3(($39 + [176]), *($39 + [192]), *((($39 + [192]) + [8])), $33, $34)
	$23 = *((($39 + [176]) + [8]))
	$35 = *($39 + [176])
	
.LABEL $label$77
	$30 = int_32($31 >> [31])
	$31 = *($39 + [748])
	$17 = ((int_32)($31 + $30) ^ (int_32)$30)
	$34 = (CASTING int_64)(int_32 $17)
	$30 = [0]
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$198 }
	$17 = (CASTING uint_32)(uint_64 $34)
	if ( $17 ){ goto $label$197 }
	goto $label$196 
	
.LABEL $label$198
	$30 = [0]
	
.LOOP $label$199:
	*(($12 + $30)) = ((int_64)((uint_64)$34 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ($30 + [-1])
	$17 = ((uint_64)$34 > (uint_64)(int_64)42949672959)
	$33 = ((uint_64)$34 / (uint_64)(int_64)10)
	$34 = $33
	if ( $17 ){ goto $label$199 }
	$17 = (CASTING uint_32)(uint_64 $33)
	if ( ($17 == 0) ){ goto $label$196 }
	
.LABEL $label$197
	
.LOOP $label$200:
	*(((($39 + [692]) + $30) + [11])) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$30 = ($30 + [-1])
	$14 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $14 ){ goto $label$200 }
	
.LABEL $label$196
	$17 = ($7 + $30)
	if ( $30 ){ goto $label$201 }
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$201
	$16 = ($20 | [2])
	*(($27 = ($17 + [-2]))) = ($29 + [15])
	*(($17 + [-1])) = ((uint_32($31 >> [30]) & [2]) + [43])
	if ( ($18 & [8]) ){ goto $label$202 }
	if ( ((int_32)$36 < (int_32)[1]) ){ goto $label$71 }
	$30 = ($39 + [704])
	
.LOOP $label$203:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [80]), $17)
	CALL __subtf3(($39 + [64]), $35, $23, *($39 + [80]), *((($39 + [80]) + [8])))
	CALL __multf3(($39 + [48]), *($39 + [64]), *((($39 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [14944])) | $37)
	$23 = *((($39 + [48]) + [8]))
	$35 = *($39 + [48])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$204 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$204
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$203 }
	goto $label$70 
	
.LABEL $label$202
	$30 = ($39 + [704])
	
.LOOP $label$205:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [128]), $17)
	CALL __subtf3(($39 + [112]), $35, $23, *($39 + [128]), *((($39 + [128]) + [8])))
	CALL __multf3(($39 + [96]), *($39 + [112]), *((($39 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [14944])) | $37)
	$23 = *((($39 + [96]) + [8]))
	$35 = *($39 + [96])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$206 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$206
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$205 }
	goto $label$70 
	
.LABEL $label$76
	$28 = ($30 + [-1])
	$29 = ($29 + [-2])
	$16 = ($18 & [8])
	if ( $16 ){ goto $label$68 }
	
.LABEL $label$75
	$30 = [9]
	if ( ($27 == 0) ){ goto $label$207 }
	$16 = *(($14 + [-4]))
	if ( ($16 == 0) ){ goto $label$207 }
	$30 = [0]
	if ( ((uint_32)$16 % (uint_32)[10]) ){ goto $label$207 }
	$37 = [10]
	$30 = [0]
	
.LOOP $label$208:
	$30 = ($30 + [1])
	$37 = ((int_32)$37 * (int_32)[10])
	if ( (((uint_32)$16 % (uint_32)$37) == 0) ){ goto $label$208 }
	
.LABEL $label$207
	$37 = (((int_32)int_32(($14 - $22) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($29 | [32]) != (int_32)[102]) ){ goto $label$69 }
	$16 = [0]
	$30 = ($37 - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	goto $label$68 
	
.LABEL $label$74
	$30 = [0]
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	
.LABEL $label$73
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$72 }
	$17 = ($27 <= [256])
	$27 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $27 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$210 }
	$17 = ($36 == 0)
	$36 = $27
	
.LOOP $label$211:
	if ( (($17 & [1]) == 0) ){ goto $label$212 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$212
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$211 }
	if ( $31 ){ goto $label$72 }
	$27 = ($27 & [255])
	goto $label$209 
	
.LABEL $label$210
	if ( $36 ){ goto $label$72 }
	
.LABEL $label$209
	CALL __fwritex(($39 + [432]), $27, $0)
	
.LABEL $label$72
	if ( ($30 == 0) ){ goto $label$213 }
	$17 = [0]
	
.LOOP $label$214:
	$36 = *($37)
	if ( ($36 == 0) ){ goto $label$213 }
	$36 = CALL wctomb(($39 + [340]), $36)
	$17 = ($36 + $17)
	if ( ((uint_32)$17 > (uint_32)$30) ){ goto $label$213 }
	if ( (*($0) & [32]) ){ goto $label$215 }
	CALL __fwritex(($39 + [340]), $36, $0)
	
.LABEL $label$215
	$37 = ($37 + [4])
	if ( ($17 <= $30) ){ goto $label$214 }
	
.LABEL $label$213
	if ( ((int_32)$16 != (int_32)[8192]) ){ goto $label$216 }
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$216 }
	$17 = ($31 <= [256])
	$31 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$218 }
	$17 = ($36 == 0)
	$36 = $31
	
.LOOP $label$219:
	if ( (($17 & [1]) == 0) ){ goto $label$220 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$220
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$219 }
	if ( $37 ){ goto $label$216 }
	$31 = ($31 & [255])
	goto $label$217 
	
.LABEL $label$218
	if ( $36 ){ goto $label$216 }
	
.LABEL $label$217
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$216
	$30 = ( $15 ? $30 : ((int_32)$15 > (int_32)$30) )
	goto $label$24 
	
.LABEL $label$71
	$17 = ($39 + [704])
	
.LOOP $label$221:
	$14 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [32]), $14)
	CALL __subtf3(($39 + [16]), $35, $23, *($39 + [32]), *((($39 + [32]) + [8])))
	CALL __multf3($39, *($39 + [16]), *((($39 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($30 = $17)) = (*(($14 + [14944])) | $37)
	$23 = *(($39 + [8]))
	$35 = *($39)
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$222 }
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$222 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$222
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$221 }
	
.LABEL $label$70
	$30 = [-1]
	$31 = ($7 - $27)
	if ( ((int_32)(([2147483645] - $16) - $31) < (int_32)$36) ){ goto $label$50 }
	$26 = ($17 - ($39 + [704]))
	$29 = ( ( ($36 + [2]) ? $26 : ((int_32)($8 + $17) < (int_32)$36) ) ? $26 : $36 )
	$37 = (($31 + $16) + $29)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$65 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$65 }
	$30 = ($28 <= [256])
	$28 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$67 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$223:
	if ( (($30 & [1]) == 0) ){ goto $label$224 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$224
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$223 }
	if ( $14 ){ goto $label$65 }
	$28 = ($28 & [255])
	goto $label$66 
	
.LABEL $label$69
	$16 = [0]
	$30 = (($37 + $36) - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	
.LABEL $label$68
	$30 = [-1]
	$24 = ($28 | $16)
	$37 = ((int_32)$24 != (int_32)[0])
	if ( ((int_32)$28 > (int_32)([2147483646] - $37)) ){ goto $label$50 }
	$26 = (($28 + $37) + [1])
	$21 = ((int_32)($29 | [32]) != (int_32)[102])
	if ( $21 ){ goto $label$225 }
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	$36 = ( $36 ? [0] : ((int_32)$36 > (int_32)[0]) )
	goto $label$61 
	
.LABEL $label$225
	$30 = ( $31 ? $36 : ((int_32)$36 < (int_32)[0]) )
	$35 = (CASTING int_64)(int_32 $30)
	if ( ((int_32)$30 <= (int_32)[-1]) ){ goto $label$64 }
	$37 = $7
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( $30 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$67
	if ( $17 ){ goto $label$65 }
	
.LABEL $label$66
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$65
	if ( (*($0) & [32]) ){ goto $label$226 }
	CALL __fwritex($24, $16, $0)
	
.LABEL $label$226
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$227 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$227 }
	$30 = ($16 <= [256])
	$16 = ($15 - $37)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$229 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$230:
	if ( (($30 & [1]) == 0) ){ goto $label$231 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$231
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$230 }
	if ( $14 ){ goto $label$227 }
	$16 = ($16 & [255])
	goto $label$228 
	
.LABEL $label$229
	if ( $17 ){ goto $label$227 }
	
.LABEL $label$228
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$227
	if ( (*($0) & [32]) ){ goto $label$232 }
	CALL __fwritex(($39 + [704]), $26, $0)
	
.LABEL $label$232
	$16 = ($29 - $26)
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$233 }
	$30 = ($16 <= [256])
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$235 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$236:
	if ( (($30 & [1]) == 0) ){ goto $label$237 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$237
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$236 }
	if ( $14 ){ goto $label$233 }
	$16 = ($16 & [255])
	goto $label$234 
	
.LABEL $label$235
	if ( $17 ){ goto $label$233 }
	
.LABEL $label$234
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$233
	if ( (*($0) & [32]) ){ goto $label$238 }
	CALL __fwritex($27, $31, $0)
	
.LABEL $label$238
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$239 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$239 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$241 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$242:
	if ( (($30 & [1]) == 0) ){ goto $label$243 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$243
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$242 }
	if ( $14 ){ goto $label$239 }
	$31 = ($31 & [255])
	goto $label$240 
	
.LABEL $label$241
	if ( $17 ){ goto $label$239 }
	
.LABEL $label$240
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$239
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$64
	$37 = $7
	
.LOOP $label$244:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$244 }
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$62 }
	
.LABEL $label$63
	
.LOOP $label$245:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$31 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $31 ){ goto $label$245 }
	
.LABEL $label$62
	if ( ((int_32)($7 - $37) > (int_32)[1]) ){ goto $label$246 }
	$30 = ($37 + [-1])
	
.LOOP $label$247:
	*($30) = [48]
	$37 = ($7 - $30)
	$31 = ($30 + [-1])
	$30 = $31
	if ( ((int_32)$37 < (int_32)[2]) ){ goto $label$247 }
	$37 = ($31 + [1])
	
.LABEL $label$246
	*(($25 = ($37 + [-2]))) = $29
	$30 = [-1]
	*(($37 + [-1])) = ((uint_32($36 >> [30]) & [2]) + [43])
	$36 = ($7 - $25)
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	
.LABEL $label$61
	$30 = [-1]
	$36 = ($36 + $26)
	if ( ((int_32)$36 > (int_32)((int_32)$20 ^ (int_32)[2147483647])) ){ goto $label$50 }
	$26 = ($36 + $20)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$51 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$51 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$53 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$248:
	if ( (($30 & [1]) == 0) ){ goto $label$249 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$249
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$248 }
	if ( $31 ){ goto $label$51 }
	$29 = ($29 & [255])
	goto $label$52 
	
.LABEL $label$60
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$59
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$58
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$57
	*(*($39 + [416])) = $38
	
.LABEL $label$56
	$30 = [0]
	goto $label$24 
	
.LABEL $label$55
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$54
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$53
	if ( $36 ){ goto $label$51 }
	
.LABEL $label$52
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$51
	if ( (*($0) & [32]) ){ goto $label$250 }
	CALL __fwritex($19, $20, $0)
	
.LABEL $label$250
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$251 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$251 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [48], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$253 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$254:
	if ( (($30 & [1]) == 0) ){ goto $label$255 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$255
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$254 }
	if ( $31 ){ goto $label$251 }
	$29 = ($29 & [255])
	goto $label$252 
	
.LABEL $label$253
	if ( $36 ){ goto $label$251 }
	
.LABEL $label$252
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$251
	if ( $21 ){ goto $label$266 }
	$31 = ( $22 ? $17 : ((uint_32)$17 > (uint_32)$22) )
	$37 = $31
	
.LOOP $label$267:
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$269 }
	$17 = [0]
	
.LOOP $label$270:
	*(($11 + $17)) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ($17 + [-1])
	$36 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $36 ){ goto $label$270 }
	goto $label$268 
	
.LABEL $label$269
	$17 = [0]
	
.LABEL $label$268
	$30 = ($10 + $17)
	if ( ((int_32)$37 == (int_32)$31) ){ goto $label$272 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$271 }
	
.LOOP $label$273:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$273 }
	$30 = ($39 + [704])
	goto $label$271 
	
.LABEL $label$272
	if ( $17 ){ goto $label$271 }
	*(($30 = ($30 + [-1]))) = [48]
	
.LABEL $label$271
	if ( (*($0) & [32]) ){ goto $label$274 }
	CALL __fwritex($30, ($10 - $30), $0)
	
.LABEL $label$274
	$37 = ($37 + [4])
	if ( ((uint_32)$37 <= (uint_32)$22) ){ goto $label$267 }
	if ( ($24 == 0) ){ goto $label$275 }
	if ( (*($0) & [32]) ){ goto $label$275 }
	CALL __fwritex([15088], [1], $0)
	
.LABEL $label$275
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$265 }
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$264 }
	
.LOOP $label$276:
	$30 = $10
	$17 = *($37)
	if ( ($17 == 0) ){ goto $label$278 }
	$30 = $10
	
.LOOP $label$279:
	*(($30 = ($30 + [-1]))) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$36 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $36 ){ goto $label$279 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$277 }
	
.LABEL $label$278
	
.LOOP $label$280:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$280 }
	
.LABEL $label$277
	if ( (*($0) & [32]) ){ goto $label$281 }
	CALL __fwritex($30, ( $28 ? [9] : ((int_32)$28 < (int_32)[9]) ), $0)
	
.LABEL $label$281
	$30 = ($28 + [-9])
	if ( ((int_32)$28 < (int_32)[10]) ){ goto $label$263 }
	$28 = $30
	$37 = ($37 + [4])
	if ( ($37 <= $14) ){ goto $label$276 }
	goto $label$263 
	
.LABEL $label$266
	if ( ((int_32)$28 <= (int_32)[-1]) ){ goto $label$259 }
	$31 = ( $14 ? ($17 + [4]) : $27 )
	if ( ($16 == 0) ){ goto $label$261 }
	$37 = $17
	
.LOOP $label$282:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$284 }
	$36 = [0]
	
.LOOP $label$285:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$285 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$283 }
	
.LABEL $label$284
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$283
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$287 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$286 }
	
.LOOP $label$288:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$288 }
	goto $label$286 
	
.LABEL $label$287
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$289 }
	CALL __fwritex($14, [1], $0)
	$30 = *($0)
	
.LABEL $label$289
	$14 = ($14 + [1])
	if ( ($30 & [32]) ){ goto $label$286 }
	CALL __fwritex([15088], [1], $0)
	
.LABEL $label$286
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$290 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$290
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$282 }
	goto $label$260 
	
.LABEL $label$265
	$30 = $28
	if ( ((int_32)$30 >= (int_32)[1]) ){ goto $label$262 }
	goto $label$258 
	
.LABEL $label$264
	$30 = $28
	
.LABEL $label$263
	if ( ((int_32)$30 < (int_32)[1]) ){ goto $label$258 }
	
.LABEL $label$262
	$17 = ($30 <= [256])
	CALL memset(($39 + [432]), [48], ( $30 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$292 }
	$17 = ($36 == 0)
	$36 = $30
	
.LOOP $label$293:
	if ( (($17 & [1]) == 0) ){ goto $label$294 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$294
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$293 }
	if ( $37 ){ goto $label$258 }
	$30 = ($30 & [255])
	goto $label$291 
	
.LABEL $label$292
	if ( $36 ){ goto $label$258 }
	
.LABEL $label$291
	CALL __fwritex(($39 + [432]), $30, $0)
	if ( ((int_32)$18 == (int_32)[8192]) ){ goto $label$257 }
	goto $label$256 
	
.LABEL $label$261
	$37 = $17
	
.LOOP $label$295:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$297 }
	$36 = [0]
	
.LOOP $label$298:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$298 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$296 }
	
.LABEL $label$297
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$296
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$300 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$299 }
	
.LOOP $label$301:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$301 }
	goto $label$299 
	
.LABEL $label$300
	if ( (*($0) & [32]) ){ goto $label$302 }
	CALL __fwritex($14, [1], $0)
	
.LABEL $label$302
	$14 = ($14 + [1])
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$299 }
	if ( (*($0) & [32]) ){ goto $label$299 }
	CALL __fwritex([15088], [1], $0)
	
.LABEL $label$299
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$303 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$303
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$295 }
	
.LABEL $label$260
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$259 }
	$30 = ($28 <= [256])
	CALL memset(($39 + [432]), [48], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$305 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$306:
	if ( (($30 & [1]) == 0) ){ goto $label$307 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$307
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$306 }
	if ( $14 ){ goto $label$259 }
	$28 = ($28 & [255])
	goto $label$304 
	
.LABEL $label$305
	if ( $17 ){ goto $label$259 }
	
.LABEL $label$304
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$259
	if ( (*($0) & [32]) ){ goto $label$258 }
	CALL __fwritex($25, ($7 - $25), $0)
	
.LABEL $label$258
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$256 }
	
.LABEL $label$257
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$256 }
	$30 = ($37 <= [256])
	$37 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$309 }
	$30 = ($17 == 0)
	$17 = $37
	
.LOOP $label$310:
	if ( (($30 & [1]) == 0) ){ goto $label$311 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$311
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$310 }
	if ( $14 ){ goto $label$256 }
	$37 = ($37 & [255])
	goto $label$308 
	
.LABEL $label$309
	if ( $17 ){ goto $label$256 }
	
.LABEL $label$308
	CALL __fwritex(($39 + [432]), $37, $0)
	
.LABEL $label$256
	$30 = ( $15 ? $26 : ((int_32)$15 > (int_32)$26) )
	
.LABEL $label$50
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$24
	if ( ((int_32)$30 <= (int_32)$13) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( $0 ){ goto $label$1 }
	if ( ($32 == 0) ){ goto $label$14 }
	$30 = [1]
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $307(($3 + [16]), $1, $2)
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $307(($3 + [32]), $1, $2)
	$1 = *($4 + [12])
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $307(($3 + [48]), $1, $2)
	$1 = *($4 + [16])
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $307(($3 + [64]), $1, $2)
	$1 = *($4 + [20])
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $307(($3 + [80]), $1, $2)
	$1 = *($4 + [24])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL $307(($3 + [96]), $1, $2)
	$1 = *($4 + [28])
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $307(($3 + [112]), $1, $2)
	$1 = *($4 + [32])
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $307(($3 + [128]), $1, $2)
	$1 = *($4 + [36])
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $307(($3 + [144]), $1, $2)
	$38 = [1]
	goto $label$1 
	
.LABEL $label$15
	*(CALL __errno_location()) = [75]
	goto $label$2 
	
.LABEL $label$14
	$38 = [0]
	goto $label$1 
	
.LABEL $label$13
	$30 = [2]
	goto $label$4 
	
.LABEL $label$12
	$30 = [3]
	goto $label$4 
	
.LABEL $label$11
	$38 = [0]
	goto $label$1 
	
.LABEL $label$10
	$30 = [4]
	goto $label$4 
	
.LABEL $label$9
	$30 = [5]
	goto $label$4 
	
.LABEL $label$8
	$30 = [6]
	goto $label$4 
	
.LABEL $label$7
	$30 = [7]
	goto $label$4 
	
.LABEL $label$6
	$30 = [8]
	goto $label$4 
	
.LABEL $label$5
	$30 = [9]
	
.LABEL $label$4
	$1 = ($4 + ($30 << [2]))
	
.LOOP $label$312:
	if ( *($1) ){ goto $label$3 }
	$1 = ($1 + [4])
	$38 = [1]
	$30 = ($30 + [1])
	if ( ((uint_32)$30 <= (uint_32)[9]) ){ goto $label$312 }
	goto $label$1 
	
.LABEL $label$3
	*(CALL __errno_location()) = [22]
	
.LABEL $label$2
	$38 = [-1]
	
.LABEL $label$1
	*([0] + [4]) = ($39 + [8128])
	$30
	$30
	return $38
}

int_32 .FUNC vfprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [288])
	*([0] + [4]) = $7
	*($7 + [284]) = $2
	$6 = [0]
	CALL memset(($7 + [240]), [0], [40])
	*($7 + [280]) = *($7 + [284])
	$2 = [-1]
	if ( ((int_32)CALL $303([0], $1, ($7 + [280]), ($7 + [80]), ($7 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL __lockfile($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) > (int_32)[0]) ){ goto $label$3 }
	*($0) = ($2 & [-33])
	
.LABEL $label$3
	$3 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	$2 = CALL $303($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	goto $label$4 
	
.LABEL $label$5
	*(($5 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($7 + [80])
	*($0 + [28]) = $7
	*($0 + [20]) = $7
	$4 = *($0 + [44])
	*($0 + [44]) = $7
	$2 = CALL $303($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	if ( ($4 == 0) ){ goto $label$4 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $4
	*($5) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$4 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $4 )
	
.LABEL $label$4
	$1 = *($0)
	*($0) = ($1 | $3)
	$1 = ($1 & [32])
	if ( ($6 == 0) ){ goto $label$6 }
	CALL __unlockfile($0)
	
.LABEL $label$6
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [288])
	return $2
}

int_32 .FUNC $301 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0 + [28])
	$6 = (*($0 + [20]) - $4)
	$3 = *($0 + [84])
	$5 = *($3 + [4])
	$6 = ( $5 ? $6 : ($5 <= $6) )
	if ( ($6 == 0) ){ goto $label$1 }
	CALL memcpy(*($3), $4, $6)
	*($3) = (*($3) + $6)
	$5 = (*($5) - $6)
	*(($5 = ($3 + [4]))) = $5
	
.LABEL $label$1
	$6 = *($3)
	$5 = ( $5 ? $2 : ($5 <= $2) )
	if ( ($5 == 0) ){ goto $label$2 }
	CALL memcpy($6, $1, $5)
	$6 = (*($3) + $5)
	*($3) = $6
	*(($3 = ($3 + [4]))) = (*($3) - $5)
	
.LABEL $label$2
	*($6) = [0]
	$3 = *($0 + [44])
	*(($0 + [28])) = $3
	*(($0 + [20])) = $3
	return $2
}

void .FUNC $263 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($2 + [44]), *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [48]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [56]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [800])
	CALL memcpy(($0 + [64]), *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	CALL $167(*($1), ($0 + [68]))
	*($4 + [8]) = $0
	CALL $264(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $307 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$1 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$18
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$16
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$15
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$9
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$8
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$7
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$5
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$3
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($4, *($1))
	*(($0 + [8])) = *(($4 + [8]))
	*($0) = *($4)
	goto $label$1 
	
.LABEL $label$2
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$3 = *($1)
	*(($0 + [8])) = *($1 + [8])
	*($0) = $3
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	$1
}

int_32 .FUNC __fwritex (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($2 + [16])
	if ( $6 ){ goto $label$2 }
	$6 = [0]
	if ( CALL __towrite($2) ){ goto $label$1 }
	$6 = *(($2 + [16]))
	
.LABEL $label$2
	$7 = *($2 + [20])
	if ( ((uint_32)($6 - $7) >= (uint_32)$1) ){ goto $label$3 }
	return CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	
.LABEL $label$3
	$8 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$4 }
	$3 = ($0 + $1)
	$8 = [0]
	$6 = [0]
	
.LOOP $label$5:
	if ( (($1 + $6) == 0) ){ goto $label$4 }
	$5 = ($3 + $6)
	$4 = ($6 + [-1])
	$6 = $4
	if ( ((int_32)*(($5 + [-1])) != (int_32)[10]) ){ goto $label$5 }
	$8 = (($1 + $4) + [1])
	$6 = CALL int_32 $2((int_32 $0), (int_32 $8), (int_32 *($2 + [36])))
	if ( ($6 <= $8) ){ goto $label$1 }
	$1 = ((int_32)$4 ^ (int_32)[-1])
	$0 = (($3 + $4) + [1])
	$7 = *(($2 + [20]))
	
.LABEL $label$4
	CALL memcpy($7, $0, $1)
	*(($6 = ($2 + [20]))) = (*($6) + $1)
	return ($8 + $1)
	
.LABEL $label$1
	return $6
}

void .FUNC __unlockfile (int_32 $0)
{
}

int_32 .FUNC __lockfile (int_32 $0)
{
	int_32 $1
	return $1
}

int_32 .FUNC strnlen (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL memchr($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

int_32 .FUNC strerror (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL __lctrans($3, *([0] + [20]))
	$2 = [0]
	
.LOOP $label$5:
	if ( ((int_32)*(($2 + [15104])) == (int_32)$0) ){ goto $label$4 }
	$1 = [87]
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[87]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$1 = $2
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = [15200]
	
.LOOP $label$6:
	$0 = *($2)
	$3 = ($2 + [1])
	$2 = $3
	if ( $0 ){ goto $label$6 }
	$2 = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [15200]
	return .LABEL $label$1
}

int_32 .FUNC wctomb (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL wcrtomb($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

void .FUNC $265 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $167(*($1), ($0 + [32]))
}

void .FUNC _ZN12thedeosgames7unstakeEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [224])
	*([0] + [4]) = $11
	$4 = *($2 + [8])
	$10 = [0]
	$6 = [0]
	$3 = *($2)
	if ( ((uint_64)((int_64)$3 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$7 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [3168])
	CALL eosio_assert(((int_64)$3 > (int_64)0), [3200])
	*((($11 + [120]) + [32])) = [0]
	$5 = (uint_64)$4 >> (uint_64)(int_64)8
	*($11 + [128]) = $5)
	*($11 + [136]) = (int_64)-1
	*($11 + [144]) = (int_64)0
	*($11 + [120]) = *($0 + [176])
	CALL eosio_assert(((int_64)$4 == (int_64)*(CALL $132(($11 + [120]), $5, [1936]) + [8])), [3232])
	CALL require_auth($1)
	*((($11 + [80]) + [32])) = [0]
	*($11 + [88]) = $1
	*($11 + [96]) = (int_64)-1
	*($11 + [104]) = (int_64)0
	$7 = *($0 + [176])
	*($11 + [80]) = $7
	$8 = CALL db_find_i64($7, $1, (int_64)3607749779137757184, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	$10 = CALL $13(($11 + [80]), $8)
	CALL eosio_assert(((int_32)*($10 + [16]) == (int_32)($11 + [80])), [176])
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [3328])
	CALL eosio_assert([1], [576])
	$7 = (int_64)1397704004
	$9 = (int_64)357812225028
	$8 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$6 = [0]
	
.LABEL $label$7
	CALL eosio_assert($6, [32])
	$8 = [0]
	*((($11 + [40]) + [32])) = [0]
	*($11 + [56]) = (int_64)-1
	*($11 + [64]) = (int_64)0
	$0 = ($0 + [176])
	$7 = *($0)
	*($11 + [40]) = $7
	*($11 + [48]) = $1
	$6 = CALL db_find_i64($7, $1, (int_64)5300888951328866304, $5)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$13 }
	$6 = CALL $36(($11 + [40]), $6)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($11 + [40])), [176])
	$9 = *($6 + [8])
	$1 = *($6)
	$10 = [1]
	goto $label$12 
	
.LABEL $label$13
	$10 = [0]
	$6 = [0]
	$1 = (int_64)0
	
.LABEL $label$12
	*(($11 + [32])) = [0]
	*($11 + [16]) = (int_64)-1
	*($11 + [24]) = (int_64)0
	$7 = *($0)
	*($11) = $7
	*($11 + [8]) = $5
	$0 = CALL db_find_i64($7, $5, (int_64)-4165147408352673792, $5)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$14 }
	$8 = CALL $205($11, $0)
	CALL eosio_assert(((int_32)*($8 + [28]) == (int_32)$11), [176])
	
.LABEL $label$14
	$0 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($0, [5552])
	CALL eosio_assert((*($8 + [24]) == 0), [3296])
	CALL eosio_assert($0, [288])
	CALL eosio_assert(((int_32)*($8 + [28]) == (int_32)$11), [336])
	CALL eosio_assert(((int_64)*($11) == (int_64)CALL $fimport$14()), [384])
	$7 = *($8 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$7), [912])
	$5 = (int_64)
	*($8) = $5(*($8) - $3))
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [960])
	CALL eosio_assert(((int_64)*($8) < (int_64)4611686018427387904), [992])
	*($8 + [16]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$7) == (int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8)), [448])
	CALL eosio_assert([1], [640])
	CALL memcpy(($11 + [160]), $8, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($11 + [160]) | [8]), ($8 + [8]), [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($11 + [160]) + [16]), ($8 + [16]), [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($11 + [160]) + [24]), ($8 + [24]), [4])
	CALL db_update_i64(*($8 + [32]), (int_64)0, ($11 + [160]), [28])
	$8 = ($11 + [16])
	if ( (uint_64)($7 <= *($8)) ){ goto $label$15 }
	*($8) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	CALL eosio_assert(((int_64)$9 == (int_64)$4), [3456])
	$7 = *($2)
	CALL eosio_assert(((int_64)$1 >= (int_64)$7), [5632])
	if ( ($10 == 0) ){ goto $label$16 }
	CALL eosio_assert([1], [288])
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($11 + [40])), [336])
	CALL eosio_assert(((int_64)*($11 + [40]) == (int_64)CALL $fimport$14()), [384])
	$5 = *($6 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$5), [912])
	$7 = (int_64)
	*($6) = $7(*($6) - $7))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [960])
	CALL eosio_assert(((int_64)*($6) < (int_64)4611686018427387904), [992])
	$7 = (uint_64)$5 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$7) == (int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8)), [448])
	*($11 + [216]) = (($11 + [160]) + [40])
	*($11 + [212]) = ($11 + [160])
	*($11 + [208]) = ($11 + [160])
	CALL $37(($11 + [208]), $6)
	CALL db_update_i64(*($6 + [44]), (int_64)0, ($11 + [160]), [40])
	$8 = ($11 + [56])
	if ( (uint_64)($7 <= *($8)) ){ goto $label$16 }
	*($8) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$16
	$0 = *($11 + [24])
	if ( ($0 == 0) ){ goto $label$17 }
	$2 = ($11 + [28])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$19 }
	
.LOOP $label$20:
	$8 = ($8 + [-24])
	$6 = *($8)
	*($8) = [0]
	if ( ($6 == 0) ){ goto $label$21 }
	CALL $276($6)
	
.LABEL $label$21
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$20 }
	$8 = *(($11 + [24]))
	goto $label$18 
	
.LABEL $label$19
	$8 = $0
	
.LABEL $label$18
	*($2) = $0
	CALL $276($8)
	
.LABEL $label$17
	$0 = *($11 + [64])
	if ( ($0 == 0) ){ goto $label$22 }
	$2 = ($11 + [68])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$24 }
	
.LOOP $label$25:
	$8 = ($8 + [-24])
	$6 = *($8)
	*($8) = [0]
	if ( ($6 == 0) ){ goto $label$26 }
	CALL $276($6)
	
.LABEL $label$26
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$25 }
	$8 = *(($11 + [64]))
	goto $label$23 
	
.LABEL $label$24
	$8 = $0
	
.LABEL $label$23
	*($2) = $0
	CALL $276($8)
	
.LABEL $label$22
	$0 = *($11 + [104])
	if ( ($0 == 0) ){ goto $label$27 }
	$2 = ($11 + [108])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$29 }
	
.LOOP $label$30:
	$8 = ($8 + [-24])
	$6 = *($8)
	*($8) = [0]
	if ( ($6 == 0) ){ goto $label$31 }
	CALL $276($6)
	
.LABEL $label$31
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$30 }
	$8 = *(($11 + [104]))
	goto $label$28 
	
.LABEL $label$29
	$8 = $0
	
.LABEL $label$28
	*($2) = $0
	CALL $276($8)
	
.LABEL $label$27
	$0 = *($11 + [144])
	if ( ($0 == 0) ){ goto $label$32 }
	$2 = ($11 + [148])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$34 }
	
.LOOP $label$35:
	$8 = ($8 + [-24])
	$6 = *($8)
	*($8) = [0]
	if ( ($6 == 0) ){ goto $label$36 }
	CALL $276($6)
	
.LABEL $label$36
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$35 }
	$8 = *(($11 + [144]))
	goto $label$33 
	
.LABEL $label$34
	$8 = $0
	
.LABEL $label$33
	*($2) = $0
	CALL $276($8)
	
.LABEL $label$32
	*([0] + [4]) = ($11 + [224])
}

void .FUNC _ZN12thedeosgames12lockstakeingEm (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	CALL eosio_assert([1], [576])
	$6 = [0]
	$5 = (int_64)1397704004
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [32])
	$6 = [0]
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($0 + [176])
	*($7 + [8]) = $5
	*($7 + [16]) = (int_64)1397704004
	$4 = CALL db_find_i64($5, (int_64)1397704004, (int_64)-4165147408352673792, (int_64)1397704004)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$9 }
	$6 = CALL $205(($7 + [8]), $4)
	CALL eosio_assert(((int_32)*($6 + [28]) == (int_32)($7 + [8])), [176])
	CALL eosio_assert([1], [288])
	CALL eosio_assert(((int_32)*($6 + [28]) == (int_32)($7 + [8])), [336])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$14()), [384])
	*($6 + [24]) = $1
	$5 = *($6 + [8])
	CALL eosio_assert([1], [448])
	CALL eosio_assert([1], [640])
	CALL memcpy(($7 + [48]), $6, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($7 + [48]) | [8]), ($6 + [8]), [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($7 + [48]) + [16]), ($6 + [16]), [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($7 + [48]) + [24]), ($6 + [24]), [4])
	CALL db_update_i64(*($6 + [32]), (int_64)0, ($7 + [48]), [28])
	$6 = (($7 + [8]) + [16])
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( (uint_64)($5) <= *($6)) ){ goto $label$8 }
	*($6) = ((int_64)$5 + (int_64)1)
	$0 = *($7 + [32])
	if ( $0 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$2 = *(($0 + [176]))
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$14()), [512])
	*(($4 = CALL $275([40])) + [8]) = (int_64)1398362884
	*($4) = (int_64)0
	CALL eosio_assert([1], [576])
	$3 = ($4 + [8])
	$5 = (int_64)5462355
	
.LOOP $label$11:
	$0 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$0 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	CALL eosio_assert($0, [32])
	*($4 + [28]) = ($7 + [8])
	*(($6 = ($4 + [8]))) = (int_64)357812225028
	*($4) = (int_64)0
	$5 = CALL current_time()
	*($4 + [24]) = $1
	*($4 + [16]) = ((int_64)((uint_64)$5 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert([1], [640])
	CALL memcpy(($7 + [48]), $4, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($7 + [48]) | [8]), $3, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($7 + [48]) + [16]), ($4 + [16]), [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($7 + [48]) + [24]), ($4 + [24]), [4])
	$5 = (uint_64)*($6) >> (uint_64)(int_64)8
	$0 = CALL db_store_i64(*((($7 + [8]) + [8])), (int_64)-4165147408352673792, $2, $5), ($7 + [48]), [28]
	*($4 + [32]) = $0)
	$1 = (($7 + [8]) + [16])
	if ( (uint_64)($5 <= *($1)) ){ goto $label$14 }
	*($1) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$14
	*($7 + [88]) = $4
	$5 = (uint_64)*($6) >> (uint_64)(int_64)8
	*($7 + [48]) = $5)
	*($7 + [84]) = $0
	$6 = *((($7 + [8]) + [28]))
	if ( ((uint_32)$6 >= (uint_32)*(($7 + [40]))) ){ goto $label$16 }
	*($6 + [8]) = $5
	*($6 + [16]) = $0
	*($7 + [88]) = [0]
	*($6) = $4
	*(($7 + [36])) = ($6 + [24])
	goto $label$15 
	
.LABEL $label$16
	CALL $207(($7 + [32]), ($7 + [88]), ($7 + [48]), ($7 + [84]))
	
.LABEL $label$15
	$6 = *($7 + [88])
	*($7 + [88]) = [0]
	if ( ($6 == 0) ){ goto $label$8 }
	CALL $276($6)
	
.LABEL $label$8
	$0 = *($7 + [32])
	if ( ($0 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$1 = ($7 + [36])
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$18 }
	
.LOOP $label$19:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$20 }
	CALL $276($4)
	
.LABEL $label$20
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$19 }
	$6 = *(($7 + [32]))
	goto $label$17 
	
.LABEL $label$18
	$6 = $0
	
.LABEL $label$17
	*($1) = $0
	CALL $276($6)
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [96])
}

void .FUNC _ZN12thedeosgames5dicecEyN5eosio5assetEmym (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [128])
	*([0] + [4]) = $14
	$11 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$12 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [32])
	if ( ($5 == 0) ){ goto $label$7 }
	CALL eosio_assert((($3 + [-2]) <= [97]), [5456])
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert((($3 + [-1]) <= [97]), [5504])
	
.LABEL $label$6
	CALL require_auth($1)
	*(($12 = (($14 + [24]) + [8]))) = *(($2 + [8]))
	$11 = *($2)
	*((($14 + [8]) + [12])) = *((($14 + [24]) + [12]))
	*((($14 + [8]) + [8])) = *($12)
	*($14 + [24]) = $11
	*($14 + [12]) = *($14 + [28])
	*($14 + [8]) = *($14 + [24])
	$11 = (CASTING uint_64)(uint_32 CALL _ZN12thedeosgames7tkncodeEN5eosio5assetE($12, ($14 + [8])))
	$6 = *(($0 + [2112]))
	$13 = *(($0 + [2116]))
	if ( ((int_32)$13 == (int_32)$6) ){ goto $label$8 }
	$12 = ($13 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$9:
	if ( ((int_64)*(*($12)) == (int_64)$11) ){ goto $label$8 }
	$13 = $12
	$8 = ($12 + [-24])
	$12 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	$10 = ($0 + [2088])
	if ( ((int_32)$13 == (int_32)$6) ){ goto $label$11 }
	$12 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [56]) == (int_32)$10), [176])
	goto $label$10 
	
.LABEL $label$11
	$12 = [0]
	$8 = CALL db_find_i64(*(($0 + [2088])), *(($0 + [2096])), (int_64)6138558357033713664, $11)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	$12 = CALL $122($10, $8)
	CALL eosio_assert(((int_32)*($12 + [56]) == (int_32)$10), [176])
	
.LABEL $label$10
	$8 = [0]
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [2576])
	CALL eosio_assert((*($12 + [16]) == 0), [144])
	$11 = *($2)
	if ( ((int_64)*($12 + [48]) > (int_64)$11) ){ goto $label$12 }
	$8 = ((int_64)$11 <= (int_64)*($12 + [52]))
	
.LABEL $label$12
	CALL eosio_assert($8, [4368])
	$6 = *(($0 + [2112]))
	$13 = *(($0 + [2116]))
	if ( ((int_32)$13 == (int_32)$6) ){ goto $label$13 }
	$12 = ($13 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$14:
	if ( ((int_64)*(*($12)) == (int_64)1) ){ goto $label$13 }
	$13 = $12
	$8 = ($12 + [-24])
	$12 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$14 }
	
.LABEL $label$13
	if ( ((int_32)$13 == (int_32)$6) ){ goto $label$16 }
	$13 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [56]) == (int_32)$10), [176])
	goto $label$15 
	
.LABEL $label$16
	$13 = [0]
	$12 = CALL db_find_i64(*(($0 + [2088])), *(($0 + [2096])), (int_64)6138558357033713664, (int_64)1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$15 }
	$13 = CALL $122($10, $12)
	CALL eosio_assert(((int_32)*($13 + [56]) == (int_32)$10), [176])
	
.LABEL $label$15
	$12 = [0]
	$8 = ((int_32)$13 != (int_32)[0])
	CALL eosio_assert($8, [2576])
	CALL eosio_assert($8, [288])
	CALL eosio_assert(((int_32)*($13 + [56]) == (int_32)$10), [336])
	CALL eosio_assert(((int_64)*(($0 + [2088])) == (int_64)CALL $fimport$14()), [384])
	*($13 + [8]) = ((int_64)*($13 + [8]) + (int_64)1)
	$11 = *($13)
	CALL eosio_assert([1], [448])
	*($14 + [120]) = (($14 + [48]) + [52])
	*($14 + [116]) = ($14 + [48])
	*($14 + [112]) = ($14 + [48])
	CALL $177(($14 + [112]), $13)
	CALL db_update_i64(*($13 + [60]), (int_64)0, ($14 + [48]), [52])
	$8 = ($0 + [2104])
	if ( (uint_64)($11 <= *($8)) ){ goto $label$17 }
	*($8) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	$9 = *($0 + [176])
	CALL eosio_assert(((int_64)*($0 + [1848]) == (int_64)CALL $fimport$14()), [512])
	*(($8 = CALL $275([88])) + [16]) = (int_64)1398362884
	*($8 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$6 = ($0 + [1848])
	$10 = ($8 + [8])
	$11 = (int_64)5462355
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	
.LOOP $label$22:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$22 }
	
.LABEL $label$21
	$7 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	$7 = [0]
	
.LABEL $label$18
	CALL eosio_assert($7, [32])
	*($8 + [72]) = $6
	*($8) = *($13 + [8])
	*(($10 + [12])) = *(($2 + [12]))
	*(($10 + [8])) = *(($2 + [8]))
	*(($10 + [4])) = *(($2 + [4]))
	*($10) = *($2)
	*($8 + [24]) = $3
	*($8 + [28]) = [0]
	*($8 + [32]) = ([1] - $5)
	*($8 + [40]) = $1
	*($8 + [56]) = [0]
	$11 = CALL current_time()
	*($8 + [64]) = $4
	*($8 + [48]) = ((int_64)((uint_64)$11 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($14 + [120]) = (($14 + [48]) + [64])
	*($14 + [116]) = ($14 + [48])
	*($14 + [112]) = ($14 + [48])
	CALL $203(($14 + [112]), $8)
	$11 = *($8)
	$13 = CALL db_store_i64(*(($0 + [1856])), (int_64)5445034581344518144, $9, $11, ($14 + [48]), [64])
	*($8 + [76]) = $13
	$12 = ($0 + [1864])
	if ( (uint_64)($11 <= *($12)) ){ goto $label$23 }
	*($12) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$23
	*($14 + [112]) = $8
	$11 = *($8)
	*($14 + [48]) = $11
	*($14 + [44]) = $13
	$7 = ($0 + [1876])
	$12 = *($7)
	if ( ((uint_32)$12 >= (uint_32)*(($0 + [1880]))) ){ goto $label$25 }
	*($12 + [8]) = $11
	*($12 + [16]) = $13
	*($14 + [112]) = [0]
	*($12) = $8
	*($7) = ($12 + [24])
	goto $label$24 
	
.LABEL $label$25
	CALL $104(($0 + [1872]), ($14 + [112]), ($14 + [48]), ($14 + [44]))
	
.LABEL $label$24
	$12 = *($14 + [112])
	*($14 + [112]) = [0]
	if ( ($12 == 0) ){ goto $label$26 }
	CALL $276($12)
	
.LABEL $label$26
	*([0] + [4]) = ($14 + [128])
}

int_32 .FUNC $203 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN12thedeosgames5claimEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [176])
	*([0] + [4]) = $9
	$6 = [0]
	$3 = *($2 + [8])
	$7 = (uint_64)$3 >> (uint_64)(int_64)8
	$5 = $7)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [32])
	*((($9 + [72]) + [32])) = [0]
	*($9 + [88]) = (int_64)-1
	*($9 + [96]) = (int_64)0
	$5 = *($0 + [176])
	*($9 + [72]) = $5
	*($9 + [80]) = $7
	$4 = [0]
	$6 = CALL db_find_i64($5, $7, (int_64)-4157508551318700032, $7)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$4 = CALL $7(($9 + [72]), $6)
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)($9 + [72])), [176])
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [5136])
	CALL require_auth($1)
	CALL require_recipient($1)
	*((($9 + [32]) + [32])) = [0]
	*($9 + [40]) = $1
	*($9 + [48]) = (int_64)-1
	*($9 + [56]) = (int_64)0
	$5 = *(($0 + [176]))
	*($9 + [32]) = $5
	$6 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, $7)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert(((int_32)*(CALL $13(($9 + [32]), $6) + [16]) == (int_32)($9 + [32])), [176])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$8
	$6 = [1]
	
.LABEL $label$7
	CALL eosio_assert($6, [5200])
	$8 = [0]
	$5 = *($2)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$6 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$8 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$8 = [0]
	
.LABEL $label$9
	CALL eosio_assert($8, [3168])
	CALL eosio_assert((int_64)($5 == 0), [5232])
	CALL eosio_assert(((int_64)$3 == (int_64)*($4 + [8])), [3232])
	CALL eosio_assert(((int_64)$5 <= (int_64))(*($4 + [16]) - *($4))), [4960])
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)($9 + [72])), [336])
	CALL eosio_assert(((int_64)*($9 + [72]) == (int_64)CALL $fimport$14()), [384])
	$7 = *($4 + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)$7), [656])
	$5 = ((int_64)*($4) + (int_64)$5)
	*($4) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [704])
	CALL eosio_assert(((int_64)*($4) < (int_64)4611686018427387904), [736])
	$5 = (uint_64)$7 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$5) == (int_64)(uint_64)*($4 + [8]) >> (uint_64)(int_64)8)), [448])
	*($9 + [168]) = (($9 + [112]) + [40])
	*($9 + [164]) = ($9 + [112])
	*($9 + [160]) = ($9 + [112])
	CALL $197(($9 + [160]), $4)
	CALL db_update_i64(*($4 + [44]), (int_64)0, ($9 + [112]), [40])
	$6 = ($9 + [88])
	if ( (uint_64)($5 <= *($6)) ){ goto $label$14 }
	*($6) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$14
	*(($6 = (($9 + [16]) + [8]))) = *(($2 + [8]))
	$5 = *($2)
	*(($9 + [12])) = *((($9 + [16]) + [12]))
	*(($9 + [8])) = *($6)
	*($9 + [16]) = $5
	*($9 + [4]) = *($9 + [20])
	*($9) = *($9 + [16])
	CALL _ZN12thedeosgames11add_balanceEyN5eosio5assetEy($0, $1, $9, $1)
	$2 = *($9 + [56])
	if ( ($2 == 0) ){ goto $label$15 }
	$8 = ($9 + [60])
	$6 = *($8)
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$17 }
	
.LOOP $label$18:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$19 }
	CALL $276($4)
	
.LABEL $label$19
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$18 }
	$6 = *(($9 + [56]))
	goto $label$16 
	
.LABEL $label$17
	$6 = $2
	
.LABEL $label$16
	*($8) = $2
	CALL $276($6)
	
.LABEL $label$15
	$2 = *($9 + [96])
	if ( ($2 == 0) ){ goto $label$20 }
	$8 = ($9 + [100])
	$6 = *($8)
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$22 }
	
.LOOP $label$23:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$24 }
	CALL $276($4)
	
.LABEL $label$24
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$23 }
	$6 = *(($9 + [96]))
	goto $label$21 
	
.LABEL $label$22
	$6 = $2
	
.LABEL $label$21
	*($8) = $2
	CALL $276($6)
	
.LABEL $label$20
	*([0] + [4]) = ($9 + [176])
}

void .FUNC _ZN12thedeosgames8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$20 = (*([0] + [4]) - [352])
	*([0] + [4]) = $20
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [2960])
	CALL require_auth($1)
	$6 = [0]
	$16 = *($3)
	if ( ((uint_64)((int_64)$16 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$14 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$12 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [3168])
	CALL eosio_assert(((int_64)$16 > (int_64)0), [3200])
	$12 = *($4)
	if ( ($12 & [1]) ){ goto $label$7 }
	$12 = uint_32($12 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$12 = *($4 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($12 <= [257]), [5008])
	$11 = *($3 + [8])
	if ( ((int_64)$11 != (int_64)1397703940) ){ goto $label$30 }
	$5 = *([0] + [16])
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1424]
	$15 = (int_64)0
	
.LOOP $label$31:
	if ( ((uint_64)$14 > (uint_64)(int_64)10) ){ goto $label$36 }
	$6 = *($12)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$35 }
	$6 = ($6 + [165])
	goto $label$34 
	
.LABEL $label$36
	$16 = (int_64)0
	if ( ((int_64)$14 == (int_64)11) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$35
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$34
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$33
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$32
	$12 = ($12 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$15 = ((int_64)$16 | (int_64)$15)
	$14 = ((int_64)$14 + (int_64)1)
	if ( ((int_64)$14 != (int_64)13) ){ goto $label$31 }
	if ( ((int_64)$5 == (int_64)$15) ){ goto $label$29 }
	
.LABEL $label$30
	if ( ((int_64)$11 != (int_64)82752230408708) ){ goto $label$37 }
	$5 = *([0] + [16])
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [2768]
	$15 = (int_64)0
	
.LOOP $label$38:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$39 }
	$6 = *($12)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$41 }
	$6 = ($6 + [165])
	goto $label$40 
	
.LABEL $label$41
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$40
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$39
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$38 }
	if ( ((int_64)$5 == (int_64)$15) ){ goto $label$29 }
	
.LABEL $label$37
	if ( ((int_64)$11 != (int_64)91625918253060) ){ goto $label$42 }
	$5 = *([0] + [16])
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [2752]
	$15 = (int_64)0
	
.LOOP $label$43:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$44 }
	$6 = *($12)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$46 }
	$6 = ($6 + [165])
	goto $label$45 
	
.LABEL $label$46
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$45
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$44
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$43 }
	if ( ((int_64)$5 == (int_64)$15) ){ goto $label$29 }
	
.LABEL $label$42
	if ( ((int_64)$11 != (int_64)5327107) ){ goto $label$47 }
	$5 = *([0] + [16])
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [2784]
	$15 = (int_64)0
	
.LOOP $label$48:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$49 }
	$6 = *($12)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$6 = ($6 + [165])
	goto $label$50 
	
.LABEL $label$51
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$49
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$48 }
	if ( ((int_64)$5 == (int_64)$15) ){ goto $label$29 }
	
.LABEL $label$47
	if ( ((int_64)$11 != (int_64)1413697284) ){ goto $label$52 }
	$5 = *([0] + [16])
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [2800]
	$15 = (int_64)0
	
.LOOP $label$53:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$54 }
	$6 = *($12)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$56 }
	$6 = ($6 + [165])
	goto $label$55 
	
.LABEL $label$56
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$55
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$54
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$53 }
	if ( ((int_64)$5 == (int_64)$15) ){ goto $label$29 }
	
.LABEL $label$52
	if ( ((int_64)$11 != (int_64)4994016260158475524) ){ goto $label$57 }
	$5 = *([0] + [16])
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [2816]
	$15 = (int_64)0
	
.LOOP $label$58:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$59 }
	$6 = *($12)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$61 }
	$6 = ($6 + [165])
	goto $label$60 
	
.LABEL $label$61
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$60
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$59
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$58 }
	if ( ((int_64)$5 == (int_64)$15) ){ goto $label$29 }
	
.LABEL $label$57
	if ( ((int_64)$11 != (int_64)293287707140) ){ goto $label$62 }
	$5 = *([0] + [16])
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [2832]
	$15 = (int_64)0
	
.LOOP $label$63:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$64 }
	$6 = *($12)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$66 }
	$6 = ($6 + [165])
	goto $label$65 
	
.LABEL $label$66
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$65
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$64
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$63 }
	if ( ((int_64)$5 == (int_64)$15) ){ goto $label$29 }
	
.LABEL $label$62
	if ( ((int_64)$11 != (int_64)18930585150899460) ){ goto $label$67 }
	$5 = *([0] + [16])
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [2848]
	$15 = (int_64)0
	
.LOOP $label$68:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$69 }
	$6 = *($12)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$71 }
	$6 = ($6 + [165])
	goto $label$70 
	
.LABEL $label$71
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$70
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$69
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$68 }
	if ( ((int_64)$5 == (int_64)$15) ){ goto $label$29 }
	
.LABEL $label$67
	if ( ((int_64)$11 != (int_64)71800348297988) ){ goto $label$28 }
	$5 = *([0] + [16])
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [2864]
	$15 = (int_64)0
	
.LOOP $label$72:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$73 }
	$6 = *($12)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$75 }
	$6 = ($6 + [165])
	goto $label$74 
	
.LABEL $label$75
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$74
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$73
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$72 }
	if ( ((int_64)$5 != (int_64)$15) ){ goto $label$28 }
	
.LABEL $label$29
	if ( ((int_64)*($0 + [176]) != (int_64)$2) ){ goto $label$23 }
	*(($20 + [160])) = [0]
	*($20 + [152]) = (int_64)0
	$12 = CALL strlen([5280])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$78 }
	*($20 + [152]) = ($12 << [1])
	$6 = (($20 + [152]) | [1])
	if ( $12 ){ goto $label$77 }
	goto $label$76 
	
.LABEL $label$78
	$18 = (($12 + [16]) & [-16])
	$6 = CALL $275($18)
	*($20 + [152]) = ($18 | [1])
	*($20 + [160]) = $6
	*($20 + [156]) = $12
	
.LABEL $label$77
	CALL memcpy($6, [5280], $12)
	
.LABEL $label$76
	*(($6 + $12)) = [0]
	$12 = *($4)
	if ( ($12 & [1]) ){ goto $label$80 }
	$6 = uint_32($12 >> [1])
	$17 = ($4 + [1])
	goto $label$79 
	
.LABEL $label$80
	$6 = *($4 + [4])
	$17 = *($4 + [8])
	
.LABEL $label$79
	$7 = (($20 + [152]) | [1])
	$19 = [0]
	$18 = [0]
	$10 = ($12 & [1])
	$12 = *($20 + [152])
	$12 = ( *($20 + [156]) ? uint_32($12 >> [1]) : $10 )
	if ( ($12 == 0) ){ goto $label$26 }
	if ( ((int_32)$6 < (int_32)$12) ){ goto $label$9 }
	$9 = ($17 + $6)
	$8 = ( *($20 + [160]) ? $7 : $10 )
	$10 = *($8)
	$18 = $17
	
.LOOP $label$81:
	$6 = (($6 - $12) + [1])
	if ( ($6 == 0) ){ goto $label$9 }
	$6 = CALL memchr($18, $10, $6)
	if ( ($6 == 0) ){ goto $label$9 }
	if ( (CALL memcmp($6, $8, $12) == 0) ){ goto $label$27 }
	$18 = ($6 + [1])
	$6 = ($9 - $18)
	if ( ((int_32)$6 >= (int_32)$12) ){ goto $label$81 }
	goto $label$9 
	
.LABEL $label$28
	$12 = [0]
	if ( ((int_64)$11 != (int_64)357812225028) ){ goto $label$82 }
	$5 = *([0] + [16])
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [1776]
	$15 = (int_64)0
	
.LOOP $label$83:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$84 }
	$6 = *($12)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$86 }
	$6 = ($6 + [165])
	goto $label$85 
	
.LABEL $label$86
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$85
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$84
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$83 }
	$12 = ((int_64)$5 == (int_64)$15)
	
.LABEL $label$82
	CALL eosio_assert($12, [5392])
	CALL eosio_assert(CALL $fimport$24($2), [5424])
	*(($20 + [184])) = [0]
	*($20 + [168]) = (int_64)-1
	*($20 + [176]) = (int_64)0
	*($20 + [152]) = *($0 + [176])
	$14 = (uint_64)$11 >> (uint_64)(int_64)8
	*($20 + [160]) = $14)
	CALL eosio_assert(((int_64)$11 == (int_64)*(CALL $132(($20 + [152]), $14, [1936]) + [8])), [3232])
	CALL require_recipient($1)
	CALL require_recipient($2)
	$6 = ($3 + [8])
	*(($12 = (($20 + [136]) + [8]))) = *($6)
	$14 = *($3)
	*((($20 + [104]) + [12])) = *((($20 + [136]) + [12]))
	*((($20 + [104]) + [8])) = *($12)
	*($20 + [136]) = $14
	*($20 + [108]) = *($20 + [140])
	*($20 + [104]) = *($20 + [136])
	CALL _ZN12thedeosgames11sub_balanceEyN5eosio5assetE($0, $1, ($20 + [104]))
	*(($12 = (($20 + [120]) + [8]))) = *($6)
	$14 = *($3)
	*((($20 + [88]) + [12])) = *((($20 + [120]) + [12]))
	*((($20 + [88]) + [8])) = *($12)
	*($20 + [120]) = $14
	*($20 + [92]) = *($20 + [124])
	*($20 + [88]) = *($20 + [120])
	CALL _ZN12thedeosgames11add_balanceEyN5eosio5assetEy($0, $2, ($20 + [88]), $1)
	$4 = *($20 + [176])
	if ( ($4 == 0) ){ goto $label$23 }
	$3 = ($20 + [180])
	$12 = *($3)
	if ( ((int_32)$12 == (int_32)$4) ){ goto $label$25 }
	
.LOOP $label$87:
	$12 = ($12 + [-24])
	$6 = *($12)
	*($12) = [0]
	if ( ($6 == 0) ){ goto $label$88 }
	CALL $276($6)
	
.LABEL $label$88
	if ( ((int_32)$4 != (int_32)$12) ){ goto $label$87 }
	$12 = *(($20 + [176]))
	goto $label$24 
	
.LABEL $label$27
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$9 }
	$18 = ($6 - $17)
	if ( ((int_32)$18 == (int_32)[-1]) ){ goto $label$9 }
	
.LABEL $label$26
	CALL $296(($20 + [336]), $4, [0], $18, $4)
	$12 = *($20 + [336])
	$6 = CALL strlen([5296])
	if ( ((int_32)$6 != (int_32)( *($20 + [340]) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$89 }
	$19 = (CALL $284(($20 + [336]), [0], [-1], [5296], $6) == 0)
	$12 = *($20 + [336])
	
.LABEL $label$89
	if ( (($12 & [1]) == 0) ){ goto $label$90 }
	CALL $276(*($20 + [344]))
	
.LABEL $label$90
	if ( ($19 == 0) ){ goto $label$96 }
	$6 = ($18 + [1])
	CALL $296(($20 + [320]), $4, $6, [8], $4)
	$12 = *($20 + [320])
	$10 = ($12 & [1])
	CALL prints_l(( *($20 + [328]) ? (($20 + [320]) | [1]) : $10 ), ( *($20 + [324]) ? uint_32($12 >> [1]) : $10 ))
	CALL prints([5313])
	if ( ((*($20 + [320]) & [1]) == 0) ){ goto $label$97 }
	CALL $276(*($20 + [328]))
	
.LABEL $label$97
	CALL $296(($20 + [336]), $4, $6, [8], $4)
	$10 = [0]
	$12 = *($20 + [336])
	$9 = CALL strlen([5328])
	if ( ((int_32)$9 != (int_32)( *($20 + [340]) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$98 }
	$10 = (CALL $284(($20 + [336]), [0], [-1], [5328], $9) == 0)
	$12 = *($20 + [336])
	
.LABEL $label$98
	if ( (($12 & [1]) == 0) ){ goto $label$99 }
	CALL $276(*($20 + [344]))
	
.LABEL $label$99
	$12 = ( ($18 + [10]) ? $6 : $10 )
	$6 = *($4)
	if ( ($6 & [1]) ){ goto $label$95 }
	$8 = ($4 + [1])
	$9 = uint_32($6 >> [1])
	if ( ((uint_32)$9 >= (uint_32)$12) ){ goto $label$94 }
	goto $label$18 
	
.LABEL $label$96
	$6 = [0]
	CALL $296(($20 + [336]), $4, [0], $18, $4)
	$12 = *($20 + [336])
	$10 = CALL strlen([5360])
	if ( ((int_32)$10 != (int_32)( *($20 + [340]) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$100 }
	$6 = (CALL $284(($20 + [336]), [0], [-1], [5360], $10) == 0)
	$12 = *($20 + [336])
	
.LABEL $label$100
	if ( (($12 & [1]) == 0) ){ goto $label$101 }
	CALL $276(*($20 + [344]))
	
.LABEL $label$101
	if ( ($6 == 0) ){ goto $label$93 }
	$12 = *($4)
	if ( ($12 & [1]) ){ goto $label$92 }
	$6 = uint_32($12 >> [1])
	$10 = ($4 + [1])
	goto $label$91 
	
.LABEL $label$95
	$8 = *($4 + [8])
	$9 = *($4 + [4])
	if ( ($9 <= $12) ){ goto $label$18 }
	
.LABEL $label$94
	$18 = $12
	$19 = ($6 & [1])
	$6 = *($20 + [152])
	$6 = ( *($20 + [156]) ? uint_32($6 >> [1]) : $19 )
	if ( ($6 == 0) ){ goto $label$19 }
	$9 = ($8 + $12)
	$17 = ($8 + $9)
	$18 = ($17 - $9)
	if ( ((int_32)$18 < (int_32)$6) ){ goto $label$18 }
	$7 = ( *(($20 + [160])) ? $7 : $19 )
	$19 = *($7)
	
.LOOP $label$102:
	$18 = (($18 - $6) + [1])
	if ( ($18 == 0) ){ goto $label$18 }
	$18 = CALL memchr($9, $19, $18)
	if ( ($18 == 0) ){ goto $label$18 }
	if ( (CALL memcmp($18, $7, $6) == 0) ){ goto $label$20 }
	$9 = ($18 + [1])
	$18 = ($17 - $9)
	if ( ((int_32)$18 >= (int_32)$6) ){ goto $label$102 }
	goto $label$18 
	
.LABEL $label$93
	$6 = [0]
	CALL $296(($20 + [336]), $4, [0], $18, $4)
	$12 = *($20 + [336])
	$10 = CALL strlen([5376])
	if ( ((int_32)$10 != (int_32)( *($20 + [340]) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$103 }
	$6 = (CALL $284(($20 + [336]), [0], [-1], [5376], $10) == 0)
	$12 = *($20 + [336])
	
.LABEL $label$103
	if ( (($12 & [1]) == 0) ){ goto $label$104 }
	CALL $276(*($20 + [344]))
	
.LABEL $label$104
	if ( ($6 == 0) ){ goto $label$9 }
	$12 = *($4)
	if ( ($12 & [1]) ){ goto $label$22 }
	$6 = uint_32($12 >> [1])
	$10 = ($4 + [1])
	goto $label$21 
	
.LABEL $label$92
	$6 = *($4 + [4])
	$10 = *($4 + [8])
	
.LABEL $label$91
	$13 = (int_64)0
	if ( ($6 <= $18) ){ goto $label$13 }
	$8 = ($12 & [1])
	$12 = *($20 + [152])
	$12 = ( *($20 + [156]) ? uint_32($12 >> [1]) : $8 )
	if ( ($12 == 0) ){ goto $label$14 }
	$18 = ($10 + $18)
	$9 = ($10 + $6)
	$6 = ($9 - $18)
	if ( ((int_32)$6 < (int_32)$12) ){ goto $label$13 }
	$17 = ( *((($20 + [152]) + [8])) ? $7 : $8 )
	$8 = *($17)
	
.LOOP $label$105:
	$6 = (($6 - $12) + [1])
	if ( ($6 == 0) ){ goto $label$13 }
	$6 = CALL memchr($18, $8, $6)
	if ( ($6 == 0) ){ goto $label$13 }
	if ( (CALL memcmp($6, $17, $12) == 0) ){ goto $label$15 }
	$18 = ($6 + [1])
	$6 = ($9 - $18)
	if ( ((int_32)$6 >= (int_32)$12) ){ goto $label$105 }
	goto $label$13 
	
.LABEL $label$25
	$12 = $4
	
.LABEL $label$24
	*($3) = $4
	CALL $276($12)
	
.LABEL $label$23
	*([0] + [4]) = ($20 + [352])
	return 
	
.LABEL $label$22
	$6 = *($4 + [4])
	$10 = *($4 + [8])
	
.LABEL $label$21
	if ( ($6 <= $18) ){ goto $label$10 }
	$8 = ($12 & [1])
	$12 = *($20 + [152])
	$12 = ( *($20 + [156]) ? uint_32($12 >> [1]) : $8 )
	if ( ($12 == 0) ){ goto $label$11 }
	$18 = ($10 + $18)
	$9 = ($10 + $6)
	$6 = ($9 - $18)
	if ( ((int_32)$6 < (int_32)$12) ){ goto $label$10 }
	$17 = ( *((($20 + [152]) + [8])) ? $7 : $8 )
	$8 = *($17)
	
.LOOP $label$106:
	$6 = (($6 - $12) + [1])
	if ( ($6 == 0) ){ goto $label$10 }
	$6 = CALL memchr($18, $8, $6)
	if ( ($6 == 0) ){ goto $label$10 }
	if ( (CALL memcmp($6, $17, $12) == 0) ){ goto $label$12 }
	$18 = ($6 + [1])
	$6 = ($9 - $18)
	if ( ((int_32)$6 >= (int_32)$12) ){ goto $label$106 }
	goto $label$10 
	
.LABEL $label$20
	if ( ((int_32)$18 == (int_32)$17) ){ goto $label$18 }
	$18 = ($18 - $8)
	
.LABEL $label$19
	$9 = [0]
	$8 = ($20 + [336])
	$6 = $18
	if ( ((int_32)$18 != (int_32)[-1]) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$18
	$8 = ($20 + [336])
	
.LABEL $label$17
	$9 = [1]
	$6 = *($4)
	if ( ($6 & [1]) ){ goto $label$108 }
	$9 = [1]
	$6 = uint_32($6 >> [1])
	goto $label$107 
	
.LABEL $label$108
	$6 = *($4 + [4])
	
.LABEL $label$107
	$18 = [-1]
	
.LABEL $label$16
	CALL $296(($20 + [336]), $4, $12, ($6 - $12), $4)
	CALL $295(($20 + [304]), ($20 + [336]))
	$12 = *($20 + [304])
	$6 = ($12 & [1])
	CALL prints_l(( *($20 + [312]) ? (($20 + [304]) | [1]) : $6 ), ( *($20 + [308]) ? uint_32($12 >> [1]) : $6 ))
	CALL prints([5313])
	if ( ((*($20 + [304]) & [1]) == 0) ){ goto $label$109 }
	CALL $276(*($20 + [312]))
	
.LABEL $label$109
	$17 = CALL _ZNSt3__15stoulERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($20 + [336]), [0], [10])
	CALL $295(($20 + [288]), ($20 + [336]))
	$12 = [5344]
	$6 = *([5344])
	if ( ($6 == 0) ){ goto $label$110 }
	
.LOOP $label$112:
	if ( ((int_32)$6 == (int_32)[37]) ){ goto $label$111 }
	CALL prints_l($12, [1])
	$12 = ($12 + [1])
	$6 = *($12)
	if ( $6 ){ goto $label$112 }
	goto $label$110 
	
.LABEL $label$111
	$6 = *($20 + [288])
	$19 = ($6 & [1])
	CALL prints_l(( *($20 + [296]) ? (($20 + [288]) | [1]) : $19 ), ( *($20 + [292]) ? uint_32($6 >> [1]) : $19 ))
	CALL prints(($12 + [1]))
	
.LABEL $label$110
	if ( ((*($20 + [288]) & [1]) == 0) ){ goto $label$113 }
	CALL $276(*($20 + [296]))
	
.LABEL $label$113
	$15 = (int_64)0
	if ( $9 ){ goto $label$114 }
	$12 = ($18 + [1])
	$6 = *($4)
	if ( ($6 & [1]) ){ goto $label$116 }
	$9 = uint_32($6 >> [1])
	goto $label$115 
	
.LABEL $label$116
	$9 = *($4 + [4])
	
.LABEL $label$115
	$6 = [-1]
	CALL $296(($20 + [272]), $4, $12, ($9 + ((int_32)$18 ^ (int_32)[-1])), $4)
	$9 = (*($20 + [272]) & [1])
	$19 = *($20 + [280])
	$12 = ( $19 ? (($20 + [272]) | [1]) : $9 )
	
.LOOP $label$117:
	$4 = ($12 + $6)
	$18 = ($6 + [1])
	$6 = $18
	if ( *(($4 + [1])) ){ goto $label$117 }
	$11 = (CASTING uint_64)(uint_32 $18)
	$14 = (int_64)0
	$16 = (int_64)59
	$15 = (int_64)0
	
.LOOP $label$118:
	$13 = (int_64)0
	if ( ((uint_64)$14 >= (uint_64)$11) ){ goto $label$119 }
	$6 = *($12)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$121 }
	$6 = ($6 + [165])
	goto $label$120 
	
.LABEL $label$121
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$120
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$119
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$123 }
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	goto $label$122 
	
.LABEL $label$123
	$13 = ((int_64)$13 & (int_64)15)
	
.LABEL $label$122
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$118 }
	if ( ($9 == 0) ){ goto $label$114 }
	CALL $276($19)
	
.LABEL $label$114
	$12 = ($3 + [8])
	if ( ((int_64)*($12) != (int_64)1397703940) ){ goto $label$125 }
	$14 = *($12)
	*((($20 + [256]) + [8])) = $14
	$16 = *($3)
	*((($20 + [8]) + [8])) = $14
	*($20 + [256]) = $16
	*($20 + [12]) = *($20 + [260])
	*($20 + [8]) = *($20 + [256])
	CALL _ZN12thedeosgames7diceeosEyN5eosio5assetEmym($0, $1, ($20 + [8]), $17, $15, $10)
	goto $label$124 
	
.LABEL $label$125
	$14 = *($12)
	*((($20 + [240]) + [8])) = $14
	$16 = *($3)
	*((($20 + [24]) + [8])) = $14
	*($20 + [240]) = $16
	*($20 + [28]) = *($20 + [244])
	*($20 + [24]) = *($20 + [240])
	CALL _ZN12thedeosgames5dicecEyN5eosio5assetEmym($0, $1, ($20 + [24]), $17, $15, $10)
	
.LABEL $label$124
	if ( ((*($8) & [1]) == 0) ){ goto $label$9 }
	CALL $276(*($20 + [344]))
	goto $label$9 
	
.LABEL $label$15
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$13 }
	$18 = ($6 - $10)
	
.LABEL $label$14
	if ( ((int_32)$18 == (int_32)[-1]) ){ goto $label$13 }
	$12 = ($18 + [1])
	$6 = *($4)
	if ( ($6 & [1]) ){ goto $label$127 }
	$10 = uint_32($6 >> [1])
	goto $label$126 
	
.LABEL $label$127
	$10 = *($4 + [4])
	
.LABEL $label$126
	$6 = [-1]
	CALL $296(($20 + [336]), $4, $12, ($10 + ((int_32)$18 ^ (int_32)[-1])), $4)
	$10 = (*($20 + [336]) & [1])
	$9 = *($20 + [344])
	$12 = ( $9 ? (($20 + [336]) | [1]) : $10 )
	
.LOOP $label$128:
	$4 = ($12 + $6)
	$18 = ($6 + [1])
	$6 = $18
	if ( *(($4 + [1])) ){ goto $label$128 }
	$11 = (CASTING uint_64)(uint_32 $18)
	$14 = (int_64)0
	$16 = (int_64)59
	$13 = (int_64)0
	
.LOOP $label$129:
	$15 = (int_64)0
	if ( ((uint_64)$14 >= (uint_64)$11) ){ goto $label$130 }
	$6 = *($12)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$132 }
	$6 = ($6 + [165])
	goto $label$131 
	
.LABEL $label$132
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$131
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$130
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$134 }
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	goto $label$133 
	
.LABEL $label$134
	$15 = ((int_64)$15 & (int_64)15)
	
.LABEL $label$133
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$13 = ((int_64)$15 | (int_64)$13)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$129 }
	if ( ($10 == 0) ){ goto $label$13 }
	CALL $276($9)
	
.LABEL $label$13
	if ( ((int_64)*(($3 + [8])) != (int_64)1397703940) ){ goto $label$135 }
	$14 = *(($3 + [8]))
	*((($20 + [224]) + [8])) = $14
	$16 = *($3)
	*((($20 + [40]) + [8])) = $14
	*($20 + [224]) = $16
	*($20 + [44]) = *($20 + [228])
	*($20 + [40]) = *($20 + [224])
	CALL _ZN12thedeosgames8slotseosEyN5eosio5assetEy($0, $1, ($20 + [40]), $13)
	goto $label$9 
	
.LABEL $label$135
	$14 = *(($3 + [8]))
	*((($20 + [208]) + [8])) = $14
	$16 = *($3)
	*((($20 + [56]) + [8])) = $14
	*($20 + [208]) = $16
	*($20 + [60]) = *($20 + [212])
	*($20 + [56]) = *($20 + [208])
	CALL _ZN12thedeosgames7slotscmEyN5eosio5assetEy($0, $1, ($20 + [56]), $13)
	goto $label$9 
	
.LABEL $label$12
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$10 }
	$18 = ($6 - $10)
	
.LABEL $label$11
	if ( ((int_32)$18 == (int_32)[-1]) ){ goto $label$10 }
	$12 = ($18 + [1])
	$6 = *($4)
	if ( ($6 & [1]) ){ goto $label$137 }
	$6 = uint_32($6 >> [1])
	goto $label$136 
	
.LABEL $label$137
	$6 = *($4 + [4])
	
.LABEL $label$136
	CALL $296(($20 + [336]), $4, $12, ($6 + ((int_32)$18 ^ (int_32)[-1])), $4)
	if ( ((*($20 + [336]) & [1]) == 0) ){ goto $label$10 }
	CALL $276(*($20 + [344]))
	
.LABEL $label$10
	if ( ((int_64)*(($3 + [8])) != (int_64)1397703940) ){ goto $label$9 }
	$14 = *(($3 + [8]))
	*((($20 + [192]) + [8])) = $14
	$16 = *($3)
	*((($20 + [72]) + [8])) = $14
	*($20 + [192]) = $16
	*($20 + [76]) = *($20 + [196])
	*($20 + [72]) = *($20 + [192])
	CALL _ZN12thedeosgames10pokerstartEyN5eosio5assetEy($0, $1, ($20 + [72]), $14)
	
.LABEL $label$9
	if ( ((*($20 + [152]) & [1]) == 0) ){ goto $label$138 }
	CALL $276(*(($20 + [160])))
	
.LABEL $label$138
	*([0] + [4]) = ($20 + [352])
	return (unreachable)
	
.LABEL $label$8
	CALL $277(($20 + [152]))
}

int_32 .FUNC $206 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $207 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN12thedeosgames5stakeEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [240])
	*([0] + [4]) = $13
	$4 = *($2 + [8])
	$6 = [0]
	$9 = [0]
	$3 = *($2)
	if ( ((uint_64)((int_64)$3 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$10 = (uint_64)$4 >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$9 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [3168])
	CALL eosio_assert(((int_64)$3 > (int_64)0), [3200])
	*((($13 + [128]) + [32])) = [0]
	$5 = (uint_64)$4 >> (uint_64)(int_64)8
	*($13 + [136]) = $5)
	*($13 + [144]) = (int_64)-1
	*($13 + [152]) = (int_64)0
	*($13 + [128]) = *($0 + [176])
	CALL eosio_assert(((int_64)$4 == (int_64)*(CALL $132(($13 + [128]), $5, [1936]) + [8])), [3232])
	CALL require_auth($1)
	*((($13 + [88]) + [32])) = [0]
	*($13 + [96]) = $5
	*($13 + [104]) = (int_64)-1
	*($13 + [112]) = (int_64)0
	$10 = *($0 + [176])
	*($13 + [88]) = $10
	$11 = CALL db_find_i64($10, $5, (int_64)-4165147408352673792, $5)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$6 }
	$6 = CALL $205(($13 + [88]), $11)
	CALL eosio_assert(((int_32)*($6 + [28]) == (int_32)($13 + [88])), [176])
	
.LABEL $label$6
	$11 = [0]
	$9 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($9, [5552])
	CALL eosio_assert((*($6 + [24]) == 0), [3296])
	CALL eosio_assert($9, [288])
	CALL eosio_assert(((int_32)*($6 + [28]) == (int_32)($13 + [88])), [336])
	CALL eosio_assert(((int_64)*($13 + [88]) == (int_64)CALL $fimport$14()), [384])
	$10 = *($6 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$10), [656])
	$3 = ((int_64)*($6) + (int_64)$3)
	*($6) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [704])
	CALL eosio_assert(((int_64)*($6) < (int_64)4611686018427387904), [736])
	*($6 + [16]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$10) == (int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8)), [448])
	CALL eosio_assert([1], [640])
	CALL memcpy(($13 + [176]), $6, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($13 + [176]) | [8]), ($6 + [8]), [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($13 + [176]) + [16]), ($6 + [16]), [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($13 + [176]) + [24]), ($6 + [24]), [4])
	CALL db_update_i64(*($6 + [32]), (int_64)0, ($13 + [176]), [28])
	$6 = (($13 + [88]) + [16])
	if ( (uint_64)($10 <= *($6)) ){ goto $label$7 }
	*($6) = ((int_64)$10 + (int_64)1)
	
.LABEL $label$7
	*(($13 + [80])) = [0]
	*($13 + [64]) = (int_64)-1
	*($13 + [72]) = (int_64)0
	$10 = *(($0 + [176]))
	*($13 + [48]) = $10
	*($13 + [56]) = $1
	$6 = CALL db_find_i64($10, $1, (int_64)3607749779137757184, $5)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$8 }
	$11 = CALL $13(($13 + [48]), $6)
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)($13 + [48])), [176])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [3328])
	$3 = *($11 + [8])
	$7 = *($11)
	CALL eosio_assert([1], [576])
	$10 = (int_64)1397704004
	$12 = (int_64)357812225028
	$11 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$6 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$6 = [0]
	
.LABEL $label$9
	CALL eosio_assert($6, [32])
	$11 = [0]
	*(($13 + [40])) = [0]
	*($13 + [24]) = (int_64)-1
	$10 = (int_64)0
	*($13 + [32]) = (int_64)0
	$8 = *(($0 + [176]))
	*($13 + [8]) = $8
	*($13 + [16]) = $1
	$6 = CALL db_find_i64($8, $1, (int_64)5300888951328866304, $5)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$14 }
	$11 = CALL $36(($13 + [8]), $6)
	CALL eosio_assert(((int_32)*($11 + [40]) == (int_32)($13 + [8])), [176])
	$12 = *($11 + [8])
	$10 = *($11)
	
.LABEL $label$14
	CALL eosio_assert(((int_64)$12 == (int_64)$3), [912])
	$10 = (int_64)
	CALL eosio_assert(((int_64)$10($7 - $10)) > (int_64)-4611686018427387904), [960])
	CALL eosio_assert(((int_64)$10 < (int_64)4611686018427387904), [992])
	CALL eosio_assert(((int_64)$3 == (int_64)$4), [3456])
	$5 = *($2)
	CALL eosio_assert(((int_64)$10 >= (int_64)$5), [5584])
	if ( ($11 == 0) ){ goto $label$18 }
	CALL eosio_assert([1], [288])
	CALL eosio_assert(((int_32)*($11 + [40]) == (int_32)($13 + [8])), [336])
	CALL eosio_assert(((int_64)*($13 + [8]) == (int_64)CALL $fimport$14()), [384])
	$10 = *($11 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$10), [656])
	$5 = ((int_64)*($11) + (int_64)$5)
	*($11) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [704])
	CALL eosio_assert(((int_64)*($11) < (int_64)4611686018427387904), [736])
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$10) == (int_64)(uint_64)*($11 + [8]) >> (uint_64)(int_64)8)), [448])
	*($13 + [232]) = (($13 + [176]) + [40])
	*($13 + [228]) = ($13 + [176])
	*($13 + [224]) = ($13 + [176])
	CALL $37(($13 + [224]), $11)
	CALL db_update_i64(*($11 + [44]), (int_64)0, ($13 + [176]), [40])
	$11 = ($13 + [24])
	if ( (uint_64)($10 <= *($11)) ){ goto $label$17 }
	*($11) = ((int_64)$10 + (int_64)1)
	$0 = *($13 + [32])
	if ( $0 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$5 = *(($0 + [176]))
	CALL eosio_assert(((int_64)*($13 + [8]) == (int_64)CALL $fimport$14()), [512])
	$11 = CALL $275([56])
	$0 = CALL $38($11)
	*($11 + [40]) = ($13 + [8])
	*(($6 = ($11 + [8]))) = *(($2 + [8]))
	*($11) = *($2)
	*($13 + [232]) = (($13 + [176]) + [40])
	*($13 + [228]) = ($13 + [176])
	*($13 + [224]) = ($13 + [176])
	CALL $37(($13 + [224]), $0)
	$10 = (uint_64)*($6) >> (uint_64)(int_64)8
	$0 = CALL db_store_i64(*((($13 + [8]) + [8])), (int_64)5300888951328866304, $5, $10), ($13 + [176]), [40]
	*($11 + [44]) = $0)
	$2 = ($13 + [24])
	if ( (uint_64)($10 <= *($2)) ){ goto $label$19 }
	*($2) = ((int_64)$10 + (int_64)1)
	
.LABEL $label$19
	*($13 + [224]) = $11
	$10 = (uint_64)*($6) >> (uint_64)(int_64)8
	*($13 + [176]) = $10)
	*($13 + [172]) = $0
	$2 = ($13 + [36])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($13 + [40]))) ){ goto $label$21 }
	*($6 + [8]) = $10
	*($6 + [16]) = $0
	*($13 + [224]) = [0]
	*($6) = $11
	*($2) = ($6 + [24])
	goto $label$20 
	
.LABEL $label$21
	CALL $39(($13 + [32]), ($13 + [224]), ($13 + [176]), ($13 + [172]))
	
.LABEL $label$20
	$11 = *($13 + [224])
	*($13 + [224]) = [0]
	if ( ($11 == 0) ){ goto $label$17 }
	CALL $276($11)
	
.LABEL $label$17
	$0 = *($13 + [32])
	if ( ($0 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$2 = ($13 + [36])
	$11 = *($2)
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$23 }
	
.LOOP $label$24:
	$11 = ($11 + [-24])
	$6 = *($11)
	*($11) = [0]
	if ( ($6 == 0) ){ goto $label$25 }
	CALL $276($6)
	
.LABEL $label$25
	if ( ((int_32)$0 != (int_32)$11) ){ goto $label$24 }
	$11 = *(($13 + [32]))
	goto $label$22 
	
.LABEL $label$23
	$11 = $0
	
.LABEL $label$22
	*($2) = $0
	CALL $276($11)
	
.LABEL $label$15
	$0 = *($13 + [72])
	if ( ($0 == 0) ){ goto $label$26 }
	$2 = ($13 + [76])
	$11 = *($2)
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$28 }
	
.LOOP $label$29:
	$11 = ($11 + [-24])
	$6 = *($11)
	*($11) = [0]
	if ( ($6 == 0) ){ goto $label$30 }
	CALL $276($6)
	
.LABEL $label$30
	if ( ((int_32)$0 != (int_32)$11) ){ goto $label$29 }
	$11 = *(($13 + [72]))
	goto $label$27 
	
.LABEL $label$28
	$11 = $0
	
.LABEL $label$27
	*($2) = $0
	CALL $276($11)
	
.LABEL $label$26
	$0 = *($13 + [112])
	if ( ($0 == 0) ){ goto $label$31 }
	$2 = ($13 + [116])
	$11 = *($2)
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$33 }
	
.LOOP $label$34:
	$11 = ($11 + [-24])
	$6 = *($11)
	*($11) = [0]
	if ( ($6 == 0) ){ goto $label$35 }
	CALL $276($6)
	
.LABEL $label$35
	if ( ((int_32)$0 != (int_32)$11) ){ goto $label$34 }
	$11 = *(($13 + [112]))
	goto $label$32 
	
.LABEL $label$33
	$11 = $0
	
.LABEL $label$32
	*($2) = $0
	CALL $276($11)
	
.LABEL $label$31
	$0 = *($13 + [152])
	if ( ($0 == 0) ){ goto $label$36 }
	$2 = ($13 + [156])
	$11 = *($2)
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$38 }
	
.LOOP $label$39:
	$11 = ($11 + [-24])
	$6 = *($11)
	*($11) = [0]
	if ( ($6 == 0) ){ goto $label$40 }
	CALL $276($6)
	
.LABEL $label$40
	if ( ((int_32)$0 != (int_32)$11) ){ goto $label$39 }
	$11 = *(($13 + [152]))
	goto $label$37 
	
.LABEL $label$38
	$11 = $0
	
.LABEL $label$37
	*($2) = $0
	CALL $276($11)
	
.LABEL $label$36
	*([0] + [4]) = ($13 + [240])
}

int_32 .FUNC $205 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [768])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $275([40])) + [8]) = (int_64)1398362884
	*($4) = (int_64)0
	CALL eosio_assert([1], [576])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [32])
	*($4 + [28]) = $0
	CALL $206(($8 + [32]), $4)
	*($4 + [32]) = $1
	*($8 + [24]) = $4
	$7 = (uint_64)*(($4 + [8])) >> (uint_64)(int_64)8
	*($8 + [16]) = $7)
	$6 = *($4 + [32])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $207($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $276($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC $282 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $283($0, $1, $2, CALL $328($2))
}

void .FUNC $181 (int_64 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [144])
	*([0] + [4]) = $4
	*((($3 = CALL $275([16])) + [12])) = *(($1 + [12]))
	*(($3 + [8])) = *(($1 + [8]))
	*(($3 + [4])) = *(($1 + [4]))
	*($3) = *($1)
	*($4 + [128]) = $3
	$3 = ($3 + [16])
	*($4 + [136]) = $3
	*($4 + [132]) = $3
	*($4) = *($2)
	*($4 + [8]) = *($2 + [8])
	*(($4 + [24])) = *(($2 + [24]))
	*($4 + [16]) = *($2 + [16])
	$3 = ($2 + [40])
	*(($4 + [40])) = *($3)
	*($4 + [32]) = *($2 + [32 align=4])
	*($2 + [32]) = [0]
	*(($2 + [36])) = [0]
	*($3) = [0]
	*($4 + [44]) = *($2 + [44])
	*(($4 + [56])) = *(($2 + [56]))
	*($4 + [48]) = *($2 + [48])
	*($4 + [64]) = *($2 + [64])
	$3 = ($2 + [76])
	*(($1 = ($4 + [76]))) = *($3)
	*($4 + [68 align=4]) = *($2 + [68 align=4])
	*($2 + [68]) = [0]
	*(($2 + [72])) = [0]
	*($3) = [0]
	*(($4 + [88])) = *(($2 + [88]))
	*($4 + [80]) = *($2 + [80])
	*(($4 + [104])) = *(($2 + [104]))
	*($4 + [96]) = *($2 + [96])
	*(($4 + [120])) = *(($2 + [120]))
	*($4 + [112]) = *($2 + [112])
	CALL $182($0, (int_64)4229593440041566208, ($4 + [128]), $4)
	if ( ((*($4 + [68]) & [1]) == 0) ){ goto $label$1 }
	CALL $276(*($1))
	
.LABEL $label$1
	if ( ((*(($4 + [32])) & [1]) == 0) ){ goto $label$2 }
	CALL $276(*(($4 + [40])))
	
.LABEL $label$2
	$2 = *($4 + [128])
	if ( ($2 == 0) ){ goto $label$3 }
	*($4 + [132]) = $2
	CALL $276($2)
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [144])
}

int_32 .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [20]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [40]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [44]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [48]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [52]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($2 + [4]), ($3 + [80]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [640])
	CALL memcpy(*($2 + [4]), ($3 + [88]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($2 + [4]), ($0 + [96]), [8])
	$3 = (*($2 + [4]) + [8])
	*($2 + [4]) = $3
	CALL eosio_assert(((int_32)(*($2 + [8]) - $3) > (int_32)[7]), [640])
	CALL memcpy(*($2 + [4]), ($0 + [104]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($2 + [4]), ($0 + [112]), [8])
	$3 = (*($2 + [4]) + [8])
	*($2 + [4]) = $3
	CALL eosio_assert(((int_32)(*($2 + [8]) - $3) > (int_32)[7]), [640])
	CALL memcpy(*($2 + [4]), ($0 + [120]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($2 + [4]), ($0 + [128]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[31]), [640])
	CALL memcpy(*($2 + [4]), ($0 + [144]), [32])
	*($2 + [4]) = (*($2 + [4]) + [32])
}

void .FUNC $286 (int_32 $0)
{
	int_32 $1
	$1 = (*([0] + [4]) - [16])
	*([0] + [4]) = $1
	CALL $288($1, $0, [14416])
	CALL abort()
	(unreachable)
}

void .FUNC $287 (int_32 $0)
{
	int_32 $1
	$1 = (*([0] + [4]) - [16])
	*([0] + [4]) = $1
	CALL $288($1, $0, [14400])
	CALL abort()
	(unreachable)
}

int_32 .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [44]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [52]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC _ZN12thedeosgames11sub_balanceEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	*([0] + [4]) = $8
	*(($8 + [40])) = [0]
	*($8 + [16]) = $1
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	*($8 + [8]) = *($0 + [176])
	$4 = *($2)
	$3 = *($2 + [8])
	$7 = CALL $16(($8 + [8]), (uint_64)$3 >> (uint_64)(int_64)8), [816]
	CALL eosio_assert(((int_64)*($7)) >= (int_64)$4), [848])
	$5 = CALL _ZN12thedeosgames9getstakedEy($0, $1)
	CALL eosio_assert(((uint_64)*($7) >= (uint_64)((int_64)$5 + (int_64)$4)), [880])
	if ( ((int_64)$4 != (int_64)*($7)) ){ goto $label$3 }
	CALL $18(($8 + [8]), $7)
	$0 = *($8 + [32])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)($8 + [8])), [336])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$14()), [384])
	$5 = *($7 + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)$5), [912])
	$4 = (int_64)
	*($7) = $4(*($7) - $4))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [960])
	CALL eosio_assert(((int_64)*($7) < (int_64)4611686018427387904), [992])
	$4 = (uint_64)$5 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$4) == (int_64)(uint_64)*($7 + [8]) >> (uint_64)(int_64)8)), [448])
	CALL eosio_assert([1], [640])
	CALL memcpy(($8 + [48]), $7, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($8 + [48]) | [8]), ($7 + [8]), [8])
	CALL db_update_i64(*($7 + [20]), $1, ($8 + [48]), [16])
	$7 = (($8 + [8]) + [16])
	if ( (uint_64)($4 <= *($7)) ){ goto $label$4 }
	*($7) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$4
	$0 = *($8 + [32])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($8 + [36])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$2 = *($7)
	*($7) = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	CALL $276($2)
	
.LABEL $label$8
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$7 }
	$7 = *(($8 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$7 = $0
	
.LABEL $label$5
	*($6) = $0
	CALL $276($7)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [64])
}

void .FUNC $123 (int_64 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [192])
	*([0] + [4]) = $4
	*((($3 = CALL $275([16])) + [12])) = *(($1 + [12]))
	*(($3 + [8])) = *(($1 + [8]))
	*(($3 + [4])) = *(($1 + [4]))
	*($3) = *($1)
	*($4 + [176]) = $3
	$3 = ($3 + [16])
	*($4 + [184]) = $3
	*($4 + [180]) = $3
	*($4) = *($2)
	*($4 + [8]) = *($2 + [8])
	*(($4 + [24])) = *(($2 + [24]))
	*($4 + [16]) = *($2 + [16])
	$3 = ($2 + [40])
	*(($4 + [40])) = *($3)
	*($4 + [32]) = *($2 + [32 align=4])
	*($2 + [32]) = [0]
	*(($2 + [36])) = [0]
	*($3) = [0]
	*($4 + [44]) = *($2 + [44])
	*(($4 + [56])) = *(($2 + [56]))
	*($4 + [48]) = *($2 + [48])
	*($4 + [64]) = *($2 + [64])
	$3 = ($2 + [76])
	*(($1 = ($4 + [76]))) = *($3)
	*($4 + [68 align=4]) = *($2 + [68 align=4])
	*($2 + [68]) = [0]
	*(($2 + [72])) = [0]
	*($3) = [0]
	*(($4 + [88])) = *(($2 + [88]))
	*($4 + [80]) = *($2 + [80])
	*(($4 + [104])) = *(($2 + [104]))
	*($4 + [96]) = *($2 + [96])
	*(($4 + [120])) = *(($2 + [120]))
	*($4 + [112]) = *($2 + [112])
	*($4 + [128]) = *($2 + [128])
	*(($4 + [168])) = *(($2 + [168]))
	*(($4 + [160])) = *(($2 + [160]))
	*(($4 + [152])) = *(($2 + [152]))
	*($4 + [144]) = *($2 + [144])
	CALL $124($0, (int_64)4229630333938963456, ($4 + [176]), $4)
	if ( ((*($4 + [68]) & [1]) == 0) ){ goto $label$1 }
	CALL $276(*($1))
	
.LABEL $label$1
	if ( ((*(($4 + [32])) & [1]) == 0) ){ goto $label$2 }
	CALL $276(*(($4 + [40])))
	
.LABEL $label$2
	$2 = *($4 + [176])
	if ( ($2 == 0) ){ goto $label$3 }
	*($4 + [180]) = $2
	CALL $276($2)
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [192])
}

int_32 .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [768])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $275([72])) + [8]) = (int_64)0
	*($6) = (int_64)0
	*($6 + [16]) = (int_64)64424509440000
	*($6 + [24]) = [5000]
	*($6 + [32]) = (int_64)50000
	*($6 + [40]) = [1]
	*($6 + [44]) = [0]
	*($6 + [48]) = [2000]
	*($6 + [52]) = [100000]
	*($6 + [56]) = $0
	CALL $129(($8 + [32]), $6)
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [60])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $130(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $276($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN12thedeosgames10dicerevealEym (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_32 $14
	float_32 $15
	int_64 $16
	int_32 $17
	float_64 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_64 $24
	int_32 $25
	$25 = (*([0] + [4]) - [480])
	*([0] + [4]) = $25
	CALL require_auth(*($0 + [176]))
	$3 = [0]
	$19 = CALL db_lowerbound_i64(*($0 + [2088]), *(($0 + [2096])), (int_64)6138558357033713664, (int_64)0)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $122(($0 + [2088]), $19)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [2880])
	CALL eosio_assert((*($3 + [16]) == 0), [144])
	CALL eosio_assert(($2 <= [100]), [2912])
	$6 = *(($0 + [1832]))
	$5 = *(($0 + [1836]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	$19 = ($5 + [-24])
	$14 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($19)) == (int_64)$1) ){ goto $label$2 }
	$5 = $19
	$12 = ($19 + [-24])
	$19 = $12
	if ( ((int_32)($12 + $14) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$4 = ($0 + [1808])
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	$5 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [88]) == (int_32)$4), [176])
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	$19 = CALL db_find_i64(*(($0 + [1808])), *(($0 + [1816])), (int_64)5445034581344550912, $1)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $99($4, $19)
	CALL eosio_assert(((int_32)*($5 + [88]) == (int_32)$4), [176])
	
.LABEL $label$4
	$6 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($6, [1600])
	CALL eosio_assert(((int_64)*($5 + [32]) != (int_64)*(($0 + [176]))), [2960])
	$7 = *(($5 + [16]))
	$8 = *($5 + [32])
	$19 = *($5 + [24])
	$15 = CALL floorf((DEMOTE float_32)(float_64 ((float_64)((float_64)(float_64)100 / (float_64)(CASTING float_64)(uint_32 ( $19 ? ([99] - $19) : ((int_32)*($5 + [28]) == (int_32)[1]) ))) * (float_64)(float_64)100)))
	$21 = *($5 + [8])
	*(($25 + [424])) = [0]
	*($25 + [416]) = (int_64)0
	$10 = (Rounds 0)(((float_32)((float_32)$15 / (float_32)(float_32)100) * (float_32)(CASTING float_32)(int_64 $21)))
	$19 = CALL strlen([1664])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$15 }
	*($25 + [416]) = ($19 << [1])
	$12 = (($25 + [416]) | [1])
	if ( $19 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$14 = (($19 + [16]) & [-16])
	$12 = CALL $275($14)
	*($25 + [416]) = ($14 | [1])
	*($25 + [424]) = $12
	*($25 + [420]) = $19
	
.LABEL $label$14
	CALL memcpy($12, [1664], $19)
	
.LABEL $label$13
	*(($12 + $19)) = [0]
	$21 = *(($5 + [8]))
	CALL eosio_assert((uint_64)((int_64))((int_64)4611686018427387903 - $21) <= (int_64)9223372036854775807), [576])
	$9 = (int_64))((int_64)0 - $21)
	$19 = [0]
	$24 = (uint_64)$7 >> (uint_64)(int_64)8
	$21 = $24)
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $21) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$21 = (uint_64)$21 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$21) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$21 = (uint_64)$21 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$21) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$12 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$12 = [0]
	
.LABEL $label$16
	CALL eosio_assert($12, [32])
	$19 = *(($5 + [24]))
	if ( ((uint_32)$19 <= (uint_32)$2) ){ goto $label$23 }
	if ( ((int_32)*(($5 + [28])) == (int_32)[1]) ){ goto $label$22 }
	
.LABEL $label$23
	if ( ((uint_32)$19 >= (uint_32)$2) ){ goto $label$21 }
	if ( *(($5 + [28])) ){ goto $label$21 }
	
.LABEL $label$22
	$19 = *($3 + [20])
	if ( ($19 == 0) ){ goto $label$24 }
	$10 = (int_64))($10 - (CASTING int_64)(int_32 (CASTING int_32)(float_64 ((float_64)(CASTING float_64)(uint_64 $10) * (float_64)((float_64)(CASTING float_64)(uint_32 $19) / (float_64)(CASTING float_64)(uint_32 ((int_32)*($0 + [172]) * (int_32)[100])))))))
	
.LABEL $label$24
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$21 = (int_64)5459781
	$19 = [0]
	
.LOOP $label$27:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $21) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$21 = (uint_64)$21 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$21) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	
.LOOP $label$29:
	$21 = (uint_64)$21 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$21) & (int_64)255) != (int_64)0) ){ goto $label$26 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$29 }
	
.LABEL $label$28
	$12 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	$12 = [0]
	
.LABEL $label$25
	CALL eosio_assert($12, [32])
	*(($25 + [440])) = [0]
	*($25 + [432]) = (int_64)0
	$19 = CALL strlen([2992])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$32 }
	*($25 + [432]) = ($19 << [1])
	$12 = (($25 + [432]) | [1])
	if ( $19 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	$14 = (($19 + [16]) & [-16])
	$12 = CALL $275($14)
	*($25 + [432]) = ($14 | [1])
	*($25 + [440]) = $12
	*($25 + [436]) = $19
	
.LABEL $label$31
	CALL memcpy($12, [2992], $19)
	
.LABEL $label$30
	*(($12 + $19)) = [0]
	CALL _ZNSt3__19to_stringEy(($25 + [296]), $1)
	$19 = *($25 + [296])
	$12 = ($19 & [1])
	$19 = CALL $279(($25 + [432]), ( *($25 + [304]) ? (($25 + [296]) | [1]) : $12 ), ( *($25 + [300]) ? uint_32($19 >> [1]) : $12 ))
	$12 = ($19 + [8])
	*((($25 + [184]) + [8])) = *($12)
	*($25 + [184]) = *($19)
	*($19) = [0]
	*(($19 + [4])) = [0]
	*($12) = [0]
	if ( ((*($25 + [296]) & [1]) == 0) ){ goto $label$33 }
	CALL $276(*((($25 + [296]) + [8])))
	
.LABEL $label$33
	if ( ((*($25 + [432]) & [1]) == 0) ){ goto $label$34 }
	CALL $276(*($25 + [440]))
	
.LABEL $label$34
	$21 = (int_64)0
	$20 = (int_64)59
	$19 = [1424]
	$22 = (int_64)0
	
.LOOP $label$35:
	if ( ((uint_64)$21 > (uint_64)(int_64)10) ){ goto $label$40 }
	$12 = *($19)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$12 = ($12 + [165])
	goto $label$38 
	
.LABEL $label$40
	$23 = (int_64)0
	if ( ((int_64)$21 == (int_64)11) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$39
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$23 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$37
	$23 = ((int_64)((int_64)$23 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$36
	$19 = ($19 + [1])
	$20 = ((int_64)$20 + (int_64)-5)
	$22 = ((int_64)$23 | (int_64)$22)
	$21 = ((int_64)$21 + (int_64)1)
	if ( ((int_64)$21 != (int_64)13) ){ goto $label$35 }
	$11 = *(($0 + [176]))
	$21 = (int_64)0
	$20 = (int_64)59
	$19 = [1440]
	$16 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$21 > (uint_64)(int_64)5) ){ goto $label$46 }
	$12 = *($19)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$12 = ($12 + [165])
	goto $label$44 
	
.LABEL $label$46
	$23 = (int_64)0
	if ( ((uint_64)$21 <= (uint_64)(int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$23 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$23 = ((int_64)((int_64)$23 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$42
	$19 = ($19 + [1])
	$21 = ((int_64)$21 + (int_64)1)
	$16 = ((int_64)$23 | (int_64)$16)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$41 }
	*(($12 = (($25 + [368]) + [24]))) = (int_64)1397703940
	*($25 + [376]) = $8
	*($25 + [368]) = $11
	*($25 + [384]) = $10
	CALL $295(($25 + [400]), ($25 + [184]))
	*(($19 = CALL $275([16]))) = $11
	*($19 + [8]) = $16
	*($25 + [296]) = $19
	$19 = ($19 + [16])
	*($25 + [304]) = $19
	*($25 + [300]) = $19
	*($25 + [432]) = *($25 + [368])
	*($25 + [440]) = *($25 + [376])
	*((($25 + [432]) + [24])) = *($12)
	*($25 + [448]) = *($25 + [384])
	$19 = (($25 + [368]) + [40])
	*(($12 = (($25 + [432]) + [40]))) = *($19)
	*($25 + [464]) = *($25 + [400])
	*($25 + [400]) = [0]
	*(($25 + [404])) = [0]
	*($19) = [0]
	CALL $40($22, (int_64)-3617168760277827584, ($25 + [296]), ($25 + [432]))
	if ( ((*($25 + [464]) & [1]) == 0) ){ goto $label$47 }
	CALL $276(*($12))
	
.LABEL $label$47
	$19 = *($25 + [296])
	if ( ($19 == 0) ){ goto $label$48 }
	*($25 + [300]) = $19
	CALL $276($19)
	
.LABEL $label$48
	if ( ((*(($25 + [400])) & [1]) == 0) ){ goto $label$49 }
	CALL $276(*(($25 + [408])))
	
.LABEL $label$49
	*(($25 + [440])) = [0]
	*($25 + [432]) = (int_64)0
	$19 = CALL strlen([1824])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$52 }
	*($25 + [432]) = ($19 << [1])
	$12 = (($25 + [432]) | [1])
	if ( $19 ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$52
	$14 = (($19 + [16]) & [-16])
	$12 = CALL $275($14)
	*($25 + [432]) = ($14 | [1])
	*($25 + [440]) = $12
	*($25 + [436]) = $19
	
.LABEL $label$51
	CALL memcpy($12, [1824], $19)
	
.LABEL $label$50
	*(($12 + $19)) = [0]
	if ( (*($25 + [416]) & [1]) ){ goto $label$54 }
	*($25 + [416]) = [0]
	goto $label$53 
	
.LABEL $label$54
	*(*($25 + [424])) = [0]
	*($25 + [420]) = [0]
	
.LABEL $label$53
	CALL $278(($25 + [416]), [0])
	*((($25 + [416]) + [8])) = *((($25 + [432]) + [8]))
	*($25 + [416]) = *($25 + [432])
	$9 = (int_64)
	CALL eosio_assert((uint_64)(((int_64)$9($10 - *(($5 + [8])))) + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$19 = [0]
	$21 = $24
	
.LOOP $label$57:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $21) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$56 }
	$21 = (uint_64)$21 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$21) & (int_64)255) != (int_64)0) ){ goto $label$58 }
	
.LOOP $label$59:
	$21 = (uint_64)$21 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$21) & (int_64)255) != (int_64)0) ){ goto $label$56 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$59 }
	
.LABEL $label$58
	$12 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$57 }
	goto $label$55 
	
.LABEL $label$56
	$12 = [0]
	
.LABEL $label$55
	CALL eosio_assert($12, [32])
	if ( ((*($25 + [184]) & [1]) == 0) ){ goto $label$21 }
	CALL $276(*($25 + [192]))
	
.LABEL $label$21
	if ( (*($3 + [24]) == 0) ){ goto $label$60 }
	if ( (*($3 + [20]) == 0) ){ goto $label$60 }
	$14 = *(($5 + [8]))
	if ( (CALL is_account(*($5 + [40])) == 0) ){ goto $label$60 }
	*(($25 + [304])) = [0]
	*($25 + [296]) = (int_64)0
	$19 = CALL strlen([3056])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$63 }
	*($25 + [296]) = ($19 << [1])
	$12 = (($25 + [296]) | [1])
	if ( $19 ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$63
	$17 = (($19 + [16]) & [-16])
	$12 = CALL $275($17)
	*($25 + [296]) = ($17 | [1])
	*($25 + [304]) = $12
	*($25 + [300]) = $19
	
.LABEL $label$62
	CALL memcpy($12, [3056], $19)
	
.LABEL $label$61
	*(($12 + $19)) = [0]
	CALL _ZNSt3__19to_stringEy(($25 + [184]), $1)
	$19 = *($25 + [184])
	$12 = ($19 & [1])
	$19 = CALL $279(($25 + [296]), ( *($25 + [192]) ? (($25 + [184]) | [1]) : $12 ), ( *($25 + [188]) ? uint_32($19 >> [1]) : $12 ))
	$12 = ($19 + [8])
	*((($25 + [432]) + [8])) = *($12)
	*($25 + [432]) = *($19)
	*($19) = [0]
	*(($19 + [4])) = [0]
	*($12) = [0]
	*((($25 + [336]) + [8])) = [0]
	*($25 + [336]) = (int_64)0
	$19 = CALL strlen([2224])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$66 }
	*($25 + [336]) = ($19 << [1])
	$17 = (($25 + [336]) | [1])
	$12 = $17
	if ( $19 ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$66
	$17 = (($19 + [16]) & [-16])
	$12 = CALL $275($17)
	*($25 + [336]) = ($17 | [1])
	*($25 + [344]) = $12
	*($25 + [340]) = $19
	$17 = (($25 + [336]) | [1])
	
.LABEL $label$65
	CALL memcpy($12, [2224], $19)
	
.LABEL $label$64
	*(($12 + $19)) = [0]
	$19 = *($25 + [336])
	$12 = ($19 & [1])
	$19 = CALL $279(($25 + [432]), ( *($25 + [344]) ? $17 : $12 ), ( *($25 + [340]) ? uint_32($19 >> [1]) : $12 ))
	$12 = ($19 + [8])
	*((($25 + [352]) + [8])) = *($12)
	*($25 + [352]) = *($19)
	*($19) = [0]
	*(($19 + [4])) = [0]
	*($12) = [0]
	if ( ((*($25 + [336]) & [1]) == 0) ){ goto $label$67 }
	CALL $276(*((($25 + [336]) + [8])))
	
.LABEL $label$67
	if ( ((*($25 + [432]) & [1]) == 0) ){ goto $label$68 }
	CALL $276(*($25 + [440]))
	
.LABEL $label$68
	if ( ((*($25 + [184]) & [1]) == 0) ){ goto $label$69 }
	CALL $276(*(($25 + [192])))
	
.LABEL $label$69
	if ( ((*($25 + [296]) & [1]) == 0) ){ goto $label$70 }
	CALL $276(*($25 + [304]))
	
.LABEL $label$70
	$19 = *(($3 + [24]))
	$12 = *($0 + [172])
	CALL eosio_assert([1], [576])
	$18 = ((float_64)(CASTING float_64)(uint_32 $14) * (float_64)((float_64)(CASTING float_64)(uint_32 $19) / (float_64)(CASTING float_64)(uint_32 ((int_32)$12 * (int_32)[100]))))
	$19 = [0]
	$21 = (int_64)1397704004
	
.LOOP $label$73:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $21) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$72 }
	$21 = (uint_64)$21 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$21) & (int_64)255) != (int_64)0) ){ goto $label$74 }
	
.LOOP $label$75:
	$21 = (uint_64)$21 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$21) & (int_64)255) != (int_64)0) ){ goto $label$72 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$75 }
	
.LABEL $label$74
	$12 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$73 }
	goto $label$71 
	
.LABEL $label$72
	$12 = [0]
	
.LABEL $label$71
	CALL eosio_assert($12, [32])
	*($25 + [320]) = [0]
	$21 = *(($5 + [40]))
	$23 = *(($0 + [176]))
	*($25 + [296]) = $23
	*($25 + [304]) = $21
	*($25 + [312]) = (int_64)-1
	*(($25 + [324])) = [0]
	*(($25 + [328])) = [0]
	$19 = CALL db_find_i64($23, $21, (int_64)3607749779137757184, (int_64)1397704004)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$76 }
	$19 = CALL $13(($25 + [296]), $19)
	CALL eosio_assert(((int_32)*($19 + [16]) == (int_32)($25 + [296])), [176])
	$18 = ( $18 ? ((float_64)$18 + (float_64)$18) : (uint_64)(*($19) <= ((int_64)*(($0 + [172])) * (int_64)*($3 + [32]))) )
	
.LABEL $label$76
	$21 = (int_64)0
	$20 = (int_64)59
	$19 = [1424]
	$22 = (int_64)0
	
.LOOP $label$77:
	if ( ((uint_64)$21 > (uint_64)(int_64)10) ){ goto $label$82 }
	$12 = *($19)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$81 }
	$12 = ($12 + [165])
	goto $label$80 
	
.LABEL $label$82
	$23 = (int_64)0
	if ( ((int_64)$21 == (int_64)11) ){ goto $label$79 }
	goto $label$78 
	
.LABEL $label$81
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$80
	$23 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$79
	$23 = ((int_64)((int_64)$23 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$78
	$19 = ($19 + [1])
	$20 = ((int_64)$20 + (int_64)-5)
	$22 = ((int_64)$23 | (int_64)$22)
	$21 = ((int_64)$21 + (int_64)1)
	if ( ((int_64)$21 != (int_64)13) ){ goto $label$77 }
	$11 = *(($0 + [176]))
	$21 = (int_64)0
	$20 = (int_64)59
	$19 = [1440]
	$16 = (int_64)0
	
.LOOP $label$83:
	if ( ((uint_64)$21 > (uint_64)(int_64)5) ){ goto $label$88 }
	$12 = *($19)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$87 }
	$12 = ($12 + [165])
	goto $label$86 
	
.LABEL $label$88
	$23 = (int_64)0
	if ( ((uint_64)$21 <= (uint_64)(int_64)11) ){ goto $label$85 }
	goto $label$84 
	
.LABEL $label$87
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$86
	$23 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$85
	$23 = ((int_64)((int_64)$23 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$84
	$19 = ($19 + [1])
	$21 = ((int_64)$21 + (int_64)1)
	$16 = ((int_64)$23 | (int_64)$16)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$83 }
	$23 = (Rounds 0)($18)
	CALL eosio_assert((uint_64)(((int_64)$23 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$21 = (int_64)5459781
	$19 = [0]
	
.LOOP $label$91:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $21) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$90 }
	$21 = (uint_64)$21 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$21) & (int_64)255) != (int_64)0) ){ goto $label$92 }
	
.LOOP $label$93:
	$21 = (uint_64)$21 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$21) & (int_64)255) != (int_64)0) ){ goto $label$90 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$93 }
	
.LABEL $label$92
	$12 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$91 }
	goto $label$89 
	
.LABEL $label$90
	$12 = [0]
	
.LABEL $label$89
	CALL eosio_assert($12, [32])
	*($25 + [248]) = *(($0 + [176]))
	$21 = *(($5 + [40]))
	*(($12 = (($25 + [248]) + [24]))) = (int_64)1397703940
	*($25 + [264]) = $23
	*($25 + [256]) = $21
	CALL $295(($25 + [280]), ($25 + [352]))
	*(($19 = CALL $275([16]))) = $11
	*($19 + [8]) = $16
	*($25 + [184]) = $19
	$19 = ($19 + [16])
	*($25 + [192]) = $19
	*($25 + [188]) = $19
	*($25 + [432]) = *($25 + [248])
	*($25 + [440]) = *($25 + [256])
	*((($25 + [432]) + [24])) = *($12)
	*($25 + [448]) = *($25 + [264])
	$19 = (($25 + [248]) + [40])
	*(($12 = (($25 + [432]) + [40]))) = *($19)
	*($25 + [464]) = *($25 + [280])
	*($25 + [280]) = [0]
	*(($25 + [284])) = [0]
	*($19) = [0]
	CALL $40($22, (int_64)-3617168760277827584, ($25 + [184]), ($25 + [432]))
	if ( ((*($25 + [464]) & [1]) == 0) ){ goto $label$94 }
	CALL $276(*($12))
	
.LABEL $label$94
	$19 = *($25 + [184])
	if ( ($19 == 0) ){ goto $label$95 }
	*($25 + [188]) = $19
	CALL $276($19)
	
.LABEL $label$95
	if ( ((*(($25 + [280])) & [1]) == 0) ){ goto $label$96 }
	CALL $276(*(($25 + [288])))
	
.LABEL $label$96
	$14 = *($25 + [320])
	if ( ($14 == 0) ){ goto $label$97 }
	$17 = ($25 + [324])
	$19 = *($17)
	if ( ((int_32)$19 == (int_32)$14) ){ goto $label$99 }
	
.LOOP $label$100:
	$19 = ($19 + [-24])
	$12 = *($19)
	*($19) = [0]
	if ( ($12 == 0) ){ goto $label$101 }
	CALL $276($12)
	
.LABEL $label$101
	if ( ((int_32)$14 != (int_32)$19) ){ goto $label$100 }
	$19 = *(($25 + [320]))
	goto $label$98 
	
.LABEL $label$99
	$19 = $14
	
.LABEL $label$98
	*($17) = $14
	CALL $276($19)
	
.LABEL $label$97
	if ( ((*($25 + [352]) & [1]) == 0) ){ goto $label$60 }
	CALL $276(*($25 + [360]))
	
.LABEL $label$60
	$19 = *($3 + [40])
	if ( ($19 == 0) ){ goto $label$102 }
	$16 = ((int_64)*(($5 + [8])) * (int_64)(CASTING uint_64)(uint_32 $19))
	CALL eosio_assert((uint_64)(((int_64)$16 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$21 = (int_64)1397704004
	$19 = [0]
	
.LOOP $label$105:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $21) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$104 }
	$21 = (uint_64)$21 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$21) & (int_64)255) != (int_64)0) ){ goto $label$106 }
	
.LOOP $label$107:
	$21 = (uint_64)$21 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$21) & (int_64)255) != (int_64)0) ){ goto $label$104 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$107 }
	
.LABEL $label$106
	$12 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$105 }
	goto $label$103 
	
.LABEL $label$104
	$12 = [0]
	
.LABEL $label$103
	CALL eosio_assert($12, [32])
	CALL _ZNSt3__19to_stringEx(($25 + [296]), ((int_64)$16 / (int_64)*($0 + [172])))
	$19 = CALL $282(($25 + [296]), [0], [3088])
	$12 = ($19 + [8])
	*((($25 + [432]) + [8])) = *($12)
	*($25 + [432]) = *($19)
	*($19) = [0]
	*(($19 + [4])) = [0]
	*($12) = [0]
	$19 = CALL $281(($25 + [432]), [2352])
	$12 = ($19 + [8])
	*((($25 + [184]) + [8])) = *($12)
	*($25 + [184]) = *($19)
	*($19) = [0]
	*(($19 + [4])) = [0]
	*($12) = [0]
	if ( ((*($25 + [432]) & [1]) == 0) ){ goto $label$108 }
	CALL $276(*($25 + [440]))
	
.LABEL $label$108
	if ( ((*($25 + [296]) & [1]) == 0) ){ goto $label$109 }
	CALL $276(*($25 + [304]))
	
.LABEL $label$109
	$11 = *(($0 + [176]))
	$13 = *($0)
	$21 = (int_64)0
	$20 = (int_64)59
	$19 = [1440]
	$22 = (int_64)0
	
.LOOP $label$110:
	if ( ((uint_64)$21 > (uint_64)(int_64)5) ){ goto $label$115 }
	$12 = *($19)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$114 }
	$12 = ($12 + [165])
	goto $label$113 
	
.LABEL $label$115
	$23 = (int_64)0
	if ( ((uint_64)$21 <= (uint_64)(int_64)11) ){ goto $label$112 }
	goto $label$111 
	
.LABEL $label$114
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$113
	$23 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$112
	$23 = ((int_64)((int_64)$23 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$111
	$19 = ($19 + [1])
	$21 = ((int_64)$21 + (int_64)1)
	$22 = ((int_64)$23 | (int_64)$22)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$110 }
	*(($12 = (($25 + [200]) + [24]))) = (int_64)357812225028
	*($25 + [208]) = $8
	*($25 + [200]) = $11
	*($25 + [216]) = $16
	CALL $295(($25 + [232]), ($25 + [184]))
	*(($19 = CALL $275([16]))) = $11
	*($19 + [8]) = $22
	*($25 + [296]) = $19
	$19 = ($19 + [16])
	*($25 + [304]) = $19
	*($25 + [300]) = $19
	*($25 + [432]) = *($25 + [200])
	*($25 + [440]) = *($25 + [208])
	*((($25 + [432]) + [24])) = *($12)
	*($25 + [448]) = *($25 + [216])
	$19 = (($25 + [200]) + [40])
	*(($12 = (($25 + [432]) + [40]))) = *($19)
	*($25 + [464]) = *($25 + [232])
	*($25 + [232]) = [0]
	*(($25 + [236])) = [0]
	*($19) = [0]
	CALL $40($13, (int_64)-3617168760277827584, ($25 + [296]), ($25 + [432]))
	if ( ((*($25 + [464]) & [1]) == 0) ){ goto $label$116 }
	CALL $276(*($12))
	
.LABEL $label$116
	$19 = *($25 + [296])
	if ( ($19 == 0) ){ goto $label$117 }
	*($25 + [300]) = $19
	CALL $276($19)
	
.LABEL $label$117
	if ( ((*(($25 + [232])) & [1]) == 0) ){ goto $label$118 }
	CALL $276(*(($25 + [240])))
	
.LABEL $label$118
	if ( ((*($25 + [184]) & [1]) == 0) ){ goto $label$102 }
	CALL $276(*($25 + [192]))
	
.LABEL $label$102
	CALL eosio_assert([1], [576])
	$16 = (int_64)357812225028
	$19 = [0]
	$21 = (int_64)1397704004
	
.LOOP $label$121:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $21) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$120 }
	$21 = (uint_64)$21 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$21) & (int_64)255) != (int_64)0) ){ goto $label$122 }
	
.LOOP $label$123:
	$21 = (uint_64)$21 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$21) & (int_64)255) != (int_64)0) ){ goto $label$120 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$123 }
	
.LABEL $label$122
	$12 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$121 }
	goto $label$119 
	
.LABEL $label$120
	$12 = [0]
	
.LABEL $label$119
	CALL eosio_assert($12, [32])
	*(($25 + [328])) = [0]
	*($25 + [312]) = (int_64)-1
	$21 = (int_64)0
	*($25 + [320]) = (int_64)0
	$23 = *(($0 + [176]))
	*($25 + [296]) = $23
	*($25 + [304]) = $8
	$11 = (int_64)0
	$19 = CALL db_find_i64($23, $8, (int_64)3607749779137757184, (int_64)1397704004)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$124 }
	$19 = CALL $13(($25 + [296]), $19)
	CALL eosio_assert(((int_32)*($19 + [16]) == (int_32)($25 + [296])), [176])
	$16 = *($19 + [8])
	$11 = *($19)
	
.LABEL $label$124
	$20 = (int_64)59
	$19 = [1424]
	$22 = (int_64)0
	
.LOOP $label$125:
	if ( ((uint_64)$21 > (uint_64)(int_64)10) ){ goto $label$130 }
	$12 = *($19)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$129 }
	$12 = ($12 + [165])
	goto $label$128 
	
.LABEL $label$130
	$23 = (int_64)0
	if ( ((int_64)$21 == (int_64)11) ){ goto $label$127 }
	goto $label$126 
	
.LABEL $label$129
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$128
	$23 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$127
	$23 = ((int_64)((int_64)$23 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$126
	$19 = ($19 + [1])
	$20 = ((int_64)$20 + (int_64)-5)
	$22 = ((int_64)$23 | (int_64)$22)
	$21 = ((int_64)$21 + (int_64)1)
	if ( ((int_64)$21 != (int_64)13) ){ goto $label$125 }
	*(($25 + [464])) = [0]
	*($25 + [440]) = $8
	*($25 + [432]) = $22
	*($25 + [448]) = (int_64)-1
	*($25 + [456]) = (int_64)0
	$19 = CALL $57(($25 + [432]), (int_64)5459781, [1936])
	*((($25 + [184]) + [8])) = *(($19 + [8]))
	*($25 + [184]) = *($19)
	$14 = *($25 + [456])
	if ( ($14 == 0) ){ goto $label$131 }
	$3 = ($25 + [460])
	$19 = *($3)
	if ( ((int_32)$19 == (int_32)$14) ){ goto $label$133 }
	
.LOOP $label$134:
	$19 = ($19 + [-24])
	$12 = *($19)
	*($19) = [0]
	if ( ($12 == 0) ){ goto $label$135 }
	CALL $276($12)
	
.LABEL $label$135
	if ( ((int_32)$14 != (int_32)$19) ){ goto $label$134 }
	$19 = *(($25 + [456]))
	goto $label$132 
	
.LABEL $label$133
	$19 = $14
	
.LABEL $label$132
	*($3) = $14
	CALL $276($19)
	
.LABEL $label$131
	$19 = *(($5 + [28]))
	*((($25 + [352]) + [8])) = [0]
	*($25 + [352]) = (int_64)0
	if ( ($19 == 0) ){ goto $label$143 }
	$19 = CALL strlen([3136])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$142 }
	*($25 + [352]) = ($19 << [1])
	$12 = (($25 + [352]) | [1])
	if ( $19 ){ goto $label$141 }
	goto $label$140 
	
.LABEL $label$143
	$19 = CALL strlen([3152])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$139 }
	*($25 + [352]) = ($19 << [1])
	$12 = (($25 + [352]) | [1])
	if ( $19 ){ goto $label$138 }
	goto $label$137 
	
.LABEL $label$142
	$14 = (($19 + [16]) & [-16])
	$12 = CALL $275($14)
	*($25 + [352]) = ($14 | [1])
	*($25 + [360]) = $12
	*($25 + [356]) = $19
	
.LABEL $label$141
	CALL memcpy($12, [3136], $19)
	
.LABEL $label$140
	$19 = ($12 + $19)
	goto $label$136 
	
.LABEL $label$139
	$14 = (($19 + [16]) & [-16])
	$12 = CALL $275($14)
	*($25 + [352]) = ($14 | [1])
	*($25 + [360]) = $12
	*($25 + [356]) = $19
	
.LABEL $label$138
	CALL memcpy($12, [3152], $19)
	
.LABEL $label$137
	$19 = ($12 + $19)
	
.LABEL $label$136
	*($19) = [0]
	$8 = *($0)
	$13 = *(($0 + [176]))
	$21 = (int_64)0
	$20 = (int_64)59
	$19 = [1440]
	$22 = (int_64)0
	
.LOOP $label$144:
	if ( ((uint_64)$21 > (uint_64)(int_64)5) ){ goto $label$149 }
	$12 = *($19)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$148 }
	$12 = ($12 + [165])
	goto $label$147 
	
.LABEL $label$149
	$23 = (int_64)0
	if ( ((uint_64)$21 <= (uint_64)(int_64)11) ){ goto $label$146 }
	goto $label$145 
	
.LABEL $label$148
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$147
	$23 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$146
	$23 = ((int_64)((int_64)$23 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$145
	$19 = ($19 + [1])
	$21 = ((int_64)$21 + (int_64)1)
	$22 = ((int_64)$23 | (int_64)$22)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$144 }
	*($25 + [440]) = $22
	*($25 + [432]) = $13
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$0 = ($5 + [8])
	$19 = [0]
	
.LOOP $label$152:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $24) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$151 }
	$24 = (uint_64)$24 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$24) & (int_64)255) != (int_64)0) ){ goto $label$153 }
	
.LOOP $label$154:
	$24 = (uint_64)$24 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$24) & (int_64)255) != (int_64)0) ){ goto $label$151 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$154 }
	
.LABEL $label$153
	$12 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$152 }
	goto $label$150 
	
.LABEL $label$151
	$12 = [0]
	
.LABEL $label$150
	CALL eosio_assert($12, [32])
	*($25) = $1
	*($25 + [8]) = *(($5 + [32]))
	*(($25 + [24])) = *(($0 + [8]))
	*($25 + [16]) = *($0)
	CALL $295(($25 + [32]), ($25 + [352]))
	$19 = *(($5 + [24]))
	*(($25 + [56])) = $7
	*($25 + [48]) = $10
	*($25 + [44]) = $19
	*($25 + [64]) = $2
	CALL $295(($25 + [68]), ($25 + [416]))
	*(($25 + [88])) = $7
	*(($25 + [104])) = $16
	*(($25 + [124])) = *(($25 + [196]))
	*(($25 + [120])) = *((($25 + [184]) + [8]))
	*(($25 + [116])) = *($25 + [188])
	*($25 + [80]) = $9
	*($25 + [96]) = $11
	*($25 + [112]) = *($25 + [184])
	*($25 + [128]) = *($5 + [80])
	*(($25 + [168])) = *(($5 + [72]))
	*(($25 + [160])) = *(($5 + [64]))
	*(($25 + [152])) = *(($5 + [56]))
	*($25 + [144]) = *($5 + [48])
	CALL $123($8, ($25 + [432]), $25)
	if ( ((*($25 + [68]) & [1]) == 0) ){ goto $label$155 }
	CALL $276(*(($25 + [76])))
	
.LABEL $label$155
	if ( ((*($25 + [32]) & [1]) == 0) ){ goto $label$156 }
	CALL $276(*(($25 + [40])))
	
.LABEL $label$156
	CALL eosio_assert($6, [2448])
	CALL eosio_assert($6, [2496])
	$19 = CALL db_next_i64(*($5 + [92]), ($25 + [432]))
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$157 }
	CALL $99($4, $19)
	
.LABEL $label$157
	CALL $100($4, $5)
	if ( ((*($25 + [352]) & [1]) == 0) ){ goto $label$158 }
	CALL $276(*($25 + [360]))
	
.LABEL $label$158
	$5 = *($25 + [320])
	if ( ($5 == 0) ){ goto $label$159 }
	$0 = ($25 + [324])
	$19 = *($0)
	if ( ((int_32)$19 == (int_32)$5) ){ goto $label$161 }
	
.LOOP $label$162:
	$19 = ($19 + [-24])
	$12 = *($19)
	*($19) = [0]
	if ( ($12 == 0) ){ goto $label$163 }
	CALL $276($12)
	
.LABEL $label$163
	if ( ((int_32)$5 != (int_32)$19) ){ goto $label$162 }
	$19 = *(($25 + [320]))
	goto $label$160 
	
.LABEL $label$161
	$19 = $5
	
.LABEL $label$160
	*($0) = $5
	CALL $276($19)
	
.LABEL $label$159
	if ( ((*($25 + [416]) & [1]) == 0) ){ goto $label$164 }
	CALL $276(*($25 + [424]))
	
.LABEL $label$164
	*([0] + [4]) = ($25 + [480])
	return (unreachable)
	
.LABEL $label$12
	CALL $277(($25 + [416]))
	
.LABEL $label$11
	CALL $277(($25 + [352]))
	
.LABEL $label$10
	CALL $277(($25 + [432]))
	
.LABEL $label$9
	CALL $277(($25 + [432]))
	
.LABEL $label$8
	CALL $277(($25 + [352]))
	
.LABEL $label$7
	CALL $277(($25 + [296]))
	
.LABEL $label$6
	CALL $277(($25 + [336]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[31]), [800])
	CALL memcpy(($1 + [48]), *($0 + [4]), [32])
	$2 = (*($0 + [4]) + [32])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

void .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $46(*($1), ($0 + [32]))
	*($4 + [8]) = $0
	CALL $127(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $125 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [32])
	$4 = ( *(($1 + [36])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([-144] - $4)
	$2 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	$4 = *($1 + [68])
	$4 = ( *(($1 + [72])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$3 = ($3 - $4)
	$2 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$2:
	$3 = ($3 + [-1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$2 }
	$4 = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $41($0, ([0] - $3))
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$3 
	
.LABEL $label$4
	$3 = [0]
	
.LABEL $label$3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = $4
	*($5 + [16]) = $5
	*($5 + [24]) = $1
	CALL $126(($5 + [24]), ($5 + [16]))
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $124 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*($9 + [16]) = [0]
	*($9 + [8]) = (int_64)0
	$6 = [0]
	$7 = [0]
	$8 = [0]
	$4 = (*($2 + [4]) - *($2))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $275($4)
	$6 = ($8 + ($5 << [4]))
	*(($9 + [16])) = $6
	*($9 + [8]) = $8
	*($9 + [12]) = $8
	$7 = *($2)
	$2 = (*(($2 + [4])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $7, $2)
	$7 = ($8 + $2)
	*($9 + [12]) = $7
	goto $label$2 
	
.LABEL $label$3
	$7 = $8
	
.LABEL $label$2
	*(($9 + [44])) = $7
	*($9 + [32]) = $1
	*(($9 + [16])) = [0]
	*(($9 + [48])) = $6
	*($9 + [24]) = $0
	*($9 + [40]) = $8
	*($9 + [8]) = (int_64)0
	CALL $125(($9 + [52]), $3)
	CALL $43(($9 + [64]), ($9 + [24]))
	$8 = *($9 + [64])
	CALL send_inline($8, (*($9 + [68]) - $8))
	$8 = *($9 + [64])
	if ( ($8 == 0) ){ goto $label$4 }
	*($9 + [68]) = $8
	CALL $276($8)
	
.LABEL $label$4
	$8 = *($9 + [52])
	if ( ($8 == 0) ){ goto $label$5 }
	*(($9 + [56])) = $8
	CALL $276($8)
	
.LABEL $label$5
	$8 = *($9 + [40])
	if ( ($8 == 0) ){ goto $label$6 }
	*(($9 + [44])) = $8
	CALL $276($8)
	
.LABEL $label$6
	$8 = *($9 + [8])
	if ( ($8 == 0) ){ goto $label$7 }
	*($9 + [12]) = $8
	CALL $276($8)
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $294(($9 + [8]))
}

void .FUNC $14 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $15 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [576])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [32])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

int_32 .FUNC $16 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [176])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $13($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [176])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_64 .FUNC _ZN12thedeosgames9getstakedEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	CALL eosio_assert([1], [576])
	$6 = [0]
	$5 = (int_64)1397704004
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [32])
	$2 = *(($0 + [72]))
	$7 = *(($0 + [76]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$6 = ($7 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$7:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$6 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$4 = ($0 + [48])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$11 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$4), [176])
	if ( $6 ){ goto $label$10 }
	$5 = (int_64)0
	goto $label$8 
	
.LABEL $label$11
	$6 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-4152008587998134272, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	$6 = CALL $19($4, $6)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$4), [176])
	
.LABEL $label$10
	$5 = ((int_64)*($6 + [24]) + (int_64)*($6 + [8]))
	goto $label$8 
	
.LABEL $label$9
	$5 = (int_64)0
	
.LABEL $label$8
	$2 = *(($0 + [112]))
	$7 = *(($0 + [116]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$12 }
	$6 = ($7 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$13:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$12 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	$4 = ($0 + [88])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$16 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$4), [176])
	if ( $6 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$6 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)-3102531239517618176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$14 }
	$6 = CALL $20($4, $6)
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$4), [176])
	
.LABEL $label$15
	$5 = ((int_64)*($6 + [8]) + (int_64)$5)
	
.LABEL $label$14
	return $5
}

void .FUNC _ZN12thedeosgames11add_balanceEyN5eosio5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	$8 = [0]
	*((($9 + [8]) + [32])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$6 = *($0 + [176])
	*($9 + [8]) = $6
	*($9 + [16]) = $1
	$4 = *($2 + [8])
	$0 = CALL db_find_i64($6, $1, (int_64)3607749779137757184, (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $13(($9 + [8]), $0)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [8])), [176])
	CALL eosio_assert([1], [288])
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [8])), [336])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$14()), [384])
	$1 = *($8 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$1), [656])
	$6 = ((int_64)*($8) + (int_64)*($2))
	*($8) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [704])
	CALL eosio_assert(((int_64)*($8) < (int_64)4611686018427387904), [736])
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$1) == (int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8)), [448])
	CALL eosio_assert([1], [640])
	CALL memcpy(($9 + [64]), $8, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($9 + [64]) | [8]), ($8 + [8]), [8])
	CALL db_update_i64(*($8 + [20]), (int_64)0, ($9 + [64]), [16])
	$8 = (($9 + [8]) + [16])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$3 }
	*($8) = ((int_64)$1 + (int_64)1)
	$2 = *($9 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$14()), [512])
	*(($0 = CALL $275([32])) + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [576])
	$5 = ($0 + [8])
	$1 = (int_64)5462355
	
.LOOP $label$6:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	CALL eosio_assert($7, [32])
	*($0 + [16]) = ($9 + [8])
	*(($8 = ($0 + [8]))) = *(($2 + [8]))
	*($0) = *($2)
	CALL eosio_assert([1], [640])
	CALL memcpy(($9 + [64]), $0, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy((($9 + [64]) | [8]), $5, [8])
	$1 = (uint_64)*($8) >> (uint_64)(int_64)8
	$2 = CALL db_store_i64(*((($9 + [8]) + [8])), (int_64)3607749779137757184, $3, $1), ($9 + [64]), [16]
	*($0 + [20]) = $2)
	$7 = (($9 + [8]) + [16])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$9 }
	*($7) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$9
	*($9 + [56]) = $0
	$1 = (uint_64)*($8) >> (uint_64)(int_64)8
	*($9 + [64]) = $1)
	*($9 + [52]) = $2
	$7 = ($9 + [36])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($9 + [40]))) ){ goto $label$11 }
	*($8 + [8]) = $1
	*($8 + [16]) = $2
	*($9 + [56]) = [0]
	*($8) = $0
	*($7) = ($8 + [24])
	goto $label$10 
	
.LABEL $label$11
	CALL $14(($9 + [32]), ($9 + [56]), ($9 + [64]), ($9 + [52]))
	
.LABEL $label$10
	$8 = *($9 + [56])
	*($9 + [56]) = [0]
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $276($8)
	
.LABEL $label$3
	$2 = *($9 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($9 + [36])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$8 = ($8 + [-24])
	$0 = *($8)
	*($8) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	CALL $276($0)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$14 }
	$8 = *(($9 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$8 = $2
	
.LABEL $label$12
	*($7) = $2
	CALL $276($8)
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $12 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [768])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $275([32])
	$6 = CALL $15($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $14(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $276($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[3]), [640])
	CALL memcpy(*($3 + [4]), ($2 + [44]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [48]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [56]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[3]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [64]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	CALL $46(*($1), ($0 + [68]))
	*($4 + [8]) = $0
	CALL $186(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $281 (int_32 $0, int_32 $1)
{
	return CALL $279($0, $1, CALL $328($1))
}

void .FUNC $18 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [8])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( (uint_64)(((int_64)*(*($8) + [8]) ^ (int_64)$2) <= (int_64)256) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $276($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $276($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [768])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $275([56])
	$4 = CALL $23($6)
	*($6 + [40]) = $0
	CALL $24(($8 + [32]), $4)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $25(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $276($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $184 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $46(*($1), ($0 + [32]))
	*($4 + [8]) = $0
	CALL $185(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC _ZN12thedeosgames12dicecloseeosEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	float_32 $16
	int_32 $17
	float_64 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_32 $24
	$24 = (*([0] + [4]) - [400])
	*([0] + [4]) = $24
	CALL require_auth(*($0 + [176]))
	$3 = [0]
	$19 = CALL db_lowerbound_i64(*($0 + [2088]), *(($0 + [2096])), (int_64)6138558357033713664, (int_64)0)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $122(($0 + [2088]), $19)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [2880])
	CALL eosio_assert((*($3 + [16]) == 0), [144])
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)-1) <= (int_64)999), [1552])
	$9 = *(($0 + [1832]))
	$5 = *(($0 + [1836]))
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$2 }
	$19 = ($5 + [-24])
	$15 = ([0] - $9)
	
.LOOP $label$3:
	if ( ((int_64)*(*($19)) == (int_64)$1) ){ goto $label$2 }
	$5 = $19
	$14 = ($19 + [-24])
	$19 = $14
	if ( ((int_32)($14 + $15) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$4 = ($0 + [1808])
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$5 }
	$5 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [88]) == (int_32)$4), [176])
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	$19 = CALL db_find_i64(*(($0 + [1808])), *(($0 + [1816])), (int_64)5445034581344550912, $1)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $99($4, $19)
	CALL eosio_assert(((int_32)*($5 + [88]) == (int_32)$4), [176])
	
.LABEL $label$4
	$6 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($6, [1600])
	CALL eosio_assert(((int_64)*($5 + [32]) != (int_64)*(($0 + [176]))), [2960])
	$14 = *($5 + [28])
	$19 = *($5 + [24])
	$7 = *(($5 + [16]))
	$8 = *($5 + [32])
	$9 = CALL _ZN12thedeosgames4randEmy($0, (CASTING uint_32)(uint_64 ((uint_64)*($5 + [80]) % (uint_64)(int_64)100000)), $2)
	$16 = CALL floorf((DEMOTE float_32)(float_64 ((float_64)((float_64)(float_64)100 / (float_64)(CASTING float_64)(uint_32 ( $19 ? ([99] - $19) : ((int_32)$14 == (int_32)[1]) ))) * (float_64)(float_64)100)))
	$2 = *($5 + [8])
	*(($24 + [360])) = [0]
	*($24 + [352]) = (int_64)0
	$11 = (Rounds 0)(((float_32)((float_32)$16 / (float_32)(float_32)100) * (float_32)(CASTING float_32)(int_64 $2)))
	$19 = CALL strlen([1664])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$15 }
	*($24 + [352]) = ($19 << [1])
	$14 = (($24 + [352]) | [1])
	if ( $19 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$15 = (($19 + [16]) & [-16])
	$14 = CALL $275($15)
	*($24 + [352]) = ($15 | [1])
	*($24 + [360]) = $14
	*($24 + [356]) = $19
	
.LABEL $label$14
	CALL memcpy($14, [1664], $19)
	
.LABEL $label$13
	*(($14 + $19)) = [0]
	$2 = *(($5 + [8]))
	CALL eosio_assert((uint_64)((int_64))((int_64)4611686018427387903 - $2) <= (int_64)9223372036854775807), [576])
	$10 = (int_64))((int_64)0 - $2)
	$19 = [0]
	$23 = (uint_64)$7 >> (uint_64)(int_64)8
	$2 = $23)
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$14 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$14 = [0]
	
.LABEL $label$16
	CALL eosio_assert($14, [32])
	$19 = *(($5 + [24]))
	if ( ((uint_32)$9 >= (uint_32)$19) ){ goto $label$23 }
	if ( ((int_32)*(($5 + [28])) == (int_32)[1]) ){ goto $label$22 }
	
.LABEL $label$23
	if ( ((uint_32)$9 <= (uint_32)$19) ){ goto $label$21 }
	if ( *(($5 + [28])) ){ goto $label$21 }
	
.LABEL $label$22
	$19 = *($3 + [20])
	if ( ($19 == 0) ){ goto $label$24 }
	$11 = (int_64))($11 - (CASTING int_64)(int_32 (CASTING int_32)(float_64 ((float_64)(CASTING float_64)(uint_64 $11) * (float_64)((float_64)(CASTING float_64)(uint_32 $19) / (float_64)(CASTING float_64)(uint_32 ((int_32)*($0 + [172]) * (int_32)[100])))))))
	
.LABEL $label$24
	CALL eosio_assert((uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$2 = (int_64)5459781
	$19 = [0]
	
.LOOP $label$27:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	
.LOOP $label$29:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$26 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$29 }
	
.LABEL $label$28
	$14 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	$14 = [0]
	
.LABEL $label$25
	CALL eosio_assert($14, [32])
	*(($24 + [8])) = [0]
	*($24) = (int_64)0
	$19 = CALL strlen([2992])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$32 }
	*($24) = ($19 << [1])
	$14 = ($24 | [1])
	if ( $19 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	$15 = (($19 + [16]) & [-16])
	$14 = CALL $275($15)
	*($24) = ($15 | [1])
	*($24 + [8]) = $14
	*($24 + [4]) = $19
	
.LABEL $label$31
	CALL memcpy($14, [2992], $19)
	
.LABEL $label$30
	*(($14 + $19)) = [0]
	CALL _ZNSt3__19to_stringEy(($24 + [208]), $1)
	$19 = *($24 + [208])
	$14 = ($19 & [1])
	$19 = CALL $279($24, ( *($24 + [216]) ? (($24 + [208]) | [1]) : $14 ), ( *($24 + [212]) ? uint_32($19 >> [1]) : $14 ))
	$14 = ($19 + [8])
	*((($24 + [296]) + [8])) = *($14)
	*($24 + [296]) = *($19)
	*($19) = [0]
	*(($19 + [4])) = [0]
	*($14) = [0]
	if ( ((*($24 + [208]) & [1]) == 0) ){ goto $label$33 }
	CALL $276(*((($24 + [208]) + [8])))
	
.LABEL $label$33
	if ( ((*($24) & [1]) == 0) ){ goto $label$34 }
	CALL $276(*($24 + [8]))
	
.LABEL $label$34
	$2 = CALL current_time()
	*(($24 + [28])) = [0]
	*(($24 + [32])) = [0]
	*($24 + [12]) = [0]
	*($24 + [16]) = [0]
	*($24 + [20]) = [0]
	*($24 + [24]) = [0]
	*($24) = ((CASTING uint_32)(uint_64 ((uint_64)$2 / (uint_64)(int_64)1000000)) + [60])
	*($24 + [36]) = [0]
	*(($24 + [40])) = [0]
	*(($24 + [44])) = [0]
	*($24 + [48]) = [0]
	*(($24 + [52])) = [0]
	*(($24 + [56])) = [0]
	$13 = *(($0 + [176]))
	$15 = ($24 + [36])
	$2 = (int_64)0
	$20 = (int_64)59
	$19 = [1440]
	$21 = (int_64)0
	
.LOOP $label$35:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$40 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$14 = ($14 + [165])
	goto $label$38 
	
.LABEL $label$40
	$22 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$39
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$37
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$36
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$35 }
	*($24 + [320]) = $21
	*($24 + [312]) = $13
	$2 = (int_64)0
	$20 = (int_64)59
	$19 = [1424]
	$21 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$46 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$14 = ($14 + [165])
	goto $label$44 
	
.LABEL $label$46
	$22 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$42
	$19 = ($19 + [1])
	$20 = ((int_64)$20 + (int_64)-5)
	$21 = ((int_64)$22 | (int_64)$21)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$41 }
	*($24 + [192]) = $21
	$2 = (int_64)0
	$20 = (int_64)59
	$19 = [1792]
	$21 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$52 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$14 = ($14 + [165])
	goto $label$50 
	
.LABEL $label$52
	$22 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$48
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$47 }
	*($24 + [368]) = $21
	*(($24 + [232])) = (int_64)1397703940
	*($24 + [216]) = $8
	*($24 + [208]) = $13
	*($24 + [224]) = $11
	CALL $295(($24 + [240]), ($24 + [296]))
	$19 = ($24 + [40])
	$14 = *($19)
	if ( ((uint_32)$14 >= (uint_32)*(($24 + [44]))) ){ goto $label$54 }
	CALL $51($14, ($24 + [312]), *($24 + [192]), *($24 + [368]), ($24 + [208]))
	*($19) = (*($19) + [40])
	goto $label$53 
	
.LABEL $label$54
	CALL $52($15, ($24 + [312]), ($24 + [192]), ($24 + [368]), ($24 + [208]))
	
.LABEL $label$53
	if ( ((*($24 + [240]) & [1]) == 0) ){ goto $label$55 }
	CALL $276(*(($24 + [248])))
	
.LABEL $label$55
	*(($24 + [20])) = [1]
	$2 = (int_64)0
	$20 = (int_64)59
	$19 = [4544]
	$21 = (int_64)0
	
.LOOP $label$56:
	$22 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)30) ){ goto $label$58 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$60 }
	$14 = ($14 + [165])
	goto $label$59 
	
.LABEL $label$60
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$59
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$58 }
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	goto $label$57 
	
.LABEL $label$58
	$22 = ((int_64)$22 & (int_64)15)
	
.LABEL $label$57
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$56 }
	$2 = (int_64)0
	*($24 + [216]) = (int_64)0
	*($24 + [208]) = $21
	CALL cancel_deferred(($24 + [208]))
	$20 = (int_64)59
	$19 = [4544]
	$21 = (int_64)0
	
.LOOP $label$61:
	$22 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)30) ){ goto $label$63 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$65 }
	$14 = ($14 + [165])
	goto $label$64 
	
.LABEL $label$65
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$64
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$63 }
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	goto $label$62 
	
.LABEL $label$63
	$22 = ((int_64)$22 & (int_64)15)
	
.LABEL $label$62
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$61 }
	*($24 + [216]) = (int_64)0
	*($24 + [208]) = $21
	$2 = *(($0 + [176]))
	CALL $53(($24 + [312]), $24)
	$19 = *($24 + [312])
	CALL send_deferred(($24 + [208]), $2, $19, (*($24 + [316]) - $19), [1])
	$19 = *($24 + [312])
	if ( ($19 == 0) ){ goto $label$66 }
	*($24 + [316]) = $19
	CALL $276($19)
	
.LABEL $label$66
	*(($24 + [216])) = [0]
	*($24 + [208]) = (int_64)0
	$19 = CALL strlen([1824])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$69 }
	*($24 + [208]) = ($19 << [1])
	$14 = (($24 + [208]) | [1])
	if ( $19 ){ goto $label$68 }
	goto $label$67 
	
.LABEL $label$69
	$15 = (($19 + [16]) & [-16])
	$14 = CALL $275($15)
	*($24 + [208]) = ($15 | [1])
	*($24 + [216]) = $14
	*($24 + [212]) = $19
	
.LABEL $label$68
	CALL memcpy($14, [1824], $19)
	
.LABEL $label$67
	*(($14 + $19)) = [0]
	if ( (*($24 + [352]) & [1]) ){ goto $label$71 }
	*($24 + [352]) = [0]
	goto $label$70 
	
.LABEL $label$71
	*(*($24 + [360])) = [0]
	*($24 + [356]) = [0]
	
.LABEL $label$70
	CALL $278(($24 + [352]), [0])
	*((($24 + [352]) + [8])) = *((($24 + [208]) + [8]))
	*($24 + [352]) = *($24 + [208])
	$10 = (int_64)
	CALL eosio_assert((uint_64)(((int_64)$10($11 - *(($5 + [8])))) + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$19 = [0]
	$2 = $23
	
.LOOP $label$74:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$73 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$75 }
	
.LOOP $label$76:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$73 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$76 }
	
.LABEL $label$75
	$14 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$74 }
	goto $label$72 
	
.LABEL $label$73
	$14 = [0]
	
.LABEL $label$72
	CALL eosio_assert($14, [32])
	CALL $54($24)
	if ( ((*($24 + [296]) & [1]) == 0) ){ goto $label$21 }
	CALL $276(*($24 + [304]))
	
.LABEL $label$21
	if ( (*($3 + [24]) == 0) ){ goto $label$77 }
	if ( (*($3 + [20]) == 0) ){ goto $label$77 }
	$15 = *(($5 + [8]))
	if ( (CALL is_account(*($5 + [40])) == 0) ){ goto $label$77 }
	*(($24 + [216])) = [0]
	*($24 + [208]) = (int_64)0
	$19 = CALL strlen([3056])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$80 }
	*($24 + [208]) = ($19 << [1])
	$14 = (($24 + [208]) | [1])
	if ( $19 ){ goto $label$79 }
	goto $label$78 
	
.LABEL $label$80
	$17 = (($19 + [16]) & [-16])
	$14 = CALL $275($17)
	*($24 + [208]) = ($17 | [1])
	*($24 + [216]) = $14
	*($24 + [212]) = $19
	
.LABEL $label$79
	CALL memcpy($14, [3056], $19)
	
.LABEL $label$78
	*(($14 + $19)) = [0]
	CALL _ZNSt3__19to_stringEy(($24 + [312]), $1)
	$19 = *($24 + [312])
	$14 = ($19 & [1])
	$19 = CALL $279(($24 + [208]), ( *($24 + [320]) ? (($24 + [312]) | [1]) : $14 ), ( *($24 + [316]) ? uint_32($19 >> [1]) : $14 ))
	$14 = ($19 + [8])
	*(($24 + [8])) = *($14)
	*($24) = *($19)
	*($19) = [0]
	*(($19 + [4])) = [0]
	*($14) = [0]
	*((($24 + [296]) + [8])) = [0]
	*($24 + [296]) = (int_64)0
	$19 = CALL strlen([2224])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$83 }
	*($24 + [296]) = ($19 << [1])
	$17 = (($24 + [296]) | [1])
	$14 = $17
	if ( $19 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$83
	$17 = (($19 + [16]) & [-16])
	$14 = CALL $275($17)
	*($24 + [296]) = ($17 | [1])
	*($24 + [304]) = $14
	*($24 + [300]) = $19
	$17 = (($24 + [296]) | [1])
	
.LABEL $label$82
	CALL memcpy($14, [2224], $19)
	
.LABEL $label$81
	*(($14 + $19)) = [0]
	$19 = *($24 + [296])
	$14 = ($19 & [1])
	$19 = CALL $279($24, ( *($24 + [304]) ? $17 : $14 ), ( *($24 + [300]) ? uint_32($19 >> [1]) : $14 ))
	$14 = ($19 + [8])
	*((($24 + [192]) + [8])) = *($14)
	*($24 + [192]) = *($19)
	*($19) = [0]
	*(($19 + [4])) = [0]
	*($14) = [0]
	if ( ((*($24 + [296]) & [1]) == 0) ){ goto $label$84 }
	CALL $276(*((($24 + [296]) + [8])))
	
.LABEL $label$84
	if ( ((*($24) & [1]) == 0) ){ goto $label$85 }
	CALL $276(*($24 + [8]))
	
.LABEL $label$85
	if ( ((*($24 + [312]) & [1]) == 0) ){ goto $label$86 }
	CALL $276(*(($24 + [320])))
	
.LABEL $label$86
	if ( ((*($24 + [208]) & [1]) == 0) ){ goto $label$87 }
	CALL $276(*($24 + [216]))
	
.LABEL $label$87
	$19 = *(($3 + [24]))
	$14 = *($0 + [172])
	CALL eosio_assert([1], [576])
	$18 = ((float_64)(CASTING float_64)(uint_32 $15) * (float_64)((float_64)(CASTING float_64)(uint_32 $19) / (float_64)(CASTING float_64)(uint_32 ((int_32)$14 * (int_32)[100]))))
	$19 = [0]
	$2 = (int_64)1397704004
	
.LOOP $label$90:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$89 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$91 }
	
.LOOP $label$92:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$89 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$92 }
	
.LABEL $label$91
	$14 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$90 }
	goto $label$88 
	
.LABEL $label$89
	$14 = [0]
	
.LABEL $label$88
	CALL eosio_assert($14, [32])
	*($24 + [336]) = [0]
	$2 = *(($5 + [40]))
	$19 = ($0 + [176])
	$22 = *($19)
	*($24 + [312]) = $22
	*($24 + [320]) = $2
	*($24 + [328]) = (int_64)-1
	*((($24 + [312]) + [28])) = [0]
	*((($24 + [312]) + [32])) = [0]
	$14 = CALL db_find_i64($22, $2, (int_64)3607749779137757184, (int_64)1397704004)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$93 }
	$14 = CALL $13(($24 + [312]), $14)
	CALL eosio_assert(((int_32)*($14 + [16]) == (int_32)($24 + [312])), [176])
	$18 = ( $18 ? ((float_64)$18 + (float_64)$18) : (uint_64)(*($14) <= ((int_64)*(($0 + [172])) * (int_64)*($3 + [32]))) )
	
.LABEL $label$93
	$2 = CALL current_time()
	*(($24 + [28])) = [0]
	*(($24 + [32])) = [0]
	*($24 + [12]) = [0]
	*($24 + [16]) = [0]
	*($24 + [20]) = [0]
	*($24 + [24]) = [0]
	*($24) = ((CASTING uint_32)(uint_64 ((uint_64)$2 / (uint_64)(int_64)1000000)) + [60])
	*($24 + [36]) = [0]
	*(($24 + [40])) = [0]
	*(($24 + [44])) = [0]
	*($24 + [48]) = [0]
	*(($24 + [52])) = [0]
	*(($24 + [56])) = [0]
	$13 = *($19)
	$15 = ($24 + [36])
	$2 = (int_64)0
	$20 = (int_64)59
	$19 = [1440]
	$21 = (int_64)0
	
.LOOP $label$94:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$99 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$98 }
	$14 = ($14 + [165])
	goto $label$97 
	
.LABEL $label$99
	$22 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$96 }
	goto $label$95 
	
.LABEL $label$98
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$97
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$96
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$95
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$94 }
	*($24 + [304]) = $21
	*($24 + [296]) = $13
	$2 = (int_64)0
	$20 = (int_64)59
	$19 = [1424]
	$21 = (int_64)0
	
.LOOP $label$100:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$105 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$104 }
	$14 = ($14 + [165])
	goto $label$103 
	
.LABEL $label$105
	$22 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$102 }
	goto $label$101 
	
.LABEL $label$104
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$103
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$102
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$101
	$19 = ($19 + [1])
	$20 = ((int_64)$20 + (int_64)-5)
	$21 = ((int_64)$22 | (int_64)$21)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$100 }
	*($24 + [368]) = $21
	$2 = (int_64)0
	$20 = (int_64)59
	$19 = [1792]
	$21 = (int_64)0
	
.LOOP $label$106:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$111 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$110 }
	$14 = ($14 + [165])
	goto $label$109 
	
.LABEL $label$111
	$22 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$108 }
	goto $label$107 
	
.LABEL $label$110
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$109
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$108
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$107
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$106 }
	*($24 + [280]) = $21
	$22 = (Rounds 0)($18)
	CALL eosio_assert((uint_64)(((int_64)$22 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$2 = (int_64)5459781
	$19 = [0]
	
.LOOP $label$114:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$113 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$115 }
	
.LOOP $label$116:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$113 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$116 }
	
.LABEL $label$115
	$14 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$114 }
	goto $label$112 
	
.LABEL $label$113
	$14 = [0]
	
.LABEL $label$112
	CALL eosio_assert($14, [32])
	$2 = *(($5 + [40]))
	*(($24 + [232])) = (int_64)1397703940
	*($24 + [208]) = *(($0 + [176]))
	*($24 + [224]) = $22
	*($24 + [216]) = $2
	CALL $295(($24 + [240]), ($24 + [192]))
	$19 = ($24 + [40])
	$14 = *($19)
	if ( ((uint_32)$14 >= (uint_32)*(($24 + [44]))) ){ goto $label$118 }
	CALL $51($14, ($24 + [296]), *($24 + [368]), *($24 + [280]), ($24 + [208]))
	*($19) = (*($19) + [40])
	goto $label$117 
	
.LABEL $label$118
	CALL $52($15, ($24 + [296]), ($24 + [368]), ($24 + [280]), ($24 + [208]))
	
.LABEL $label$117
	if ( ((*($24 + [240]) & [1]) == 0) ){ goto $label$119 }
	CALL $276(*(($24 + [248])))
	
.LABEL $label$119
	*(($24 + [20])) = [2]
	$2 = (int_64)0
	$20 = (int_64)59
	$19 = [2368]
	$21 = (int_64)0
	
.LOOP $label$120:
	$22 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)24) ){ goto $label$122 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$124 }
	$14 = ($14 + [165])
	goto $label$123 
	
.LABEL $label$124
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$123
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$122 }
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	goto $label$121 
	
.LABEL $label$122
	$22 = ((int_64)$22 & (int_64)15)
	
.LABEL $label$121
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$120 }
	$2 = (int_64)0
	*($24 + [216]) = (int_64)0
	*($24 + [208]) = $21
	CALL cancel_deferred(($24 + [208]))
	$20 = (int_64)59
	$19 = [4544]
	$21 = (int_64)0
	
.LOOP $label$125:
	$22 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)30) ){ goto $label$127 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$129 }
	$14 = ($14 + [165])
	goto $label$128 
	
.LABEL $label$129
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$128
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$127 }
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	goto $label$126 
	
.LABEL $label$127
	$22 = ((int_64)$22 & (int_64)15)
	
.LABEL $label$126
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$125 }
	*($24 + [216]) = (int_64)0
	*($24 + [208]) = $21
	$2 = *(($0 + [176]))
	CALL $53(($24 + [296]), $24)
	$19 = *($24 + [296])
	CALL send_deferred(($24 + [208]), $2, $19, (*($24 + [300]) - $19), [1])
	$19 = *($24 + [296])
	if ( ($19 == 0) ){ goto $label$130 }
	*($24 + [300]) = $19
	CALL $276($19)
	
.LABEL $label$130
	CALL $54($24)
	$15 = *($24 + [336])
	if ( ($15 == 0) ){ goto $label$131 }
	$17 = ($24 + [340])
	$19 = *($17)
	if ( ((int_32)$19 == (int_32)$15) ){ goto $label$133 }
	
.LOOP $label$134:
	$19 = ($19 + [-24])
	$14 = *($19)
	*($19) = [0]
	if ( ($14 == 0) ){ goto $label$135 }
	CALL $276($14)
	
.LABEL $label$135
	if ( ((int_32)$15 != (int_32)$19) ){ goto $label$134 }
	$19 = *(($24 + [336]))
	goto $label$132 
	
.LABEL $label$133
	$19 = $15
	
.LABEL $label$132
	*($17) = $15
	CALL $276($19)
	
.LABEL $label$131
	if ( ((*($24 + [192]) & [1]) == 0) ){ goto $label$77 }
	CALL $276(*($24 + [200]))
	
.LABEL $label$77
	$19 = *($3 + [40])
	if ( ($19 == 0) ){ goto $label$136 }
	$13 = ((int_64)*(($5 + [8])) * (int_64)(CASTING uint_64)(uint_32 $19))
	CALL eosio_assert((uint_64)(((int_64)$13 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$2 = (int_64)1397704004
	$19 = [0]
	
.LOOP $label$139:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$138 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$140 }
	
.LOOP $label$141:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$138 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$141 }
	
.LABEL $label$140
	$14 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$139 }
	goto $label$137 
	
.LABEL $label$138
	$14 = [0]
	
.LABEL $label$137
	CALL eosio_assert($14, [32])
	CALL _ZNSt3__19to_stringEx(($24 + [208]), ((int_64)$13 / (int_64)*($0 + [172])))
	$19 = CALL $282(($24 + [208]), [0], [4576])
	$14 = ($19 + [8])
	*(($24 + [8])) = *($14)
	*($24) = *($19)
	*($19) = [0]
	*(($19 + [4])) = [0]
	*($14) = [0]
	$19 = CALL $281($24, [2352])
	$14 = ($19 + [8])
	*((($24 + [296]) + [8])) = *($14)
	*($24 + [296]) = *($19)
	*($19) = [0]
	*(($19 + [4])) = [0]
	*($14) = [0]
	if ( ((*($24) & [1]) == 0) ){ goto $label$142 }
	CALL $276(*($24 + [8]))
	
.LABEL $label$142
	if ( ((*($24 + [208]) & [1]) == 0) ){ goto $label$143 }
	CALL $276(*($24 + [216]))
	
.LABEL $label$143
	$2 = CALL current_time()
	*(($24 + [28])) = [0]
	*(($24 + [32])) = [0]
	*($24 + [12]) = [0]
	*($24 + [16]) = [0]
	*($24 + [20]) = [0]
	*($24 + [24]) = [0]
	*($24) = ((CASTING uint_32)(uint_64 ((uint_64)$2 / (uint_64)(int_64)1000000)) + [60])
	*($24 + [36]) = [0]
	*(($24 + [40])) = [0]
	*(($24 + [44])) = [0]
	*($24 + [48]) = [0]
	*(($24 + [52])) = [0]
	*(($24 + [56])) = [0]
	$12 = *(($0 + [176]))
	$15 = ($24 + [36])
	$2 = (int_64)0
	$20 = (int_64)59
	$19 = [1440]
	$21 = (int_64)0
	
.LOOP $label$144:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$149 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$148 }
	$14 = ($14 + [165])
	goto $label$147 
	
.LABEL $label$149
	$22 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$146 }
	goto $label$145 
	
.LABEL $label$148
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$147
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$146
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$145
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$144 }
	*($24 + [320]) = $21
	*($24 + [312]) = $12
	$2 = (int_64)0
	$22 = (int_64)59
	$19 = [1776]
	$21 = (int_64)0
	
.LOOP $label$150:
	$20 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$151 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$153 }
	$14 = ($14 + [165])
	goto $label$152 
	
.LABEL $label$153
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$152
	$20 = ((int_64)(CASTING uint_64)(uint_32 ($14 & [31])) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$151
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$20 | (int_64)$21)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$150 }
	*($24 + [192]) = $21
	$2 = (int_64)0
	$20 = (int_64)59
	$19 = [1792]
	$21 = (int_64)0
	
.LOOP $label$154:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$159 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$158 }
	$14 = ($14 + [165])
	goto $label$157 
	
.LABEL $label$159
	$22 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$156 }
	goto $label$155 
	
.LABEL $label$158
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$157
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$156
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$155
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$154 }
	*($24 + [368]) = $21
	*(($24 + [232])) = (int_64)357812225028
	*($24 + [216]) = $8
	*($24 + [208]) = $12
	*($24 + [224]) = $13
	CALL $295(($24 + [240]), ($24 + [296]))
	$19 = ($24 + [40])
	$14 = *($19)
	if ( ((uint_32)$14 >= (uint_32)*(($24 + [44]))) ){ goto $label$161 }
	CALL $51($14, ($24 + [312]), *($24 + [192]), *($24 + [368]), ($24 + [208]))
	*($19) = (*($19) + [40])
	goto $label$160 
	
.LABEL $label$161
	CALL $52($15, ($24 + [312]), ($24 + [192]), ($24 + [368]), ($24 + [208]))
	
.LABEL $label$160
	if ( ((*($24 + [240]) & [1]) == 0) ){ goto $label$162 }
	CALL $276(*(($24 + [248])))
	
.LABEL $label$162
	*(($24 + [20])) = [2]
	$2 = (int_64)0
	$20 = (int_64)59
	$19 = [2368]
	$21 = (int_64)0
	
.LOOP $label$163:
	$22 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)24) ){ goto $label$165 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$167 }
	$14 = ($14 + [165])
	goto $label$166 
	
.LABEL $label$167
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$166
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$165 }
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	goto $label$164 
	
.LABEL $label$165
	$22 = ((int_64)$22 & (int_64)15)
	
.LABEL $label$164
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$163 }
	$2 = (int_64)0
	*($24 + [216]) = (int_64)0
	*($24 + [208]) = $21
	CALL cancel_deferred(($24 + [208]))
	$20 = (int_64)59
	$19 = [2368]
	$21 = (int_64)0
	
.LOOP $label$168:
	$22 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)24) ){ goto $label$170 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$172 }
	$14 = ($14 + [165])
	goto $label$171 
	
.LABEL $label$172
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$171
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$170 }
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	goto $label$169 
	
.LABEL $label$170
	$22 = ((int_64)$22 & (int_64)15)
	
.LABEL $label$169
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$168 }
	*($24 + [216]) = (int_64)0
	*($24 + [208]) = $21
	$2 = *(($0 + [176]))
	CALL $53(($24 + [312]), $24)
	$19 = *($24 + [312])
	CALL send_deferred(($24 + [208]), $2, $19, (*($24 + [316]) - $19), [1])
	$19 = *($24 + [312])
	if ( ($19 == 0) ){ goto $label$173 }
	*($24 + [316]) = $19
	CALL $276($19)
	
.LABEL $label$173
	CALL $54($24)
	if ( ((*($24 + [296]) & [1]) == 0) ){ goto $label$136 }
	CALL $276(*($24 + [304]))
	
.LABEL $label$136
	CALL eosio_assert([1], [576])
	$13 = (int_64)357812225028
	$19 = [0]
	$2 = (int_64)1397704004
	
.LOOP $label$176:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$175 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$177 }
	
.LOOP $label$178:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$175 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$178 }
	
.LABEL $label$177
	$14 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$176 }
	goto $label$174 
	
.LABEL $label$175
	$14 = [0]
	
.LABEL $label$174
	CALL eosio_assert($14, [32])
	*(($24 + [344])) = [0]
	*($24 + [328]) = (int_64)-1
	$2 = (int_64)0
	*($24 + [336]) = (int_64)0
	$22 = *(($0 + [176]))
	*($24 + [312]) = $22
	*($24 + [320]) = $8
	$12 = (int_64)0
	$19 = CALL db_find_i64($22, $8, (int_64)3607749779137757184, (int_64)1397704004)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$179 }
	$19 = CALL $13(($24 + [312]), $19)
	CALL eosio_assert(((int_32)*($19 + [16]) == (int_32)($24 + [312])), [176])
	$13 = *($19 + [8])
	$12 = *($19)
	
.LABEL $label$179
	$20 = (int_64)59
	$19 = [1424]
	$21 = (int_64)0
	
.LOOP $label$180:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$185 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$184 }
	$14 = ($14 + [165])
	goto $label$183 
	
.LABEL $label$185
	$22 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$182 }
	goto $label$181 
	
.LABEL $label$184
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$183
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$182
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$181
	$19 = ($19 + [1])
	$20 = ((int_64)$20 + (int_64)-5)
	$21 = ((int_64)$22 | (int_64)$21)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$180 }
	*(($24 + [32])) = [0]
	*($24 + [8]) = $8
	*($24) = $21
	*($24 + [16]) = (int_64)-1
	*($24 + [24]) = (int_64)0
	$19 = CALL $57($24, (int_64)5459781, [1936])
	*((($24 + [296]) + [8])) = *(($19 + [8]))
	*($24 + [296]) = *($19)
	$15 = *($24 + [24])
	if ( ($15 == 0) ){ goto $label$186 }
	$3 = ($24 + [28])
	$19 = *($3)
	if ( ((int_32)$19 == (int_32)$15) ){ goto $label$188 }
	
.LOOP $label$189:
	$19 = ($19 + [-24])
	$14 = *($19)
	*($19) = [0]
	if ( ($14 == 0) ){ goto $label$190 }
	CALL $276($14)
	
.LABEL $label$190
	if ( ((int_32)$15 != (int_32)$19) ){ goto $label$189 }
	$19 = *(($24 + [24]))
	goto $label$187 
	
.LABEL $label$188
	$19 = $15
	
.LABEL $label$187
	*($3) = $15
	CALL $276($19)
	
.LABEL $label$186
	$19 = *(($5 + [28]))
	*((($24 + [280]) + [8])) = [0]
	*($24 + [280]) = (int_64)0
	if ( ($19 == 0) ){ goto $label$198 }
	$19 = CALL strlen([3136])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$197 }
	*($24 + [280]) = ($19 << [1])
	$14 = (($24 + [280]) | [1])
	if ( $19 ){ goto $label$196 }
	goto $label$195 
	
.LABEL $label$198
	$19 = CALL strlen([3152])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$194 }
	*($24 + [280]) = ($19 << [1])
	$14 = (($24 + [280]) | [1])
	if ( $19 ){ goto $label$193 }
	goto $label$192 
	
.LABEL $label$197
	$15 = (($19 + [16]) & [-16])
	$14 = CALL $275($15)
	*($24 + [280]) = ($15 | [1])
	*($24 + [288]) = $14
	*($24 + [284]) = $19
	
.LABEL $label$196
	CALL memcpy($14, [3136], $19)
	
.LABEL $label$195
	$19 = ($14 + $19)
	goto $label$191 
	
.LABEL $label$194
	$15 = (($19 + [16]) & [-16])
	$14 = CALL $275($15)
	*($24 + [280]) = ($15 | [1])
	*($24 + [288]) = $14
	*($24 + [284]) = $19
	
.LABEL $label$193
	CALL memcpy($14, [3152], $19)
	
.LABEL $label$192
	$19 = ($14 + $19)
	
.LABEL $label$191
	*($19) = [0]
	$2 = CALL current_time()
	*(($24 + [236])) = [0]
	*(($24 + [240])) = [0]
	*($24 + [220]) = [0]
	*($24 + [224]) = [0]
	*($24 + [228]) = [0]
	*($24 + [232]) = [0]
	*($24 + [208]) = ((CASTING uint_32)(uint_64 ((uint_64)$2 / (uint_64)(int_64)1000000)) + [60])
	*($24 + [244]) = [0]
	*(($24 + [248])) = [0]
	*(($24 + [252])) = [0]
	*($24 + [256]) = [0]
	*(($24 + [260])) = [0]
	*(($24 + [264])) = [0]
	$8 = *(($0 + [176]))
	$3 = ($24 + [244])
	$2 = (int_64)0
	$20 = (int_64)59
	$19 = [1440]
	$21 = (int_64)0
	
.LOOP $label$199:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$204 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$203 }
	$14 = ($14 + [165])
	goto $label$202 
	
.LABEL $label$204
	$22 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$201 }
	goto $label$200 
	
.LABEL $label$203
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$202
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$201
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$200
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$199 }
	*($24 + [200]) = $21
	*($24 + [192]) = $8
	$2 = (int_64)0
	$22 = (int_64)59
	$19 = [1776]
	$21 = (int_64)0
	
.LOOP $label$205:
	$20 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$206 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$208 }
	$14 = ($14 + [165])
	goto $label$207 
	
.LABEL $label$208
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$207
	$20 = ((int_64)(CASTING uint_64)(uint_32 ($14 & [31])) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$206
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$20 | (int_64)$21)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$205 }
	*($24 + [184]) = $21
	$2 = (int_64)0
	$20 = (int_64)59
	$19 = [4624]
	$21 = (int_64)0
	
.LOOP $label$209:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$214 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$213 }
	$14 = ($14 + [165])
	goto $label$212 
	
.LABEL $label$214
	$22 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$211 }
	goto $label$210 
	
.LABEL $label$213
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$212
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$211
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$210
	$19 = ($19 + [1])
	$20 = ((int_64)$20 + (int_64)-5)
	$21 = ((int_64)$22 | (int_64)$21)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$209 }
	*($24 + [176]) = $21
	CALL eosio_assert((uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$15 = ($5 + [8])
	$19 = [0]
	
.LOOP $label$217:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $23) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$216 }
	$23 = (uint_64)$23 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$23) & (int_64)255) != (int_64)0) ){ goto $label$218 }
	
.LOOP $label$219:
	$23 = (uint_64)$23 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$23) & (int_64)255) != (int_64)0) ){ goto $label$216 }
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$219 }
	
.LABEL $label$218
	$14 = [1]
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[7]) ){ goto $label$217 }
	goto $label$215 
	
.LABEL $label$216
	$14 = [0]
	
.LABEL $label$215
	CALL eosio_assert($14, [32])
	*($24 + [8]) = *(($5 + [32]))
	*(($24 + [28])) = *(($15 + [12]))
	*(($24 + [24])) = *(($15 + [8]))
	*(($24 + [20])) = *(($15 + [4]))
	*($24) = $1
	*($24 + [16]) = *($15)
	$15 = ($24 + [32])
	CALL $295($15, ($24 + [280]))
	$19 = *(($5 + [24]))
	*(($24 + [56])) = $7
	*($24 + [64]) = $9
	*($24 + [44]) = $19
	*($24 + [48]) = $11
	CALL $295(($24 + [68]), ($24 + [352]))
	*(($24 + [88])) = $7
	*(($24 + [104])) = $13
	*(($24 + [124])) = *((($24 + [296]) + [12]))
	*(($24 + [120])) = *((($24 + [296]) + [8]))
	*(($24 + [116])) = *($24 + [300])
	*($24 + [80]) = $10
	*($24 + [96]) = $12
	*($24 + [112]) = *($24 + [296])
	*($24 + [128]) = *(($5 + [80]))
	*(($24 + [168])) = *(($5 + [72]))
	*(($24 + [160])) = *(($5 + [64]))
	*(($24 + [152])) = *(($5 + [56]))
	*($24 + [144]) = *($5 + [48])
	$14 = *(($24 + [248]))
	if ( ((uint_32)$14 >= (uint_32)*(($24 + [252]))) ){ goto $label$223 }
	*($14 + [8]) = *($24 + [176])
	*($14) = *($24 + [184])
	*($14 + [16 align=4]) = (int_64)0
	*(($3 = ($14 + [24]))) = [0]
	$19 = CALL $275([16])
	*($14 + [16]) = $19
	$9 = ($19 + [16])
	*($3) = $9
	*(($19 + [8])) = *((($24 + [192]) + [8]))
	*($19) = *($24 + [192])
	*(($14 + [20])) = $9
	*($14 + [28]) = [0]
	*(($14 + [32])) = [0]
	*(($14 + [36])) = [0]
	$19 = *($15)
	$15 = ( *(($24 + [36])) ? uint_32($19 >> [1]) : ($19 & [1]) )
	$19 = ($15 + [144])
	$2 = (CASTING uint_64)(uint_32 $15)
	$3 = ($14 + [28])
	
.LOOP $label$224:
	$19 = ($19 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$224 }
	$15 = *(($24 + [68]))
	$15 = ( *(($24 + [72])) ? uint_32($15 >> [1]) : ($15 & [1]) )
	$19 = ($15 + $19)
	$2 = (CASTING uint_64)(uint_32 $15)
	
.LOOP $label$225:
	$19 = ($19 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$225 }
	if ( ($19 == 0) ){ goto $label$222 }
	CALL $41($3, $19)
	$15 = *(($14 + [32]))
	$19 = *(($14 + [28]))
	goto $label$221 
	
.LABEL $label$223
	CALL $188($3, ($24 + [192]), ($24 + [184]), ($24 + [176]), $24)
	goto $label$220 
	
.LABEL $label$222
	$15 = [0]
	$19 = [0]
	
.LABEL $label$221
	*($24 + [372]) = $19
	*($24 + [368]) = $19
	*($24 + [376]) = $15
	*($24 + [384]) = ($24 + [368])
	*($24 + [392]) = $24
	CALL $126(($24 + [392]), ($24 + [384]))
	*(($19 = (($24 + [208]) + [40]))) = (*($19) + [40])
	
.LABEL $label$220
	if ( ((*($24 + [68]) & [1]) == 0) ){ goto $label$226 }
	CALL $276(*(($24 + [76])))
	
.LABEL $label$226
	if ( ((*($24 + [32]) & [1]) == 0) ){ goto $label$227 }
	CALL $276(*(($24 + [40])))
	
.LABEL $label$227
	*(($24 + [228])) = [1]
	$2 = (int_64)0
	$20 = (int_64)59
	$19 = [4640]
	$21 = (int_64)0
	
.LOOP $label$228:
	$22 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)40) ){ goto $label$230 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$232 }
	$14 = ($14 + [165])
	goto $label$231 
	
.LABEL $label$232
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$231
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$230 }
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	goto $label$229 
	
.LABEL $label$230
	$22 = ((int_64)$22 & (int_64)15)
	
.LABEL $label$229
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$228 }
	$2 = (int_64)0
	*($24 + [8]) = (int_64)0
	*($24) = $21
	CALL cancel_deferred($24)
	$20 = (int_64)59
	$19 = [4640]
	$21 = (int_64)0
	
.LOOP $label$233:
	$22 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)40) ){ goto $label$235 }
	$14 = *($19)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$237 }
	$14 = ($14 + [165])
	goto $label$236 
	
.LABEL $label$237
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$236
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$235 }
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	goto $label$234 
	
.LABEL $label$235
	$22 = ((int_64)$22 & (int_64)15)
	
.LABEL $label$234
	$19 = ($19 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$233 }
	*($24 + [8]) = (int_64)0
	*($24) = $21
	$2 = *(($0 + [176]))
	CALL $53(($24 + [192]), ($24 + [208]))
	$19 = *($24 + [192])
	CALL send_deferred($24, $2, $19, (*($24 + [196]) - $19), [1])
	$19 = *($24 + [192])
	if ( ($19 == 0) ){ goto $label$238 }
	*($24 + [196]) = $19
	CALL $276($19)
	
.LABEL $label$238
	CALL eosio_assert($6, [2448])
	CALL eosio_assert($6, [2496])
	$19 = CALL db_next_i64(*($5 + [92]), $24)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$239 }
	CALL $99($4, $19)
	
.LABEL $label$239
	CALL $100($4, $5)
	CALL $54(($24 + [208]))
	if ( ((*($24 + [280]) & [1]) == 0) ){ goto $label$240 }
	CALL $276(*($24 + [288]))
	
.LABEL $label$240
	$5 = *($24 + [336])
	if ( ($5 == 0) ){ goto $label$241 }
	$0 = ($24 + [340])
	$19 = *($0)
	if ( ((int_32)$19 == (int_32)$5) ){ goto $label$243 }
	
.LOOP $label$244:
	$19 = ($19 + [-24])
	$14 = *($19)
	*($19) = [0]
	if ( ($14 == 0) ){ goto $label$245 }
	CALL $276($14)
	
.LABEL $label$245
	if ( ((int_32)$5 != (int_32)$19) ){ goto $label$244 }
	$19 = *(($24 + [336]))
	goto $label$242 
	
.LABEL $label$243
	$19 = $5
	
.LABEL $label$242
	*($0) = $5
	CALL $276($19)
	
.LABEL $label$241
	if ( ((*($24 + [352]) & [1]) == 0) ){ goto $label$246 }
	CALL $276(*($24 + [360]))
	
.LABEL $label$246
	*([0] + [4]) = ($24 + [400])
	return (unreachable)
	
.LABEL $label$12
	CALL $277(($24 + [352]))
	
.LABEL $label$11
	CALL $277(($24 + [280]))
	
.LABEL $label$10
	CALL $277($24)
	
.LABEL $label$9
	CALL $277(($24 + [208]))
	
.LABEL $label$8
	CALL $277(($24 + [280]))
	
.LABEL $label$7
	CALL $277(($24 + [208]))
	
.LABEL $label$6
	CALL $277(($24 + [296]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $218 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [32])) = (int_64)1398362884
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = (int_64)0
	CALL eosio_assert([1], [576])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [32])
	*($9 + [40]) = (int_64)0
	*($9 + [84]) = $5
	*($9 + [80]) = $5
	*($9 + [88]) = ($5 + $3)
	*($9 + [48]) = ($9 + [80])
	*($9 + [64]) = ($9 + [16])
	CALL $270(($9 + [64]), ($9 + [48]))
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($1 = (($9 + [48]) + [8]))) = *(($9 + [32]))
	$6 = *($9 + [16])
	*($9 + [48]) = *($9 + [24])
	$7 = *(($9 + [44]))
	$5 = *(($9 + [40]))
	*((($9 + [64]) + [8])) = *($1)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*(($9 + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9) = $4
	CALL void $1((int_32 $6), (int_64 $9), (int_32 $5), (int_32 $7), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

void .FUNC $186 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($2 + [4]), ($3 + [80]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [640])
	CALL memcpy(*($2 + [4]), ($3 + [88]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($2 + [4]), ($0 + [96]), [8])
	$3 = (*($2 + [4]) + [8])
	*($2 + [4]) = $3
	CALL eosio_assert(((int_32)(*($2 + [8]) - $3) > (int_32)[7]), [640])
	CALL memcpy(*($2 + [4]), ($0 + [104]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($2 + [4]), ($0 + [112]), [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((int_32)(*($2 + [8]) - $1) > (int_32)[7]), [640])
	CALL memcpy(*($2 + [4]), ($0 + [120]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC _ZN12thedeosgames5dicepEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	float_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_32 $22
	$22 = (*([0] + [4]) - [320])
	*([0] + [4]) = $22
	CALL require_auth(*($0 + [176]))
	$15 = [0]
	$13 = CALL db_lowerbound_i64(*($0 + [2048]), *(($0 + [2056])), (int_64)-4417020450001911808, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$1 }
	$15 = CALL $171(($0 + [2048]), $13)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$15 != (int_32)[0]), [1520])
	CALL eosio_assert((*($15 + [8]) == 0), [144])
	$5 = *(($0 + [1752]))
	$14 = *(($0 + [1756]))
	if ( ((int_32)$14 == (int_32)$5) ){ goto $label$2 }
	$15 = ($14 + [-24])
	$12 = ([0] - $5)
	
.LOOP $label$3:
	if ( ((int_64)*(*($15)) == (int_64)$1) ){ goto $label$2 }
	$14 = $15
	$13 = ($15 + [-24])
	$15 = $13
	if ( ((int_32)($13 + $12) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$12 = ($0 + [1728])
	if ( ((int_32)$14 == (int_32)$5) ){ goto $label$5 }
	$14 = *(($14 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [72]) == (int_32)$12), [176])
	goto $label$4 
	
.LABEL $label$5
	$14 = [0]
	$15 = CALL db_find_i64(*(($0 + [1728])), *(($0 + [1736])), (int_64)5445034581344387072, $1)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$4 }
	$14 = CALL $95($12, $15)
	CALL eosio_assert(((int_32)*($14 + [72]) == (int_32)$12), [176])
	
.LABEL $label$4
	$2 = ((int_32)$14 != (int_32)[0])
	CALL eosio_assert($2, [1600])
	CALL eosio_assert(((int_32)*($14 + [56]) == (int_32)[1]), [4448])
	$3 = *(($14 + [16]))
	$5 = *($14 + [28])
	$4 = *($14 + [40])
	$15 = *($14 + [24])
	$6 = ((float_32)CALL floorf((DEMOTE float_32)(float_64 ((float_64)((float_64)(float_64)100 / (float_64)(CASTING float_64)(uint_32 ( $15 ? ([99] - $15) : ((int_32)*($14 + [32]) == (int_32)[1]) ))) * (float_64)(float_64)100))) / (float_32)(float_32)100)
	$7 = (Rounds 0)(((float_32)$6 * (float_32)(CASTING float_32)(int_64 *($14 + [8]))))
	$15 = [4496]
	$13 = *([4496])
	if ( ($13 == 0) ){ goto $label$6 }
	
.LOOP $label$8:
	if ( ((int_32)$13 == (int_32)[37]) ){ goto $label$7 }
	CALL prints_l($15, [1])
	$15 = ($15 + [1])
	$13 = *($15)
	if ( $13 ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL printsf($6)
	CALL prints(($15 + [1]))
	
.LABEL $label$6
	$18 = *(($14 + [8]))
	CALL eosio_assert((uint_64)((int_64))((int_64)4611686018427387903 - $18) <= (int_64)9223372036854775807), [576])
	$16 = (int_64))((int_64)0 - $18)
	$15 = [0]
	$21 = (uint_64)$3 >> (uint_64)(int_64)8
	$18 = $21)
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$13 = [1]
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$13 = [0]
	
.LABEL $label$9
	CALL eosio_assert($13, [32])
	$8 = *(($14 + [24]))
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$18 }
	if ( ((int_32)*(($14 + [32])) == (int_32)[1]) ){ goto $label$17 }
	
.LABEL $label$18
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$19 }
	if ( (*(($14 + [32])) == 0) ){ goto $label$17 }
	
.LABEL $label$19
	$18 = *(($14 + [8]))
	$15 = [4512]
	$13 = *([4512])
	if ( ($13 == 0) ){ goto $label$15 }
	
.LOOP $label$20:
	if ( ((int_32)$13 == (int_32)[37]) ){ goto $label$16 }
	CALL prints_l($15, [1])
	$15 = ($15 + [1])
	$13 = *($15)
	if ( $13 ){ goto $label$20 }
	goto $label$15 
	
.LABEL $label$17
	CALL eosio_assert((uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$15 = [0]
	$18 = $21
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$13 = [1]
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$13 = [0]
	
.LABEL $label$21
	CALL eosio_assert($13, [32])
	*($22 + [248]) = $3
	$15 = ($0 + [176])
	$18 = *($15)
	*((($22 + [24]) + [8])) = $3
	*($22 + [240]) = $7
	*($22 + [24]) = $7
	CALL _ZN12thedeosgames11sub_balanceEyN5eosio5assetE($0, $18, ($22 + [24]))
	*($22 + [232]) = $3
	$18 = *($15)
	*((($22 + [8]) + [8])) = $3
	*($22 + [224]) = $7
	*($22 + [8]) = $7
	CALL _ZN12thedeosgames11add_balanceEyN5eosio5assetEy($0, $4, ($22 + [8]), $18)
	$16 = (int_64)
	CALL eosio_assert((uint_64)(((int_64)$16($7 - *(($14 + [8])))) + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$15 = [0]
	$18 = $21
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$13 = [1]
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$13 = [0]
	
.LABEL $label$26
	CALL eosio_assert($13, [32])
	$5 = [1824]
	goto $label$14 
	
.LABEL $label$16
	CALL printui((CASTING uint_64)(uint_32 $5))
	$15 = ($15 + [1])
	$13 = *($15)
	if ( ($13 == 0) ){ goto $label$15 }
	
.LOOP $label$32:
	if ( ((int_32)$13 == (int_32)[37]) ){ goto $label$31 }
	CALL prints_l($15, [1])
	$15 = ($15 + [1])
	$13 = *($15)
	if ( $13 ){ goto $label$32 }
	goto $label$15 
	
.LABEL $label$31
	CALL printui((CASTING uint_64)(uint_32 $8))
	$15 = ($15 + [1])
	$13 = *($15)
	if ( ($13 == 0) ){ goto $label$15 }
	
.LOOP $label$34:
	if ( ((int_32)$13 == (int_32)[37]) ){ goto $label$33 }
	CALL prints_l($15, [1])
	$15 = ($15 + [1])
	$13 = *($15)
	if ( $13 ){ goto $label$34 }
	goto $label$15 
	
.LABEL $label$33
	CALL printi($18)
	CALL prints(($15 + [1]))
	
.LABEL $label$15
	$5 = [1664]
	
.LABEL $label$14
	CALL eosio_assert($2, [288])
	CALL eosio_assert(((int_32)*($14 + [72]) == (int_32)$12), [336])
	CALL eosio_assert(((int_64)*(($0 + [1728])) == (int_64)CALL $fimport$14()), [384])
	*($14 + [56]) = [2]
	$18 = *($14)
	CALL eosio_assert([1], [448])
	*($22 + [192]) = (($22 + [256]) + [64])
	*($22 + [188]) = ($22 + [256])
	*($22 + [184]) = ($22 + [256])
	CALL $173(($22 + [184]), $14)
	CALL db_update_i64(*($14 + [76]), (int_64)0, ($22 + [256]), [64])
	$15 = ($0 + [1744])
	if ( (uint_64)($18 <= *($15)) ){ goto $label$35 }
	*($15) = ( (int_64)-2 ? ((int_64)$18 + (int_64)1) : ((uint_64)$18 > (uint_64)(int_64)-3) )
	
.LABEL $label$35
	CALL eosio_assert([1], [576])
	$15 = [0]
	$18 = $21
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	
.LOOP $label$40:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$40 }
	
.LABEL $label$39
	$13 = [1]
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$37
	$13 = [0]
	
.LABEL $label$36
	CALL eosio_assert($13, [32])
	*(($22 + [216])) = [0]
	*($22 + [200]) = (int_64)-1
	$18 = (int_64)0
	*($22 + [208]) = (int_64)0
	$20 = *(($0 + [176]))
	*($22 + [184]) = $20
	*($22 + [192]) = $4
	$9 = (int_64)0
	$10 = $3
	$15 = CALL db_find_i64($20, $4, (int_64)3607749779137757184, $21)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$41 }
	$15 = CALL $13(($22 + [184]), $15)
	CALL eosio_assert(((int_32)*($15 + [16]) == (int_32)($22 + [184])), [176])
	$10 = *($15 + [8])
	$9 = *($15)
	
.LABEL $label$41
	$17 = (int_64)59
	$15 = [1424]
	$19 = (int_64)0
	
.LOOP $label$42:
	if ( ((uint_64)$18 > (uint_64)(int_64)10) ){ goto $label$47 }
	$13 = *($15)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$46 }
	$13 = ($13 + [165])
	goto $label$45 
	
.LABEL $label$47
	$20 = (int_64)0
	if ( ((int_64)$18 == (int_64)11) ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$46
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$45
	$20 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$44
	$20 = ((int_64)((int_64)$20 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$43
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)-5)
	$19 = ((int_64)$20 | (int_64)$19)
	$18 = ((int_64)$18 + (int_64)1)
	if ( ((int_64)$18 != (int_64)13) ){ goto $label$42 }
	*(($22 + [288])) = [0]
	*($22 + [264]) = $4
	*($22 + [256]) = $19
	*($22 + [272]) = (int_64)-1
	$18 = (int_64)0
	*($22 + [280]) = (int_64)0
	$15 = CALL $57(($22 + [256]), (int_64)5459781, [1936])
	*((($22 + [168]) + [8])) = *(($15 + [8]))
	*($22 + [168]) = *($15)
	$12 = *($22 + [280])
	if ( ($12 == 0) ){ goto $label$48 }
	$2 = ($22 + [284])
	$15 = *($2)
	if ( ((int_32)$15 == (int_32)$12) ){ goto $label$50 }
	
.LOOP $label$51:
	$15 = ($15 + [-24])
	$13 = *($15)
	*($15) = [0]
	if ( ($13 == 0) ){ goto $label$52 }
	CALL $276($13)
	
.LABEL $label$52
	if ( ((int_32)$12 != (int_32)$15) ){ goto $label$51 }
	$15 = *(($22 + [280]))
	goto $label$49 
	
.LABEL $label$50
	$15 = $12
	
.LABEL $label$49
	*($2) = $12
	CALL $276($15)
	
.LABEL $label$48
	$11 = *($0)
	$4 = *(($0 + [176]))
	$17 = (int_64)59
	$15 = [1440]
	$19 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$18 > (uint_64)(int_64)5) ){ goto $label$58 }
	$13 = *($15)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$13 = ($13 + [165])
	goto $label$56 
	
.LABEL $label$58
	$20 = (int_64)0
	if ( ((uint_64)$18 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$20 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$20 = ((int_64)((int_64)$20 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$54
	$15 = ($15 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$19 = ((int_64)$20 | (int_64)$19)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$53 }
	*($22 + [264]) = $19
	*($22 + [256]) = $4
	$15 = *(($14 + [32]))
	CALL eosio_assert((uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$0 = ( [3136] ? [3152] : $15 )
	$12 = ($14 + [8])
	$15 = [0]
	
.LOOP $label$61:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $21) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$60 }
	$21 = (uint_64)$21 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$21) & (int_64)255) != (int_64)0) ){ goto $label$62 }
	
.LOOP $label$63:
	$21 = (uint_64)$21 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$21) & (int_64)255) != (int_64)0) ){ goto $label$60 }
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$63 }
	
.LABEL $label$62
	$13 = [1]
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$61 }
	goto $label$59 
	
.LABEL $label$60
	$13 = [0]
	
.LABEL $label$59
	CALL eosio_assert($13, [32])
	*($22 + [40]) = $1
	*($22 + [48]) = *(($14 + [40]))
	*(($22 + [64])) = *(($12 + [8]))
	$18 = *($12)
	*((($22 + [40]) + [40])) = [0]
	*($22 + [56]) = $18
	*($22 + [72]) = (int_64)0
	$13 = ($22 + [72])
	$15 = CALL strlen($0)
	if ( ((uint_32)$15 >= (uint_32)[-16]) ){ goto $label$65 }
	if ( ((uint_32)$15 >= (uint_32)[11]) ){ goto $label$68 }
	*(($22 + [72])) = ($15 << [1])
	$13 = ($13 + [1])
	if ( $15 ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$68
	$12 = (($15 + [16]) & [-16])
	$13 = CALL $275($12)
	*(($22 + [72])) = ($12 | [1])
	*(($22 + [80])) = $13
	*(($22 + [76])) = $15
	
.LABEL $label$67
	CALL memcpy($13, $0, $15)
	
.LABEL $label$66
	*(($13 + $15)) = [0]
	$15 = *(($14 + [24]))
	*(($22 + [96])) = $3
	*($22 + [88]) = $7
	*($22 + [84]) = $15
	$15 = *(($14 + [28]))
	*(($22 + [116])) = [0]
	*(($22 + [112])) = [0]
	*($22 + [108]) = [0]
	*($22 + [104]) = $15
	$13 = ($22 + [108])
	$15 = CALL strlen($5)
	if ( ((uint_32)$15 >= (uint_32)[-16]) ){ goto $label$64 }
	if ( ((uint_32)$15 >= (uint_32)[11]) ){ goto $label$71 }
	*(($22 + [108])) = ($15 << [1])
	$13 = ($13 + [1])
	if ( $15 ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$71
	$14 = (($15 + [16]) & [-16])
	$13 = CALL $275($14)
	*(($22 + [108])) = ($14 | [1])
	*(($22 + [116])) = $13
	*(($22 + [112])) = $15
	
.LABEL $label$70
	CALL memcpy($13, $5, $15)
	
.LABEL $label$69
	*(($13 + $15)) = [0]
	*(($22 + [128])) = $3
	*(($22 + [144])) = $10
	*(($22 + [164])) = *(($22 + [180]))
	*(($22 + [160])) = *(($22 + [176]))
	*(($22 + [156])) = *($22 + [172])
	*($22 + [120]) = $16
	*($22 + [136]) = $9
	*($22 + [152]) = *($22 + [168])
	CALL $181($11, ($22 + [256]), ($22 + [40]))
	if ( ((*(($22 + [108])) & [1]) == 0) ){ goto $label$72 }
	CALL $276(*(($22 + [116])))
	
.LABEL $label$72
	if ( ((*(($22 + [72])) & [1]) == 0) ){ goto $label$73 }
	CALL $276(*(($22 + [80])))
	
.LABEL $label$73
	$14 = *($22 + [208])
	if ( ($14 == 0) ){ goto $label$74 }
	$12 = ($22 + [212])
	$15 = *($12)
	if ( ((int_32)$15 == (int_32)$14) ){ goto $label$76 }
	
.LOOP $label$77:
	$15 = ($15 + [-24])
	$13 = *($15)
	*($15) = [0]
	if ( ($13 == 0) ){ goto $label$78 }
	CALL $276($13)
	
.LABEL $label$78
	if ( ((int_32)$14 != (int_32)$15) ){ goto $label$77 }
	$15 = *(($22 + [208]))
	goto $label$75 
	
.LABEL $label$76
	$15 = $14
	
.LABEL $label$75
	*($12) = $14
	CALL $276($15)
	
.LABEL $label$74
	*([0] + [4]) = ($22 + [320])
	return (unreachable)
	
.LABEL $label$65
	CALL $277($13)
	
.LABEL $label$64
	CALL $277($13)
	(unreachable)
}

void .FUNC _ZN12thedeosgames8slotscmcEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	float_64 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_32 $24
	$24 = (*([0] + [4]) - [512])
	*([0] + [4]) = $24
	CALL require_auth(*($0 + [176]))
	$6 = *(($0 + [1992]))
	$4 = *(($0 + [1996]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$1 }
	$17 = ($4 + [-24])
	$15 = ([0] - $6)
	
.LOOP $label$2:
	if ( ((int_64)*(*($17)) == (int_64)$1) ){ goto $label$1 }
	$4 = $17
	$16 = ($17 + [-24])
	$17 = $16
	if ( ((int_32)($16 + $15) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [1968])
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$4 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [88]) == (int_32)$3), [176])
	goto $label$3 
	
.LABEL $label$4
	$4 = [0]
	$17 = CALL db_find_i64(*(($0 + [1968])), *(($0 + [1976])), (int_64)-4293729101915443200, $1)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $117($3, $17)
	CALL eosio_assert(((int_32)*($4 + [88]) == (int_32)$3), [176])
	
.LABEL $label$3
	$5 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($5, [1600])
	*(($17 = (($24 + [496]) + [8]))) = *(($4 + [16]))
	$22 = *($4 + [8])
	*((($24 + [64]) + [12])) = *((($24 + [496]) + [12]))
	*((($24 + [64]) + [8])) = *($17)
	*($24 + [496]) = $22
	*($24 + [68]) = *($24 + [500])
	*($24 + [64]) = *($24 + [496])
	$22 = (CASTING uint_64)(uint_32 (CALL _ZN12thedeosgames7tkncodeEN5eosio5assetE($24, ($24 + [64])) + [1]))
	$18 = *(($0 + [2032]))
	$15 = *(($0 + [2036]))
	if ( ((int_32)$15 == (int_32)$18) ){ goto $label$5 }
	$17 = ($15 + [-24])
	$6 = ([0] - $18)
	
.LOOP $label$6:
	if ( ((int_64)*(*($17)) == (int_64)$22) ){ goto $label$5 }
	$15 = $17
	$16 = ($17 + [-24])
	$17 = $16
	if ( ((int_32)($16 + $6) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$17 = ($0 + [2008])
	if ( ((int_32)$15 == (int_32)$18) ){ goto $label$8 }
	$15 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*($15 + [56]) == (int_32)$17), [176])
	goto $label$7 
	
.LABEL $label$8
	$15 = [0]
	$16 = CALL db_find_i64(*(($0 + [2008])), *(($0 + [2016])), (int_64)-4293729097406218240, $22)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$7 }
	$15 = CALL $6($17, $16)
	CALL eosio_assert(((int_32)*($15 + [56]) == (int_32)$17), [176])
	
.LABEL $label$7
	$6 = ($4 + [8])
	CALL eosio_assert(((int_32)$15 != (int_32)[0]), [1520])
	CALL eosio_assert((*($15 + [8]) == 0), [144])
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)-1) <= (int_64)999), [1552])
	$22 = ((int_64)((int_64)((int_64)((uint_64)$2 % (uint_64)((int_64)$1 + (int_64)1)) + (int_64)$2) + (int_64)((uint_64)$1 % (uint_64)$2)) + (int_64)(CASTING uint_64)(uint_32 ((CALL tapos_block_prefix() + CALL $fimport$43()) + (CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$15() / (uint_64)(int_64)1000000)))))
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*($0 + [2272]) = $22 ^ (int_64)$22))
	*($0 + [2208]) = ((int_64)$22 * (int_64)2685821657736338717)
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*($0 + [2272]) = $22 ^ (int_64)$22))
	*(($0 + [2212])) = ((int_64)$22 * (int_64)2685821657736338717)
	$17 = [2216]
	
.LOOP $label$9:
	$22 = *($16)
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*(($16 = ($0 + [2272]))) = $22 ^ (int_64)$22))
	*(($0 + $17)) = ((int_64)$22 * (int_64)2685821657736338717)
	$17 = ($17 + [4])
	if ( ((int_32)$17 != (int_32)[2272]) ){ goto $label$9 }
	$22 = *($17)
	$22 = ((int_64)((int_64)$22 << (int_64)31) ^ (int_64)$22)
	$18 = ($0 + [2208])
	$22 = *($18)
	$22 = ((int_64)((int_64)((int_64)(uint_64)$22 >> (uint_64)(int_64)30) ^ (int_64)$22) ^ (int_64)$22) ^ (int_64)(uint_64)$22 >> (uint_64)(int_64)11
	*(($17 = ($0 + [2212]))) = $22))
	$21 = ((int_64)((int_64)$22 & (int_64)4294967295) * (int_64)1181783497276652981)
	$22 = ((int_64)((int_64)((int_64)((int_64)$1 + (int_64)((uint_64)*($4 + [80]) % (uint_64)(int_64)100000)) + (int_64)(CASTING uint_64)(uint_32 ((CALL tapos_block_prefix() + CALL $fimport$43()) + (CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$15() / (uint_64)(int_64)1000000))))) + (int_64)((int_64)((int_64)$21 & (int_64)63) * (int_64)$2)) + (int_64)10000)
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*(($16 = ($0 + [2272]))) = $22 ^ (int_64)$22))
	*($18) = ((int_64)$22 * (int_64)2685821657736338717)
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*($16) = $22 ^ (int_64)$22))
	*($17) = ((int_64)$22 * (int_64)2685821657736338717)
	$18 = ((CASTING uint_32)(uint_64 $21) & [63])
	$17 = [2216]
	
.LOOP $label$10:
	$22 = *($16)
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*($16) = $22 ^ (int_64)$22))
	*(($0 + $17)) = ((int_64)$22 * (int_64)2685821657736338717)
	$17 = ($17 + [4])
	if ( ((int_32)$17 != (int_32)[2272]) ){ goto $label$10 }
	$22 = *($17)
	$22 = ((int_64)((int_64)$22 << (int_64)31) ^ (int_64)$22)
	$7 = ($0 + [2208])
	$22 = *($7)
	$22 = ((int_64)((int_64)((int_64)(uint_64)$22 >> (uint_64)(int_64)30) ^ (int_64)$22) ^ (int_64)$22) ^ (int_64)(uint_64)$22 >> (uint_64)(int_64)11
	*(($17 = ($0 + [2212]))) = $22))
	$8 = ((CASTING uint_32)(uint_64 $22) & [63])
	$22 = ((int_64)((int_64)$22 & (int_64)4294967295) * (int_64)1181783497276652981)
	$22 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 ((CALL tapos_block_prefix() + CALL $fimport$43()) + (CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$15() / (uint_64)(int_64)1000000)))) + (int_64)((int_64)((int_64)$22 & (int_64)63) * (int_64)$2)) + (int_64)(CASTING uint_64)(uint_32 ((int_32)$8 * (int_32)$18))) + (int_64)1000000)
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*(($16 = ($0 + [2272]))) = $22 ^ (int_64)$22))
	*($7) = ((int_64)$22 * (int_64)2685821657736338717)
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*($16) = $22 ^ (int_64)$22))
	*($17) = ((int_64)$22 * (int_64)2685821657736338717)
	$17 = [2216]
	
.LOOP $label$11:
	$22 = *($16)
	$22 = ((int_64)(uint_64)$22 >> (uint_64)(int_64)12) ^ (int_64)$22
	$22 = ((int_64)((int_64)$22) << (int_64)25) ^ (int_64)$22
	$22 = ((int_64)(uint_64)$22) >> (uint_64)(int_64)27
	*($16) = $22 ^ (int_64)$22))
	*(($0 + $17)) = ((int_64)$22 * (int_64)2685821657736338717)
	$17 = ($17 + [4])
	if ( ((int_32)$17 != (int_32)[2272]) ){ goto $label$11 }
	$22 = *($17)
	$22 = ((int_64)((int_64)$22 << (int_64)31) ^ (int_64)$22)
	$22 = *(($0 + [2208]))
	$22 = ((int_64)((int_64)((int_64)(uint_64)$22 >> (uint_64)(int_64)30) ^ (int_64)$22) ^ (int_64)$22) ^ (int_64)(uint_64)$22 >> (uint_64)(int_64)11
	*(($17 = ($0 + [2212]))) = $22))
	$9 = *((($17 + (((CASTING uint_32)(uint_64 ((int_64)$22 * (int_64)1181783497276652981)) & [63]) << [2])) + [512]))
	$8 = *((($17 + ($8 << [2])) + [256]))
	$17 = ($0 + [960])
	$7 = *(($17 + ($18 << [2])))
	CALL _ZN12thedeosgames15slots_to_stringENS_4SlotES0_S0_(($24 + [480]), $0, $7, $8, $9)
	*(($24 + [472])) = [0]
	*($24 + [464]) = (int_64)0
	$17 = CALL strlen([1664])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$18 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$21 }
	*($24 + [464]) = ($17 << [1])
	$16 = (($24 + [464]) | [1])
	if ( $17 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$18 = (($17 + [16]) & [-16])
	$16 = CALL $275($18)
	*($24 + [464]) = ($18 | [1])
	*($24 + [472]) = $16
	*($24 + [468]) = $17
	
.LABEL $label$20
	CALL memcpy($16, [1664], $17)
	
.LABEL $label$19
	*(($16 + $17)) = [0]
	$10 = *(($4 + [16]))
	$11 = *($4 + [24])
	$22 = *($4 + [8])
	CALL eosio_assert((uint_64)((int_64))((int_64)4611686018427387903 - $22) <= (int_64)9223372036854775807), [576])
	$12 = (int_64))((int_64)0 - $22)
	$17 = [0]
	$20 = (uint_64)$10 >> (uint_64)(int_64)8
	$22 = $20)
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	
.LOOP $label$26:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$26 }
	
.LABEL $label$25
	$16 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	$16 = [0]
	
.LABEL $label$22
	CALL eosio_assert($16, [32])
	if ( ((int_32)$7 != (int_32)[1]) ){ goto $label$28 }
	if ( ((int_32)$8 != (int_32)[1]) ){ goto $label$28 }
	$18 = [500]
	if ( ((int_32)$9 == (int_32)[1]) ){ goto $label$27 }
	
.LABEL $label$28
	$17 = (((int_32)$7 == (int_32)[2]) & ((int_32)$8 == (int_32)[2]))
	if ( ((int_32)$17 != (int_32)[1]) ){ goto $label$29 }
	$18 = [100]
	if ( ((int_32)$9 == (int_32)[2]) ){ goto $label$27 }
	
.LABEL $label$29
	if ( ((int_32)$7 != (int_32)[3]) ){ goto $label$30 }
	if ( ((int_32)$8 != (int_32)[3]) ){ goto $label$30 }
	$18 = [50]
	if ( ((int_32)$9 == (int_32)[3]) ){ goto $label$27 }
	
.LABEL $label$30
	if ( ((int_32)$7 != (int_32)[4]) ){ goto $label$31 }
	if ( ((int_32)$8 != (int_32)[4]) ){ goto $label$31 }
	$18 = [30]
	if ( ((int_32)$9 == (int_32)[4]) ){ goto $label$27 }
	
.LABEL $label$31
	if ( ((int_32)$7 != (int_32)[5]) ){ goto $label$32 }
	if ( ((int_32)$8 != (int_32)[5]) ){ goto $label$32 }
	$18 = [20]
	if ( ((int_32)$9 == (int_32)[5]) ){ goto $label$27 }
	
.LABEL $label$32
	if ( ((int_32)$7 != (int_32)[6]) ){ goto $label$33 }
	if ( ((int_32)$8 != (int_32)[6]) ){ goto $label$33 }
	$18 = [10]
	if ( ((int_32)$9 == (int_32)[6]) ){ goto $label$27 }
	
.LABEL $label$33
	$18 = [5]
	$16 = ((int_32)$9 == (int_32)[2])
	if ( (((int_32)$7 == (int_32)[2]) & $16) ){ goto $label$27 }
	if ( ($17 | (((int_32)$8 == (int_32)[2]) & $16)) ){ goto $label$27 }
	$18 = ( [2] ? ( [2] ? (((int_32)$9 == (int_32)[2]) << [1]) : ((int_32)$8 == (int_32)[2]) ) : ((int_32)$7 == (int_32)[2]) )
	
.LABEL $label$27
	$17 = [1680]
	$16 = *([1680])
	if ( ($16 == 0) ){ goto $label$34 }
	
.LOOP $label$36:
	if ( ((int_32)$16 == (int_32)[37]) ){ goto $label$35 }
	CALL prints_l($17, [1])
	$17 = ($17 + [1])
	$16 = *($17)
	if ( $16 ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$35
	CALL printui((CASTING uint_64)(uint_32 $18))
	CALL prints(($17 + [1]))
	
.LABEL $label$34
	$14 = *(($4 + [8]))
	if ( ($18 == 0) ){ goto $label$37 }
	$12 = ((int_64)$14 * (int_64)(CASTING uint_64)(uint_32 $18))
	CALL eosio_assert((uint_64)(((int_64)$12 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$17 = [0]
	$22 = $20
	
.LOOP $label$40:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$39 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	
.LOOP $label$42:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$42 }
	
.LABEL $label$41
	$16 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	$16 = [0]
	
.LABEL $label$38
	CALL eosio_assert($16, [32])
	*(($24 + [88])) = [0]
	*($24 + [80]) = (int_64)0
	$17 = CALL strlen([2608])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$45 }
	*($24 + [80]) = ($17 << [1])
	$16 = (($24 + [80]) | [1])
	if ( $17 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$45
	$18 = (($17 + [16]) & [-16])
	$16 = CALL $275($18)
	*($24 + [80]) = ($18 | [1])
	*($24 + [88]) = $16
	*($24 + [84]) = $17
	
.LABEL $label$44
	CALL memcpy($16, [2608], $17)
	
.LABEL $label$43
	*(($16 + $17)) = [0]
	CALL _ZNSt3__19to_stringEy(($24 + [240]), $1)
	$17 = *($24 + [240])
	$16 = ($17 & [1])
	$17 = CALL $279(($24 + [80]), ( *($24 + [248]) ? (($24 + [240]) | [1]) : $16 ), ( *($24 + [244]) ? uint_32($17 >> [1]) : $16 ))
	$16 = ($17 + [8])
	*((($24 + [368]) + [8])) = *($16)
	*($24 + [368]) = *($17)
	*($17) = [0]
	*(($17 + [4])) = [0]
	*($16) = [0]
	if ( ((*($24 + [240]) & [1]) == 0) ){ goto $label$46 }
	CALL $276(*((($24 + [240]) + [8])))
	
.LABEL $label$46
	if ( ((*($24 + [80]) & [1]) == 0) ){ goto $label$47 }
	CALL $276(*($24 + [88]))
	
.LABEL $label$47
	$22 = CALL current_time()
	*(($24 + [108])) = [0]
	*(($24 + [112])) = [0]
	*($24 + [92]) = [0]
	*($24 + [96]) = [0]
	*($24 + [100]) = [0]
	*($24 + [104]) = [0]
	*($24 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$22 / (uint_64)(int_64)1000000)) + [60])
	*($24 + [116]) = [0]
	*(($24 + [120])) = [0]
	*(($24 + [124])) = [0]
	*($24 + [128]) = [0]
	*(($24 + [132])) = [0]
	*(($24 + [136])) = [0]
	$13 = *(($0 + [176]))
	$18 = ($24 + [116])
	$22 = (int_64)0
	$21 = (int_64)59
	$17 = [1440]
	$23 = (int_64)0
	
.LOOP $label$48:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$53 }
	$16 = *($17)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$16 = ($16 + [165])
	goto $label$51 
	
.LABEL $label$53
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$50
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$49
	$17 = ($17 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$48 }
	*($24 + [392]) = $23
	*($24 + [384]) = $13
	*(($17 = (($24 + [448]) + [8]))) = *(($6 + [8]))
	$22 = *($6)
	*((($24 + [48]) + [12])) = *((($24 + [448]) + [12]))
	*((($24 + [48]) + [8])) = *($17)
	*($24 + [448]) = $22
	*($24 + [52]) = *($24 + [452])
	*($24 + [48]) = *($24 + [448])
	*($24 + [424]) = CALL _ZN12thedeosgames10tknaccountEN5eosio5assetE($24, ($24 + [48]))
	$22 = (int_64)0
	$21 = (int_64)59
	$17 = [1792]
	$23 = (int_64)0
	
.LOOP $label$54:
	if ( ((uint_64)$22 > (uint_64)(int_64)7) ){ goto $label$59 }
	$16 = *($17)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$58 }
	$16 = ($16 + [165])
	goto $label$57 
	
.LABEL $label$59
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$58
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$57
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$56
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$55
	$17 = ($17 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$54 }
	*($24 + [440]) = $23
	*(($24 + [264])) = $10
	*($24 + [248]) = $11
	*($24 + [240]) = $13
	*($24 + [256]) = $12
	CALL $295(($24 + [272]), ($24 + [368]))
	$17 = (($24 + [80]) + [40])
	$16 = *($17)
	if ( ((uint_32)$16 >= (uint_32)*(($24 + [124]))) ){ goto $label$61 }
	CALL $51($16, ($24 + [384]), *($24 + [424]), *($24 + [440]), ($24 + [240]))
	*($17) = (*($17) + [40])
	goto $label$60 
	
.LABEL $label$61
	CALL $52($18, ($24 + [384]), ($24 + [424]), ($24 + [440]), ($24 + [240]))
	
.LABEL $label$60
	if ( ((*($24 + [272]) & [1]) == 0) ){ goto $label$62 }
	CALL $276(*(($24 + [280])))
	
.LABEL $label$62
	*(($24 + [100])) = [1]
	$22 = (int_64)0
	$21 = (int_64)59
	$17 = [1808]
	$23 = (int_64)0
	
.LOOP $label$63:
	if ( ((uint_64)$22 > (uint_64)(int_64)3) ){ goto $label$68 }
	$16 = *($17)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$67 }
	$16 = ($16 + [165])
	goto $label$66 
	
.LABEL $label$68
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$67
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$66
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$65
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$64
	$17 = ($17 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$63 }
	*($24 + [248]) = (int_64)0
	*($24 + [240]) = $23
	$22 = *(($0 + [176]))
	CALL $53(($24 + [384]), ($24 + [80]))
	$17 = *($24 + [384])
	CALL send_deferred(($24 + [240]), $22, $17, (*($24 + [388]) - $17), [1])
	$17 = *($24 + [384])
	if ( ($17 == 0) ){ goto $label$69 }
	*($24 + [388]) = $17
	CALL $276($17)
	
.LABEL $label$69
	*(($24 + [248])) = [0]
	*($24 + [240]) = (int_64)0
	$17 = CALL strlen([1824])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$72 }
	*($24 + [240]) = ($17 << [1])
	$16 = (($24 + [240]) | [1])
	if ( $17 ){ goto $label$71 }
	goto $label$70 
	
.LABEL $label$72
	$18 = (($17 + [16]) & [-16])
	$16 = CALL $275($18)
	*($24 + [240]) = ($18 | [1])
	*($24 + [248]) = $16
	*($24 + [244]) = $17
	
.LABEL $label$71
	CALL memcpy($16, [1824], $17)
	
.LABEL $label$70
	*(($16 + $17)) = [0]
	if ( (*($24 + [464]) & [1]) ){ goto $label$74 }
	*($24 + [464]) = [0]
	goto $label$73 
	
.LABEL $label$74
	*(*($24 + [472])) = [0]
	*($24 + [468]) = [0]
	
.LABEL $label$73
	CALL $278(($24 + [464]), [0])
	*((($24 + [464]) + [8])) = *((($24 + [240]) + [8]))
	*($24 + [464]) = *($24 + [240])
	$12 = (int_64)
	CALL eosio_assert((uint_64)(((int_64)$12($12 - *(($4 + [8])))) + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$17 = [0]
	$22 = $20
	
.LOOP $label$77:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$76 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$78 }
	
.LOOP $label$79:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$76 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$79 }
	
.LABEL $label$78
	$16 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$77 }
	goto $label$75 
	
.LABEL $label$76
	$16 = [0]
	
.LABEL $label$75
	CALL eosio_assert($16, [32])
	CALL $54(($24 + [80]))
	if ( ((*($24 + [368]) & [1]) == 0) ){ goto $label$37 }
	CALL $276(*($24 + [376]))
	
.LABEL $label$37
	if ( (*($15 + [28]) == 0) ){ goto $label$80 }
	if ( (CALL is_account(*($4 + [32])) == 0) ){ goto $label$80 }
	*(($24 + [248])) = [0]
	*($24 + [240]) = (int_64)0
	$17 = CALL strlen([2672])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$83 }
	*($24 + [240]) = ($17 << [1])
	$16 = (($24 + [240]) | [1])
	if ( $17 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$83
	$18 = (($17 + [16]) & [-16])
	$16 = CALL $275($18)
	*($24 + [240]) = ($18 | [1])
	*($24 + [248]) = $16
	*($24 + [244]) = $17
	
.LABEL $label$82
	CALL memcpy($16, [2672], $17)
	
.LABEL $label$81
	*(($16 + $17)) = [0]
	CALL _ZNSt3__19to_stringEy(($24 + [384]), $1)
	$17 = *($24 + [384])
	$16 = ($17 & [1])
	$17 = CALL $279(($24 + [240]), ( *($24 + [392]) ? (($24 + [384]) | [1]) : $16 ), ( *($24 + [388]) ? uint_32($17 >> [1]) : $16 ))
	$16 = ($17 + [8])
	*((($24 + [80]) + [8])) = *($16)
	*($24 + [80]) = *($17)
	*($17) = [0]
	*(($17 + [4])) = [0]
	*($16) = [0]
	*((($24 + [368]) + [8])) = [0]
	*($24 + [368]) = (int_64)0
	$17 = CALL strlen([2224])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$86 }
	*($24 + [368]) = ($17 << [1])
	$18 = (($24 + [368]) | [1])
	$16 = $18
	if ( $17 ){ goto $label$85 }
	goto $label$84 
	
.LABEL $label$86
	$18 = (($17 + [16]) & [-16])
	$16 = CALL $275($18)
	*($24 + [368]) = ($18 | [1])
	*($24 + [376]) = $16
	*($24 + [372]) = $17
	$18 = (($24 + [368]) | [1])
	
.LABEL $label$85
	CALL memcpy($16, [2224], $17)
	
.LABEL $label$84
	*(($16 + $17)) = [0]
	$17 = *($24 + [368])
	$16 = ($17 & [1])
	$17 = CALL $279(($24 + [80]), ( *($24 + [376]) ? $18 : $16 ), ( *($24 + [372]) ? uint_32($17 >> [1]) : $16 ))
	$16 = ($17 + [8])
	*((($24 + [424]) + [8])) = *($16)
	*($24 + [424]) = *($17)
	*($17) = [0]
	*(($17 + [4])) = [0]
	*($16) = [0]
	if ( ((*($24 + [368]) & [1]) == 0) ){ goto $label$87 }
	CALL $276(*((($24 + [368]) + [8])))
	
.LABEL $label$87
	if ( ((*($24 + [80]) & [1]) == 0) ){ goto $label$88 }
	CALL $276(*($24 + [88]))
	
.LABEL $label$88
	if ( ((*($24 + [384]) & [1]) == 0) ){ goto $label$89 }
	CALL $276(*(($24 + [392])))
	
.LABEL $label$89
	$17 = (CASTING uint_32)(uint_64 $14)
	if ( ((*($24 + [240]) & [1]) == 0) ){ goto $label$90 }
	CALL $276(*($24 + [248]))
	
.LABEL $label$90
	$19 = ((float_64)(CASTING float_64)(uint_32 $17) * (float_64)((float_64)(CASTING float_64)(uint_32 *(($15 + [28]))) / (float_64)(CASTING float_64)(uint_32 ((int_32)*($0 + [172]) * (int_32)[100]))))
	$17 = [2256]
	$16 = *([2256])
	if ( ($16 == 0) ){ goto $label$91 }
	
.LOOP $label$93:
	if ( ((int_32)$16 == (int_32)[37]) ){ goto $label$92 }
	CALL prints_l($17, [1])
	$17 = ($17 + [1])
	$16 = *($17)
	if ( $16 ){ goto $label$93 }
	goto $label$91 
	
.LABEL $label$92
	CALL printdf($19)
	CALL prints(($17 + [1]))
	
.LABEL $label$91
	CALL eosio_assert([1], [576])
	$17 = [0]
	$22 = (int_64)1397704004
	
.LOOP $label$96:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$95 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$97 }
	
.LOOP $label$98:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$95 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$98 }
	
.LABEL $label$97
	$16 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$96 }
	goto $label$94 
	
.LABEL $label$95
	$16 = [0]
	
.LABEL $label$94
	CALL eosio_assert($16, [32])
	*($24 + [408]) = [0]
	$22 = *(($4 + [32]))
	$17 = ($0 + [176])
	$2 = *($17)
	*($24 + [384]) = $2
	*($24 + [392]) = $22
	*($24 + [400]) = (int_64)-1
	*((($24 + [384]) + [28])) = [0]
	*((($24 + [384]) + [32])) = [0]
	$16 = CALL db_find_i64($2, $22, (int_64)3607749779137757184, (int_64)1397704004)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$99 }
	$16 = CALL $13(($24 + [384]), $16)
	CALL eosio_assert(((int_32)*($16 + [16]) == (int_32)($24 + [384])), [176])
	$19 = ( $19 ? ((float_64)$19 + (float_64)$19) : (uint_64)(*($16) <= ((int_64)*(($0 + [172])) * (int_64)*($15 + [32]))) )
	
.LABEL $label$99
	$22 = CALL current_time()
	*((($24 + [80]) + [28])) = [0]
	*((($24 + [80]) + [32])) = [0]
	*($24 + [92]) = [0]
	*($24 + [96]) = [0]
	*($24 + [100]) = [0]
	*($24 + [104]) = [0]
	*($24 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$22 / (uint_64)(int_64)1000000)) + [60])
	*($24 + [116]) = [0]
	*(($24 + [120])) = [0]
	*(($24 + [124])) = [0]
	*($24 + [128]) = [0]
	*(($24 + [132])) = [0]
	*(($24 + [136])) = [0]
	$14 = *($17)
	$15 = ($24 + [116])
	$22 = (int_64)0
	$21 = (int_64)59
	$17 = [1440]
	$23 = (int_64)0
	
.LOOP $label$100:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$105 }
	$16 = *($17)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$104 }
	$16 = ($16 + [165])
	goto $label$103 
	
.LABEL $label$105
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$102 }
	goto $label$101 
	
.LABEL $label$104
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$103
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$102
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$101
	$17 = ($17 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$100 }
	*($24 + [376]) = $23
	*($24 + [368]) = $14
	*(($17 = (($24 + [352]) + [8]))) = *(($6 + [8]))
	$22 = *($6)
	*((($24 + [32]) + [12])) = *((($24 + [352]) + [12]))
	*((($24 + [32]) + [8])) = *($17)
	*($24 + [352]) = $22
	*($24 + [36]) = *($24 + [356])
	*($24 + [32]) = *($24 + [352])
	*($24 + [440]) = CALL _ZN12thedeosgames10tknaccountEN5eosio5assetE($24, ($24 + [32]))
	$22 = (int_64)0
	$21 = (int_64)59
	$17 = [1792]
	$23 = (int_64)0
	
.LOOP $label$106:
	if ( ((uint_64)$22 > (uint_64)(int_64)7) ){ goto $label$111 }
	$16 = *($17)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$110 }
	$16 = ($16 + [165])
	goto $label$109 
	
.LABEL $label$111
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$108 }
	goto $label$107 
	
.LABEL $label$110
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$109
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$108
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$107
	$17 = ($17 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$106 }
	*($24 + [344]) = $23
	$22 = (Rounds 0)($19)
	CALL eosio_assert((uint_64)(((int_64)$22 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$17 = [0]
	
.LOOP $label$114:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $20) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$113 }
	$20 = (uint_64)$20 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$20) & (int_64)255) != (int_64)0) ){ goto $label$115 }
	
.LOOP $label$116:
	$20 = (uint_64)$20 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$20) & (int_64)255) != (int_64)0) ){ goto $label$113 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$116 }
	
.LABEL $label$115
	$16 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$114 }
	goto $label$112 
	
.LABEL $label$113
	$16 = [0]
	
.LABEL $label$112
	CALL eosio_assert($16, [32])
	$2 = *(($4 + [32]))
	*(($24 + [264])) = $10
	*($24 + [240]) = *(($0 + [176]))
	*($24 + [256]) = $22
	*($24 + [248]) = $2
	CALL $295((($24 + [240]) + [32]), ($24 + [424]))
	$17 = (($24 + [80]) + [40])
	$16 = *($17)
	if ( ((uint_32)$16 >= (uint_32)*(($24 + [124]))) ){ goto $label$118 }
	CALL $51($16, ($24 + [368]), *($24 + [440]), *($24 + [344]), ($24 + [240]))
	*($17) = (*($17) + [40])
	goto $label$117 
	
.LABEL $label$118
	CALL $52($15, ($24 + [368]), ($24 + [440]), ($24 + [344]), ($24 + [240]))
	
.LABEL $label$117
	if ( ((*($24 + [272]) & [1]) == 0) ){ goto $label$119 }
	CALL $276(*(($24 + [280])))
	
.LABEL $label$119
	*(($24 + [100])) = [2]
	$22 = (int_64)0
	$21 = (int_64)59
	$17 = [1808]
	$23 = (int_64)0
	
.LOOP $label$120:
	if ( ((uint_64)$22 > (uint_64)(int_64)3) ){ goto $label$125 }
	$16 = *($17)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$124 }
	$16 = ($16 + [165])
	goto $label$123 
	
.LABEL $label$125
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$122 }
	goto $label$121 
	
.LABEL $label$124
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$123
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$122
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$121
	$17 = ($17 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$120 }
	*($24 + [248]) = (int_64)0
	*($24 + [240]) = $23
	$22 = *(($0 + [176]))
	CALL $53(($24 + [368]), ($24 + [80]))
	$17 = *($24 + [368])
	CALL send_deferred(($24 + [240]), $22, $17, (*($24 + [372]) - $17), [1])
	$17 = *($24 + [368])
	if ( ($17 == 0) ){ goto $label$126 }
	*($24 + [372]) = $17
	CALL $276($17)
	
.LABEL $label$126
	CALL $54(($24 + [80]))
	$15 = *($24 + [408])
	if ( ($15 == 0) ){ goto $label$127 }
	$18 = ($24 + [412])
	$17 = *($18)
	if ( ((int_32)$17 == (int_32)$15) ){ goto $label$129 }
	
.LOOP $label$130:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$131 }
	CALL $276($16)
	
.LABEL $label$131
	if ( ((int_32)$15 != (int_32)$17) ){ goto $label$130 }
	$17 = *(($24 + [408]))
	goto $label$128 
	
.LABEL $label$129
	$17 = $15
	
.LABEL $label$128
	*($18) = $15
	CALL $276($17)
	
.LABEL $label$127
	if ( ((*($24 + [424]) & [1]) == 0) ){ goto $label$80 }
	CALL $276(*($24 + [432]))
	
.LABEL $label$80
	$20 = *(($4 + [16]))
	CALL eosio_assert([1], [576])
	$22 = (uint_64)$20 >> (uint_64)(int_64)8)
	$17 = [0]
	
.LOOP $label$134:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$133 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$135 }
	
.LOOP $label$136:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$133 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$136 }
	
.LABEL $label$135
	$16 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$134 }
	goto $label$132 
	
.LABEL $label$133
	$16 = [0]
	
.LABEL $label$132
	CALL eosio_assert($16, [32])
	*(($17 = (($24 + [328]) + [8]))) = *(($6 + [8]))
	$22 = *($6)
	*((($24 + [16]) + [12])) = *((($24 + [328]) + [12]))
	*((($24 + [16]) + [8])) = *($17)
	*($24 + [328]) = $22
	*($24 + [20]) = *($24 + [332])
	*($24 + [16]) = *($24 + [328])
	$13 = CALL _ZN12thedeosgames10tknaccountEN5eosio5assetE($24, ($24 + [16]))
	$22 = (int_64)0
	$21 = (int_64)59
	$17 = [2704]
	$23 = (int_64)0
	
.LOOP $label$137:
	if ( ((uint_64)$22 > (uint_64)(int_64)7) ){ goto $label$142 }
	$16 = *($17)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$141 }
	$16 = ($16 + [165])
	goto $label$140 
	
.LABEL $label$142
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$139 }
	goto $label$138 
	
.LABEL $label$141
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$140
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$139
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$138
	$17 = ($17 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$137 }
	$22 = (int_64)0
	$14 = (int_64)0
	$17 = ($4 + [16])
	if ( ((int_32)CALL db_find_i64($13, $11, $23, (uint_64)*($17) >> (uint_64)(int_64)8)) < (int_32)[0]) ){ goto $label$143 }
	$2 = *(($6 + [8]))
	*((($24 + [312]) + [8])) = $2
	$21 = *($6)
	*(($24 + [8])) = $2
	*($24 + [312]) = $21
	*($24 + [4]) = *($24 + [316])
	*($24) = *($24 + [312])
	$2 = CALL _ZN12thedeosgames10tknaccountEN5eosio5assetE($24, $24)
	$21 = *($17)
	*(($24 + [112])) = [0]
	*($24 + [88]) = $11
	*($24 + [80]) = $2
	*($24 + [96]) = (int_64)-1
	*($24 + [104]) = (int_64)0
	$17 = CALL $57(($24 + [80]), (uint_64)$21 >> (uint_64)(int_64)8), [1936]
	$20 = *($17) + [8])
	$14 = *($17)
	$15 = *($24 + [104])
	if ( ($15 == 0) ){ goto $label$143 }
	$18 = ($24 + [108])
	$17 = *($18)
	if ( ((int_32)$17 == (int_32)$15) ){ goto $label$145 }
	
.LOOP $label$146:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$147 }
	CALL $276($16)
	
.LABEL $label$147
	if ( ((int_32)$15 != (int_32)$17) ){ goto $label$146 }
	$17 = *(($24 + [104]))
	goto $label$144 
	
.LABEL $label$145
	$17 = $15
	
.LABEL $label$144
	*($18) = $15
	CALL $276($17)
	
.LABEL $label$143
	$21 = (int_64)59
	$17 = [1424]
	$23 = (int_64)0
	
.LOOP $label$148:
	if ( ((uint_64)$22 > (uint_64)(int_64)10) ){ goto $label$153 }
	$16 = *($17)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$152 }
	$16 = ($16 + [165])
	goto $label$151 
	
.LABEL $label$153
	$2 = (int_64)0
	if ( ((int_64)$22 == (int_64)11) ){ goto $label$150 }
	goto $label$149 
	
.LABEL $label$152
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$151
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$150
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$149
	$17 = ($17 + [1])
	$21 = ((int_64)$21 + (int_64)-5)
	$23 = ((int_64)$2 | (int_64)$23)
	$22 = ((int_64)$22 + (int_64)1)
	if ( ((int_64)$22 != (int_64)13) ){ goto $label$148 }
	*(($24 + [112])) = [0]
	*($24 + [88]) = $11
	*($24 + [80]) = $23
	*($24 + [96]) = (int_64)-1
	*($24 + [104]) = (int_64)0
	$17 = CALL $57(($24 + [80]), (int_64)5459781, [1936])
	*((($24 + [384]) + [8])) = *(($17 + [8]))
	*($24 + [384]) = *($17)
	$15 = *($24 + [104])
	if ( ($15 == 0) ){ goto $label$154 }
	$18 = ($24 + [108])
	$17 = *($18)
	if ( ((int_32)$17 == (int_32)$15) ){ goto $label$156 }
	
.LOOP $label$157:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$158 }
	CALL $276($16)
	
.LABEL $label$158
	if ( ((int_32)$15 != (int_32)$17) ){ goto $label$157 }
	$17 = *(($24 + [104]))
	goto $label$155 
	
.LABEL $label$156
	$17 = $15
	
.LABEL $label$155
	*($18) = $15
	CALL $276($17)
	
.LABEL $label$154
	*((($24 + [80]) + [8])) = [0]
	*($24 + [80]) = (int_64)0
	$17 = CALL strlen([2720])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$17 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$161 }
	*($24 + [80]) = ($17 << [1])
	$16 = (($24 + [80]) | [1])
	if ( $17 ){ goto $label$160 }
	goto $label$159 
	
.LABEL $label$161
	$15 = (($17 + [16]) & [-16])
	$16 = CALL $275($15)
	*($24 + [80]) = ($15 | [1])
	*($24 + [88]) = $16
	*($24 + [84]) = $17
	
.LABEL $label$160
	CALL memcpy($16, [2720], $17)
	
.LABEL $label$159
	*(($16 + $17)) = [0]
	CALL _ZNSt3__19to_stringEy(($24 + [240]), $1)
	$17 = *($24 + [240])
	$16 = ($17 & [1])
	$17 = CALL $279(($24 + [80]), ( *($24 + [248]) ? (($24 + [240]) | [1]) : $16 ), ( *($24 + [244]) ? uint_32($17 >> [1]) : $16 ))
	$15 = *($17)
	*($17) = [0]
	*($17 + [4]) = [0]
	$18 = *($17 + [8])
	*($17 + [8]) = [0]
	if ( ((*($24 + [240]) & [1]) == 0) ){ goto $label$162 }
	CALL $276(*(($24 + [248])))
	
.LABEL $label$162
	if ( ((*($24 + [80]) & [1]) == 0) ){ goto $label$163 }
	CALL $276(*($24 + [88]))
	
.LABEL $label$163
	$22 = CALL current_time()
	*(($24 + [268])) = [0]
	*(($24 + [272])) = [0]
	*($24 + [252]) = [0]
	*($24 + [256]) = [0]
	*($24 + [260]) = [0]
	*($24 + [264]) = [0]
	*($24 + [240]) = ((CASTING uint_32)(uint_64 ((uint_64)$22 / (uint_64)(int_64)1000000)) + [60])
	*($24 + [276]) = [0]
	*(($24 + [280])) = [0]
	*(($24 + [284])) = [0]
	*($24 + [288]) = [0]
	*(($24 + [292])) = [0]
	*(($24 + [296])) = [0]
	$11 = *(($0 + [176]))
	$7 = ($24 + [276])
	$22 = (int_64)0
	$21 = (int_64)59
	$17 = [1440]
	$23 = (int_64)0
	
.LOOP $label$164:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$169 }
	$16 = *($17)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$168 }
	$16 = ($16 + [165])
	goto $label$167 
	
.LABEL $label$169
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$166 }
	goto $label$165 
	
.LABEL $label$168
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$167
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$166
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$165
	$17 = ($17 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$164 }
	*($24 + [376]) = $23
	*($24 + [368]) = $11
	$22 = (int_64)0
	$2 = (int_64)59
	$17 = [1776]
	$23 = (int_64)0
	
.LOOP $label$170:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$171 }
	$16 = *($17)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$173 }
	$16 = ($16 + [165])
	goto $label$172 
	
.LABEL $label$173
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$172
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($16 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$171
	$17 = ($17 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$170 }
	*($24 + [440]) = $23
	$22 = (int_64)0
	$21 = (int_64)59
	$17 = [2432]
	$23 = (int_64)0
	
.LOOP $label$174:
	if ( ((uint_64)$22 > (uint_64)(int_64)10) ){ goto $label$179 }
	$16 = *($17)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$178 }
	$16 = ($16 + [165])
	goto $label$177 
	
.LABEL $label$179
	$2 = (int_64)0
	if ( ((int_64)$22 == (int_64)11) ){ goto $label$176 }
	goto $label$175 
	
.LABEL $label$178
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$177
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$176
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$175
	$17 = ($17 + [1])
	$21 = ((int_64)$21 + (int_64)-5)
	$23 = ((int_64)$2 | (int_64)$23)
	$22 = ((int_64)$22 + (int_64)1)
	if ( ((int_64)$22 != (int_64)13) ){ goto $label$174 }
	*($24 + [344]) = $23
	*(($24 + [432])) = [0]
	*($24 + [424]) = (int_64)0
	$17 = CALL strlen([1904])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$182 }
	*($24 + [424]) = ($17 << [1])
	$16 = (($24 + [424]) | [1])
	if ( $17 ){ goto $label$181 }
	goto $label$180 
	
.LABEL $label$182
	$8 = (($17 + [16]) & [-16])
	$16 = CALL $275($8)
	*($24 + [424]) = ($8 | [1])
	*($24 + [432]) = $16
	*($24 + [428]) = $17
	
.LABEL $label$181
	CALL memcpy($16, [1904], $17)
	
.LABEL $label$180
	*(($16 + $17)) = [0]
	*($24 + [88]) = *(($4 + [24]))
	*((($24 + [80]) + [28])) = *(($6 + [12]))
	*((($24 + [80]) + [24])) = *(($6 + [8]))
	*((($24 + [80]) + [20])) = *(($6 + [4]))
	*($24 + [80]) = $1
	*($24 + [96]) = *($6)
	*(($24 + [116])) = *($24 + [428 align=4])
	*($24 + [112]) = *($24 + [424])
	*($24 + [424]) = [0]
	*($24 + [428]) = [0]
	*((($24 + [424]) + [8])) = [0]
	CALL $295((($24 + [80]) + [44]), ($24 + [480]))
	CALL $295((($24 + [80]) + [56]), ($24 + [464]))
	*((($24 + [80]) + [80])) = $10
	*(($24 + [176])) = $20
	*(($24 + [196])) = *((($24 + [384]) + [12]))
	*(($24 + [192])) = *((($24 + [384]) + [8]))
	*(($24 + [188])) = *($24 + [388])
	*($24 + [152]) = $12
	*($24 + [168]) = $14
	*($24 + [184]) = *($24 + [384])
	*($24 + [200]) = *(($4 + [80]))
	*(($24 + [232])) = *(($4 + [72]))
	*(($24 + [224])) = *(($4 + [64]))
	*(($24 + [216])) = *(($4 + [56]))
	*($24 + [208]) = *($4 + [48])
	$16 = (($24 + [240]) + [40])
	$17 = *($16)
	if ( ((uint_32)$17 >= (uint_32)*((($24 + [240]) + [44]))) ){ goto $label$184 }
	*($17 + [8]) = *($24 + [344])
	*($17) = *($24 + [440])
	*($17 + [16 align=4]) = (int_64)0
	*(($7 = ($17 + [24]))) = [0]
	$6 = CALL $275([16])
	*($17 + [16]) = $6
	$8 = ($6 + [16])
	*($7) = $8
	*(($6 + [8])) = *((($24 + [368]) + [8]))
	*($6) = *($24 + [368])
	*(($17 + [20])) = $8
	CALL $75(($17 + [28]), ($24 + [80]))
	*($16) = (*($16) + [40])
	goto $label$183 
	
.LABEL $label$184
	CALL $76($7, ($24 + [368]), ($24 + [440]), ($24 + [344]), ($24 + [80]))
	
.LABEL $label$183
	if ( ((*($24 + [136]) & [1]) == 0) ){ goto $label$185 }
	CALL $276(*(($24 + [144])))
	
.LABEL $label$185
	if ( ((*($24 + [124]) & [1]) == 0) ){ goto $label$186 }
	CALL $276(*(($24 + [132])))
	
.LABEL $label$186
	if ( ((*(($24 + [112])) & [1]) == 0) ){ goto $label$187 }
	CALL $276(*(($24 + [120])))
	
.LABEL $label$187
	if ( ((*($24 + [424]) & [1]) == 0) ){ goto $label$188 }
	CALL $276(*(($24 + [432])))
	
.LABEL $label$188
	*(($24 + [260])) = [1]
	$22 = (int_64)0
	$21 = (int_64)59
	$17 = [1920]
	$23 = (int_64)0
	
.LOOP $label$189:
	if ( ((uint_64)$22 > (uint_64)(int_64)9) ){ goto $label$194 }
	$16 = *($17)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$193 }
	$16 = ($16 + [165])
	goto $label$192 
	
.LABEL $label$194
	$2 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$191 }
	goto $label$190 
	
.LABEL $label$193
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$192
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$191
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$190
	$17 = ($17 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$2 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$189 }
	*($24 + [88]) = (int_64)0
	*($24 + [80]) = $23
	$22 = *(($0 + [176]))
	CALL $53(($24 + [368]), ($24 + [240]))
	$0 = *($24 + [368])
	CALL send_deferred(($24 + [80]), $22, $0, (*($24 + [372]) - $0), [0])
	$0 = *($24 + [368])
	if ( ($0 == 0) ){ goto $label$195 }
	*($24 + [372]) = $0
	CALL $276($0)
	
.LABEL $label$195
	CALL eosio_assert($5, [2448])
	CALL eosio_assert($5, [2496])
	$0 = CALL db_next_i64(*($4 + [92]), ($24 + [80]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$196 }
	CALL $117($3, $0)
	
.LABEL $label$196
	CALL $119($3, $4)
	CALL $54(($24 + [240]))
	if ( (($15 & [1]) == 0) ){ goto $label$197 }
	CALL $276($18)
	
.LABEL $label$197
	if ( ((*($24 + [464]) & [1]) == 0) ){ goto $label$198 }
	CALL $276(*($24 + [472]))
	
.LABEL $label$198
	if ( ((*($24 + [480]) & [1]) == 0) ){ goto $label$199 }
	CALL $276(*($24 + [488]))
	
.LABEL $label$199
	*([0] + [4]) = ($24 + [512])
	return (unreachable)
	
.LABEL $label$18
	CALL $277(($24 + [464]))
	
.LABEL $label$17
	CALL $277(($24 + [80]))
	
.LABEL $label$16
	CALL $277(($24 + [424]))
	
.LABEL $label$15
	CALL $277(($24 + [80]))
	
.LABEL $label$14
	CALL $277(($24 + [240]))
	
.LABEL $label$13
	CALL $277(($24 + [240]))
	
.LABEL $label$12
	CALL $277(($24 + [368]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [768])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $275([112])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [32])
	*($4 + [88]) = $0
	CALL $120(($8 + [32]), $4)
	*($4 + [92]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [92])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $115($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $276($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[31]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [32])
	$2 = (*($0 + [4]) + [32])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $115 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN12thedeosgames7slotscmEyN5eosio5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [176])
	*([0] + [4]) = $12
	CALL eosio_assert(((int_64)$1 != (int_64)$3), [1264])
	CALL eosio_assert(((int_64)*($0 + [176]) != (int_64)$3), [1312])
	$9 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [32])
	*(($10 = (($12 + [56]) + [8]))) = *(($2 + [8]))
	$9 = *($2)
	*(($12 + [12])) = *((($12 + [56]) + [12]))
	*(($12 + [8])) = *($10)
	*($12 + [56]) = $9
	*($12 + [4]) = *($12 + [60])
	*($12) = *($12 + [56])
	$9 = (CASTING uint_64)(uint_32 (CALL _ZN12thedeosgames7tkncodeEN5eosio5assetE($10, $12) + [1]))
	$4 = *(($0 + [2032]))
	$11 = *(($0 + [2036]))
	if ( ((int_32)$11 == (int_32)$4) ){ goto $label$6 }
	$10 = ($11 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($10)) == (int_64)$9) ){ goto $label$6 }
	$11 = $10
	$6 = ($10 + [-24])
	$10 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = ($0 + [2008])
	if ( ((int_32)$11 == (int_32)$4) ){ goto $label$9 }
	$10 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [56]) == (int_32)$8), [176])
	goto $label$8 
	
.LABEL $label$9
	$10 = [0]
	$6 = CALL db_find_i64(*(($0 + [2008])), *(($0 + [2016])), (int_64)-4293729097406218240, $9)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$8 }
	$10 = CALL $6($8, $6)
	CALL eosio_assert(((int_32)*($10 + [56]) == (int_32)$8), [176])
	
.LABEL $label$8
	$6 = [0]
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [2528])
	$9 = *($2)
	if ( ((int_64)*($10 + [48]) > (int_64)$9) ){ goto $label$10 }
	$6 = ((int_64)$9 <= (int_64)*($10 + [52]))
	
.LABEL $label$10
	CALL eosio_assert($6, [112])
	CALL eosio_assert((*($10 + [8]) == 0), [144])
	CALL require_auth($1)
	$4 = *(($0 + [2032]))
	$11 = *(($0 + [2036]))
	if ( ((int_32)$11 == (int_32)$4) ){ goto $label$11 }
	$10 = ($11 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$12:
	if ( ((int_64)*(*($10)) == (int_64)2) ){ goto $label$11 }
	$11 = $10
	$6 = ($10 + [-24])
	$10 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((int_32)$11 == (int_32)$4) ){ goto $label$14 }
	$11 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [56]) == (int_32)$8), [176])
	goto $label$13 
	
.LABEL $label$14
	$11 = [0]
	$10 = CALL db_find_i64(*(($0 + [2008])), *(($0 + [2016])), (int_64)-4293729097406218240, (int_64)2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$13 }
	$11 = CALL $6($8, $10)
	CALL eosio_assert(((int_32)*($11 + [56]) == (int_32)$8), [176])
	
.LABEL $label$13
	$10 = [0]
	$6 = ((int_32)$11 != (int_32)[0])
	CALL eosio_assert($6, [2576])
	CALL eosio_assert($6, [288])
	CALL eosio_assert(((int_32)*($11 + [56]) == (int_32)$8), [336])
	CALL eosio_assert(((int_64)*(($0 + [2008])) == (int_64)CALL $fimport$14()), [384])
	*($11 + [16]) = ((int_64)*($11 + [16]) + (int_64)1)
	$9 = *($11)
	CALL eosio_assert([1], [448])
	*($12 + [24]) = (($12 + [80]) + [52])
	*($12 + [20]) = ($12 + [80])
	*($12 + [16]) = ($12 + [80])
	CALL $8(($12 + [16]), $11)
	CALL db_update_i64(*($11 + [60]), (int_64)0, ($12 + [80]), [52])
	$6 = ($0 + [2024])
	if ( (uint_64)($9 <= *($6)) ){ goto $label$15 }
	*($6) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	CALL _ZN12thedeosgames8gettransEv(($12 + [16]), $10)
	$7 = *(($0 + [176]))
	CALL eosio_assert(((int_64)*($0 + [1968]) == (int_64)CALL $fimport$14()), [512])
	*(($6 = CALL $275([112])) + [16]) = (int_64)1398362884
	*($6 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$4 = ($0 + [1968])
	$8 = ($6 + [8])
	$9 = (int_64)5462355
	
.LOOP $label$17:
	$5 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$5 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	CALL eosio_assert($5, [32])
	*($6 + [88]) = $4
	*($6) = *($11 + [16])
	*(($8 + [12])) = *(($2 + [12]))
	*(($8 + [8])) = *(($2 + [8]))
	*(($8 + [4])) = *(($2 + [4]))
	*($8) = *($2)
	*($6 + [24]) = $1
	*(($6 + [72])) = *(($12 + [40]))
	*(($6 + [64])) = *(($12 + [32]))
	*(($6 + [56])) = *($12 + [24])
	*($6 + [48]) = *($12 + [16])
	$9 = CALL current_time()
	*($6 + [32]) = $3
	*($6 + [80]) = ((int_64)((uint_64)$9 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($12 + [168]) = (($12 + [80]) + [80])
	*($12 + [164]) = ($12 + [80])
	*($12 + [160]) = ($12 + [80])
	CALL $114(($12 + [160]), $6)
	$9 = *($6)
	$11 = CALL db_store_i64(*(($0 + [1976])), (int_64)-4293729101915443200, $7, $9, ($12 + [80]), [80])
	*($6 + [92]) = $11
	$10 = ($0 + [1984])
	if ( (uint_64)($9 <= *($10)) ){ goto $label$20 }
	*($10) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$20
	*($12 + [160]) = $6
	$9 = *($6)
	*($12 + [80]) = $9
	*($12 + [76]) = $11
	$5 = ($0 + [1996])
	$10 = *($5)
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [2000]))) ){ goto $label$22 }
	*($10 + [8]) = $9
	*($10 + [16]) = $11
	*($12 + [160]) = [0]
	*($10) = $6
	*($5) = ($10 + [24])
	goto $label$21 
	
.LABEL $label$22
	CALL $115(($0 + [1992]), ($12 + [160]), ($12 + [80]), ($12 + [76]))
	
.LABEL $label$21
	$10 = *($12 + [160])
	*($12 + [160]) = [0]
	if ( ($10 == 0) ){ goto $label$23 }
	CALL $276($10)
	
.LABEL $label$23
	*([0] + [4]) = ($12 + [176])
}

int_32 .FUNC _ZN12thedeosgames7tkncodeEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	$3 = [1]
	$2 = *($1 + [8])
	if ( ((int_64)$2 == (int_64)71800348297988) ){ goto $label$2 }
	$3 = [2]
	if ( ((int_64)$2 == (int_64)91625918253060) ){ goto $label$2 }
	$3 = [3]
	if ( ((int_64)$2 == (int_64)82752230408708) ){ goto $label$2 }
	$3 = [4]
	if ( ((int_64)$2 == (int_64)5327107) ){ goto $label$2 }
	$3 = [5]
	if ( ((int_64)$2 == (int_64)1413697284) ){ goto $label$2 }
	$3 = [6]
	if ( ((int_64)$2 == (int_64)4994016260158475524) ){ goto $label$2 }
	$3 = [7]
	if ( ((int_64)$2 != (int_64)293287707140) ){ goto $label$1 }
	
.LABEL $label$2
	return $3
	
.LABEL $label$1
	return (((int_64)$2 == (int_64)18930585150899460) << [3])
}

void .FUNC $110 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN12thedeosgames12setslotsconfEymmmymmmm (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_64 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9)
{
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [96])
	*([0] + [4]) = $16
	CALL require_auth(*($0 + [176]))
	$10 = *(($0 + [2032]))
	$15 = *(($0 + [2036]))
	if ( ((int_32)$15 == (int_32)$10) ){ goto $label$1 }
	$14 = ($15 + [-24])
	$11 = ([0] - $10)
	
.LOOP $label$2:
	if ( ((int_64)*(*($14)) == (int_64)$1) ){ goto $label$1 }
	$15 = $14
	$12 = ($14 + [-24])
	$14 = $12
	if ( ((int_32)($12 + $11) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$12 = ($0 + [2008])
	if ( ((int_32)$15 == (int_32)$10) ){ goto $label$6 }
	$14 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [56]) == (int_32)$12), [176])
	if ( $14 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$14 = CALL db_find_i64(*(($0 + [2008])), *(($0 + [2016])), (int_64)-4293729097406218240, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$4 }
	$14 = CALL $6($12, $14)
	CALL eosio_assert(((int_32)*($14 + [56]) == (int_32)$12), [176])
	
.LABEL $label$5
	CALL eosio_assert([1], [288])
	CALL eosio_assert(((int_32)*($14 + [56]) == (int_32)$12), [336])
	CALL eosio_assert(((int_64)*(($0 + [2008])) == (int_64)CALL $fimport$14()), [384])
	*($14 + [8]) = $2
	*($14 + [24]) = $3
	*($14 + [28]) = $4
	*($14 + [32]) = $5
	*($14 + [40]) = $6
	*($14 + [44]) = $7
	$1 = *($14)
	*($14 + [48]) = $8
	*($14 + [52]) = $9
	CALL eosio_assert([1], [448])
	*($16 + [88]) = (($16 + [16]) + [52])
	*($16 + [84]) = ($16 + [16])
	*($16 + [80]) = ($16 + [16])
	CALL $8(($16 + [80]), $14)
	CALL db_update_i64(*($14 + [60]), (int_64)0, ($16 + [16]), [52])
	$14 = ($0 + [2024])
	if ( (uint_64)($1 <= *($14)) ){ goto $label$3 }
	*($14) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$4
	$13 = *(($0 + [176]))
	CALL eosio_assert(((int_64)*(($0 + [2008])) == (int_64)CALL $fimport$14()), [512])
	*(($14 = CALL $275([72])) + [56]) = $12
	*($14 + [16]) = (int_64)0
	*($14) = $1
	*($14 + [8]) = $2
	*($14 + [24]) = $3
	*($14 + [28]) = $4
	*($14 + [32]) = $5
	*($14 + [40]) = $6
	*($14 + [44]) = $7
	*($14 + [48]) = $8
	*($14 + [52]) = $9
	*($16 + [88]) = (($16 + [16]) + [52])
	*($16 + [84]) = ($16 + [16])
	*($16 + [80]) = ($16 + [16])
	CALL $8(($16 + [80]), $14)
	$1 = *($14)
	$15 = CALL db_store_i64(*(($0 + [2016])), (int_64)-4293729097406218240, $13, $1, ($16 + [16]), [52])
	*($14 + [60]) = $15
	$12 = ($0 + [2024])
	if ( (uint_64)($1 <= *($12)) ){ goto $label$7 }
	*($12) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($16 + [80]) = $14
	$1 = *($14)
	*($16 + [16]) = $1
	*($16 + [12]) = $15
	$11 = ($0 + [2036])
	$12 = *($11)
	if ( ((uint_32)$12 >= (uint_32)*(($0 + [2040]))) ){ goto $label$9 }
	*($12 + [8]) = $1
	*($12 + [16]) = $15
	*($16 + [80]) = [0]
	*($12) = $14
	*($11) = ($12 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $30(($0 + [2032]), ($16 + [80]), ($16 + [16]), ($16 + [12]))
	
.LABEL $label$8
	$14 = *($16 + [80])
	*($16 + [80]) = [0]
	if ( ($14 == 0) ){ goto $label$3 }
	CALL $276($14)
	
.LABEL $label$3
	*([0] + [4]) = ($16 + [96])
}

int_32 .FUNC $237 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

int_64 .FUNC _ZN12thedeosgames10tknaccountEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	$5 = [2864]
	$7 = *($1 + [8])
	if ( ((int_64)$7 == (int_64)71800348297988) ){ goto $label$2 }
	$5 = [2752]
	if ( ((int_64)$7 == (int_64)91625918253060) ){ goto $label$2 }
	$5 = [2768]
	if ( ((int_64)$7 == (int_64)82752230408708) ){ goto $label$2 }
	$5 = [2784]
	if ( ((int_64)$7 == (int_64)5327107) ){ goto $label$2 }
	$5 = [2800]
	if ( ((int_64)$7 == (int_64)1413697284) ){ goto $label$2 }
	$5 = [2816]
	if ( ((int_64)$7 == (int_64)4994016260158475524) ){ goto $label$2 }
	$5 = [2832]
	if ( ((int_64)$7 == (int_64)293287707140) ){ goto $label$2 }
	$9 = (int_64)0
	$5 = [2848]
	if ( ((int_64)$7 != (int_64)18930585150899460) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = [-1]
	
.LOOP $label$3:
	$4 = ($5 + $1)
	$2 = ($1 + [1])
	$1 = $2
	if ( *(($4 + [1])) ){ goto $label$3 }
	$3 = (CASTING uint_64)(uint_32 $2)
	$7 = (int_64)0
	$6 = (int_64)59
	$9 = (int_64)0
	
.LOOP $label$4:
	$8 = (int_64)0
	if ( ((uint_64)$7 >= (uint_64)$3) ){ goto $label$5 }
	$1 = *($5)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$1 = ($1 + [165])
	goto $label$6 
	
.LABEL $label$7
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$9 }
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	goto $label$8 
	
.LABEL $label$9
	$8 = ((int_64)$8 & (int_64)15)
	
.LABEL $label$8
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$4 }
	
.LABEL $label$1
	return $9
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $276($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $276($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*(($1 + [92])))
}

int_32 .FUNC snprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($4 + [12]) = $3
	$3 = CALL vsnprintf($0, $1, $2, $3)
	*([0] + [4]) = ($4 + [16])
	return $3
}

int_32 .FUNC floorf (float_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	$1 = (CASTING int_32)(float_32 $0)
	$2 = ((uint_32($1 >> [23]) & [255]) + [-127])
	if ( ((int_32)$2 > (int_32)[22]) ){ goto $label$1 }
	$3 = [0]
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$2 = uint_32([8388607] >> $2)
	if ( (($2 & $1) == 0) ){ goto $label$1 }
	*($4 + [12]) = ((float_32)$0 + (float_32)(float_32)1329227995784915872903807e12)
	$3 = (((int_32($1 >> [31]) & $2) + $1) & ((int_32)$2 ^ (int_32)[-1]))
	goto $label$2 
	
.LABEL $label$3
	*($4 + [8]) = ((float_32)$0 + (float_32)(float_32)1329227995784915872903807e12)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$2 }
	$3 = ( [-1082130432] ? $1 : ($1 & [2147483647]) )
	
.LABEL $label$2
	$0 = (CASTING float_32)(int_32 $3)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $295 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $275($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $294 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC __errno_location ()
{
	return [14472]
}

int_32 .FUNC $296 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $275($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $291 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$8 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($0 + [8])
	
.LABEL $label$2
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$9 = [11]
	$2 = ($2 + $1)
	$7 = ($1 << [1])
	$2 = ( $7 ? $2 : ($2 <= $7) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $275($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $276($8)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $290 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$3 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$4 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$4 = *($0 + [4])
	
.LABEL $label$3
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$5 }
	CALL $291($0, $3, (($1 - $3) + $4), $4, $4, [0], [0])
	$5 = *($0)
	
.LABEL $label$5
	if ( ($5 & [1]) ){ goto $label$7 }
	$5 = ($0 + [1])
	goto $label$6 
	
.LABEL $label$7
	$5 = *($0 + [8])
	
.LABEL $label$6
	CALL memset(($5 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($1 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $1
	
.LABEL $label$8
	*(($5 + $1)) = [0]
	
.LABEL $label$1
	return $0
}

void .FUNC _ZNSt3__19to_stringEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [14464], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $290(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $290(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC _ZNSt3__19to_stringEx (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [14448], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $290(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $290(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [40]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [44]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [48]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [52]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $235 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = (*([0] + [4]) - [176])
	$7 = $5
	*([0] + [4]) = $5
	$2 = *($1 + [4])
	$6 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$4
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($7 + [72])) = (int_64)0
	*((($7 + [32]) + [32])) = (int_64)0
	*((($7 + [32]) + [24])) = (int_64)0
	*($7 + [48]) = (int_64)0
	*($7 + [32]) = (int_64)0
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [800])
	CALL memcpy(($7 + [32]), $5, [8])
	CALL eosio_assert(((uint_32)($3 + [-8]) > (uint_32)[31]), [800])
	$1 = (($7 + [32]) + [16])
	CALL memcpy($1, ($5 + [8]), [32])
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	*(($3 = (($7 + [80]) + [24]))) = *(($1 + [24]))
	*(($5 = (($7 + [80]) + [16]))) = *(($1 + [16]))
	$4 = *($7 + [32])
	*($7 + [80]) = *($1)
	*($7 + [92]) = *(($1 + [12]))
	*($7 + [88]) = *(($1 + [8]))
	*((($7 + [112]) + [24])) = *($3)
	*((($7 + [112]) + [16])) = *($5)
	*($7 + [120]) = *($7 + [88])
	*($7 + [112]) = *($7 + [80])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($1) + $6))
	
.LABEL $label$6
	*(($3 = (($7 + [144]) + [24]))) = *((($7 + [112]) + [24]))
	*(($5 = (($7 + [144]) + [16]))) = *((($7 + [112]) + [16]))
	*($7 + [152]) = *($7 + [120])
	*($7 + [144]) = *($7 + [112])
	*(($7 + [24])) = *($3)
	*(($7 + [16])) = *($5)
	*($7) = *($7 + [144])
	*($7 + [8]) = *($7 + [152])
	CALL void $1((int_32 $4), (int_64 $7), (int_32 $6))
	*([0] + [4]) = ($7 + [176])
	return [1]
}

void .FUNC $278 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $275(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $276($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC __signbitl (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

int_32 .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [768])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $275([48])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [32])
	*($4 + [32]) = $0
	CALL $21(($8 + [32]), $4)
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [36])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $22($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $276($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC $23 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [576])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [32])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [576])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [32])
	return $0
}

void .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $26 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [576])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [32])
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [576])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [32])
	return $0
}

void .FUNC $329 ()
{
	(unreachable)
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC $232 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [208])
	*([0] + [4]) = $2
	*(($3 = $2) + [204]) = $0
	*($3 + [192]) = *($1)
	*($3 + [196]) = *($1 + [4])
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$2 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$2
	CALL read_action_data($2, $1)
	
.LABEL $label$1
	CALL $243(($3 + [16]), $2, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($2)
	
.LABEL $label$5
	*($3 + [12]) = ($3 + [192])
	*($3 + [8]) = ($3 + [204])
	CALL $244(($3 + [8]), ($3 + [16]))
	if ( ((*($3 + [84]) & [1]) == 0) ){ goto $label$6 }
	CALL $276(*(($3 + [92])))
	
.LABEL $label$6
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$7 }
	CALL $276(*(($3 + [56])))
	
.LABEL $label$7
	*([0] + [4]) = ($3 + [208])
	return [1]
}

int_32 .FUNC __toread (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC vsnprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [160])
	*([0] + [4]) = $4
	$5 = [-1]
	*($4 + [148]) = ( ($1 + [-1]) ? [0] : $1 )
	$0 = ( $0 ? ($4 + [158]) : $1 )
	*($4 + [144]) = $0
	*(($4 = CALL memset($4, [0], [144])) + [36]) = [48]
	*($4 + [75]) = [255]
	*($4 + [76]) = [-1]
	*($4 + [44]) = ($4 + [159])
	*($4 + [84]) = ($4 + [144])
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	*($0) = [0]
	$5 = CALL vfprintf($4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*(CALL __errno_location()) = [75]
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [160])
	return $5
}

int_32 .FUNC strtoul (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [144])
	*([0] + [4]) = $4
	*($4 + [4]) = $0
	*($4 + [44]) = $0
	*($4) = [0]
	*($4 + [76]) = [-1]
	*($4 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL __shlim($4, (int_64)0)
	$3 = CALL __intscan($4, $2, [1], (int_64)4294967295)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + (CASTING uint_32)(uint_64 ((int_64)(CASTING uint_64)(uint_32 (*($4 + [4]) - *(($4 + [8])))) + (int_64)*($4 + [120]))))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [144])
	return (CASTING uint_32)(uint_64 $3)
}

int_32 .FUNC __towrite (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

void .FUNC $280 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $275($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $276($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC __shlim (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$2 = *($0 + [4])
	$3 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($3 - $2))
	*($0 + [120]) = $4
	*($0 + [104]) = ( ( ($2 + (CASTING uint_32)(uint_64 $1)) ? $3 : ((int_64)$4 > (int_64)$1) ) ? $3 : ((int_64)$1 != (int_64)0) )
}

int_32 .FUNC __uflow (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = [-1]
	if ( CALL __toread($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($2 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$1 = *($2 + [15])
	
.LABEL $label$1
	*([0] + [4]) = ($2 + [16])
	return $1
}

int_32 .FUNC __shgetc (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$7 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$6 }
	
.LABEL $label$7
	$4 = CALL __uflow($0)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$5 }
	$1 = (int_64)
	$2 = *($0 + [4])
	$3 = *(($0 + [8]))
	if ( ((int_64)(CASTING int_64)(int_32 ($3 - $2)) < (int_64)$1($1 - *($0 + [120])))) ){ goto $label$4 }
	*($0 + [104]) = ($2 + (CASTING uint_32)(uint_64 ((int_64)$1 + (int_64)4294967295)))
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$5
	$3 = *(($0 + [8]))
	
.LABEL $label$4
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)) + (int_64)*($0 + [120]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)*($0) == (int_32)$4) ){ goto $label$8 }
	*($0) = $4
	
.LABEL $label$8
	return $4
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

int_32 .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [768])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $275([88])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [32])
	*($4 + [72]) = $0
	CALL $103(($8 + [32]), $4)
	*($4 + [76]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [76])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $104($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $276($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $100 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $276($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $276($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*(($1 + [92])))
}

int_32 .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [32]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [56]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $102 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $276($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $276($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [76]))
}

int_32 .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[31]), [800])
	CALL memcpy(($1 + [48]), *($0 + [4]), [32])
	$2 = (*($0 + [4]) + [32])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $104 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [32]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [56]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $106 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [32]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [800])
	CALL memcpy(($1 + [56]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $108 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN12thedeosgames6dicepcEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_32 $16
	float_64 $17
	float_32 $18
	int_32 $19
	int_32 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_64 $24
	int_64 $25
	int_32 $26
	$26 = (*([0] + [4]) - [480])
	*([0] + [4]) = $26
	CALL require_auth(*($0 + [176]))
	$5 = *(($0 + [1872]))
	$3 = *(($0 + [1876]))
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$1 }
	$20 = ($3 + [-24])
	$16 = ([0] - $5)
	
.LOOP $label$2:
	if ( ((int_64)*(*($20)) == (int_64)$1) ){ goto $label$1 }
	$3 = $20
	$13 = ($20 + [-24])
	$20 = $13
	if ( ((int_32)($13 + $16) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = ($0 + [1848])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [72]) == (int_32)$2), [176])
	goto $label$3 
	
.LABEL $label$4
	$3 = [0]
	$20 = CALL db_find_i64(*(($0 + [1848])), *(($0 + [1856])), (int_64)5445034581344518144, $1)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$3 }
	$3 = CALL $101($2, $20)
	CALL eosio_assert(((int_32)*($3 + [72]) == (int_32)$2), [176])
	
.LABEL $label$3
	$4 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($4, [1600])
	CALL eosio_assert(((int_32)*($3 + [56]) == (int_32)[1]), [5712])
	CALL eosio_assert(((int_64)*($3 + [40]) != (int_64)*(($0 + [176]))), [2960])
	*(($20 = (($26 + [384]) + [8]))) = *(($3 + [16]))
	$22 = *($3 + [8])
	*((($26 + [64]) + [12])) = *((($26 + [384]) + [12]))
	*((($26 + [64]) + [8])) = *($20)
	*($26 + [384]) = $22
	*($26 + [68]) = *($26 + [388])
	*($26 + [64]) = *($26 + [384])
	$22 = (CASTING uint_64)(uint_32 CALL _ZN12thedeosgames7tkncodeEN5eosio5assetE($26, ($26 + [64])))
	$9 = *(($0 + [2112]))
	$16 = *(($0 + [2116]))
	if ( ((int_32)$16 == (int_32)$9) ){ goto $label$5 }
	$20 = ($16 + [-24])
	$5 = ([0] - $9)
	
.LOOP $label$6:
	if ( ((int_64)*(*($20)) == (int_64)$22) ){ goto $label$5 }
	$16 = $20
	$13 = ($20 + [-24])
	$20 = $13
	if ( ((int_32)($13 + $5) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$20 = ($0 + [2088])
	if ( ((int_32)$16 == (int_32)$9) ){ goto $label$8 }
	$16 = *(($16 + [-24]))
	CALL eosio_assert(((int_32)*($16 + [56]) == (int_32)$20), [176])
	goto $label$7 
	
.LABEL $label$8
	$16 = [0]
	$13 = CALL db_find_i64(*(($0 + [2088])), *(($0 + [2096])), (int_64)6138558357033713664, $22)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$7 }
	$16 = CALL $122($20, $13)
	CALL eosio_assert(((int_32)*($16 + [56]) == (int_32)$20), [176])
	
.LABEL $label$7
	$5 = ($3 + [8])
	CALL eosio_assert(((int_32)$16 != (int_32)[0]), [2880])
	CALL eosio_assert((*($16 + [16]) == 0), [144])
	$7 = *(($3 + [40]))
	$6 = *(($3 + [16]))
	$9 = *($3 + [28])
	$20 = *($3 + [24])
	$18 = CALL floorf((DEMOTE float_32)(float_64 ((float_64)((float_64)(float_64)100 / (float_64)(CASTING float_64)(uint_32 ( $20 ? ([99] - $20) : ((int_32)*($3 + [32]) == (int_32)[1]) ))) * (float_64)(float_64)100)))
	$22 = *($3 + [8])
	CALL eosio_assert((uint_64)((int_64))((int_64)4611686018427387903 - $22) <= (int_64)9223372036854775807), [576])
	$10 = (Rounds 0)(((float_32)((float_32)$18 / (float_32)(float_32)100) * (float_32)(CASTING float_32)(int_64 $22)))
	$8 = (int_64))((int_64)0 - $22)
	$20 = [0]
	$25 = (uint_64)$6 >> (uint_64)(int_64)8
	$22 = $25)
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$13 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$13 = [0]
	
.LABEL $label$9
	CALL eosio_assert($13, [32])
	$20 = *(($3 + [24]))
	if ( ((uint_32)$9 >= (uint_32)$20) ){ goto $label$25 }
	if ( ((int_32)*(($3 + [32])) == (int_32)[1]) ){ goto $label$24 }
	
.LABEL $label$25
	if ( ((uint_32)$9 <= (uint_32)$20) ){ goto $label$26 }
	if ( (*(($3 + [32])) == 0) ){ goto $label$24 }
	
.LABEL $label$26
	$9 = (CASTING int_32)(float_64 ((float_64)(CASTING float_64)(int_64 *(($3 + [8]))) * (float_64)((float_64)(CASTING float_64)(uint_32 *($16 + [20])) / (float_64)(CASTING float_64)(uint_32 ((int_32)*($0 + [172]) * (int_32)[100])))))
	$20 = [5760]
	$13 = *([5760])
	if ( ($13 == 0) ){ goto $label$22 }
	
.LOOP $label$27:
	if ( ((int_32)$13 == (int_32)[37]) ){ goto $label$23 }
	CALL prints_l($20, [1])
	$20 = ($20 + [1])
	$13 = *($20)
	if ( $13 ){ goto $label$27 }
	goto $label$22 
	
.LABEL $label$24
	$20 = *($16 + [20])
	if ( ($20 == 0) ){ goto $label$28 }
	$10 = (int_64))($10 - (CASTING int_64)(int_32 (CASTING int_32)(float_64 ((float_64)(CASTING float_64)(uint_64 $10) * (float_64)((float_64)(CASTING float_64)(uint_32 $20) / (float_64)(CASTING float_64)(uint_32 ((int_32)*($0 + [172]) * (int_32)[100])))))))
	
.LABEL $label$28
	$14 = *(($3 + [16]))
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$22 = (uint_64)$14 >> (uint_64)(int_64)8)
	$20 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	
.LOOP $label$33:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$33 }
	
.LABEL $label$32
	$13 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	$13 = [0]
	
.LABEL $label$29
	CALL eosio_assert($13, [32])
	*(($26 + [424])) = [0]
	*($26 + [416]) = (int_64)0
	$20 = CALL strlen([2992])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$21 }
	*($26 + [416]) = ($20 << [1])
	$13 = (($26 + [416]) | [1])
	if ( $20 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$23
	CALL printi((CASTING int_64)(int_32 $9))
	CALL prints(($20 + [1]))
	
.LABEL $label$22
	$9 = [1664]
	if ( *($16 + [24]) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$21
	$9 = (($20 + [16]) & [-16])
	$13 = CALL $275($9)
	*($26 + [416]) = ($9 | [1])
	*($26 + [424]) = $13
	*($26 + [420]) = $20
	
.LABEL $label$20
	CALL memcpy($13, [2992], $20)
	
.LABEL $label$19
	*(($13 + $20)) = [0]
	CALL _ZNSt3__19to_stringEy(($26 + [344]), $1)
	$20 = *($26 + [344])
	$13 = ($20 & [1])
	$20 = CALL $279(($26 + [416]), ( *($26 + [352]) ? (($26 + [344]) | [1]) : $13 ), ( *($26 + [348]) ? uint_32($20 >> [1]) : $13 ))
	$13 = ($20 + [8])
	*((($26 + [400]) + [8])) = *($13)
	*($26 + [400]) = *($20)
	*($20) = [0]
	*(($20 + [4])) = [0]
	*($13) = [0]
	if ( ((*($26 + [344]) & [1]) == 0) ){ goto $label$34 }
	CALL $276(*((($26 + [344]) + [8])))
	
.LABEL $label$34
	if ( ((*($26 + [416]) & [1]) == 0) ){ goto $label$35 }
	CALL $276(*($26 + [424]))
	
.LABEL $label$35
	$15 = *(($0 + [176]))
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [1440]
	$23 = (int_64)0
	
.LOOP $label$36:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$41 }
	$13 = *($20)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$13 = ($13 + [165])
	goto $label$39 
	
.LABEL $label$41
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$38
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$37
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$24 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$36 }
	*($26 + [248]) = $23
	*(($20 = (($26 + [328]) + [8]))) = *(($5 + [8]))
	*($26 + [240]) = $15
	*($26 + [328]) = *($5)
	*((($26 + [48]) + [8])) = *($20)
	*((($26 + [48]) + [12])) = *((($26 + [328]) + [12]))
	*($26 + [48]) = *($26 + [328])
	$8 = CALL _ZN12thedeosgames10tknaccountEN5eosio5assetE($26, ($26 + [48]))
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [1792]
	$23 = (int_64)0
	
.LOOP $label$42:
	if ( ((uint_64)$22 > (uint_64)(int_64)7) ){ goto $label$47 }
	$13 = *($20)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$46 }
	$13 = ($13 + [165])
	goto $label$45 
	
.LABEL $label$47
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$46
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$45
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$44
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$43
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$24 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$42 }
	*(($26 + [440])) = $14
	*($26 + [424]) = $7
	*($26 + [416]) = $15
	*($26 + [432]) = $10
	CALL $295(($26 + [448]), ($26 + [400]))
	$20 = CALL $51(($26 + [344]), ($26 + [240]), $8, $23, ($26 + [416]))
	CALL $43(($26 + [296]), $20)
	$13 = *($26 + [296])
	CALL send_inline($13, (*($26 + [300]) - $13))
	$13 = *($26 + [296])
	if ( ($13 == 0) ){ goto $label$48 }
	*($26 + [300]) = $13
	CALL $276($13)
	
.LABEL $label$48
	$13 = *($20 + [28])
	if ( ($13 == 0) ){ goto $label$49 }
	*(($20 + [32])) = $13
	CALL $276($13)
	
.LABEL $label$49
	$13 = *($20 + [16])
	if ( ($13 == 0) ){ goto $label$50 }
	*(($20 + [20])) = $13
	CALL $276($13)
	
.LABEL $label$50
	if ( ((*($26 + [448]) & [1]) == 0) ){ goto $label$51 }
	CALL $276(*(($26 + [456])))
	
.LABEL $label$51
	$8 = (int_64)
	CALL eosio_assert((uint_64)(((int_64)$8($10 - *(($3 + [8])))) + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$20 = [0]
	$22 = $25
	
.LOOP $label$54:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$53 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$55 }
	
.LOOP $label$56:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$53 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$56 }
	
.LABEL $label$55
	$13 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$54 }
	goto $label$52 
	
.LABEL $label$53
	$13 = [0]
	
.LABEL $label$52
	CALL eosio_assert($13, [32])
	if ( ((*($26 + [400]) & [1]) == 0) ){ goto $label$57 }
	CALL $276(*($26 + [408]))
	
.LABEL $label$57
	$9 = [1824]
	if ( (*($16 + [24]) == 0) ){ goto $label$17 }
	
.LABEL $label$18
	if ( (*($16 + [20]) == 0) ){ goto $label$17 }
	$11 = *(($3 + [8]))
	if ( (CALL is_account(*($3 + [64])) == 0) ){ goto $label$17 }
	*(($26 + [352])) = [0]
	*($26 + [344]) = (int_64)0
	$20 = CALL strlen([3056])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$60 }
	*($26 + [344]) = ($20 << [1])
	$13 = (($26 + [344]) | [1])
	if ( $20 ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$60
	$19 = (($20 + [16]) & [-16])
	$13 = CALL $275($19)
	*($26 + [344]) = ($19 | [1])
	*($26 + [352]) = $13
	*($26 + [348]) = $20
	
.LABEL $label$59
	CALL memcpy($13, [3056], $20)
	
.LABEL $label$58
	*(($13 + $20)) = [0]
	CALL _ZNSt3__19to_stringEy(($26 + [240]), $1)
	$20 = *($26 + [240])
	$13 = ($20 & [1])
	$20 = CALL $279(($26 + [344]), ( *($26 + [248]) ? (($26 + [240]) | [1]) : $13 ), ( *($26 + [244]) ? uint_32($20 >> [1]) : $13 ))
	$13 = ($20 + [8])
	*((($26 + [416]) + [8])) = *($13)
	*($26 + [416]) = *($20)
	*($20) = [0]
	*(($20 + [4])) = [0]
	*($13) = [0]
	*((($26 + [296]) + [8])) = [0]
	*($26 + [296]) = (int_64)0
	$20 = CALL strlen([2224])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$63 }
	*($26 + [296]) = ($20 << [1])
	$19 = (($26 + [296]) | [1])
	$13 = $19
	if ( $20 ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$63
	$19 = (($20 + [16]) & [-16])
	$13 = CALL $275($19)
	*($26 + [296]) = ($19 | [1])
	*($26 + [304]) = $13
	*($26 + [300]) = $20
	$19 = (($26 + [296]) | [1])
	
.LABEL $label$62
	CALL memcpy($13, [2224], $20)
	
.LABEL $label$61
	*(($13 + $20)) = [0]
	$20 = *($26 + [296])
	$13 = ($20 & [1])
	$20 = CALL $279(($26 + [416]), ( *($26 + [304]) ? $19 : $13 ), ( *($26 + [300]) ? uint_32($20 >> [1]) : $13 ))
	$13 = ($20 + [8])
	*((($26 + [312]) + [8])) = *($13)
	*($26 + [312]) = *($20)
	*($20) = [0]
	*(($20 + [4])) = [0]
	*($13) = [0]
	if ( ((*($26 + [296]) & [1]) == 0) ){ goto $label$64 }
	CALL $276(*((($26 + [296]) + [8])))
	
.LABEL $label$64
	if ( ((*($26 + [416]) & [1]) == 0) ){ goto $label$65 }
	CALL $276(*($26 + [424]))
	
.LABEL $label$65
	if ( ((*($26 + [240]) & [1]) == 0) ){ goto $label$66 }
	CALL $276(*(($26 + [248])))
	
.LABEL $label$66
	if ( ((*($26 + [344]) & [1]) == 0) ){ goto $label$67 }
	CALL $276(*($26 + [352]))
	
.LABEL $label$67
	$20 = *(($16 + [24]))
	$13 = *($0 + [172])
	CALL eosio_assert([1], [576])
	$17 = ((float_64)(CASTING float_64)(uint_32 $11) * (float_64)((float_64)(CASTING float_64)(uint_32 $20) / (float_64)(CASTING float_64)(uint_32 ((int_32)$13 * (int_32)[100]))))
	$15 = (CASTING int_64)(float_64 $17)
	$20 = [0]
	$22 = (int_64)1397704004
	
.LOOP $label$70:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$69 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$71 }
	
.LOOP $label$72:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$69 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$72 }
	
.LABEL $label$71
	$13 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$70 }
	goto $label$68 
	
.LABEL $label$69
	$13 = [0]
	
.LABEL $label$68
	CALL eosio_assert($13, [32])
	*($26 + [440]) = [0]
	$22 = *(($3 + [64]))
	$20 = ($0 + [176])
	$24 = *($20)
	*($26 + [416]) = $24
	*($26 + [424]) = $22
	*($26 + [432]) = (int_64)-1
	*(($26 + [444])) = [0]
	*(($26 + [448])) = [0]
	$13 = CALL db_find_i64($24, $22, (int_64)3607749779137757184, (int_64)1397704004)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$73 }
	$13 = CALL $13(($26 + [416]), $13)
	CALL eosio_assert(((int_32)*($13 + [16]) == (int_32)($26 + [416])), [176])
	if ( (uint_64)(*($13) <= ((int_64)*(($0 + [172])) * (int_64)*($16 + [32]))) ){ goto $label$73 }
	$15 = (CASTING int_64)(float_64 ((float_64)$17 + (float_64)$17))
	
.LABEL $label$73
	$14 = *($20)
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [1440]
	$23 = (int_64)0
	
.LOOP $label$74:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$79 }
	$13 = *($20)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$78 }
	$13 = ($13 + [165])
	goto $label$77 
	
.LABEL $label$79
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$78
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$77
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$76
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$75
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$24 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$74 }
	*($26 + [304]) = $23
	*(($20 = (($26 + [280]) + [8]))) = *(($5 + [8]))
	*($26 + [296]) = $14
	*($26 + [280]) = *($5)
	*((($26 + [32]) + [8])) = *($20)
	*((($26 + [32]) + [12])) = *((($26 + [280]) + [12]))
	*($26 + [32]) = *($26 + [280])
	$12 = CALL _ZN12thedeosgames10tknaccountEN5eosio5assetE($26, ($26 + [32]))
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [1792]
	$23 = (int_64)0
	
.LOOP $label$80:
	if ( ((uint_64)$22 > (uint_64)(int_64)7) ){ goto $label$85 }
	$13 = *($20)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$84 }
	$13 = ($13 + [165])
	goto $label$83 
	
.LABEL $label$85
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$84
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$83
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$82
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$81
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$24 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$80 }
	*($26 + [240]) = $14
	*($26 + [256]) = $15
	*($26 + [248]) = *(($3 + [64]))
	CALL $295(($26 + [264]), ($26 + [312]))
	$20 = CALL $213(($26 + [344]), ($26 + [296]), $12, $23, ($26 + [240]))
	CALL $43(($26 + [400]), $20)
	$13 = *($26 + [400])
	CALL send_inline($13, (*($26 + [404]) - $13))
	$13 = *($26 + [400])
	if ( ($13 == 0) ){ goto $label$86 }
	*($26 + [404]) = $13
	CALL $276($13)
	
.LABEL $label$86
	$13 = *($20 + [28])
	if ( ($13 == 0) ){ goto $label$87 }
	*(($20 + [32])) = $13
	CALL $276($13)
	
.LABEL $label$87
	$13 = *($20 + [16])
	if ( ($13 == 0) ){ goto $label$88 }
	*(($20 + [20])) = $13
	CALL $276($13)
	
.LABEL $label$88
	if ( ((*($26 + [264]) & [1]) == 0) ){ goto $label$89 }
	CALL $276(*(($26 + [272])))
	
.LABEL $label$89
	$16 = *($26 + [440])
	if ( ($16 == 0) ){ goto $label$90 }
	$11 = ($26 + [444])
	$20 = *($11)
	if ( ((int_32)$20 == (int_32)$16) ){ goto $label$92 }
	
.LOOP $label$93:
	$20 = ($20 + [-24])
	$13 = *($20)
	*($20) = [0]
	if ( ($13 == 0) ){ goto $label$94 }
	CALL $276($13)
	
.LABEL $label$94
	if ( ((int_32)$16 != (int_32)$20) ){ goto $label$93 }
	$20 = *(($26 + [440]))
	goto $label$91 
	
.LABEL $label$92
	$20 = $16
	
.LABEL $label$91
	*($11) = $16
	CALL $276($20)
	
.LABEL $label$90
	if ( ((*($26 + [312]) & [1]) == 0) ){ goto $label$17 }
	CALL $276(*($26 + [320]))
	
.LABEL $label$17
	CALL eosio_assert($4, [288])
	CALL eosio_assert(((int_32)*($3 + [72]) == (int_32)$2), [336])
	CALL eosio_assert(((int_64)*(($0 + [1848])) == (int_64)CALL $fimport$14()), [384])
	*($3 + [56]) = [2]
	$22 = *($3)
	CALL eosio_assert([1], [448])
	*($26 + [352]) = (($26 + [416]) + [64])
	*($26 + [348]) = ($26 + [416])
	*($26 + [344]) = ($26 + [416])
	CALL $203(($26 + [344]), $3)
	CALL db_update_i64(*($3 + [76]), (int_64)0, ($26 + [416]), [64])
	$20 = ($0 + [1864])
	if ( (uint_64)($22 <= *($20)) ){ goto $label$95 }
	*($20) = ( (int_64)-2 ? ((int_64)$22 + (int_64)1) : ((uint_64)$22 > (uint_64)(int_64)-3) )
	
.LABEL $label$95
	$14 = *(($3 + [16]))
	CALL eosio_assert([1], [576])
	$22 = (uint_64)$14 >> (uint_64)(int_64)8)
	$20 = [0]
	
.LOOP $label$98:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$97 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$99 }
	
.LOOP $label$100:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$97 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$100 }
	
.LABEL $label$99
	$13 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$98 }
	goto $label$96 
	
.LABEL $label$97
	$13 = [0]
	
.LABEL $label$96
	CALL eosio_assert($13, [32])
	*(($20 = (($26 + [224]) + [8]))) = *(($5 + [8]))
	$22 = *($5)
	*((($26 + [16]) + [12])) = *((($26 + [224]) + [12]))
	*((($26 + [16]) + [8])) = *($20)
	*($26 + [224]) = $22
	*($26 + [20]) = *($26 + [228])
	*($26 + [16]) = *($26 + [224])
	$12 = CALL _ZN12thedeosgames10tknaccountEN5eosio5assetE($26, ($26 + [16]))
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [2704]
	$23 = (int_64)0
	
.LOOP $label$101:
	if ( ((uint_64)$22 > (uint_64)(int_64)7) ){ goto $label$106 }
	$13 = *($20)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$105 }
	$13 = ($13 + [165])
	goto $label$104 
	
.LABEL $label$106
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$103 }
	goto $label$102 
	
.LABEL $label$105
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$104
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$103
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$102
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$24 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$101 }
	$22 = (int_64)0
	$15 = (int_64)0
	$20 = ($3 + [16])
	if ( ((int_32)CALL db_find_i64($12, $7, $23, (uint_64)*($20) >> (uint_64)(int_64)8)) < (int_32)[0]) ){ goto $label$107 }
	$24 = *(($5 + [8]))
	*((($26 + [208]) + [8])) = $24
	$21 = *($5)
	*(($26 + [8])) = $24
	*($26 + [208]) = $21
	*($26 + [4]) = *($26 + [212])
	*($26) = *($26 + [208])
	$24 = CALL _ZN12thedeosgames10tknaccountEN5eosio5assetE($26, $26)
	$21 = *($20)
	*(($26 + [448])) = [0]
	*($26 + [424]) = $7
	*($26 + [416]) = $24
	*($26 + [432]) = (int_64)-1
	*($26 + [440]) = (int_64)0
	$20 = CALL $57(($26 + [416]), (uint_64)$21 >> (uint_64)(int_64)8), [1936]
	$14 = *($20) + [8])
	$15 = *($20)
	$16 = *($26 + [440])
	if ( ($16 == 0) ){ goto $label$107 }
	$2 = ($26 + [444])
	$20 = *($2)
	if ( ((int_32)$20 == (int_32)$16) ){ goto $label$109 }
	
.LOOP $label$110:
	$20 = ($20 + [-24])
	$13 = *($20)
	*($20) = [0]
	if ( ($13 == 0) ){ goto $label$111 }
	CALL $276($13)
	
.LABEL $label$111
	if ( ((int_32)$16 != (int_32)$20) ){ goto $label$110 }
	$20 = *(($26 + [440]))
	goto $label$108 
	
.LABEL $label$109
	$20 = $16
	
.LABEL $label$108
	*($2) = $16
	CALL $276($20)
	
.LABEL $label$107
	$21 = (int_64)59
	$20 = [1424]
	$23 = (int_64)0
	
.LOOP $label$112:
	if ( ((uint_64)$22 > (uint_64)(int_64)10) ){ goto $label$117 }
	$13 = *($20)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$116 }
	$13 = ($13 + [165])
	goto $label$115 
	
.LABEL $label$117
	$24 = (int_64)0
	if ( ((int_64)$22 == (int_64)11) ){ goto $label$114 }
	goto $label$113 
	
.LABEL $label$116
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$115
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$114
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$113
	$20 = ($20 + [1])
	$21 = ((int_64)$21 + (int_64)-5)
	$23 = ((int_64)$24 | (int_64)$23)
	$22 = ((int_64)$22 + (int_64)1)
	if ( ((int_64)$22 != (int_64)13) ){ goto $label$112 }
	*(($26 + [448])) = [0]
	*($26 + [424]) = $7
	*($26 + [416]) = $23
	*($26 + [432]) = (int_64)-1
	$22 = (int_64)0
	*($26 + [440]) = (int_64)0
	$20 = CALL $57(($26 + [416]), (int_64)5459781, [1936])
	*((($26 + [344]) + [8])) = *(($20 + [8]))
	*($26 + [344]) = *($20)
	$16 = *($26 + [440])
	if ( ($16 == 0) ){ goto $label$118 }
	$2 = ($26 + [444])
	$20 = *($2)
	if ( ((int_32)$20 == (int_32)$16) ){ goto $label$120 }
	
.LOOP $label$121:
	$20 = ($20 + [-24])
	$13 = *($20)
	*($20) = [0]
	if ( ($13 == 0) ){ goto $label$122 }
	CALL $276($13)
	
.LABEL $label$122
	if ( ((int_32)$16 != (int_32)$20) ){ goto $label$121 }
	$20 = *(($26 + [440]))
	goto $label$119 
	
.LABEL $label$120
	$20 = $16
	
.LABEL $label$119
	*($2) = $16
	CALL $276($20)
	
.LABEL $label$118
	$12 = *($0)
	$7 = *(($0 + [176]))
	$21 = (int_64)59
	$20 = [1440]
	$23 = (int_64)0
	
.LOOP $label$123:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$128 }
	$13 = *($20)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$127 }
	$13 = ($13 + [165])
	goto $label$126 
	
.LABEL $label$128
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$125 }
	goto $label$124 
	
.LABEL $label$127
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$126
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$125
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$124
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$24 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$123 }
	*($26 + [424]) = $23
	*($26 + [416]) = $7
	$20 = *(($3 + [32]))
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$0 = ( [3136] ? [3152] : $20 )
	$20 = [0]
	
.LOOP $label$131:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$130 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$132 }
	
.LOOP $label$133:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$130 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$133 }
	
.LABEL $label$132
	$13 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$131 }
	goto $label$129 
	
.LABEL $label$130
	$13 = [0]
	
.LABEL $label$129
	CALL eosio_assert($13, [32])
	*($26 + [80]) = $1
	*($26 + [88]) = *(($3 + [40]))
	*(($26 + [104])) = *(($5 + [8]))
	$22 = *($5)
	*((($26 + [80]) + [40])) = [0]
	*($26 + [96]) = $22
	*($26 + [112]) = (int_64)0
	$13 = ($26 + [112])
	$20 = CALL strlen($0)
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$135 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$138 }
	*(($26 + [112])) = ($20 << [1])
	$13 = ($13 + [1])
	if ( $20 ){ goto $label$137 }
	goto $label$136 
	
.LABEL $label$138
	$16 = (($20 + [16]) & [-16])
	$13 = CALL $275($16)
	*(($26 + [112])) = ($16 | [1])
	*(($26 + [120])) = $13
	*(($26 + [116])) = $20
	
.LABEL $label$137
	CALL memcpy($13, $0, $20)
	
.LABEL $label$136
	*(($13 + $20)) = [0]
	$20 = *(($3 + [24]))
	*(($26 + [136])) = $6
	*($26 + [128]) = $10
	*($26 + [124]) = $20
	$20 = *(($3 + [28]))
	*(($26 + [156])) = [0]
	*(($26 + [152])) = [0]
	*($26 + [148]) = [0]
	*($26 + [144]) = $20
	$13 = ($26 + [148])
	$20 = CALL strlen($9)
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$134 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$141 }
	*(($26 + [148])) = ($20 << [1])
	$13 = ($13 + [1])
	if ( $20 ){ goto $label$140 }
	goto $label$139 
	
.LABEL $label$141
	$3 = (($20 + [16]) & [-16])
	$13 = CALL $275($3)
	*(($26 + [148])) = ($3 | [1])
	*(($26 + [156])) = $13
	*(($26 + [152])) = $20
	
.LABEL $label$140
	CALL memcpy($13, $9, $20)
	
.LABEL $label$139
	*(($13 + $20)) = [0]
	*(($26 + [168])) = $6
	*(($26 + [184])) = $14
	*(($26 + [204])) = *(($26 + [356]))
	*(($26 + [200])) = *(($26 + [352]))
	*(($26 + [196])) = *($26 + [348])
	*($26 + [160]) = $8
	*($26 + [176]) = $15
	*($26 + [192]) = *($26 + [344])
	CALL $181($12, ($26 + [416]), ($26 + [80]))
	if ( ((*(($26 + [148])) & [1]) == 0) ){ goto $label$142 }
	CALL $276(*(($26 + [156])))
	
.LABEL $label$142
	if ( ((*(($26 + [112])) & [1]) == 0) ){ goto $label$143 }
	CALL $276(*(($26 + [120])))
	
.LABEL $label$143
	*([0] + [4]) = ($26 + [480])
	return (unreachable)
	
.LABEL $label$135
	CALL $277($13)
	
.LABEL $label$134
	CALL $277($13)
	
.LABEL $label$16
	CALL $277(($26 + [416]))
	
.LABEL $label$15
	CALL $277(($26 + [344]))
	
.LABEL $label$14
	CALL $277(($26 + [296]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC __mo_lookup (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = *($0)
	$10 = ((int_32)$3 == (int_32)[-1794895138])
	$9 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	$4 = *($0 + [8])
	$5 = ( $4 ? $9 : $10 )
	if ( ((uint_32)$5 >= (uint_32)uint_32($1 >> [2])) ){ goto $label$4 }
	$12 = ($1 - ($5 << [2]))
	$11 = *($0 + [12])
	$6 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$6 >= (uint_32)$12) ){ goto $label$3 }
	$11 = *($0 + [16])
	$10 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$10 >= (uint_32)$12) ){ goto $label$2 }
	if ( ((($10 | $6) & [3]) == 0) ){ goto $label$1 }
	return [0]
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	$12 = uint_32($6 >> [2])
	if ( ((int_32)$3 != (int_32)[-1794895138]) ){ goto $label$16 }
	$5 = uint_32($5 >> [1])
	$6 = ($5 << [1])
	$9 = ($0 + (($6 + $12) << [2]))
	$11 = *(($9 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$15 }
	$8 = *($9)
	if ( ((uint_32)$8 >= (uint_32)($1 - $11)) ){ goto $label$14 }
	$9 = $5
	$7 = [0]
	
.LOOP $label$17:
	if ( *(($0 + ($11 + $8))) ){ goto $label$9 }
	$11 = CALL strcmp($2, ($0 + $11))
	if ( ($11 == 0) ){ goto $label$11 }
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$7 }
	$13 = [0]
	$4 = ( $9 ? ($4 - $9) : $11 )
	$9 = uint_32($4 >> [1])
	$11 = ((int_32)$11 < (int_32)[0])
	$7 = ( $7 ? $5 : $11 )
	$5 = ($7 + $9)
	$6 = ($5 << [1])
	$8 = ($0 + (($6 + $12) << [2]))
	$11 = *(($8 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$10 }
	$8 = *($8)
	if ( ($8 <= ($1 - $11)) ){ goto $label$17 }
	goto $label$10 
	
.LABEL $label$16
	$8 = uint_32($9 >> [1])
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$13 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ((uint_32)$11 >= (uint_32)($1 - $4)) ){ goto $label$12 }
	$5 = $8
	$7 = [0]
	
.LOOP $label$18:
	if ( *(($0 + ($4 + $11))) ){ goto $label$8 }
	$4 = CALL strcmp($2, ($0 + $4))
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((int_32)$9 == (int_32)[1]) ){ goto $label$6 }
	$13 = [0]
	$9 = ( $5 ? ($9 - $5) : $4 )
	$5 = uint_32($9 >> [1])
	$4 = ((int_32)$4 < (int_32)[0])
	$7 = ( $7 ? $8 : $4 )
	$8 = ($7 + $5)
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$10 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ($11 <= ($1 - $4)) ){ goto $label$18 }
	goto $label$10 
	
.LABEL $label$15
	return [0]
	
.LABEL $label$14
	return [0]
	
.LABEL $label$13
	return [0]
	
.LABEL $label$12
	return [0]
	
.LABEL $label$11
	$9 = ((int_32)$3 == (int_32)[-1794895138])
	$10 = ($0 + (($6 + uint_32($10 >> [2])) << [2]))
	$4 = *(($10 + [4]))
	$11 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$5 }
	$13 = [0]
	$4 = *($10)
	$4 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$4 >= (uint_32)($1 - $11)) ){ goto $label$10 }
	return ( [0] ? ($0 + $11) : *(($0 + ($11 + $4))) )
	
.LABEL $label$10
	return $13
	
.LABEL $label$9
	return [0]
	
.LABEL $label$8
	return [0]
	
.LABEL $label$7
	return [0]
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	return [0]
}

int_32 .FUNC $231 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$4 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = [0]
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [800])
	CALL memcpy($6, $4, [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[8]), [800])
	$7 = ($6 + [8])
	CALL memcpy($7, ($4 + [8]), [1])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($4)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($7)
	$3 = *($6)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 ($4 & [255])), (int_32 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC strcmp (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ((int_32)$2 != (int_32)($3 & [255])) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	
.LOOP $label$2:
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 == (int_32)($3 & [255])) ){ goto $label$2 }
	
.LABEL $label$1
	return ($2 - ($3 & [255]))
}

int_32 .FUNC $219 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [800])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [800])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

int_32 .FUNC $38 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [576])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [32])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [576])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [32])
	return $0
}

void .FUNC $39 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [768])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $275([56])
	$4 = CALL $38($6)
	*($6 + [40]) = $0
	CALL $47(($8 + [32]), $4)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($8 + [16]) = $5)
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $39(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $276($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $34 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN12thedeosgames6paydivEmyN5eosio5assetEmm (int_32 $0, int_32 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	float_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_32 $18
	$18 = (*([0] + [4]) - [240])
	*([0] + [4]) = $18
	CALL eosio_assert([1], [576])
	$12 = [0]
	$14 = (int_64)1397704004
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$9 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [32])
	*((($18 + [136]) + [32])) = [0]
	*($18 + [152]) = (int_64)-1
	*($18 + [160]) = (int_64)0
	$14 = *($0 + [176])
	*($18 + [136]) = $14
	*($18 + [144]) = $2
	$12 = CALL db_find_i64($14, $2, (int_64)5300888951328866304, (int_64)1397704004)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$7 }
	$12 = CALL $36(($18 + [136]), $12)
	CALL eosio_assert(((int_32)*($12 + [40]) == (int_32)($18 + [136])), [176])
	CALL eosio_assert([1], [288])
	CALL eosio_assert(((int_32)*($12 + [40]) == (int_32)($18 + [136])), [336])
	CALL eosio_assert(((int_64)*($18 + [136]) == (int_64)CALL $fimport$14()), [384])
	$14 = *($12 + [8])
	CALL eosio_assert([1], [448])
	*($18 + [232]) = (($18 + [176]) + [40])
	*($18 + [228]) = ($18 + [176])
	*($18 + [224]) = ($18 + [176])
	CALL $37(($18 + [224]), $12)
	CALL db_update_i64(*($12 + [44]), (int_64)0, ($18 + [176]), [40])
	$12 = ($18 + [152])
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( (uint_64)($14) <= *($12)) ){ goto $label$6 }
	*($12) = ((int_64)$14 + (int_64)1)
	goto $label$6 
	
.LABEL $label$7
	$2 = *(($0 + [176]))
	CALL eosio_assert(((int_64)*($18 + [136]) == (int_64)CALL $fimport$14()), [512])
	$12 = CALL $275([56])
	$9 = CALL $38($12)
	*($12 + [40]) = ($18 + [136])
	*($12 + [8]) = (int_64)357812225028
	*($12) = (int_64)0
	*(($12 + [36])) = *(($3 + [12]))
	*(($12 + [32])) = *(($3 + [8]))
	*(($12 + [28])) = *(($3 + [4]))
	*($12 + [24]) = *($3)
	*($18 + [232]) = (($18 + [176]) + [40])
	*($18 + [228]) = ($18 + [176])
	*($18 + [224]) = ($18 + [176])
	CALL $37(($18 + [224]), $9)
	$14 = (uint_64)*($12 + [8]) >> (uint_64)(int_64)8
	$6 = CALL db_store_i64(*((($18 + [136]) + [8])), (int_64)5300888951328866304, $2, $14), ($18 + [176]), [40]
	*($12 + [44]) = $6)
	$9 = ($18 + [152])
	if ( (uint_64)($14 <= *($9)) ){ goto $label$8 }
	*($9) = ((int_64)$14 + (int_64)1)
	
.LABEL $label$8
	*($18 + [224]) = $12
	$14 = (uint_64)*(($12 + [8])) >> (uint_64)(int_64)8
	*($18 + [176]) = $14)
	*($18 + [120]) = $6
	$9 = *((($18 + [136]) + [28]))
	if ( ((uint_32)$9 >= (uint_32)*(($18 + [168]))) ){ goto $label$10 }
	*($9 + [8]) = $14
	*($9 + [16]) = $6
	*($18 + [224]) = [0]
	*($9) = $12
	*(($18 + [164])) = ($9 + [24])
	goto $label$9 
	
.LABEL $label$10
	CALL $39(($18 + [160]), ($18 + [224]), ($18 + [176]), ($18 + [120]))
	
.LABEL $label$9
	$12 = *($18 + [224])
	*($18 + [224]) = [0]
	if ( ($12 == 0) ){ goto $label$6 }
	CALL $276($12)
	
.LABEL $label$6
	$14 = *($3)
	*(($18 + [184])) = [0]
	*($18 + [176]) = (int_64)0
	$11 = (CASTING float_64)(int_64 $14)
	$8 = (Rounds 0)(((float_64)((float_64)((float_64)( ( (float_64)0.36 ? (float_64)0.45 : $4 ) ? ( (float_64)0.36 ? (float_64)0.6 : $4 ) : $5 ) * (float_64)(float_64)0.83) * (float_64)$11) / (float_64)(float_64)100))
	$7 = (Rounds 0)(((float_64)((float_64)((float_64)( ( (float_64)0.72 ? (float_64)0.9 : $4 ) ? ( (float_64)0.72 ? (float_64)1.2 : $4 ) : $5 ) * (float_64)(float_64)0.83) * (float_64)$11) / (float_64)(float_64)100))
	$12 = CALL strlen([1344])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$15 }
	*($18 + [176]) = ($12 << [1])
	$9 = (($18 + [176]) | [1])
	if ( $12 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$4 = (($12 + [16]) & [-16])
	$9 = CALL $275($4)
	*($18 + [176]) = ($4 | [1])
	*($18 + [184]) = $9
	*($18 + [180]) = $12
	
.LABEL $label$14
	CALL memcpy($9, [1344], $12)
	
.LABEL $label$13
	*(($9 + $12)) = [0]
	CALL _ZNSt3__19to_stringEm(($18 + [224]), $1)
	$12 = *($18 + [224])
	$9 = ($12 & [1])
	$12 = CALL $279(($18 + [176]), ( *($18 + [232]) ? (($18 + [224]) | [1]) : $9 ), ( *($18 + [228]) ? uint_32($12 >> [1]) : $9 ))
	$9 = ($12 + [8])
	*((($18 + [120]) + [8])) = *($9)
	*($18 + [120]) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($9) = [0]
	if ( ((*($18 + [224]) & [1]) == 0) ){ goto $label$16 }
	CALL $276(*((($18 + [224]) + [8])))
	
.LABEL $label$16
	if ( ((*($18 + [176]) & [1]) == 0) ){ goto $label$17 }
	CALL $276(*($18 + [184]))
	
.LABEL $label$17
	*(($18 + [184])) = [0]
	*($18 + [176]) = (int_64)0
	$12 = CALL strlen([1392])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$20 }
	*($18 + [176]) = ($12 << [1])
	$9 = (($18 + [176]) | [1])
	if ( $12 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$4 = (($12 + [16]) & [-16])
	$9 = CALL $275($4)
	*($18 + [176]) = ($4 | [1])
	*($18 + [184]) = $9
	*($18 + [180]) = $12
	
.LABEL $label$19
	CALL memcpy($9, [1392], $12)
	
.LABEL $label$18
	*(($9 + $12)) = [0]
	CALL _ZNSt3__19to_stringEm(($18 + [224]), $1)
	$12 = *($18 + [224])
	$9 = ($12 & [1])
	$12 = CALL $279(($18 + [176]), ( *($18 + [232]) ? (($18 + [224]) | [1]) : $9 ), ( *($18 + [228]) ? uint_32($12 >> [1]) : $9 ))
	$9 = ($12 + [8])
	*((($18 + [104]) + [8])) = *($9)
	*($18 + [104]) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($9) = [0]
	if ( ((*($18 + [224]) & [1]) == 0) ){ goto $label$21 }
	CALL $276(*((($18 + [224]) + [8])))
	
.LABEL $label$21
	if ( ((*($18 + [176]) & [1]) == 0) ){ goto $label$22 }
	CALL $276(*($18 + [184]))
	
.LABEL $label$22
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1424]
	$15 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$14 > (uint_64)(int_64)10) ){ goto $label$28 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$9 = ($9 + [165])
	goto $label$26 
	
.LABEL $label$28
	$2 = (int_64)0
	if ( ((int_64)$14 == (int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$24
	$12 = ($12 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$15 = ((int_64)$2 | (int_64)$15)
	$14 = ((int_64)$14 + (int_64)1)
	if ( ((int_64)$14 != (int_64)13) ){ goto $label$23 }
	$10 = *(($0 + [176]))
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1440]
	$16 = (int_64)0
	
.LOOP $label$29:
	if ( ((uint_64)$14 > (uint_64)(int_64)5) ){ goto $label$34 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$9 = ($9 + [165])
	goto $label$32 
	
.LABEL $label$34
	$2 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$33
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$31
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$30
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$16 = ((int_64)$2 | (int_64)$16)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$29 }
	$14 = (int_64)0
	$2 = (int_64)59
	$12 = [1456]
	$17 = (int_64)0
	
.LOOP $label$35:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$36 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$9 = ($9 + [165])
	goto $label$37 
	
.LABEL $label$38
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$36
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$13 | (int_64)$17)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$35 }
	CALL eosio_assert((uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$14 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$41:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$40 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$42 }
	
.LOOP $label$43:
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$40 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$43 }
	
.LABEL $label$42
	$9 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$40
	$9 = [0]
	
.LABEL $label$39
	CALL eosio_assert($9, [32])
	*(($9 = (($18 + [56]) + [24]))) = (int_64)1397703940
	*($18 + [64]) = $17
	*($18 + [72]) = $7
	*($18 + [56]) = *(($0 + [176]))
	CALL $295(($18 + [88]), ($18 + [120]))
	*(($12 = CALL $275([16]))) = $10
	*($12 + [8]) = $16
	*($18 + [224]) = $12
	$12 = ($12 + [16])
	*($18 + [232]) = $12
	*($18 + [228]) = $12
	*($18 + [176]) = *($18 + [56])
	*($18 + [184]) = *($18 + [64])
	*((($18 + [176]) + [24])) = *($9)
	*($18 + [192]) = *($18 + [72])
	$12 = (($18 + [56]) + [40])
	*(($9 = (($18 + [176]) + [40]))) = *($12)
	*($18 + [208]) = *($18 + [88])
	*($18 + [88]) = [0]
	*(($18 + [92])) = [0]
	*($12) = [0]
	CALL $40($15, (int_64)-3617168760277827584, ($18 + [224]), ($18 + [176]))
	if ( ((*($18 + [208]) & [1]) == 0) ){ goto $label$44 }
	CALL $276(*($9))
	
.LABEL $label$44
	$12 = *($18 + [224])
	if ( ($12 == 0) ){ goto $label$45 }
	*($18 + [228]) = $12
	CALL $276($12)
	
.LABEL $label$45
	if ( ((*(($18 + [88])) & [1]) == 0) ){ goto $label$46 }
	CALL $276(*(($18 + [96])))
	
.LABEL $label$46
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1424]
	$15 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$14 > (uint_64)(int_64)10) ){ goto $label$52 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$9 = ($9 + [165])
	goto $label$50 
	
.LABEL $label$52
	$2 = (int_64)0
	if ( ((int_64)$14 == (int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$48
	$12 = ($12 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$15 = ((int_64)$2 | (int_64)$15)
	$14 = ((int_64)$14 + (int_64)1)
	if ( ((int_64)$14 != (int_64)13) ){ goto $label$47 }
	$7 = *(($0 + [176]))
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1440]
	$16 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$14 > (uint_64)(int_64)5) ){ goto $label$58 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$9 = ($9 + [165])
	goto $label$56 
	
.LABEL $label$58
	$2 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$54
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$16 = ((int_64)$2 | (int_64)$16)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$53 }
	$14 = (int_64)0
	$2 = (int_64)59
	$12 = [1472]
	$17 = (int_64)0
	
.LOOP $label$59:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$60 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$62 }
	$9 = ($9 + [165])
	goto $label$61 
	
.LABEL $label$62
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$61
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$60
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$13 | (int_64)$17)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$59 }
	CALL eosio_assert((uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [576])
	$14 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$65:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$64 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$66 }
	
.LOOP $label$67:
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$64 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$67 }
	
.LABEL $label$66
	$9 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$65 }
	goto $label$63 
	
.LABEL $label$64
	$9 = [0]
	
.LABEL $label$63
	CALL eosio_assert($9, [32])
	*(($9 = (($18 + [8]) + [24]))) = (int_64)1397703940
	*($18 + [16]) = $17
	*($18 + [24]) = $8
	*($18 + [8]) = *(($0 + [176]))
	CALL $295(($18 + [40]), ($18 + [104]))
	*(($12 = CALL $275([16]))) = $7
	*($12 + [8]) = $16
	*($18 + [224]) = $12
	$12 = ($12 + [16])
	*($18 + [232]) = $12
	*($18 + [228]) = $12
	*($18 + [176]) = *($18 + [8])
	*($18 + [184]) = *($18 + [16])
	*((($18 + [176]) + [24])) = *($9)
	*($18 + [192]) = *($18 + [24])
	$12 = (($18 + [8]) + [40])
	*(($9 = (($18 + [176]) + [40]))) = *($12)
	*($18 + [208]) = *($18 + [40])
	*($18 + [40]) = [0]
	*(($18 + [44])) = [0]
	*($12) = [0]
	CALL $40($15, (int_64)-3617168760277827584, ($18 + [224]), ($18 + [176]))
	if ( ((*($18 + [208]) & [1]) == 0) ){ goto $label$68 }
	CALL $276(*($9))
	
.LABEL $label$68
	$12 = *($18 + [224])
	if ( ($12 == 0) ){ goto $label$69 }
	*($18 + [228]) = $12
	CALL $276($12)
	
.LABEL $label$69
	if ( ((*(($18 + [40])) & [1]) == 0) ){ goto $label$70 }
	CALL $276(*(($18 + [48])))
	
.LABEL $label$70
	if ( ((*($18 + [104]) & [1]) == 0) ){ goto $label$71 }
	CALL $276(*($18 + [112]))
	
.LABEL $label$71
	if ( ((*($18 + [120]) & [1]) == 0) ){ goto $label$72 }
	CALL $276(*($18 + [128]))
	
.LABEL $label$72
	$0 = *($18 + [160])
	if ( ($0 == 0) ){ goto $label$73 }
	$4 = ($18 + [164])
	$12 = *($4)
	if ( ((int_32)$12 == (int_32)$0) ){ goto $label$75 }
	
.LOOP $label$76:
	$12 = ($12 + [-24])
	$9 = *($12)
	*($12) = [0]
	if ( ($9 == 0) ){ goto $label$77 }
	CALL $276($9)
	
.LABEL $label$77
	if ( ((int_32)$0 != (int_32)$12) ){ goto $label$76 }
	$12 = *(($18 + [160]))
	goto $label$74 
	
.LABEL $label$75
	$12 = $0
	
.LABEL $label$74
	*($4) = $0
	CALL $276($12)
	
.LABEL $label$73
	*([0] + [4]) = ($18 + [240])
	return (unreachable)
	
.LABEL $label$12
	CALL $277(($18 + [176]))
	
.LABEL $label$11
	CALL $277(($18 + [176]))
	(unreachable)
}

void .FUNC _ZN12thedeosgames8gettransEv (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL transaction_size()
	$5 = *([0] + [4])
	$3 = ($5 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $3
	$4 = CALL read_transaction($3, $2)
	CALL eosio_assert(((int_32)$2 == (int_32)$4), [1488])
	CALL sha256($3, $4, $0)
	*([0] + [4]) = $5
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[31]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [32])
	$2 = (*($0 + [4]) + [32])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $30 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $275(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $294($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $276($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $276($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN12thedeosgames8slotseosEyN5eosio5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [176])
	*([0] + [4]) = $12
	$9 = *($2 + [8])
	CALL eosio_assert(((int_64)$9 == (int_64)1397703940), [1248])
	CALL eosio_assert(((int_64)$1 != (int_64)$3), [1264])
	CALL eosio_assert(((int_64)*($0 + [176]) != (int_64)$3), [1312])
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [32])
	$8 = *(($0 + [2032]))
	$11 = *(($0 + [2036]))
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$6 }
	$10 = ($11 + [-24])
	$4 = ([0] - $8)
	
.LOOP $label$7:
	if ( ((int_64)*(*($10)) == (int_64)1) ){ goto $label$6 }
	$11 = $10
	$5 = ($10 + [-24])
	$10 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$10 = ($0 + [2008])
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$9 }
	$11 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [56]) == (int_32)$10), [176])
	goto $label$8 
	
.LABEL $label$9
	$11 = [0]
	$5 = CALL db_find_i64(*(($0 + [2008])), *(($0 + [2016])), (int_64)-4293729097406218240, (int_64)1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$8 }
	$11 = CALL $6($10, $5)
	CALL eosio_assert(((int_32)*($11 + [56]) == (int_32)$10), [176])
	
.LABEL $label$8
	$5 = [0]
	$4 = ((int_32)$11 != (int_32)[0])
	CALL eosio_assert($4, [1200])
	$9 = *($2)
	if ( ((int_64)*($11 + [48]) > (int_64)$9) ){ goto $label$10 }
	$5 = ((int_64)$9 <= (int_64)*($11 + [52]))
	
.LABEL $label$10
	CALL eosio_assert($5, [112])
	CALL eosio_assert((*($11 + [8]) == 0), [144])
	CALL require_auth($1)
	CALL eosio_assert($4, [288])
	CALL eosio_assert(((int_32)*($11 + [56]) == (int_32)$10), [336])
	CALL eosio_assert(((int_64)*(($0 + [2008])) == (int_64)CALL $fimport$14()), [384])
	*($11 + [16]) = ((int_64)*($11 + [16]) + (int_64)1)
	$9 = *($11)
	CALL eosio_assert([1], [448])
	*($12 + [40]) = (($12 + [80]) + [52])
	*($12 + [36]) = ($12 + [80])
	*($12 + [32]) = ($12 + [80])
	CALL $8(($12 + [32]), $11)
	CALL db_update_i64(*($11 + [60]), (int_64)0, ($12 + [80]), [52])
	$10 = ($0 + [2024])
	if ( (uint_64)($9 <= *($10)) ){ goto $label$11 }
	*($10) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	CALL _ZN12thedeosgames8gettransEv(($12 + [32]), $10)
	$7 = *(($0 + [176]))
	CALL eosio_assert(((int_64)*($0 + [1928]) == (int_64)CALL $fimport$14()), [512])
	*(($5 = CALL $275([112])) + [16]) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [576])
	$6 = ($0 + [1928])
	$8 = ($5 + [8])
	$9 = (int_64)5462355
	$10 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$4 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$4 = [0]
	
.LABEL $label$12
	CALL eosio_assert($4, [32])
	*($5 + [88]) = $6
	*($5) = *($11 + [16])
	*(($8 + [12])) = *(($2 + [12]))
	*(($8 + [8])) = *(($2 + [8]))
	*(($8 + [4])) = *(($2 + [4]))
	*($8) = *($2)
	*($5 + [24]) = $1
	*(($5 + [72])) = *(($12 + [56]))
	*(($5 + [64])) = *(($12 + [48]))
	*(($5 + [56])) = *($12 + [40])
	*($5 + [48]) = *($12 + [32])
	$9 = CALL current_time()
	*($5 + [32]) = $3
	*($5 + [80]) = ((int_64)((uint_64)$9 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($12 + [168]) = (($12 + [80]) + [80])
	*($12 + [164]) = ($12 + [80])
	*($12 + [160]) = ($12 + [80])
	CALL $33(($12 + [160]), $5)
	$9 = *($5)
	$4 = CALL db_store_i64(*(($0 + [1936])), (int_64)-4293729067555704832, $7, $9, ($12 + [80]), [80])
	*($5 + [92]) = $4
	$10 = ($0 + [1944])
	if ( (uint_64)($9 <= *($10)) ){ goto $label$17 }
	*($10) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	*($12 + [160]) = $5
	$9 = *($5)
	*($12 + [80]) = $9
	*($12 + [76]) = $4
	$8 = ($0 + [1956])
	$10 = *($8)
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [1960]))) ){ goto $label$19 }
	*($10 + [8]) = $9
	*($10 + [16]) = $4
	*($12 + [160]) = [0]
	*($10) = $5
	*($8) = ($10 + [24])
	goto $label$18 
	
.LABEL $label$19
	CALL $34(($0 + [1952]), ($12 + [160]), ($12 + [80]), ($12 + [76]))
	
.LABEL $label$18
	$10 = *($12 + [160])
	*($12 + [160]) = [0]
	if ( ($10 == 0) ){ goto $label$20 }
	CALL $276($10)
	
.LABEL $label$20
	$10 = *(($11 + [16]))
	*(($5 = (($12 + [16]) + [8]))) = *(($2 + [8]))
	*($12 + [16]) = *($2)
	*(($12 + [8])) = *($5)
	*($12 + [4]) = *($12 + [20])
	*($12) = *($12 + [16])
	CALL _ZN12thedeosgames6paydivEmyN5eosio5assetEmm($0, $10, $1, $12, ((int_64)$3 != (int_64)0), [0])
	*([0] + [4]) = ($12 + [176])
}

void .FUNC _ZN12thedeosgames7setconfEymmmymmmm (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_64 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9)
{
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [96])
	*([0] + [4]) = $16
	CALL require_auth(*($0 + [176]))
	$10 = *(($0 + [2112]))
	$15 = *(($0 + [2116]))
	if ( ((int_32)$15 == (int_32)$10) ){ goto $label$1 }
	$14 = ($15 + [-24])
	$11 = ([0] - $10)
	
.LOOP $label$2:
	if ( ((int_64)*(*($14)) == (int_64)$1) ){ goto $label$1 }
	$15 = $14
	$12 = ($14 + [-24])
	$14 = $12
	if ( ((int_32)($12 + $11) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$12 = ($0 + [2088])
	if ( ((int_32)$15 == (int_32)$10) ){ goto $label$6 }
	$14 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [56]) == (int_32)$12), [176])
	if ( $14 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$14 = CALL db_find_i64(*(($0 + [2088])), *(($0 + [2096])), (int_64)6138558357033713664, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$4 }
	$14 = CALL $122($12, $14)
	CALL eosio_assert(((int_32)*($14 + [56]) == (int_32)$12), [176])
	
.LABEL $label$5
	CALL eosio_assert([1], [288])
	CALL eosio_assert(((int_32)*($14 + [56]) == (int_32)$12), [336])
	CALL eosio_assert(((int_64)*(($0 + [2088])) == (int_64)CALL $fimport$14()), [384])
	*($14 + [16]) = $2
	*($14 + [20]) = $3
	*($14 + [24]) = $4
	*($14 + [32]) = $5
	*($14 + [40]) = $6
	*($14 + [44]) = $7
	$1 = *($14)
	*($14 + [48]) = $8
	*($14 + [52]) = $9
	CALL eosio_assert([1], [448])
	*($16 + [88]) = (($16 + [16]) + [52])
	*($16 + [84]) = ($16 + [16])
	*($16 + [80]) = ($16 + [16])
	CALL $177(($16 + [80]), $14)
	CALL db_update_i64(*($14 + [60]), (int_64)0, ($16 + [16]), [52])
	$14 = ($0 + [2104])
	if ( (uint_64)($1 <= *($14)) ){ goto $label$3 }
	*($14) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$4
	$13 = *(($0 + [176]))
	CALL eosio_assert(((int_64)*(($0 + [2088])) == (int_64)CALL $fimport$14()), [512])
	*(($14 = CALL $275([72])) + [56]) = $12
	*($14 + [8]) = (int_64)0
	*($14) = $1
	*($14 + [16]) = $2
	*($14 + [20]) = $3
	*($14 + [24]) = $4
	*($14 + [32]) = $5
	*($14 + [40]) = $6
	*($14 + [44]) = $7
	*($14 + [48]) = $8
	*($14 + [52]) = $9
	*($16 + [88]) = (($16 + [16]) + [52])
	*($16 + [84]) = ($16 + [16])
	*($16 + [80]) = ($16 + [16])
	CALL $177(($16 + [80]), $14)
	$1 = *($14)
	$15 = CALL db_store_i64(*(($0 + [2096])), (int_64)6138558357033713664, $13, $1, ($16 + [16]), [52])
	*($14 + [60]) = $15
	$12 = ($0 + [2104])
	if ( (uint_64)($1 <= *($12)) ){ goto $label$7 }
	*($12) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($16 + [80]) = $14
	$1 = *($14)
	*($16 + [16]) = $1
	*($16 + [12]) = $15
	$11 = ($0 + [2116])
	$12 = *($11)
	if ( ((uint_32)$12 >= (uint_32)*(($0 + [2120]))) ){ goto $label$9 }
	*($12 + [8]) = $1
	*($12 + [16]) = $15
	*($16 + [80]) = [0]
	*($12) = $14
	*($11) = ($12 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $130(($0 + [2112]), ($16 + [80]), ($16 + [16]), ($16 + [12]))
	
.LABEL $label$8
	$14 = *($16 + [80])
	*($16 + [80]) = [0]
	if ( ($14 == 0) ){ goto $label$3 }
	CALL $276($14)
	
.LABEL $label$3
	*([0] + [4]) = ($16 + [96])
}

void .FUNC _ZN12thedeosgames8cleanupcEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [32])
	*([0] + [4]) = $15
	CALL require_auth(*($0 + [176]))
	$5 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$3 = *(($0 + [1856]))
	$10 = [0]
	*($15 + [16]) = [0]
	*($15 + [8]) = (int_64)0
	$14 = CALL db_lowerbound_i64(*($0 + [1848]), $3, (int_64)5445034581344518144, (int_64)0)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$1 }
	$3 = (int_64))(((int_64)$5 & (int_64)4294967295) - $1)
	$2 = ($0 + [1848])
	$14 = CALL $101($2, $14)
	$12 = (($15 + [8]) + [8])
	$4 = ($0 + [168])
	
.LOOP $label$3:
	if ( ((int_32)*($14 + [56]) != (int_32)[2]) ){ goto $label$4 }
	if ( ((uint_64)*($14 + [48]) >= (uint_64)$3) ){ goto $label$4 }
	$13 = *($15 + [12])
	if ( ((int_32)$13 == (int_32)*($12)) ){ goto $label$6 }
	*($13) = *($14)
	*($15 + [12]) = ($13 + [8])
	goto $label$5 
	
.LABEL $label$6
	CALL $92(($15 + [8]), $14)
	
.LABEL $label$5
	if ( ((uint_32)$10 > (uint_32)*($4)) ){ goto $label$2 }
	$10 = ($10 + [1])
	
.LABEL $label$4
	CALL eosio_assert([1], [2496])
	$14 = CALL db_next_i64(*($14 + [76]), ($15 + [24]))
	if ( ((int_32)$14 <= (int_32)[-1]) ){ goto $label$2 }
	$14 = CALL $101($2, $14)
	goto $label$3 
	
.LABEL $label$2
	$11 = *($15 + [12])
	$12 = *($15 + [8])
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$7 }
	$6 = ($0 + [1872])
	$7 = ($0 + [1876])
	$8 = ($0 + [1856])
	$9 = ($0 + [1848])
	
.LOOP $label$8:
	$3 = *($12)
	$4 = *($6)
	$13 = *($7)
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$9 }
	$14 = ($13 + [-24])
	$0 = ([0] - $4)
	
.LOOP $label$10:
	if ( ((int_64)*(*($14)) == (int_64)$3) ){ goto $label$9 }
	$13 = $14
	$10 = ($14 + [-24])
	$14 = $10
	if ( ((int_32)($10 + $0) != (int_32)[-24]) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$13 }
	$14 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [72]) == (int_32)$2), [176])
	if ( $14 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$14 = CALL db_find_i64(*($9), *($8), (int_64)5445034581344518144, $3)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$11 }
	$14 = CALL $101($2, $14)
	CALL eosio_assert(((int_32)*($14 + [72]) == (int_32)$2), [176])
	
.LABEL $label$12
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$10 = CALL db_next_i64(*($14 + [76]), ($15 + [24]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$14 }
	CALL $101($2, $10)
	
.LABEL $label$14
	CALL $102($2, $14)
	$14 = [4688]
	$10 = *([4688])
	if ( ($10 == 0) ){ goto $label$11 }
	
.LOOP $label$16:
	if ( ((int_32)$10 == (int_32)[37]) ){ goto $label$15 }
	CALL prints_l($14, [1])
	$14 = ($14 + [1])
	$10 = *($14)
	if ( ($10 == 0) ){ goto $label$11 }
	goto $label$16 
	
.LABEL $label$15
	CALL printui($3)
	CALL prints(($14 + [1]))
	
.LABEL $label$11
	$12 = ($12 + [8])
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$8 }
	$11 = *($15 + [8])
	
.LABEL $label$7
	if ( ($11 == 0) ){ goto $label$1 }
	*($15 + [12]) = $11
	CALL $276($11)
	
.LABEL $label$1
	*([0] + [4]) = ($15 + [32])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [3040])
	*([0] + [4]) = $9
	*([0] + [16]) = $1
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [5792]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [5808]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [5824])
	
.LABEL $label$7
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [5792]
	$7 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$21 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$3 = ($3 + [165])
	goto $label$19 
	
.LABEL $label$21
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$17
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$16 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1792]
	$7 = (int_64)0
	
.LOOP $label$22:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$27 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$3 = ($3 + [165])
	goto $label$25 
	
.LABEL $label$27
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$23
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$22 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1424]
	$7 = (int_64)0
	
.LOOP $label$29:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$34 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$3 = ($3 + [165])
	goto $label$32 
	
.LABEL $label$34
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$33
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$31
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$30
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$29 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$15 }
	
.LABEL $label$28
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1792]
	$7 = (int_64)0
	
.LOOP $label$35:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$40 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$3 = ($3 + [165])
	goto $label$38 
	
.LABEL $label$40
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$39
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$37
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$36
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$35 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$41 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [2768]
	$7 = (int_64)0
	
.LOOP $label$42:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$43 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$3 = ($3 + [165])
	goto $label$44 
	
.LABEL $label$45
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$43
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$42 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$15 }
	
.LABEL $label$41
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1792]
	$7 = (int_64)0
	
.LOOP $label$46:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$51 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$50 }
	$3 = ($3 + [165])
	goto $label$49 
	
.LABEL $label$51
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$50
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$49
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$48
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$47
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$46 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$52 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [2752]
	$7 = (int_64)0
	
.LOOP $label$53:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$54 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$56 }
	$3 = ($3 + [165])
	goto $label$55 
	
.LABEL $label$56
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$55
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$54
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$53 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$15 }
	
.LABEL $label$52
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1792]
	$7 = (int_64)0
	
.LOOP $label$57:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$62 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$61 }
	$3 = ($3 + [165])
	goto $label$60 
	
.LABEL $label$62
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$61
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$60
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$59
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$58
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$57 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$63 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [2784]
	$7 = (int_64)0
	
.LOOP $label$64:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$65 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$67 }
	$3 = ($3 + [165])
	goto $label$66 
	
.LABEL $label$67
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$66
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$65
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$64 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$15 }
	
.LABEL $label$63
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1792]
	$7 = (int_64)0
	
.LOOP $label$68:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$73 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$72 }
	$3 = ($3 + [165])
	goto $label$71 
	
.LABEL $label$73
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$72
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$71
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$70
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$69
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$68 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$74 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [2800]
	$7 = (int_64)0
	
.LOOP $label$75:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$76 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$78 }
	$3 = ($3 + [165])
	goto $label$77 
	
.LABEL $label$78
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$77
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$76
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$75 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$15 }
	
.LABEL $label$74
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1792]
	$7 = (int_64)0
	
.LOOP $label$79:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$84 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$83 }
	$3 = ($3 + [165])
	goto $label$82 
	
.LABEL $label$84
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$81 }
	goto $label$80 
	
.LABEL $label$83
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$82
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$81
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$80
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$79 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$85 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [2816]
	$7 = (int_64)0
	
.LOOP $label$86:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$87 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$89 }
	$3 = ($3 + [165])
	goto $label$88 
	
.LABEL $label$89
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$88
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$87
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$86 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$15 }
	
.LABEL $label$85
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1792]
	$7 = (int_64)0
	
.LOOP $label$90:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$95 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$94 }
	$3 = ($3 + [165])
	goto $label$93 
	
.LABEL $label$95
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$92 }
	goto $label$91 
	
.LABEL $label$94
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$93
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$92
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$91
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$90 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$96 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [2832]
	$7 = (int_64)0
	
.LOOP $label$97:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$98 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$100 }
	$3 = ($3 + [165])
	goto $label$99 
	
.LABEL $label$100
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$99
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$98
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$97 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$15 }
	
.LABEL $label$96
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1792]
	$7 = (int_64)0
	
.LOOP $label$101:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$106 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$105 }
	$3 = ($3 + [165])
	goto $label$104 
	
.LABEL $label$106
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$103 }
	goto $label$102 
	
.LABEL $label$105
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$104
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$103
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$102
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$101 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$107 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [2848]
	$7 = (int_64)0
	
.LOOP $label$108:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$109 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$111 }
	$3 = ($3 + [165])
	goto $label$110 
	
.LABEL $label$111
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$110
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$109
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$108 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$15 }
	
.LABEL $label$107
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1792]
	$7 = (int_64)0
	
.LOOP $label$112:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$117 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$116 }
	$3 = ($3 + [165])
	goto $label$115 
	
.LABEL $label$117
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$114 }
	goto $label$113 
	
.LABEL $label$116
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$115
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$114
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$113
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$112 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$14 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [2864]
	$7 = (int_64)0
	
.LOOP $label$118:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$119 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$121 }
	$3 = ($3 + [165])
	goto $label$120 
	
.LABEL $label$121
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$120
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$119
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$118 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$14 }
	
.LABEL $label$15
	*(($9 + [776])) = $0
	*(($9 + [784])) = (int_64)-1
	$6 = (int_64)0
	*(($9 + [792])) = (int_64)0
	*(($9 + [800])) = [0]
	*($9 + [768]) = $0
	*($9 + [760]) = $0
	*($9 + [808]) = $0
	*(($9 + [816])) = $0
	*(($9 + [824])) = (int_64)-1
	*(($9 + [832])) = [0]
	*(($9 + [836])) = [0]
	*(($9 + [840])) = [0]
	*($9 + [848]) = $0
	*(($9 + [856])) = $0
	*(($9 + [864])) = (int_64)-1
	*(($9 + [872])) = [0]
	*(($9 + [876])) = [0]
	*(($9 + [880])) = [0]
	*($9 + [888]) = $0
	*(($9 + [896])) = $0
	*(($9 + [904])) = (int_64)-1
	*(($9 + [912])) = [0]
	*(($9 + [916])) = [0]
	*(($9 + [920])) = [0]
	*($9 + [928]) = [50]
	*($9 + [932]) = [10000]
	$8 = (int_64)59
	$4 = [1776]
	$7 = (int_64)0
	
.LOOP $label$122:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$123 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$125 }
	$3 = ($3 + [165])
	goto $label$124 
	
.LABEL $label$125
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$124
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$123
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$122 }
	*(($9 + [960])) = (int_64)8589934594
	*(($9 + [968])) = (int_64)12884901890
	*(($9 + [976])) = [3]
	*($9 + [944]) = (int_64)86400
	*($9 + [936]) = $7
	*($9 + [952]) = (int_64)8589934594
	*(($9 + [980])) = [3]
	*(($9 + [984])) = [6]
	*(($9 + [988])) = [6]
	*(($9 + [992])) = [4]
	*(($9 + [996])) = [4]
	*(($9 + [1000])) = [4]
	*(($9 + [1004])) = [5]
	*(($9 + [1008])) = [3]
	*(($9 + [1012])) = [5]
	*(($9 + [1016])) = [5]
	*(($9 + [1020])) = [5]
	*(($9 + [1024])) = [5]
	*(($9 + [1028])) = [7]
	*(($9 + [1032])) = [3]
	*(($9 + [1036])) = [6]
	*(($9 + [1040])) = [6]
	*(($9 + [1044])) = [6]
	*(($9 + [1048])) = [6]
	*(($9 + [1052])) = [6]
	*(($9 + [1056])) = [6]
	*(($9 + [1060])) = [6]
	*(($9 + [1064])) = [7]
	*(($9 + [1068])) = [7]
	*(($9 + [1072])) = [1]
	*(($9 + [1076])) = [1]
	*(($9 + [1080])) = [1]
	*(($9 + [1084])) = [1]
	*(($9 + [1088])) = [5]
	*(($9 + [1092])) = [5]
	*(($9 + [1096])) = [5]
	*(($9 + [1100])) = [5]
	*(($9 + [1104])) = [3]
	*(($9 + [1108])) = [2]
	*(($9 + [1112])) = [2]
	*(($9 + [1116])) = [4]
	*(($9 + [1120])) = [3]
	*(($9 + [1124])) = [3]
	*(($9 + [1128])) = [3]
	*(($9 + [1132])) = [3]
	*(($9 + [1136])) = [2]
	*(($9 + [1140])) = [2]
	*(($9 + [1144])) = [4]
	*(($9 + [1148])) = [4]
	*(($9 + [1152])) = [4]
	*(($9 + [1156])) = [4]
	*(($9 + [1160])) = [4]
	*(($9 + [1164])) = [5]
	*(($9 + [1168])) = [5]
	*(($9 + [1172])) = [5]
	*(($9 + [1176])) = [6]
	*(($9 + [1180])) = [5]
	*(($9 + [1184])) = [6]
	*(($9 + [1188])) = [6]
	*(($9 + [1192])) = [6]
	*(($9 + [1196])) = [6]
	*(($9 + [1200])) = [4]
	*(($9 + [1204])) = [4]
	*(($9 + [1208])) = [2]
	*(($9 + [1212])) = [2]
	*(($9 + [1216])) = [2]
	*(($9 + [1220])) = [2]
	*(($9 + [1224])) = [7]
	*(($9 + [1228])) = [3]
	*(($9 + [1232])) = [3]
	*(($9 + [1236])) = [5]
	*(($9 + [1240])) = [5]
	*(($9 + [1244])) = [3]
	*(($9 + [1248])) = [4]
	*(($9 + [1252])) = [4]
	*(($9 + [1256])) = [4]
	*(($9 + [1260])) = [5]
	*(($9 + [1264])) = [5]
	*(($9 + [1268])) = [5]
	*(($9 + [1272])) = [5]
	*(($9 + [1276])) = [5]
	*(($9 + [1280])) = [5]
	*(($9 + [1284])) = [4]
	*(($9 + [1288])) = [4]
	*(($9 + [1292])) = [4]
	*(($9 + [1296])) = [6]
	*(($9 + [1300])) = [6]
	*(($9 + [1304])) = [6]
	*(($9 + [1308])) = [4]
	*(($9 + [1312])) = [7]
	*(($9 + [1316])) = [7]
	*(($9 + [1320])) = [7]
	*(($9 + [1324])) = [7]
	*(($9 + [1328])) = [1]
	*(($9 + [1332])) = [1]
	*(($9 + [1336])) = [1]
	*(($9 + [1340])) = [6]
	*(($9 + [1344])) = [6]
	*(($9 + [1348])) = [6]
	*(($9 + [1352])) = [6]
	*(($9 + [1356])) = [6]
	*(($9 + [1360])) = [2]
	*(($9 + [1364])) = [2]
	*(($9 + [1368])) = [6]
	*(($9 + [1372])) = [6]
	*(($9 + [1376])) = [7]
	*(($9 + [1380])) = [3]
	*(($9 + [1384])) = [3]
	*(($9 + [1388])) = [5]
	*(($9 + [1392])) = [5]
	*(($9 + [1396])) = [7]
	*(($9 + [1400])) = [4]
	*(($9 + [1404])) = [4]
	*(($9 + [1408])) = [7]
	*(($9 + [1412])) = [7]
	*(($9 + [1416])) = [7]
	*(($9 + [1420])) = [5]
	*(($9 + [1424])) = [5]
	*(($9 + [1428])) = [7]
	*(($9 + [1432])) = [3]
	*(($9 + [1436])) = [7]
	*(($9 + [1440])) = [6]
	*(($9 + [1444])) = [6]
	*(($9 + [1448])) = [6]
	*(($9 + [1452])) = [7]
	*(($9 + [1456])) = [7]
	*(($9 + [1460])) = [7]
	*(($9 + [1464])) = [2]
	*(($9 + [1468])) = [2]
	*(($9 + [1472])) = [7]
	*(($9 + [1476])) = [7]
	*(($9 + [1480])) = [3]
	*(($9 + [1484])) = [3]
	*(($9 + [1488])) = [3]
	*(($9 + [1492])) = [7]
	*(($9 + [1496])) = [7]
	*(($9 + [1500])) = [4]
	*(($9 + [1504])) = [4]
	*(($9 + [1508])) = [7]
	*(($9 + [1512])) = [7]
	*(($9 + [1516])) = [7]
	*(($9 + [1520])) = [5]
	*(($9 + [1524])) = [5]
	*(($9 + [1528])) = [5]
	*(($9 + [1532])) = [5]
	*(($9 + [1536])) = [5]
	*(($9 + [1540])) = [5]
	*(($9 + [1544])) = [6]
	*(($9 + [1548])) = [6]
	*(($9 + [1552])) = [6]
	*(($9 + [1556])) = [4]
	*(($9 + [1560])) = [4]
	*(($9 + [1564])) = [4]
	*(($9 + [1568])) = [4]
	*(($9 + [1572])) = [7]
	*(($9 + [1576])) = [7]
	*(($9 + [1580])) = [7]
	*(($9 + [1584])) = [7]
	*(($9 + [1588])) = [1]
	*(($9 + [1592])) = [7]
	*(($9 + [1596])) = [7]
	*(($9 + [1600])) = [7]
	*(($9 + [1604])) = [5]
	*(($9 + [1608])) = [7]
	*(($9 + [1612])) = [7]
	*(($9 + [1616])) = [7]
	*(($9 + [1620])) = [2]
	*(($9 + [1624])) = [7]
	*(($9 + [1628])) = [7]
	*(($9 + [1632])) = [7]
	*(($9 + [1636])) = [3]
	*(($9 + [1640])) = [7]
	*(($9 + [1644])) = [7]
	*(($9 + [1648])) = [7]
	*(($9 + [1652])) = [4]
	*(($9 + [1656])) = [4]
	*(($9 + [1660])) = [7]
	*(($9 + [1664])) = [7]
	*(($9 + [1668])) = [7]
	*(($9 + [1672])) = [5]
	*(($9 + [1676])) = [5]
	*(($9 + [1680])) = [5]
	*(($9 + [1684])) = [6]
	*(($9 + [1688])) = [6]
	*(($9 + [1692])) = [6]
	*(($9 + [1696])) = [6]
	*(($9 + [1700])) = [6]
	*(($9 + [1704])) = [6]
	*(($9 + [1708])) = [6]
	*(($9 + [1712])) = [7]
	*(($9 + [1716])) = [7]
	*($9 + [1720]) = [2]
	*(($9 + [1724])) = [2]
	*(($9 + [1728])) = [2]
	*(($9 + [1732])) = [2]
	*(($9 + [1736])) = [2]
	*(($9 + [1740])) = [3]
	*(($9 + [1744])) = [3]
	*(($9 + [1748])) = [3]
	*(($9 + [1752])) = [6]
	*(($9 + [1756])) = [6]
	*(($9 + [1760])) = [4]
	*(($9 + [1764])) = [4]
	*(($9 + [1768])) = [4]
	*(($9 + [1772])) = [5]
	*(($9 + [1776])) = [7]
	*(($9 + [1780])) = [5]
	*(($9 + [1784])) = [5]
	*(($9 + [1788])) = [5]
	*(($9 + [1792])) = [5]
	*(($9 + [1796])) = [7]
	*(($9 + [1800])) = [7]
	*(($9 + [1804])) = [6]
	*(($9 + [1808])) = [6]
	*(($9 + [1812])) = [6]
	*(($9 + [1816])) = [6]
	*(($9 + [1820])) = [6]
	*(($9 + [1824])) = [6]
	*(($9 + [1828])) = [6]
	*(($9 + [1832])) = [7]
	*(($9 + [1836])) = [7]
	*(($9 + [1840])) = [1]
	*(($9 + [1844])) = [1]
	*(($9 + [1848])) = [1]
	*(($9 + [1852])) = [1]
	*(($9 + [1856])) = [5]
	*(($9 + [1860])) = [5]
	*(($9 + [1864])) = [5]
	*(($9 + [1868])) = [5]
	*(($9 + [1872])) = [7]
	*(($9 + [1876])) = [2]
	*(($9 + [1880])) = [2]
	*(($9 + [1884])) = [4]
	*(($9 + [1888])) = [7]
	*(($9 + [1892])) = [3]
	*(($9 + [1896])) = [3]
	*(($9 + [1900])) = [3]
	*(($9 + [1904])) = [2]
	*(($9 + [1908])) = [2]
	*(($9 + [1912])) = [4]
	*(($9 + [1916])) = [4]
	*(($9 + [1920])) = [4]
	*(($9 + [1924])) = [4]
	*(($9 + [1928])) = [4]
	*(($9 + [1932])) = [5]
	*(($9 + [1936])) = [5]
	*(($9 + [1940])) = [5]
	*(($9 + [1944])) = [6]
	*(($9 + [1948])) = [5]
	*(($9 + [1952])) = [6]
	*(($9 + [1956])) = [6]
	*(($9 + [1960])) = [6]
	*(($9 + [1964])) = [6]
	*(($9 + [1968])) = [4]
	*(($9 + [1972])) = [4]
	*(($9 + [1976])) = [2]
	*(($9 + [1980])) = [2]
	*(($9 + [1984])) = [2]
	*(($9 + [1988])) = [2]
	*(($9 + [1992])) = [7]
	*(($9 + [1996])) = [3]
	*(($9 + [2000])) = [3]
	*(($9 + [2004])) = [5]
	*(($9 + [2008])) = [5]
	*(($9 + [2012])) = [3]
	*(($9 + [2016])) = [4]
	*(($9 + [2020])) = [4]
	*(($9 + [2024])) = [4]
	*(($9 + [2028])) = [5]
	*(($9 + [2032])) = [5]
	*(($9 + [2036])) = [5]
	*(($9 + [2040])) = [5]
	*(($9 + [2044])) = [5]
	*(($9 + [2048])) = [5]
	*(($9 + [2052])) = [4]
	*(($9 + [2056])) = [4]
	*(($9 + [2060])) = [4]
	*(($9 + [2064])) = [6]
	*(($9 + [2068])) = [6]
	*(($9 + [2072])) = [6]
	*(($9 + [2076])) = [4]
	*(($9 + [2080])) = [7]
	*(($9 + [2084])) = [7]
	*(($9 + [2088])) = [7]
	*(($9 + [2092])) = [7]
	*(($9 + [2096])) = [1]
	*(($9 + [2100])) = [1]
	*(($9 + [2104])) = [1]
	*(($9 + [2108])) = [6]
	*(($9 + [2112])) = [6]
	*(($9 + [2116])) = [6]
	*(($9 + [2120])) = [6]
	*(($9 + [2124])) = [6]
	*(($9 + [2128])) = [2]
	*(($9 + [2132])) = [2]
	*(($9 + [2136])) = [6]
	*(($9 + [2140])) = [6]
	*(($9 + [2144])) = [7]
	*(($9 + [2148])) = [3]
	*(($9 + [2152])) = [3]
	*(($9 + [2156])) = [5]
	*(($9 + [2160])) = [5]
	*(($9 + [2164])) = [7]
	*(($9 + [2168])) = [4]
	*(($9 + [2172])) = [4]
	*(($9 + [2176])) = [7]
	*(($9 + [2180])) = [7]
	*(($9 + [2184])) = [7]
	*(($9 + [2188])) = [5]
	*(($9 + [2192])) = [5]
	*(($9 + [2196])) = [7]
	*(($9 + [2200])) = [7]
	*(($9 + [2204])) = [7]
	*(($9 + [2208])) = [6]
	*(($9 + [2212])) = [6]
	*(($9 + [2216])) = [6]
	*(($9 + [2220])) = [7]
	*(($9 + [2224])) = [7]
	*(($9 + [2228])) = [7]
	*(($9 + [2232])) = [2]
	*(($9 + [2236])) = [2]
	*(($9 + [2240])) = [7]
	*(($9 + [2244])) = [7]
	*(($9 + [2248])) = [3]
	*(($9 + [2252])) = [3]
	*(($9 + [2256])) = [3]
	*(($9 + [2260])) = [7]
	*(($9 + [2264])) = [7]
	*(($9 + [2268])) = [4]
	*(($9 + [2272])) = [4]
	*(($9 + [2276])) = [7]
	*(($9 + [2280])) = [7]
	*(($9 + [2284])) = [7]
	*(($9 + [2288])) = [5]
	*(($9 + [2292])) = [5]
	*(($9 + [2296])) = [5]
	*(($9 + [2300])) = [5]
	*(($9 + [2304])) = [5]
	*(($9 + [2308])) = [5]
	*(($9 + [2312])) = [6]
	*(($9 + [2316])) = [6]
	*(($9 + [2320])) = [6]
	*(($9 + [2324])) = [4]
	*(($9 + [2328])) = [4]
	*(($9 + [2332])) = [4]
	*(($9 + [2336])) = [4]
	*(($9 + [2340])) = [7]
	*(($9 + [2344])) = [7]
	*(($9 + [2348])) = [7]
	*(($9 + [2352])) = [7]
	*(($9 + [2356])) = [1]
	*(($9 + [2360])) = [7]
	*(($9 + [2364])) = [7]
	*(($9 + [2368])) = [7]
	*(($9 + [2372])) = [5]
	*(($9 + [2376])) = [7]
	*(($9 + [2380])) = [7]
	*(($9 + [2384])) = [7]
	*(($9 + [2388])) = [2]
	*(($9 + [2392])) = [7]
	*(($9 + [2396])) = [7]
	*(($9 + [2400])) = [7]
	*(($9 + [2404])) = [3]
	*(($9 + [2408])) = [7]
	*(($9 + [2412])) = [7]
	*(($9 + [2416])) = [7]
	*(($9 + [2420])) = [4]
	*(($9 + [2424])) = [4]
	*(($9 + [2428])) = [7]
	*(($9 + [2432])) = [7]
	*(($9 + [2436])) = [7]
	*(($9 + [2440])) = [5]
	*(($9 + [2444])) = [5]
	*(($9 + [2448])) = [5]
	*(($9 + [2452])) = [6]
	*(($9 + [2456])) = [6]
	*(($9 + [2460])) = [6]
	*(($9 + [2464])) = [6]
	*(($9 + [2468])) = [6]
	*(($9 + [2472])) = [6]
	*(($9 + [2476])) = [6]
	*(($9 + [2480])) = [7]
	*(($9 + [2484])) = [7]
	$6 = *($9 + [760])
	*($9 + [2488]) = $6
	*(($9 + [2496])) = $6
	*(($9 + [2504])) = (int_64)-1
	*(($9 + [2512])) = [0]
	*(($9 + [2516])) = [0]
	*(($9 + [2520])) = [0]
	*($9 + [2528]) = $6
	*(($9 + [2536])) = $6
	*(($9 + [2544])) = (int_64)-1
	*(($9 + [2552])) = [0]
	*(($9 + [2556])) = [0]
	*(($9 + [2560])) = [0]
	*($9 + [2568]) = $6
	*(($9 + [2576])) = $6
	*(($9 + [2584])) = (int_64)-1
	*(($9 + [2592])) = [0]
	*(($9 + [2596])) = [0]
	*(($9 + [2600])) = [0]
	*($9 + [2608]) = $6
	*(($9 + [2616])) = $6
	*(($9 + [2624])) = (int_64)-1
	*(($9 + [2632])) = [0]
	*(($9 + [2636])) = [0]
	*(($9 + [2640])) = [0]
	*($9 + [2648]) = $6
	*(($9 + [2656])) = $6
	*(($9 + [2664])) = (int_64)-1
	*(($9 + [2672])) = [0]
	*(($9 + [2676])) = [0]
	*(($9 + [2680])) = [0]
	*($9 + [2688]) = $6
	*(($9 + [2696])) = $6
	*(($9 + [2704])) = (int_64)-1
	*(($9 + [2712])) = [0]
	*(($9 + [2716])) = [0]
	*(($9 + [2720])) = [0]
	*($9 + [2728]) = $6
	*(($9 + [2736])) = $6
	*(($9 + [2744])) = (int_64)-1
	*(($9 + [2752])) = [0]
	*(($9 + [2756])) = [0]
	*(($9 + [2760])) = [0]
	*($9 + [2768]) = $6
	*(($9 + [2776])) = $6
	*(($9 + [2784])) = (int_64)-1
	*(($9 + [2792])) = [0]
	*(($9 + [2796])) = [0]
	*(($9 + [2800])) = [0]
	*($9 + [2808]) = $6
	*(($9 + [2816])) = $6
	*(($9 + [2824])) = (int_64)-1
	*(($9 + [2832])) = [0]
	*(($9 + [2836])) = [0]
	*(($9 + [2840])) = [0]
	$6 = *($9 + [760])
	*($9 + [2848]) = $6
	*(($9 + [2856])) = $6
	*(($9 + [2864])) = (int_64)-1
	*(($9 + [2872])) = [0]
	*(($9 + [2876])) = [0]
	*(($9 + [2880])) = [0]
	*($9 + [2888]) = $6
	*(($9 + [2896])) = $6
	*(($9 + [2904])) = (int_64)-1
	*(($9 + [2912])) = [0]
	*(($9 + [2916])) = [0]
	*(($9 + [2920])) = [0]
	*($9 + [2928]) = $6
	*(($9 + [2936])) = $6
	*(($9 + [2944])) = (int_64)-1
	*(($9 + [2952])) = [0]
	*(($9 + [2956])) = [0]
	*(($9 + [2960])) = [0]
	if ( ((int_64)$2 <= (int_64)-4293729062964166657) ){ goto $label$172 }
	if ( ((int_64)$2 > (int_64)4923676749229064191) ){ goto $label$171 }
	if ( ((int_64)$2 > (int_64)4229630333938963455) ){ goto $label$169 }
	if ( ((int_64)$2 > (int_64)-3102536759825661953) ){ goto $label$165 }
	if ( ((int_64)$2 == (int_64)-4293729062964166656) ){ goto $label$157 }
	if ( ((int_64)$2 == (int_64)-4157661383434960896) ){ goto $label$156 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$126 }
	*($9 + [668]) = [0]
	*($9 + [664]) = [1]
	*($9 + [96 align=4]) = *($9 + [664])
	CALL $225(($9 + [760]), ($9 + [96]))
	goto $label$126 
	
.LABEL $label$172
	if ( ((int_64)$2 <= (int_64)-4994130327902247777) ){ goto $label$170 }
	if ( ((int_64)$2 > (int_64)-4293729108468170753) ){ goto $label$168 }
	if ( ((int_64)$2 > (int_64)-4417280950562799617) ){ goto $label$164 }
	if ( ((int_64)$2 == (int_64)-4994130327902247776) ){ goto $label$155 }
	if ( ((int_64)$2 == (int_64)-4994130327754206208) ){ goto $label$154 }
	if ( ((int_64)$2 != (int_64)-4417316219569307648) ){ goto $label$126 }
	*($9 + [612]) = [0]
	*($9 + [608]) = [2]
	*($9 + [152 align=4]) = *($9 + [608])
	CALL $227(($9 + [760]), ($9 + [152]))
	goto $label$126 
	
.LABEL $label$171
	if ( ((int_64)$2 > (int_64)5445039416223465471) ){ goto $label$167 }
	if ( ((int_64)$2 > (int_64)5445032572601106431) ){ goto $label$163 }
	if ( ((int_64)$2 == (int_64)4923676749229064192) ){ goto $label$153 }
	if ( ((int_64)$2 == (int_64)5031766152489992192) ){ goto $label$152 }
	if ( ((int_64)$2 != (int_64)5445032572600975360) ){ goto $label$126 }
	*($9 + [748]) = [0]
	*($9 + [744]) = [3]
	*($9 + [16 align=4]) = *($9 + [744])
	CALL $219(($9 + [760]), ($9 + [16]))
	goto $label$126 
	
.LABEL $label$170
	if ( ((int_64)$2 <= (int_64)-7013631406185367553) ){ goto $label$166 }
	if ( ((int_64)$2 > (int_64)-5971584305283465217) ){ goto $label$162 }
	if ( ((int_64)$2 == (int_64)-7013631406185367552) ){ goto $label$151 }
	if ( ((int_64)$2 == (int_64)-7013631406154829056) ){ goto $label$150 }
	if ( ((int_64)$2 != (int_64)-6217917475468607488) ){ goto $label$126 }
	*($9 + [724]) = [0]
	*($9 + [720]) = [4]
	*($9 + [40 align=4]) = *($9 + [720])
	CALL $221(($9 + [760]), ($9 + [40]))
	goto $label$126 
	
.LABEL $label$169
	if ( ((int_64)$2 > (int_64)4923676427704336383) ){ goto $label$161 }
	if ( ((int_64)$2 == (int_64)4229630333938963456) ){ goto $label$149 }
	if ( ((int_64)$2 == (int_64)4516881727834030080) ){ goto $label$148 }
	if ( ((int_64)$2 != (int_64)4921564679018381312) ){ goto $label$126 }
	*($9 + [676]) = [0]
	*($9 + [672]) = [5]
	*($9 + [88 align=4]) = *($9 + [672])
	CALL $223(($9 + [760]), ($9 + [88]))
	goto $label$126 
	
.LABEL $label$168
	if ( ((int_64)$2 > (int_64)-4293729098670276609) ){ goto $label$160 }
	if ( ((int_64)$2 == (int_64)-4293729108468170752) ){ goto $label$147 }
	if ( ((int_64)$2 == (int_64)-4293729099170136064) ){ goto $label$146 }
	if ( ((int_64)$2 != (int_64)-4293729098993074176) ){ goto $label$126 }
	*($9 + [596]) = [0]
	*($9 + [592]) = [6]
	*($9 + [168 align=4]) = *($9 + [592])
	CALL $229(($9 + [760]), ($9 + [168]))
	goto $label$126 
	
.LABEL $label$167
	if ( ((int_64)$2 > (int_64)7684013976526520319) ){ goto $label$159 }
	if ( ((int_64)$2 == (int_64)5445039416223465472) ){ goto $label$145 }
	if ( ((int_64)$2 == (int_64)5445039553662418944) ){ goto $label$144 }
	if ( ((int_64)$2 != (int_64)5445040702200496128) ){ goto $label$126 }
	*($9 + [524]) = [0]
	*($9 + [520]) = [7]
	*($9 + [240 align=4]) = *($9 + [520])
	CALL $233(($9 + [760]), ($9 + [240]))
	goto $label$126 
	
.LABEL $label$166
	if ( ((int_64)$2 <= (int_64)-7326532264238878721) ){ goto $label$158 }
	if ( ((int_64)$2 == (int_64)-7326532264238878720) ){ goto $label$143 }
	if ( ((int_64)$2 == (int_64)-7047455945873424384) ){ goto $label$142 }
	if ( ((int_64)$2 != (int_64)-7014483301385633792) ){ goto $label$126 }
	*($9 + [444]) = [0]
	*($9 + [440]) = [8]
	*($9 + [320 align=4]) = *($9 + [440])
	CALL $223(($9 + [760]), ($9 + [320]))
	goto $label$126 
	
.LABEL $label$165
	if ( ((int_64)$2 == (int_64)-3102536759825661952) ){ goto $label$141 }
	if ( ((int_64)$2 == (int_64)-3075276113417601024) ){ goto $label$140 }
	if ( ((int_64)$2 != (int_64)4229593440041566208) ){ goto $label$126 }
	*($9 + [644]) = [0]
	*($9 + [640]) = [9]
	*($9 + [120 align=4]) = *($9 + [640])
	CALL $226(($9 + [760]), ($9 + [120]))
	goto $label$126 
	
.LABEL $label$164
	if ( ((int_64)$2 == (int_64)-4417280950562799616) ){ goto $label$139 }
	if ( ((int_64)$2 == (int_64)-4417059930817691648) ){ goto $label$138 }
	if ( ((int_64)$2 != (int_64)-4417036368756791632) ){ goto $label$126 }
	*($9 + [564]) = [0]
	*($9 + [560]) = [10]
	*($9 + [200 align=4]) = *($9 + [560])
	CALL $227(($9 + [760]), ($9 + [200]))
	goto $label$126 
	
.LABEL $label$163
	if ( ((int_64)$2 == (int_64)5445032572601106432) ){ goto $label$137 }
	if ( ((int_64)$2 == (int_64)5445032572601149824) ){ goto $label$136 }
	if ( ((int_64)$2 != (int_64)5445033002092462080) ){ goto $label$126 }
	*($9 + [756]) = [0]
	*($9 + [752]) = [11]
	*($9 + [8 align=4]) = *($9 + [752])
	CALL $218(($9 + [760]), ($9 + [8]))
	goto $label$126 
	
.LABEL $label$162
	if ( ((int_64)$2 == (int_64)-5971584305283465216) ){ goto $label$135 }
	if ( ((int_64)$2 == (int_64)-5971584236652593152) ){ goto $label$134 }
	if ( ((int_64)$2 != (int_64)-4994130327919024992) ){ goto $label$126 }
	*($9 + [476]) = [0]
	*($9 + [472]) = [12]
	*($9 + [288 align=4]) = *($9 + [472])
	CALL $235(($9 + [760]), ($9 + [288]))
	goto $label$126 
	
.LABEL $label$161
	if ( ((int_64)$2 == (int_64)4923676427704336384) ){ goto $label$133 }
	if ( ((int_64)$2 == (int_64)4923676749050413056) ){ goto $label$132 }
	if ( ((int_64)$2 != (int_64)4923676749184630784) ){ goto $label$126 }
	*($9 + [620]) = [0]
	*($9 + [616]) = [13]
	*($9 + [144 align=4]) = *($9 + [616])
	CALL $220(($9 + [760]), ($9 + [144]))
	goto $label$126 
	
.LABEL $label$160
	if ( ((int_64)$2 == (int_64)-4293729098670276608) ){ goto $label$131 }
	if ( ((int_64)$2 == (int_64)-4293729085571465216) ){ goto $label$130 }
	if ( ((int_64)$2 != (int_64)-4293729069517368320) ){ goto $label$126 }
	*($9 + [588]) = [0]
	*($9 + [584]) = [14]
	*($9 + [176 align=4]) = *($9 + [584])
	CALL $230(($9 + [760]), ($9 + [176]))
	goto $label$126 
	
.LABEL $label$159
	if ( ((int_64)$2 == (int_64)7684013976526520320) ){ goto $label$129 }
	if ( ((int_64)$2 == (int_64)8421058840153292800) ){ goto $label$128 }
	if ( ((int_64)$2 != (int_64)8516769789752901632) ){ goto $label$126 }
	*($9 + [692]) = [0]
	*($9 + [688]) = [15]
	*($9 + [72 align=4]) = *($9 + [688])
	CALL $224(($9 + [760]), ($9 + [72]))
	goto $label$126 
	
.LABEL $label$158
	if ( ((int_64)$2 == (int_64)-8281824612626225472) ){ goto $label$127 }
	if ( ((int_64)$2 != (int_64)-7340190883725180928) ){ goto $label$126 }
	*($9 + [412]) = [0]
	*($9 + [408]) = [16]
	*($9 + [352 align=4]) = *($9 + [408])
	CALL $220(($9 + [760]), ($9 + [352]))
	goto $label$126 
	
.LABEL $label$157
	*($9 + [548]) = [0]
	*($9 + [544]) = [17]
	*($9 + [216 align=4]) = *($9 + [544])
	CALL $219(($9 + [760]), ($9 + [216]))
	goto $label$126 
	
.LABEL $label$156
	*($9 + [516]) = [0]
	*($9 + [512]) = [18]
	*($9 + [248 align=4]) = *($9 + [512])
	CALL $223(($9 + [760]), ($9 + [248]))
	goto $label$126 
	
.LABEL $label$155
	*($9 + [468]) = [0]
	*($9 + [464]) = [19]
	*($9 + [296 align=4]) = *($9 + [464])
	CALL $220(($9 + [760]), ($9 + [296]))
	goto $label$126 
	
.LABEL $label$154
	*($9 + [484]) = [0]
	*($9 + [480]) = [20]
	*($9 + [280 align=4]) = *($9 + [480])
	CALL $235(($9 + [760]), ($9 + [280]))
	goto $label$126 
	
.LABEL $label$153
	*($9 + [652]) = [0]
	*($9 + [648]) = [21]
	*($9 + [112 align=4]) = *($9 + [648])
	CALL $220(($9 + [760]), ($9 + [112]))
	goto $label$126 
	
.LABEL $label$152
	*($9 + [700]) = [0]
	*($9 + [696]) = [22]
	*($9 + [64 align=4]) = *($9 + [696])
	CALL $223(($9 + [760]), ($9 + [64]))
	goto $label$126 
	
.LABEL $label$151
	*($9 + [404]) = [0]
	*($9 + [400]) = [23]
	*($9 + [360 align=4]) = *($9 + [400])
	CALL $221(($9 + [760]), ($9 + [360]))
	goto $label$126 
	
.LABEL $label$150
	*($9 + [396]) = [0]
	*($9 + [392]) = [24]
	*($9 + [368 align=4]) = *($9 + [392])
	CALL $237(($9 + [760]), ($9 + [368]))
	goto $label$126 
	
.LABEL $label$149
	*($9 + [540]) = [0]
	*($9 + [536]) = [25]
	*($9 + [224 align=4]) = *($9 + [536])
	CALL $232(($9 + [760]), ($9 + [224]))
	goto $label$126 
	
.LABEL $label$148
	*($9 + [684]) = [0]
	*($9 + [680]) = [26]
	*($9 + [80 align=4]) = *($9 + [680])
	CALL $224(($9 + [760]), ($9 + [80]))
	goto $label$126 
	
.LABEL $label$147
	*($9 + [580]) = [0]
	*($9 + [576]) = [27]
	*($9 + [184 align=4]) = *($9 + [576])
	CALL $219(($9 + [760]), ($9 + [184]))
	goto $label$126 
	
.LABEL $label$146
	*($9 + [572]) = [0]
	*($9 + [568]) = [28]
	*($9 + [192 align=4]) = *($9 + [568])
	CALL $220(($9 + [760]), ($9 + [192]))
	goto $label$126 
	
.LABEL $label$145
	*($9 + [732]) = [0]
	*($9 + [728]) = [29]
	*($9 + [32 align=4]) = *($9 + [728])
	CALL $220(($9 + [760]), ($9 + [32]))
	goto $label$126 
	
.LABEL $label$144
	*($9 + [636]) = [0]
	*($9 + [632]) = [30]
	*($9 + [128 align=4]) = *($9 + [632])
	CALL $220(($9 + [760]), ($9 + [128]))
	goto $label$126 
	
.LABEL $label$143
	*($9 + [420]) = [0]
	*($9 + [416]) = [31]
	*($9 + [344 align=4]) = *($9 + [416])
	CALL $223(($9 + [760]), ($9 + [344]))
	goto $label$126 
	
.LABEL $label$142
	*($9 + [452]) = [0]
	*($9 + [448]) = [32]
	*($9 + [312 align=4]) = *($9 + [448])
	CALL $223(($9 + [760]), ($9 + [312]))
	goto $label$126 
	
.LABEL $label$141
	*($9 + [508]) = [0]
	*($9 + [504]) = [33]
	*($9 + [256 align=4]) = *($9 + [504])
	CALL $223(($9 + [760]), ($9 + [256]))
	goto $label$126 
	
.LABEL $label$140
	*($9 + [428]) = [0]
	*($9 + [424]) = [34]
	*($9 + [336 align=4]) = *($9 + [424])
	CALL $220(($9 + [760]), ($9 + [336]))
	goto $label$126 
	
.LABEL $label$139
	*($9 + [708]) = [0]
	*($9 + [704]) = [35]
	*($9 + [56 align=4]) = *($9 + [704])
	CALL $222(($9 + [760]), ($9 + [56]))
	goto $label$126 
	
.LABEL $label$138
	*($9 + [716]) = [0]
	*($9 + [712]) = [36]
	*($9 + [48 align=4]) = *($9 + [712])
	CALL $221(($9 + [760]), ($9 + [48]))
	goto $label$126 
	
.LABEL $label$137
	*($9 + [628]) = [0]
	*($9 + [624]) = [37]
	*($9 + [136 align=4]) = *($9 + [624])
	CALL $219(($9 + [760]), ($9 + [136]))
	goto $label$126 
	
.LABEL $label$136
	*($9 + [740]) = [0]
	*($9 + [736]) = [38]
	*($9 + [24 align=4]) = *($9 + [736])
	CALL $219(($9 + [760]), ($9 + [24]))
	goto $label$126 
	
.LABEL $label$135
	*($9 + [492]) = [0]
	*($9 + [488]) = [39]
	*($9 + [272 align=4]) = *($9 + [488])
	CALL $234(($9 + [760]), ($9 + [272]))
	goto $label$126 
	
.LABEL $label$134
	*($9 + [460]) = [0]
	*($9 + [456]) = [40]
	*($9 + [304 align=4]) = *($9 + [456])
	CALL $236(($9 + [760]), ($9 + [304]))
	goto $label$126 
	
.LABEL $label$133
	*($9 + [556]) = [0]
	*($9 + [552]) = [41]
	*($9 + [208 align=4]) = *($9 + [552])
	CALL $231(($9 + [760]), ($9 + [208]))
	goto $label$126 
	
.LABEL $label$132
	*($9 + [660]) = [0]
	*($9 + [656]) = [42]
	*($9 + [104 align=4]) = *($9 + [656])
	CALL $220(($9 + [760]), ($9 + [104]))
	goto $label$126 
	
.LABEL $label$131
	*($9 + [532]) = [0]
	*($9 + [528]) = [43]
	*($9 + [232 align=4]) = *($9 + [528])
	CALL $219(($9 + [760]), ($9 + [232]))
	goto $label$126 
	
.LABEL $label$130
	*($9 + [604]) = [0]
	*($9 + [600]) = [44]
	*($9 + [160 align=4]) = *($9 + [600])
	CALL $228(($9 + [760]), ($9 + [160]))
	goto $label$126 
	
.LABEL $label$129
	*($9 + [388]) = [0]
	*($9 + [384]) = [45]
	*($9 + [376 align=4]) = *($9 + [384])
	CALL $234(($9 + [760]), ($9 + [376]))
	goto $label$126 
	
.LABEL $label$128
	*($9 + [436]) = [0]
	*($9 + [432]) = [46]
	*($9 + [328 align=4]) = *($9 + [432])
	CALL $221(($9 + [760]), ($9 + [328]))
	goto $label$126 
	
.LABEL $label$127
	*($9 + [500]) = [0]
	*($9 + [496]) = [47]
	*($9 + [264 align=4]) = *($9 + [496])
	CALL $221(($9 + [760]), ($9 + [264]))
	
.LABEL $label$126
	CALL $238(($9 + [760]))
	
.LABEL $label$14
	*([0] + [4]) = ($9 + [3040])
}

void .FUNC _ZN12thedeosgames5helloEyNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2)
{
	CALL require_auth(*($0 + [176]))
	CALL require_recipient($1)
}

void .FUNC _ZN12thedeosgames10diceclosecEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [112])
	*([0] + [4]) = $11
	CALL require_auth(*($0 + [176]))
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)-1) <= (int_64)999), [1552])
	$7 = *(($0 + [1872]))
	$9 = *(($0 + [1876]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$1 }
	$8 = ($9 + [-24])
	$10 = ([0] - $7)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$1 }
	$9 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $10) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [1848])
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$4 }
	$10 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [72]) == (int_32)$3), [176])
	goto $label$3 
	
.LABEL $label$4
	$10 = [0]
	$8 = CALL db_find_i64(*(($0 + [1848])), *(($0 + [1856])), (int_64)5445034581344518144, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$10 = CALL $101($3, $8)
	CALL eosio_assert(((int_32)*($10 + [72]) == (int_32)$3), [176])
	
.LABEL $label$3
	$5 = ((int_32)$10 != (int_32)[0])
	CALL eosio_assert($5, [1600])
	CALL eosio_assert((*($10 + [56]) == 0), [5680])
	CALL eosio_assert(((int_64)*($10 + [40]) != (int_64)*(($0 + [176]))), [2960])
	*(($8 = (($11 + [16]) + [8]))) = *(($10 + [16]))
	$1 = *($10 + [8])
	*(($11 + [12])) = *((($11 + [16]) + [12]))
	*(($11 + [8])) = *($8)
	*($11 + [16]) = $1
	*($11 + [4]) = *($11 + [20])
	*($11) = *($11 + [16])
	$1 = (CASTING uint_64)(uint_32 CALL _ZN12thedeosgames7tkncodeEN5eosio5assetE($8, $11))
	$6 = *(($0 + [2112]))
	$9 = *(($0 + [2116]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$8 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$6:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$5 }
	$9 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $7) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$4 = ($0 + [2088])
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$8 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [56]) == (int_32)$4), [176])
	goto $label$7 
	
.LABEL $label$8
	$8 = [0]
	$9 = CALL db_find_i64(*(($0 + [2088])), *(($0 + [2096])), (int_64)6138558357033713664, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$7 }
	$8 = CALL $122($4, $9)
	CALL eosio_assert(((int_32)*($8 + [56]) == (int_32)$4), [176])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [2880])
	CALL eosio_assert((*($8 + [16]) == 0), [144])
	$8 = CALL _ZN12thedeosgames4randEmy($0, (CASTING uint_32)(uint_64 ((uint_64)((int_64)((uint_64)CALL $fimport$15() / (uint_64)(int_64)1000000) & (int_64)4294967295) % (uint_64)$2)), $2)
	CALL eosio_assert($5, [288])
	CALL eosio_assert(((int_32)*($10 + [72]) == (int_32)$3), [336])
	CALL eosio_assert(((int_64)*(($0 + [1848])) == (int_64)CALL $fimport$14()), [384])
	*($10 + [28]) = $8
	*($10 + [56]) = [1]
	$1 = *($10)
	CALL eosio_assert([1], [448])
	*($11 + [104]) = (($11 + [32]) + [64])
	*($11 + [100]) = ($11 + [32])
	*($11 + [96]) = ($11 + [32])
	CALL $203(($11 + [96]), $10)
	CALL db_update_i64(*($10 + [76]), (int_64)0, ($11 + [32]), [64])
	$8 = ($0 + [1864])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$9 }
	*($8) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($11 + [112])
}

int_32 .FUNC _ZN12thedeosgames7randextEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	$3 = (CASTING uint_64)(uint_32 (((CALL tapos_block_prefix() + CALL $fimport$43()) + (CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$15() / (uint_64)(int_64)1000000))) + [31]))
	*($0 + [2272]) = $3
	$3 = ((int_64)(uint_64)$3 >> (uint_64)(int_64)12) ^ (int_64)$3
	$3 = ((int_64)((int_64)$3) << (int_64)25) ^ (int_64)$3
	$3 = ((int_64)(uint_64)$3) >> (uint_64)(int_64)27
	*($0 + [2272]) = $3 ^ (int_64)$3))
	*(($0 + [2208])) = ((int_64)$3 * (int_64)2685821657736338717)
	$1 = ($0 + [2212])
	$4 = [0]
	$2 = ($0 + [2272])
	
.LOOP $label$1:
	$3 = *($2)
	$3 = ((int_64)(uint_64)$3 >> (uint_64)(int_64)12) ^ (int_64)$3
	$3 = ((int_64)((int_64)$3) << (int_64)25) ^ (int_64)$3
	$3 = ((int_64)(uint_64)$3) >> (uint_64)(int_64)27
	*($2) = $3 ^ (int_64)$3))
	*(($1 + $4)) = ((int_64)$3 * (int_64)2685821657736338717)
	$4 = ($4 + [4])
	if ( ((int_32)$4 != (int_32)[60]) ){ goto $label$1 }
	$3 = *($4)
	$3 = ((int_64)((int_64)$3 << (int_64)31) ^ (int_64)$3)
	$3 = *($0 + [2208])
	$3 = ((int_64)((int_64)((int_64)(uint_64)$3 >> (uint_64)(int_64)30) ^ (int_64)$3) ^ (int_64)$3) ^ (int_64)(uint_64)$3 >> (uint_64)(int_64)11
	*(($4 = ($0 + [2212]))) = $3))
	return (CASTING uint_32)(uint_64 ((uint_64)((int_64)((int_64)$3 & (int_64)4294967295) * (int_64)1181783497276652981) % (uint_64)(int_64)10000))
}

void .FUNC _ZN12thedeosgames5issueEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [192])
	*([0] + [4]) = $13
	$8 = [0]
	$10 = *($2 + [8])
	$12 = (uint_64)$10 >> (uint_64)(int_64)8
	$7 = $12)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [32])
	$8 = *($3)
	if ( ($8 & [1]) ){ goto $label$7 }
	$8 = uint_32($8 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$8 = *($3 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($8 <= [257]), [4832])
	$9 = [0]
	*(($13 + [120])) = [0]
	*($13 + [104]) = (int_64)-1
	*($13 + [112]) = (int_64)0
	$7 = *($0 + [176])
	*($13 + [88]) = $7
	*($13 + [96]) = $12
	$6 = [0]
	$8 = CALL db_find_i64($7, $12, (int_64)-4157508551318700032, $12)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$8 }
	$6 = CALL $7(($13 + [88]), $8)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($13 + [88])), [176])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [4864])
	CALL require_auth(*($6 + [32]))
	$7 = *($2)
	if ( ((uint_64)((int_64)$7 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$8 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$9 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$9 = [0]
	
.LABEL $label$9
	CALL eosio_assert($9, [3168])
	CALL eosio_assert(((int_64)$7 > (int_64)0), [4928])
	CALL eosio_assert(((int_64)$10 == (int_64)*($6 + [8])), [3232])
	CALL eosio_assert(((int_64)$7 <= (int_64))(*($6 + [16]) - *($6))), [4960])
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($13 + [88])), [336])
	CALL eosio_assert(((int_64)*($13 + [88]) == (int_64)CALL $fimport$14()), [384])
	$12 = *($6 + [8])
	CALL eosio_assert(((int_64)$10 == (int_64)$12), [656])
	$7 = ((int_64)*($6) + (int_64)$7)
	*($6) = $7
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [704])
	CALL eosio_assert(((int_64)*($6) < (int_64)4611686018427387904), [736])
	$7 = (uint_64)$12 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$7) == (int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8)), [448])
	*($13 + [184]) = (($13 + [128]) + [40])
	*($13 + [180]) = ($13 + [128])
	*($13 + [176]) = ($13 + [128])
	CALL $197(($13 + [176]), $6)
	CALL db_update_i64(*($6 + [44]), (int_64)0, ($13 + [128]), [40])
	$8 = ($13 + [104])
	if ( (uint_64)($7 <= *($8)) ){ goto $label$14 }
	*($8) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$14
	$8 = ($6 + [32])
	$7 = *($8)
	*(($6 = (($13 + [72]) + [8]))) = *(($2 + [8]))
	*($13 + [72]) = *($2)
	*((($13 + [8]) + [8])) = *($6)
	*($13 + [8]) = *($13 + [72])
	*($13 + [12]) = *($13 + [76])
	CALL _ZN12thedeosgames11add_balanceEyN5eosio5assetEy($0, $7, ($13 + [8]), $7)
	$4 = *($8)
	if ( ((int_64)$4 == (int_64)$1) ){ goto $label$15 }
	$5 = *($0)
	$7 = (int_64)0
	$10 = (int_64)59
	$8 = [1440]
	$11 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$7 > (uint_64)(int_64)5) ){ goto $label$21 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$6 = ($6 + [165])
	goto $label$19 
	
.LABEL $label$21
	$12 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$17
	$8 = ($8 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$16 }
	*(($13 + [52])) = *(($2 + [12]))
	*(($6 = (($13 + [24]) + [24]))) = *(($2 + [8]))
	*(($13 + [44])) = *(($2 + [4]))
	*($13 + [32]) = $1
	*($13 + [24]) = $4
	*($13 + [40]) = *($2)
	CALL $295(($13 + [56]), $3)
	*(($8 = CALL $275([16]))) = $4
	*($8 + [8]) = $11
	*($13 + [176]) = $8
	$8 = ($8 + [16])
	*($13 + [184]) = $8
	*($13 + [180]) = $8
	*($13 + [128]) = *($13 + [24])
	*($13 + [136]) = *($13 + [32])
	*((($13 + [128]) + [24])) = *($6)
	*($13 + [144]) = *($13 + [40])
	$8 = (($13 + [24]) + [40])
	*(($6 = (($13 + [128]) + [40]))) = *($8)
	*($13 + [160]) = *($13 + [56])
	*($13 + [56]) = [0]
	*(($13 + [60])) = [0]
	*($8) = [0]
	CALL $40($5, (int_64)-3617168760277827584, ($13 + [176]), ($13 + [128]))
	if ( ((*($13 + [160]) & [1]) == 0) ){ goto $label$22 }
	CALL $276(*($6))
	
.LABEL $label$22
	$8 = *($13 + [176])
	if ( ($8 == 0) ){ goto $label$23 }
	*($13 + [180]) = $8
	CALL $276($8)
	
.LABEL $label$23
	if ( ((*(($13 + [56])) & [1]) == 0) ){ goto $label$15 }
	CALL $276(*(($13 + [64])))
	
.LABEL $label$15
	$2 = *($13 + [112])
	if ( ($2 == 0) ){ goto $label$24 }
	$9 = ($13 + [116])
	$8 = *($9)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$26 }
	
.LOOP $label$27:
	$8 = ($8 + [-24])
	$6 = *($8)
	*($8) = [0]
	if ( ($6 == 0) ){ goto $label$28 }
	CALL $276($6)
	
.LABEL $label$28
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$27 }
	$8 = *(($13 + [112]))
	goto $label$25 
	
.LABEL $label$26
	$8 = $2
	
.LABEL $label$25
	*($9) = $2
	CALL $276($8)
	
.LABEL $label$24
	*([0] + [4]) = ($13 + [192])
}

void .FUNC _ZN12thedeosgames4burnEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [144])
	*([0] + [4]) = $9
	$7 = [0]
	$4 = *($2 + [8])
	$8 = (uint_64)$4 >> (uint_64)(int_64)8
	$6 = $8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [32])
	$7 = *($3)
	if ( ($7 & [1]) ){ goto $label$7 }
	$7 = uint_32($7 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$7 = *($3 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($7 <= [257]), [5008])
	$3 = [0]
	*(($9 + [72])) = [0]
	*($9 + [56]) = (int_64)-1
	*($9 + [64]) = (int_64)0
	$6 = *($0 + [176])
	*($9 + [40]) = $6
	*($9 + [48]) = $8
	$5 = [0]
	$7 = CALL db_find_i64($6, $8, (int_64)-4157508551318700032, $8)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	$5 = CALL $7(($9 + [40]), $7)
	CALL eosio_assert(((int_32)*($5 + [40]) == (int_32)($9 + [40])), [176])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [5040])
	CALL require_auth($1)
	CALL require_recipient($1)
	$6 = *($2)
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$7 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$3 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$3 = [0]
	
.LABEL $label$9
	CALL eosio_assert($3, [3168])
	CALL eosio_assert(((int_64)$6 > (int_64)0), [5104])
	CALL eosio_assert(((int_64)$4 == (int_64)*($5 + [8])), [3232])
	CALL eosio_assert(((int_64)$6 <= (int_64)*($5)), [4960])
	*(($7 = (($9 + [24]) + [8]))) = *(($2 + [8]))
	$8 = *($2)
	*((($9 + [8]) + [12])) = *((($9 + [24]) + [12]))
	*((($9 + [8]) + [8])) = *($7)
	*($9 + [24]) = $8
	*($9 + [12]) = *($9 + [28])
	*($9 + [8]) = *($9 + [24])
	CALL _ZN12thedeosgames11sub_balanceEyN5eosio5assetE($0, $1, ($9 + [8]))
	CALL eosio_assert(((int_32)*($5 + [40]) == (int_32)($9 + [40])), [336])
	CALL eosio_assert(((int_64)*($9 + [40]) == (int_64)CALL $fimport$14()), [384])
	$8 = *($5 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$8), [912])
	$6 = (int_64)
	*($5) = $6(*($5) - $6))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [960])
	CALL eosio_assert(((int_64)*($5) < (int_64)4611686018427387904), [992])
	$6 = (uint_64)$8 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$6) == (int_64)(uint_64)*($5 + [8]) >> (uint_64)(int_64)8)), [448])
	*($9 + [136]) = (($9 + [80]) + [40])
	*($9 + [132]) = ($9 + [80])
	*($9 + [128]) = ($9 + [80])
	CALL $197(($9 + [128]), $5)
	CALL db_update_i64(*($5 + [44]), (int_64)0, ($9 + [80]), [40])
	$7 = ($9 + [56])
	if ( (uint_64)($6 <= *($7)) ){ goto $label$14 }
	*($7) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$14
	$2 = *($9 + [64])
	if ( ($2 == 0) ){ goto $label$15 }
	$3 = ($9 + [68])
	$7 = *($3)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$17 }
	
.LOOP $label$18:
	$7 = ($7 + [-24])
	$5 = *($7)
	*($7) = [0]
	if ( ($5 == 0) ){ goto $label$19 }
	CALL $276($5)
	
.LABEL $label$19
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$18 }
	$7 = *(($9 + [64]))
	goto $label$16 
	
.LABEL $label$17
	$7 = $2
	
.LABEL $label$16
	*($3) = $2
	CALL $276($7)
	
.LABEL $label$15
	*([0] + [4]) = ($9 + [144])
}

void .FUNC _ZN12thedeosgames6createEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [112])
	*([0] + [4]) = $9
	CALL require_auth(*($0 + [176]))
	$8 = [0]
	$3 = *($2 + [8])
	$4 = (uint_64)$3 >> (uint_64)(int_64)8
	$7 = $4)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [4704])
	$6 = [0]
	$5 = *($2)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$6 }
	$8 = [0]
	$7 = $4
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$6 = [0]
	
.LABEL $label$6
	CALL eosio_assert($6, [4736])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [4752])
	*(($9 + [32])) = [0]
	*($9 + [16]) = (int_64)-1
	*($9 + [24]) = (int_64)0
	$8 = ($0 + [176])
	$7 = *($8)
	*($9) = $7
	*($9 + [8]) = $4
	$6 = CALL db_find_i64($7, $4, (int_64)-4157508551318700032, $4)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert(((int_32)*(CALL $7($9, $6) + [40]) == (int_32)$9), [176])
	$6 = [0]
	goto $label$11 
	
.LABEL $label$12
	$6 = [1]
	
.LABEL $label$11
	CALL eosio_assert($6, [4784])
	$4 = *($8)
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$14()), [512])
	$8 = CALL $275([56])
	$6 = CALL $26($8)
	*($8 + [40]) = $9
	*($8 + [8]) = $3
	*(($8 + [28])) = *(($2 + [12]))
	*(($8 + [24])) = *(($2 + [8]))
	*(($8 + [20])) = *(($2 + [4]))
	*($8 + [16]) = *($2)
	*($8 + [32]) = $1
	*($9 + [104]) = (($9 + [48]) + [40])
	*($9 + [100]) = ($9 + [48])
	*($9 + [96]) = ($9 + [48])
	CALL $197(($9 + [96]), $6)
	$7 = (uint_64)*($8 + [8]) >> (uint_64)(int_64)8
	$6 = CALL db_store_i64(*(($9 + [8])), (int_64)-4157508551318700032, $4, $7), ($9 + [48]), [40]
	*($8 + [44]) = $6)
	$2 = ($9 + [16])
	if ( (uint_64)($7 <= *($2)) ){ goto $label$13 }
	*($2) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$13
	*($9 + [96]) = $8
	$7 = (uint_64)*(($8 + [8])) >> (uint_64)(int_64)8
	*($9 + [48]) = $7)
	*($9 + [44]) = $6
	$2 = *(($9 + [28]))
	if ( ((uint_32)$2 >= (uint_32)*(($9 + [32]))) ){ goto $label$15 }
	*($2 + [8]) = $7
	*($2 + [16]) = $6
	*($9 + [96]) = [0]
	*($2) = $8
	*(($9 + [28])) = ($2 + [24])
	goto $label$14 
	
.LABEL $label$15
	CALL $28(($9 + [24]), ($9 + [96]), ($9 + [48]), ($9 + [44]))
	
.LABEL $label$14
	$8 = *($9 + [96])
	*($9 + [96]) = [0]
	if ( ($8 == 0) ){ goto $label$16 }
	CALL $276($8)
	
.LABEL $label$16
	$6 = *($9 + [24])
	if ( ($6 == 0) ){ goto $label$17 }
	$0 = ($9 + [28])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$19 }
	
.LOOP $label$20:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$21 }
	CALL $276($2)
	
.LABEL $label$21
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$20 }
	$8 = *(($9 + [24]))
	goto $label$18 
	
.LABEL $label$19
	$8 = $6
	
.LABEL $label$18
	*($0) = $6
	CALL $276($8)
	
.LABEL $label$17
	*([0] + [4]) = ($9 + [112])
}

int_32 .FUNC $197 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [640])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN12thedeosgames5pauseEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	CALL require_auth(*($0 + [176]))
	$2 = ($0 + [2048])
	$5 = [0]
	$4 = CALL db_lowerbound_i64(*($0 + [2048]), *(($0 + [2056])), (int_64)-4417020450001911808, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $171($2, $4)
	
.LABEL $label$1
	$4 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($4, [2880])
	CALL eosio_assert($4, [288])
	CALL eosio_assert(((int_32)*($5 + [28]) == (int_32)$2), [336])
	CALL eosio_assert(((int_64)*($2) == (int_64)CALL $fimport$14()), [384])
	*($5 + [8]) = $1
	$3 = *($5)
	CALL eosio_assert([1], [448])
	CALL eosio_assert([1], [640])
	CALL memcpy($6, $5, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy(($6 | [8]), ($5 + [8]), [4])
	CALL eosio_assert([1], [640])
	CALL memcpy(($6 | [12]), ($5 + [16]), [8])
	CALL eosio_assert([1], [640])
	CALL memcpy(($6 + [20]), ($5 + [24]), [4])
	CALL db_update_i64(*($5 + [32]), (int_64)0, $6, [24])
	$5 = ($0 + [2064])
	if ( (uint_64)($3 <= *($5)) ){ goto $label$2 }
	*($5) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [32])
}

void .FUNC _ZN12thedeosgames10seteosconfEmmmymmmm (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_64 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [80])
	*([0] + [4]) = $13
	CALL require_auth(*($0 + [176]))
	$9 = ($0 + [2088])
	$10 = ($0 + [2096])
	$11 = CALL db_lowerbound_i64(*($0 + [2088]), *($10), (int_64)6138558357033713664, (int_64)0)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$2 }
	$11 = CALL $122($9, $11)
	CALL eosio_assert([1], [288])
	CALL eosio_assert(((int_32)*($11 + [56]) == (int_32)$9), [336])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$14()), [384])
	*($11 + [16]) = $1
	*($11 + [20]) = $2
	*($11 + [24]) = $3
	*($11 + [32]) = $4
	*($11 + [40]) = $5
	*($11 + [44]) = $6
	$4 = *($11)
	*($11 + [48]) = $7
	*($11 + [52]) = $8
	CALL eosio_assert([1], [448])
	*($13 + [72]) = ($13 + [52])
	*($13 + [68]) = $13
	*($13 + [64]) = $13
	CALL $177(($13 + [64]), $11)
	CALL db_update_i64(*($11 + [60]), (int_64)0, $13, [52])
	$11 = ($0 + [2104])
	if ( (uint_64)($4 <= *($11)) ){ goto $label$1 }
	*($11) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	goto $label$1 
	
.LABEL $label$2
	$12 = *(($0 + [176]))
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$14()), [512])
	*(($11 = CALL $275([72])) + [56]) = $9
	*($11 + [8]) = (int_64)0
	*($11) = (int_64)0
	*($11 + [16]) = $1
	*($11 + [20]) = $2
	*($11 + [24]) = $3
	*($11 + [32]) = $4
	*($11 + [40]) = $5
	*($11 + [44]) = $6
	*($11 + [48]) = $7
	*($11 + [52]) = $8
	*($13 + [72]) = ($13 + [52])
	*($13 + [68]) = $13
	*($13 + [64]) = $13
	CALL $177(($13 + [64]), $11)
	$4 = *($11)
	$1 = CALL db_store_i64(*($10), (int_64)6138558357033713664, $12, $4, $13, [52])
	*($11 + [60]) = $1
	$9 = ($0 + [2104])
	if ( (uint_64)($4 <= *($9)) ){ goto $label$3 }
	*($9) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($13 + [64]) = $11
	$4 = *($11)
	*($13) = $4
	*($13 + [60]) = $1
	$2 = ($0 + [2116])
	$9 = *($2)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [2120]))) ){ goto $label$5 }
	*($9 + [8]) = $4
	*($9 + [16]) = $1
	*($13 + [64]) = [0]
	*($9) = $11
	*($2) = ($9 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $130(($0 + [2112]), ($13 + [64]), $13, ($13 + [60]))
	
.LABEL $label$4
	$11 = *($13 + [64])
	*($13 + [64]) = [0]
	if ( ($11 == 0) ){ goto $label$1 }
	CALL $276($11)
	
.LABEL $label$1
	*([0] + [4]) = ($13 + [80])
}

void .FUNC _ZN12thedeosgames10cleanupeosEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [32])
	*([0] + [4]) = $15
	CALL require_auth(*($0 + [176]))
	$6 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$3 = *(($0 + [1776]))
	$5 = [0]
	*($15 + [16]) = [0]
	*($15 + [8]) = (int_64)0
	$13 = CALL db_lowerbound_i64(*($0 + [1768]), $3, (int_64)5445034581344561536, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$1 }
	$3 = (int_64))(((int_64)$6 & (int_64)4294967295) - $1)
	$2 = ($0 + [1768])
	$13 = CALL $97($2, $13)
	$12 = (($15 + [8]) + [8])
	$4 = ($0 + [168])
	
.LOOP $label$3:
	if ( ((int_32)*($13 + [56]) != (int_32)[2]) ){ goto $label$4 }
	if ( ((uint_64)*($13 + [48]) >= (uint_64)$3) ){ goto $label$4 }
	$14 = *($15 + [12])
	if ( ((int_32)$14 == (int_32)*($12)) ){ goto $label$6 }
	*($14) = *($13)
	*($15 + [12]) = ($14 + [8])
	goto $label$5 
	
.LABEL $label$6
	CALL $92(($15 + [8]), $13)
	
.LABEL $label$5
	if ( ((uint_32)$5 > (uint_32)*($4)) ){ goto $label$2 }
	$5 = ($5 + [1])
	
.LABEL $label$4
	CALL eosio_assert([1], [2496])
	$13 = CALL db_next_i64(*($13 + [76]), ($15 + [24]))
	if ( ((int_32)$13 <= (int_32)[-1]) ){ goto $label$2 }
	$13 = CALL $97($2, $13)
	goto $label$3 
	
.LABEL $label$2
	$11 = *($15 + [12])
	$12 = *($15 + [8])
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$7 }
	$7 = ($0 + [1792])
	$8 = ($0 + [1796])
	$9 = ($0 + [1776])
	$10 = ($0 + [1768])
	
.LOOP $label$8:
	$3 = *($12)
	$4 = *($7)
	$14 = *($8)
	if ( ((int_32)$14 == (int_32)$4) ){ goto $label$9 }
	$13 = ($14 + [-24])
	$0 = ([0] - $4)
	
.LOOP $label$10:
	if ( ((int_64)*(*($13)) == (int_64)$3) ){ goto $label$9 }
	$14 = $13
	$5 = ($13 + [-24])
	$13 = $5
	if ( ((int_32)($5 + $0) != (int_32)[-24]) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$14 == (int_32)$4) ){ goto $label$13 }
	$13 = *(($14 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [72]) == (int_32)$2), [176])
	if ( $13 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$13 = CALL db_find_i64(*($10), *($9), (int_64)5445034581344561536, $3)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$11 }
	$13 = CALL $97($2, $13)
	CALL eosio_assert(((int_32)*($13 + [72]) == (int_32)$2), [176])
	
.LABEL $label$12
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$5 = CALL db_next_i64(*($13 + [76]), ($15 + [24]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$14 }
	CALL $97($2, $5)
	
.LABEL $label$14
	CALL $98($2, $13)
	
.LABEL $label$11
	$12 = ($12 + [8])
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$8 }
	$11 = *($15 + [8])
	
.LABEL $label$7
	if ( ($11 == 0) ){ goto $label$1 }
	*($15 + [12]) = $11
	CALL $276($11)
	
.LABEL $label$1
	*([0] + [4]) = ($15 + [32])
}

void .FUNC _ZN12thedeosgames7setrateEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL require_auth(*($0 + [176]))
	$2 = ($0 + [2048])
	$4 = ($0 + [2056])
	$5 = CALL db_lowerbound_i64(*($0 + [2048]), *($4), (int_64)-4417020450001911808, (int_64)0)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL $171($2, $5)
	CALL eosio_assert([1], [288])
	CALL eosio_assert(((int_32)*($5 + [28]) == (int_32)$2), [336])
	CALL eosio_assert(((int_64)*($2) == (int_64)CALL $fimport$14()), [384])
	*($5 + [24]) = $1
	$3 = *($5)
	CALL eosio_assert([1], [448])
	CALL eosio_assert([1], [640])
	CALL memcpy($7, $5, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy(($7 | [8]), ($5 + [8]), [4])
	CALL eosio_assert([1], [640])
	CALL memcpy(($7 | [12]), ($5 + [16]), [8])
	CALL eosio_assert([1], [640])
	CALL memcpy(($7 + [20]), ($5 + [24]), [4])
	CALL db_update_i64(*($5 + [32]), (int_64)0, $7, [24])
	$0 = ($0 + [2064])
	if ( (uint_64)($3 <= *($0)) ){ goto $label$1 }
	*($0) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	goto $label$1 
	
.LABEL $label$2
	$6 = *(($0 + [176]))
	CALL eosio_assert(((int_64)*($2) == (int_64)CALL $fimport$14()), [512])
	*(($5 = CALL $275([40])) + [28]) = $2
	*($5 + [16]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [8]) = [0]
	*($5 + [24]) = $1
	CALL eosio_assert([1], [640])
	CALL memcpy($7, $5, [8])
	CALL eosio_assert([1], [640])
	CALL memcpy(($7 | [8]), ($5 + [8]), [4])
	CALL eosio_assert([1], [640])
	CALL memcpy(($7 | [12]), ($5 + [16]), [8])
	CALL eosio_assert([1], [640])
	CALL memcpy(($7 + [20]), ($5 + [24]), [4])
	$3 = *($5)
	$1 = CALL db_store_i64(*($4), (int_64)-4417020450001911808, $6, $3, $7, [24])
	*($5 + [32]) = $1
	$2 = ($0 + [2064])
	if ( (uint_64)($3 <= *($2)) ){ goto $label$3 }
	*($2) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($7 + [40]) = $5
	$3 = *($5)
	*($7) = $3
	*($7 + [36]) = $1
	$4 = ($0 + [2076])
	$2 = *($4)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [2080]))) ){ goto $label$5 }
	*($2 + [8]) = $3
	*($2 + [16]) = $1
	*($7 + [40]) = [0]
	*($2) = $5
	*($4) = ($2 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $175(($0 + [2072]), ($7 + [40]), $7, ($7 + [36]))
	
.LABEL $label$4
	$0 = *($7 + [40])
	*($7 + [40]) = [0]
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $276($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [48])
}

void .FUNC _ZN12thedeosgames8betcloseEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEmS1_mS8_S1_S1_S1_ (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11)
{
	CALL require_auth(*($0 + [176]))
	CALL require_recipient($2)
}

void .FUNC _ZN12thedeosgames7cleanupEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [32])
	*([0] + [4]) = $15
	CALL require_auth(*($0 + [176]))
	$5 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$3 = *(($0 + [1736]))
	$10 = [0]
	*($15 + [16]) = [0]
	*($15 + [8]) = (int_64)0
	$14 = CALL db_lowerbound_i64(*($0 + [1728]), $3, (int_64)5445034581344387072, (int_64)0)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$1 }
	$3 = (int_64))(((int_64)$5 & (int_64)4294967295) - $1)
	$2 = ($0 + [1728])
	$14 = CALL $95($2, $14)
	$12 = (($15 + [8]) + [8])
	$4 = ($0 + [168])
	
.LOOP $label$3:
	if ( ((int_32)*($14 + [56]) != (int_32)[2]) ){ goto $label$4 }
	if ( ((uint_64)*($14 + [48]) >= (uint_64)$3) ){ goto $label$4 }
	$13 = *($15 + [12])
	if ( ((int_32)$13 == (int_32)*($12)) ){ goto $label$6 }
	*($13) = *($14)
	*($15 + [12]) = ($13 + [8])
	goto $label$5 
	
.LABEL $label$6
	CALL $92(($15 + [8]), $14)
	
.LABEL $label$5
	if ( ((uint_32)$10 > (uint_32)*($4)) ){ goto $label$2 }
	$10 = ($10 + [1])
	
.LABEL $label$4
	CALL eosio_assert([1], [2496])
	$14 = CALL db_next_i64(*($14 + [76]), ($15 + [24]))
	if ( ((int_32)$14 <= (int_32)[-1]) ){ goto $label$2 }
	$14 = CALL $95($2, $14)
	goto $label$3 
	
.LABEL $label$2
	$11 = *($15 + [12])
	$12 = *($15 + [8])
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$7 }
	$6 = ($0 + [1752])
	$7 = ($0 + [1756])
	$8 = ($0 + [1736])
	$9 = ($0 + [1728])
	
.LOOP $label$8:
	$3 = *($12)
	$4 = *($6)
	$13 = *($7)
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$9 }
	$14 = ($13 + [-24])
	$0 = ([0] - $4)
	
.LOOP $label$10:
	if ( ((int_64)*(*($14)) == (int_64)$3) ){ goto $label$9 }
	$13 = $14
	$10 = ($14 + [-24])
	$14 = $10
	if ( ((int_32)($10 + $0) != (int_32)[-24]) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$13 }
	$14 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [72]) == (int_32)$2), [176])
	if ( $14 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$14 = CALL db_find_i64(*($9), *($8), (int_64)5445034581344387072, $3)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$11 }
	$14 = CALL $95($2, $14)
	CALL eosio_assert(((int_32)*($14 + [72]) == (int_32)$2), [176])
	
.LABEL $label$12
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$10 = CALL db_next_i64(*($14 + [76]), ($15 + [24]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$14 }
	CALL $95($2, $10)
	
.LABEL $label$14
	CALL $96($2, $14)
	$14 = [4688]
	$10 = *([4688])
	if ( ($10 == 0) ){ goto $label$11 }
	
.LOOP $label$16:
	if ( ((int_32)$10 == (int_32)[37]) ){ goto $label$15 }
	CALL prints_l($14, [1])
	$14 = ($14 + [1])
	$10 = *($14)
	if ( ($10 == 0) ){ goto $label$11 }
	goto $label$16 
	
.LABEL $label$15
	CALL printui($3)
	CALL prints(($14 + [1]))
	
.LABEL $label$11
	$12 = ($12 + [8])
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$8 }
	$11 = *($15 + [8])
	
.LABEL $label$7
	if ( ($11 == 0) ){ goto $label$1 }
	*($15 + [12]) = $11
	CALL $276($11)
	
.LABEL $label$1
	*([0] + [4]) = ($15 + [32])
}