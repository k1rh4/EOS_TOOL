(data (i32.const 8532) "failed to allocate pages\00The destination must be a planet!\00")
(data (i32.const 8592) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 8608) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 8624) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(data (i32.const 8640) "\n Resolving a building task <\00")
(data (i32.const 8670) "> \n\00")
(data (i32.const 8674) "\n Resolving an assembling task <\00")
(data (i32.const 8707) "Can\'t despawn non-existing player.\00")
(data (i32.const 8742) "Can\'t spawn an existing player.\00")
(data (i32.const 8774) "\n Player joined! Congratulations \00")
(data (i32.const 8808) "No owner presented\00")
(data (i32.const 8827) "Can not place order for a planet that is currently in colonization stage\00")
(data (i32.const 8900) "Unable to access someone elses planet\00")
(data (i32.const 8938) "Add planet \00")
(data (i32.const 8950) "Home sector must have a planet\00")
(data (i32.const 8981) "Destination sector must have a planet\00")
(data (i32.const 9019) "Not enough battleships to send\00")
(data (i32.const 9050) "Not enough cargoships to send\00")
(data (i32.const 9080) "Not enough colonizers to send\00")
(data (i32.const 9110) "Not enough metal\00")
(data (i32.const 9127) "Not enough crystals\00")
(data (i32.const 9147) "Not enough gas\00")
(data (i32.const 9162) "At least 1 colonizer is required to proceed with the colonization task\00")
(data (i32.const 9234) "\n Planet:   \00")
(data (i32.const 9247) "\n Com. center  lvl:   \00")
(data (i32.const 9270) "\n Assembly     lvl:   \00")
(data (i32.const 9293) "\n Metal Mine   lvl:   \00")
(data (i32.const 9316) "\n Crystal Mine lvl:   \00")
(data (i32.const 9339) "\n Gas Mine     lvl:   \00")
(data (i32.const 9362) "\n Metal quantity:     \00")
(data (i32.const 9385) "\n Crystals quantity:  \00")
(data (i32.const 9408) "\n Gas quantity:       \00")
(data (i32.const 9431) "\n Orbital fleet: Battleships: \00")
(data (i32.const 9462) "\n Orbital fleet: Cargoships:  \00")
(data (i32.const 9493) "\n Orbital fleet: Colonizers:  \00")
(data (i32.const 9524) "\n Active fleets:  \00")
(data (i32.const 9543) "\n Fleet[\00")
(data (i32.const 9552) "] : \00")
(data (i32.const 9557) "Init an EMPTY map\00")
(data (i32.const 9575) "\n Counter:    \00")
(data (i32.const 9590) "write\00")
(data (i32.const 9596) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 9647) "error reading iterator\00")
(data (i32.const 9670) "get\00")
(data (i32.const 9674) "read\00")
(data (i32.const 9679) "cannot pass end iterator to modify\00")
(data (i32.const 9714) "object passed to modify is not in multi_index\00")
(data (i32.const 9760) "cannot modify objects in table of another contract\00")
(data (i32.const 9811) "updater cannot change primary key when modifying an object\00")
(data (i32.const 9870) "\n Building \00")
(data (i32.const 9882) "0\00")
(data (i32.const 9884) "cannot pass end iterator to erase\00")
(data (i32.const 9918) "cannot increment end iterator\00")
(data (i32.const 9948) "object passed to erase is not in multi_index\00")
(data (i32.const 9993) "cannot erase objects in table of another contract\00")
(data (i32.const 10043) "attempt to remove object that was not in multi_index\00")
(data (i32.const 10096) "cannot create objects in table of another contract\00")
(data (i32.const 10147) "Inserted planet \00")
(data (i32.const 10164) "Planet does not have an assembly to build ships\00")
(data (i32.const 10212) "Quantity must be >0; assembling 0 ships make unnecessary CPU usage\00")
(data (i32.const 10279) "Not enough GAS to pay for fleet fuel\00")
(data (i32.const 10316) "true\00")
(data (i32.const 10321) "false\00")
(data (i32.const 0) "X(\00\00")
(import "env" "abort" (func $fimport$0))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "memset" (func $fimport$2 (param i32 i32 i32) (result i32)))
(import "env" "db_find_i64" (func $fimport$3 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_time" (func $fimport$4 (result i64)))
(import "env" "prints" (func $fimport$5 (param i32)))
(import "env" "printui" (func $fimport$6 (param i64)))
(import "env" "memcpy" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$8 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$9 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$10 (param i32 i32)))
(import "env" "__multf3" (func $fimport$11 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$12 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$13 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$14 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$15 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$16 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$18 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$19 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$20 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$21 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$22 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$23 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$24 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$25 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$26 (param i64 i64) (result i32)))
(import "env" "require_auth" (func $fimport$27 (param i64)))
(import "env" "db_next_i64" (func $fimport$28 (param i32 i32) (result i32)))
(import "env" "current_receiver" (func $fimport$29 (result i64)))
(import "env" "printn" (func $fimport$30 (param i64)))
(import "env" "db_lowerbound_i64" (func $fimport$31 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_store_i64" (func $fimport$32 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "send_deferred" (func $fimport$33 (param i32 i64 i32 i32 i32)))
(import "env" "db_update_i64" (func $fimport$34 (param i32 i64 i32 i32)))
(import "env" "action_data_size" (func $fimport$35 (result i32)))
(import "env" "read_action_data" (func $fimport$36 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$37 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$38 (param i32 i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$39 (param i32)))
(export "apply" (func $126))
(table $0 22 22 anyfunc)
(elem (i32.const 1) $95 $119 $113 $101 $55 $71 $75 $73 $103 $110 $104 $109 $80 $97 $83 $112 $100 $118 $36 $37 $38)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 10327))
(global $global$2 i32 (i32.const 10327))


int_32 .FUNC $174 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9670])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$4 = *($1 + [4])
	$6 = int_32(($4 - $7) >> [1])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $180($1, ($2 - $6))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$4 = ($7 + ($2 << [1]))
	*(($1 + [4])) = $4
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = ($0 + [4])
	$6 = *($2)
	$5 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((int_32)*($5) != (int_32)$6) ){ goto $label$8 }
	CALL eosio_assert([0], [9674])
	$6 = *($2)
	
.LABEL $label$8
	CALL memcpy($7, $6, [1])
	$6 = (*($2) + [1])
	*($2) = $6
	if ( ((int_32)*($5) != (int_32)$6) ){ goto $label$9 }
	CALL eosio_assert([0], [9674])
	$6 = *($2)
	
.LABEL $label$9
	CALL memcpy(($7 + [1]), $6, [1])
	$6 = (*($2) + [1])
	*($2) = $6
	$7 = ($7 + [2])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $1($1)
	
.LABEL $label$2
	*(CALL $5()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $1(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $3($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $176 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $173(*($1), *($0))
	CALL $182(*($1), *($0 + [4]))
	CALL $182(*($1), *($0 + [8]))
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [9674])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [9674])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9674])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9674])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

int_32 .FUNC $177 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [9670])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$7 = (CASTING uint_32)(uint_64 $4)
	$3 = *($1)
	$8 = *($1 + [4])
	$6 = int_32(($8 - $3) >> [5])
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$5 }
	CALL $184($1, ($7 - $6))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$6 }
	$8 = ($3 + ($7 << [5]))
	*(($1 + [4])) = $8
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = ($2 + [28])
	
.LOOP $label$7:
	*($2 + [8]) = $0
	*($2 + [16]) = $3
	*((($2 + [16]) + [8])) = ($3 + [16])
	*($7) = ($3 + [24])
	*($2 + [20]) = ($3 + [8])
	CALL $185(($2 + [16]), ($2 + [8]))
	$3 = ($3 + [32])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

int_32 .FUNC $170 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9590])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9590])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $171 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $172(*($1), *($0 + [12]))
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy(($2 + [16]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [16]) != (int_32)[0])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$7 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	CALL $173(*($1), *($0 + [32]))
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$8 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $174(*($1), *($0 + [52]))
	CALL $172(*($1), *($0 + [56]))
	CALL $175(*($1), *($0 + [60]))
	$4 = *($0 + [64])
	*($2 + [8]) = *($1)
	*($2 + [20]) = ($4 + [12])
	*($2 + [16]) = $4
	*($2 + [24]) = ($4 + [24])
	*($2 + [28]) = ($4 + [36])
	*($2 + [32]) = ($4 + [40])
	*($2 + [36]) = ($4 + [48])
	*($2 + [40]) = ($4 + [56])
	*($2 + [44]) = ($4 + [64])
	CALL $176(($2 + [16]), ($2 + [8]))
	CALL $177(*($1), *($0 + [68]))
	CALL $177(*($1), *($0 + [72]))
	$global$0 = ($2 + [48])
}

int_32 .FUNC $172 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9670])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [3])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $178($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [3]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9674])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [8])
	$2 = (*($6) + [8])
	*($6) = $2
	$7 = ($7 + [8])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $7 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $5())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $6($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

void .FUNC $178 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [3])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($2 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $8(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $31($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [3]))
	$3 = ($2 + ($3 << [3]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [3]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $10($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $4 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

int_32 .FUNC $5 ()
{
	return [8208]
}

int_32 .FUNC $127 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	$3 = ($global$0 - [288])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [200]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [232]) = (int_64)0
	*($4 + [180]) = $2
	*($4 + [176]) = $2
	*($4 + [184]) = ($2 + $7)
	*($4 + [272]) = ($4 + [176])
	*($4 + [24]) = ($4 + [192])
	CALL $142(($4 + [24]), ($4 + [272]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [184])
	*($4 + [8]) = *($4 + [176])
	$3 = *($3)
	*((($4 + [240]) + [8])) = $3
	*(($8 = (($4 + [256]) + [8]))) = $3
	$9 = *($4 + [8])
	*($4 + [256]) = $9
	*($4 + [240]) = $9
	$3 = *($8)
	*((($4 + [272]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$9 = *($4 + [256])
	*($4 + [40]) = $9
	*($4 + [272]) = $9
	*(($4 + [64])) = $1
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $1
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $1
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*($4 + [56]) = $0
	*($4 + [52]) = [4]
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [232])
	$1 = *($4 + [224])
	$9 = *($4 + [216])
	$10 = *($4 + [208])
	$11 = *($4 + [200])
	$12 = *($4 + [192])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $12), (int_64 $11), (int_64 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	CALL $139(($4 + [24]))
	$global$0 = ($4 + [288])
	return [1]
}

void .FUNC $3 (int_32 $0)
{
}

int_32 .FUNC $189 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$5 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9590])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [8])
	$4 = (*($7) + [8])
	*($7) = $4
	$6 = ($6 + [8])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($1)
	$2 = *($1 + [4])
	$4 = (CASTING uint_64)(uint_32 ((int_32)($2 - $3) / (int_32)[72]))
	$1 = *($0)
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	*($0) = $1
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	
.LOOP $label$3:
	$5 = *($3)
	$4 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	
.LOOP $label$4:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$4 }
	*($0) = $1
	$5 = *($3)
	$5 = ( *(($3 + [4])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	if ( ($5 == 0) ){ goto $label$5 }
	$1 = ($5 + $1)
	*($0) = $1
	
.LABEL $label$5
	$6 = *($3 + [12])
	$5 = *(($3 + [16]))
	$7 = ($5 - $6)
	$4 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$6:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$6 }
	$1 = ( $1 ? ($7 + $1) : ((int_32)$6 == (int_32)$5) )
	*($0) = $1
	$6 = *($3 + [24])
	$5 = *(($3 + [28]))
	$7 = ($5 - $6)
	$4 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$7 }
	$1 = (( $1 ? ($7 + $1) : ((int_32)$6 == (int_32)$5) ) + [25])
	*($0) = $1
	$3 = ($3 + [72])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$3 }
	
.LABEL $label$2
	return $0
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [32])
	$4 = *($1 + [40])
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	
.LOOP $label$6:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$5 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	if ( ((int_32)*($8 + [224]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	$4 = *($0)
	*($2 + [8]) = $1
	if ( $8 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	$7 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)-4426587238800818176, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $40($3, $7)
	if ( ((int_32)*($8 + [224]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$3
	$4 = *($0)
	*($2 + [8]) = $1
	if ( $8 ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9679])
	
.LABEL $label$1
	CALL $60($3, $8, $4, ($2 + [8]))
	$4 = *($1 + [36])
	$6 = *(($0 + [60]))
	$8 = *(($0 + [56]))
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$10:
	$7 = ($6 + [-24])
	$5 = *($7)
	if ( ((int_64)*($5) == (int_64)$4) ){ goto $label$9 }
	$6 = $7
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$8 }
	if ( ((int_32)*($5 + [224]) == (int_32)$3) ){ goto $label$7 }
	CALL eosio_assert([0], [9596])
	goto $label$7 
	
.LABEL $label$8
	$5 = [0]
	$7 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)-4426587238800818176, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	$5 = CALL $40($3, $7)
	if ( ((int_32)*($5 + [224]) == (int_32)$3) ){ goto $label$7 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$7
	*($2 + [8]) = (int_64)0
	$7 = *($5 + [112])
	if ( ((int_32)*(($5 + [116])) == (int_32)$7) ){ goto $label$11 }
	$9 = ($1 + [1])
	if ( ($5 == 0) ){ goto $label$12 }
	$4 = (int_64)0
	$10 = ($1 + [4])
	$11 = ($1 + [8])
	$12 = ($5 + [112])
	$13 = ($5 + [116])
	
.LOOP $label$13:
	$6 = ($7 & [1])
	$7 = *($1)
	$15 = ($7 & [1])
	$7 = *($8)
	$14 = uint_32($7 >> [1])
	$8 = ($7 + ((int_32)(CASTING uint_32)(uint_64 $4) * (int_32)[72]))
	$16 = ( *($8 + [4]) ? $14 : $15 )
	if ( ((int_32)$16 != (int_32)( *($10) ? uint_32($7 >> [1]) : $6 )) ){ goto $label$14 }
	$7 = ($8 + [1])
	$6 = ( *($11) ? $9 : $6 )
	if ( $15 ){ goto $label$16 }
	if ( ($16 == 0) ){ goto $label$15 }
	$8 = ([0] - $14)
	
.LOOP $label$17:
	if ( ((int_32)*($7) != (int_32)*($6)) ){ goto $label$14 }
	$6 = ($6 + [1])
	$7 = ($7 + [1])
	$8 = ($8 + [1])
	if ( $8 ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ($16 == 0) ){ goto $label$15 }
	if ( CALL $17(( *($8 + [8]) ? $7 : $15 ), $6, $16) ){ goto $label$14 }
	
.LABEL $label$15
	$4 = *($0)
	*($2) = ($2 + [8])
	CALL $61($3, $5, $4, $2)
	
.LABEL $label$14
	$4 = ((int_64)*($2 + [8]) + (int_64)1)
	*($2 + [8]) = $4
	$7 = *($12)
	if ( (uint_64)($4 <= (CASTING uint_64)(uint_32 ((int_32)(*($13) - $7) / (int_32)[72]))) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$4 = (int_64)0
	$10 = ($1 + [4])
	$11 = ($1 + [8])
	$12 = ($5 + [112])
	$13 = ($5 + [116])
	
.LOOP $label$18:
	$6 = ($7 & [1])
	$7 = *($1)
	$15 = ($7 & [1])
	$7 = *($8)
	$14 = uint_32($7 >> [1])
	$8 = ($7 + ((int_32)(CASTING uint_32)(uint_64 $4) * (int_32)[72]))
	$16 = ( *($8 + [4]) ? $14 : $15 )
	if ( ((int_32)$16 != (int_32)( *($10) ? uint_32($7 >> [1]) : $6 )) ){ goto $label$19 }
	$7 = ($8 + [1])
	$6 = ( *($11) ? $9 : $6 )
	if ( $15 ){ goto $label$21 }
	if ( ($16 == 0) ){ goto $label$20 }
	$8 = ([0] - $14)
	
.LOOP $label$22:
	if ( ((int_32)*($7) != (int_32)*($6)) ){ goto $label$19 }
	$6 = ($6 + [1])
	$7 = ($7 + [1])
	$8 = ($8 + [1])
	if ( $8 ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	if ( ($16 == 0) ){ goto $label$20 }
	if ( CALL $17(( *($8 + [8]) ? $7 : $15 ), $6, $16) ){ goto $label$19 }
	
.LABEL $label$20
	$4 = *($0)
	*($2) = ($2 + [8])
	CALL eosio_assert([0], [9679])
	CALL $61($3, $5, $4, $2)
	
.LABEL $label$19
	$4 = ((int_64)*($2 + [8]) + (int_64)1)
	*($2 + [8]) = $4
	$7 = *($12)
	if ( (uint_64)($4 <= (CASTING uint_64)(uint_32 ((int_32)(*($13) - $7) / (int_32)[72]))) ){ goto $label$18 }
	
.LABEL $label$11
	$global$0 = ($2 + [16])
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	float_64 $18
	int_32 $19
	$2 = ($global$0 - [464])
	$global$0 = $2
	CALL $55($0, *($1 + [40]))
	$3 = *($1 + [40])
	$4 = ($0 + [32])
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$3) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [224]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$7 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)-4426587238800818176, $3)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$5 }
	$8 = CALL $40($4, $7)
	if ( ((int_32)*($8 + [224]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$5
	$8 = [0]
	
.LABEL $label$1
	*($2 + [460]) = $8
	*($2 + [456]) = $4
	$9 = CALL $47(($2 + [384]), ($8 + [128]))
	$7 = *($9 + [12])
	$10 = *($7 + [1])
	$6 = *([0] + [8496])
	$3 = *(($6 + [56]))
	$11 = *($7)
	$12 = *($6 + [8])
	$13 = *(($6 + [104]))
	$14 = *($7 + [2])
	$7 = *($1 + [12])
	$15 = *($7 + [2])
	$16 = *($7 + [1])
	$17 = *($7)
	$7 = CALL $47(($2 + [312]), $1)
	CALL $56($0, $7, ((int_64)$14 + (int_64)((int_64)((int_64)$13 + (int_64)((int_64)$11 * (int_64)$12)) + (int_64)((int_64)$10 * (int_64)$3))), [0])
	$3 = ((int_64)((int_64)$3 * (int_64)$16) + (int_64)((int_64)$12 * (int_64)$17))
	$6 = *($7 + [24])
	if ( ($6 == 0) ){ goto $label$6 }
	*(($7 + [28])) = $6
	CALL $10($6)
	
.LABEL $label$6
	$3 = ((int_64)$3 + (int_64)$15)
	$6 = *($7 + [12])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($7 + [16])) = $6
	CALL $10($6)
	
.LABEL $label$7
	$3 = ((int_64)$3 + (int_64)$13)
	if ( ((*($7) & [1]) == 0) ){ goto $label$8 }
	CALL $10(*($7 + [8]))
	
.LABEL $label$8
	$7 = CALL $47(($2 + [240]), (*($2 + [460]) + [128]))
	CALL $56($0, $7, $3, [0])
	$6 = *($7 + [24])
	if ( ($6 == 0) ){ goto $label$9 }
	*(($7 + [28])) = $6
	CALL $10($6)
	
.LABEL $label$9
	$6 = *($7 + [12])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $6
	CALL $10($6)
	
.LABEL $label$10
	if ( ((*($7) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*($7 + [8]))
	
.LABEL $label$11
	$6 = CALL $47(($2 + [168]), $1)
	$12 = (int_64)0
	$8 = *([0] + [8496])
	$7 = *([0] + [8500])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$12 }
	$13 = (CASTING uint_64)(uint_32 ((int_32)($7 - $8) / (int_32)[48]))
	$7 = *($6 + [12])
	$3 = (int_64)0
	$12 = (int_64)0
	
.LOOP $label$13:
	$12 = ((int_64)$12 + (int_64)*($7))
	$7 = ($7 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	if ( (uint_64)($3 <= $13) ){ goto $label$13 }
	
.LABEL $label$12
	$7 = *($6 + [24])
	if ( ($7 == 0) ){ goto $label$14 }
	*(($6 + [28])) = $7
	CALL $10($7)
	
.LABEL $label$14
	$7 = *($6 + [12])
	if ( ($7 == 0) ){ goto $label$15 }
	*(($6 + [16])) = $7
	CALL $10($7)
	
.LABEL $label$15
	if ( ((*($6) & [1]) == 0) ){ goto $label$16 }
	CALL $10(*($6 + [8]))
	
.LABEL $label$16
	$6 = CALL $47(($2 + [96]), (*($2 + [460]) + [128]))
	$3 = (int_64)0
	$8 = *([0] + [8496])
	$7 = *([0] + [8500])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$17 }
	$10 = (CASTING uint_64)(uint_32 ((int_32)($7 - $8) / (int_32)[48]))
	$7 = *($6 + [12])
	$13 = (int_64)0
	$3 = (int_64)0
	
.LOOP $label$18:
	$3 = ((int_64)$3 + (int_64)*($7))
	$7 = ($7 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	if ( (uint_64)($13 <= $10) ){ goto $label$18 }
	
.LABEL $label$17
	$7 = *($6 + [24])
	if ( ($7 == 0) ){ goto $label$19 }
	*(($6 + [28])) = $7
	CALL $10($7)
	
.LABEL $label$19
	$7 = *($6 + [12])
	if ( ($7 == 0) ){ goto $label$20 }
	*(($6 + [16])) = $7
	CALL $10($7)
	
.LABEL $label$20
	if ( ((*($6) & [1]) == 0) ){ goto $label$21 }
	CALL $10(*($6 + [8]))
	
.LABEL $label$21
	$7 = (int_64)($12 == 0)
	if ( $7 ){ goto $label$33 }
	$12 = (int_64)0
	if ( ((int_64)$3 != (int_64)0) ){ goto $label$33 }
	$8 = CALL $47(($2 + [24]), $1)
	$6 = *([0] + [8496])
	$5 = *([0] + [8500])
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$34 }
	$7 = ($6 + [12])
	$13 = (CASTING uint_64)(uint_32 ((int_32)($5 - $6) / (int_32)[48]))
	$6 = *($8 + [12])
	$3 = (int_64)0
	$12 = (int_64)0
	
.LOOP $label$35:
	$12 = ((int_64)((int_64)*($7) * (int_64)*($6)) + (int_64)$12)
	$6 = ($6 + [1])
	$7 = ($7 + [48])
	$3 = ((int_64)$3 + (int_64)1)
	if ( (uint_64)($3 <= $13) ){ goto $label$35 }
	
.LABEL $label$34
	$7 = *($8 + [24])
	if ( ($7 == 0) ){ goto $label$36 }
	*(($8 + [28])) = $7
	CALL $10($7)
	
.LABEL $label$36
	$7 = *($8 + [12])
	if ( ($7 == 0) ){ goto $label$37 }
	*(($8 + [16])) = $7
	CALL $10($7)
	
.LABEL $label$37
	if ( ((*($8) & [1]) == 0) ){ goto $label$38 }
	CALL $10(*($8 + [8]))
	
.LABEL $label$38
	$18 = (float_64)1
	$7 = *(*($2 + [460]) + [100])
	$3 = ((int_64)((int_64)*($7 + [8]) + (int_64)*($7)) + (int_64)*($7 + [16]))
	if ( ((uint_64)$12 >= (uint_64)$3) ){ goto $label$39 }
	$18 = ((float_64)(CASTING float_64)(uint_64 $12) / (float_64)(CASTING float_64)(uint_64 $3))
	
.LABEL $label$39
	*($2 + [16]) = $18
	$3 = *($1 + [36])
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$31 }
	
.LOOP $label$40:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$3) ){ goto $label$32 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$40 }
	goto $label$31 
	
.LABEL $label$33
	$19 = ($1 + [36])
	if ( $7 ){ goto $label$29 }
	if ( (int_64)($3 == 0) ){ goto $label$29 }
	$3 = *($19)
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$27 }
	
.LOOP $label$41:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$3) ){ goto $label$28 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$41 }
	goto $label$27 
	
.LABEL $label$32
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$31 }
	if ( ((int_32)*($8 + [224]) == (int_32)$4) ){ goto $label$30 }
	CALL eosio_assert([0], [9596])
	goto $label$30 
	
.LABEL $label$31
	$8 = [0]
	$7 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)-4426587238800818176, $3)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$30 }
	$8 = CALL $40($4, $7)
	if ( ((int_32)*($8 + [224]) == (int_32)$4) ){ goto $label$30 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$30
	$3 = *($0)
	*($2) = $1
	*($2 + [4]) = ($2 + [16])
	*($2 + [8]) = ($2 + [456])
	if ( $8 ){ goto $label$42 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$42
	CALL $57($4, $8, $3, $2)
	$3 = *($0)
	$7 = *($2 + [460])
	*($2 + [4]) = ($2 + [456])
	*($2) = ($2 + [16])
	if ( $7 ){ goto $label$43 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$43
	$19 = ($1 + [36])
	CALL $58($4, $7, $3, $2)
	
.LABEL $label$29
	CALL $55($0, *($19))
	$7 = *($9 + [24])
	if ( ($7 == 0) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$28
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$27 }
	if ( ((int_32)*($8 + [224]) == (int_32)$4) ){ goto $label$26 }
	CALL eosio_assert([0], [9596])
	$3 = *($0)
	*($2) = $1
	if ( $8 ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$27
	$8 = [0]
	$7 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)-4426587238800818176, $3)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$26 }
	$8 = CALL $40($4, $7)
	if ( ((int_32)*($8 + [224]) == (int_32)$4) ){ goto $label$26 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$26
	$3 = *($0)
	*($2) = $1
	if ( $8 ){ goto $label$24 }
	
.LABEL $label$25
	CALL eosio_assert([0], [9679])
	
.LABEL $label$24
	CALL $59($4, $8, $3, $2)
	CALL $55($0, *($19))
	$7 = *($9 + [24])
	if ( ($7 == 0) ){ goto $label$22 }
	
.LABEL $label$23
	*(($9 + [28])) = $7
	CALL $10($7)
	
.LABEL $label$22
	$7 = *(($9 + [12]))
	if ( ($7 == 0) ){ goto $label$44 }
	*(($9 + [16])) = $7
	CALL $10($7)
	
.LABEL $label$44
	if ( ((*($2 + [384]) & [1]) == 0) ){ goto $label$45 }
	CALL $10(*($9 + [8]))
	
.LABEL $label$45
	$global$0 = ($2 + [464])
}

void .FUNC $0 ()
{
	CALL $4()
	CALL $208()
}

void .FUNC $43 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *($3)
	CALL prints([9870])
	CALL printui(*($7))
	*(($3 = (*($1 + [88]) + (*(*($3)) << [1]))) + [1]) = (*($3 + [1]) + [1])
	$3 = *($1 + [200])
	$9 = ($3 + [32])
	$8 = ($1 + [204])
	$7 = (*($8) - $9)
	$10 = int_32($7 >> [5])
	if ( ($7 == 0) ){ goto $label$3 }
	CALL memmove($3, $9, $7)
	
.LABEL $label$3
	*($8) = ($3 + ($10 << [5]))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$4
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [32]) = $1
	$8 = ($1 + [8])
	*($5 + [36]) = $8
	$10 = ($1 + [16])
	*($5 + [40]) = $10
	$9 = ($1 + [24])
	*($5 + [44]) = $9
	$11 = ($1 + [36])
	*($5 + [48]) = $11
	$12 = ($1 + [38])
	*($5 + [52]) = $12
	$13 = ($1 + [40])
	*($5 + [56]) = $13
	$14 = ($1 + [42])
	*($5 + [60]) = $14
	$15 = ($1 + [44])
	*($5 + [64]) = $15
	$16 = ($1 + [56])
	*($5 + [68]) = $16
	$17 = ($1 + [64])
	*($5 + [72]) = $17
	$18 = ($1 + [72])
	*($5 + [76]) = $18
	$19 = ($1 + [80])
	*($5 + [80]) = $19
	$20 = ($1 + [88])
	*($5 + [84]) = $20
	$21 = ($1 + [100])
	*($5 + [88]) = $21
	$22 = ($1 + [112])
	*($5 + [92]) = $22
	$23 = ($1 + [128])
	*($5 + [96]) = $23
	$24 = ($1 + [200])
	*($5 + [100]) = $24
	$25 = ($1 + [212])
	*($5 + [104]) = $25
	CALL $186(($5 + [32]), ($5 + [8]))
	$7 = *($5 + [24])
	if ( ($7 <= [513]) ){ goto $label$6 }
	$3 = CALL $1($7)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$5
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $7)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $8
	*($5 + [40]) = $10
	*($5 + [44]) = $9
	*($5 + [48]) = $11
	*($5 + [52]) = $12
	*($5 + [56]) = $13
	*($5 + [60]) = $14
	*($5 + [64]) = $15
	*($5 + [68]) = $16
	*($5 + [72]) = $17
	*($5 + [76]) = $18
	*($5 + [80]) = $19
	*($5 + [84]) = $20
	*($5 + [88]) = $21
	*($5 + [92]) = $22
	*($5 + [96]) = $23
	*($5 + [100]) = $24
	*($5 + [104]) = $25
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $3, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $3($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [112])
}

void .FUNC $42 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = ($0 + [32])
	$5 = *(($0 + [60]))
	$4 = *(($0 + [56]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [224]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)-4426587238800818176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $40($3, $6)
	if ( ((int_32)*($7 + [224]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	CALL eosio_assert(*($7 + [36]), [8557])
	$6 = *($7 + [200])
	if ( ((int_32)$6 == (int_32)*(($7 + [204]))) ){ goto $label$5 }
	*((($2 + [16]) + [24])) = *(($6 + [24]))
	$1 = *(($6 + [8]))
	*((($2 + [16]) + [8])) = $1
	$8 = *(($6 + [16]))
	*((($2 + [16]) + [16])) = $8
	*($2 + [16]) = *($6)
	$1 = ((int_64)$1 + (int_64)$8)
	$8 = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	if ( ($7 == 0) ){ goto $label$6 }
	if ( ((uint_64)$1 > (uint_64)$8) ){ goto $label$5 }
	$5 = (($2 + [16]) + [16])
	$4 = (($2 + [16]) + [8])
	$9 = ($7 + [204])
	$10 = ($7 + [200])
	
.LOOP $label$7:
	if ( ((uint_32)*($2 + [16]) > (uint_32)[9]) ){ goto $label$8 }
	CALL prints([8640])
	CALL printui(*($2 + [16]))
	CALL prints([8670])
	if ( ((uint_64)((int_64)*($4) + (int_64)*($5)) > (uint_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$8 }
	$1 = *($0)
	*($2 + [8]) = ($2 + [16])
	CALL $43($3, $7, $1, ($2 + [8]))
	
.LABEL $label$8
	$6 = *($10)
	if ( ((int_32)$6 == (int_32)*($9)) ){ goto $label$5 }
	*((($2 + [16]) + [24])) = *(($6 + [24]))
	$1 = *(($6 + [8]))
	*($4) = $1
	$8 = *(($6 + [16]))
	*($5) = $8
	*($2 + [16]) = *($6)
	if ( ((uint_64)((int_64)$1 + (int_64)$8) <= (uint_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((uint_64)$1 > (uint_64)$8) ){ goto $label$5 }
	$5 = (($2 + [16]) + [16])
	$4 = (($2 + [16]) + [8])
	$9 = ($7 + [204])
	$10 = ($7 + [200])
	
.LOOP $label$9:
	if ( ((uint_32)*($2 + [16]) > (uint_32)[9]) ){ goto $label$10 }
	CALL prints([8640])
	CALL printui(*($2 + [16]))
	CALL prints([8670])
	if ( ((uint_64)((int_64)*($4) + (int_64)*($5)) > (uint_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$10 }
	$1 = *($0)
	*($2 + [8]) = ($2 + [16])
	CALL eosio_assert([0], [9679])
	CALL $43($3, $7, $1, ($2 + [8]))
	
.LABEL $label$10
	$6 = *($10)
	if ( ((int_32)$6 == (int_32)*($9)) ){ goto $label$5 }
	*((($2 + [16]) + [24])) = *(($6 + [24]))
	$1 = *(($6 + [8]))
	*($4) = $1
	$8 = *(($6 + [16]))
	*($5) = $8
	*($2 + [16]) = *($6)
	if ( ((uint_64)((int_64)$1 + (int_64)$8) <= (uint_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$9 }
	
.LABEL $label$5
	$global$0 = ($2 + [48])
}

void .FUNC $41 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = *($1)
	if ( ((int_32)*([0] + [8512]) == (int_32)*([0] + [8508])) ){ goto $label$3 }
	$7 = *($3)
	$8 = ($1 + [100])
	$9 = ($3 + [4])
	$10 = ($3 + [8])
	$11 = [0]
	$3 = [0]
	
.LOOP $label$4:
	$12 = ((int_64)(CASTING uint_64)(uint_32 $3) & (int_64)65535)
	$11 = ($11 << [3])
	if ( ((uint_64)*((*($8) + $11)) >= (uint_64)CALL $124($7, *(*($9)), $12)) ){ goto $label$5 }
	$13 = CALL $125($7, *(*($9)), $12)
	$13 = ((int_64)*($14) + (int_64)((int_64)$13 * (int_64)*(*($10))))
	*(($14 = (*($8) + $11))) = $13
	if ( ((uint_64)$13 <= (uint_64)CALL $124($7, *(*($9)), $12)) ){ goto $label$5 }
	$12 = CALL $124($7, *(*($9)), $12)
	*((*($8) + $11)) = $12
	
.LABEL $label$5
	$3 = ($3 + [1])
	$11 = ($3 & [65535])
	if ( ((uint_32)int_32((*([0] + [8512]) - *([0] + [8508])) >> [2]) > (uint_32)$11) ){ goto $label$4 }
	
.LABEL $label$3
	$12 = CALL current_time()
	*(*($1 + [24])) = ((int_64)((uint_64)$12 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$6
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [32]) = $1
	$9 = ($1 + [8])
	*($5 + [36]) = $9
	$11 = ($1 + [16])
	*($5 + [40]) = $11
	$8 = ($1 + [24])
	*($5 + [44]) = $8
	$14 = ($1 + [36])
	*($5 + [48]) = $14
	$10 = ($1 + [38])
	*($5 + [52]) = $10
	$15 = ($1 + [40])
	*($5 + [56]) = $15
	$16 = ($1 + [42])
	*($5 + [60]) = $16
	$17 = ($1 + [44])
	*($5 + [64]) = $17
	$18 = ($1 + [56])
	*($5 + [68]) = $18
	$19 = ($1 + [64])
	*($5 + [72]) = $19
	$20 = ($1 + [72])
	*($5 + [76]) = $20
	$21 = ($1 + [80])
	*($5 + [80]) = $21
	$22 = ($1 + [88])
	*($5 + [84]) = $22
	$23 = ($1 + [100])
	*($5 + [88]) = $23
	$24 = ($1 + [112])
	*($5 + [92]) = $24
	$25 = ($1 + [128])
	*($5 + [96]) = $25
	$26 = ($1 + [200])
	*($5 + [100]) = $26
	$27 = ($1 + [212])
	*($5 + [104]) = $27
	CALL $186(($5 + [32]), ($5 + [8]))
	$7 = *($5 + [24])
	if ( ($7 <= [513]) ){ goto $label$8 }
	$3 = CALL $1($7)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$7
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $7)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $9
	*($5 + [40]) = $11
	*($5 + [44]) = $8
	*($5 + [48]) = $14
	*($5 + [52]) = $10
	*($5 + [56]) = $15
	*($5 + [60]) = $16
	*($5 + [64]) = $17
	*($5 + [68]) = $18
	*($5 + [72]) = $19
	*($5 + [76]) = $20
	*($5 + [80]) = $21
	*($5 + [84]) = $22
	*($5 + [88]) = $23
	*($5 + [92]) = $24
	*($5 + [96]) = $25
	*($5 + [100]) = $26
	*($5 + [104]) = $27
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $3, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $3($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$9
	$global$0 = ($5 + [112])
}

int_32 .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [112])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9647])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([240])) + [32]) = [0]
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [44 align=4]) = (int_64)0
	*($5 + [52]) = [0]
	*($5 + [80]) = (int_64)0
	*($5 + [88 align=4]) = (int_64)0
	*($5 + [96 align=4]) = (int_64)0
	*($5 + [104 align=4]) = (int_64)0
	*($5 + [112 align=4]) = (int_64)0
	*($5 + [120]) = [0]
	*($5 + [128 align=4]) = (int_64)0
	*($5 + [136 align=4]) = (int_64)0
	*($5 + [144 align=4]) = (int_64)0
	*($5 + [152 align=4]) = (int_64)0
	*($5 + [160]) = [0]
	*($5 + [200 align=4]) = (int_64)0
	*($5 + [208]) = [0]
	*($5 + [220]) = [0]
	*($5 + [212 align=4]) = (int_64)0
	*($5 + [224]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [36])
	*($3 + [52]) = ($5 + [38])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [42])
	*($3 + [64]) = ($5 + [44])
	*($3 + [68]) = ($5 + [56])
	*($3 + [72]) = ($5 + [64])
	*($3 + [76]) = ($5 + [72])
	*($3 + [80]) = ($5 + [80])
	*($3 + [84]) = ($5 + [88])
	*($3 + [88]) = ($5 + [100])
	*($3 + [92]) = ($5 + [112])
	*($3 + [96]) = ($5 + [128])
	*($3 + [100]) = ($5 + [200])
	*($3 + [104]) = ($5 + [212])
	CALL $171(($3 + [32]), ($3 + [24]))
	*($5 + [228]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $122(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $123($1)
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [112])
	return $5
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	CALL $23($0, $1)
	*($0 + [12 align=4]) = (int_64)0
	*(($0 + [20])) = [0]
	$2 = (*(($1 + [16])) - *($1 + [12]))
	if ( ($2 == 0) ){ goto $label$3 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$2 }
	$3 = CALL $8($2)
	*(($0 + [12])) = $3
	*(($0 + [20])) = ($3 + $2)
	*(($2 = ($0 + [16]))) = $3
	$4 = *(($1 + [12]))
	$5 = (*(($1 + [16])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($3, $4, $5)
	*($2) = (*($2) + $5)
	
.LABEL $label$3
	*($0 + [24 align=4]) = (int_64)0
	*(($0 + [32])) = [0]
	$2 = (*(($1 + [28])) - *($1 + [24]))
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$1 }
	$3 = CALL $8($2)
	*(($0 + [24])) = $3
	*(($0 + [32])) = ($3 + $2)
	*(($2 = ($0 + [28]))) = $3
	$4 = *(($1 + [24]))
	$5 = (*(($1 + [28])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($3, $4, $5)
	*($2) = (*($2) + $5)
	
.LABEL $label$4
	*($0 + [36 align=4]) = *($1 + [36 align=4])
	*(($0 + [57])) = *(($1 + [57]))
	*(($0 + [52])) = *(($1 + [52]))
	*(($0 + [44])) = *(($1 + [44]))
	return $0
	
.LABEL $label$2
	CALL $31(($0 + [12]))
	
.LABEL $label$1
	CALL $31(($0 + [24]))
	(unreachable)
	return (unreachable)
}

void .FUNC $46 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_64 $18
	$2 = ($global$0 - [416])
	$global$0 = $2
	$3 = ($0 + [32])
	$5 = *(($0 + [60]))
	$4 = *(($0 + [56]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [224]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)-4426587238800818176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $40($3, $6)
	if ( ((int_32)*($7 + [224]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	CALL eosio_assert(*($7 + [36]), [8557])
	$6 = *($7 + [112])
	$5 = *(($7 + [116]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	*($2 + [408]) = [0]
	$8 = (int_64)0
	*($2 + [400]) = (int_64)0
	*($2 + [8]) = (int_64)0
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$7 }
	$9 = (($2 + [400]) + [8])
	$10 = ($7 + [112])
	$11 = ($7 + [116])
	$12 = (($2 + [328]) + [24])
	$13 = (($2 + [328]) + [12])
	$14 = (($2 + [328]) + [16])
	$15 = (($2 + [328]) + [28])
	$5 = [0]
	
.LOOP $label$8:
	$16 = *([0] + [8496])
	$4 = *([0] + [8500])
	if ( ((int_32)$4 == (int_32)$16) ){ goto $label$10 }
	$17 = (CASTING uint_64)(uint_32 ((int_32)($4 - $16) / (int_32)[48]))
	$5 = ($6 + ((int_32)$5 * (int_32)[72]))
	$6 = *($5 + [12])
	$18 = (int_64)0
	$1 = (int_64)0
	
.LOOP $label$11:
	$1 = ((int_64)$1 + (int_64)*($6))
	$6 = ($6 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	if ( (uint_64)($18 <= $17) ){ goto $label$11 }
	if ( (int_64)($1 == 0) ){ goto $label$10 }
	if ( ((uint_64)((int_64)*($5 + [56]) + (int_64)*($5 + [48])) > (uint_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$9 }
	$5 = (*($10) + ((int_32)*($2 + [8]) * (int_32)[72]))
	$6 = (*($5 + [64]) + [-1])
	if ( ((uint_32)$6 > (uint_32)[4]) ){ goto $label$9 }
	goto $label$12 
	
.LABEL $label$16
	CALL $48($0, CALL $47(($2 + [256]), $5))
	$6 = *((($2 + [256]) + [24]))
	if ( ($6 == 0) ){ goto $label$17 }
	*((($2 + [256]) + [28])) = $6
	CALL $10($6)
	
.LABEL $label$17
	$6 = *((($2 + [256]) + [12]))
	if ( ($6 == 0) ){ goto $label$18 }
	*((($2 + [256]) + [16])) = $6
	CALL $10($6)
	
.LABEL $label$18
	if ( ((*($2 + [256]) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*((($2 + [256]) + [8])))
	goto $label$9 
	
.LABEL $label$15
	CALL $49($0, CALL $47(($2 + [184]), $5))
	$6 = *((($2 + [184]) + [24]))
	if ( ($6 == 0) ){ goto $label$19 }
	*((($2 + [184]) + [28])) = $6
	CALL $10($6)
	
.LABEL $label$19
	$6 = *((($2 + [184]) + [12]))
	if ( ($6 == 0) ){ goto $label$20 }
	*((($2 + [184]) + [16])) = $6
	CALL $10($6)
	
.LABEL $label$20
	if ( ((*($2 + [184]) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*((($2 + [184]) + [8])))
	goto $label$9 
	
.LABEL $label$14
	CALL $50($0, CALL $47(($2 + [112]), $5), [0])
	$6 = *((($2 + [112]) + [24]))
	if ( ($6 == 0) ){ goto $label$21 }
	*((($2 + [112]) + [28])) = $6
	CALL $10($6)
	
.LABEL $label$21
	$6 = *((($2 + [112]) + [12]))
	if ( ($6 == 0) ){ goto $label$22 }
	*((($2 + [112]) + [16])) = $6
	CALL $10($6)
	
.LABEL $label$22
	if ( ((*($2 + [112]) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*((($2 + [112]) + [8])))
	goto $label$9 
	
.LABEL $label$13
	CALL $51($0, CALL $47(($2 + [40]), $5))
	$6 = *((($2 + [40]) + [24]))
	if ( ($6 == 0) ){ goto $label$23 }
	*((($2 + [40]) + [28])) = $6
	CALL $10($6)
	
.LABEL $label$23
	$6 = *((($2 + [40]) + [12]))
	if ( ($6 == 0) ){ goto $label$24 }
	*((($2 + [40]) + [16])) = $6
	CALL $10($6)
	
.LABEL $label$24
	if ( ((*($2 + [40]) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*((($2 + [40]) + [8])))
	goto $label$9 
	
.LABEL $label$12
	CALL $50($0, CALL $47(($2 + [328]), $5), [1])
	$6 = *($12)
	if ( ($6 == 0) ){ goto $label$25 }
	*($15) = $6
	CALL $10($6)
	
.LABEL $label$25
	$6 = *($13)
	if ( ($6 == 0) ){ goto $label$26 }
	*($14) = $6
	CALL $10($6)
	
.LABEL $label$26
	if ( ((*($2 + [328]) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*((($2 + [328]) + [8])))
	goto $label$9 
	
.LABEL $label$10
	$6 = *($2 + [404])
	if ( ((int_32)$6 == (int_32)*($9)) ){ goto $label$27 }
	*($6) = $8
	*($2 + [404]) = ($6 + [8])
	goto $label$9 
	
.LABEL $label$27
	CALL $52(($2 + [400]), ($2 + [8]))
	
.LABEL $label$9
	$8 = ((int_64)*($2 + [8]) + (int_64)1)
	*($2 + [8]) = $8
	$5 = (CASTING uint_32)(uint_64 $8)
	$6 = *($10)
	if ( ((int_32)($6 + ((int_32)$5 * (int_32)[72])) != (int_32)*($11)) ){ goto $label$8 }
	$6 = *($2 + [400])
	$5 = *($2 + [404])
	goto $label$6 
	
.LABEL $label$7
	$6 = [0]
	$5 = [0]
	
.LABEL $label$6
	*($2 + [32]) = (int_64)0
	*($2 + [24]) = (int_64)0
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$28 }
	if ( ($7 == 0) ){ goto $label$29 }
	$5 = ($2 + [16])
	
.LOOP $label$30:
	$1 = *($0)
	*($5) = ($2 + [32])
	*($2 + [12]) = ($2 + [24])
	*($2 + [8]) = ($2 + [400])
	CALL $53($3, $7, $1, ($2 + [8]))
	$1 = ((int_64)*($2 + [24]) + (int_64)1)
	*($2 + [24]) = $1
	$6 = *($2 + [400])
	if ( (uint_64)($1 <= (CASTING uint_64)(uint_32 int_32((*($2 + [404]) - $6) >> [3]))) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$29
	$5 = ($2 + [16])
	
.LOOP $label$31:
	$1 = *($0)
	*($5) = ($2 + [32])
	*($2 + [12]) = ($2 + [24])
	*($2 + [8]) = ($2 + [400])
	CALL eosio_assert([0], [9679])
	CALL $53($3, $7, $1, ($2 + [8]))
	$1 = ((int_64)*($2 + [24]) + (int_64)1)
	*($2 + [24]) = $1
	$6 = *($2 + [400])
	if ( (uint_64)($1 <= (CASTING uint_64)(uint_32 int_32((*($2 + [404]) - $6) >> [3]))) ){ goto $label$31 }
	
.LABEL $label$28
	if ( ($6 == 0) ){ goto $label$5 }
	*($2 + [404]) = $6
	CALL $10($6)
	
.LABEL $label$5
	$global$0 = ($2 + [416])
	$6
}

void .FUNC $45 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = *($1)
	*(($7 = (*(($1 + [140])) + *(($3 = *($3)))))) = (*($7) + *(($3 + [24])))
	$3 = *($1 + [212])
	$9 = ($3 + [32])
	$8 = ($1 + [216])
	$7 = (*($8) - $9)
	$10 = int_32($7 >> [5])
	if ( ($7 == 0) ){ goto $label$3 }
	CALL memmove($3, $9, $7)
	
.LABEL $label$3
	*($8) = ($3 + ($10 << [5]))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$4
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [32]) = $1
	$8 = ($1 + [8])
	*($5 + [36]) = $8
	$10 = ($1 + [16])
	*($5 + [40]) = $10
	$9 = ($1 + [24])
	*($5 + [44]) = $9
	$11 = ($1 + [36])
	*($5 + [48]) = $11
	$12 = ($1 + [38])
	*($5 + [52]) = $12
	$13 = ($1 + [40])
	*($5 + [56]) = $13
	$14 = ($1 + [42])
	*($5 + [60]) = $14
	$15 = ($1 + [44])
	*($5 + [64]) = $15
	$16 = ($1 + [56])
	*($5 + [68]) = $16
	$17 = ($1 + [64])
	*($5 + [72]) = $17
	$18 = ($1 + [72])
	*($5 + [76]) = $18
	$19 = ($1 + [80])
	*($5 + [80]) = $19
	$20 = ($1 + [88])
	*($5 + [84]) = $20
	$21 = ($1 + [100])
	*($5 + [88]) = $21
	$22 = ($1 + [112])
	*($5 + [92]) = $22
	$23 = ($1 + [128])
	*($5 + [96]) = $23
	$24 = ($1 + [200])
	*($5 + [100]) = $24
	$25 = ($1 + [212])
	*($5 + [104]) = $25
	CALL $186(($5 + [32]), ($5 + [8]))
	$7 = *($5 + [24])
	if ( ($7 <= [513]) ){ goto $label$6 }
	$3 = CALL $1($7)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$5
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $7)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $8
	*($5 + [40]) = $10
	*($5 + [44]) = $9
	*($5 + [48]) = $11
	*($5 + [52]) = $12
	*($5 + [56]) = $13
	*($5 + [60]) = $14
	*($5 + [64]) = $15
	*($5 + [68]) = $16
	*($5 + [72]) = $17
	*($5 + [76]) = $18
	*($5 + [80]) = $19
	*($5 + [84]) = $20
	*($5 + [88]) = $21
	*($5 + [92]) = $22
	*($5 + [96]) = $23
	*($5 + [100]) = $24
	*($5 + [104]) = $25
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $3, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $3($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [112])
}

void .FUNC $44 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = ($0 + [32])
	$5 = *(($0 + [60]))
	$4 = *(($0 + [56]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [224]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)-4426587238800818176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $40($3, $6)
	if ( ((int_32)*($7 + [224]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	CALL eosio_assert(*($7 + [36]), [8557])
	$6 = *($7 + [212])
	if ( ((int_32)$6 == (int_32)*(($7 + [216]))) ){ goto $label$5 }
	*((($2 + [16]) + [24])) = *(($6 + [24]))
	$1 = *(($6 + [8]))
	*((($2 + [16]) + [8])) = $1
	$8 = *(($6 + [16]))
	*((($2 + [16]) + [16])) = $8
	*($2 + [16]) = *($6)
	$1 = ((int_64)$1 + (int_64)$8)
	$8 = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	if ( ($7 == 0) ){ goto $label$6 }
	if ( ((uint_64)$1 > (uint_64)$8) ){ goto $label$5 }
	$5 = (($2 + [16]) + [16])
	$4 = (($2 + [16]) + [8])
	$9 = ($7 + [216])
	$10 = ($7 + [212])
	
.LOOP $label$7:
	if ( ((uint_32)*($2 + [16]) > (uint_32)[11]) ){ goto $label$8 }
	CALL prints([8674])
	CALL printui(*($2 + [16]))
	CALL prints([8670])
	if ( ((uint_64)((int_64)*($4) + (int_64)*($5)) > (uint_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$8 }
	$1 = *($0)
	*($2 + [8]) = ($2 + [16])
	CALL $45($3, $7, $1, ($2 + [8]))
	
.LABEL $label$8
	$6 = *($10)
	if ( ((int_32)$6 == (int_32)*($9)) ){ goto $label$5 }
	*((($2 + [16]) + [24])) = *(($6 + [24]))
	$1 = *(($6 + [8]))
	*($4) = $1
	$8 = *(($6 + [16]))
	*($5) = $8
	*($2 + [16]) = *($6)
	if ( ((uint_64)((int_64)$1 + (int_64)$8) <= (uint_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((uint_64)$1 > (uint_64)$8) ){ goto $label$5 }
	$5 = (($2 + [16]) + [16])
	$4 = (($2 + [16]) + [8])
	$9 = ($7 + [216])
	$10 = ($7 + [212])
	
.LOOP $label$9:
	if ( ((uint_32)*($2 + [16]) > (uint_32)[11]) ){ goto $label$10 }
	CALL prints([8674])
	CALL printui(*($2 + [16]))
	CALL prints([8670])
	if ( ((uint_64)((int_64)*($4) + (int_64)*($5)) > (uint_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$10 }
	$1 = *($0)
	*($2 + [8]) = ($2 + [16])
	CALL eosio_assert([0], [9679])
	CALL $45($3, $7, $1, ($2 + [8]))
	
.LABEL $label$10
	$6 = *($10)
	if ( ((int_32)$6 == (int_32)*($9)) ){ goto $label$5 }
	*((($2 + [16]) + [24])) = *(($6 + [24]))
	$1 = *(($6 + [8]))
	*($4) = $1
	$8 = *(($6 + [16]))
	*($5) = $8
	*($2 + [16]) = *($6)
	if ( ((uint_64)((int_64)$1 + (int_64)$8) <= (uint_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$9 }
	
.LABEL $label$5
	$global$0 = ($2 + [48])
}

int_32 .FUNC $167 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $169(CALL $170($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9590])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

int_32 .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [9590])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9590])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [9590])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9590])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [9590])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $165 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [224])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [216]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	CALL memcpy(($3 + [216]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$6
	CALL memcpy(($3 + [208]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$7
	CALL memcpy(($3 + [200]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$8
	CALL memcpy(($3 + [192]), $5, [8])
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$9
	CALL memcpy(($3 + [184]), $5, [8])
	$5 = ($2 + [40])
	if ( ((int_32)$6 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$10
	CALL memcpy(($3 + [176]), $5, [8])
	$5 = ($2 + [48])
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$11 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$11
	$4 = ($2 + $4)
	CALL memcpy(($3 + [168]), $5, [8])
	$5 = ($2 + [56])
	if ( ((int_32)$6 != (int_32)[56]) ){ goto $label$12 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$12
	CALL memcpy(($3 + [160]), $5, [8])
	*(($3 + [32])) = $4
	*(($3 + [48])) = $1
	*(($3 + [56])) = (int_64)-1
	*((($3 + [8]) + [56])) = (int_64)0
	*((($3 + [8]) + [64])) = [0]
	*(($3 + [88])) = $1
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [64])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36]) = [4]
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [128])) = $1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $110(($3 + [8]), *($3 + [216]), *($3 + [208]), *($3 + [200]), *($3 + [192]), *($3 + [184]), *($3 + [176]), *($3 + [168]), *($3 + [160]))
	CALL $139(($3 + [8]))
	$global$0 = ($3 + [224])
}

void .FUNC $164 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $1
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $1
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [28]) = [4]
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [120])) = $1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $73($3, *($3 + [152]))
	CALL $139($3)
	$global$0 = ($3 + [160])
}

void .FUNC $163 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [168]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $1
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $1
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36]) = [4]
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [128])) = $1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $75(($3 + [8]), *($3 + [168]), *($3 + [160]))
	CALL $139(($3 + [8]))
	$global$0 = ($3 + [176])
}

void .FUNC $162 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [184]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	CALL memcpy(($3 + [184]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$6
	CALL memcpy(($3 + [176]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$7
	CALL memcpy(($3 + [168]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$8
	$6 = ($2 + $4)
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [32])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$9
	CALL memcpy(($3 + [8]), $5, [1])
	$4 = *($3 + [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $1
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $1
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [33])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36]) = [4]
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [128])) = $1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $97(($3 + [8]), *($3 + [184]), *($3 + [176]), *($3 + [168]), *($3 + [160]), ((int_32)$4 != (int_32)[0]))
	CALL $139(($3 + [8]))
	$global$0 = ($3 + [192])
}

void .FUNC $161 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$7
	$6 = ($2 + $4)
	CALL memcpy(($3 + [152]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$4 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$8
	CALL memcpy($3, $5, [1])
	$4 = *($3)
	*(($3 + [24])) = $6
	*(($3 + [40])) = $1
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $1
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [25])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28]) = [4]
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [120])) = $1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $101($3, *($3 + [168]), *($3 + [160]), *($3 + [152]), ((int_32)$4 != (int_32)[0]))
	CALL $139($3)
	$global$0 = ($3 + [176])
}

void .FUNC $160 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [240])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [232]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	CALL memcpy(($3 + [232]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$6
	CALL memcpy(($3 + [224]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$7
	CALL memcpy(($3 + [216]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$8
	CALL memcpy(($3 + [208]), $5, [8])
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$9
	CALL memcpy(($3 + [200]), $5, [8])
	$5 = ($2 + [40])
	if ( ((int_32)$6 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$10
	CALL memcpy(($3 + [192]), $5, [8])
	$5 = ($2 + [48])
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$11 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$11
	CALL memcpy(($3 + [184]), $5, [8])
	$5 = ($2 + [56])
	if ( ((int_32)$6 != (int_32)[56]) ){ goto $label$12 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$12
	CALL memcpy(($3 + [176]), $5, [8])
	$5 = ($2 + [64])
	if ( ((int_32)$6 != (int_32)[64]) ){ goto $label$13 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$13
	$4 = ($2 + $4)
	CALL memcpy(($3 + [168]), $5, [8])
	$5 = ($2 + [72])
	if ( ((int_32)$6 != (int_32)[72]) ){ goto $label$14 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$14
	CALL memcpy(($3 + [160]), $5, [8])
	*(($3 + [32])) = $4
	*(($3 + [48])) = $1
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*((($3 + [8]) + [80])) = $1
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [80])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36]) = [4]
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [128])) = $1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $104(($3 + [8]), *($3 + [232]), *($3 + [224]), *($3 + [216]), *($3 + [208]), *($3 + [200]), *($3 + [192]), *($3 + [184]), *($3 + [176]), *($3 + [168]), *($3 + [160]))
	CALL $139(($3 + [8]))
	$global$0 = ($3 + [240])
}

int_32 .FUNC $169 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9590])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $168 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [9590])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $169($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

int_32 .FUNC $175 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [9670])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$3 = (CASTING uint_32)(uint_64 $4)
	$6 = *($1)
	$8 = *($1 + [4])
	$7 = ((int_32)($8 - $6) / (int_32)[72])
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$5 }
	CALL $181($1, ($3 - $7))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$7 <= (uint_32)$3) ){ goto $label$6 }
	$7 = ($6 + ((int_32)$3 * (int_32)[72]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = *(($8 + [-48]))
	if ( ($3 == 0) ){ goto $label$9 }
	*(($8 + [-44])) = $3
	CALL $10($3)
	
.LABEL $label$9
	$3 = *(($8 + [-60]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($8 + [-56])) = $3
	CALL $10($3)
	
.LABEL $label$10
	$3 = ($8 + [-72])
	if ( ((*(($8 + [-72])) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($8 + [-64])))
	
.LABEL $label$11
	$8 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$8 }
	
.LABEL $label$7
	*(($1 + [4])) = $7
	$8 = $7
	
.LABEL $label$6
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = ($2 + [24])
	$6 = ($2 + [32])
	$5 = ($2 + [36])
	$1 = ($2 + [44])
	
.LOOP $label$12:
	*($2 + [8]) = $0
	*($2 + [16]) = $3
	*($7) = ($3 + [24])
	*((($2 + [16]) + [12])) = ($3 + [36])
	*($6) = ($3 + [40])
	*($5) = ($3 + [48])
	*((($2 + [16]) + [24])) = ($3 + [56])
	*($1) = ($3 + [64])
	*($2 + [20]) = ($3 + [12])
	CALL $176(($2 + [16]), ($2 + [8]))
	$3 = ($3 + [72])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$12 }
	
.LABEL $label$3
	$global$0 = ($2 + [48])
	return $0
}

void .FUNC $58 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	float_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	float_64 $26
	int_64 $27
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *(*($3))
	if ( ((float_64)$7 != (float_64)(float_64)1) ){ goto $label$5 }
	*(($3 = *($1 + [100]))) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [16]) = (int_64)0
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$3 = *(*(*(($3 + [4])) + [4]) + [100])
	$8 = *($1 + [100])
	$26 = (float_64)
	if ( (((float_64)$26((CASTING float_64)(uint_64 *($8)) - ((float_64)$7 * (float_64)(CASTING float_64)(uint_64 *($3))))) < (float_64)(float_64)18446744073709551615) & ((float_64)$26 >= (float_64)(float_64)0)) ){ goto $label$7 }
	$27 = (int_64)0
	goto $label$6 
	
.LABEL $label$7
	$27 = (Rounds 0)($26)
	
.LABEL $label$6
	*($8) = $27
	$26 = (float_64)
	if ( (((float_64)$26((CASTING float_64)(uint_64 *($8 + [8])) - ((float_64)$7 * (float_64)(CASTING float_64)(uint_64 *($3 + [8]))))) < (float_64)(float_64)18446744073709551615) & ((float_64)$26 >= (float_64)(float_64)0)) ){ goto $label$9 }
	$27 = (int_64)0
	goto $label$8 
	
.LABEL $label$9
	$27 = (Rounds 0)($26)
	
.LABEL $label$8
	*($8 + [8]) = $27
	$7 = (float_64)
	if ( (((float_64)$7((CASTING float_64)(uint_64 *($8 + [16])) - ((float_64)$7 * (float_64)(CASTING float_64)(uint_64 *($3 + [16]))))) < (float_64)(float_64)18446744073709551615) & ((float_64)$7 >= (float_64)(float_64)0)) ){ goto $label$10 }
	*($8 + [16]) = (int_64)0
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$10
	*($8 + [16]) = (Rounds 0)($7)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [9811])
	
.LABEL $label$3
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [32]) = $1
	$8 = ($1 + [8])
	*($5 + [36]) = $8
	$9 = ($1 + [16])
	*($5 + [40]) = $9
	$10 = ($1 + [24])
	*($5 + [44]) = $10
	$11 = ($1 + [36])
	*($5 + [48]) = $11
	$12 = ($1 + [38])
	*($5 + [52]) = $12
	$13 = ($1 + [40])
	*($5 + [56]) = $13
	$14 = ($1 + [42])
	*($5 + [60]) = $14
	$15 = ($1 + [44])
	*($5 + [64]) = $15
	$16 = ($1 + [56])
	*($5 + [68]) = $16
	$17 = ($1 + [64])
	*($5 + [72]) = $17
	$18 = ($1 + [72])
	*($5 + [76]) = $18
	$19 = ($1 + [80])
	*($5 + [80]) = $19
	$20 = ($1 + [88])
	*($5 + [84]) = $20
	$21 = ($1 + [100])
	*($5 + [88]) = $21
	$22 = ($1 + [112])
	*($5 + [92]) = $22
	$23 = ($1 + [128])
	*($5 + [96]) = $23
	$24 = ($1 + [200])
	*($5 + [100]) = $24
	$25 = ($1 + [212])
	*($5 + [104]) = $25
	CALL $186(($5 + [32]), ($5 + [8]))
	$3 = *($5 + [24])
	if ( ($3 <= [513]) ){ goto $label$12 }
	$4 = CALL $1($3)
	goto $label$11 
	
.LABEL $label$12
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$11
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $8
	*($5 + [40]) = $9
	*($5 + [44]) = $10
	*($5 + [48]) = $11
	*($5 + [52]) = $12
	*($5 + [56]) = $13
	*($5 + [60]) = $14
	*($5 + [64]) = $15
	*($5 + [68]) = $16
	*($5 + [72]) = $17
	*($5 + [76]) = $18
	*($5 + [80]) = $19
	*($5 + [84]) = $20
	*($5 + [88]) = $21
	*($5 + [92]) = $22
	*($5 + [96]) = $23
	*($5 + [100]) = $24
	*($5 + [104]) = $25
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $3($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$13
	$global$0 = ($5 + [112])
}

void .FUNC $59 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = ($1 + [112])
	$7 = *($1)
	$9 = *($1 + [112])
	$8 = ($1 + [116])
	if ( ((int_32)*($8) == (int_32)$9) ){ goto $label$3 }
	$10 = (int_64)0
	
.LOOP $label$4:
	$18 = ($13 & [1])
	$13 = *($17)
	$17 = *($3)
	$15 = ($13 & [1])
	$13 = *($12)
	$14 = uint_32($13 >> [1])
	$11 = ((int_32)(CASTING uint_32)(uint_64 $10) * (int_32)[72])
	$12 = ($9 + $11)
	$16 = ( *($12 + [4]) ? $14 : $15 )
	if ( ((int_32)$16 != (int_32)( *($17 + [4]) ? uint_32($13 >> [1]) : $18 )) ){ goto $label$5 }
	$13 = ($12 + [1])
	$17 = ( *($17 + [8]) ? ($17 + [1]) : $18 )
	if ( $15 ){ goto $label$7 }
	if ( ($16 == 0) ){ goto $label$6 }
	$12 = ([0] - $14)
	
.LOOP $label$8:
	if ( ((int_32)*($13) != (int_32)*($17)) ){ goto $label$5 }
	$17 = ($17 + [1])
	$13 = ($13 + [1])
	$12 = ($12 + [1])
	if ( $12 ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ($16 == 0) ){ goto $label$6 }
	if ( (CALL $17(( *($12 + [8]) ? $13 : $15 ), $17, $16) == 0) ){ goto $label$9 }
	$9 = *($6)
	goto $label$5 
	
.LABEL $label$9
	$9 = *($6)
	
.LABEL $label$6
	*(($9 + $11) + [64]) = [1]
	
.LABEL $label$5
	$10 = ((int_64)$10 + (int_64)1)
	if ( (uint_64)($10 <= (CASTING uint_64)(uint_32 ((int_32)(*($8) - $9) / (int_32)[72]))) ){ goto $label$4 }
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$3
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [92]) = $6
	*($5 + [32]) = $1
	$12 = ($1 + [8])
	*($5 + [36]) = $12
	$9 = ($1 + [16])
	*($5 + [40]) = $9
	$15 = ($1 + [24])
	*($5 + [44]) = $15
	$16 = ($1 + [36])
	*($5 + [48]) = $16
	$18 = ($1 + [38])
	*($5 + [52]) = $18
	$11 = ($1 + [40])
	*($5 + [56]) = $11
	$14 = ($1 + [42])
	*($5 + [60]) = $14
	$3 = ($1 + [44])
	*($5 + [64]) = $3
	$8 = ($1 + [56])
	*($5 + [68]) = $8
	$19 = ($1 + [64])
	*($5 + [72]) = $19
	$20 = ($1 + [72])
	*($5 + [76]) = $20
	$21 = ($1 + [80])
	*($5 + [80]) = $21
	$22 = ($1 + [88])
	*($5 + [84]) = $22
	$23 = ($1 + [100])
	*($5 + [88]) = $23
	$24 = ($1 + [128])
	*($5 + [96]) = $24
	$25 = ($1 + [200])
	*($5 + [100]) = $25
	$26 = ($1 + [212])
	*($5 + [104]) = $26
	CALL $186(($5 + [32]), ($5 + [8]))
	$17 = *($5 + [24])
	if ( ($17 <= [513]) ){ goto $label$11 }
	$13 = CALL $1($17)
	goto $label$10 
	
.LABEL $label$11
	$13 = ($4 - (($17 + [15]) & [-16]))
	$global$0 = $13
	
.LABEL $label$10
	*($5 + [12]) = $13
	*($5 + [8]) = $13
	*($5 + [16]) = ($13 + $17)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $12
	*($5 + [40]) = $9
	*($5 + [44]) = $15
	*($5 + [48]) = $16
	*($5 + [52]) = $18
	*($5 + [56]) = $11
	*($5 + [60]) = $14
	*($5 + [64]) = $3
	*($5 + [68]) = $8
	*($5 + [72]) = $19
	*($5 + [76]) = $20
	*($5 + [80]) = $21
	*($5 + [84]) = $22
	*($5 + [88]) = $23
	*($5 + [92]) = $6
	*($5 + [96]) = $24
	*($5 + [100]) = $25
	*($5 + [104]) = $26
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $13, $17)
	if ( ((uint_32)$17 >= (uint_32)[513]) ){ goto $label$14 }
	if ( ((uint_64)$7 >= (uint_64)*($0 + [16])) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $3($13)
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$12 }
	
.LABEL $label$13
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$12
	$global$0 = ($5 + [112])
}

void .FUNC $50 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = ($0 + [32])
	$5 = *($1 + [36])
	$7 = *(($0 + [60]))
	$6 = *(($0 + [56]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$8:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$7 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	if ( ((int_32)*($9 + [224]) == (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [9596])
	if ( ($2 == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$9 = [0]
	$8 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)-4426587238800818176, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	$9 = CALL $40($4, $8)
	if ( ((int_32)*($9 + [224]) == (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$5
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$4
	$5 = *($1 + [40])
	$7 = *(($0 + [60]))
	$6 = *(($0 + [56]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$9 }
	
.LOOP $label$11:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$10 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$9 }
	if ( ((int_32)*($9 + [224]) == (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	$5 = *($0)
	*($3 + [8]) = $1
	if ( $9 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$9
	$9 = [0]
	$8 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)-4426587238800818176, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $40($4, $8)
	if ( ((int_32)*($9 + [224]) == (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$3
	$5 = *($0)
	*($3 + [8]) = $1
	if ( $9 ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9679])
	
.LABEL $label$1
	CALL $54($4, $9, $5, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [32])
	$4 = *($1 + [40])
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	
.LOOP $label$6:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$5 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	if ( ((int_32)*($8 + [224]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	$4 = *($0)
	*($2 + [8]) = $1
	if ( $8 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	$7 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)-4426587238800818176, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $40($3, $7)
	if ( ((int_32)*($8 + [224]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$3
	$4 = *($0)
	*($2 + [8]) = $1
	if ( $8 ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9679])
	
.LABEL $label$1
	CALL $62($3, $8, $4, ($2 + [8]))
	$4 = *($1 + [36])
	$9 = *($8)
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$10:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$9 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$8 }
	if ( ((int_32)*($8 + [224]) == (int_32)$3) ){ goto $label$7 }
	CALL eosio_assert([0], [9596])
	goto $label$7 
	
.LABEL $label$8
	$8 = CALL $40($3, CALL $fimport$3(*(($0 + [32])), *(($0 + [40])), (int_64)-4426587238800818176, $4))
	if ( ((int_32)*($8 + [224]) == (int_32)$3) ){ goto $label$7 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$7
	CALL $63($0, $9, *($8 + [80]))
	$global$0 = ($2 + [16])
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [3])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$6 = int_32($7 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $8(($6 << [3]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $31($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [3])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [3]))
	$5 = ($4 + [8])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $10($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $53 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = *($1)
	$9 = *(($1 + [116]))
	$7 = ((*($1 + [112]) + ((int_32)*((*(*($3)) + (*(*($3 + [4])) << [3]))) * (int_32)[72])) + ((int_32)([0] - *(*($3 + [8]))) * (int_32)[72]))
	$8 = ($7 + [72])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	$10 = ($9 + [-72])
	
.LOOP $label$6:
	if ( (*($7) & [1]) ){ goto $label$8 }
	*($7) = [0]
	goto $label$7 
	
.LABEL $label$8
	*(*(($7 + [8]))) = [0]
	*(($7 + [4])) = [0]
	
.LABEL $label$7
	CALL $26($7, [0])
	$8 = ($7 + [80])
	*(($7 + [8])) = *($8)
	$9 = ($7 + [72])
	*($7) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	$11 = ($7 + [12])
	$8 = *($11)
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $10($8)
	*(($12 = ($7 + [20]))) = [0]
	*($7 + [12 align=4]) = (int_64)0
	goto $label$9 
	
.LABEL $label$10
	$12 = ($7 + [20])
	
.LABEL $label$9
	$8 = ($7 + [84])
	*($11) = *($8)
	$11 = ($7 + [92])
	$13 = *($11)
	*($11) = [0]
	*($12) = $13
	*($8) = (int_64)0
	$11 = ($7 + [24])
	$8 = *($11)
	if ( ($8 == 0) ){ goto $label$12 }
	*(($7 + [28])) = $8
	CALL $10($8)
	*(($12 = ($7 + [32]))) = [0]
	*($7 + [24 align=4]) = (int_64)0
	goto $label$11 
	
.LABEL $label$12
	$12 = ($7 + [32])
	
.LABEL $label$11
	$8 = ($7 + [96])
	*($11) = *($8)
	$11 = ($7 + [104])
	$13 = *($11)
	*($11) = [0]
	*($12) = $13
	*($8) = (int_64)0
	*(($7 + [36])) = *(($7 + [108]))
	*(($7 + [44])) = *(($7 + [116]))
	*(($7 + [52])) = *(($7 + [124]))
	*(($7 + [57])) = *(($7 + [129]))
	$7 = $9
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$6 }
	$8 = *(($1 + [116]))
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$9 = $7
	
.LABEL $label$4
	
.LOOP $label$13:
	$7 = *(($8 + [-48]))
	if ( ($7 == 0) ){ goto $label$14 }
	*(($8 + [-44])) = $7
	CALL $10($7)
	
.LABEL $label$14
	$7 = *(($8 + [-60]))
	if ( ($7 == 0) ){ goto $label$15 }
	*(($8 + [-56])) = $7
	CALL $10($7)
	
.LABEL $label$15
	$7 = ($8 + [-72])
	if ( ((*(($8 + [-72])) & [1]) == 0) ){ goto $label$16 }
	CALL $10(*(($8 + [-64])))
	
.LABEL $label$16
	$8 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$13 }
	
.LABEL $label$3
	*(($7 = *(($3 + [8])))) = ((int_64)*($7) + (int_64)1)
	*(($1 + [116])) = $9
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$17 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$17
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [32]) = $1
	$9 = ($1 + [8])
	*($5 + [36]) = $9
	$11 = ($1 + [16])
	*($5 + [40]) = $11
	$13 = ($1 + [24])
	*($5 + [44]) = $13
	$12 = ($1 + [36])
	*($5 + [48]) = $12
	$10 = ($1 + [38])
	*($5 + [52]) = $10
	$3 = ($1 + [40])
	*($5 + [56]) = $3
	$14 = ($1 + [42])
	*($5 + [60]) = $14
	$15 = ($1 + [44])
	*($5 + [64]) = $15
	$16 = ($1 + [56])
	*($5 + [68]) = $16
	$17 = ($1 + [64])
	*($5 + [72]) = $17
	$18 = ($1 + [72])
	*($5 + [76]) = $18
	$19 = ($1 + [80])
	*($5 + [80]) = $19
	$20 = ($1 + [88])
	*($5 + [84]) = $20
	$21 = ($1 + [100])
	*($5 + [88]) = $21
	$22 = ($1 + [112])
	*($5 + [92]) = $22
	$23 = ($1 + [128])
	*($5 + [96]) = $23
	$24 = ($1 + [200])
	*($5 + [100]) = $24
	$25 = ($1 + [212])
	*($5 + [104]) = $25
	CALL $186(($5 + [32]), ($5 + [8]))
	$8 = *($5 + [24])
	if ( ($8 <= [513]) ){ goto $label$19 }
	$7 = CALL $1($8)
	goto $label$18 
	
.LABEL $label$19
	$7 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$18
	*($5 + [12]) = $7
	*($5 + [8]) = $7
	*($5 + [16]) = ($7 + $8)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $9
	*($5 + [40]) = $11
	*($5 + [44]) = $13
	*($5 + [48]) = $12
	*($5 + [52]) = $10
	*($5 + [56]) = $3
	*($5 + [60]) = $14
	*($5 + [64]) = $15
	*($5 + [68]) = $16
	*($5 + [72]) = $17
	*($5 + [76]) = $18
	*($5 + [80]) = $19
	*($5 + [84]) = $20
	*($5 + [88]) = $21
	*($5 + [92]) = $22
	*($5 + [96]) = $23
	*($5 + [100]) = $24
	*($5 + [104]) = $25
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $7, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$22 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	CALL $3($7)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$20 }
	
.LABEL $label$21
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$20
	$global$0 = ($5 + [112])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = *($1)
	$8 = *($3)
	$9 = *($8 + [24])
	*(($7 = *($1 + [100]))) = ((int_64)*($7) + (int_64)*($9))
	*($7 + [8]) = ((int_64)*($7 + [8]) + (int_64)*($9 + [1]))
	*($7 + [16]) = ((int_64)*($7 + [16]) + (int_64)*($9 + [2]))
	$9 = ($1 + [112])
	$7 = *($1 + [112])
	$10 = ($1 + [116])
	if ( ((int_32)*($10) == (int_32)$7) ){ goto $label$3 }
	$11 = (int_64)0
	$12 = ($1 + [140])
	
.LOOP $label$4:
	$18 = ($7 & [1])
	$7 = *($8)
	$16 = ($7 & [1])
	$7 = *($14)
	$15 = uint_32($7 >> [1])
	$13 = ((int_32)(CASTING uint_32)(uint_64 $11) * (int_32)[72])
	$14 = ($7 + $13)
	$17 = ( *($14 + [4]) ? $15 : $16 )
	if ( ((int_32)$17 != (int_32)( *($8 + [4]) ? uint_32($7 >> [1]) : $18 )) ){ goto $label$5 }
	$7 = ($14 + [1])
	$8 = ( *($8 + [8]) ? ($8 + [1]) : $18 )
	if ( $16 ){ goto $label$7 }
	if ( ($17 == 0) ){ goto $label$6 }
	$14 = ([0] - $15)
	
.LOOP $label$8:
	if ( ((int_32)*($7) != (int_32)*($8)) ){ goto $label$5 }
	$8 = ($8 + [1])
	$7 = ($7 + [1])
	$14 = ($14 + [1])
	if ( $14 ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ($17 == 0) ){ goto $label$6 }
	if ( CALL $17(( *($14 + [8]) ? $7 : $16 ), $8, $17) ){ goto $label$5 }
	
.LABEL $label$6
	if ( ((int_32)*([0] + [8500]) == (int_32)*([0] + [8496])) ){ goto $label$5 }
	$19 = (int_64)0
	$7 = [0]
	
.LOOP $label$9:
	*(($8 = (*($12) + $7))) = (*($8) + *((*((*($9) + $13) + [12]) + $7)))
	*((*((*($9) + $13) + [12]) + $7)) = [0]
	$7 = ($7 + [1])
	$19 = ((int_64)$19 + (int_64)1)
	if ( (uint_64)($19 <= (CASTING uint_64)(uint_32 ((int_32)(*([0] + [8500]) - *([0] + [8496])) / (int_32)[48]))) ){ goto $label$9 }
	
.LABEL $label$5
	$7 = *($9)
	$11 = ((int_64)$11 + (int_64)1)
	if ( ((uint_64)$11 >= (uint_64)(CASTING uint_64)(uint_32 ((int_32)(*($10) - $7) / (int_32)[72]))) ){ goto $label$3 }
	$8 = *($3)
	goto $label$4 
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$10 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$10
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [92]) = $9
	*($5 + [32]) = $1
	$8 = ($1 + [8])
	*($5 + [36]) = $8
	$12 = ($1 + [16])
	*($5 + [40]) = $12
	$14 = ($1 + [24])
	*($5 + [44]) = $14
	$16 = ($1 + [36])
	*($5 + [48]) = $16
	$17 = ($1 + [38])
	*($5 + [52]) = $17
	$18 = ($1 + [40])
	*($5 + [56]) = $18
	$15 = ($1 + [42])
	*($5 + [60]) = $15
	$3 = ($1 + [44])
	*($5 + [64]) = $3
	$10 = ($1 + [56])
	*($5 + [68]) = $10
	$20 = ($1 + [64])
	*($5 + [72]) = $20
	$21 = ($1 + [72])
	*($5 + [76]) = $21
	$22 = ($1 + [80])
	*($5 + [80]) = $22
	$23 = ($1 + [88])
	*($5 + [84]) = $23
	$24 = ($1 + [100])
	*($5 + [88]) = $24
	$25 = ($1 + [128])
	*($5 + [96]) = $25
	$26 = ($1 + [200])
	*($5 + [100]) = $26
	$27 = ($1 + [212])
	*($5 + [104]) = $27
	CALL $186(($5 + [32]), ($5 + [8]))
	$13 = *($5 + [24])
	if ( ($13 <= [513]) ){ goto $label$12 }
	$7 = CALL $1($13)
	goto $label$11 
	
.LABEL $label$12
	$7 = ($4 - (($13 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$11
	*($5 + [12]) = $7
	*($5 + [8]) = $7
	*($5 + [16]) = ($7 + $13)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $8
	*($5 + [40]) = $12
	*($5 + [44]) = $14
	*($5 + [48]) = $16
	*($5 + [52]) = $17
	*($5 + [56]) = $18
	*($5 + [60]) = $15
	*($5 + [64]) = $3
	*($5 + [68]) = $10
	*($5 + [72]) = $20
	*($5 + [76]) = $21
	*($5 + [80]) = $22
	*($5 + [84]) = $23
	*($5 + [88]) = $24
	*($5 + [92]) = $9
	*($5 + [96]) = $25
	*($5 + [100]) = $26
	*($5 + [104]) = $27
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $7, $13)
	if ( ((uint_32)$13 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $3($7)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$13
	$global$0 = ($5 + [112])
}

void .FUNC $55 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($0 + [32])
	$4 = *(($0 + [60]))
	$3 = *(($0 + [56]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$6:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$5 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$4 }
	if ( ((int_32)*($6 + [224]) == (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	if ( ((int_64)(*($6 + [64]) == 0) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($2), *(($0 + [40])), (int_64)-4426587238800818176, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $40($2, $5)
	if ( ((int_32)*($6 + [224]) == (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$3
	if ( (int_64)(*($6 + [64]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $64($0, $1)
	
.LABEL $label$1
	CALL $42($0, $1)
	CALL $44($0, $1)
	CALL $46($0, $1)
	CALL $39($0, $1)
	$1 = *($0)
	if ( ($6 == 0) ){ goto $label$7 }
	CALL $65($2, $6, $1)
	return 
	
.LABEL $label$7
	CALL eosio_assert([0], [9679])
	CALL $65($2, $6, $1)
}

void .FUNC $56 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [8]) = $2
	$5 = ($0 + [32])
	$2 = *($1 + [36])
	$7 = *(($0 + [60]))
	$6 = *(($0 + [56]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$2) ){ goto $label$3 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	if ( ((int_32)*($9 + [224]) == (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [40])), (int_64)-4426587238800818176, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $40($5, $8)
	if ( ((int_32)*($9 + [224]) == (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	$2 = *($0)
	*($4 + [4]) = $1
	*($4) = ($4 + [8])
	if ( $9 ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL $66($5, $9, $2, $4)
	$global$0 = ($4 + [16])
}

void .FUNC $57 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	float_64 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = ($1 + [112])
	$7 = *($1)
	$9 = *($1 + [112])
	$8 = ($1 + [116])
	if ( ((int_32)*($8) == (int_32)$9) ){ goto $label$3 }
	$10 = (int_64)0
	$11 = ($3 + [4])
	$12 = ($3 + [8])
	
.LOOP $label$4:
	$20 = ($15 & [1])
	$15 = *($19)
	$19 = *($3)
	$17 = ($15 & [1])
	$15 = *($14)
	$16 = uint_32($15 >> [1])
	$13 = ((int_32)(CASTING uint_32)(uint_64 $10) * (int_32)[72])
	$14 = ($9 + $13)
	$18 = ( *($14 + [4]) ? $16 : $17 )
	if ( ((int_32)$18 != (int_32)( *($19 + [4]) ? uint_32($15 >> [1]) : $20 )) ){ goto $label$5 }
	$15 = ($14 + [1])
	$19 = ( *($19 + [8]) ? ($19 + [1]) : $20 )
	if ( $17 ){ goto $label$7 }
	if ( ($18 == 0) ){ goto $label$6 }
	$14 = ([0] - $16)
	
.LOOP $label$8:
	if ( ((int_32)*($15) != (int_32)*($19)) ){ goto $label$5 }
	$19 = ($19 + [1])
	$15 = ($15 + [1])
	$14 = ($14 + [1])
	if ( $14 ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ($18 == 0) ){ goto $label$6 }
	if ( (CALL $17(( *($14 + [8]) ? $15 : $17 ), $19, $18) == 0) ){ goto $label$9 }
	$9 = *($6)
	goto $label$5 
	
.LABEL $label$9
	$9 = *($6)
	
.LABEL $label$6
	$21 = ((float_64)*(*($11)) * (float_64)(CASTING float_64)(uint_64 *(*(*(*($12) + [4]) + [100]))))
	if ( (((float_64)$21 < (float_64)(float_64)4294967296) & ((float_64)$21 >= (float_64)(float_64)0)) ){ goto $label$11 }
	$15 = [0]
	goto $label$10 
	
.LABEL $label$11
	$15 = (CASTING uint_32)(float_64 $21)
	
.LABEL $label$10
	*(*(($9 + $13) + [24])) = $15
	$21 = ((float_64)*(*($11)) * (float_64)(CASTING float_64)(uint_64 *(*(*(*($12) + [4]) + [100]) + [8])))
	if ( (((float_64)$21 < (float_64)(float_64)4294967296) & ((float_64)$21 >= (float_64)(float_64)0)) ){ goto $label$13 }
	$15 = [0]
	goto $label$12 
	
.LABEL $label$13
	$15 = (CASTING uint_32)(float_64 $21)
	
.LABEL $label$12
	*(*((*($6) + $13) + [24]) + [1]) = $15
	$21 = ((float_64)*(*($11)) * (float_64)(CASTING float_64)(uint_64 *(*(*(*($12) + [4]) + [100]) + [16])))
	if ( (((float_64)$21 < (float_64)(float_64)4294967296) & ((float_64)$21 >= (float_64)(float_64)0)) ){ goto $label$15 }
	$15 = [0]
	goto $label$14 
	
.LABEL $label$15
	$15 = (CASTING uint_32)(float_64 $21)
	
.LABEL $label$14
	*(*((*($6) + $13) + [24]) + [2]) = $15
	*((($9 = *($6)) + $13) + [64]) = [1]
	
.LABEL $label$5
	$10 = ((int_64)$10 + (int_64)1)
	if ( (uint_64)($10 <= (CASTING uint_64)(uint_32 ((int_32)(*($8) - $9) / (int_32)[72]))) ){ goto $label$4 }
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$3
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [92]) = $6
	*($5 + [32]) = $1
	$14 = ($1 + [8])
	*($5 + [36]) = $14
	$9 = ($1 + [16])
	*($5 + [40]) = $9
	$13 = ($1 + [24])
	*($5 + [44]) = $13
	$17 = ($1 + [36])
	*($5 + [48]) = $17
	$18 = ($1 + [38])
	*($5 + [52]) = $18
	$20 = ($1 + [40])
	*($5 + [56]) = $20
	$16 = ($1 + [42])
	*($5 + [60]) = $16
	$3 = ($1 + [44])
	*($5 + [64]) = $3
	$8 = ($1 + [56])
	*($5 + [68]) = $8
	$11 = ($1 + [64])
	*($5 + [72]) = $11
	$12 = ($1 + [72])
	*($5 + [76]) = $12
	$22 = ($1 + [80])
	*($5 + [80]) = $22
	$23 = ($1 + [88])
	*($5 + [84]) = $23
	$24 = ($1 + [100])
	*($5 + [88]) = $24
	$25 = ($1 + [128])
	*($5 + [96]) = $25
	$26 = ($1 + [200])
	*($5 + [100]) = $26
	$27 = ($1 + [212])
	*($5 + [104]) = $27
	CALL $186(($5 + [32]), ($5 + [8]))
	$19 = *($5 + [24])
	if ( ($19 <= [513]) ){ goto $label$17 }
	$15 = CALL $1($19)
	goto $label$16 
	
.LABEL $label$17
	$15 = ($4 - (($19 + [15]) & [-16]))
	$global$0 = $15
	
.LABEL $label$16
	*($5 + [12]) = $15
	*($5 + [8]) = $15
	*($5 + [16]) = ($15 + $19)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $14
	*($5 + [40]) = $9
	*($5 + [44]) = $13
	*($5 + [48]) = $17
	*($5 + [52]) = $18
	*($5 + [56]) = $20
	*($5 + [60]) = $16
	*($5 + [64]) = $3
	*($5 + [68]) = $8
	*($5 + [72]) = $11
	*($5 + [76]) = $12
	*($5 + [80]) = $22
	*($5 + [84]) = $23
	*($5 + [88]) = $24
	*($5 + [92]) = $6
	*($5 + [96]) = $25
	*($5 + [100]) = $26
	*($5 + [104]) = $27
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $15, $19)
	if ( ((uint_32)$19 >= (uint_32)[513]) ){ goto $label$20 }
	if ( ((uint_64)$7 >= (uint_64)*($0 + [16])) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL $3($15)
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$18 }
	
.LABEL $label$19
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$18
	$global$0 = ($5 + [112])
}

int_32 .FUNC $173 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $179($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $8($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $26($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $26($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $22($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $10($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $152 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [184]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	CALL memcpy(($3 + [184]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$6
	CALL memcpy(($3 + [176]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$7
	CALL memcpy(($3 + [168]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$8
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$9
	$6 = ($2 + $4)
	CALL memcpy(($3 + [152]), $5, [8])
	$5 = ($2 + [40])
	if ( ((int_32)$4 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$10
	CALL memcpy($3, $5, [1])
	$4 = *($3)
	*(($3 + [24])) = $6
	*(($3 + [40])) = $1
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $1
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [41])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28]) = [4]
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [120])) = $1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $119($3, $0, *($3 + [176]), *($3 + [168]), *($3 + [160]), *($3 + [152]), ((int_32)$4 != (int_32)[0]))
	CALL $139($3)
	$global$0 = ($3 + [192])
}

void .FUNC $153 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [168]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $1
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $1
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36]) = [4]
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [128])) = $1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $112(($3 + [8]), $0, *($3 + [160]))
	CALL $139(($3 + [8]))
	$global$0 = ($3 + [176])
}

void .FUNC $150 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $1
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $1
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [28]) = [4]
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [120])) = $1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $118($3, *($3 + [152]))
	CALL $139($3)
	$global$0 = ($3 + [160])
}

void .FUNC $151 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [184]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	CALL memcpy(($3 + [184]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$6
	CALL memcpy(($3 + [176]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$7
	$4 = ($2 + $4)
	CALL memcpy(($3 + [168]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$8
	CALL memcpy(($3 + [160]), $5, [8])
	*((($3 + [8]) + [24])) = $4
	*(($3 + [48])) = $1
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $1
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [32])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36]) = [4]
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [128])) = $1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	$0 = *($3 + [160])
	CALL prints([8938])
	CALL printui($0)
	CALL $139(($3 + [8]))
	$global$0 = ($3 + [192])
}

void .FUNC $156 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [152])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [152])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9674])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $1
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $1
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [28]) = [4]
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [120])) = $1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $55($3, *($3 + [152]))
	CALL $139($3)
	$global$0 = ($3 + [160])
}

void .FUNC $157 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [184]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	CALL memcpy(($3 + [184]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$6
	CALL memcpy(($3 + [176]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$7
	CALL memcpy(($3 + [168]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$8
	$6 = ($2 + $4)
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [32])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$9
	CALL memcpy(($3 + [8]), $5, [1])
	$4 = *($3 + [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $1
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $1
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [33])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36]) = [4]
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [128])) = $1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $83(($3 + [8]), *($3 + [184]), *($3 + [176]), *($3 + [168]), *($3 + [160]), ((int_32)$4 != (int_32)[0]))
	CALL $139(($3 + [8]))
	$global$0 = ($3 + [192])
}

void .FUNC $154 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $1
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $1
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [28]) = [4]
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [120])) = $1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $71($3, *($3 + [152]))
	CALL $139($3)
	$global$0 = ($3 + [160])
}

void .FUNC $155 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $1
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $1
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [28]) = [4]
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [120])) = $1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $113($3, $0)
	CALL $139($3)
	$global$0 = ($3 + [160])
}

void .FUNC $158 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [152]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$6
	CALL memcpy($3, $6, [1])
	$4 = *($3)
	*(($3 + [24])) = $5
	*(($3 + [40])) = $1
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $1
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [9])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28]) = [4]
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [120])) = $1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $80($3, *($3 + [152]), ((int_32)$4 != (int_32)[0]))
	CALL $139($3)
	$global$0 = ($3 + [160])
}

void .FUNC $159 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [152])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [152])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9674])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $1
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $1
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [28]) = [4]
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [120])) = $1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $109($3, *($3 + [152]))
	CALL $139($3)
	$global$0 = ($3 + [160])
}

int_32 .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9670])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $93($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $183 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $8($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $31($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $10($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $69 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	float_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	*($1 + [56]) = [1]
	*($1 + [80]) = *(*($3))
	$6 = *($1)
	*($1 + [64]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$7 = ((float_64)(CASTING float_64)(uint_64 *(*(*($3 + [4]) + [4]) + [40])) * (float_64)(float_64)360)
	if ( (((float_64)$7 < (float_64)(float_64)18446744073709551615) & ((float_64)$7 >= (float_64)(float_64)0)) ){ goto $label$4 }
	$8 = (int_64)0
	goto $label$3 
	
.LABEL $label$4
	$8 = (Rounds 0)($7)
	
.LABEL $label$3
	*($1 + [72]) = $8
	$9 = ($1 + [72])
	$10 = ($1 + [64])
	$11 = ($1 + [56])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$5
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [68]) = $11
	*($5 + [72]) = $10
	*($5 + [76]) = $9
	*($5 + [32]) = $1
	$12 = ($1 + [8])
	*($5 + [36]) = $12
	$13 = ($1 + [16])
	*($5 + [40]) = $13
	$14 = ($1 + [24])
	*($5 + [44]) = $14
	$15 = ($1 + [36])
	*($5 + [48]) = $15
	$16 = ($1 + [38])
	*($5 + [52]) = $16
	$17 = ($1 + [40])
	*($5 + [56]) = $17
	$18 = ($1 + [42])
	*($5 + [60]) = $18
	$19 = ($1 + [44])
	*($5 + [64]) = $19
	$20 = ($1 + [80])
	*($5 + [80]) = $20
	$21 = ($1 + [88])
	*($5 + [84]) = $21
	$22 = ($1 + [100])
	*($5 + [88]) = $22
	$23 = ($1 + [112])
	*($5 + [92]) = $23
	$24 = ($1 + [128])
	*($5 + [96]) = $24
	$25 = ($1 + [200])
	*($5 + [100]) = $25
	$26 = ($1 + [212])
	*($5 + [104]) = $26
	CALL $186(($5 + [32]), ($5 + [8]))
	$27 = *($5 + [24])
	if ( ($27 <= [513]) ){ goto $label$7 }
	$3 = CALL $1($27)
	goto $label$6 
	
.LABEL $label$7
	$3 = ($4 - (($27 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$6
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $27)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $12
	*($5 + [40]) = $13
	*($5 + [44]) = $14
	*($5 + [48]) = $15
	*($5 + [52]) = $16
	*($5 + [56]) = $17
	*($5 + [60]) = $18
	*($5 + [64]) = $19
	*($5 + [68]) = $11
	*($5 + [72]) = $10
	*($5 + [76]) = $9
	*($5 + [80]) = $20
	*($5 + [84]) = $21
	*($5 + [88]) = $22
	*($5 + [92]) = $23
	*($5 + [96]) = $24
	*($5 + [100]) = $25
	*($5 + [104]) = $26
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $3, $27)
	if ( ((uint_32)$27 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $3($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$8
	$global$0 = ($5 + [112])
}

void .FUNC $68 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = *($1)
	*((($7 = *($1 + [8])) + (*($1 + [40]) << [3]))) = *(*($3))
	*($1 + [40]) = ((int_64)*($1 + [40]) + (int_64)1)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9811])
	$7 = *($1 + [8])
	
.LABEL $label$3
	$8 = *(($1 + [12]))
	$9 = ($8 - $7)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	$3 = [8]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$5 }
	$3 = (($9 & [-8]) + $3)
	
.LABEL $label$5
	$7 = *($1 + [20])
	$7 = ( *(($1 + [24])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$3 = (($7 + $3) + [16])
	$10 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$6 }
	if ( ($3 <= [513]) ){ goto $label$8 }
	$7 = CALL $1($3)
	goto $label$7 
	
.LABEL $label$8
	$7 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$7
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = ($7 + $3)
	CALL $198($5, $1)
	CALL db_update_i64(*($1 + [52]), $2, $7, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $3($7)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$9
	$global$0 = ($5 + [16])
}

void .FUNC $65 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$5 = *($1)
	$6 = CALL current_time()
	*(*($1 + [24]) + [24]) = ((int_64)((uint_64)$6 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$3
	*($4 + [24]) = [0]
	*($4 + [8]) = ($4 + [24])
	*($4 + [32]) = $1
	$7 = ($1 + [8])
	*($4 + [36]) = $7
	$8 = ($1 + [16])
	*($4 + [40]) = $8
	$9 = ($1 + [24])
	*($4 + [44]) = $9
	$10 = ($1 + [36])
	*($4 + [48]) = $10
	$11 = ($1 + [38])
	*($4 + [52]) = $11
	$12 = ($1 + [40])
	*($4 + [56]) = $12
	$13 = ($1 + [42])
	*($4 + [60]) = $13
	$14 = ($1 + [44])
	*($4 + [64]) = $14
	$15 = ($1 + [56])
	*($4 + [68]) = $15
	$16 = ($1 + [64])
	*($4 + [72]) = $16
	$17 = ($1 + [72])
	*($4 + [76]) = $17
	$18 = ($1 + [80])
	*($4 + [80]) = $18
	$19 = ($1 + [88])
	*($4 + [84]) = $19
	$20 = ($1 + [100])
	*($4 + [88]) = $20
	$21 = ($1 + [112])
	*($4 + [92]) = $21
	$22 = ($1 + [128])
	*($4 + [96]) = $22
	$23 = ($1 + [200])
	*($4 + [100]) = $23
	$24 = ($1 + [212])
	*($4 + [104]) = $24
	CALL $186(($4 + [32]), ($4 + [8]))
	$25 = *($4 + [24])
	if ( ($25 <= [513]) ){ goto $label$5 }
	$3 = CALL $1($25)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 - (($25 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($3 + $25)
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $7
	*($4 + [40]) = $8
	*($4 + [44]) = $9
	*($4 + [48]) = $10
	*($4 + [52]) = $11
	*($4 + [56]) = $12
	*($4 + [60]) = $13
	*($4 + [64]) = $14
	*($4 + [68]) = $15
	*($4 + [72]) = $16
	*($4 + [76]) = $17
	*($4 + [80]) = $18
	*($4 + [84]) = $19
	*($4 + [88]) = $20
	*($4 + [92]) = $21
	*($4 + [96]) = $22
	*($4 + [100]) = $23
	*($4 + [104]) = $24
	*($4 + [32]) = $1
	CALL $187(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $3, $25)
	if ( ((uint_32)$25 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$5 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $3($3)
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [112])
	return 
	
.LABEL $label$6
	$global$0 = ($4 + [112])
}

void .FUNC $64 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($0 + [32])
	$4 = *(($0 + [60]))
	$3 = *(($0 + [56]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [224]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($2), *(($0 + [40])), (int_64)-4426587238800818176, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $40($2, $5)
	if ( ((int_32)*($6 + [224]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	if ( ((uint_64)((int_64)*($6 + [72]) + (int_64)*($6 + [64])) > (uint_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$5 }
	$1 = *($0)
	if ( $6 ){ goto $label$6 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$6
	CALL $70($2, $6, $1)
	
.LABEL $label$5
}

int_32 .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9647])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $8([64]))) = (int_64)0
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [48]) = $0
	CALL $197(($3 + [32]), $5)
	*($5 + [52]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $77(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [28])))
	
.LABEL $label$11
	$4 = *($1 + [8])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [12])) = $4
	CALL $10($4)
	
.LABEL $label$12
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $66 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *([0] + [8496])
	if ( ((int_32)*([0] + [8500]) != (int_32)$7) ){ goto $label$4 }
	$8 = ($3 + [4])
	goto $label$3 
	
.LABEL $label$4
	$8 = ($3 + [4])
	$9 = (int_64)0
	$10 = [10]
	$11 = [0]
	
.LOOP $label$5:
	$12 = *($3)
	$13 = *($12)
	if ( (int_64)($13 == 0) ){ goto $label$6 }
	$15 = *(($7 + $10))
	$14 = (*(*($8) + [12]) + $11)
	$16 = ((int_64)*($14) * (int_64)$15)
	*($12) = (int_64))(( $13 ? $16 : ((uint_64)$13 > (uint_64)$16) ) - $16)
	$13 = ((uint_64)$13 / (uint_64)$15)
	$7 = *($14)
	*($14) = ( ($7 - (CASTING uint_32)(uint_64 $13)) ? [0] : (uint_64)($13 <= ((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255)) )
	
.LABEL $label$6
	$10 = ($10 + [48])
	$11 = ($11 + [1])
	$7 = *([0] + [8496])
	$9 = ((int_64)$9 + (int_64)1)
	if ( (uint_64)($9 <= (CASTING uint_64)(uint_32 ((int_32)(*([0] + [8500]) - $7) / (int_32)[48]))) ){ goto $label$5 }
	
.LABEL $label$3
	$10 = *($8)
	$11 = *($10)
	$14 = CALL $16([9882])
	if ( ((int_32)$14 != (int_32)( *($10 + [4]) ? uint_32($11 >> [1]) : ($11 & [1]) )) ){ goto $label$10 }
	if ( (CALL $30($10, [0], [-1], [9882], $14) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	$12 = *($1 + [112])
	$17 = ($1 + [116])
	if ( ((int_32)*($17) == (int_32)$12) ){ goto $label$11 }
	$13 = (int_64)0
	$18 = ($1 + [112])
	
.LOOP $label$12:
	$11 = ($10 & [1])
	$10 = *($14)
	$14 = *($8)
	$3 = ($10 & [1])
	$10 = *($7)
	$20 = uint_32($10 >> [1])
	$19 = ((int_32)(CASTING uint_32)(uint_64 $13) * (int_32)[72])
	$7 = ($12 + $19)
	$21 = ( *($7 + [4]) ? $20 : $3 )
	if ( ((int_32)$21 != (int_32)( *($14 + [4]) ? uint_32($10 >> [1]) : $11 )) ){ goto $label$13 }
	$10 = ($7 + [1])
	$11 = ( *($14 + [8]) ? ($14 + [1]) : $11 )
	if ( $3 ){ goto $label$15 }
	if ( ($21 == 0) ){ goto $label$14 }
	$7 = ([0] - $20)
	
.LOOP $label$16:
	if ( ((int_32)*($10) != (int_32)*($11)) ){ goto $label$13 }
	$11 = ($11 + [1])
	$10 = ($10 + [1])
	$7 = ($7 + [1])
	if ( $7 ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	if ( ($21 == 0) ){ goto $label$14 }
	if ( CALL $17(( *($7 + [8]) ? $10 : $3 ), $11, $21) ){ goto $label$13 }
	$12 = *($18)
	$14 = *($8)
	
.LABEL $label$14
	$10 = ($12 + $19)
	CALL $24($10, $14)
	if ( ((int_32)$10 == (int_32)$14) ){ goto $label$17 }
	CALL $199(($10 + [12]), *($14 + [12]), *(($14 + [16])))
	CALL $199(($10 + [24]), *($14 + [24]), *(($14 + [28])))
	
.LABEL $label$17
	*($10 + [36 align=4]) = *($14 + [36 align=4])
	*(($10 + [57])) = *(($14 + [57]))
	*(($10 + [52])) = *(($14 + [52]))
	*(($10 + [44])) = *(($14 + [44]))
	
.LABEL $label$13
	$12 = *($18)
	$13 = ((int_64)$13 + (int_64)1)
	if ( (uint_64)($13 <= (CASTING uint_64)(uint_32 ((int_32)(*($17) - $12) / (int_32)[72]))) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	$10 = *($8)
	$11 = ($1 + [128])
	CALL $24($11, $10)
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$18 }
	CALL $199(($1 + [140]), *($10 + [12]), *(($10 + [16])))
	CALL $199(($1 + [152]), *($10 + [24]), *(($10 + [28])))
	
.LABEL $label$18
	*(($1 + [164])) = *($10 + [36 align=4])
	*(($1 + [185])) = *(($10 + [57]))
	*(($1 + [180])) = *(($10 + [52]))
	*(($1 + [172])) = *(($10 + [44]))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9811])
	
.LABEL $label$7
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [32]) = $1
	$14 = ($1 + [8])
	*($5 + [36]) = $14
	$7 = ($1 + [16])
	*($5 + [40]) = $7
	$12 = ($1 + [24])
	*($5 + [44]) = $12
	$8 = ($1 + [36])
	*($5 + [48]) = $8
	$3 = ($1 + [38])
	*($5 + [52]) = $3
	$21 = ($1 + [40])
	*($5 + [56]) = $21
	$19 = ($1 + [42])
	*($5 + [60]) = $19
	$20 = ($1 + [44])
	*($5 + [64]) = $20
	$18 = ($1 + [56])
	*($5 + [68]) = $18
	$17 = ($1 + [64])
	*($5 + [72]) = $17
	$22 = ($1 + [72])
	*($5 + [76]) = $22
	$23 = ($1 + [80])
	*($5 + [80]) = $23
	$24 = ($1 + [88])
	*($5 + [84]) = $24
	$25 = ($1 + [100])
	*($5 + [88]) = $25
	$26 = ($1 + [112])
	*($5 + [92]) = $26
	$27 = ($1 + [128])
	*($5 + [96]) = $27
	$28 = ($1 + [200])
	*($5 + [100]) = $28
	$29 = ($1 + [212])
	*($5 + [104]) = $29
	CALL $186(($5 + [32]), ($5 + [8]))
	$11 = *($5 + [24])
	if ( ($11 <= [513]) ){ goto $label$20 }
	$10 = CALL $1($11)
	goto $label$19 
	
.LABEL $label$20
	$10 = ($4 - (($11 + [15]) & [-16]))
	$global$0 = $10
	
.LABEL $label$19
	*($5 + [12]) = $10
	*($5 + [8]) = $10
	*($5 + [16]) = ($10 + $11)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $14
	*($5 + [40]) = $7
	*($5 + [44]) = $12
	*($5 + [48]) = $8
	*($5 + [52]) = $3
	*($5 + [56]) = $21
	*($5 + [60]) = $19
	*($5 + [64]) = $20
	*($5 + [68]) = $18
	*($5 + [72]) = $17
	*($5 + [76]) = $22
	*($5 + [80]) = $23
	*($5 + [84]) = $24
	*($5 + [88]) = $25
	*($5 + [92]) = $26
	*($5 + [96]) = $27
	*($5 + [100]) = $28
	*($5 + [104]) = $29
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $10, $11)
	if ( ((uint_32)$11 >= (uint_32)[513]) ){ goto $label$23 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	CALL $3($10)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$21 }
	
.LABEL $label$22
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$21
	$global$0 = ($5 + [112])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = *($1)
	*(*((*($1 + [112]) + ((int_32)*(*($3)) * (int_32)[72])) + [24])) = [0]
	*(*((*($1 + [112]) + ((int_32)*(*($3)) * (int_32)[72])) + [24]) + [1]) = [0]
	*(*((*($1 + [112]) + ((int_32)*(*($3)) * (int_32)[72])) + [24]) + [2]) = [0]
	*((*($1 + [112]) + ((int_32)*(*($3)) * (int_32)[72])) + [64]) = [1]
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$3
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [32]) = $1
	$7 = ($1 + [8])
	*($5 + [36]) = $7
	$8 = ($1 + [16])
	*($5 + [40]) = $8
	$9 = ($1 + [24])
	*($5 + [44]) = $9
	$10 = ($1 + [36])
	*($5 + [48]) = $10
	$11 = ($1 + [38])
	*($5 + [52]) = $11
	$12 = ($1 + [40])
	*($5 + [56]) = $12
	$13 = ($1 + [42])
	*($5 + [60]) = $13
	$14 = ($1 + [44])
	*($5 + [64]) = $14
	$15 = ($1 + [56])
	*($5 + [68]) = $15
	$16 = ($1 + [64])
	*($5 + [72]) = $16
	$17 = ($1 + [72])
	*($5 + [76]) = $17
	$18 = ($1 + [80])
	*($5 + [80]) = $18
	$19 = ($1 + [88])
	*($5 + [84]) = $19
	$20 = ($1 + [100])
	*($5 + [88]) = $20
	$21 = ($1 + [112])
	*($5 + [92]) = $21
	$22 = ($1 + [128])
	*($5 + [96]) = $22
	$23 = ($1 + [200])
	*($5 + [100]) = $23
	$24 = ($1 + [212])
	*($5 + [104]) = $24
	CALL $186(($5 + [32]), ($5 + [8]))
	$25 = *($5 + [24])
	if ( ($25 <= [513]) ){ goto $label$5 }
	$3 = CALL $1($25)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($4 - (($25 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $25)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $7
	*($5 + [40]) = $8
	*($5 + [44]) = $9
	*($5 + [48]) = $10
	*($5 + [52]) = $11
	*($5 + [56]) = $12
	*($5 + [60]) = $13
	*($5 + [64]) = $14
	*($5 + [68]) = $15
	*($5 + [72]) = $16
	*($5 + [76]) = $17
	*($5 + [80]) = $18
	*($5 + [84]) = $19
	*($5 + [88]) = $20
	*($5 + [92]) = $21
	*($5 + [96]) = $22
	*($5 + [100]) = $23
	*($5 + [104]) = $24
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $3, $25)
	if ( ((uint_32)$25 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $3($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$6
	$global$0 = ($5 + [112])
}

void .FUNC $60 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *(*($3) + [24])
	*(($7 = *($1 + [100]))) = ((int_64)*($7) + (int_64)*($3))
	*($7 + [8]) = ((int_64)*($7 + [8]) + (int_64)*($3 + [1]))
	*($7 + [16]) = ((int_64)*($7 + [16]) + (int_64)*($3 + [2]))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$3
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [32]) = $1
	$8 = ($1 + [8])
	*($5 + [36]) = $8
	$9 = ($1 + [16])
	*($5 + [40]) = $9
	$10 = ($1 + [24])
	*($5 + [44]) = $10
	$11 = ($1 + [36])
	*($5 + [48]) = $11
	$12 = ($1 + [38])
	*($5 + [52]) = $12
	$13 = ($1 + [40])
	*($5 + [56]) = $13
	$14 = ($1 + [42])
	*($5 + [60]) = $14
	$15 = ($1 + [44])
	*($5 + [64]) = $15
	$16 = ($1 + [56])
	*($5 + [68]) = $16
	$17 = ($1 + [64])
	*($5 + [72]) = $17
	$18 = ($1 + [72])
	*($5 + [76]) = $18
	$19 = ($1 + [80])
	*($5 + [80]) = $19
	$20 = ($1 + [88])
	*($5 + [84]) = $20
	$21 = ($1 + [100])
	*($5 + [88]) = $21
	$22 = ($1 + [112])
	*($5 + [92]) = $22
	$23 = ($1 + [128])
	*($5 + [96]) = $23
	$24 = ($1 + [200])
	*($5 + [100]) = $24
	$25 = ($1 + [212])
	*($5 + [104]) = $25
	CALL $186(($5 + [32]), ($5 + [8]))
	$3 = *($5 + [24])
	if ( ($3 <= [513]) ){ goto $label$5 }
	$7 = CALL $1($3)
	goto $label$4 
	
.LABEL $label$5
	$7 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$4
	*($5 + [12]) = $7
	*($5 + [8]) = $7
	*($5 + [16]) = ($7 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $8
	*($5 + [40]) = $9
	*($5 + [44]) = $10
	*($5 + [48]) = $11
	*($5 + [52]) = $12
	*($5 + [56]) = $13
	*($5 + [60]) = $14
	*($5 + [64]) = $15
	*($5 + [68]) = $16
	*($5 + [72]) = $17
	*($5 + [76]) = $18
	*($5 + [80]) = $19
	*($5 + [84]) = $20
	*($5 + [88]) = $21
	*($5 + [92]) = $22
	*($5 + [96]) = $23
	*($5 + [100]) = $24
	*($5 + [104]) = $25
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $7, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $3($7)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$6
	$global$0 = ($5 + [112])
}

void .FUNC $63 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [16]) = $1
	*($3 + [24]) = $2
	$4 = ($0 + [72])
	$6 = *(($0 + [100]))
	$5 = *(($0 + [96]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$2) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [48]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$7 = CALL db_find_i64(*($4), *(($0 + [80])), (int_64)-6030912142679474176, $2)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$5 }
	$8 = CALL $67($4, $7)
	if ( ((int_32)*($8 + [48]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$5
	$8 = [0]
	
.LABEL $label$1
	*($3 + [12]) = $8
	*($3 + [8]) = $4
	$2 = *($0)
	*($3) = ($3 + [16])
	if ( $8 ){ goto $label$6 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$6
	CALL $68($4, $8, $2, $3)
	$4 = ($0 + [32])
	$2 = *($3 + [16])
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$10:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$2) ){ goto $label$9 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$8 }
	if ( ((int_32)*($8 + [224]) == (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [9596])
	goto $label$7 
	
.LABEL $label$8
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)-4426587238800818176, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	$8 = CALL $40($4, $7)
	if ( ((int_32)*($8 + [224]) == (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$7
	$2 = *($0)
	*($3 + [4]) = ($3 + [8])
	*($3) = ($3 + [24])
	if ( $8 ){ goto $label$11 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$11
	CALL $69($4, $8, $2, $3)
	$global$0 = ($3 + [32])
}

void .FUNC $62 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = *($1)
	$8 = *($3)
	$9 = *($8 + [24])
	*(($7 = *($1 + [100]))) = ((int_64)*($7) + (int_64)*($9))
	*($7 + [8]) = ((int_64)*($7 + [8]) + (int_64)*($9 + [1]))
	*($7 + [16]) = ((int_64)*($7 + [16]) + (int_64)*($9 + [2]))
	$10 = ($1 + [112])
	$7 = *($1 + [112])
	$11 = ($1 + [116])
	if ( ((int_32)*($11) == (int_32)$7) ){ goto $label$3 }
	$12 = (int_64)0
	$13 = ($1 + [140])
	
.LOOP $label$4:
	$18 = ($7 & [1])
	$7 = *($8)
	$16 = ($7 & [1])
	$7 = *($14)
	$15 = uint_32($7 >> [1])
	$9 = ((int_32)(CASTING uint_32)(uint_64 $12) * (int_32)[72])
	$14 = ($7 + $9)
	$17 = ( *($14 + [4]) ? $15 : $16 )
	if ( ((int_32)$17 != (int_32)( *($8 + [4]) ? uint_32($7 >> [1]) : $18 )) ){ goto $label$5 }
	$7 = ($14 + [1])
	$8 = ( *($8 + [8]) ? ($8 + [1]) : $18 )
	if ( $16 ){ goto $label$7 }
	if ( ($17 == 0) ){ goto $label$6 }
	$14 = ([0] - $15)
	
.LOOP $label$8:
	if ( ((int_32)*($7) != (int_32)*($8)) ){ goto $label$5 }
	$8 = ($8 + [1])
	$7 = ($7 + [1])
	$14 = ($14 + [1])
	if ( $14 ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ($17 == 0) ){ goto $label$6 }
	if ( CALL $17(( *($14 + [8]) ? $7 : $16 ), $8, $17) ){ goto $label$5 }
	
.LABEL $label$6
	if ( ((int_32)*([0] + [8500]) == (int_32)*([0] + [8496])) ){ goto $label$5 }
	$8 = *($10)
	$19 = (int_64)0
	$7 = [0]
	
.LOOP $label$9:
	*(($14 = (*($13) + $7))) = (*($14) + *((*(($8 + $9) + [12]) + $7)))
	if ( ((int_64)$19 != (int_64)2) ){ goto $label$10 }
	*(($8 = *($13)) + [2]) = (*($8 + [2]) + [-1])
	
.LABEL $label$10
	*((*((*($10) + $9) + [12]) + $7)) = [0]
	*((($8 = *($10)) + $9) + [64]) = [4]
	$7 = ($7 + [1])
	$19 = ((int_64)$19 + (int_64)1)
	if ( (uint_64)($19 <= (CASTING uint_64)(uint_32 ((int_32)(*([0] + [8500]) - *([0] + [8496])) / (int_32)[48]))) ){ goto $label$9 }
	
.LABEL $label$5
	$7 = *($10)
	$12 = ((int_64)$12 + (int_64)1)
	if ( ((uint_64)$12 >= (uint_64)(CASTING uint_64)(uint_32 ((int_32)(*($11) - $7) / (int_32)[72]))) ){ goto $label$3 }
	$8 = *($3)
	goto $label$4 
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$11 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$11
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [92]) = $10
	*($5 + [32]) = $1
	$8 = ($1 + [8])
	*($5 + [36]) = $8
	$14 = ($1 + [16])
	*($5 + [40]) = $14
	$13 = ($1 + [24])
	*($5 + [44]) = $13
	$16 = ($1 + [36])
	*($5 + [48]) = $16
	$17 = ($1 + [38])
	*($5 + [52]) = $17
	$18 = ($1 + [40])
	*($5 + [56]) = $18
	$15 = ($1 + [42])
	*($5 + [60]) = $15
	$3 = ($1 + [44])
	*($5 + [64]) = $3
	$11 = ($1 + [56])
	*($5 + [68]) = $11
	$20 = ($1 + [64])
	*($5 + [72]) = $20
	$21 = ($1 + [72])
	*($5 + [76]) = $21
	$22 = ($1 + [80])
	*($5 + [80]) = $22
	$23 = ($1 + [88])
	*($5 + [84]) = $23
	$24 = ($1 + [100])
	*($5 + [88]) = $24
	$25 = ($1 + [128])
	*($5 + [96]) = $25
	$26 = ($1 + [200])
	*($5 + [100]) = $26
	$27 = ($1 + [212])
	*($5 + [104]) = $27
	CALL $186(($5 + [32]), ($5 + [8]))
	$9 = *($5 + [24])
	if ( ($9 <= [513]) ){ goto $label$13 }
	$7 = CALL $1($9)
	goto $label$12 
	
.LABEL $label$13
	$7 = ($4 - (($9 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$12
	*($5 + [12]) = $7
	*($5 + [8]) = $7
	*($5 + [16]) = ($7 + $9)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $8
	*($5 + [40]) = $14
	*($5 + [44]) = $13
	*($5 + [48]) = $16
	*($5 + [52]) = $17
	*($5 + [56]) = $18
	*($5 + [60]) = $15
	*($5 + [64]) = $3
	*($5 + [68]) = $11
	*($5 + [72]) = $20
	*($5 + [76]) = $21
	*($5 + [80]) = $22
	*($5 + [84]) = $23
	*($5 + [88]) = $24
	*($5 + [92]) = $10
	*($5 + [96]) = $25
	*($5 + [100]) = $26
	*($5 + [104]) = $27
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $7, $9)
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$16 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $3($7)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$14 }
	
.LABEL $label$15
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$14
	$global$0 = ($5 + [112])
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8532])
	return $3
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $89 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL $10($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL $10($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL $10($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL $10($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL $10($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $88 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [16]) = [0]
	CALL $92(($4 + [16]), $0)
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL $93($4, $6)
	$5 = *($4 + [4])
	$6 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	*($4 + [20]) = $6
	*($4 + [16]) = $6
	*($4 + [24]) = $5
	CALL $94(($4 + [16]), $0)
	$0 = *($4)
	CALL send_deferred($1, $2, $0, (*($4 + [4]) - $0), $3)
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$3 }
	*($4 + [4]) = $0
	CALL $10($0)
	
.LABEL $label$3
	$global$0 = ($4 + [32])
}

void .FUNC $87 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $6) / (int_32)[40])
	$8 = ($7 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$9 = [107374182]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[40])
	if ( ((uint_32)$6 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($6 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $8(((int_32)$9 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $31($0)
	
.LABEL $label$1
	*(($7 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($2)
	*($7 + [8]) = *($3)
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$2 = CALL $8([16])
	*($7 + [16]) = $2
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$8 = ($2 + [16])
	*($3) = $8
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($7 + [20])) = $8
	CALL $93(($7 + [28]), [33])
	$2 = *(($7 + [32]))
	$1 = *($7 + [28])
	*($5 + [4]) = $1
	*($5) = $1
	*($5 + [8]) = $2
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	$10 = ($6 + ((int_32)$9 * (int_32)[40]))
	$11 = ($7 + [40])
	CALL $201(($5 + [24]), ($5 + [16]))
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	$12 = ($2 - $8)
	$1 = [0]
	
.LOOP $label$7:
	$9 = ($8 + $1)
	*((($2 = ($7 + $1)) + [-32])) = *(($9 + [-32]))
	*(($2 + [-40])) = *(($9 + [-40]))
	*(($6 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($9 + [-24])
	*($6) = *($4)
	$6 = ($9 + [-16])
	*($3) = *($6)
	*($6) = [0]
	*(($6 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($9 + [-12])
	*($6) = *($3)
	*($4) = (int_64)0
	$9 = ($9 + [-4])
	*($2) = *($9)
	*($9) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$12 != (int_32)$1) ){ goto $label$7 }
	$7 = ($7 + $1)
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $7
	*(($0 + [4])) = $11
	*(($0 + [8])) = $10
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = *(($2 + [-12]))
	if ( ($9 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $9
	CALL $10($9)
	
.LABEL $label$10
	$9 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL $10($1)
	
.LABEL $label$11
	$2 = $9
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $10($6)
	
.LABEL $label$12
	$global$0 = ($5 + [32])
	(unreachable)
}

void .FUNC $86 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	*($1 + [16]) = *(*($3))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-15])
	CALL $90($5, $1)
	CALL db_update_i64(*($1 + [44]), $2, $4, [33])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

void .FUNC $85 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$1 = ($global$0 - [80])
	$global$0 = $1
	$2 = ($0 + [112])
	$3 = *($0)
	if ( ((int_64)*($0 + [112]) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [10096])
	
.LABEL $label$1
	*(($4 = CALL $8([56])) + [40]) = $2
	$5 = CALL current_time()
	*($4 + [24]) = [1]
	*($4) = (int_64)0
	*($4 + [32]) = (int_64)0
	*($4 + [8]) = ((int_64)((uint_64)$5 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($1 + [72]) = (($1 + [16]) + [33])
	*($1 + [68]) = ($1 + [16])
	*($1 + [64]) = ($1 + [16])
	CALL $90(($1 + [64]), $4)
	$5 = *($4)
	$6 = CALL db_store_i64(*(($0 + [120])), (int_64)7235159550573564928, $3, $5, ($1 + [16]), [33])
	*($4 + [44]) = $6
	$2 = ($0 + [128])
	if ( (uint_64)($5 <= *($2)) ){ goto $label$2 }
	*($2) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($1 + [64]) = $4
	$5 = *($4)
	*($1 + [16]) = $5
	*($1 + [12]) = $6
	$7 = ($0 + [140])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [144]))) ){ goto $label$5 }
	*($2 + [8]) = $5
	*($2 + [16]) = $6
	*($1 + [64]) = [0]
	*($2) = $4
	*($7) = ($2 + [24])
	$4 = *($1 + [64])
	*($1 + [64]) = [0]
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $91(($0 + [136]), ($1 + [64]), ($1 + [16]), ($1 + [12]))
	$4 = *($1 + [64])
	*($1 + [64]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $10($4)
	
.LABEL $label$3
	$global$0 = ($1 + [80])
}

void .FUNC $84 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$5 = *($1)
	*($1 + [8]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$3
	$6 = $3
	$3 = ($6 + [-48])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($6 + [-15])
	CALL $90($4, $1)
	CALL db_update_i64(*($1 + [44]), $2, $3, [33])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = ($4 + [16])
}

void .FUNC $83 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	$6 = ($global$0 - [128])
	$global$0 = $6
	$7 = ($0 + [112])
	$9 = *(($0 + [140]))
	$8 = *(($0 + [136]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$2 }
	
.LOOP $label$4:
	$10 = ($9 + [-24])
	$11 = *($10)
	if ( (int_64)(*($11) == 0) ){ goto $label$3 }
	$9 = $10
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$2 }
	if ( ((int_32)*($11 + [40]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$5
	$12 = ($0 + [120])
	goto $label$1 
	
.LABEL $label$2
	$11 = [0]
	$12 = ($0 + [120])
	$10 = CALL db_find_i64(*($7), *($12), (int_64)7235159550573564928, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$1 }
	$11 = CALL $81($7, $10)
	if ( ((int_32)*($11 + [40]) == (int_32)$7) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	$10 = CALL db_lowerbound_i64(*($7), *($12), (int_64)7235159550573564928, (int_64)0)
	if ( ((int_32)$10 <= (int_32)[-1]) ){ goto $label$7 }
	CALL $81($7, $10)
	$13 = *($0)
	if ( $11 ){ goto $label$8 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$8
	CALL $84($7, $11, $13)
	goto $label$6 
	
.LABEL $label$7
	CALL $85($0)
	
.LABEL $label$6
	$9 = *(($0 + [140]))
	$14 = *(($0 + [136]))
	if ( ((int_32)$14 == (int_32)$9) ){ goto $label$10 }
	
.LOOP $label$12:
	$10 = ($9 + [-24])
	$8 = *($10)
	if ( (int_64)(*($8) == 0) ){ goto $label$11 }
	$9 = $10
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$14 == (int_32)$9) ){ goto $label$10 }
	if ( ((int_32)*($8 + [40]) == (int_32)$7) ){ goto $label$9 }
	CALL eosio_assert([0], [9596])
	goto $label$9 
	
.LABEL $label$10
	$8 = CALL $81($7, CALL $fimport$3(*($7), *($12), (int_64)7235159550573564928, (int_64)0))
	if ( ((int_32)*($8 + [40]) == (int_32)$7) ){ goto $label$9 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$9
	$15 = *($8 + [32])
	$13 = *($11 + [16])
	*($6 + [64]) = $13
	if ( ((uint_64)$13 > (uint_64)$15) ){ goto $label$13 }
	if ( (int_64)($3 == 0) ){ goto $label$13 }
	$12 = ($0 + [32])
	$16 = ($0 + [60])
	$17 = ($0 + [56])
	$18 = ($0 + [40])
	$19 = (int_64)0
	
.LOOP $label$14:
	$9 = *($16)
	$14 = *($17)
	if ( ((int_32)$14 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$19:
	$10 = ($9 + [-24])
	$8 = *($10)
	if ( ((int_64)*($8) == (int_64)$13) ){ goto $label$18 }
	$9 = $10
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	if ( ((int_32)$14 == (int_32)$9) ){ goto $label$17 }
	if ( ((int_32)*($8 + [224]) != (int_32)$12) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$8 = [0]
	$10 = CALL db_find_i64(*($12), *($18), (int_64)-4426587238800818176, $13)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$15 }
	$8 = CALL $40($12, $10)
	if ( ((int_32)*($8 + [224]) == (int_32)$12) ){ goto $label$15 }
	
.LABEL $label$16
	CALL eosio_assert([0], [9596])
	
.LABEL $label$15
	if ( (*($8 + [36]) == 0) ){ goto $label$20 }
	if ( (uint_64)(((int_64)((uint_64)(int_64))(((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) - *(*($8 + [24]) + [24])) / (uint_64)(int_64)60) & (int_64)65535) <= $2) ){ goto $label$20 }
	CALL $55($0, *($6 + [64]))
	
.LABEL $label$20
	if ( ((int_64)*($6 + [64]) != (int_64)$15) ){ goto $label$21 }
	*($6 + [64]) = (int_64)0
	$9 = *($16)
	$14 = *($17)
	if ( ((int_32)$14 == (int_32)$9) ){ goto $label$24 }
	
.LOOP $label$26:
	$10 = ($9 + [-24])
	$8 = *($10)
	if ( (int_64)(*($8) == 0) ){ goto $label$25 }
	$9 = $10
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	if ( ((int_32)$14 == (int_32)$9) ){ goto $label$24 }
	if ( ((int_32)*($8 + [224]) != (int_32)$12) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	$8 = [0]
	$10 = CALL db_find_i64(*($12), *($18), (int_64)-4426587238800818176, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$22 }
	$8 = CALL $40($12, $10)
	if ( ((int_32)*($8 + [224]) == (int_32)$12) ){ goto $label$22 }
	
.LABEL $label$23
	CALL eosio_assert([0], [9596])
	
.LABEL $label$22
	if ( (*($8 + [36]) == 0) ){ goto $label$21 }
	if ( (uint_64)(((int_64)((uint_64)(int_64))(((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) - *(*($8 + [24]) + [24])) / (uint_64)(int_64)60) & (int_64)65535) <= $2) ){ goto $label$21 }
	CALL $55($0, *($6 + [64]))
	
.LABEL $label$21
	$13 = *($0)
	*($6) = ($6 + [64])
	if ( $11 ){ goto $label$27 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$27
	CALL $86($7, $11, $13, $6)
	$13 = ((int_64)*($6 + [64]) + (int_64)1)
	*($6 + [64]) = $13
	if ( ((uint_64)$13 > (uint_64)$15) ){ goto $label$13 }
	$19 = ((int_64)$19 + (int_64)1)
	if ( (uint_64)($19 <= $3) ){ goto $label$14 }
	
.LABEL $label$13
	if ( ($5 == 0) ){ goto $label$28 }
	if ( (*($11 + [24]) == 0) ){ goto $label$28 }
	CALL require_auth(*($0))
	$13 = CALL current_time()
	*(($6 + [92])) = (int_64)0
	*(($6 + [108])) = (int_64)0
	*(($6 + [116])) = (int_64)0
	*($6 + [76]) = [0]
	*($6 + [80]) = [0]
	*($6 + [84 align=4]) = (int_64)0
	*($6 + [100 align=4]) = (int_64)0
	*($6 + [64]) = ((CASTING uint_32)(uint_64 ((uint_64)$13 / (uint_64)(int_64)1000000)) + [60])
	*($6 + [56]) = (int_64)3617214756542218240
	*($6 + [48]) = *($0)
	*($6 + [40]) = (int_64)-3075276116954972160
	*($6 + [8]) = $2
	*($6) = $1
	*($6 + [16]) = $3
	*($6 + [24]) = $4
	*($6 + [32]) = $5
	CALL $87(($6 + [100]), ($6 + [48]), $0, ($6 + [40]), $6)
	*($6 + [84]) = $4
	$13 = CALL current_time()
	*($6 + [8]) = (int_64)0
	*($6) = ((int_64)((uint_64)$13 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL $88(($6 + [64]), $6, *($0), [1])
	CALL $89(($6 + [64]))
	
.LABEL $label$28
	$global$0 = ($6 + [128])
}

void .FUNC $82 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	*($1 + [24]) = *(*($3))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-15])
	CALL $90($5, $1)
	CALL db_update_i64(*($1 + [44]), $2, $4, [33])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9647])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $8([56])) + [40]) = $0
	CALL $200(($3 + [32]), $5)
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $91(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $80 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [15]) = $2
	CALL require_auth($1)
	$4 = ($0 + [112])
	$6 = *(($0 + [140]))
	$5 = *(($0 + [136]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$2 = ($6 + [-24])
	$7 = *($2)
	if ( (int_64)(*($7) == 0) ){ goto $label$3 }
	$6 = $2
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($7 + [40]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$2 = CALL db_find_i64(*($4), *(($0 + [120])), (int_64)7235159550573564928, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $81($4, $2)
	if ( ((int_32)*($7 + [40]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	$1 = *($0)
	*($3 + [8]) = ($3 + [15])
	if ( $7 ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL $82($4, $7, $1, ($3 + [8]))
	$global$0 = ($3 + [16])
}

int_32 .FUNC $182 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9670])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = ($5 - $7)
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $183($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + $2)
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$8 }
	CALL eosio_assert([0], [9674])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [1])
	$2 = (*($6) + [1])
	*($6) = $2
	$7 = ($7 + [1])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $149 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [208])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [200]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	CALL memcpy(($3 + [200]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$6
	CALL memcpy(($3 + [192]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$7
	CALL memcpy(($3 + [184]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$8
	CALL memcpy(($3 + [176]), $5, [8])
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$9
	$4 = ($2 + $4)
	CALL memcpy(($3 + [168]), $5, [8])
	$5 = ($2 + [40])
	if ( ((int_32)$6 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$10
	CALL memcpy(($3 + [160]), $5, [8])
	*(($3 + [32])) = $4
	*((($3 + [8]) + [40])) = $1
	*((($3 + [8]) + [48])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $1
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [48])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36]) = [4]
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [128])) = $1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $95(($3 + [8]), $0, *($3 + [192]), *($3 + [184]), *($3 + [176]), *($3 + [168]), *($3 + [160]))
	CALL $139(($3 + [8]))
	$global$0 = ($3 + [208])
}

void .FUNC $148 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$2 = ($global$0 - [288])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [184]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	CALL memcpy(($3 + [184]), $2, [8])
	*($3 + [176]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$6
	CALL memcpy(($3 + [176]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$7
	CALL memcpy(($3 + [168]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$8
	$4 = ($2 + $4)
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$9
	CALL memcpy(($3 + [152]), $5, [8])
	*(($3 + [24])) = $4
	*(($3 + [40])) = $1
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $1
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [40])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28]) = [4]
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [120])) = $1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	$0 = *($3 + [152])
	$1 = *($3 + [160])
	$7 = *($3 + [168])
	$8 = CALL current_time()
	*(($3 + [252])) = (int_64)0
	*(($3 + [268])) = (int_64)0
	*(($3 + [276])) = (int_64)0
	*($3 + [236]) = [0]
	*($3 + [240]) = [0]
	*($3 + [244 align=4]) = (int_64)0
	*($3 + [260 align=4]) = (int_64)0
	*($3 + [224]) = ((CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000)) + [60])
	*($3 + [216]) = (int_64)3617214756542218240
	*($3 + [208]) = *($3)
	*($3 + [200]) = (int_64)-3075276115167357552
	*($3 + [192]) = $7
	CALL $99(($3 + [260]), ($3 + [208]), $3, ($3 + [200]), ($3 + [192]))
	$7 = *($3)
	*($3 + [244]) = $1
	*($3 + [216]) = (int_64)0
	*($3 + [208]) = $0
	CALL $88(($3 + [224]), ($3 + [208]), $7, [1])
	CALL $89(($3 + [224]))
	CALL $139($3)
	$global$0 = ($3 + [288])
}

void .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9674])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9674])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9674])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($0 + [24])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9674])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9674])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9674])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9674])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $206(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9674])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9674])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9674])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $207(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9674])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9674])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9674])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$0) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	$0 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy(($2 + [15]), $0, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	*(($4 + [40])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9674])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9674])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9674])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [24])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9674])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = ($3 + [32])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	$3 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9674])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9674])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9674])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$0) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [15]), $0, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	*(($4 + [32])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9674])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [9674])
	$4 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy(($2 + [15]), $4, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	*(($0 + [24])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9674])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9674])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9674])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [24])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9674])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [32])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = ($3 + [40])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	$3 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9948])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9993])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10043])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [20]) & [1]) == 0) ){ goto $label$13 }
	CALL $10(*(($5 + [28])))
	
.LABEL $label$13
	$7 = *($5 + [8])
	if ( ($7 == 0) ){ goto $label$14 }
	*(($5 + [12])) = $7
	CALL $10($7)
	
.LABEL $label$14
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$2 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$15:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$16 }
	if ( ((*($8 + [20]) & [1]) == 0) ){ goto $label$17 }
	CALL $10(*(($8 + [28])))
	
.LABEL $label$17
	$7 = *($8 + [8])
	if ( ($7 == 0) ){ goto $label$18 }
	*(($8 + [12])) = $7
	CALL $10($7)
	
.LABEL $label$18
	CALL $10($8)
	
.LABEL $label$16
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$15 }
	
.LABEL $label$3
	*(($0 + [28])) = $2
	CALL db_remove_i64(*($1 + [52]))
}

void .FUNC $73 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL require_auth($1)
	$3 = ($0 + [72])
	$5 = *(($0 + [100]))
	$4 = *(($0 + [96]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [48]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [80])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $67($3, $6)
	if ( ((int_32)*($7 + [48]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [8707])
	if ( (int_64)(*($7 + [40]) == 0) ){ goto $label$5 }
	$8 = ($0 + [32])
	$9 = (int_64)0
	$10 = ($0 + [60])
	$11 = ($0 + [56])
	$12 = ($7 + [8])
	$13 = ($0 + [40])
	
.LOOP $label$6:
	$1 = *(*($12))
	$5 = *($10)
	$0 = *($11)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$11:
	$6 = ($5 + [-24])
	$4 = *($6)
	if ( ((int_64)*($4) == (int_64)$1) ){ goto $label$10 }
	$5 = $6
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$9 }
	if ( ((int_32)*($4 + [224]) == (int_32)$8) ){ goto $label$12 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$12
	if ( $4 ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	$4 = [0]
	$6 = CALL db_find_i64(*($8), *($13), (int_64)-4426587238800818176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$8 }
	$4 = CALL $40($8, $6)
	if ( ((int_32)*($4 + [224]) == (int_32)$8) ){ goto $label$7 }
	CALL eosio_assert([0], [9596])
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [9884])
	CALL eosio_assert([0], [9918])
	
.LABEL $label$7
	$6 = CALL db_next_i64(*($4 + [228]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$13 }
	CALL $40($8, $6)
	
.LABEL $label$13
	CALL $74($8, $4)
	$9 = ((int_64)$9 + (int_64)1)
	if ( (uint_64)($9 <= *(($7 + [40]))) ){ goto $label$6 }
	
.LABEL $label$5
	if ( $7 ){ goto $label$14 }
	CALL eosio_assert([0], [9884])
	CALL eosio_assert([0], [9918])
	
.LABEL $label$14
	$6 = CALL db_next_i64(*($7 + [52]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$15 }
	CALL $67($3, $6)
	
.LABEL $label$15
	CALL $72($3, $7)
	$global$0 = ($2 + [16])
}

void .FUNC $70 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	*($1 + [64]) = (int_64)0
	$5 = *($1)
	*($4 + [24]) = [0]
	*($4 + [8]) = ($4 + [24])
	$6 = ($1 + [8])
	*($4 + [36]) = $6
	*($4 + [32]) = $1
	$7 = ($1 + [16])
	*($4 + [40]) = $7
	$8 = ($1 + [24])
	*($4 + [44]) = $8
	$9 = ($1 + [36])
	*($4 + [48]) = $9
	$10 = ($1 + [38])
	*($4 + [52]) = $10
	$11 = ($1 + [40])
	*($4 + [56]) = $11
	$12 = ($1 + [42])
	*($4 + [60]) = $12
	$13 = ($1 + [44])
	*($4 + [64]) = $13
	$14 = ($1 + [56])
	*($4 + [68]) = $14
	$15 = ($1 + [64])
	*($4 + [72]) = $15
	$16 = ($1 + [72])
	*($4 + [76]) = $16
	$17 = ($1 + [80])
	*($4 + [80]) = $17
	$18 = ($1 + [88])
	*($4 + [84]) = $18
	$19 = ($1 + [100])
	*($4 + [88]) = $19
	$20 = ($1 + [112])
	*($4 + [92]) = $20
	$21 = ($1 + [128])
	*($4 + [96]) = $21
	$22 = ($1 + [200])
	*($4 + [100]) = $22
	$23 = ($1 + [212])
	*($4 + [104]) = $23
	CALL $186(($4 + [32]), ($4 + [8]))
	$24 = *($4 + [24])
	if ( ($24 <= [513]) ){ goto $label$4 }
	$3 = CALL $1($24)
	goto $label$3 
	
.LABEL $label$4
	$3 = ($3 - (($24 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($3 + $24)
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $6
	*($4 + [40]) = $7
	*($4 + [44]) = $8
	*($4 + [48]) = $9
	*($4 + [52]) = $10
	*($4 + [56]) = $11
	*($4 + [60]) = $12
	*($4 + [64]) = $13
	*($4 + [68]) = $14
	*($4 + [72]) = $15
	*($4 + [76]) = $16
	*($4 + [80]) = $17
	*($4 + [84]) = $18
	*($4 + [88]) = $19
	*($4 + [92]) = $20
	*($4 + [96]) = $21
	*($4 + [100]) = $22
	*($4 + [104]) = $23
	*($4 + [32]) = $1
	CALL $187(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $3, $24)
	if ( ((uint_32)$24 >= (uint_32)[513]) ){ goto $label$7 }
	if ( ((uint_64)$5 >= (uint_64)*($0 + [16])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $3($3)
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$5 }
	
.LABEL $label$6
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [112])
	return 
	
.LABEL $label$5
	$global$0 = ($4 + [112])
}

void .FUNC $71 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_64)$1 != (int_64)5384734615497336784) ){ goto $label$2 }
	CALL require_auth((int_64)5384734615497336784)
	goto $label$1 
	
.LABEL $label$2
	CALL require_auth($1)
	
.LABEL $label$1
	$3 = ($0 + [72])
	$5 = *(($0 + [100]))
	$4 = *(($0 + [96]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$5 }
	
.LOOP $label$7:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$6 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$5 }
	if ( ((int_32)*($7 + [48]) == (int_32)$3) ){ goto $label$8 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [80])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$7 = CALL $67($3, $6)
	if ( ((int_32)*($7 + [48]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [9884])
	CALL eosio_assert([0], [9918])
	
.LABEL $label$3
	$6 = CALL db_next_i64(*($7 + [52]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	CALL $67($3, $6)
	
.LABEL $label$9
	CALL $72($3, $7)
	$global$0 = ($2 + [16])
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	*($1 + [32]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$6 = *($4 + [4])
	$7 = ($1 + [12])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)*(($1 + [16]))) ){ goto $label$2 }
	*($7) = ($4 + [8])
	*($4) = *($6)
	goto $label$1 
	
.LABEL $label$2
	CALL $52(($1 + [8]), $6)
	
.LABEL $label$1
	$4 = [8]
	$6 = ($1 + [8])
	$7 = *($6)
	CALL prints([10147])
	CALL printui(*($7))
	*($1 + [40]) = (int_64)1
	$6 = *($6)
	$7 = *(($1 + [12]))
	$8 = ($7 - $6)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$4 }
	$4 = (($8 & [-8]) + $4)
	
.LABEL $label$4
	$6 = *($1 + [20])
	$6 = ( *(($1 + [24])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$4 = (($6 + $4) + [16])
	$9 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$5:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$5 }
	if ( ($4 <= [513]) ){ goto $label$7 }
	$2 = CALL $1($4)
	goto $label$6 
	
.LABEL $label$7
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$6
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	CALL $198($3, $1)
	$9 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($5 + [8]), (int_64)-6030912142679474176, *(*($0 + [8])), $9, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)$9 >= (uint_64)*($5 + [16])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $3($2)
	if ( (uint_64)($9 <= *($5 + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [16])
}

void .FUNC $77 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $31($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [28])))
	
.LABEL $label$11
	$2 = *($1 + [8])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($1 + [12])) = $2
	CALL $10($2)
	
.LABEL $label$12
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $10($4)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9948])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9993])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10043])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $123($5)
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $123($8)
	CALL $10($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [228]))
}

void .FUNC $75 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [64])
	$global$0 = $3
	*($3 + [8]) = $2
	*($3 + [16]) = $1
	CALL require_auth($1)
	$4 = ($0 + [72])
	$6 = *(($0 + [100]))
	$5 = *(($0 + [96]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [48]) == (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$5
	CALL eosio_assert([0], [8742])
	goto $label$1 
	
.LABEL $label$2
	$7 = CALL db_find_i64(*($4), *(($0 + [80])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$6 }
	if ( ((int_32)*(CALL $67($4, $7) + [48]) == (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$7
	CALL eosio_assert([0], [8742])
	goto $label$1 
	
.LABEL $label$6
	CALL eosio_assert([1], [8742])
	$1 = *($0)
	*($3 + [4]) = ($3 + [8])
	*($3) = ($3 + [16])
	*($3 + [56]) = $1
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$8 }
	CALL eosio_assert([0], [10096])
	
.LABEL $label$8
	*($3 + [32]) = $4
	*($3 + [36]) = $3
	*($3 + [40]) = ($3 + [56])
	*(($7 = CALL $8([64]))) = (int_64)0
	*($7 + [8 align=4]) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*($7 + [24 align=4]) = (int_64)0
	*($7 + [48]) = $4
	CALL $76(($3 + [32]), $7)
	*($3 + [48]) = $7
	$1 = *($7)
	*($3 + [32]) = $1
	$5 = *($7 + [52])
	*($3 + [28]) = $5
	$8 = ($0 + [100])
	$6 = *($8)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$11 }
	*($6 + [8]) = $1
	*($6 + [16]) = $5
	*($3 + [48]) = [0]
	*($6) = $7
	*($8) = ($6 + [24])
	$7 = *($3 + [48])
	*($3 + [48]) = [0]
	if ( ($7 == 0) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$11
	CALL $77(($0 + [96]), ($3 + [48]), ($3 + [32]), ($3 + [28]))
	$7 = *($3 + [48])
	*($3 + [48]) = [0]
	if ( ($7 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	if ( ((*($7 + [20]) & [1]) == 0) ){ goto $label$12 }
	CALL $10(*(($7 + [28])))
	
.LABEL $label$12
	$6 = *($7 + [8])
	if ( ($6 == 0) ){ goto $label$13 }
	*(($7 + [12])) = $6
	CALL $10($6)
	
.LABEL $label$13
	CALL $10($7)
	
.LABEL $label$9
	$4 = ($0 + [32])
	$1 = *($3 + [8])
	$6 = *(($0 + [60]))
	$8 = *(($0 + [56]))
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$17:
	$7 = ($6 + [-24])
	$5 = *($7)
	if ( ((int_64)*($5) == (int_64)$1) ){ goto $label$16 }
	$6 = $7
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$15 }
	if ( ((int_32)*($5 + [224]) == (int_32)$4) ){ goto $label$14 }
	CALL eosio_assert([0], [9596])
	goto $label$14 
	
.LABEL $label$15
	$5 = CALL $40($4, CALL $fimport$3(*($4), *(($0 + [40])), (int_64)-4426587238800818176, $1))
	if ( ((int_32)*($5 + [224]) == (int_32)$4) ){ goto $label$14 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$14
	CALL $78($0, *($3 + [8]), *($5 + [8]), *($5 + [16]), (int_64)120, (int_64)20, (int_64)1, *($3 + [16]), (int_64)0, (int_64)1, (int_64)3, (int_64)3, (int_64)1, (int_64)750, (int_64)350, (int_64)300, (int_64)0, (int_64)0)
	
.LABEL $label$1
	CALL prints([8774])
	CALL printn(*($3 + [16]))
	$global$0 = ($3 + [64])
}

void .FUNC $78 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6, int_64 $7, int_64 $8, int_64 $9, int_64 $10, int_64 $11, int_64 $12, int_64 $13, int_64 $14, int_64 $15, int_64 $16, int_64 $17)
{
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	$18 = ($global$0 - [208])
	$global$0 = $18
	*($18 + [192]) = $1
	*($18 + [200]) = $7
	*($18 + [184]) = $2
	*($18 + [176]) = $3
	*($18 + [168]) = $4
	*($18 + [160]) = $5
	*($18 + [152]) = $6
	*($18 + [144]) = $8
	*($18 + [136]) = $9
	*($18 + [128]) = $10
	*($18 + [120]) = $11
	*($18 + [112]) = $12
	*($18 + [104]) = $13
	*($18 + [96]) = $14
	*($18 + [88]) = $15
	*($18 + [80]) = $16
	*($18 + [72]) = $17
	$19 = ($0 + [32])
	$21 = *(($0 + [60]))
	$20 = *(($0 + [56]))
	if ( ((int_32)$20 == (int_32)$21) ){ goto $label$2 }
	
.LOOP $label$4:
	$22 = ($21 + [-24])
	$23 = *($22)
	if ( ((int_64)*($23) == (int_64)$1) ){ goto $label$3 }
	$21 = $22
	if ( ((int_32)$20 != (int_32)$22) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$20 == (int_32)$21) ){ goto $label$2 }
	if ( ((int_32)*($23 + [224]) == (int_32)$19) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$23 = [0]
	$22 = CALL db_find_i64(*($19), *(($0 + [40])), (int_64)-4426587238800818176, $1)
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$1 }
	$23 = CALL $40($19, $22)
	if ( ((int_32)*($23 + [224]) == (int_32)$19) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	$1 = *($0)
	*($18 + [28]) = $0
	*($18 + [4]) = ($18 + [176])
	*($18) = ($18 + [184])
	*($18 + [8]) = ($18 + [168])
	*($18 + [12]) = ($18 + [160])
	*($18 + [16]) = ($18 + [152])
	*($18 + [20]) = ($18 + [200])
	*($18 + [24]) = ($18 + [192])
	*($18 + [32]) = ($18 + [144])
	*($18 + [36]) = ($18 + [136])
	*($18 + [40]) = ($18 + [128])
	*($18 + [44]) = ($18 + [120])
	*($18 + [48]) = ($18 + [112])
	*($18 + [52]) = ($18 + [104])
	*($18 + [56]) = ($18 + [96])
	*($18 + [60]) = ($18 + [88])
	*($18 + [64]) = ($18 + [80])
	*($18 + [68]) = ($18 + [72])
	if ( $23 ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL $79($19, $23, $1, $18)
	$global$0 = ($18 + [208])
}

void .FUNC $79 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	*($1 + [16]) = *(*($3 + [4]))
	*($1 + [36]) = [1]
	*($1 + [38]) = *(*($3 + [8]))
	*($1 + [40]) = *(*($3 + [12]))
	*($1 + [56]) = *(*($3 + [16]))
	$6 = *($1)
	$7 = *($3 + [28])
	$8 = *(*($3 + [20]))
	*($1 + [64]) = (int_64)0
	*($1 + [80]) = $8
	*(($9 = ($1 + [28]))) = *($1 + [24])
	*(($10 = ($1 + [92]))) = *($1 + [88])
	*(($1 + [104])) = *($1 + [100])
	$11 = ($1 + [140])
	*(($1 + [144])) = *($11)
	*(($1 + [156])) = *(($1 + [152]))
	CALL $27(($1 + [128]), [9882])
	*(($1 + [164])) = *(*($3 + [24]))
	$12 = ($1 + [24])
	if ( (*($7 + [28]) == 0) ){ goto $label$3 }
	$13 = [0]
	$14 = ($1 + [32])
	
.LOOP $label$4:
	$8 = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($5 + [32]) = $8
	$15 = *($9)
	if ( ((uint_32)$15 >= (uint_32)*($14)) ){ goto $label$6 }
	*($15) = $8
	*($9) = ($15 + [8])
	goto $label$5 
	
.LABEL $label$6
	CALL $203($12, ($5 + [32]))
	
.LABEL $label$5
	$13 = ($13 + [1])
	if ( (($13 & [65535]) <= *(($7 + [28]))) ){ goto $label$4 }
	
.LABEL $label$3
	$7 = ($1 + [88])
	*($5 + [32]) = [0]
	$13 = *($10)
	if ( ((int_32)$13 == (int_32)*(($1 + [96]))) ){ goto $label$8 }
	*($13) = *($5 + [32])
	$13 = (*($10) + [2])
	*($10) = $13
	goto $label$7 
	
.LABEL $label$8
	CALL $204($7, ($5 + [32]))
	$13 = *($10)
	
.LABEL $label$7
	*($5 + [32]) = [1]
	if ( ((int_32)$13 == (int_32)*(($1 + [96]))) ){ goto $label$10 }
	*($13) = *($5 + [32])
	$13 = (*($10) + [2])
	*($10) = $13
	goto $label$9 
	
.LABEL $label$10
	CALL $204($7, ($5 + [32]))
	$13 = *($10)
	
.LABEL $label$9
	*($5 + [32]) = [2]
	if ( ((int_32)$13 == (int_32)*(($1 + [96]))) ){ goto $label$12 }
	*($13) = *($5 + [32])
	$13 = (*($10) + [2])
	*($10) = $13
	goto $label$11 
	
.LABEL $label$12
	CALL $204($7, ($5 + [32]))
	$13 = *($10)
	
.LABEL $label$11
	*($5 + [32]) = [3]
	if ( ((int_32)$13 == (int_32)*(($1 + [96]))) ){ goto $label$14 }
	*($13) = *($5 + [32])
	$13 = (*($10) + [2])
	*($10) = $13
	goto $label$13 
	
.LABEL $label$14
	CALL $204($7, ($5 + [32]))
	$13 = *($10)
	
.LABEL $label$13
	*($5 + [32]) = [4]
	if ( ((int_32)$13 == (int_32)*(($1 + [96]))) ){ goto $label$16 }
	*($13) = *($5 + [32])
	$13 = (*($10) + [2])
	*($10) = $13
	goto $label$15 
	
.LABEL $label$16
	CALL $204($7, ($5 + [32]))
	$13 = *($10)
	
.LABEL $label$15
	*($5 + [32]) = [5]
	if ( ((int_32)$13 == (int_32)*(($1 + [96]))) ){ goto $label$18 }
	*($13) = *($5 + [32])
	$13 = (*($10) + [2])
	*($10) = $13
	goto $label$17 
	
.LABEL $label$18
	CALL $204($7, ($5 + [32]))
	$13 = *($10)
	
.LABEL $label$17
	*($5 + [32]) = [6]
	if ( ((int_32)$13 == (int_32)*(($1 + [96]))) ){ goto $label$20 }
	*($13) = *($5 + [32])
	$13 = (*($10) + [2])
	*($10) = $13
	goto $label$19 
	
.LABEL $label$20
	CALL $204($7, ($5 + [32]))
	$13 = *($10)
	
.LABEL $label$19
	*($5 + [32]) = [7]
	if ( ((int_32)$13 == (int_32)*(($1 + [96]))) ){ goto $label$22 }
	*($13) = *($5 + [32])
	$13 = (*($10) + [2])
	*($10) = $13
	goto $label$21 
	
.LABEL $label$22
	CALL $204($7, ($5 + [32]))
	$13 = *($10)
	
.LABEL $label$21
	*($5 + [32]) = [8]
	if ( ((int_32)$13 == (int_32)*(($1 + [96]))) ){ goto $label$24 }
	*($13) = *($5 + [32])
	*($10) = (*($10) + [2])
	goto $label$23 
	
.LABEL $label$24
	CALL $204($7, ($5 + [32]))
	
.LABEL $label$23
	$14 = ($1 + [100])
	*(($13 = *(($1 + [88]))) + [1]) = *(*($3 + [32]))
	*(($13 + [3])) = *(*($3 + [36]))
	*(($13 + [7])) = *(*($3 + [40]))
	*(($13 + [9])) = *(*($3 + [44]))
	*(($13 + [11])) = *(*($3 + [48]))
	*($5 + [32]) = (int_64)0
	$10 = ($1 + [108])
	$13 = *($10)
	$9 = ($1 + [104])
	$15 = *($9)
	if ( ((uint_32)$15 >= (uint_32)$13) ){ goto $label$30 }
	*($15) = (int_64)0
	$15 = ($15 + [8])
	*($9) = $15
	$8 = (int_64)0
	*($5 + [32]) = (int_64)0
	if ( ($15 <= $13) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	CALL $203($14, ($5 + [32]))
	$13 = *($10)
	$15 = *($9)
	$8 = (int_64)0
	*($5 + [32]) = (int_64)0
	if ( ((uint_32)$15 >= (uint_32)$13) ){ goto $label$28 }
	
.LABEL $label$29
	*($15) = $8
	$15 = ($15 + [8])
	*(($1 + [104])) = $15
	$8 = (int_64)0
	*($5 + [32]) = (int_64)0
	if ( ((uint_32)$15 >= (uint_32)$13) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	CALL $203($14, ($5 + [32]))
	$13 = *(($1 + [108]))
	$15 = *(($1 + [104]))
	$8 = (int_64)0
	*($5 + [32]) = (int_64)0
	if ( ($15 <= $13) ){ goto $label$26 }
	
.LABEL $label$27
	CALL $203($14, ($5 + [32]))
	goto $label$25 
	
.LABEL $label$26
	*($15) = $8
	*(($1 + [104])) = ($15 + [8])
	
.LABEL $label$25
	*(($13 = *($14))) = *(*($3 + [52]))
	*($13 + [8]) = *(*($3 + [56]))
	*($13 + [16]) = *(*($3 + [60]))
	if ( ((int_32)*([0] + [8500]) == (int_32)*([0] + [8496])) ){ goto $label$31 }
	$8 = (int_64)0
	$9 = ($1 + [148])
	$13 = ($1 + [144])
	
.LOOP $label$32:
	*($5 + [32]) = [0]
	$15 = *($13)
	if ( ((uint_32)$15 >= (uint_32)*($9)) ){ goto $label$34 }
	*($15) = [0]
	*($13) = (*($13) + [1])
	goto $label$33 
	
.LABEL $label$34
	CALL $106($11, ($5 + [32]))
	
.LABEL $label$33
	$8 = ((int_64)$8 + (int_64)1)
	if ( (uint_64)($8 <= (CASTING uint_64)(uint_32 ((int_32)(*([0] + [8500]) - *([0] + [8496])) / (int_32)[48]))) ){ goto $label$32 }
	
.LABEL $label$31
	$9 = ($1 + [64])
	$10 = ($1 + [56])
	$11 = ($1 + [40])
	$16 = ($1 + [38])
	$17 = ($1 + [16])
	$18 = ($1 + [8])
	$19 = ($1 + [36])
	*(*(($13 = ($1 + [140])))) = *(*($3 + [64]))
	*(*($13) + [1]) = *(*($3 + [68]))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$35 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$35
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [36]) = $18
	*($5 + [40]) = $17
	*($5 + [44]) = $12
	*($5 + [48]) = $19
	*($5 + [52]) = $16
	*($5 + [56]) = $11
	*($5 + [68]) = $10
	*($5 + [72]) = $9
	*($5 + [84]) = $7
	*($5 + [88]) = $14
	*($5 + [32]) = $1
	$3 = ($1 + [42])
	*($5 + [60]) = $3
	$20 = ($1 + [44])
	*($5 + [64]) = $20
	$21 = ($1 + [72])
	*($5 + [76]) = $21
	$22 = ($1 + [80])
	*($5 + [80]) = $22
	$23 = ($1 + [112])
	*($5 + [92]) = $23
	$24 = ($1 + [128])
	*($5 + [96]) = $24
	$25 = ($1 + [200])
	*($5 + [100]) = $25
	$26 = ($1 + [212])
	*($5 + [104]) = $26
	CALL $186(($5 + [32]), ($5 + [8]))
	$15 = *($5 + [24])
	if ( ($15 <= [513]) ){ goto $label$37 }
	$13 = CALL $1($15)
	goto $label$36 
	
.LABEL $label$37
	$13 = ($4 - (($15 + [15]) & [-16]))
	$global$0 = $13
	
.LABEL $label$36
	*($5 + [12]) = $13
	*($5 + [8]) = $13
	*($5 + [16]) = ($13 + $15)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $18
	*($5 + [40]) = $17
	*($5 + [44]) = $12
	*($5 + [48]) = $19
	*($5 + [52]) = $16
	*($5 + [56]) = $11
	*($5 + [60]) = $3
	*($5 + [64]) = $20
	*($5 + [68]) = $10
	*($5 + [72]) = $9
	*($5 + [76]) = $21
	*($5 + [80]) = $22
	*($5 + [84]) = $7
	*($5 + [88]) = $14
	*($5 + [92]) = $23
	*($5 + [96]) = $24
	*($5 + [100]) = $25
	*($5 + [104]) = $26
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $13, $15)
	if ( ((uint_32)$15 >= (uint_32)[513]) ){ goto $label$40 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	CALL $3($13)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$38 }
	
.LABEL $label$39
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$38
	$global$0 = ($5 + [112])
}

void .FUNC $98 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	float_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = *($1)
	CALL eosio_assert(((int_32)*((*($1 + [88]) + [3])) != (int_32)[0]), [10164])
	CALL eosio_assert(((int_64)*(*($3)) != (int_64)0), [10212])
	CALL eosio_assert(((uint_64)*(*($1 + [100])) >= (uint_64)((int_64)*(*($3)) * (int_64)*(*((*([0] + [8496]) + ((int_32)*(*($3 + [4])) * (int_32)[48])) + [16])))), [9110])
	CALL eosio_assert(((uint_64)*(*($1 + [100]) + [8]) >= (uint_64)((int_64)*(*($3)) * (int_64)*(*((*([0] + [8496]) + ((int_32)*(*($3 + [4])) * (int_32)[48])) + [16]) + [2]))), [9127])
	CALL eosio_assert(((uint_64)*(*($1 + [100]) + [16]) >= (uint_64)((int_64)*(*($3)) * (int_64)*(*((*([0] + [8496]) + ((int_32)*(*($3 + [4])) * (int_32)[48])) + [16]) + [4]))), [9147])
	$3 = *($3 + [4])
	$9 = (*([0] + [8496]) + ((int_32)*($3) * (int_32)[48]))
	$10 = *($9 + [16])
	$8 = *($3)
	*(($7 = *($1 + [100]))) = (int_64))(*($7) - ((int_64)*($8) * (int_64)*($10)))
	*($7 + [8]) = (int_64))(*($7 + [8]) - ((int_64)*($8) * (int_64)*($10 + [2])))
	*($7 + [16]) = (int_64))(*($7 + [16]) - ((int_64)*($8) * (int_64)*($10 + [4])))
	$11 = ((float_64)(CASTING float_64)(uint_64 ((int_64)*($8) * (int_64)*($9 + [32]))) * (float_64)(float_64)0.1)
	if ( (((float_64)$11 < (float_64)(float_64)18446744073709551615) & ((float_64)$11 >= (float_64)(float_64)0)) ){ goto $label$4 }
	$12 = (int_64)0
	goto $label$3 
	
.LABEL $label$4
	$12 = (Rounds 0)($11)
	
.LABEL $label$3
	*($3 + [8]) = $12
	$8 = ($1 + [216])
	$7 = *($8)
	if ( ((int_32)$7 == (int_32)*(($1 + [220]))) ){ goto $label$7 }
	*($7) = *($3)
	*(($7 + [24])) = *(($3 + [24]))
	*(($7 + [16])) = *(($3 + [16]))
	*(($7 + [8])) = *(($3 + [8]))
	*($8) = (*($8) + [32])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	CALL $202(($1 + [212]), $3)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [9811])
	
.LABEL $label$5
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [32]) = $1
	$8 = ($1 + [8])
	*($5 + [36]) = $8
	$10 = ($1 + [16])
	*($5 + [40]) = $10
	$9 = ($1 + [24])
	*($5 + [44]) = $9
	$13 = ($1 + [36])
	*($5 + [48]) = $13
	$14 = ($1 + [38])
	*($5 + [52]) = $14
	$15 = ($1 + [40])
	*($5 + [56]) = $15
	$16 = ($1 + [42])
	*($5 + [60]) = $16
	$17 = ($1 + [44])
	*($5 + [64]) = $17
	$18 = ($1 + [56])
	*($5 + [68]) = $18
	$19 = ($1 + [64])
	*($5 + [72]) = $19
	$20 = ($1 + [72])
	*($5 + [76]) = $20
	$21 = ($1 + [80])
	*($5 + [80]) = $21
	$22 = ($1 + [88])
	*($5 + [84]) = $22
	$23 = ($1 + [100])
	*($5 + [88]) = $23
	$24 = ($1 + [112])
	*($5 + [92]) = $24
	$25 = ($1 + [128])
	*($5 + [96]) = $25
	$26 = ($1 + [200])
	*($5 + [100]) = $26
	$27 = ($1 + [212])
	*($5 + [104]) = $27
	CALL $186(($5 + [32]), ($5 + [8]))
	$7 = *($5 + [24])
	if ( ($7 <= [513]) ){ goto $label$9 }
	$3 = CALL $1($7)
	goto $label$8 
	
.LABEL $label$9
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$8
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $7)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $8
	*($5 + [40]) = $10
	*($5 + [44]) = $9
	*($5 + [48]) = $13
	*($5 + [52]) = $14
	*($5 + [56]) = $15
	*($5 + [60]) = $16
	*($5 + [64]) = $17
	*($5 + [68]) = $18
	*($5 + [72]) = $19
	*($5 + [76]) = $20
	*($5 + [80]) = $21
	*($5 + [84]) = $22
	*($5 + [88]) = $23
	*($5 + [92]) = $24
	*($5 + [96]) = $25
	*($5 + [100]) = $26
	*($5 + [104]) = $27
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $3, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $3($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [112])
}

void .FUNC $99 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $8(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $31($0)
	
.LABEL $label$1
	*(($6 = ($5 + ((int_32)$6 * (int_32)[40])))) = *($2)
	*($6 + [8]) = *($3)
	*($6 + [16 align=4]) = (int_64)0
	*(($3 = ($6 + [24]))) = [0]
	$2 = CALL $8([16])
	*($6 + [16]) = $2
	*($6 + [28 align=4]) = (int_64)0
	*(($6 + [36])) = [0]
	$7 = ($2 + [16])
	*($3) = $7
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($6 + [20])) = $7
	CALL $93(($6 + [28]), [8])
	$2 = ((int_32)$8 * (int_32)[40])
	$8 = *($6 + [28])
	if ( ((int_32)(*(($6 + [32])) - $8) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9590])
	
.LABEL $label$5
	$9 = ($5 + $2)
	CALL memcpy($8, $4, [8])
	$10 = ($6 + [40])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$7 }
	$11 = ($2 - $7)
	$1 = [0]
	
.LOOP $label$8:
	$8 = ($7 + $1)
	*((($2 = ($6 + $1)) + [-32])) = *(($8 + [-32]))
	*(($2 + [-40])) = *(($8 + [-40]))
	*(($5 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($8 + [-24])
	*($5) = *($4)
	$5 = ($8 + [-16])
	*($3) = *($5)
	*($5) = [0]
	*(($5 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($8 + [-12])
	*($5) = *($3)
	*($4) = (int_64)0
	$8 = ($8 + [-4])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$8 }
	$6 = ($6 + $1)
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$6 
	
.LABEL $label$7
	$5 = $2
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$8 = *(($2 + [-12]))
	if ( ($8 == 0) ){ goto $label$11 }
	*(($2 + [-8])) = $8
	CALL $10($8)
	
.LABEL $label$11
	$8 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$12 }
	*(($2 + [-20])) = $1
	CALL $10($1)
	
.LABEL $label$12
	$2 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ($5 == 0) ){ goto $label$13 }
	CALL $10($5)
	
.LABEL $label$13
	(unreachable)
}

int_32 .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $166($0, $1)
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $167($0, $6)
	$6 = ($6 + [40])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [40])) - *($1 + [36])) / (int_32)[40]))
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9590])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$6 = *(($1 + [40]))
	$4 = *(($1 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $167($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = CALL $168($0, ($1 + [48]))
	$global$0 = ($2 + [16])
	return $4
}

void .FUNC $95 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$7 = ($global$0 - [48])
	$global$0 = $7
	*($7 + [32]) = $4
	*($7 + [40]) = $3
	*($7 + [24]) = $5
	*($7 + [16]) = $6
	$8 = ($0 + [32])
	$10 = *(($0 + [60]))
	$9 = *(($0 + [56]))
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$2 }
	
.LOOP $label$4:
	$11 = ($10 + [-24])
	$12 = *($11)
	if ( ((int_64)*($12) == (int_64)$2) ){ goto $label$3 }
	$10 = $11
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$2 }
	if ( ((int_32)*($12 + [224]) == (int_32)$8) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$12 = [0]
	$11 = CALL db_find_i64(*($8), *(($0 + [40])), (int_64)-4426587238800818176, $2)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$1 }
	$12 = CALL $40($8, $11)
	if ( ((int_32)*($12 + [224]) == (int_32)$8) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	$2 = *($0)
	*($7 + [4]) = ($7 + [40])
	*($7) = ($7 + [32])
	*($7 + [8]) = ($7 + [24])
	*($7 + [12]) = ($7 + [16])
	if ( $12 ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL $96($8, $12, $2, $7)
	$global$0 = ($7 + [48])
}

void .FUNC $96 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *($3)
	$8 = *($7)
	if ( ((int_64)$8 == (int_64)0) ){ goto $label$9 }
	$9 = (int_64)2
	if ( ((int_64)$8 == (int_64)2) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$8 = *(*($3 + [4]))
	if ( ((int_64)$8 == (int_64)2) ){ goto $label$10 }
	if ( ((int_64)$8 != (int_64)1) ){ goto $label$11 }
	*((*($1 + [100]) + (*(*($3 + [8])) << [3]))) = *(*($3 + [12]))
	
.LABEL $label$11
	$9 = (int_64)2
	$8 = *($7)
	if ( ((int_64)$8 != (int_64)2) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$10
	*(($10 = (*($1 + [100]) + (*(*($3 + [8])) << [3])))) = ((int_64)*($10) + (int_64)*(*($3 + [12])))
	$9 = (int_64)2
	$8 = *($7)
	if ( ((int_64)$8 != (int_64)2) ){ goto $label$7 }
	
.LABEL $label$8
	$8 = *(*($3 + [4]))
	if ( ((int_64)$8 == (int_64)$9) ){ goto $label$12 }
	if ( ((int_64)$8 != (int_64)1) ){ goto $label$6 }
	*((*(($1 + [140])) + *(*($3 + [8])))) = *(*($3 + [12]))
	goto $label$6 
	
.LABEL $label$12
	*(($7 = (*(($1 + [140])) + *(*($3 + [8]))))) = (*($7) + *(*($3 + [12])))
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$7
	if ( ((int_64)$8 != (int_64)1) ){ goto $label$6 }
	$8 = *(*($3 + [4]))
	if ( ((int_64)$8 == (int_64)2) ){ goto $label$5 }
	if ( ((int_64)$8 != (int_64)1) ){ goto $label$6 }
	*((*($1 + [88]) + (*(*($3 + [8])) << [1])) + [1]) = *(*($3 + [12]))
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	*(($7 = (*($1 + [88]) + (*(*($3 + [8])) << [1]))) + [1]) = (*($7 + [1]) + *(*($3 + [12])))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [9811])
	
.LABEL $label$3
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [32]) = $1
	$10 = ($1 + [8])
	*($5 + [36]) = $10
	$11 = ($1 + [16])
	*($5 + [40]) = $11
	$12 = ($1 + [24])
	*($5 + [44]) = $12
	$13 = ($1 + [36])
	*($5 + [48]) = $13
	$14 = ($1 + [38])
	*($5 + [52]) = $14
	$15 = ($1 + [40])
	*($5 + [56]) = $15
	$16 = ($1 + [42])
	*($5 + [60]) = $16
	$17 = ($1 + [44])
	*($5 + [64]) = $17
	$18 = ($1 + [56])
	*($5 + [68]) = $18
	$19 = ($1 + [64])
	*($5 + [72]) = $19
	$20 = ($1 + [72])
	*($5 + [76]) = $20
	$21 = ($1 + [80])
	*($5 + [80]) = $21
	$22 = ($1 + [88])
	*($5 + [84]) = $22
	$23 = ($1 + [100])
	*($5 + [88]) = $23
	$24 = ($1 + [112])
	*($5 + [92]) = $24
	$25 = ($1 + [128])
	*($5 + [96]) = $25
	$26 = ($1 + [200])
	*($5 + [100]) = $26
	$27 = ($1 + [212])
	*($5 + [104]) = $27
	CALL $186(($5 + [32]), ($5 + [8]))
	$7 = *($5 + [24])
	if ( ($7 <= [513]) ){ goto $label$14 }
	$3 = CALL $1($7)
	goto $label$13 
	
.LABEL $label$14
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$13
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $7)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $10
	*($5 + [40]) = $11
	*($5 + [44]) = $12
	*($5 + [48]) = $13
	*($5 + [52]) = $14
	*($5 + [56]) = $15
	*($5 + [60]) = $16
	*($5 + [64]) = $17
	*($5 + [68]) = $18
	*($5 + [72]) = $19
	*($5 + [76]) = $20
	*($5 + [80]) = $21
	*($5 + [84]) = $22
	*($5 + [88]) = $23
	*($5 + [92]) = $24
	*($5 + [96]) = $25
	*($5 + [100]) = $26
	*($5 + [104]) = $27
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $3, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$17 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $3($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$15 }
	
.LABEL $label$16
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$15
	$global$0 = ($5 + [112])
}

void .FUNC $97 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$6 = ($global$0 - [144])
	$global$0 = $6
	*($6 + [40]) = $4
	CALL require_auth($1)
	$7 = ($0 + [32])
	$9 = *(($0 + [60]))
	$8 = *(($0 + [56]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$2 }
	
.LOOP $label$4:
	$10 = ($9 + [-24])
	$11 = *($10)
	if ( ((int_64)*($11) == (int_64)$2) ){ goto $label$3 }
	$9 = $10
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$2 }
	if ( ((int_32)*($11 + [224]) == (int_32)$7) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$11 = [0]
	$10 = CALL db_find_i64(*($7), *(($0 + [40])), (int_64)-4426587238800818176, $2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$1 }
	$11 = CALL $40($7, $10)
	if ( ((int_32)*($11 + [224]) == (int_32)$7) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)*($11 + [56]) != (int_32)[0]), [8808])
	CALL eosio_assert((int_64)(*($11 + [64]) == 0), [8827])
	CALL eosio_assert(((int_64)*($11 + [80]) == (int_64)$1), [8900])
	*($6 + [16]) = (int_64)0
	$1 = CALL current_time()
	*($6 + [32]) = $4
	*($6 + [8]) = $3
	*($6 + [24]) = ((int_64)((uint_64)$1 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$1 = *($0)
	*($6 + [84]) = ($6 + [8])
	*($6 + [80]) = ($6 + [40])
	if ( $11 ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL $98($7, $11, $1, ($6 + [80]))
	$1 = *(($6 + [16]))
	if ( (int_64)($1 == 0) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$6 }
	$4 = CALL current_time()
	$3 = CALL current_time()
	*(($6 + [108])) = (int_64)0
	*(($6 + [124])) = (int_64)0
	*(($6 + [132])) = (int_64)0
	*($6 + [92]) = [0]
	*($6 + [96]) = [0]
	*($6 + [100 align=4]) = (int_64)0
	*($6 + [116 align=4]) = (int_64)0
	*($6 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$3 / (uint_64)(int_64)1000000)) + [60])
	*($6 + [72]) = (int_64)3617214756542218240
	*($6 + [64]) = *($0)
	*($6 + [56]) = (int_64)-3075276115167357552
	*($6 + [48]) = $2
	CALL $99(($6 + [116]), ($6 + [64]), $0, ($6 + [56]), ($6 + [48]))
	$2 = *($0)
	*($6 + [100]) = ((CASTING uint_32)(uint_64 $1) + [10])
	*($6 + [72]) = (int_64)0
	*($6 + [64]) = ((int_64)((uint_64)$4 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL $88(($6 + [80]), ($6 + [64]), $2, [1])
	CALL $89(($6 + [80]))
	
.LABEL $label$6
	$global$0 = ($6 + [144])
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9590])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9590])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [15]) = *($1 + [24])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [9590])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($3) + [1])
	*($3) = $4
	$1 = ($1 + [32])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9590])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $1, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $91 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $31($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $8($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $31($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $10($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $138 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$3 = ($global$0 - [272])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [192]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [172]) = $2
	*($4 + [168]) = $2
	*($4 + [176]) = ($2 + $7)
	*($4 + [256]) = ($4 + [168])
	*($4 + [16]) = ($4 + [184])
	CALL $141(($4 + [16]), ($4 + [256]))
	*(($3 = ($4 + [8]))) = *($4 + [176])
	*($4) = *($4 + [168])
	$3 = *($3)
	*((($4 + [224]) + [8])) = $3
	*(($8 = (($4 + [240]) + [8]))) = $3
	$9 = *($4)
	*($4 + [240]) = $9
	*($4 + [224]) = $9
	$3 = *($8)
	*((($4 + [256]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$9 = *($4 + [240])
	*($4 + [32]) = $9
	*($4 + [256]) = $9
	*(($4 + [56])) = $1
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $1
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $1
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*($4 + [48]) = $0
	*($4 + [44]) = [4]
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [216])
	$1 = *($4 + [208])
	$9 = *($4 + [200])
	$10 = *($4 + [192])
	$11 = *($4 + [184])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $11), (int_64 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	CALL $139(($4 + [16]))
	$global$0 = ($4 + [272])
	return [1]
}

int_32 .FUNC $139 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *(($0 + [136]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [140])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $10($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [136]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$1
	$2 = *(($0 + [96]))
	if ( ($2 == 0) ){ goto $label$6 }
	$5 = ($0 + [100])
	$4 = *($5)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($3 + [28])))
	
.LABEL $label$11
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$12 }
	*(($3 + [12])) = $1
	CALL $10($1)
	
.LABEL $label$12
	CALL $10($3)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [96]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $2
	
.LABEL $label$7
	*($5) = $2
	CALL $10($3)
	
.LABEL $label$6
	$1 = *(($0 + [56]))
	if ( ($1 == 0) ){ goto $label$13 }
	$2 = ($0 + [60])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$15 }
	
.LOOP $label$16:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$17 }
	CALL $123($4)
	CALL $10($4)
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$16 }
	$3 = *(($0 + [56]))
	goto $label$14 
	
.LABEL $label$15
	$3 = $1
	
.LABEL $label$14
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$13
	return $0
}

int_32 .FUNC $130 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [272])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [200]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [216]) = [0]
	*($4 + [180]) = $2
	*($4 + [176]) = $2
	*($4 + [184]) = ($2 + $7)
	*($4 + [256]) = ($4 + [176])
	*($4 + [24]) = ($4 + [192])
	CALL $143(($4 + [24]), ($4 + [256]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [184])
	*($4 + [8]) = *($4 + [176])
	$3 = *($3)
	*((($4 + [224]) + [8])) = $3
	*(($8 = (($4 + [240]) + [8]))) = $3
	$9 = *($4 + [8])
	*($4 + [240]) = $9
	*($4 + [224]) = $9
	$3 = *($8)
	*((($4 + [256]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$9 = *($4 + [240])
	*($4 + [40]) = $9
	*($4 + [256]) = $9
	*(($4 + [64])) = $1
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $1
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $1
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*($4 + [56]) = $0
	*($4 + [52]) = [4]
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$8 = *($4 + [216])
	$0 = *($4 + [208])
	$1 = *($4 + [200])
	$9 = *($4 + [192])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $9), (int_64 $1), (int_64 $0), (int_64 ((int_32)($8 & [255]) != (int_32)[0])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	CALL $139(($4 + [24]))
	$global$0 = ($4 + [272])
	return [1]
}

int_32 .FUNC $131 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [160])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [152]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	CALL memcpy(($4 + [152]), $2, [8])
	*(($4 + [20])) = ($2 + [8])
	*(($4 + [24])) = $3
	*(($4 + [40])) = $1
	*(($4 + [48])) = (int_64)-1
	*(($4 + [56])) = (int_64)0
	*(($4 + [64])) = [0]
	*(($4 + [80])) = $1
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [28]) = [4]
	*($4 + [32]) = $0
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [120])) = $1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *($4 + [152])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $3($2)
	
.LABEL $label$7
	CALL $139($4)
	$global$0 = ($4 + [160])
	return [1]
}

int_32 .FUNC $132 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [176])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [168]) = (int_64)0
	*($4 + [160]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [160]) + [8])
	CALL memcpy(($4 + [160]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [32])) = $3
	*(($4 + [48])) = $1
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $1
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [16])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [36]) = [4]
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [128])) = $1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *((($4 + [160]) + [8]))
	$1 = *($4 + [160])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $3($2)
	
.LABEL $label$8
	CALL $139(($4 + [8]))
	$global$0 = ($4 + [176])
	return [1]
}

int_32 .FUNC $133 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [272])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [200]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [180]) = $2
	*($4 + [176]) = $2
	*($4 + [184]) = ($2 + $7)
	*($4 + [256]) = ($4 + [176])
	*($4 + [24]) = ($4 + [192])
	CALL $145(($4 + [24]), ($4 + [256]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [184])
	*($4 + [8]) = *($4 + [176])
	$3 = *($3)
	*((($4 + [224]) + [8])) = $3
	*(($8 = (($4 + [240]) + [8]))) = $3
	$9 = *($4 + [8])
	*($4 + [240]) = $9
	*($4 + [224]) = $9
	$3 = *($8)
	*((($4 + [256]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$9 = *($4 + [240])
	*($4 + [40]) = $9
	*($4 + [256]) = $9
	*(($4 + [64])) = $1
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $1
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $1
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*($4 + [56]) = $0
	*($4 + [52]) = [4]
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [216])
	$1 = *($4 + [208])
	$9 = *($4 + [200])
	$10 = *($4 + [192])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	CALL $139(($4 + [24]))
	$global$0 = ($4 + [272])
	return [1]
}

int_32 .FUNC $134 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	$3 = ($global$0 - [304])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [200]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [232]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [248]) = (int_64)0
	*($4 + [180]) = $2
	*($4 + [176]) = $2
	*($4 + [184]) = ($2 + $7)
	*($4 + [288]) = ($4 + [176])
	*($4 + [24]) = ($4 + [192])
	CALL $144(($4 + [24]), ($4 + [288]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [184])
	*($4 + [8]) = *($4 + [176])
	$3 = *($3)
	*((($4 + [256]) + [8])) = $3
	*(($8 = (($4 + [272]) + [8]))) = $3
	$9 = *($4 + [8])
	*($4 + [272]) = $9
	*($4 + [256]) = $9
	$3 = *($8)
	*((($4 + [288]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$9 = *($4 + [272])
	*($4 + [40]) = $9
	*($4 + [288]) = $9
	*(($4 + [64])) = $1
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $1
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $1
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*($4 + [56]) = $0
	*($4 + [52]) = [4]
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [248])
	$1 = *($4 + [240])
	$9 = *($4 + [232])
	$10 = *($4 + [224])
	$11 = *($4 + [216])
	$12 = *($4 + [208])
	$13 = *($4 + [200])
	$14 = *($4 + [192])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $14), (int_64 $13), (int_64 $12), (int_64 $11), (int_64 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	CALL $139(($4 + [24]))
	$global$0 = ($4 + [304])
	return [1]
}

int_32 .FUNC $135 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	$3 = ($global$0 - [320])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [200]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [232]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [248]) = (int_64)0
	*($4 + [256]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [180]) = $2
	*($4 + [176]) = $2
	*($4 + [184]) = ($2 + $7)
	*($4 + [304]) = ($4 + [176])
	*($4 + [24]) = ($4 + [192])
	CALL $147(($4 + [24]), ($4 + [304]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [184])
	*($4 + [8]) = *($4 + [176])
	$3 = *($3)
	*((($4 + [272]) + [8])) = $3
	*(($8 = (($4 + [288]) + [8]))) = $3
	$9 = *($4 + [8])
	*($4 + [288]) = $9
	*($4 + [272]) = $9
	$3 = *($8)
	*((($4 + [304]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$9 = *($4 + [288])
	*($4 + [40]) = $9
	*($4 + [304]) = $9
	*(($4 + [64])) = $1
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $1
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $1
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*($4 + [56]) = $0
	*($4 + [52]) = [4]
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [264])
	$1 = *($4 + [256])
	$9 = *($4 + [248])
	$10 = *($4 + [240])
	$11 = *($4 + [232])
	$12 = *($4 + [224])
	$13 = *($4 + [216])
	$14 = *($4 + [208])
	$15 = *($4 + [200])
	$16 = *($4 + [192])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $16), (int_64 $15), (int_64 $14), (int_64 $13), (int_64 $12), (int_64 $11), (int_64 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	CALL $139(($4 + [24]))
	$global$0 = ($4 + [320])
	return [1]
}

int_32 .FUNC $136 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [176])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [168]) = [0]
	*($4 + [160]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$4
	$3 = ($2 + $7)
	CALL memcpy(($4 + [160]), $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	CALL memcpy(($4 + [8]), $8, [1])
	$8 = *($4 + [8])
	*((($4 + [160]) + [8])) = ((int_32)$8 != (int_32)[0])
	*(($4 + [32])) = $3
	*(($4 + [48])) = $1
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $1
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [9])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [36]) = [4]
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [128])) = $1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($4 + [160])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 ((int_32)$8 != (int_32)[0])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $3($2)
	
.LABEL $label$7
	CALL $139(($4 + [8]))
	$global$0 = ($4 + [176])
	return [1]
}

int_32 .FUNC $137 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [272])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [192]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [216]) = [0]
	*($4 + [172]) = $2
	*($4 + [168]) = $2
	*($4 + [176]) = ($2 + $7)
	*($4 + [256]) = ($4 + [168])
	*($4 + [16]) = ($4 + [184])
	CALL $140(($4 + [16]), ($4 + [256]))
	*(($3 = ($4 + [8]))) = *($4 + [176])
	*($4) = *($4 + [168])
	$3 = *($3)
	*((($4 + [224]) + [8])) = $3
	*(($8 = (($4 + [240]) + [8]))) = $3
	$9 = *($4)
	*($4 + [240]) = $9
	*($4 + [224]) = $9
	$3 = *($8)
	*((($4 + [256]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$9 = *($4 + [240])
	*($4 + [32]) = $9
	*($4 + [256]) = $9
	*(($4 + [56])) = $1
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $1
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $1
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*($4 + [48]) = $0
	*($4 + [44]) = [4]
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$8 = *($4 + [216])
	$0 = *($4 + [208])
	$1 = *($4 + [200])
	$9 = *($4 + [192])
	$10 = *($4 + [184])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 ((int_32)($8 & [255]) != (int_32)[0])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	CALL $139(($4 + [16]))
	$global$0 = ($4 + [272])
	return [1]
}

void .FUNC $208 ()
{
	int_32 $0
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$0 = ($global$0 - [144])
	$global$0 = $0
	*(($1 = CALL $8([6])) + [4]) = [0]
	*($1) = [1966230]
	*(($2 = CALL $8([6])) + [4]) = [0]
	*($2) = [9830600]
	*(($3 = CALL $8([6])) + [4]) = [150]
	*($3) = [49152400]
	*([0] + [8496 align=4]) = (int_64)0
	*([0] + [8504]) = [0]
	$4 = CALL $8([144])
	*([0] + [8496]) = $4
	*([0] + [8500]) = $4
	*($4) = (int_64)0
	*($4 + [8]) = [9830500]
	*($4 + [12]) = [20]
	*($4 + [16 align=4]) = (int_64)0
	*($4 + [24]) = [0]
	*([0] + [8504]) = ($4 + [144])
	$5 = CALL $8([6])
	*($4 + [16]) = $5
	*($4 + [20]) = $5
	*($4 + [24]) = ($5 + [6])
	CALL memcpy($5, $1, [6])
	*($4 + [32]) = (int_64)60
	*($4 + [40]) = [655365]
	*($4 + [44]) = [100]
	*($4 + [20]) = (*($4 + [20]) + [6])
	$4 = *([0] + [8500])
	*([0] + [8500]) = ($4 + [48])
	*($4 + [48]) = (int_64)0
	*(($4 + [56])) = [16384010]
	*(($4 + [60])) = [500]
	*(($6 = ($4 + [64]))) = (int_64)0
	*(($7 = ($4 + [72]))) = [0]
	$5 = CALL $8([6])
	*($6) = $5
	*(($6 = ($4 + [68]))) = $5
	*($7) = ($5 + [6])
	CALL memcpy($5, $2, [6])
	*(($4 + [80])) = (int_64)180
	*(($4 + [88])) = [655440]
	*(($4 + [92])) = [100]
	*($6) = (*($6) + [6])
	$4 = *([0] + [8500])
	*([0] + [8500]) = ($4 + [48])
	*($4 + [48]) = (int_64)0
	*(($4 + [56])) = [45875210]
	*(($4 + [60])) = [350]
	*(($6 = ($4 + [64]))) = (int_64)0
	*(($7 = ($4 + [72]))) = [0]
	$5 = CALL $8([6])
	*($6) = $5
	*(($6 = ($4 + [68]))) = $5
	*($7) = ($5 + [6])
	CALL memcpy($5, $3, [6])
	*(($4 + [80])) = (int_64)360
	*(($4 + [88])) = [524488]
	*(($4 + [92])) = [100]
	*($6) = (*($6) + [6])
	*([0] + [8500]) = (*([0] + [8500]) + [48])
	if ( ($3 == 0) ){ goto $label$1 }
	CALL $10($3)
	
.LABEL $label$1
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $10($2)
	
.LABEL $label$2
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $10($1)
	
.LABEL $label$3
	CALL $35([19], [0], [8192])
	*([0] + [8508 align=4]) = (int_64)0
	*([0] + [8516]) = [0]
	$4 = CALL $8([12])
	*([0] + [8508]) = $4
	*($4) = (int_64)281479271743488
	*($4 + [8 align=2]) = [65538]
	$4 = ($4 + [12])
	*([0] + [8516]) = $4
	*([0] + [8512]) = $4
	CALL $35([20], [0], [8192])
	*(($4 = CALL $8([6]))) = [1966230]
	*($4 + [4]) = [0]
	*($0) = $4
	*($0 + [12]) = [150]
	$4 = ($4 + [6])
	*($0 + [8]) = $4
	*($0 + [4]) = $4
	*(($4 = CALL $8([6]))) = [1966230]
	*($4 + [4]) = [0]
	*(($0 + [28])) = [150]
	$1 = ($4 + [6])
	*(($0 + [24])) = $1
	*(($0 + [20])) = $1
	*($0 + [16]) = $4
	*(($4 = CALL $8([6]))) = [1966230]
	*($4 + [4]) = [0]
	*(($0 + [44])) = [150]
	$1 = ($4 + [6])
	*(($0 + [40])) = $1
	*(($0 + [36])) = $1
	*($0 + [32]) = $4
	*(($4 = CALL $8([6]))) = [1966230]
	*($4 + [4]) = [0]
	*(($0 + [60])) = [150]
	$1 = ($4 + [6])
	*(($0 + [56])) = $1
	*(($0 + [52])) = $1
	*($0 + [48]) = $4
	*(($4 = CALL $8([6]))) = [1966230]
	*($4 + [4]) = [0]
	*(($0 + [76])) = [150]
	$1 = ($4 + [6])
	*(($0 + [72])) = $1
	*(($0 + [68])) = $1
	*($0 + [64]) = $4
	*(($4 = CALL $8([6]))) = [1966230]
	*($4 + [4]) = [0]
	*(($0 + [92])) = [150]
	$1 = ($4 + [6])
	*(($0 + [88])) = $1
	*(($0 + [84])) = $1
	*($0 + [80]) = $4
	*(($4 = CALL $8([6]))) = [1966230]
	*($4 + [4]) = [0]
	*(($0 + [108])) = [150]
	$1 = ($4 + [6])
	*(($0 + [104])) = $1
	*(($0 + [100])) = $1
	*($0 + [96]) = $4
	*(($4 = CALL $8([6]))) = [1966230]
	*($4 + [4]) = [0]
	*(($0 + [124])) = [150]
	$1 = ($4 + [6])
	*(($0 + [120])) = $1
	*(($0 + [116])) = $1
	*($0 + [112]) = $4
	*(($4 = CALL $8([6]))) = [1966230]
	*($4 + [4]) = [0]
	*(($0 + [140])) = [150]
	*([0] + [8520 align=4]) = (int_64)0
	$1 = ($4 + [6])
	*(($0 + [136])) = $1
	*(($0 + [132])) = $1
	*($0 + [128]) = $4
	*([0] + [8528]) = [0]
	$3 = CALL $8([144])
	*([0] + [8520]) = $3
	*([0] + [8524]) = $3
	*([0] + [8528]) = ($3 + [144])
	$2 = [0]
	
.LOOP $label$5:
	*(($4 = $3)) = (int_64)0
	*($4 + [8]) = [0]
	$1 = ($0 + $2)
	$6 = ($1 + [4])
	$3 = (*($6) - *($1))
	if ( ($3 == 0) ){ goto $label$6 }
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$4 }
	$5 = CALL $8($3)
	*(($7 = ($4 + [4]))) = $5
	*(($4 + [8])) = ($5 + (int_32($3 >> [1]) << [1]))
	*($4) = $5
	$6 = *($1)
	$3 = (*($6) - $6)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($5, $6, $3)
	*($7) = (*($7) + $3)
	
.LABEL $label$6
	$3 = (*([0] + [8524]) + [16])
	*([0] + [8524]) = $3
	*($4 + [12]) = *(($1 + [12]))
	$2 = ($2 + [16])
	if ( ((int_32)$2 != (int_32)[144]) ){ goto $label$5 }
	$4 = *($0 + [128])
	if ( ($4 == 0) ){ goto $label$7 }
	*(($0 + [132])) = $4
	CALL $10($4)
	
.LABEL $label$7
	$4 = *($0 + [112])
	if ( ($4 == 0) ){ goto $label$8 }
	*(($0 + [116])) = $4
	CALL $10($4)
	
.LABEL $label$8
	$4 = *($0 + [96])
	if ( ($4 == 0) ){ goto $label$9 }
	*(($0 + [100])) = $4
	CALL $10($4)
	
.LABEL $label$9
	$4 = *($0 + [80])
	if ( ($4 == 0) ){ goto $label$10 }
	*(($0 + [84])) = $4
	CALL $10($4)
	
.LABEL $label$10
	$4 = *($0 + [64])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($0 + [68])) = $4
	CALL $10($4)
	
.LABEL $label$11
	$4 = *($0 + [48])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($0 + [52])) = $4
	CALL $10($4)
	
.LABEL $label$12
	$4 = *($0 + [32])
	if ( ($4 == 0) ){ goto $label$13 }
	*(($0 + [36])) = $4
	CALL $10($4)
	
.LABEL $label$13
	$4 = *($0 + [16])
	if ( ($4 == 0) ){ goto $label$14 }
	*(($0 + [20])) = $4
	CALL $10($4)
	
.LABEL $label$14
	$4 = *($0)
	if ( ($4 == 0) ){ goto $label$15 }
	*($0 + [4]) = $4
	CALL $10($4)
	
.LABEL $label$15
	CALL $35([21], [0], [8192])
	$global$0 = ($0 + [144])
	return (unreachable)
	
.LABEL $label$4
	CALL $31($4)
}

void .FUNC $202 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [5])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[134217728]) ){ goto $label$3 }
	$6 = [134217727]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [5]) > (uint_32)[67108862]) ){ goto $label$5 }
	$6 = int_32($7 >> [4])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $8(($6 << [5]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $31($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [5])))) = *($1)
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 - $1)
	$6 = ($5 + ($6 << [5]))
	$4 = ($4 + [32])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $10($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $203 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [3])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$6 = int_32($7 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $8(($6 << [3]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $31($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [3])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [3]))
	$5 = ($4 + [8])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $10($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $200 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9674])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9674])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9674])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($0 + [8])
	if ( ((int_32)*($5) != (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [9674])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy(($2 + [15]), $4, [1])
	$4 = (*($3) + [1])
	*($3) = $4
	*(($1 + [24])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$1 = ($1 + [32])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $4, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $201 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9590])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9590])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9590])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$1 = *($1)
	*($2 + [15]) = *($4 + [32])
	$4 = *($1 + [4])
	if ( ((int_32)(*($1 + [8]) - $4) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [9590])
	$4 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [15]), [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $206 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9674])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9674])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [48])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9674])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($0 + [56])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9674])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $207 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9674])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [40])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9674])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [48])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9674])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [56])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9674])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [64])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = ($3 + [72])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9674])
	$3 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $204 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ($2 - $3)
	if ( ((int_32)$4 <= (int_32)[-3]) ){ goto $label$2 }
	$4 = (*($0 + [8]) - $3)
	$5 = int_32($4 >> [1])
	$6 = ($5 + [1])
	$4 = ( ( $6 ? $4 : ($4 <= $6) ) ? [2147483647] : (int_32($4 >> [1]) <= [1073741823]) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$1 }
	$6 = CALL $8(($4 << [1]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	
.LABEL $label$3
	*(($5 = ($6 + ($5 << [1])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($5 - $2)
	$4 = ($6 + ($4 << [1]))
	$6 = ($5 + [2])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $4
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $10($3)
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$2
	CALL $31($0)
	
.LABEL $label$1
	CALL abort()
	(unreachable)
}

void .FUNC $205 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$2 = *($0)
	$3 = ((int_32)(*($0 + [4]) - $2) / (int_32)[72])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[59652324]) ){ goto $label$2 }
	$5 = [59652323]
	$2 = ((int_32)(*($0 + [8]) - $2) / (int_32)[72])
	if ( ((uint_32)$2 > (uint_32)[29826160]) ){ goto $label$4 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = CALL $8(((int_32)$5 * (int_32)[72]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $31($0)
	
.LABEL $label$1
	$6 = ($2 + ((int_32)$5 * (int_32)[72]))
	$7 = ($2 + ((int_32)$3 * (int_32)[72]))
	$2 = CALL $47($7, $1)
	$8 = ($2 + [72])
	$5 = *($0)
	$9 = *(($0 + [4]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$6 }
	$10 = ($5 - $9)
	$1 = [0]
	
.LOOP $label$7:
	$2 = ($9 + $1)
	$3 = ($2 + [-64])
	*((($5 = ($7 + $1)) + [-64])) = *($3)
	$4 = ($2 + [-72])
	*(($5 + [-72])) = *($4)
	*(($11 = ($5 + [-60]))) = (int_64)0
	*(($12 = ($5 + [-52]))) = [0]
	$13 = ($2 + [-60])
	*($11) = *($13)
	$11 = ($2 + [-52])
	*($12) = *($11)
	*($4) = (int_64)0
	*($3) = [0]
	*($13) = (int_64)0
	*($11) = [0]
	*(($3 = ($5 + [-48]))) = (int_64)0
	*(($4 = ($5 + [-40]))) = [0]
	$11 = ($2 + [-48])
	*($3) = *($11)
	$3 = ($2 + [-40])
	*($4) = *($3)
	*($3) = [0]
	*($11) = (int_64)0
	*(($5 + [-15])) = *(($2 + [-15]))
	*(($5 + [-20])) = *(($2 + [-20]))
	*(($5 + [-28])) = *(($2 + [-28]))
	*(($5 + [-36])) = *(($2 + [-36]))
	$1 = ($1 + [-72])
	if ( ((int_32)$10 != (int_32)$1) ){ goto $label$7 }
	$2 = ($7 + $1)
	$5 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $5
	
.LABEL $label$5
	*($0) = $2
	*(($0 + [4])) = $8
	*(($0 + [8])) = $6
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = *(($5 + [-48]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($5 + [-44])) = $2
	CALL $10($2)
	
.LABEL $label$10
	$2 = *(($5 + [-60]))
	if ( ($2 == 0) ){ goto $label$11 }
	*(($5 + [-56])) = $2
	CALL $10($2)
	
.LABEL $label$11
	$2 = ($5 + [-72])
	if ( ((*(($5 + [-72])) & [1]) == 0) ){ goto $label$12 }
	CALL $10(*(($5 + [-64])))
	
.LABEL $label$12
	$5 = $2
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $10($1)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[72]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($3 - $4) / (int_32)[72])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[59652324]) ){ goto $label$3 }
	$3 = [59652323]
	$2 = ((int_32)($2 - $4) / (int_32)[72])
	if ( ((uint_32)$2 > (uint_32)[29826160]) ){ goto $label$6 }
	$3 = ($2 << [1])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $8(((int_32)$3 * (int_32)[72]))
	goto $label$2 
	
.LABEL $label$5
	$2 = ($0 + [4])
	
.LOOP $label$7:
	*(($3 = CALL memset($3, [0], [72]))) = (int_64)0
	*($3 + [8 align=4]) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*($3 + [24 align=4]) = (int_64)0
	*(($3 + [32])) = [0]
	$3 = (*($2) + [72])
	*($2) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $31($0)
	
.LABEL $label$2
	$7 = ($2 + ((int_32)$3 * (int_32)[72]))
	$8 = ($2 + ((int_32)$5 * (int_32)[72]))
	$3 = $8
	
.LOOP $label$8:
	*(($3 = CALL memset($3, [0], [72]))) = (int_64)0
	*(($3 + [8])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [32])) = [0]
	$3 = ($3 + [72])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$9 = ($2 + ((int_32)$6 * (int_32)[72]))
	$3 = *($0)
	$10 = *(($0 + [4]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$10 }
	$11 = ($3 - $10)
	$2 = [0]
	
.LOOP $label$11:
	$1 = ($10 + $2)
	$6 = ($1 + [-64])
	*((($3 = ($8 + $2)) + [-64])) = *($6)
	$4 = ($1 + [-72])
	*(($3 + [-72])) = *($4)
	*(($5 = ($3 + [-60]))) = (int_64)0
	*(($12 = ($3 + [-52]))) = [0]
	$13 = ($1 + [-60])
	*($5) = *($13)
	$5 = ($1 + [-52])
	*($12) = *($5)
	*($4) = (int_64)0
	*($6) = [0]
	*($13) = (int_64)0
	*($5) = [0]
	*(($6 = ($3 + [-48]))) = (int_64)0
	*(($4 = ($3 + [-40]))) = [0]
	$5 = ($1 + [-48])
	*($6) = *($5)
	$6 = ($1 + [-40])
	*($4) = *($6)
	*($6) = [0]
	*($5) = (int_64)0
	*(($3 + [-15])) = *(($1 + [-15]))
	*(($3 + [-20])) = *(($1 + [-20]))
	*(($3 + [-28])) = *(($1 + [-28]))
	*(($3 + [-36])) = *(($1 + [-36]))
	$2 = ($2 + [-72])
	if ( ((int_32)$11 != (int_32)$2) ){ goto $label$11 }
	$8 = ($8 + $2)
	$3 = *(($0 + [4]))
	$2 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$2 = $3
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $9
	*(($0 + [8])) = $7
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$1 = *(($3 + [-48]))
	if ( ($1 == 0) ){ goto $label$14 }
	*(($3 + [-44])) = $1
	CALL $10($1)
	
.LABEL $label$14
	$1 = *(($3 + [-60]))
	if ( ($1 == 0) ){ goto $label$15 }
	*(($3 + [-56])) = $1
	CALL $10($1)
	
.LABEL $label$15
	$1 = ($3 + [-72])
	if ( ((*(($3 + [-72])) & [1]) == 0) ){ goto $label$16 }
	CALL $10(*(($3 + [-64])))
	
.LABEL $label$16
	$3 = $1
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($2 == 0) ){ goto $label$1 }
	CALL $10($2)
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $129 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [160])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [152]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9674])
	
.LABEL $label$5
	CALL memcpy(($4 + [152]), $2, [8])
	*(($4 + [20])) = ($2 + [8])
	*(($4 + [24])) = $3
	*(($4 + [40])) = $1
	*(($4 + [48])) = (int_64)-1
	*(($4 + [56])) = (int_64)0
	*(($4 + [64])) = [0]
	*(($4 + [80])) = $1
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [28]) = [4]
	*($4 + [32]) = $0
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [120])) = $1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *($4 + [152])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $3($2)
	
.LABEL $label$7
	CALL $139($4)
	$global$0 = ($4 + [160])
	return [1]
}

int_32 .FUNC $128 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$3 = ($global$0 - [288])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [200]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [232]) = [0]
	*($4 + [180]) = $2
	*($4 + [176]) = $2
	*($4 + [184]) = ($2 + $7)
	*($4 + [272]) = ($4 + [176])
	*($4 + [24]) = ($4 + [192])
	CALL $146(($4 + [24]), ($4 + [272]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [184])
	*($4 + [8]) = *($4 + [176])
	$3 = *($3)
	*((($4 + [240]) + [8])) = $3
	*(($8 = (($4 + [256]) + [8]))) = $3
	$9 = *($4 + [8])
	*($4 + [256]) = $9
	*($4 + [240]) = $9
	$3 = *($8)
	*((($4 + [272]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$9 = *($4 + [256])
	*($4 + [40]) = $9
	*($4 + [272]) = $9
	*(($4 + [64])) = $1
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $1
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $1
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*($4 + [56]) = $0
	*($4 + [52]) = [4]
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$8 = *($4 + [232])
	$0 = *($4 + [224])
	$1 = *($4 + [216])
	$9 = *($4 + [208])
	$10 = *($4 + [200])
	$11 = *($4 + [192])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $11), (int_64 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 ((int_32)($8 & [255]) != (int_32)[0])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	CALL $139(($4 + [24]))
	$global$0 = ($4 + [288])
	return [1]
}

int_32 .FUNC $8 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $1($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $1($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $9 (int_32 $0)
{
	return CALL $8($0)
}

int_32 .FUNC $123 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [212])
	if ( ($1 == 0) ){ goto $label$1 }
	*(($0 + [216])) = $1
	CALL $10($1)
	
.LABEL $label$1
	$1 = *($0 + [200])
	if ( ($1 == 0) ){ goto $label$2 }
	*(($0 + [204])) = $1
	CALL $10($1)
	
.LABEL $label$2
	$1 = *(($0 + [152]))
	if ( ($1 == 0) ){ goto $label$3 }
	*(($0 + [156])) = $1
	CALL $10($1)
	
.LABEL $label$3
	$1 = *(($0 + [140]))
	if ( ($1 == 0) ){ goto $label$4 }
	*(($0 + [144])) = $1
	CALL $10($1)
	
.LABEL $label$4
	if ( ((*(($0 + [128])) & [1]) == 0) ){ goto $label$5 }
	CALL $10(*(($0 + [136])))
	
.LABEL $label$5
	$2 = *($0 + [112])
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = ($0 + [116])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($1 + [-48]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($1 + [-44])) = $4
	CALL $10($4)
	
.LABEL $label$10
	$4 = *(($1 + [-60]))
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [-56])) = $4
	CALL $10($4)
	
.LABEL $label$11
	$4 = ($1 + [-72])
	if ( ((*(($1 + [-72])) & [1]) == 0) ){ goto $label$12 }
	CALL $10(*(($1 + [-64])))
	
.LABEL $label$12
	$1 = $4
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$9 }
	$1 = *(($0 + [112]))
	goto $label$7 
	
.LABEL $label$8
	$1 = $2
	
.LABEL $label$7
	*($3) = $2
	CALL $10($1)
	
.LABEL $label$6
	$1 = *($0 + [100])
	if ( ($1 == 0) ){ goto $label$13 }
	*(($0 + [104])) = $1
	CALL $10($1)
	
.LABEL $label$13
	$1 = *($0 + [88])
	if ( ($1 == 0) ){ goto $label$14 }
	*(($0 + [92])) = $1
	CALL $10($1)
	
.LABEL $label$14
	if ( ((*($0 + [44]) & [1]) == 0) ){ goto $label$15 }
	CALL $10(*(($0 + [52])))
	
.LABEL $label$15
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$16 }
	*(($0 + [28])) = $1
	CALL $10($1)
	
.LABEL $label$16
	return $0
}

void .FUNC $122 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $31($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $123($1)
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_64 $24
	$2 = ($global$0 - [112])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1) = *(*($3))
	*($1 + [8]) = ((int_64)*(*($3 + [8])) + (int_64)*(*($3 + [4])))
	*($1 + [56]) = [0]
	*($1 + [16]) = ((int_64)*(*($3 + [16])) + (int_64)*(*($3 + [12])))
	$4 = *($0)
	*(($3 = $2) + [24]) = [0]
	*($3 + [8]) = ($3 + [24])
	$5 = ($1 + [8])
	*($3 + [36]) = $5
	*($3 + [32]) = $1
	$6 = ($1 + [16])
	*($3 + [40]) = $6
	$7 = ($1 + [24])
	*($3 + [44]) = $7
	$8 = ($1 + [36])
	*($3 + [48]) = $8
	$9 = ($1 + [38])
	*($3 + [52]) = $9
	$10 = ($1 + [40])
	*($3 + [56]) = $10
	$11 = ($1 + [42])
	*($3 + [60]) = $11
	$12 = ($1 + [44])
	*($3 + [64]) = $12
	$13 = ($1 + [56])
	*($3 + [68]) = $13
	$14 = ($1 + [64])
	*($3 + [72]) = $14
	$15 = ($1 + [72])
	*($3 + [76]) = $15
	$16 = ($1 + [80])
	*($3 + [80]) = $16
	$17 = ($1 + [88])
	*($3 + [84]) = $17
	$18 = ($1 + [100])
	*($3 + [88]) = $18
	$19 = ($1 + [112])
	*($3 + [92]) = $19
	$20 = ($1 + [128])
	*($3 + [96]) = $20
	$21 = ($1 + [200])
	*($3 + [100]) = $21
	$22 = ($1 + [212])
	*($3 + [104]) = $22
	CALL $186(($3 + [32]), ($3 + [8]))
	$23 = *($3 + [24])
	if ( ($23 <= [513]) ){ goto $label$2 }
	$2 = CALL $1($23)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($23 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$1
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $23)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $5
	*($3 + [32]) = $1
	*($3 + [40]) = $6
	*($3 + [44]) = $7
	*($3 + [48]) = $8
	*($3 + [52]) = $9
	*($3 + [56]) = $10
	*($3 + [60]) = $11
	*($3 + [64]) = $12
	*($3 + [68]) = $13
	*($3 + [72]) = $14
	*($3 + [76]) = $15
	*($3 + [80]) = $16
	*($3 + [84]) = $17
	*($3 + [88]) = $18
	*($3 + [92]) = $19
	*($3 + [96]) = $20
	*($3 + [100]) = $21
	*($3 + [104]) = $22
	CALL $187(($3 + [32]), ($3 + [24]))
	$24 = *($1)
	*($1 + [228]) = CALL db_store_i64(*($4 + [8]), (int_64)-4426587238800818176, *(*($0 + [8])), $24, $2, $23)
	if ( ((uint_32)$23 >= (uint_32)[513]) ){ goto $label$5 }
	if ( ((uint_64)$24 >= (uint_64)*($4 + [16])) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $3($2)
	if ( (uint_64)($24 <= *($4 + [16])) ){ goto $label$3 }
	
.LABEL $label$4
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$24 + (int_64)1) : ((uint_64)$24 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$3
	$global$0 = ($3 + [112])
}

void .FUNC $120 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	*($1 + [32]) = ((int_64)*($1 + [32]) + (int_64)((int_64)*(*(($3 + [4]))) * (int_64)*(*($3))))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-15])
	CALL $90($5, $1)
	CALL db_update_i64(*($1 + [44]), $2, $3, [33])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

int_32 .FUNC $2 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = ((int_32)$1 * (int_32)$0)
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = uint_32($1 >> [16])
	$3 = (*([0] + [8204]) + $2)
	*([0] + [8204]) = $3
	$0 = *([0] + [8196])
	$4 = ((($0 + $1) + [7]) & [-8])
	*([0] + [8196]) = $4
	if ( ((uint_32)($3 << [16]) <= (uint_32)$4) ){ goto $label$5 }
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	*([0] + [8204]) = ($3 + [1])
	if ( ((int_32)($2 + [1]) != (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [8532])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memset($0, [0], $1)
	return $0
	
.LABEL $label$1
	return [0]
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [288])
	$global$0 = $3
	CALL $0()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$1 }
	if ( ((int_64)$2 > (int_64)3904806823962194175) ){ goto $label$18 }
	if ( ((int_64)$2 <= (int_64)-3075276116954972161) ){ goto $label$17 }
	if ( ((int_64)$2 <= (int_64)3626339545203081215) ){ goto $label$15 }
	if ( ((int_64)$2 == (int_64)3626339545203081216) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)3631284189472489472) ){ goto $label$10 }
	if ( ((int_64)$2 != (int_64)3631284255666142208) ){ goto $label$1 }
	*($3 + [236]) = [0]
	*($3 + [232]) = [1]
	*($3 + [48]) = *($3 + [232])
	CALL $127($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$18
	if ( ((int_64)$2 <= (int_64)6182744411307245567) ){ goto $label$16 }
	if ( ((int_64)$2 <= (int_64)6653132571390885887) ){ goto $label$14 }
	if ( ((int_64)$2 == (int_64)6653132571390885888) ){ goto $label$9 }
	if ( ((int_64)$2 == (int_64)7112182834835488768) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)8421055217885249536) ){ goto $label$1 }
	*($3 + [180]) = [0]
	*($3 + [176]) = [2]
	*($3 + [104]) = *($3 + [176])
	CALL $128($1, $1, ($3 + [104]))
	goto $label$1 
	
.LABEL $label$17
	if ( ((int_64)$2 > (int_64)-4416999184523067393) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)-4417310907529428992) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)-4417032211467862016) ){ goto $label$1 }
	*($3 + [268]) = [0]
	*($3 + [264]) = [3]
	*($3 + [16]) = *($3 + [264])
	CALL $129($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$16
	if ( ((int_64)$2 > (int_64)4923678699809669119) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)3904806823962194176) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)4511785374812471296) ){ goto $label$1 }
	*($3 + [228]) = [0]
	*($3 + [224]) = [4]
	*($3 + [56]) = *($3 + [224])
	CALL $130($1, $1, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$15
	if ( ((int_64)$2 == (int_64)-3075276116954972160) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-3075276115167357552) ){ goto $label$1 }
	*($3 + [164]) = [0]
	*($3 + [160]) = [5]
	*($3 + [120]) = *($3 + [160])
	CALL $131($1, $1, ($3 + [120]))
	goto $label$1 
	
.LABEL $label$14
	if ( ((int_64)$2 == (int_64)6182744411307245568) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)6182744468516679168) ){ goto $label$1 }
	*($3 + [284]) = [0]
	*($3 + [280]) = [6]
	*($3) = *($3 + [280])
	CALL $129($1, $1, $3)
	goto $label$1 
	
.LABEL $label$13
	if ( ((int_64)$2 == (int_64)-4416999184523067392) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-4229502553417404928) ){ goto $label$1 }
	*($3 + [212]) = [0]
	*($3 + [208]) = [7]
	*($3 + [72]) = *($3 + [208])
	CALL $132($1, $1, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$12
	if ( ((int_64)$2 == (int_64)4923678699809669120) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)5382186721758123376) ){ goto $label$1 }
	*($3 + [204]) = [0]
	*($3 + [200]) = [8]
	*($3 + [80]) = *($3 + [200])
	CALL $129($1, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$11
	*($3 + [188]) = [0]
	*($3 + [184]) = [9]
	*($3 + [96]) = *($3 + [184])
	CALL $133($1, $1, ($3 + [96]))
	goto $label$1 
	
.LABEL $label$10
	*($3 + [196]) = [0]
	*($3 + [192]) = [10]
	*($3 + [88]) = *($3 + [192])
	CALL $134($1, $1, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [148]) = [0]
	*($3 + [144]) = [11]
	*($3 + [136]) = *($3 + [144])
	CALL $135($1, $1, ($3 + [136]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [156]) = [0]
	*($3 + [152]) = [12]
	*($3 + [128]) = *($3 + [152])
	CALL $131($1, $1, ($3 + [128]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [252]) = [0]
	*($3 + [248]) = [13]
	*($3 + [32]) = *($3 + [248])
	CALL $136($1, $1, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [220]) = [0]
	*($3 + [216]) = [14]
	*($3 + [64]) = *($3 + [216])
	CALL $137($1, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [260]) = [0]
	*($3 + [256]) = [15]
	*($3 + [24]) = *($3 + [256])
	CALL $137($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [172]) = [0]
	*($3 + [168]) = [16]
	*($3 + [112]) = *($3 + [168])
	CALL $132($1, $1, ($3 + [112]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [244]) = [0]
	*($3 + [240]) = [17]
	*($3 + [40]) = *($3 + [240])
	CALL $138($1, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$2
	*($3 + [276]) = [0]
	*($3 + [272]) = [18]
	*($3 + [8]) = *($3 + [272])
	CALL $129($1, $1, ($3 + [8]))
	
.LABEL $label$1
	CALL $34([0])
	$global$0 = ($3 + [288])
}

int_64 .FUNC $125 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($0 + [32])
	$5 = *(($0 + [60]))
	$4 = *(($0 + [56]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$5 }
	
.LOOP $label$7:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$6 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$5 }
	if ( ((int_32)*($7 + [224]) == (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [9596])
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)-4426587238800818176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$7 = CALL $40($3, $6)
	if ( ((int_32)*($7 + [224]) == (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$4
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = *($7 + [88])
	if ( ((int_64)$2 != (int_64)1) ){ goto $label$1 }
	return ((int_64)7 * (int_64)*(($6 + [9])))
	
.LABEL $label$2
	return ((int_64)10 * (int_64)*((*($7 + [88]) + [7])))
	
.LABEL $label$1
	return ((int_64)5 * (int_64)*(($6 + [11])))
}

int_64 .FUNC $124 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($0 + [32])
	$5 = *(($0 + [60]))
	$4 = *(($0 + [56]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$8:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$7 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	if ( ((int_32)*($7 + [224]) == (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [9596])
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)-4426587238800818176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $40($3, $6)
	if ( ((int_32)*($7 + [224]) == (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$5
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = *($7 + [88])
	if ( ((int_64)$2 != (int_64)1) ){ goto $label$2 }
	$6 = ($6 + [15])
	goto $label$1 
	
.LABEL $label$3
	$6 = (*($7 + [88]) + [13])
	goto $label$1 
	
.LABEL $label$2
	$6 = ($6 + [17])
	
.LABEL $label$1
	return ((int_64)((int_64)*($6) * (int_64)5000) + (int_64)1500)
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	CALL $14($0, $1)
}

int_32 .FUNC $16 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $17 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $10 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $11 (int_32 $0)
{
	CALL $10($0)
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $7(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $7(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	return CALL $12($0, $1)
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [9674])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9674])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9674])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9674])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $18 (int_32 $0)
{
	*($0) = [1]
}

void .FUNC $19 (int_32 $0)
{
	*($0) = [0]
}

void .FUNC $184 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [5]) >= (uint_32)$1) ){ goto $label$6 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [5])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$4 }
	$3 = [134217727]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [5]) > (uint_32)[67108862]) ){ goto $label$7 }
	$3 = int_32($2 >> [4])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $8(($3 << [5]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($3) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = (*($0) + [32])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $31($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($3 << [5]))
	$5 = ($2 + ($5 << [5]))
	$3 = $5
	
.LOOP $label$9:
	*($3) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = ($3 + [32])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$6 = ($2 + ($6 << [5]))
	$3 = *($0)
	$7 = ($0 + [4])
	$1 = (*($7) - $3)
	$2 = ($5 - $1)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$10
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($3 == 0) ){ goto $label$1 }
	CALL $10($3)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC $187 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9590])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9590])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $189(*($1), *($0 + [12]))
	$4 = *($1)
	*($2 + [16]) = *(*($0 + [16]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [9590])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, ($2 + [16]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [9590])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [9590])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [9590])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	CALL $190(*($1), *($0 + [32]))
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[1]) ){ goto $label$8 }
	CALL eosio_assert([0], [9590])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9590])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9590])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [9590])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $191(*($1), *($0 + [52]))
	CALL $189(*($1), *($0 + [56]))
	CALL $192(*($1), *($0 + [60]))
	$4 = *($0 + [64])
	*($2 + [8]) = *($1)
	*($2 + [20]) = ($4 + [12])
	*($2 + [16]) = $4
	*($2 + [24]) = ($4 + [24])
	*($2 + [28]) = ($4 + [36])
	*($2 + [32]) = ($4 + [40])
	*($2 + [36]) = ($4 + [48])
	*($2 + [40]) = ($4 + [56])
	*($2 + [44]) = ($4 + [64])
	CALL $193(($2 + [16]), ($2 + [8]))
	CALL $194(*($1), *($0 + [68]))
	CALL $194(*($1), *($0 + [72]))
	$global$0 = ($2 + [48])
}

void .FUNC $186 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = (*($2) + [24])
	*(($2 = *($1))) = $3
	$4 = *($4)
	$4 = *($0 + [12])
	$5 = *($4 + [4])
	$6 = ($5 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$3 = (($6 & [-8]) + $3)
	
.LABEL $label$2
	$3 = ($3 + [6])
	*($2) = $3
	$5 = *($4)
	$4 = *($0 + [32])
	$7 = (CASTING uint_64)(uint_32 ( *($4 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	*($2) = $3
	$4 = *($4)
	$4 = ( *(($4 + [4])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	if ( ($4 == 0) ){ goto $label$4 }
	$3 = ($4 + $3)
	*($2) = $3
	
.LABEL $label$4
	$3 = ($3 + [26])
	*($2) = $3
	$4 = *($4)
	$4 = *($0 + [52])
	$5 = *($4 + [4])
	$6 = ($5 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($6 >> [1]))
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	$3 = (($6 & [-2]) + $3)
	
.LABEL $label$6
	*($2) = $3
	$4 = *($4)
	$4 = *($0 + [56])
	$5 = *($4 + [4])
	$6 = ($5 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$8 }
	$3 = (($6 & [-8]) + $3)
	
.LABEL $label$8
	*($2) = $3
	CALL $188($2, *($0 + [60]))
	$3 = *($2)
	$2 = *($0 + [64])
	$7 = (CASTING uint_64)(uint_32 ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$4 = *($1)
	$3 = *($4)
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	*($4) = $3
	$1 = *($2)
	$1 = ( *(($2 + [4])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ($1 == 0) ){ goto $label$10 }
	$3 = ($1 + $3)
	*($4) = $3
	
.LABEL $label$10
	$5 = *($2 + [12])
	$1 = *(($2 + [16]))
	$6 = ($1 - $5)
	$7 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$11:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$11 }
	$3 = ( $3 ? ($6 + $3) : ((int_32)$5 == (int_32)$1) )
	*($4) = $3
	$2 = *($2 + [24])
	$1 = *(($2 + [28]))
	$5 = ($1 - $2)
	$7 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$12:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$12 }
	$3 = (( $3 ? ($5 + $3) : ((int_32)$2 == (int_32)$1) ) + [25])
	*($4) = $3
	$2 = *($2)
	$2 = *($0 + [68])
	$1 = *($2 + [4])
	$5 = ($1 - $2)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [5]))
	
.LOOP $label$13:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$13 }
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$14 }
	$3 = ((((int_32)uint_32(($5 + [-32]) >> [5]) * (int_32)[25]) + $3) + [25])
	
.LABEL $label$14
	*($4) = $3
	$0 = *($0)
	$0 = *($0 + [72])
	$2 = *($0 + [4])
	$1 = ($2 - $0)
	$7 = (CASTING uint_64)(uint_32 int_32($1 >> [5]))
	
.LOOP $label$15:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$15 }
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$16 }
	$3 = ((((int_32)uint_32(($1 + [-32]) >> [5]) * (int_32)[25]) + $3) + [25])
	
.LABEL $label$16
	*($4) = $3
}

void .FUNC $180 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [1]) >= (uint_32)$1) ){ goto $label$4 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [1])
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$7 = [0]
	$3 = ($2 - $4)
	$3 = ( ( $6 ? $3 : ($3 <= $6) ) ? [2147483647] : (int_32($3 >> [1]) <= [1073741823]) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$7 = CALL $8(($3 << [1]))
	
.LABEL $label$5
	$2 = ($7 + ($3 << [1]))
	$4 = ($7 + ($5 << [1]))
	$3 = $4
	
.LOOP $label$6:
	*($3) = [0]
	$3 = ($3 + [2])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	$6 = ($7 + ($6 << [1]))
	$1 = *($0)
	$5 = ($0 + [4])
	$3 = (*($5) - $1)
	$7 = ($4 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($7, $1, $3)
	$1 = *($0)
	
.LABEL $label$7
	*($0) = $7
	*($5) = $6
	*(($0 + [8])) = $2
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $10($1)
	return (unreachable)
	
.LABEL $label$4
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($3) = [0]
	$3 = (*($0) + [2])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	
.LABEL $label$3
	return (unreachable)
	
.LABEL $label$2
	CALL $31($0)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9948])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9993])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10043])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $10($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC $117 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = ($0 + [72])
	$3 = [0]
	$4 = ($0 + [80])
	$5 = CALL db_lowerbound_i64(*($0 + [72]), *($4), (int_64)-6030912142679474176, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $67($2, $5)
	
.LABEL $label$1
	$4 = CALL db_lowerbound_i64(*($2), *($4), (int_64)-6030912142679474176, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$5 = ($0 + [80])
	$6 = ($0 + [72])
	
.LOOP $label$3:
	CALL $67($2, $4)
	if ( $3 ){ goto $label$4 }
	CALL eosio_assert([0], [9884])
	CALL eosio_assert([0], [9918])
	
.LABEL $label$4
	$4 = [0]
	$0 = CALL db_next_i64(*($3 + [52]), ($1 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	$4 = CALL $67($2, $0)
	
.LABEL $label$5
	CALL $72($2, $3)
	$3 = $4
	$4 = CALL db_lowerbound_i64(*($6), *($5), (int_64)-6030912142679474176, (int_64)0)
	if ( ((int_32)$4 >= (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$2
	$global$0 = ($1 + [16])
}

void .FUNC $114 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	*($1 + [24]) = [1]
	*($1 + [32]) = (int_64)0
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-48])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($6 + [-15])
	CALL $90($4, $1)
	CALL db_update_i64(*($1 + [44]), $2, $3, [33])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [16])
}

void .FUNC $115 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = ($0 + [112])
	$3 = [0]
	$4 = ($0 + [120])
	$5 = CALL db_lowerbound_i64(*($0 + [112]), *($4), (int_64)7235159550573564928, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $81($2, $5)
	
.LABEL $label$1
	$4 = CALL db_lowerbound_i64(*($2), *($4), (int_64)7235159550573564928, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$5 = ($0 + [120])
	$6 = ($0 + [112])
	
.LOOP $label$3:
	CALL $81($2, $4)
	if ( $3 ){ goto $label$4 }
	CALL eosio_assert([0], [9884])
	CALL eosio_assert([0], [9918])
	
.LABEL $label$4
	$4 = [0]
	$0 = CALL db_next_i64(*($3 + [44]), ($1 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	$4 = CALL $81($2, $0)
	
.LABEL $label$5
	CALL $116($2, $3)
	$3 = $4
	$4 = CALL db_lowerbound_i64(*($6), *($5), (int_64)7235159550573564928, (int_64)0)
	if ( ((int_32)$4 >= (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$2
	$global$0 = ($1 + [16])
}

void .FUNC $112 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = ($0 + [32])
	$5 = [0]
	$6 = ($0 + [40])
	$7 = CALL db_lowerbound_i64(*($0 + [32]), *($6), (int_64)-4426587238800818176, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $40($4, $7)
	
.LABEL $label$1
	$6 = CALL db_lowerbound_i64(*($4), *($6), (int_64)-4426587238800818176, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$2 = ((int_64)$2 + (int_64)1)
	$7 = ($0 + [40])
	$8 = ($0 + [32])
	
.LOOP $label$3:
	CALL $40($4, $6)
	$2 = ((int_64)$2 + (int_64)-1)
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$2 }
	if ( $5 ){ goto $label$4 }
	CALL eosio_assert([0], [9884])
	CALL eosio_assert([0], [9918])
	
.LABEL $label$4
	$6 = [0]
	$0 = CALL db_next_i64(*($5 + [228]), ($3 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $40($4, $0)
	
.LABEL $label$5
	CALL $74($4, $5)
	$5 = $6
	$6 = CALL db_lowerbound_i64(*($8), *($7), (int_64)-4426587238800818176, (int_64)0)
	if ( ((int_32)$6 >= (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$2
	$global$0 = ($3 + [16])
}

void .FUNC $113 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = ($0 + [112])
	$5 = *(($0 + [140]))
	$4 = *(($0 + [136]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( (int_64)(*($7) == 0) ){ goto $label$4 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [40]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [9596])
	goto $label$2 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($3), *(($0 + [120])), (int_64)7235159550573564928, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $81($3, $6)
	if ( ((int_32)*($7 + [40]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$2
	CALL $114($3, $7, *($0))
	$global$0 = ($2 + [80])
	return 
	
.LABEL $label$1
	$8 = *($0)
	if ( ((int_64)*(($0 + [112])) == (int_64)CALL current_receiver()) ){ goto $label$6 }
	CALL eosio_assert([0], [10096])
	
.LABEL $label$6
	*(($6 = CALL $8([56])) + [40]) = $3
	$9 = CALL current_time()
	*($6 + [24]) = [1]
	*($6) = (int_64)0
	*($6 + [32]) = (int_64)0
	*($6 + [8]) = ((int_64)((uint_64)$9 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($2 + [72]) = (($2 + [16]) + [33])
	*($2 + [68]) = ($2 + [16])
	*($2 + [64]) = ($2 + [16])
	CALL $90(($2 + [64]), $6)
	$9 = *($6)
	$7 = CALL db_store_i64(*(($0 + [120])), (int_64)7235159550573564928, $8, $9, ($2 + [16]), [33])
	*($6 + [44]) = $7
	$5 = ($0 + [128])
	if ( (uint_64)($9 <= *($5)) ){ goto $label$7 }
	*($5) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($2 + [64]) = $6
	$9 = *($6)
	*($2 + [16]) = $9
	*($2 + [12]) = $7
	$4 = ($0 + [140])
	$5 = *($4)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [144]))) ){ goto $label$10 }
	*($5 + [8]) = $9
	*($5 + [16]) = $7
	*($2 + [64]) = [0]
	*($5) = $6
	*($4) = ($5 + [24])
	$6 = *($2 + [64])
	*($2 + [64]) = [0]
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $91(($0 + [136]), ($2 + [64]), ($2 + [16]), ($2 + [12]))
	$6 = *($2 + [64])
	*($2 + [64]) = [0]
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $10($6)
	
.LABEL $label$8
	$global$0 = ($2 + [80])
}

void .FUNC $110 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6, int_64 $7, int_64 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$9 = ($global$0 - [96])
	$global$0 = $9
	*($9 + [80]) = $2
	*($9 + [88]) = $1
	*($9 + [72]) = $3
	*($9 + [64]) = $4
	*($9 + [56]) = $5
	*($9 + [48]) = $6
	*($9 + [40]) = $7
	*($9 + [32]) = $8
	CALL require_auth(*($0))
	$10 = ($0 + [32])
	$12 = *(($0 + [60]))
	$11 = *(($0 + [56]))
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$2 }
	
.LOOP $label$4:
	$13 = ($12 + [-24])
	$14 = *($13)
	if ( ((int_64)*($14) == (int_64)$2) ){ goto $label$3 }
	$12 = $13
	if ( ((int_32)$11 != (int_32)$13) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$2 }
	if ( ((int_32)*($14 + [224]) == (int_32)$10) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$14 = [0]
	$13 = CALL db_find_i64(*($10), *(($0 + [40])), (int_64)-4426587238800818176, $2)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$1 }
	$14 = CALL $40($10, $13)
	if ( ((int_32)*($14 + [224]) == (int_32)$10) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	$2 = *($0)
	*($9 + [4]) = ($9 + [64])
	*($9) = ($9 + [72])
	*($9 + [8]) = ($9 + [88])
	*($9 + [12]) = ($9 + [40])
	*($9 + [16]) = ($9 + [32])
	*($9 + [20]) = ($9 + [56])
	*($9 + [24]) = ($9 + [48])
	*($9 + [28]) = ($9 + [80])
	if ( $14 ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL $111($10, $14, $2, $9)
	$global$0 = ($9 + [96])
}

void .FUNC $111 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	*($1 + [16]) = *(*($3 + [4]))
	*($1 + [36]) = [1]
	*($1 + [56]) = [1]
	*($1 + [80]) = *(*($3 + [8]))
	$6 = *($1)
	*($5 + [32]) = [256]
	$7 = ($1 + [88])
	$8 = ($1 + [92])
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)*(($1 + [96]))) ){ goto $label$4 }
	*($9) = *($5 + [32])
	$9 = (*($8) + [2])
	*($8) = $9
	goto $label$3 
	
.LABEL $label$4
	CALL $204($7, ($5 + [32]))
	$9 = *($8)
	
.LABEL $label$3
	*($5 + [32]) = [257]
	if ( ((int_32)$9 == (int_32)*(($1 + [96]))) ){ goto $label$6 }
	*($9) = *($5 + [32])
	$9 = (*($8) + [2])
	*($8) = $9
	goto $label$5 
	
.LABEL $label$6
	CALL $204($7, ($5 + [32]))
	$9 = *($8)
	
.LABEL $label$5
	*($5 + [32]) = [258]
	if ( ((int_32)$9 == (int_32)*(($1 + [96]))) ){ goto $label$8 }
	*($9) = *($5 + [32])
	$9 = (*($8) + [2])
	*($8) = $9
	goto $label$7 
	
.LABEL $label$8
	CALL $204($7, ($5 + [32]))
	$9 = *($8)
	
.LABEL $label$7
	*($5 + [32]) = [259]
	if ( ((int_32)$9 == (int_32)*(($1 + [96]))) ){ goto $label$10 }
	*($9) = *($5 + [32])
	$9 = (*($8) + [2])
	*($8) = $9
	goto $label$9 
	
.LABEL $label$10
	CALL $204($7, ($5 + [32]))
	$9 = *($8)
	
.LABEL $label$9
	*($5 + [32]) = [260]
	if ( ((int_32)$9 == (int_32)*(($1 + [96]))) ){ goto $label$12 }
	*($9) = *($5 + [32])
	$9 = (*($8) + [2])
	*($8) = $9
	goto $label$11 
	
.LABEL $label$12
	CALL $204($7, ($5 + [32]))
	$9 = *($8)
	
.LABEL $label$11
	*($5 + [32]) = [261]
	if ( ((int_32)$9 == (int_32)*(($1 + [96]))) ){ goto $label$14 }
	*($9) = *($5 + [32])
	$9 = (*($8) + [2])
	*($8) = $9
	goto $label$13 
	
.LABEL $label$14
	CALL $204($7, ($5 + [32]))
	$9 = *($8)
	
.LABEL $label$13
	*($5 + [32]) = [262]
	if ( ((int_32)$9 == (int_32)*(($1 + [96]))) ){ goto $label$16 }
	*($9) = *($5 + [32])
	$9 = (*($8) + [2])
	*($8) = $9
	goto $label$15 
	
.LABEL $label$16
	CALL $204($7, ($5 + [32]))
	$9 = *($8)
	
.LABEL $label$15
	*($5 + [32]) = [263]
	if ( ((int_32)$9 == (int_32)*(($1 + [96]))) ){ goto $label$18 }
	*($9) = *($5 + [32])
	$9 = (*($8) + [2])
	*($8) = $9
	goto $label$17 
	
.LABEL $label$18
	CALL $204($7, ($5 + [32]))
	$9 = *($8)
	
.LABEL $label$17
	*($5 + [32]) = [264]
	if ( ((int_32)$9 == (int_32)*(($1 + [96]))) ){ goto $label$20 }
	*($9) = *($5 + [32])
	*($8) = (*($8) + [2])
	goto $label$19 
	
.LABEL $label$20
	CALL $204($7, ($5 + [32]))
	
.LABEL $label$19
	*($5 + [32]) = (int_64)330
	$9 = ($1 + [100])
	$12 = ($1 + [108])
	$8 = *($12)
	$10 = ($1 + [104])
	$11 = *($10)
	if ( ((uint_32)$11 >= (uint_32)$8) ){ goto $label$26 }
	*($11) = (int_64)330
	$11 = ($11 + [8])
	*($10) = $11
	$13 = (int_64)330
	*($5 + [32]) = (int_64)330
	if ( ($11 <= $8) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	CALL $203($9, ($5 + [32]))
	$8 = *($12)
	$11 = *($10)
	$13 = (int_64)330
	*($5 + [32]) = (int_64)330
	if ( ((uint_32)$11 >= (uint_32)$8) ){ goto $label$24 }
	
.LABEL $label$25
	*($11) = $13
	$11 = ($11 + [8])
	*(($1 + [104])) = $11
	$13 = (int_64)330
	*($5 + [32]) = (int_64)330
	if ( ((uint_32)$11 >= (uint_32)$8) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	CALL $203($9, ($5 + [32]))
	$8 = *(($1 + [108]))
	$11 = *(($1 + [104]))
	$13 = (int_64)330
	*($5 + [32]) = (int_64)330
	if ( ($11 <= $8) ){ goto $label$22 }
	
.LABEL $label$23
	CALL $203($9, ($5 + [32]))
	goto $label$21 
	
.LABEL $label$22
	*($11) = $13
	*(($1 + [104])) = ($11 + [8])
	
.LABEL $label$21
	*(($8 = *(($1 + [100])))) = *(*($3 + [12]))
	*($8 + [16]) = *(*($3 + [16]))
	*($5 + [32]) = [0]
	$8 = ($1 + [140])
	$11 = ($1 + [144])
	$10 = *($11)
	if ( ((uint_32)$10 >= (uint_32)*(($1 + [148]))) ){ goto $label$28 }
	*($10) = [0]
	$10 = (*($11) + [1])
	*($11) = $10
	goto $label$27 
	
.LABEL $label$28
	CALL $106($8, ($5 + [32]))
	$10 = *($11)
	
.LABEL $label$27
	*($5 + [32]) = [0]
	if ( ((uint_32)$10 >= (uint_32)*(($1 + [148]))) ){ goto $label$30 }
	*($10) = [0]
	$11 = (*($11) + [1])
	*(($11 = ($1 + [144]))) = $11
	goto $label$29 
	
.LABEL $label$30
	CALL $106($8, ($5 + [32]))
	$11 = *(($1 + [144]))
	
.LABEL $label$29
	*($5 + [32]) = [0]
	if ( ((uint_32)$11 >= (uint_32)*(($1 + [148]))) ){ goto $label$32 }
	*($11) = [0]
	*(($8 = ($1 + [144]))) = (*($8) + [1])
	goto $label$31 
	
.LABEL $label$32
	CALL $106($8, ($5 + [32]))
	
.LABEL $label$31
	$11 = ($1 + [56])
	$10 = ($1 + [36])
	$12 = ($1 + [16])
	$14 = ($1 + [8])
	*(*(($8 = ($1 + [140])))) = *(*($3 + [20]))
	*(*($8) + [1]) = *(*($3 + [24]))
	*(($1 + [184])) = (int_64)0
	*(($1 + [176])) = (int_64)0
	*(($1 + [168])) = [0]
	*(($1 + [192])) = [0]
	*(($1 + [164])) = *(*($3 + [28]))
	$15 = ($1 + [128])
	CALL $27($15, [9882])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$33 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$33
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [36]) = $14
	*($5 + [40]) = $12
	*($5 + [48]) = $10
	*($5 + [68]) = $11
	*($5 + [84]) = $7
	*($5 + [88]) = $9
	*($5 + [32]) = $1
	$16 = ($1 + [24])
	*($5 + [44]) = $16
	$17 = ($1 + [38])
	*($5 + [52]) = $17
	$18 = ($1 + [40])
	*($5 + [56]) = $18
	$19 = ($1 + [42])
	*($5 + [60]) = $19
	$20 = ($1 + [44])
	*($5 + [64]) = $20
	$21 = ($1 + [64])
	*($5 + [72]) = $21
	$22 = ($1 + [72])
	*($5 + [76]) = $22
	$23 = ($1 + [80])
	*($5 + [80]) = $23
	$24 = ($1 + [112])
	*($5 + [92]) = $24
	*($5 + [96]) = $15
	$25 = ($1 + [200])
	*($5 + [100]) = $25
	$26 = ($1 + [212])
	*($5 + [104]) = $26
	CALL $186(($5 + [32]), ($5 + [8]))
	$3 = *($5 + [24])
	if ( ($3 <= [513]) ){ goto $label$35 }
	$8 = CALL $1($3)
	goto $label$34 
	
.LABEL $label$35
	$8 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $8
	
.LABEL $label$34
	*($5 + [12]) = $8
	*($5 + [8]) = $8
	*($5 + [16]) = ($8 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $14
	*($5 + [40]) = $12
	*($5 + [44]) = $16
	*($5 + [48]) = $10
	*($5 + [52]) = $17
	*($5 + [56]) = $18
	*($5 + [60]) = $19
	*($5 + [64]) = $20
	*($5 + [68]) = $11
	*($5 + [72]) = $21
	*($5 + [76]) = $22
	*($5 + [80]) = $23
	*($5 + [84]) = $7
	*($5 + [88]) = $9
	*($5 + [92]) = $24
	*($5 + [96]) = $15
	*($5 + [100]) = $25
	*($5 + [104]) = $26
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $8, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$38 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$38
	CALL $3($8)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$36 }
	
.LABEL $label$37
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$36
	$global$0 = ($5 + [112])
}

void .FUNC $118 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	CALL require_auth($1)
	$2 = ($0 + [112])
	$4 = *(($0 + [140]))
	$3 = *(($0 + [136]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$5:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( (int_64)(*($6) == 0) ){ goto $label$4 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	if ( ((int_32)*($6 + [40]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [9596])
	goto $label$2 
	
.LABEL $label$3
	$5 = CALL db_find_i64(*($2), *(($0 + [120])), (int_64)7235159550573564928, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $81($2, $5)
	if ( ((int_32)*($6 + [40]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$2
	CALL $112($0, $1, *($6 + [32]))
	
.LABEL $label$1
	CALL $115($0)
	CALL $117($0)
}

void .FUNC $119 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$7 = ($global$0 - [112])
	$global$0 = $7
	*($7 + [56]) = $3
	*($7 + [64]) = $2
	*($7 + [48]) = $4
	*($7 + [40]) = $5
	CALL prints([9557])
	$8 = ($0 + [112])
	$9 = CALL db_lowerbound_i64(*($0 + [112]), *(($0 + [120])), (int_64)7235159550573564928, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$2 }
	CALL $81($8, $9)
	goto $label$1 
	
.LABEL $label$2
	*($7 + [32]) = (int_64)0
	CALL $85($0)
	
.LABEL $label$1
	$11 = *(($0 + [140]))
	$10 = *(($0 + [136]))
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$4 }
	
.LOOP $label$6:
	$9 = ($11 + [-24])
	$12 = *($9)
	if ( (int_64)(*($12) == 0) ){ goto $label$5 }
	$11 = $9
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$4 }
	if ( ((int_32)*($12 + [40]) == (int_32)$8) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	goto $label$3 
	
.LABEL $label$4
	$12 = CALL $81($8, CALL $fimport$3(*(($0 + [112])), *(($0 + [120])), (int_64)7235159550573564928, (int_64)0))
	if ( ((int_32)*($12 + [40]) == (int_32)$8) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$3
	$5 = *($12 + [32])
	*($7 + [32]) = $5
	$11 = *(($0 + [140]))
	$10 = *(($0 + [136]))
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$8 }
	
.LOOP $label$10:
	$9 = ($11 + [-24])
	$12 = *($9)
	if ( (int_64)(*($12) == 0) ){ goto $label$9 }
	$11 = $9
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$8 }
	if ( ((int_32)*($12 + [40]) == (int_32)$8) ){ goto $label$7 }
	CALL eosio_assert([0], [9596])
	goto $label$7 
	
.LABEL $label$8
	$12 = [0]
	$9 = CALL db_find_i64(*(($0 + [112])), *(($0 + [120])), (int_64)7235159550573564928, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$7 }
	$12 = CALL $81($8, $9)
	if ( ((int_32)*($12 + [40]) == (int_32)$8) ){ goto $label$7 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$7
	$4 = *($0)
	*($7 + [4]) = ($7 + [56])
	*($7) = ($7 + [64])
	CALL $120($8, $12, $4, $7)
	CALL prints([9575])
	CALL printui($5)
	*($7 + [28]) = [0]
	$4 = *($7 + [64])
	if ( (int_64)($4 == 0) ){ goto $label$11 }
	$13 = ($0 + [56])
	$11 = ($0 + [32])
	$5 = *($7 + [56])
	$14 = ($7 + [8])
	$15 = ($7 + [12])
	$16 = ($7 + [16])
	$17 = ($0 + [64])
	$10 = ($0 + [60])
	$9 = [0]
	
.LOOP $label$12:
	*($7 + [24]) = [0]
	$12 = (int_64)($5 == 0)
	$5 = (int_64)0
	if ( $12 ){ goto $label$13 }
	
.LOOP $label$14:
	$5 = *($0)
	*($14) = ($7 + [48])
	*($15) = ($7 + [24])
	*($16) = ($7 + [40])
	*($7 + [4]) = ($7 + [28])
	*($7) = ($7 + [32])
	*($7 + [104]) = $5
	if ( ((int_64)*($11) == (int_64)CALL current_receiver()) ){ goto $label$15 }
	CALL eosio_assert([0], [10096])
	
.LABEL $label$15
	*($7 + [80]) = $11
	*((($7 + [80]) + [8])) = ($7 + [104])
	*($7 + [84]) = $7
	*(($9 = CALL $8([240])) + [32]) = [0]
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [44 align=4]) = (int_64)0
	*($9 + [52]) = [0]
	*($9 + [80]) = (int_64)0
	*($9 + [88 align=4]) = (int_64)0
	*($9 + [96 align=4]) = (int_64)0
	*($9 + [104 align=4]) = (int_64)0
	*($9 + [112 align=4]) = (int_64)0
	*($9 + [120]) = [0]
	*($9 + [128 align=4]) = (int_64)0
	*($9 + [136 align=4]) = (int_64)0
	*($9 + [144 align=4]) = (int_64)0
	*($9 + [152 align=4]) = (int_64)0
	*($9 + [160]) = [0]
	*($9 + [200 align=4]) = (int_64)0
	*($9 + [208]) = [0]
	*($9 + [220]) = [0]
	*($9 + [212 align=4]) = (int_64)0
	*($9 + [224]) = $11
	CALL $121(($7 + [80]), $9)
	*($7 + [96]) = $9
	$5 = *($9)
	*($7 + [80]) = $5
	$8 = *($9 + [228])
	*($7 + [76]) = $8
	$12 = *($10)
	if ( ((uint_32)$12 >= (uint_32)*($17)) ){ goto $label$18 }
	*($12 + [8]) = $5
	*($12 + [16]) = $8
	*($7 + [96]) = [0]
	*($12) = $9
	*($10) = ($12 + [24])
	$9 = *($7 + [96])
	*($7 + [96]) = [0]
	if ( $9 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $122($13, ($7 + [96]), ($7 + [80]), ($7 + [76]))
	$9 = *($7 + [96])
	*($7 + [96]) = [0]
	if ( ($9 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $123($9)
	CALL $10($9)
	
.LABEL $label$16
	if ( ($6 == 0) ){ goto $label$19 }
	CALL $78($0, *($7 + [32]), ((int_64)*($7 + [48]) + (int_64)*($7 + [28])), ((int_64)*($7 + [40]) + (int_64)*($7 + [24])), (int_64)120, (int_64)20, (int_64)0, (int_64)0, (int_64)0, (int_64)0, (int_64)0, (int_64)0, (int_64)0, (int_64)0, (int_64)0, (int_64)0, (int_64)0, (int_64)0)
	
.LABEL $label$19
	*($7 + [32]) = ((int_64)*($7 + [32]) + (int_64)1)
	$9 = (*($7 + [24]) + [1])
	*($7 + [24]) = $9
	$5 = *($7 + [56])
	if ( ((uint_64)$5 > (uint_64)(CASTING int_64)(int_32 $9)) ){ goto $label$14 }
	$4 = *($7 + [64])
	$9 = *($7 + [28])
	
.LABEL $label$13
	$9 = ($9 + [1])
	*($7 + [28]) = $9
	if ( ((uint_64)$4 > (uint_64)(CASTING int_64)(int_32 $9)) ){ goto $label$12 }
	
.LABEL $label$11
	$global$0 = ($7 + [112])
}

void .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$3 = ($2 & [1])
	if ( ($3 == 0) ){ goto $label$6 }
	$4 = ((*($0) & [-2]) + [-1])
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = [10]
	$2 = uint_32($2 >> [1])
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $28($0, $4, [1], $4, $4, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($2 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($2 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $2)) + [1]) = [0]
	*($0) = $1
}

void .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $8($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $10($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_64 .FUNC $21 (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

int_64 .FUNC $20 (float_64 $0, int_32 $1)
{
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	if ( ((int_32)$1 < (int_32)[2047]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	if ( ((int_32)$1 > (int_32)[-1992]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($1 + [-1023])
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 + [969])
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $8($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $22 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $8($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $10($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $25($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $16($1)
	$3 = [10]
	$4 = *($0)
	$5 = ($4 & [1])
	if ( ($5 == 0) ){ goto $label$1 }
	$3 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$1
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$6 }
	if ( $5 ){ goto $label$5 }
	$5 = uint_32($4 >> [1])
	CALL $25($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$6
	if ( $5 ){ goto $label$4 }
	$3 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = *($0 + [4])
	CALL $25($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$4
	$3 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memmove($3, $1, $2)
	
.LABEL $label$2
	*(($3 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	return $0
}

void .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $8(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $10($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $101 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$5 = ($global$0 - [144])
	$global$0 = $5
	*($5 + [40]) = $3
	CALL require_auth($1)
	$6 = ($0 + [32])
	$8 = *(($0 + [60]))
	$7 = *(($0 + [56]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$2 }
	
.LOOP $label$4:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$2) ){ goto $label$3 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$2 }
	if ( ((int_32)*($10 + [224]) == (int_32)$6) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	$9 = CALL db_find_i64(*($6), *(($0 + [40])), (int_64)-4426587238800818176, $2)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$10 = CALL $40($6, $9)
	if ( ((int_32)*($10 + [224]) == (int_32)$6) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)*($10 + [56]) != (int_32)[0]), [8808])
	CALL eosio_assert((int_64)(*($10 + [64]) == 0), [8827])
	CALL eosio_assert(((int_64)*($10 + [80]) == (int_64)$1), [8900])
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$1 = *($0)
	*($5 + [84]) = ($5 + [40])
	*($5 + [80]) = ($5 + [8])
	if ( $10 ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL $102($6, $10, $1, ($5 + [80]))
	$1 = *(($5 + [16]))
	if ( (int_64)($1 == 0) ){ goto $label$6 }
	if ( ($4 == 0) ){ goto $label$6 }
	$3 = CALL current_time()
	$11 = CALL current_time()
	*(($5 + [108])) = (int_64)0
	*(($5 + [124])) = (int_64)0
	*(($5 + [132])) = (int_64)0
	*($5 + [92]) = [0]
	*($5 + [96]) = [0]
	*($5 + [100 align=4]) = (int_64)0
	*($5 + [116 align=4]) = (int_64)0
	*($5 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [60])
	*($5 + [72]) = (int_64)3617214756542218240
	*($5 + [64]) = *($0)
	*($5 + [56]) = (int_64)-3075276115167357552
	*($5 + [48]) = $2
	CALL $99(($5 + [116]), ($5 + [64]), $0, ($5 + [56]), ($5 + [48]))
	$2 = *($0)
	*($5 + [100]) = ((CASTING uint_32)(uint_64 $1) + [10])
	*($5 + [72]) = (int_64)0
	*($5 + [64]) = ((int_64)((uint_64)$3 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL $88(($5 + [80]), ($5 + [64]), $2, [1])
	CALL $89(($5 + [80]))
	
.LABEL $label$6
	$global$0 = ($5 + [144])
}

void .FUNC $100 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5)
{
	int_32 $6
	int_64 $7
	$6 = ($global$0 - [96])
	$global$0 = $6
	$7 = CALL current_time()
	*(($6 + [60])) = (int_64)0
	*(($6 + [76])) = (int_64)0
	*(($6 + [84])) = (int_64)0
	*($6 + [44]) = [0]
	*($6 + [48]) = [0]
	*($6 + [52 align=4]) = (int_64)0
	*($6 + [68 align=4]) = (int_64)0
	*($6 + [32]) = ((CASTING uint_32)(uint_64 ((uint_64)$7 / (uint_64)(int_64)1000000)) + [60])
	*($6 + [24]) = (int_64)3617214756542218240
	*($6 + [16]) = *($0)
	*($6 + [8]) = (int_64)-3075276115167357552
	*($6) = $3
	CALL $99(($6 + [68]), ($6 + [16]), $0, ($6 + [8]), $6)
	$3 = *($0)
	*($6 + [52]) = $4
	*($6 + [24]) = (int_64)0
	*($6 + [16]) = $5
	CALL $88(($6 + [32]), ($6 + [16]), $3, [1])
	CALL $89(($6 + [32]))
	$global$0 = ($6 + [96])
}

void .FUNC $103 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	CALL prints([8938])
	CALL printui($4)
}

void .FUNC $102 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	float_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	*(*($3)) = *(*($3 + [4]))
	$6 = *($1)
	$7 = CALL current_time()
	*(($8 = *($3)) + [16]) = ((int_64)((uint_64)$7 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$7 = *((*($1 + [88]) + ($8 << [1])) + [1])
	$8 = *($8)
	$9 = *(*((*([0] + [8520]) + ($8 << [4]))))
	CALL eosio_assert(((uint_64)*(*($1 + [100])) >= (uint_64)((int_64)(uint_64)((int_64)$9 * (int_64)$7) >> (uint_64)(int_64)1) + (int_64)$9)), [9110])
	$9 = *(*((*([0] + [8520]) + (*(*($3)) << [4]))) + [2])
	CALL eosio_assert(((uint_64)*(*($1 + [100]) + [8]) >= (uint_64)((int_64)(uint_64)((int_64)$7 * (int_64)$9) >> (uint_64)(int_64)1) + (int_64)$9)), [9127])
	$9 = *(*((*([0] + [8520]) + (*(*($3)) << [4]))) + [4])
	CALL eosio_assert(((uint_64)*(*($1 + [100]) + [16]) >= (uint_64)((int_64)(uint_64)((int_64)$7 * (int_64)$9) >> (uint_64)(int_64)1) + (int_64)$9)), [9147])
	$3 = *($3)
	$10 = (*([0] + [8520]) + (*($3) << [4]))
	$11 = *($10)
	$9 = *($11)
	*(($8 = *($1 + [100]))) = (int_64))((int_64))(*($8) - $9) - (uint_64)((int_64)$9 * (int_64)$7) >> (uint_64)(int_64)1))
	$9 = *($11 + [2])
	*($8 + [8]) = (int_64))((int_64))(*($8 + [8]) - $9) - (uint_64)((int_64)$9 * (int_64)$7) >> (uint_64)(int_64)1))
	$9 = *($11 + [4])
	*($8 + [16]) = (int_64))((int_64))(*($8 + [16]) - $9) - (uint_64)((int_64)$9 * (int_64)$7) >> (uint_64)(int_64)1))
	$9 = *($10 + [12])
	$12 = ((float_64)(CASTING float_64)(uint_64 ((int_64)((int_64)$7 * (int_64)$9) + (int_64)$9)) * (float_64)(float_64)0.1)
	if ( (((float_64)$12 < (float_64)(float_64)18446744073709551615) & ((float_64)$12 >= (float_64)(float_64)0)) ){ goto $label$4 }
	$7 = (int_64)0
	goto $label$3 
	
.LABEL $label$4
	$7 = (Rounds 0)($12)
	
.LABEL $label$3
	*($3 + [8]) = $7
	$11 = ($1 + [204])
	$8 = *($11)
	if ( ((int_32)$8 == (int_32)*(($1 + [208]))) ){ goto $label$7 }
	*($8) = *($3)
	*(($8 + [24])) = *(($3 + [24]))
	*(($8 + [16])) = *(($3 + [16]))
	*(($8 + [8])) = *(($3 + [8]))
	*($11) = (*($11) + [32])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	CALL $202(($1 + [200]), $3)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [9811])
	
.LABEL $label$5
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [32]) = $1
	$11 = ($1 + [8])
	*($5 + [36]) = $11
	$10 = ($1 + [16])
	*($5 + [40]) = $10
	$13 = ($1 + [24])
	*($5 + [44]) = $13
	$14 = ($1 + [36])
	*($5 + [48]) = $14
	$15 = ($1 + [38])
	*($5 + [52]) = $15
	$16 = ($1 + [40])
	*($5 + [56]) = $16
	$17 = ($1 + [42])
	*($5 + [60]) = $17
	$18 = ($1 + [44])
	*($5 + [64]) = $18
	$19 = ($1 + [56])
	*($5 + [68]) = $19
	$20 = ($1 + [64])
	*($5 + [72]) = $20
	$21 = ($1 + [72])
	*($5 + [76]) = $21
	$22 = ($1 + [80])
	*($5 + [80]) = $22
	$23 = ($1 + [88])
	*($5 + [84]) = $23
	$24 = ($1 + [100])
	*($5 + [88]) = $24
	$25 = ($1 + [112])
	*($5 + [92]) = $25
	$26 = ($1 + [128])
	*($5 + [96]) = $26
	$27 = ($1 + [200])
	*($5 + [100]) = $27
	$28 = ($1 + [212])
	*($5 + [104]) = $28
	CALL $186(($5 + [32]), ($5 + [8]))
	$8 = *($5 + [24])
	if ( ($8 <= [513]) ){ goto $label$9 }
	$3 = CALL $1($8)
	goto $label$8 
	
.LABEL $label$9
	$3 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$8
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $8)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $11
	*($5 + [40]) = $10
	*($5 + [44]) = $13
	*($5 + [48]) = $14
	*($5 + [52]) = $15
	*($5 + [56]) = $16
	*($5 + [60]) = $17
	*($5 + [64]) = $18
	*($5 + [68]) = $19
	*($5 + [72]) = $20
	*($5 + [76]) = $21
	*($5 + [80]) = $22
	*($5 + [84]) = $23
	*($5 + [88]) = $24
	*($5 + [92]) = $25
	*($5 + [96]) = $26
	*($5 + [100]) = $27
	*($5 + [104]) = $28
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $3, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $3($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [112])
}

void .FUNC $105 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = *($1)
	*(($8 = *(($7 = ($1 + [140]))))) = (*($8) - *(*($3)))
	*(($8 = *($7)) + [1]) = (*($8 + [1]) - *(*($3 + [4])))
	*(($7 = *($7)) + [2]) = (*($7 + [2]) - *(*($3 + [8])))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$3
	*($5 + [24]) = [0]
	*($5 + [8]) = ($5 + [24])
	*($5 + [32]) = $1
	$8 = ($1 + [8])
	*($5 + [36]) = $8
	$9 = ($1 + [16])
	*($5 + [40]) = $9
	$10 = ($1 + [24])
	*($5 + [44]) = $10
	$11 = ($1 + [36])
	*($5 + [48]) = $11
	$12 = ($1 + [38])
	*($5 + [52]) = $12
	$13 = ($1 + [40])
	*($5 + [56]) = $13
	$14 = ($1 + [42])
	*($5 + [60]) = $14
	$15 = ($1 + [44])
	*($5 + [64]) = $15
	$16 = ($1 + [56])
	*($5 + [68]) = $16
	$17 = ($1 + [64])
	*($5 + [72]) = $17
	$18 = ($1 + [72])
	*($5 + [76]) = $18
	$19 = ($1 + [80])
	*($5 + [80]) = $19
	$20 = ($1 + [88])
	*($5 + [84]) = $20
	$21 = ($1 + [100])
	*($5 + [88]) = $21
	$22 = ($1 + [112])
	*($5 + [92]) = $22
	$23 = ($1 + [128])
	*($5 + [96]) = $23
	$24 = ($1 + [200])
	*($5 + [100]) = $24
	$25 = ($1 + [212])
	*($5 + [104]) = $25
	CALL $186(($5 + [32]), ($5 + [8]))
	$7 = *($5 + [24])
	if ( ($7 <= [513]) ){ goto $label$5 }
	$3 = CALL $1($7)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $7)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $8
	*($5 + [40]) = $9
	*($5 + [44]) = $10
	*($5 + [48]) = $11
	*($5 + [52]) = $12
	*($5 + [56]) = $13
	*($5 + [60]) = $14
	*($5 + [64]) = $15
	*($5 + [68]) = $16
	*($5 + [72]) = $17
	*($5 + [76]) = $18
	*($5 + [80]) = $19
	*($5 + [84]) = $20
	*($5 + [88]) = $21
	*($5 + [92]) = $22
	*($5 + [96]) = $23
	*($5 + [100]) = $24
	*($5 + [104]) = $25
	*($5 + [32]) = $1
	CALL $187(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [228]), $2, $3, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $3($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$6
	$global$0 = ($5 + [112])
}

void .FUNC $104 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6, int_64 $7, int_64 $8, int_64 $9, int_64 $10)
{
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	float_64 $20
	$11 = ($global$0 - [224])
	$global$0 = $11
	*($11 + [208]) = $6
	*($11 + [216]) = $5
	*($11 + [200]) = $7
	*($11 + [192]) = $8
	*($11 + [184]) = $9
	*($11 + [176]) = $10
	$12 = ($0 + [32])
	$14 = *(($0 + [60]))
	$13 = *(($0 + [56]))
	if ( ((int_32)$13 == (int_32)$14) ){ goto $label$2 }
	
.LOOP $label$4:
	$15 = ($14 + [-24])
	$16 = *($15)
	if ( ((int_64)*($16) == (int_64)$2) ){ goto $label$3 }
	$14 = $15
	if ( ((int_32)$13 != (int_32)$15) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$13 == (int_32)$14) ){ goto $label$2 }
	if ( ((int_32)*($16 + [224]) == (int_32)$12) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$16 = [0]
	$15 = CALL db_find_i64(*($12), *(($0 + [40])), (int_64)-4426587238800818176, $2)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$1 }
	$16 = CALL $40($12, $15)
	if ( ((int_32)*($16 + [224]) == (int_32)$12) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	$14 = *(($0 + [60]))
	$17 = *(($0 + [56]))
	if ( ((int_32)$17 == (int_32)$14) ){ goto $label$6 }
	
.LOOP $label$8:
	$15 = ($14 + [-24])
	$13 = *($15)
	if ( ((int_64)*($13) == (int_64)$3) ){ goto $label$7 }
	$14 = $15
	if ( ((int_32)$17 != (int_32)$15) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$17 == (int_32)$14) ){ goto $label$6 }
	if ( ((int_32)*($13 + [224]) == (int_32)$12) ){ goto $label$5 }
	CALL eosio_assert([0], [9596])
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	$15 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)-4426587238800818176, $3)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$5 }
	$13 = CALL $40($12, $15)
	if ( ((int_32)*($13 + [224]) == (int_32)$12) ){ goto $label$5 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$5
	CALL require_auth($1)
	CALL eosio_assert(*($16 + [36]), [8950])
	CALL eosio_assert(*($13 + [36]), [8981])
	$15 = ($16 + [140])
	CALL eosio_assert(((uint_64)*(*($15)) >= (uint_64)$5), [9019])
	CALL eosio_assert(((uint_64)*(*($15) + [1]) >= (uint_64)$6), [9050])
	CALL eosio_assert(((uint_64)*(*($15) + [2]) >= (uint_64)$7), [9080])
	CALL eosio_assert(((uint_64)*(*($16 + [100])) >= (uint_64)$8), [9110])
	CALL eosio_assert(((uint_64)*(*($16 + [100]) + [8]) >= (uint_64)$9), [9127])
	CALL eosio_assert(((uint_64)*(*($16 + [100]) + [16]) >= (uint_64)$10), [9147])
	if ( ((int_64)$4 != (int_64)5) ){ goto $label$9 }
	CALL eosio_assert(((int_64)$7 != (int_64)0), [9162])
	
.LABEL $label$9
	$7 = *($0)
	*($11 + [108]) = ($11 + [208])
	*($11 + [104]) = ($11 + [216])
	*($11 + [112]) = ($11 + [200])
	if ( $16 ){ goto $label$10 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$10
	CALL $105($12, $16, $7, ($11 + [104]))
	*(($15 = ($11 + [120]))) = (int_64)0
	*(($11 + [136])) = [0]
	*($11 + [104]) = (int_64)0
	*($11 + [112]) = (int_64)0
	*($11 + [128]) = (int_64)0
	*($11 + [8]) = [0]
	$13 = ($11 + [116])
	CALL $106($13, ($11 + [8]))
	$17 = *(($11 + [124]))
	$14 = *($15)
	*($11 + [8]) = [0]
	if ( ((uint_32)$14 >= (uint_32)$17) ){ goto $label$12 }
	*($14) = [0]
	$14 = (*($15) + [1])
	*($15) = $14
	goto $label$11 
	
.LABEL $label$12
	CALL $106($13, ($11 + [8]))
	$14 = *($15)
	
.LABEL $label$11
	*($11 + [8]) = [0]
	if ( ((uint_32)$14 >= (uint_32)*(($11 + [124]))) ){ goto $label$14 }
	*($14) = [0]
	*(($15 = ($11 + [120]))) = (*($15) + [1])
	goto $label$13 
	
.LABEL $label$14
	CALL $106($13, ($11 + [8]))
	
.LABEL $label$13
	*(*(($15 = ($11 + [116])))) = *($11 + [216])
	*(*($15) + [1]) = *($11 + [208])
	*(*($15) + [2]) = *($11 + [200])
	$13 = *($11 + [192])
	*($11 + [8]) = $13
	$15 = ($11 + [128])
	$14 = ($11 + [132])
	$17 = *($14)
	if ( ((uint_32)$17 >= (uint_32)*(($11 + [136]))) ){ goto $label$16 }
	*($17) = $13
	$13 = (*($14) + [1])
	*($14) = $13
	goto $label$15 
	
.LABEL $label$16
	CALL $106($15, ($11 + [8]))
	$13 = *($14)
	
.LABEL $label$15
	$14 = *($11 + [184])
	*($11 + [8]) = $14
	if ( ((uint_32)$13 >= (uint_32)*(($11 + [136]))) ){ goto $label$18 }
	*($13) = $14
	$14 = (*($14) + [1])
	*(($14 = ($11 + [132]))) = $14
	goto $label$17 
	
.LABEL $label$18
	CALL $106($15, ($11 + [8]))
	$14 = *(($11 + [132]))
	
.LABEL $label$17
	$13 = *($11 + [176])
	*($11 + [8]) = $13
	if ( ((uint_32)$14 >= (uint_32)*(($11 + [136]))) ){ goto $label$20 }
	*($14) = $13
	*(($15 = ($11 + [132]))) = (*($15) + [1])
	goto $label$19 
	
.LABEL $label$20
	CALL $106($15, ($11 + [8]))
	
.LABEL $label$19
	$15 = (CASTING uint_32)(uint_64 $3)
	*($11 + [144]) = $15
	$14 = (CASTING uint_32)(uint_64 $2)
	*($11 + [140]) = $14
	CALL $27(($11 + [104]), [9233])
	CALL $29(($11 + [104]), int_32(((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000)) << [24]) >> [24]))
	CALL $29(($11 + [104]), int_32(($14 << [24]) >> [24]))
	CALL $29(($11 + [104]), int_32(($15 << [24]) >> [24]))
	CALL $29(($11 + [104]), int_32((((int_32)(*(($16 + [116])) - *($16 + [112])) / (int_32)[72]) << [24]) >> [24]))
	*($11 + [152]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$18 = CALL $47(($11 + [32]), ($11 + [104]))
	$2 = (int_64)0
	$15 = *([0] + [8496])
	if ( ((int_32)*([0] + [8500]) == (int_32)$15) ){ goto $label$21 }
	$2 = (int_64)0
	$17 = ($18 + [40])
	$19 = ($18 + [36])
	$14 = [0]
	$13 = [0]
	
.LOOP $label$22:
	$14 = ((int_32)$14 * (int_32)[48])
	if ( ((float_64)((float_64)((float_64)(CASTING float_64)(uint_32 *(($15 + $14) + [44])) * (float_64)(float_64)0.04) * (float_64)CALL $107($0, *($19), *($17))) <= (float_64)(CASTING float_64)(uint_64 $2)) ){ goto $label$23 }
	$20 = ((float_64)((float_64)(CASTING float_64)(uint_32 *((*([0] + [8496]) + $14) + [44])) * (float_64)(float_64)0.004) * (float_64)CALL $107($0, *($19), *($17)))
	if ( (((float_64)$20 < (float_64)(float_64)18446744073709551615) & ((float_64)$20 >= (float_64)(float_64)0)) ){ goto $label$24 }
	$2 = (int_64)0
	goto $label$23 
	
.LABEL $label$24
	$2 = (Rounds 0)($20)
	
.LABEL $label$23
	$13 = ($13 + [1])
	$14 = ($13 & [65535])
	$15 = *([0] + [8496])
	if ( ((uint_32)((int_32)(*([0] + [8500]) - $15) / (int_32)[48]) > (uint_32)$14) ){ goto $label$22 }
	
.LABEL $label$21
	*($11 + [160]) = $2
	$15 = *($18 + [24])
	if ( ($15 == 0) ){ goto $label$25 }
	*(($18 + [28])) = $15
	CALL $10($15)
	
.LABEL $label$25
	$15 = *($18 + [12])
	if ( ($15 == 0) ){ goto $label$26 }
	*(($18 + [16])) = $15
	CALL $10($15)
	
.LABEL $label$26
	if ( ((*($18) & [1]) == 0) ){ goto $label$27 }
	CALL $10(*($18 + [8]))
	
.LABEL $label$27
	*($11 + [168]) = $4
	$2 = *($0)
	*($11 + [24]) = $0
	*($11 + [12]) = ($11 + [192])
	*($11 + [8]) = ($11 + [104])
	*($11 + [16]) = ($11 + [184])
	*($11 + [20]) = ($11 + [176])
	if ( $16 ){ goto $label$28 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$28
	CALL $108($12, $16, $2, ($11 + [8]))
	$0 = *(($11 + [128]))
	if ( ($0 == 0) ){ goto $label$29 }
	*(($11 + [132])) = $0
	CALL $10($0)
	
.LABEL $label$29
	$0 = *(($11 + [116]))
	if ( ($0 == 0) ){ goto $label$30 }
	*(($11 + [120])) = $0
	CALL $10($0)
	
.LABEL $label$30
	if ( ((*($11 + [104]) & [1]) == 0) ){ goto $label$31 }
	CALL $10(*(($11 + [112])))
	
.LABEL $label$31
	$global$0 = ($11 + [224])
}

int_64 .FUNC $107 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL $32(((float_64)CALL $33((float_64))((CASTING float_64)(uint_64 *($7 + [8])) - (CASTING float_64)(uint_64 *($4 + [8]))), (float_64)2) + (float_64)CALL $33((float_64))((CASTING float_64)(uint_64 *($7 + [16])) - (CASTING float_64)(uint_64 *($4 + [16]))), (float_64)2)))
	$3 = ($0 + [32])
	$5 = *(($0 + [60]))
	$4 = *(($0 + [56]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [224]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)-4426587238800818176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $40($3, $6)
	if ( ((int_32)*($7 + [224]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	$5 = *(($0 + [60]))
	$8 = *(($0 + [56]))
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$8:
	$6 = ($5 + [-24])
	$4 = *($6)
	if ( ((int_64)*($4) == (int_64)$2) ){ goto $label$7 }
	$5 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$6 }
	if ( ((int_32)*($4 + [224]) == (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [9596])
	goto $label$5 
	
.LABEL $label$6
	$4 = [0]
	$6 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)-4426587238800818176, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$4 = CALL $40($3, $6)
	if ( ((int_32)*($4 + [224]) == (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [9596])
	return .LABEL $label$5
}

void .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ($2 - $3)
	$5 = ($4 + [1])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = [2147483647]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)$7 > (uint_32)[1073741822]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $8($6)
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $31($0)
	
.LABEL $label$1
	*(($4 = ($5 + $4))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + $6)
	$5 = ($4 + [1])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $10($3)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $109 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($0 + [32])
	$4 = *(($0 + [60]))
	$3 = *(($0 + [56]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [224]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($2), *(($0 + [40])), (int_64)-4426587238800818176, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $40($2, $5)
	if ( ((int_32)*($6 + [224]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	CALL prints([9234])
	CALL prints(( [10316] ? [10321] : *($6 + [36]) ))
	$5 = *($6 + [88])
	CALL prints([9247])
	CALL printui(*($5 + [1]))
	$5 = *($6 + [88])
	CALL prints([9270])
	CALL printui(*(($5 + [3])))
	$5 = *($6 + [88])
	CALL prints([9293])
	CALL printui(*(($5 + [7])))
	$5 = *($6 + [88])
	CALL prints([9316])
	CALL printui(*(($5 + [9])))
	$5 = *($6 + [88])
	CALL prints([9339])
	CALL printui(*(($5 + [11])))
	$5 = *($6 + [100])
	CALL prints([9362])
	CALL printui(*($5))
	$5 = *($6 + [100])
	CALL prints([9385])
	CALL printui(*($5 + [8]))
	$5 = *($6 + [100])
	CALL prints([9408])
	CALL printui(*($5 + [16]))
	$5 = ($6 + [140])
	$4 = *($5)
	CALL prints([9431])
	CALL printui(*($4))
	$4 = *($5)
	CALL prints([9462])
	CALL printui(*($4 + [1]))
	$5 = *($5)
	CALL prints([9493])
	CALL printui(*($5 + [2]))
	$0 = ($6 + [116])
	$5 = *($0)
	$4 = *($6 + [112])
	CALL prints([9524])
	CALL printui((CASTING uint_64)(uint_32 ((int_32)($5 - $4) / (int_32)[72])))
	$5 = *($6 + [112])
	if ( ((int_32)*($0) == (int_32)$5) ){ goto $label$5 }
	$4 = [0]
	$2 = ($6 + [112])
	$6 = [0]
	
.LOOP $label$6:
	CALL prints([9543])
	CALL printui(((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)65535))
	CALL prints([9552])
	$4 = *($5)
	$3 = ($4 & [1])
	$5 = ($5 + ((int_32)$4 * (int_32)[72]))
	CALL prints_l(( *($5 + [8]) ? ($5 + [1]) : $3 ), ( *($5 + [4]) ? uint_32($4 >> [1]) : $3 ))
	$6 = ($6 + [1])
	$4 = ($6 & [65535])
	$5 = *($2)
	if ( ((uint_32)((int_32)(*($0) - $5) / (int_32)[72]) > (uint_32)$4) ){ goto $label$6 }
	
.LABEL $label$5
}

void .FUNC $108 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	float_64 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	$4 = ($global$0 - [160])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [224]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *($3)
	$8 = *($3 + [16])
	$9 = ($1 + [116])
	$10 = *($9)
	if ( ((int_32)$10 == (int_32)*(($1 + [120]))) ){ goto $label$4 }
	CALL $47($10, $7)
	*($9) = (*($9) + [72])
	goto $label$3 
	
.LABEL $label$4
	CALL $205(($1 + [112]), $7)
	
.LABEL $label$3
	*(($9 = *($1 + [100]))) = (int_64))(*($9) - *(*($3 + [4])))
	*($9 + [8]) = (int_64))(*($9 + [8]) - *(*($3 + [8])))
	$11 = (int_64)
	*($9 + [16]) = $11(*($9 + [16]) - *(*($3 + [12]))))
	$12 = CALL $47(($5 + [8]), *($3))
	$13 = (int_64)0
	$7 = *([0] + [8496])
	if ( ((int_32)*([0] + [8500]) == (int_32)$7) ){ goto $label$5 }
	$14 = (float_64)0
	$15 = ($12 + [12])
	$16 = ($12 + [40])
	$17 = ($12 + [36])
	$9 = [0]
	$10 = [0]
	
.LOOP $label$6:
	$18 = *((*($15) + $9))
	$9 = ($7 + ((int_32)$9 * (int_32)[48]))
	$7 = *($9 + [40])
	$14 = ((float_64)((float_64)((float_64)((float_64)((float_64)(CASTING float_64)(uint_32 *($9 + [42])) * (float_64)(float_64)0.2) * (float_64)CALL $107($8, *($17), *($16))) + (float_64)(CASTING float_64)(uint_32 $7)) * (float_64)(CASTING float_64)(uint_32 $18)) + (float_64)$14)
	$10 = ($10 + [1])
	$9 = ($10 & [65535])
	$7 = *([0] + [8496])
	if ( ((uint_32)((int_32)(*([0] + [8500]) - $7) / (int_32)[48]) > (uint_32)$9) ){ goto $label$6 }
	if ( ((((float_64)$14 < (float_64)(float_64)18446744073709551615) & ((float_64)$14 >= (float_64)(float_64)0)) == 0) ){ goto $label$5 }
	$13 = (Rounds 0)($14)
	
.LABEL $label$5
	CALL eosio_assert(((uint_64)$11 >= (uint_64)$13), [10279])
	$9 = *($12 + [24])
	if ( ($9 == 0) ){ goto $label$7 }
	*(($12 + [28])) = $9
	CALL $10($9)
	
.LABEL $label$7
	$9 = *($12 + [12])
	if ( ($9 == 0) ){ goto $label$8 }
	*(($12 + [16])) = $9
	CALL $10($9)
	
.LABEL $label$8
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*($12 + [8]))
	
.LABEL $label$9
	$3 = CALL $47(($5 + [88]), *($3))
	$13 = (int_64)0
	$7 = *([0] + [8496])
	if ( ((int_32)*([0] + [8500]) == (int_32)$7) ){ goto $label$10 }
	$14 = (float_64)0
	$15 = ($3 + [12])
	$16 = ($3 + [40])
	$17 = ($3 + [36])
	$9 = [0]
	$10 = [0]
	
.LOOP $label$11:
	$18 = *((*($15) + $9))
	$9 = ($7 + ((int_32)$9 * (int_32)[48]))
	$7 = *($9 + [40])
	$14 = ((float_64)((float_64)((float_64)((float_64)((float_64)(CASTING float_64)(uint_32 *($9 + [42])) * (float_64)(float_64)0.2) * (float_64)CALL $107($8, *($17), *($16))) + (float_64)(CASTING float_64)(uint_32 $7)) * (float_64)(CASTING float_64)(uint_32 $18)) + (float_64)$14)
	$10 = ($10 + [1])
	$9 = ($10 & [65535])
	$7 = *([0] + [8496])
	if ( ((uint_32)((int_32)(*([0] + [8500]) - $7) / (int_32)[48]) > (uint_32)$9) ){ goto $label$11 }
	if ( ((((float_64)$14 < (float_64)(float_64)18446744073709551615) & ((float_64)$14 >= (float_64)(float_64)0)) == 0) ){ goto $label$10 }
	$13 = (Rounds 0)($14)
	
.LABEL $label$10
	*(($9 = *(($1 + [100]))) + [16]) = (int_64))(*($9 + [16]) - $13)
	$9 = *($3 + [24])
	if ( ($9 == 0) ){ goto $label$12 }
	*(($3 + [28])) = $9
	CALL $10($9)
	
.LABEL $label$12
	$9 = *($3 + [12])
	if ( ($9 == 0) ){ goto $label$13 }
	*(($3 + [16])) = $9
	CALL $10($9)
	
.LABEL $label$13
	if ( ((*($5 + [88]) & [1]) == 0) ){ goto $label$14 }
	CALL $10(*($3 + [8]))
	
.LABEL $label$14
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$15 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$15
	*($5) = [0]
	*($5 + [88]) = $5
	*($5 + [8]) = $1
	$7 = ($1 + [8])
	*($5 + [12]) = $7
	$10 = ($1 + [16])
	*($5 + [16]) = $10
	$18 = ($1 + [24])
	*($5 + [20]) = $18
	$15 = ($1 + [36])
	*($5 + [24]) = $15
	$16 = ($1 + [38])
	*($5 + [28]) = $16
	$17 = ($1 + [40])
	*($5 + [32]) = $17
	$3 = ($1 + [42])
	*($5 + [36]) = $3
	$12 = ($1 + [44])
	*($5 + [40]) = $12
	$19 = ($1 + [56])
	*($5 + [44]) = $19
	$20 = ($1 + [64])
	*($5 + [48]) = $20
	$21 = ($1 + [72])
	*($5 + [52]) = $21
	$22 = ($1 + [80])
	*($5 + [56]) = $22
	$23 = ($1 + [88])
	*($5 + [60]) = $23
	$24 = ($1 + [100])
	*($5 + [64]) = $24
	$25 = ($1 + [112])
	*($5 + [68]) = $25
	$26 = ($1 + [128])
	*($5 + [72]) = $26
	$27 = ($1 + [200])
	*($5 + [76]) = $27
	$28 = ($1 + [212])
	*($5 + [80]) = $28
	CALL $186(($5 + [8]), ($5 + [88]))
	$8 = *($5)
	if ( ($8 <= [513]) ){ goto $label$17 }
	$9 = CALL $1($8)
	goto $label$16 
	
.LABEL $label$17
	$9 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $9
	
.LABEL $label$16
	*($5 + [92]) = $9
	*($5 + [88]) = $9
	*($5 + [96]) = ($9 + $8)
	*($5) = ($5 + [88])
	*($5 + [12]) = $7
	*($5 + [16]) = $10
	*($5 + [20]) = $18
	*($5 + [24]) = $15
	*($5 + [28]) = $16
	*($5 + [32]) = $17
	*($5 + [36]) = $3
	*($5 + [40]) = $12
	*($5 + [44]) = $19
	*($5 + [48]) = $20
	*($5 + [52]) = $21
	*($5 + [56]) = $22
	*($5 + [60]) = $23
	*($5 + [64]) = $24
	*($5 + [68]) = $25
	*($5 + [72]) = $26
	*($5 + [76]) = $27
	*($5 + [80]) = $28
	*($5 + [8]) = $1
	CALL $187(($5 + [8]), $5)
	CALL db_update_i64(*($1 + [228]), $2, $9, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$20 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL $3($9)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$18 }
	
.LABEL $label$19
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [160])
	return 
	
.LABEL $label$18
	$global$0 = ($5 + [160])
}

void .FUNC $38 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *([0] + [8520])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *([0] + [8524])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($2 + [-16])
	$4 = *($3)
	if ( ($4 == 0) ){ goto $label$5 }
	*(($2 + [-12])) = $4
	CALL $10($4)
	
.LABEL $label$5
	$2 = $3
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *([0] + [8520])
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*([0] + [8524]) = $1
	CALL $10($3)
	
.LABEL $label$1
}

void .FUNC $39 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = $1
	$3 = ($0 + [32])
	$5 = *(($0 + [60]))
	$4 = *(($0 + [56]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [224]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)-4426587238800818176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $40($3, $6)
	if ( ((int_32)*($7 + [224]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	
.LABEL $label$1
	CALL eosio_assert(*($7 + [36]), [8557])
	$1 = (int_64)
	*($2 + [16]) = ((uint_64)$1(((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) - *(*($7 + [24])))) / (uint_64)(int_64)60)
	if ( (uint_64)($1 <= (int_64)60) ){ goto $label$5 }
	$1 = *($0)
	*($2) = $0
	*($2 + [4]) = ($2 + [24])
	*($2 + [8]) = ($2 + [16])
	if ( $7 ){ goto $label$6 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$6
	CALL $41($3, $7, $1, $2)
	
.LABEL $label$5
	$global$0 = ($2 + [32])
}

void .FUNC $36 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *([0] + [8496])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *([0] + [8500])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($2 + [-48])
	$4 = *(($2 + [-32]))
	if ( ($4 == 0) ){ goto $label$5 }
	*(($2 + [-28])) = $4
	CALL $10($4)
	
.LABEL $label$5
	$2 = $3
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$2 = *([0] + [8496])
	goto $label$2 
	
.LABEL $label$3
	$2 = $1
	
.LABEL $label$2
	*([0] + [8500]) = $1
	CALL $10($2)
	
.LABEL $label$1
}

void .FUNC $37 (int_32 $0)
{
	int_32 $1
	$1 = *([0] + [8508])
	if ( ($1 == 0) ){ goto $label$1 }
	*([0] + [8512]) = $1
	CALL $10($1)
	
.LABEL $label$1
}

void .FUNC $34 (int_32 $0)
{
}

int_32 .FUNC $35 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	CALL $18([8220])
	$3 = *([0] + [8228])
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = *([0] + [8232])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$3 = [8236]
	*([0] + [8228]) = [8236]
	$4 = *([0] + [8232])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = CALL $2([260], [1])
	if ( ($3 == 0) ){ goto $label$1 }
	$4 = [0]
	*($3) = *([0] + [8228])
	*([0] + [8228]) = $3
	*([0] + [8232]) = [0]
	
.LABEL $label$2
	*([0] + [8232]) = ($4 + [1])
	*((($3 = ($3 + ($4 << [2]))) + [132])) = $1
	*(($3 + [4])) = $0
	CALL $19([8220])
	return [0]
	
.LABEL $label$1
	CALL $19([8220])
	return [-1]
}

int_64 .FUNC $32 (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($2) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$3 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$2 > (int_32)[0]) ){ goto $label$3 }
	if ( ((($2 & [2147483647]) | $3) == 0) ){ goto $label$2 }
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$3 }
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
	
.LABEL $label$3
	$4 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $4) ){ goto $label$4 }
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	$4 = [0]
	$6 = $3
	if ( (($2 & [1048576]) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = [0]
	
.LOOP $label$9:
	$2 = uint_32($3 >> [11])
	$4 = ($4 + [-21])
	$6 = ($3 << [21])
	$3 = $6
	if ( ($2 == 0) ){ goto $label$9 }
	if ( ($2 & [1048576]) ){ goto $label$6 }
	
.LABEL $label$7
	$5 = [0]
	
.LOOP $label$10:
	$5 = ($5 + [1])
	$3 = ($2 & [524288])
	$7 = ($2 << [1])
	$2 = $7
	if ( ($3 == 0) ){ goto $label$10 }
	goto $label$5 
	
.LABEL $label$6
	$7 = $2
	
.LABEL $label$5
	$3 = ($6 << $5)
	$4 = (($4 + [1]) - $5)
	$2 = (uint_32($6 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$2 = (($2 & [1048575]) | [1048576])
	$7 = ($4 + [-1023])
	if ( (($7 & [1]) == 0) ){ goto $label$11 }
	$2 = (($2 << [1]) | uint_32($3 >> [31]))
	$3 = ($3 << [1])
	
.LABEL $label$11
	$5 = (uint_32($3 >> [31]) | ($2 << [1]))
	$2 = ((int_32)$5 < (int_32)[2097152])
	$8 = ( [0] ? [2097152] : $2 )
	$5 = ( [0] ? [4194304] : $2 )
	$2 = ($5 | [1048576])
	$5 = ($5 << [1])
	$4 = (( $5 ? ($5 + [-4194304]) : $2 ) | (uint_32($3 >> [30]) & [1]))
	if ( ((int_32)$4 < (int_32)$2) ){ goto $label$12 }
	$8 = ($8 | [1048576])
	$4 = ($4 - $2)
	$5 = ($2 + [1048576])
	
.LABEL $label$12
	$4 = ($5 + [524288])
	$2 = (($4 << [1]) | (uint_32($3 >> [29]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$13 }
	$8 = ($8 + [524288])
	$2 = ($2 - $4)
	$5 = ($5 + [1048576])
	
.LABEL $label$13
	$4 = ($5 + [262144])
	$2 = (($2 << [1]) | (uint_32($3 >> [28]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$14 }
	$8 = ($8 + [262144])
	$2 = ($2 - $4)
	$5 = ($5 + [524288])
	
.LABEL $label$14
	$4 = ($5 + [131072])
	$2 = (($2 << [1]) | (uint_32($3 >> [27]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$15 }
	$8 = ($8 + [131072])
	$2 = ($2 - $4)
	$5 = ($5 + [262144])
	
.LABEL $label$15
	$4 = ($5 + [65536])
	$2 = (($2 << [1]) | (uint_32($3 >> [26]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$16 }
	$8 = ($8 + [65536])
	$2 = ($2 - $4)
	$5 = ($5 + [131072])
	
.LABEL $label$16
	$4 = ($5 + [32768])
	$2 = (($2 << [1]) | (uint_32($3 >> [25]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$17 }
	$8 = ($8 + [32768])
	$2 = ($2 - $4)
	$5 = ($5 + [65536])
	
.LABEL $label$17
	$4 = ($5 + [16384])
	$2 = (($2 << [1]) | (uint_32($3 >> [24]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$18 }
	$8 = ($8 + [16384])
	$2 = ($2 - $4)
	$5 = ($5 + [32768])
	
.LABEL $label$18
	$4 = ($5 + [8192])
	$2 = (($2 << [1]) | (uint_32($3 >> [23]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$19 }
	$8 = ($8 + [8192])
	$2 = ($2 - $4)
	$5 = ($5 + [16384])
	
.LABEL $label$19
	$4 = ($5 + [4096])
	$2 = (($2 << [1]) | (uint_32($3 >> [22]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$20 }
	$8 = ($8 + [4096])
	$2 = ($2 - $4)
	$5 = ($5 + [8192])
	
.LABEL $label$20
	$4 = ($5 + [2048])
	$2 = (($2 << [1]) | (uint_32($3 >> [21]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$21 }
	$8 = ($8 + [2048])
	$2 = ($2 - $4)
	$5 = ($5 + [4096])
	
.LABEL $label$21
	$4 = ($5 + [1024])
	$2 = (($2 << [1]) | (uint_32($3 >> [20]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$22 }
	$8 = ($8 + [1024])
	$2 = ($2 - $4)
	$5 = ($5 + [2048])
	
.LABEL $label$22
	$4 = ($5 + [512])
	$2 = (($2 << [1]) | (uint_32($3 >> [19]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$23 }
	$8 = ($8 + [512])
	$2 = ($2 - $4)
	$5 = ($5 + [1024])
	
.LABEL $label$23
	$4 = ($5 + [256])
	$2 = (($2 << [1]) | (uint_32($3 >> [18]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$24 }
	$8 = ($8 + [256])
	$2 = ($2 - $4)
	$5 = ($5 + [512])
	
.LABEL $label$24
	$4 = ($5 + [128])
	$2 = (($2 << [1]) | (uint_32($3 >> [17]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$25 }
	$8 = ($8 + [128])
	$2 = ($2 - $4)
	$5 = ($5 + [256])
	
.LABEL $label$25
	$4 = ($5 + [64])
	$2 = (($2 << [1]) | (uint_32($3 >> [16]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$26 }
	$8 = ($8 + [64])
	$2 = ($2 - $4)
	$5 = ($5 + [128])
	
.LABEL $label$26
	$4 = ($5 + [32])
	$2 = (($2 << [1]) | (uint_32($3 >> [15]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$27 }
	$8 = ($8 + [32])
	$2 = ($2 - $4)
	$5 = ($5 + [64])
	
.LABEL $label$27
	$4 = ($5 + [16])
	$2 = (($2 << [1]) | (uint_32($3 >> [14]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$28 }
	$8 = ($8 + [16])
	$2 = ($2 - $4)
	$5 = ($5 + [32])
	
.LABEL $label$28
	$4 = ($5 + [8])
	$2 = (($2 << [1]) | (uint_32($3 >> [13]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$29 }
	$8 = ($8 + [8])
	$2 = ($2 - $4)
	$5 = ($5 + [16])
	
.LABEL $label$29
	$4 = ($5 + [4])
	$2 = (($2 << [1]) | (uint_32($3 >> [12]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$30 }
	$8 = ($8 + [4])
	$2 = ($2 - $4)
	$5 = ($5 + [8])
	
.LABEL $label$30
	$4 = ($5 + [2])
	$2 = (($2 << [1]) | (uint_32($3 >> [11]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$31 }
	$8 = ($8 + [2])
	$2 = ($2 - $4)
	$5 = ($5 + [4])
	
.LABEL $label$31
	$2 = ($5 + [1])
	$4 = (($2 << [1]) | (uint_32($3 >> [10]) & [1]))
	if ( ((int_32)$4 < (int_32)$2) ){ goto $label$32 }
	$8 = ($8 + [1])
	$4 = ($4 - $2)
	$5 = ($5 + [2])
	
.LABEL $label$32
	$2 = ($3 << [23])
	$3 = (($4 << [1]) | (uint_32($3 >> [9]) & [1]))
	$9 = uint_32($7 >> [1])
	$4 = [-2147483648]
	$10 = [0]
	$6 = [0]
	
.LOOP $label$33:
	$7 = ($6 + $4)
	if ( ((int_32)$3 > (int_32)$5) ){ goto $label$35 }
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$34 }
	if ( ($2 <= $7) ){ goto $label$34 }
	
.LABEL $label$35
	$3 = (($3 - $5) - ($2 <= $7))
	$6 = ($7 + $4)
	$5 = ($5 + (((int_32)$7 < (int_32)[0]) & ((int_32)$6 > (int_32)[-1])))
	$10 = ($10 + $4)
	$2 = ($2 - $7)
	
.LABEL $label$34
	$3 = (uint_32($2 >> [31]) | ($3 << [1]))
	$2 = ($2 << [1])
	$4 = uint_32($4 >> [1])
	if ( $4 ){ goto $label$33 }
	if ( (($2 | $3) == 0) ){ goto $label$36 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$37 }
	$10 = (($10 & [1]) + $10)
	goto $label$36 
	
.LABEL $label$37
	$8 = ($8 + [1])
	$10 = [0]
	
.LABEL $label$36
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($9 << [20]) + int_32($8 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($8 << [31])))))
	
.LABEL $label$2
	return $0
}

int_64 .FUNC $33 (float_64 $0, float_64 $1)
{
	float_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	float_64 $19
	float_64 $20
	$2 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (CASTING int_64)(float_64 $1)
	$4 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	$5 = ($4) & [2147483647]
	if ( (($5) | $6) == 0) ){ goto $label$1 }
	$7 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)32))
	$9 = (CASTING uint_32)(uint_64 $7)
	if ( $9 ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$10 = ($8 & [2147483647])
	if ( ((uint_32)$10 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$9 != (int_32)[0]) & ((int_32)$10 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$5 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$5 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$11 = [0]
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$8 }
	$11 = [2]
	if ( ((uint_32)$5 > (uint_32)[1128267775]) ){ goto $label$8 }
	$11 = [0]
	if ( ($5 <= [1072693248]) ){ goto $label$8 }
	$12 = uint_32($5 >> [20])
	if ( ($5 <= [1094713344]) ){ goto $label$7 }
	$11 = ([1075] - $12)
	$12 = uint_32($6 >> $11)
	$11 = ( ([2] - ($12 & [1])) ? [0] : ((int_32)($12 << $11) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$11 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $12)
	$11 = uint_32($5 >> $6)
	$11 = ( ([2] - ($11 & [1])) ? [0] : ((int_32)($11 << $6) == (int_32)$5) )
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($10 + [-1072693248]) | $9) == 0) ){ goto $label$1 }
	if ( ($10 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$4 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$4 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$4 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$4 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL $32($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$2 = CALL $21($0)
	if ( $9 ){ goto $label$26 }
	if ( ($10 == 0) ){ goto $label$25 }
	if ( ((int_32)($10 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$25 }
	
.LABEL $label$26
	$13 = (float_64)1
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$22 }
	if ( ((int_32)$11 == (int_32)[1]) ){ goto $label$24 }
	if ( $11 ){ goto $label$22 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$25
	$2 = ( ((float_64)(float_64)1 / (float_64)$2) ? $2 : ((int_32)$4 < (int_32)[0]) )
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($11 | ($10 + [-1072693248])) == 0) ){ goto $label$23 }
	return ( !(float_64)$2 ? $2 : ((int_32)$11 == (int_32)[1]) )
	
.LABEL $label$24
	$13 = (float_64)-1
	if ( ((uint_32)$5 >= (uint_32)[1105199105]) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$1 = (float_64)
	return ((float_64)$1($2 - $2)) / (float_64)$1)
	
.LABEL $label$22
	if ( ($5 <= [1105199105]) ){ goto $label$20 }
	
.LABEL $label$21
	if ( ($5 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$10 > (uint_32)[1072693247]) ){ goto $label$19 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$4 < (int_32)[0]) )
	
.LABEL $label$27
	if ( ((uint_32)$10 > (uint_32)[1072693246]) ){ goto $label$18 }
	return ( ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300) ? ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300) : ((int_32)$4 < (int_32)[0]) )
	
.LABEL $label$20
	$5 = [0]
	if ( ((uint_32)$10 > (uint_32)[1048575]) ){ goto $label$29 }
	$2 = ((float_64)$2 * (float_64)(float_64)9007199254740992)
	$10 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $2) >> (uint_64)(int_64)32))
	$4 = [-53]
	goto $label$28 
	
.LABEL $label$29
	$4 = [0]
	
.LABEL $label$28
	$6 = ($10 & [1048575])
	$8 = ($6 | [1072693248])
	$4 = ((int_32($10 >> [20]) + $4) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$16 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$17 }
	$5 = [1]
	goto $label$16 
	
.LABEL $label$19
	return ( (float_64)inf ? (float_64)0 : ((int_32)$4 > (int_32)[0]) )
	
.LABEL $label$18
	if ( ($10 <= [1072693249]) ){ goto $label$15 }
	return ( ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300) ? ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300) : ((int_32)$4 > (int_32)[0]) )
	
.LABEL $label$17
	$8 = ($8 + [-1048576])
	$4 = ($4 + [1])
	
.LABEL $label$16
	$2 = (CASTING float_64)(int_32 $4)
	$16 = ((float_64)*(($6 + [8608])) + (float_64)((float_64)((float_64)(float_64))($2 - (float_64))($0 - $17)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$2 = ((float_64)((float_64)$15 * (float_64)$0) + (float_64)((float_64)$2 * (float_64)(float_64))($16 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $19))
	$0 = ((float_64)$2 * (float_64)$2)
	$20 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($8 >> [1]) | [536870912]) + ($5 << [18])) + [524288])) << (int_64)32))
	$15 = ((float_64)$18 * (float_64)(float_64))((float_64))($17 - ((float_64)$0 * (float_64)$20)) - ((float_64)$0 * (float_64)(float_64))($15 - (float_64))($20 - $16)
	$16 = ((float_64)((float_64)((float_64)$2 + (float_64)$0) * (float_64)$15))
	$19 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$19 + (float_64)(float_64)3) + (float_64)$16)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$18 = ((float_64)(float_64)1 / (float_64)((float_64)$16 + (float_64)$15))
	$16 = *(($6 + [8592]))
	$15 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $2) & (int_64)4294967295)))
	$17 = (float_64)
	$2 = ((float_64)$17($15 - $16)) * (float_64)$18
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $2)) & (int_64)-4294967296)
	$17 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$17 & (int_64)-4294967296))))
	$15 = ((float_64)$0 + (float_64)$2)
	$6 = ($5 << [3])
	$14 = *(($6 + [8624]))
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$14 + (float_64)((float_64)$15)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$14 = (float_64))((float_64))((float_64))($0 + (float_64)$16)))) + (float_64)$2)) & (int_64)-4294967296))) - $2) - $14) - $15)
	goto $label$14 
	
.LABEL $label$15
	$16 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$2 + (float_64)(float_64)-1)
	$2 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$2 + (float_64)$16))) & (int_64)-4294967296)
	$14 = (float_64))($0) - $2)
	
.LABEL $label$14
	$1 = ((float_64)((float_64)(float_64))($16 - $14) * (float_64)$1) + (float_64)((float_64)(float_64))($1 - $15) * (float_64)$0
	$15 = (CASTING float_64)(int_64 ((int_64)$3 & (int_64)-4294967296))
	$2 = ((float_64)$0 * (float_64)$15)
	$0 = ((float_64)$2 + (float_64)$1)
	$3 = (CASTING int_64)(float_64 $0)
	$5 = (CASTING uint_32)(uint_64 $3)))
	$8 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( ((int_32)$8) < (int_32)[1083179008]) ){ goto $label$34 }
	if ( ((($8 + [-1083179008]) | $5) == 0) ){ goto $label$33 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$34
	if ( (($8 & [2147482624]) <= [1083231232]) ){ goto $label$31 }
	if ( ((($8 + [1064252416]) | $5) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$33
	if ( ((int_32)((float_64)((float_64)$1 + (float_64)(float_64)8.008566259537294e-17) > (float_64)(float_64))($0 - $2)) ^ (int_32)[1]) ){ goto $label$31 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$32
	if ( (((int_32)((float_64)$1 <= (float_64)(float_64))($0 - $2)) ^ (int_32)[1]) == 0) ){ goto $label$30 }
	
.LABEL $label$31
	$5 = [0]
	$6 = ($8 & [2147483647])
	if ( ($6 <= [1071644673]) ){ goto $label$35 }
	$4 = (uint_32($6 >> [20]) & [2047])
	$6 = (uint_32([1048576] >> (uint_32($6 >> [20]) + [-1022])) + $8)
	$5 = uint_32((($6 & [1048575]) | [1048576]) >> ([1043] - $4))
	$5 = ( ([0] - $5) ? $5 : ((int_32)$8 < (int_32)[0]) )
	$2 = (float_64)
	$3 = (CASTING int_64)(float_64 ((float_64)$1 + (float_64)$2($2 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (int_32([-1048576] >> ($4 + [-1023])) & $6)) << (int_64)32))))))
	
.LABEL $label$35
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$2 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $2)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)$3 & (int_64)-4294967296))
	$15 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$15 + (float_64)$2 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = ((float_64)(float_64))($1)
	$3 = (CASTING int_64)(float_64 $1 - (float_64))(((float_64)((float_64)$1 * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)) - ((float_64)$0($2 - (float_64))($1 - $15))
	$8 = (($5 << [20]) + (CASTING uint_32)(uint_64 (uint_64)$3 + (float_64)((float_64)$1 * (float_64)$0)))
	if ( ((int_32)$8 + (float_64)(float_64)1)))) >> (uint_64)(int_64)32)))) > (int_32)[1048575]) ){ goto $label$36 }
	return ((float_64)$13 * (float_64)CALL $20($1, $5))
	
.LABEL $label$36
	return ((float_64)$13 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$3 & (int_64)4294967295))))
	
.LABEL $label$30
	return ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $2
}

int_32 .FUNC $30 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $17(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

void .FUNC $31 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $198 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9590])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$3 = ($1 + [32])
	$2 = *($0 + [4])
	$0 = CALL $190(CALL $189($0, ($1 + [8])), ($1 + [20]))
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$2 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $3, [8])
	$2 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $2
	$1 = ($1 + [40])
	if ( ((int_32)(*(($0 + [8])) - $2) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9590])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $1, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	return $0
}

void .FUNC $199 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = ($2 - $1)
	if ( ((uint_32)$3 <= (uint_32)($4 - $5)) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $10($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$2 = [2147483647]
	if ( ((uint_32)$4 > (uint_32)[1073741822]) ){ goto $label$6 }
	$5 = ($4 << [1])
	$2 = ( $3 ? $5 : ($5 <= $3) )
	
.LABEL $label$6
	$5 = CALL $8($2)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $2)
	CALL memcpy($5, $1, $3)
	$1 = ($0 + [4])
	$0 = (*($0 + [4]) + $3)
	goto $label$3 
	
.LABEL $label$4
	$4 = (*($0 + [4]) - $5)
	$6 = ( ($1 + $4) ? $2 : ((uint_32)$3 > (uint_32)$4) )
	$7 = ($6 - $1)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $7)
	
.LABEL $label$7
	$1 = ($0 + [4])
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$8 }
	$0 = ($2 - $6)
	if ( ((int_32)$0 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy(*($1), $6, $0)
	$0 = (*($1) + $0)
	goto $label$3 
	
.LABEL $label$8
	$0 = ($5 + $7)
	
.LABEL $label$3
	*($1) = $0
	
.LABEL $label$2
	return (unreachable)
	
.LABEL $label$1
	CALL $31($0)
}

void .FUNC $196 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [9590])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9590])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9590])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC $197 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9674])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$3 = ($1 + [32])
	$2 = *($0 + [4])
	$0 = CALL $173(CALL $172($0, ($1 + [8])), ($1 + [20]))
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9674])
	$2 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $2, [8])
	$2 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $2
	$1 = ($1 + [40])
	if ( ((uint_32)(*(($0 + [8])) - $2) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9674])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $2, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	return $0
}

int_32 .FUNC $194 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [5]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [16]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [16]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$6 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$3 }
	$7 = ($2 + [28])
	
.LOOP $label$4:
	*($2 + [8]) = $0
	*($2 + [16]) = $4
	*((($2 + [16]) + [8])) = ($4 + [16])
	*($7) = ($4 + [24])
	*($2 + [20]) = ($4 + [8])
	CALL $196(($2 + [16]), ($2 + [8]))
	$4 = ($4 + [32])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

int_32 .FUNC $195 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$5 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [9590])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [1])
	$4 = (*($7) + [1])
	*($7) = $4
	$6 = ($6 + [1])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $192 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[72]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [16]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [16]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$6 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$3 }
	$7 = ($2 + [24])
	$8 = ($2 + [32])
	$5 = ($2 + [36])
	$1 = ($2 + [44])
	
.LOOP $label$4:
	*($2 + [8]) = $0
	*($2 + [16]) = $4
	*($7) = ($4 + [24])
	*((($2 + [16]) + [12])) = ($4 + [36])
	*($8) = ($4 + [40])
	*($5) = ($4 + [48])
	*((($2 + [16]) + [24])) = ($4 + [56])
	*($1) = ($4 + [64])
	*($2 + [20]) = ($4 + [12])
	CALL $193(($2 + [16]), ($2 + [8]))
	$4 = ($4 + [72])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [48])
	return $0
}

void .FUNC $193 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $190(*($1), *($0))
	CALL $195(*($1), *($0 + [4]))
	CALL $195(*($1), *($0 + [8]))
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [9590])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9590])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9590])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [9590])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

int_32 .FUNC $190 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [9590])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $191 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [1]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9590])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($8) - $4) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [9590])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( ((int_32)(*($8) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9590])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [1]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	$7 = ($7 + [2])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}