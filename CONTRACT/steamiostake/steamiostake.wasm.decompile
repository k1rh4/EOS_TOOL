(data (i32.const 8192) "STEAM\00")
(data (i32.const 8198) "quantity must bet greater than 0\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 8317) "only stake for game token\00")
(data (i32.const 8343) "quantity must be less than balance\00")
(data (i32.const 8378) "quantity must be less than available balance\00")
(data (i32.const 8423) "unstake is not active!\00")
(data (i32.const 8446) "unable to find this account\00")
(data (i32.const 8474) "quantity must be less than unlock stake\00")
(data (i32.const 8514) "quantity must bet less than total stake\00")
(data (i32.const 8554) "string is too long to be a valid symbol_code\00")
(data (i32.const 8599) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 8652) "invalid symbol name\00")
(data (i32.const 8672) "unable to find key\00")
(data (i32.const 8691) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 8742) "error reading iterator\00")
(data (i32.const 8765) "read\00")
(data (i32.const 8770) "attempt to add asset with different symbol\00")
(data (i32.const 8813) "addition underflow\00")
(data (i32.const 8832) "addition overflow\00")
(data (i32.const 8850) "cannot pass end iterator to modify\00")
(data (i32.const 8885) "object passed to modify is not in multi_index\00")
(data (i32.const 8931) "cannot modify objects in table of another contract\00")
(data (i32.const 8982) "updater cannot change primary key when modifying an object\00")
(data (i32.const 9041) "write\00")
(data (i32.const 9047) "cannot create objects in table of another contract\00")
(data (i32.const 9098) "object passed to erase is not in multi_index\00")
(data (i32.const 9143) "cannot erase objects in table of another contract\00")
(data (i32.const 9193) "attempt to remove object that was not in multi_index\00")
(data (i32.const 9246) "attempt to subtract asset with different symbol\00")
(data (i32.const 9294) "subtraction underflow\00")
(data (i32.const 9316) "subtraction overflow\00")
(import "env" "require_auth" (func $fimport$0 (param i64)))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "db_find_i64" (func $fimport$2 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$3 (result i64)))
(import "env" "memcpy" (func $fimport$4 (param i32 i32 i32) (result i32)))
(import "env" "db_store_i64" (func $fimport$5 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_next_i64" (func $fimport$6 (param i32 i32) (result i32)))
(import "env" "require_recipient" (func $fimport$7 (param i64)))
(import "env" "current_time" (func $fimport$8 (result i64)))
(import "env" "eosio_exit" (func $fimport$9 (param i32)))
(import "env" "action_data_size" (func $fimport$10 (result i32)))
(import "env" "read_action_data" (func $fimport$11 (param i32 i32) (result i32)))
(import "env" "db_get_i64" (func $fimport$12 (param i32 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$13 (param i32 i64 i32 i32)))
(import "env" "db_remove_i64" (func $fimport$14 (param i32)))
(import "env" "abort" (func $fimport$15))
(import "env" "set_blockchain_parameters_packed" (func $fimport$16 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$17 (param i32 i32) (result i32)))
(import "env" "memset" (func $fimport$18 (param i32 i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $34))
(export "_ZdlPv" (func $50))
(export "_Znwj" (func $48))
(export "_Znaj" (func $49))
(export "_ZdaPv" (func $51))
(export "_ZnwjSt11align_val_t" (func $52))
(export "_ZnajSt11align_val_t" (func $53))
(export "_ZdlPvSt11align_val_t" (func $54))
(export "_ZdaPvSt11align_val_t" (func $55))
(table $0 7 7 anyfunc)
(elem (i32.const 1) $18 $2 $3 $16 $27 $30)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 17756))
(global $global$2 i32 (i32.const 17756))


void .FUNC $18 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [96])
	$global$0 = $3
	*($3 + [48]) = $1
	CALL require_auth($1)
	$4 = (int_64)0
	CALL eosio_assert(((int_64)*($2) > (int_64)0), [8198])
	$5 = CALL $57([8192])
	if ( ($5 <= [8]) ){ goto $label$3 }
	CALL eosio_assert([0], [8554])
	goto $label$2 
	
.LABEL $label$3
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = (int_64)0
	
.LOOP $label$4:
	$6 = *(($5 + [8191]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$5 }
	CALL eosio_assert([0], [8599])
	
.LABEL $label$5
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$4 }
	$4 = ((int_64)$4 << (int_64)8)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)((int_64)$4 | (int_64)4)), [8317])
	CALL require_recipient((int_64)-4155580856020837232)
	$5 = CALL $57([8192])
	if ( ($5 <= [8]) ){ goto $label$9 }
	CALL eosio_assert([0], [8554])
	goto $label$8 
	
.LABEL $label$9
	if ( ($5 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$4 = (int_64)0
	
.LOOP $label$10:
	$6 = *(($5 + [8191]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$11 }
	CALL eosio_assert([0], [8599])
	
.LABEL $label$11
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$10 }
	$4 = ((int_64)$4 & (int_64)72057594037927935)
	goto $label$6 
	
.LABEL $label$7
	$4 = (int_64)0
	
.LABEL $label$6
	CALL $19(($3 + [32]), (int_64)-4155580855749438160, $1, $4)
	*($3 + [24]) = CALL current_time()
	$5 = CALL $57([8192])
	if ( ($5 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [8554])
	goto $label$14 
	
.LABEL $label$15
	if ( ($5 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$4 = (int_64)0
	
.LOOP $label$16:
	$6 = *(($5 + [8191]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [8599])
	
.LABEL $label$17
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$16 }
	$4 = ((int_64)$4 & (int_64)72057594037927935)
	goto $label$12 
	
.LABEL $label$13
	$4 = (int_64)0
	
.LABEL $label$12
	$5 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$1 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$21 }
	$4 = $1
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$21
	$4 = $1
	
.LOOP $label$22:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$19 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $6 ){ goto $label$22 }
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [8652])
	
.LABEL $label$18
	$8 = ($0 + [152])
	$4 = *($3 + [48])
	$6 = *(($0 + [180]))
	$9 = *(($0 + [176]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$26 }
	
.LOOP $label$28:
	$5 = ($6 + [-24])
	$7 = *($5)
	if ( ((int_64)*($7) == (int_64)$4) ){ goto $label$27 }
	$6 = $5
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$26 }
	if ( ((int_32)*($7 + [32]) == (int_32)$8) ){ goto $label$25 }
	CALL eosio_assert([0], [8691])
	goto $label$25 
	
.LABEL $label$26
	$5 = CALL db_find_i64(*($8), *(($0 + [160])), (int_64)-2507751408896311296, $4)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$24 }
	$7 = CALL $20($8, $5)
	if ( ((int_32)*($7 + [32]) == (int_32)$8) ){ goto $label$25 }
	CALL eosio_assert([0], [8691])
	
.LABEL $label$25
	$1 = (int_64)0
	if ( ((uint_64)*($3 + [24]) >= (uint_64)*($7 + [24])) ){ goto $label$23 }
	$1 = *($7 + [8])
	goto $label$23 
	
.LABEL $label$24
	$1 = (int_64)0
	
.LABEL $label$23
	$8 = ($0 + [72])
	$4 = *($3 + [48])
	$6 = *(($0 + [100]))
	$9 = *(($0 + [96]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$32 }
	
.LOOP $label$34:
	$5 = ($6 + [-24])
	$7 = *($5)
	if ( ((int_64)*($7) == (int_64)$4) ){ goto $label$33 }
	$6 = $5
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$32 }
	if ( ((int_32)*($7 + [48]) == (int_32)$8) ){ goto $label$31 }
	CALL eosio_assert([0], [8691])
	goto $label$31 
	
.LABEL $label$32
	$5 = CALL db_find_i64(*($8), *(($0 + [80])), (int_64)-3020371635640205312, $4)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$30 }
	$7 = CALL $21($8, $5)
	if ( ((int_32)*($7 + [48]) == (int_32)$8) ){ goto $label$31 }
	CALL eosio_assert([0], [8691])
	
.LABEL $label$31
	CALL eosio_assert(((int_64)*($3 + [32]) >= (int_64)((int_64)((int_64)((int_64)*($7 + [8]) + (int_64)$1) + (int_64)*($7 + [24])) + (int_64)*($2))), [8378])
	$4 = *($0)
	*($3 + [64]) = $2
	*($3 + [68]) = ($3 + [24])
	CALL $22($8, $7, $4, ($3 + [64]))
	goto $label$29 
	
.LABEL $label$30
	CALL eosio_assert(((int_64)*($3 + [32]) >= (int_64)((int_64)*($2) + (int_64)$1)), [8343])
	$4 = *($0)
	*($3 + [12]) = $2
	*($3 + [8]) = ($3 + [48])
	*($3 + [16]) = ($3 + [24])
	*($3 + [88]) = $4
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$35 }
	CALL eosio_assert([0], [9047])
	
.LABEL $label$35
	*($3 + [64]) = $8
	*($3 + [68]) = ($3 + [8])
	*($3 + [72]) = ($3 + [88])
	*(($5 = CALL _Znwj([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48]) = $8
	CALL $23(($3 + [64]), $5)
	*($3 + [80]) = $5
	$4 = *($5)
	*($3 + [64]) = $4
	$7 = *($5 + [52])
	*($3 + [60]) = $7
	$9 = ($0 + [100])
	$6 = *($9)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$37 }
	*($6 + [8]) = $4
	*($6 + [16]) = $7
	*($3 + [80]) = [0]
	*($6) = $5
	*($9) = ($6 + [24])
	$5 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( $5 ){ goto $label$36 }
	goto $label$29 
	
.LABEL $label$37
	CALL $24(($0 + [96]), ($3 + [80]), ($3 + [64]), ($3 + [60]))
	$5 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($5 == 0) ){ goto $label$29 }
	
.LABEL $label$36
	CALL _ZdlPv($5)
	
.LABEL $label$29
	$8 = ($0 + [112])
	$4 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$6 = *(($0 + [140]))
	$9 = *(($0 + [136]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$41 }
	
.LOOP $label$43:
	$5 = ($6 + [-24])
	$7 = *($5)
	if ( ((int_64)(uint_64)*($7 + [8]) >> (uint_64)(int_64)8) == (int_64)$4) ){ goto $label$42 }
	$6 = $5
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$42
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$41 }
	if ( ((int_32)*($7 + [40]) == (int_32)$8) ){ goto $label$40 }
	CALL eosio_assert([0], [8691])
	$4 = *($0)
	*($3 + [64]) = $2
	if ( $7 ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$41
	$7 = [0]
	$5 = CALL db_find_i64(*($8), *(($0 + [120])), (int_64)-4157495357179166720, $4)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$40 }
	$7 = CALL $9($8, $5)
	if ( ((int_32)*($7 + [40]) == (int_32)$8) ){ goto $label$40 }
	CALL eosio_assert([0], [8691])
	
.LABEL $label$40
	$4 = *($0)
	*($3 + [64]) = $2
	if ( $7 ){ goto $label$38 }
	
.LABEL $label$39
	CALL eosio_assert([0], [8850])
	
.LABEL $label$38
	CALL $25($8, $7, $4, ($3 + [64]))
	$global$0 = ($3 + [96])
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $63($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)*(($1 + [8200])) == (int_32)*($9)) ){ goto $label$10 }
	CALL eosio_assert([0], [8231])
	
.LABEL $label$10
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$11:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$12 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$13 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$14 }
	
.LABEL $label$13
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$15 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$15
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$12
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$11 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

void .FUNC $19 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	*($4 + [16]) = $2
	*($4 + [8]) = $1
	$5 = CALL db_find_i64($1, $2, (int_64)3607749779137757184, $3)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $26(($4 + [8]), $5)
	if ( ((int_32)*($5 + [16]) == (int_32)($4 + [8])) ){ goto $label$5 }
	CALL eosio_assert([0], [8691])
	
.LABEL $label$5
	*($0) = *($5)
	*(($0 + [8])) = *(($5 + [8]))
	$6 = *($4 + [32])
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ($4 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$7 }
	CALL _ZdlPv($5)
	
.LABEL $label$7
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($4 + [32]))
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert([0], [8672])
	*(($0 + [8])) = *([0] + [8])
	*($0) = *([0])
	
.LABEL $label$3
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$2
	$0 = $6
	
.LABEL $label$1
	*($7) = $6
	CALL _ZdlPv($0)
	$global$0 = ($4 + [48])
}

int_32 .FUNC $39 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [368])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $61($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [304]))) = (int_64)0
	*($4 + [296]) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [312]) = (int_64)0
	*($4 + [276]) = $2
	*($4 + [272]) = $2
	*($4 + [280]) = ($2 + $7)
	*($4 + [352]) = ($4 + [272])
	*($4 + [40]) = ($4 + [288])
	CALL $41(($4 + [40]), ($4 + [352]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [280])
	*($4 + [24]) = *($4 + [272])
	$10 = *($9)
	*(($3 = (($4 + [320]) + [8]))) = $10
	*(($9 = (($4 + [336]) + [8]))) = $10
	$11 = *($4 + [24])
	*($4 + [336]) = $11
	*($4 + [320]) = $11
	$10 = *($9)
	*((($4 + [352]) + [8])) = $10
	*(($4 + [64])) = $10
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$1 = *($4 + [336])
	*($4 + [56]) = $1
	*($4 + [352]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*($4 + [192]) = $0
	*(($4 + [224])) = [0]
	*(($4 + [216])) = (int_64)0
	*(($4 + [240])) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*($4 + [232]) = $0
	*($3) = *($8)
	*($4 + [320]) = *($4 + [296])
	$0 = *($4 + [288])
	$1 = *($4 + [312])
	*($9) = *($3)
	*($4 + [336]) = *($4 + [320])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$11 = *((($4 + [336]) + [8]))
	*((($4 + [352]) + [8])) = $11
	*((($4 + [8]) + [8])) = $11
	$11 = *($4 + [336])
	*($4 + [8]) = $11
	*($4 + [352]) = $11
	CALL void $3((int_32 $0), (int_64 ($4 + [8])), (int_32 $1), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $64($2)
	
.LABEL $label$5
	CALL $1(($4 + [40]))
	$global$0 = ($4 + [368])
	return [1]
}

void .FUNC $29 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [8931])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9246])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9294])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9316])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [8982])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $44($5, $1)
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $28 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [8931])
	
.LABEL $label$2
	$6 = *($1)
	if ( ((uint_64)*(*($3)) >= (uint_64)*(*(*($3 + [4]) + [4]) + [40])) ){ goto $label$12 }
	$3 = *($3 + [8])
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [32]))) ){ goto $label$13 }
	CALL eosio_assert([0], [9246])
	
.LABEL $label$13
	$7 = (int_64)
	*($1 + [24]) = $7(*($1 + [24]) - *($3)))
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$11 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$10 }
	goto $label$5 
	
.LABEL $label$12
	$9 = *($1 + [24])
	$7 = *(($1 + [32]))
	if ( ((int_64)*(($1 + [16])) == (int_64)$7) ){ goto $label$14 }
	CALL eosio_assert([0], [8770])
	
.LABEL $label$14
	$9 = ((int_64)*($1 + [8]) + (int_64)$9)
	if ( ((int_64)$9 <= (int_64)-4611686018427387904) ){ goto $label$9 }
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [8832])
	$3 = *($3 + [8])
	if ( ((int_64)*($3 + [8]) != (int_64)$7) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [9294])
	if ( ((int_64)*(($1 + [24])) < (int_64)4611686018427387904) ){ goto $label$5 }
	
.LABEL $label$10
	CALL eosio_assert([0], [9316])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$9
	CALL eosio_assert([0], [8813])
	
.LABEL $label$8
	$3 = *($3 + [8])
	if ( ((int_64)*($3 + [8]) == (int_64)$7) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [9246])
	
.LABEL $label$6
	$9 = (int_64)
	if ( ((int_64)$9($9 - *($3))) <= (int_64)-4611686018427387904) ){ goto $label$16 }
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$15 }
	CALL eosio_assert([0], [9316])
	goto $label$15 
	
.LABEL $label$16
	CALL eosio_assert([0], [9294])
	
.LABEL $label$15
	*(($1 + [32])) = $7
	*(($1 + [24])) = $9
	$3 = CALL $57([8192])
	if ( ($3 <= [8]) ){ goto $label$20 }
	CALL eosio_assert([0], [8554])
	goto $label$19 
	
.LABEL $label$20
	if ( ($3 == 0) ){ goto $label$18 }
	
.LABEL $label$19
	$7 = (int_64)0
	
.LOOP $label$21:
	$8 = *(($3 + [8191]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$22 }
	CALL eosio_assert([0], [8599])
	
.LABEL $label$22
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$21 }
	$10 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$17 
	
.LABEL $label$18
	$10 = (int_64)4
	
.LABEL $label$17
	$7 = (uint_64)$10 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$25:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$24 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$26 }
	$7 = $9
	$8 = $3
	$3 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$26
	$7 = $9
	
.LOOP $label$27:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$24 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$3 < (int_32)[6])
	$11 = ($3 + [1])
	$3 = $11
	if ( $8 ){ goto $label$27 }
	$3 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$24
	CALL eosio_assert([0], [8652])
	
.LABEL $label$23
	*(($1 + [16])) = $10
	*(($1 + [8])) = (int_64)0
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [8982])
	
.LABEL $label$3
	$8 = $4
	$3 = ($8 + [-48])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = $8
	CALL $47($5, $1)
	CALL db_update_i64(*($1 + [52]), $2, $3, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$28 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$28
	$global$0 = ($5 + [16])
}

int_32 .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8742])
	
.LABEL $label$5
	$4 = CALL $61($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48]) = $0
	CALL $46(($3 + [32]), $5)
	*($5 + [52]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $24(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $64($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8742])
	
.LABEL $label$5
	$4 = CALL $61($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = $0
	CALL $45(($3 + [32]), $5)
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $32(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $64($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = *($4 + [4])
	*(($1 + [16])) = *(($6 + [8]))
	*($1 + [8]) = *($6)
	$6 = CALL $57([8192])
	if ( ($6 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8554])
	goto $label$3 
	
.LABEL $label$4
	if ( ($6 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = (int_64)0
	
.LOOP $label$5:
	$8 = *(($6 + [8191]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8599])
	
.LABEL $label$6
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$5 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)4
	
.LABEL $label$1
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$7 = $10
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$7 = $10
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $8 ){ goto $label$11 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [8652])
	
.LABEL $label$7
	*($1 + [24]) = (int_64)0
	*(($1 + [32])) = $9
	*($1 + [40]) = ((int_64)*(*($4 + [8])) + (int_64)86400000000)
	$8 = $2
	$6 = ($8 + [-48])
	$global$0 = $6
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = $8
	CALL $47($3, $1)
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($5 + [8]), (int_64)-3020371635640205312, *(*($0 + [8])), $7, $6, [48])
	if ( (uint_64)($7 <= *($5 + [16])) ){ goto $label$12 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$global$0 = ($3 + [16])
}

void .FUNC $22 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [8931])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *($3)
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [8770])
	
.LABEL $label$3
	$8 = ((int_64)*($1 + [8]) + (int_64)*($7))
	*($1 + [8]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [8813])
	$8 = *(($1 + [8]))
	
.LABEL $label$4
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [8832])
	
.LABEL $label$5
	*($1 + [40]) = ((int_64)*(*($3 + [4])) + (int_64)86400000000)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [8982])
	
.LABEL $label$6
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = $4
	CALL $47($5, $1)
	CALL db_update_i64(*($1 + [52]), $2, $3, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $25 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [8931])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [8770])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [8813])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [8832])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [8982])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $44($5, $1)
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $24 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $56($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $27 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL require_auth($1)
	$4 = ($0 + [32])
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)101) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8691])
	goto $label$1 
	
.LABEL $label$2
	$8 = CALL $6($4, CALL $fimport$2(*($4), *(($0 + [40])), (int_64)7235159550150574080, (int_64)101))
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8691])
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)1), [8423])
	CALL eosio_assert(((int_64)*($2) > (int_64)0), [8198])
	$7 = CALL $57([8192])
	if ( ($7 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [8554])
	goto $label$7 
	
.LABEL $label$8
	if ( ($7 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$9 = (int_64)0
	
.LOOP $label$9:
	$6 = *(($7 + [8191]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [8599])
	
.LABEL $label$10
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)4)
	goto $label$5 
	
.LABEL $label$6
	$9 = (int_64)4
	
.LABEL $label$5
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)$9), [8317])
	$4 = ($0 + [72])
	$6 = *(($0 + [100]))
	$5 = *(($0 + [96]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$12 }
	
.LOOP $label$14:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$13 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$12 }
	if ( ((int_32)*($8 + [48]) == (int_32)$4) ){ goto $label$11 }
	CALL eosio_assert([0], [8691])
	goto $label$11 
	
.LABEL $label$12
	$7 = CALL db_find_i64(*($4), *(($0 + [80])), (int_64)-3020371635640205312, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$15 }
	$8 = CALL $21($4, $7)
	if ( ((int_32)*($8 + [48]) == (int_32)$4) ){ goto $label$11 }
	CALL eosio_assert([0], [8691])
	goto $label$11 
	
.LABEL $label$15
	$8 = [0]
	
.LABEL $label$11
	*($3 + [28]) = $8
	*($3 + [24]) = $4
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [8446])
	$9 = CALL current_time()
	*($3 + [16]) = $9
	$1 = *($2)
	if ( ((uint_64)$9 >= (uint_64)*($8 + [40])) ){ goto $label$17 }
	CALL eosio_assert(((int_64)$1 <= (int_64)*($8 + [24])), [8474])
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert(((int_64)$1 <= (int_64)((int_64)*($8 + [24]) + (int_64)*($8 + [8]))), [8514])
	
.LABEL $label$16
	$9 = *($0)
	*($3 + [8]) = $2
	*($3 + [4]) = ($3 + [24])
	*($3) = ($3 + [16])
	if ( $8 ){ goto $label$18 }
	CALL eosio_assert([0], [8850])
	
.LABEL $label$18
	CALL $28($4, $8, $9, $3)
	$4 = ($0 + [112])
	$9 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$6 = *(($0 + [140]))
	$5 = *(($0 + [136]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$22 }
	
.LOOP $label$24:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8) == (int_64)$9) ){ goto $label$23 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$22 }
	if ( ((int_32)*($8 + [40]) == (int_32)$4) ){ goto $label$21 }
	CALL eosio_assert([0], [8691])
	$9 = *($0)
	*($3) = $2
	if ( $8 ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$22
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [120])), (int_64)-4157495357179166720, $9)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$21 }
	$8 = CALL $9($4, $7)
	if ( ((int_32)*($8 + [40]) == (int_32)$4) ){ goto $label$21 }
	CALL eosio_assert([0], [8691])
	
.LABEL $label$21
	$9 = *($0)
	*($3) = $2
	if ( $8 ){ goto $label$19 }
	
.LABEL $label$20
	CALL eosio_assert([0], [8850])
	
.LABEL $label$19
	CALL $29($4, $8, $9, $3)
	$global$0 = ($3 + [32])
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8742])
	
.LABEL $label$5
	$2 = CALL $61($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [8765])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [8765])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $42(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $64($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $61($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [9340])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $61($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8765])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8765])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*($1 + [8]) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8765])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8765])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [24])) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$1 = ($1 + [32])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8765])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $4, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $42 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $56($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8765])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8765])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8765])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [24])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $1) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8765])
	$1 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $1, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8765])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8765])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8765])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9041])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9041])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9041])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9041])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [32]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9041])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [40])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9041])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $1, [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8765])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8765])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8765])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [16])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8765])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8765])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [32])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [40])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [8765])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($1, $4, [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8765])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8765])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8765])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [16])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [24])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8765])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($1, $4, [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9041])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9041])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9041])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [24]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9041])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$1 = ($1 + [32])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9041])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $1, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $61($1)
	
.LABEL $label$2
	*(CALL $58()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $61(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $64($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $8 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $56($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8742])
	
.LABEL $label$5
	$4 = CALL $61($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	CALL $43(($3 + [32]), $5)
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [16]) = $7)
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $13(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $64($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8742])
	
.LABEL $label$5
	$2 = CALL $61($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [8765])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	$7 = ($5 + [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [8765])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $8(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $64($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $7 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [8931])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL memcpy(($4 + [-8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $3, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC $4 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [64])
	$global$0 = $4
	*($4 + [16]) = $3
	$5 = ($0 + [112])
	$6 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8)
	$8 = *(($0 + [140]))
	$7 = *(($0 + [136]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	
.LOOP $label$10:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)(uint_64)*($10 + [8]) >> (uint_64)(int_64)8) == (int_64)$6) ){ goto $label$9 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	if ( ((int_32)*($10 + [40]) == (int_32)$5) ){ goto $label$7 }
	CALL eosio_assert([0], [8691])
	if ( ((int_64)$3 != (int_64)0) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$8
	$9 = CALL db_find_i64(*($5), *(($0 + [120])), (int_64)-4157495357179166720, $6)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$5 }
	$10 = CALL $9($5, $9)
	if ( ((int_32)*($10 + [40]) == (int_32)$5) ){ goto $label$7 }
	CALL eosio_assert([0], [8691])
	
.LABEL $label$7
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$4 }
	
.LABEL $label$6
	$6 = *($0)
	*($4 + [36]) = $2
	*($4 + [32]) = $1
	*($4 + [40]) = ($4 + [16])
	CALL $10($5, $10, $6, ($4 + [32]))
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$5
	if ( (int_64)($3 == 0) ){ goto $label$1 }
	*($4 + [56]) = *($0)
	if ( ((int_64)*(($0 + [112])) == (int_64)CALL current_receiver()) ){ goto $label$11 }
	CALL eosio_assert([0], [9047])
	
.LABEL $label$11
	*($4 + [32]) = $5
	*($4 + [36]) = ($4 + [8])
	*($4 + [40]) = ($4 + [56])
	*(($9 = CALL _Znwj([56])) + [8]) = (int_64)0
	*($9) = (int_64)0
	*($9 + [16]) = (int_64)0
	*($9 + [24]) = (int_64)0
	*($9 + [32]) = (int_64)0
	*($9 + [40]) = $5
	CALL $11(($4 + [32]), $9)
	*($4 + [48]) = $9
	$6 = (uint_64)*($9 + [8]) >> (uint_64)(int_64)8
	*($4 + [32]) = $6)
	$10 = *($9 + [44])
	*($4 + [28]) = $10
	$7 = ($0 + [140])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [144]))) ){ goto $label$3 }
	*($8 + [8]) = $6
	*($8 + [16]) = $10
	*($4 + [48]) = [0]
	*($8) = $9
	*($7) = ($8 + [24])
	$9 = *($4 + [48])
	*($4 + [48]) = [0]
	if ( $9 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$9 = CALL db_next_i64(*($10 + [44]), ($4 + [32]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$12 }
	CALL $9($5, $9)
	
.LABEL $label$12
	CALL $12($5, $10)
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$3
	CALL $13(($0 + [136]), ($4 + [48]), ($4 + [32]), ($4 + [28]))
	$9 = *($4 + [48])
	*($4 + [48]) = [0]
	if ( ($9 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv($9)
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$1
	$global$0 = ($4 + [64])
}

void .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = ($0 + [192])
	$4 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8)
	$6 = *(($0 + [220]))
	$5 = *(($0 + [216]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8) == (int_64)$4) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [16]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [8691])
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$2
	$7 = CALL db_find_i64(*($3), *(($0 + [200])), (int_64)-2507752493341999104, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)*(CALL $14($3, $7) + [16]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [8691])
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$5
	$9 = *($0)
	if ( ((int_64)*(($0 + [192])) == (int_64)CALL current_receiver()) ){ goto $label$6 }
	CALL eosio_assert([0], [9047])
	
.LABEL $label$6
	*(($7 = CALL _Znwj([32])) + [16]) = $3
	*($7 + [8]) = *(($1 + [8]))
	*($7) = *($1)
	CALL memcpy(($2 + [16]), $7, [8])
	*($2 + [40]) = *($7 + [8])
	CALL memcpy((($2 + [16]) | [8]), ($2 + [40]), [8])
	$4 = (uint_64)*($7 + [8]) >> (uint_64)(int_64)8
	$5 = CALL db_store_i64(*(($0 + [200])), (int_64)-2507752493341999104, $9, $4), ($2 + [16]), [16]
	*($7 + [20]) = $5)
	$6 = ($0 + [208])
	if ( (uint_64)($4 <= *($6)) ){ goto $label$7 }
	*($6) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$7
	*($2 + [40]) = $7
	$4 = (uint_64)*(($7 + [8])) >> (uint_64)(int_64)8
	*($2 + [16]) = $4)
	*($2 + [12]) = $5
	$8 = ($0 + [220])
	$6 = *($8)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [224]))) ){ goto $label$9 }
	*($6 + [8]) = $4
	*($6 + [16]) = $5
	*($2 + [40]) = [0]
	*($6) = $7
	*($8) = ($6 + [24])
	$7 = *($2 + [40])
	*($2 + [40]) = [0]
	if ( $7 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$9
	CALL $15(($0 + [216]), ($2 + [40]), ($2 + [16]), ($2 + [12]))
	$7 = *($2 + [40])
	*($2 + [40]) = [0]
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$8
	CALL _ZdlPv($7)
	
.LABEL $label$1
	$global$0 = ($2 + [48])
}

void .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [96])
	$global$0 = $1
	CALL require_auth(*($0))
	CALL $3($0, (int_64)101, (int_64)0)
	$2 = CALL $57([8192])
	if ( ($2 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8554])
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = (int_64)0
	
.LOOP $label$5:
	$4 = *(($2 + [8191]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8599])
	
.LABEL $label$6
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$5 }
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$3 = (int_64)4
	
.LABEL $label$1
	*($1 + [80]) = (int_64)0
	*($1 + [88]) = $3
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$3 = $5
	$4 = $2
	$2 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$3 = $5
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $4 ){ goto $label$11 }
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [8652])
	
.LABEL $label$7
	$2 = CALL $57([8192])
	if ( ($2 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [8554])
	goto $label$14 
	
.LABEL $label$15
	if ( ($2 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$3 = (int_64)0
	
.LOOP $label$16:
	$4 = *(($2 + [8191]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [8599])
	
.LABEL $label$17
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$16 }
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)4)
	goto $label$12 
	
.LABEL $label$13
	$3 = (int_64)4
	
.LABEL $label$12
	*($1 + [64]) = (int_64)0
	*($1 + [72]) = $3
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$21 }
	$3 = $5
	$4 = $2
	$2 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$21
	$3 = $5
	
.LOOP $label$22:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$19 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $4 ){ goto $label$22 }
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [8652])
	
.LABEL $label$18
	*((($1 + [32]) + [8])) = *((($1 + [80]) + [8]))
	*((($1 + [16]) + [8])) = *((($1 + [64]) + [8]))
	*($1 + [32]) = *($1 + [80])
	*($1 + [16]) = *($1 + [64])
	CALL $4($0, ($1 + [32]), ($1 + [16]), (int_64)-4155580855749438160)
	$2 = CALL $57([8192])
	if ( ($2 <= [8]) ){ goto $label$26 }
	CALL eosio_assert([0], [8554])
	goto $label$25 
	
.LABEL $label$26
	if ( ($2 == 0) ){ goto $label$24 }
	
.LABEL $label$25
	$3 = (int_64)0
	
.LOOP $label$27:
	$4 = *(($2 + [8191]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$28 }
	CALL eosio_assert([0], [8599])
	
.LABEL $label$28
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$27 }
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)4)
	goto $label$23 
	
.LABEL $label$24
	$3 = (int_64)4
	
.LABEL $label$23
	*($1 + [48]) = (int_64)0
	*($1 + [56]) = $3
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$32 }
	$3 = $5
	$4 = $2
	$2 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$32
	$3 = $5
	
.LOOP $label$33:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$30 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $4 ){ goto $label$33 }
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	CALL eosio_assert([0], [8652])
	
.LABEL $label$29
	*(($1 + [8])) = *((($1 + [48]) + [8]))
	*($1) = *($1 + [48])
	CALL $5($0, $1)
	$global$0 = ($1 + [96])
}

void .FUNC $3 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [8]) = $2
	CALL require_auth(*($0))
	$4 = ($0 + [32])
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$5:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$4 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [8691])
	goto $label$2 
	
.LABEL $label$3
	$7 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)7235159550150574080, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $6($4, $7)
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [8691])
	
.LABEL $label$2
	$1 = *($0)
	*($3 + [32]) = ($3 + [8])
	CALL $7($4, $8, $1, ($3 + [32]))
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$1
	$9 = *($0)
	if ( ((int_64)*(($0 + [32])) == (int_64)CALL current_receiver()) ){ goto $label$6 }
	CALL eosio_assert([0], [9047])
	
.LABEL $label$6
	*(($7 = CALL _Znwj([32])) + [16]) = $4
	*($7 + [8]) = $2
	*($7) = $1
	CALL memcpy(($3 + [32]), $7, [8])
	CALL memcpy((($3 + [32]) | [8]), ($7 + [8]), [8])
	$1 = *($7)
	$8 = CALL db_store_i64(*(($0 + [40])), (int_64)7235159550150574080, $9, $1, ($3 + [32]), [16])
	*($7 + [20]) = $8
	$6 = ($0 + [48])
	if ( (uint_64)($1 <= *($6)) ){ goto $label$7 }
	*($6) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($3 + [24]) = $7
	$1 = *($7)
	*($3 + [32]) = $1
	*($3 + [20]) = $8
	$5 = ($0 + [60])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [64]))) ){ goto $label$10 }
	*($6 + [8]) = $1
	*($6 + [16]) = $8
	*($3 + [24]) = [0]
	*($6) = $7
	*($5) = ($6 + [24])
	$7 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $8(($0 + [56]), ($3 + [24]), ($3 + [32]), ($3 + [20]))
	$7 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL _ZdlPv($7)
	
.LABEL $label$8
	$global$0 = ($3 + [48])
}

void .FUNC memory ()
{
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [216]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [220])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL _ZdlPv($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [216]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *(($0 + [176]))
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [180])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL _ZdlPv($4)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($0 + [176]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$1 = *(($0 + [136]))
	if ( ($1 == 0) ){ goto $label$11 }
	$2 = ($0 + [140])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	CALL _ZdlPv($4)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$14 }
	$3 = *(($0 + [136]))
	goto $label$12 
	
.LABEL $label$13
	$3 = $1
	
.LABEL $label$12
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$11
	$1 = *(($0 + [96]))
	if ( ($1 == 0) ){ goto $label$16 }
	$2 = ($0 + [100])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$20 }
	CALL _ZdlPv($4)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$19 }
	$3 = *(($0 + [96]))
	goto $label$17 
	
.LABEL $label$18
	$3 = $1
	
.LABEL $label$17
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$16
	$1 = *(($0 + [56]))
	if ( ($1 == 0) ){ goto $label$21 }
	$2 = ($0 + [60])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$23 }
	
.LOOP $label$24:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$25 }
	CALL _ZdlPv($4)
	
.LABEL $label$25
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$24 }
	$3 = *(($0 + [56]))
	goto $label$22 
	
.LABEL $label$23
	$3 = $1
	
.LABEL $label$22
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$21
	return $0
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8742])
	
.LABEL $label$5
	$2 = CALL $61($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [8765])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [8765])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $15(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $64($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $15 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $56($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL require_auth((int_64)-4155580856020837232)
	*($2 + [8]) = (CASTING uint_64)(uint_32 ((int_32)$1 ^ (int_32)[1]))
	$3 = ($0 + [32])
	$5 = *(($0 + [60]))
	$4 = *(($0 + [56]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$1 = ($5 + [-24])
	$6 = *($1)
	if ( ((int_64)*($6) == (int_64)101) ){ goto $label$3 }
	$5 = $1
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($6 + [16]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [8691])
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	$1 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)7235159550150574080, (int_64)101)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $6($3, $1)
	if ( ((int_32)*($6 + [16]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [8691])
	
.LABEL $label$1
	$7 = *($0)
	*($2) = ($2 + [8])
	if ( $6 ){ goto $label$5 }
	CALL eosio_assert([0], [8850])
	
.LABEL $label$5
	CALL $17($3, $6, $7, $2)
	$global$0 = ($2 + [16])
}

void .FUNC $17 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [8931])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL memcpy(($4 + [-8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $3, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC $10 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [8931])
	
.LABEL $label$2
	$6 = *($3)
	*($1) = *($6)
	$7 = *($1 + [8])
	$8 = *(($6 + [8]))
	*($1 + [8]) = $8
	$6 = *($3 + [4])
	*($1 + [16]) = *($6)
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [32]) = *(*($3 + [8]))
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)$7) == (int_64)(uint_64)$8 >> (uint_64)(int_64)8)) ){ goto $label$3 }
	CALL eosio_assert([0], [8982])
	
.LABEL $label$3
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	CALL $44($5, $1)
	CALL db_update_i64(*($1 + [44]), $2, $3, [40])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$4
	$global$0 = ($5 + [16])
}

void .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = CALL $57([8192])
	if ( ($5 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8554])
	goto $label$3 
	
.LABEL $label$4
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = (int_64)0
	
.LOOP $label$5:
	$7 = *(($5 + [8191]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8599])
	
.LABEL $label$6
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$5 }
	$8 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$8 = (int_64)4
	
.LABEL $label$1
	$6 = (uint_64)$8 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$6 = $9
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$6 = $9
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$7 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $7 ){ goto $label$11 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [8652])
	
.LABEL $label$7
	*($1 + [8]) = $8
	*($1) = (int_64)0
	$5 = CALL $57([8192])
	if ( ($5 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [8554])
	goto $label$14 
	
.LABEL $label$15
	if ( ($5 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$6 = (int_64)0
	
.LOOP $label$16:
	$7 = *(($5 + [8191]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [8599])
	
.LABEL $label$17
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$16 }
	$8 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	goto $label$12 
	
.LABEL $label$13
	$8 = (int_64)4
	
.LABEL $label$12
	$6 = (uint_64)$8 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$21 }
	$6 = $9
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$21
	$6 = $9
	
.LOOP $label$22:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$19 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$7 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $7 ){ goto $label$22 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [8652])
	
.LABEL $label$18
	*($1 + [16]) = (int_64)0
	*($1 + [32]) = (int_64)-4155580855749438160
	*(($1 + [24])) = $8
	$7 = $2
	$5 = ($7 + [-48])
	$global$0 = $5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($7 + [-8])
	CALL $44($3, $1)
	$6 = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8
	*($1 + [44]) = CALL db_store_i64(*($4 + [8]), (int_64)-4157495357179166720, *(*($0 + [8])), $6), $5, [40])
	if ( (uint_64)($6 <= *($4 + [16])) ){ goto $label$23 }
	*(($4 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$23
	$global$0 = ($3 + [16])
}

void .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9098])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9143])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9193])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC $13 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $56($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $36 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $61($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [28])) = $2
	*(($4 + [32])) = ($2 + $7)
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $64($2)
	
.LABEL $label$5
	CALL $1(($4 + [8]))
	$global$0 = ($4 + [240])
	return [1]
}

int_32 .FUNC $37 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [256])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $61($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [248]) = (int_64)0
	*($4 + [240]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8765])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [240]) + [8])
	CALL memcpy(($4 + [240]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [8765])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [32])) = $3
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [16])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *((($4 + [240]) + [8]))
	$1 = *($4 + [240])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $64($2)
	
.LABEL $label$8
	CALL $1(($4 + [8]))
	$global$0 = ($4 + [256])
	return [1]
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [96])
	$global$0 = $3
	CALL memory()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$5 }
	if ( ((int_64)$2 > (int_64)-3102536759825661953) ){ goto $label$6 }
	if ( ((int_64)$2 == (int_64)-4417247484950609920) ){ goto $label$4 }
	if ( ((int_64)$2 == (int_64)-4417158076189114368) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-4157661383434960896) ){ goto $label$5 }
	*($3 + [68]) = [0]
	*($3 + [64]) = [1]
	*($3 + [24]) = *($3 + [64])
	CALL $35($1, $1, ($3 + [24]))
	CALL eosio_exit([0])
	
.LABEL $label$6
	if ( ((int_64)$2 == (int_64)-3102536759825661952) ){ goto $label$2 }
	if ( ((int_64)$2 == (int_64)-2507752493500334080) ){ goto $label$1 }
	if ( ((int_64)$2 != (int_64)8421045207927095296) ){ goto $label$5 }
	*($3 + [92]) = [0]
	*($3 + [88]) = [2]
	*($3) = *($3 + [88])
	CALL $36($1, $1, $3)
	
.LABEL $label$5
	CALL eosio_exit([0])
	
.LABEL $label$4
	*($3 + [76]) = [0]
	*($3 + [72]) = [3]
	*($3 + [16]) = *($3 + [72])
	CALL $37($1, $1, ($3 + [16]))
	CALL eosio_exit([0])
	
.LABEL $label$3
	*($3 + [84]) = [0]
	*($3 + [80]) = [4]
	*($3 + [8]) = *($3 + [80])
	CALL $38($1, $1, ($3 + [8]))
	CALL eosio_exit([0])
	
.LABEL $label$2
	*($3 + [60]) = [0]
	*($3 + [56]) = [5]
	*($3 + [32]) = *($3 + [56])
	CALL $35($1, $1, ($3 + [32]))
	CALL eosio_exit([0])
	
.LABEL $label$1
	*($3 + [52]) = [0]
	*($3 + [48]) = [6]
	*($3 + [40]) = *($3 + [48])
	CALL $39($1, $1, ($3 + [40]))
	CALL eosio_exit([0])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $35 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [352])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $61($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [296]))) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [280]) = (int_64)0
	*($4 + [268]) = $2
	*($4 + [264]) = $2
	*($4 + [272]) = ($2 + $7)
	*($4 + [336]) = ($4 + [264])
	*($4 + [32]) = ($4 + [280])
	CALL $40(($4 + [32]), ($4 + [336]))
	*(($9 = (($4 + [16]) + [8]))) = *($4 + [272])
	*($4 + [16]) = *($4 + [264])
	$10 = *($9)
	*(($3 = (($4 + [304]) + [8]))) = $10
	*(($9 = (($4 + [320]) + [8]))) = $10
	$11 = *($4 + [16])
	*($4 + [320]) = $11
	*($4 + [304]) = $11
	$10 = *($9)
	*((($4 + [336]) + [8])) = $10
	*(($4 + [56])) = $10
	*($4 + [32]) = $0
	*($4 + [40]) = $1
	$1 = *($4 + [320])
	*($4 + [48]) = $1
	*($4 + [336]) = $1
	*(($4 + [72])) = $0
	*(($4 + [80])) = (int_64)-1
	*(($4 + [88])) = (int_64)0
	*(($4 + [96])) = [0]
	*(($4 + [112])) = $0
	*(($4 + [120])) = (int_64)-1
	*(($4 + [128])) = (int_64)0
	*(($4 + [136])) = [0]
	*(($4 + [152])) = $0
	*(($4 + [160])) = (int_64)-1
	*(($4 + [168])) = (int_64)0
	*(($4 + [176])) = [0]
	*(($4 + [192])) = $0
	*(($4 + [200])) = (int_64)-1
	*($4 + [64]) = $0
	*($4 + [104]) = $0
	*($4 + [144]) = $0
	*($4 + [184]) = $0
	*(($4 + [216])) = [0]
	*(($4 + [208])) = (int_64)0
	*(($4 + [232])) = $0
	*(($4 + [240])) = (int_64)-1
	*(($4 + [248])) = (int_64)0
	*(($4 + [256])) = [0]
	*($4 + [224]) = $0
	*($3) = *($8)
	*($4 + [304]) = *($4 + [288])
	$0 = *($4 + [280])
	*($9) = *($3)
	*($4 + [320]) = *($4 + [304])
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$1 = *((($4 + [320]) + [8]))
	*((($4 + [336]) + [8])) = $1
	*(($4 + [8])) = $1
	$1 = *($4 + [320])
	*($4) = $1
	*($4 + [336]) = $1
	CALL void $3((int_32 $0), (int_64 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $64($2)
	
.LABEL $label$5
	CALL $1(($4 + [32]))
	$global$0 = ($4 + [352])
	return [1]
}

void .FUNC $32 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $56($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $33 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [8931])
	
.LABEL $label$2
	$6 = ($1 + [8])
	$7 = *($3 + [8])
	$8 = *($1)
	if ( ((uint_64)*(*($3)) >= (uint_64)*(*(*($3 + [4]) + [4]) + [24])) ){ goto $label$4 }
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$5 }
	CALL eosio_assert([0], [8770])
	
.LABEL $label$5
	$9 = ((int_64)*($6) + (int_64)*($7))
	*($6) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [8813])
	$9 = *($6)
	
.LABEL $label$6
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [8832])
	goto $label$3 
	
.LABEL $label$4
	*($6) = *($7)
	*(($6 + [8])) = *(($7 + [8]))
	
.LABEL $label$3
	*($1 + [24]) = ((int_64)*(*($3)) + (int_64)86400000000)
	if ( ((int_64)$8 == (int_64)*($1)) ){ goto $label$7 }
	CALL eosio_assert([0], [8982])
	
.LABEL $label$7
	$6 = $4
	$3 = ($6 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = $6
	CALL $31($5, $1)
	CALL db_update_i64(*($1 + [36]), $2, $3, [32])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$global$0 = ($5 + [16])
}

void .FUNC $30 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL require_auth($1)
	$5 = (int_64)0
	CALL eosio_assert(((int_64)*($2) > (int_64)0), [8198])
	$6 = CALL $57([8192])
	if ( ($6 <= [8]) ){ goto $label$3 }
	CALL eosio_assert([0], [8554])
	goto $label$2 
	
.LABEL $label$3
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = (int_64)0
	
.LOOP $label$4:
	$7 = *(($6 + [8191]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$5 }
	CALL eosio_assert([0], [8599])
	
.LABEL $label$5
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$4 }
	$5 = ((int_64)$5 << (int_64)8)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)((int_64)$5 | (int_64)4)), [8317])
	CALL require_recipient((int_64)-4155580856021150704)
	$6 = CALL $57([8192])
	if ( ($6 <= [8]) ){ goto $label$9 }
	CALL eosio_assert([0], [8554])
	goto $label$8 
	
.LABEL $label$9
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$5 = (int_64)0
	
.LOOP $label$10:
	$7 = *(($6 + [8191]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$11 }
	CALL eosio_assert([0], [8599])
	
.LABEL $label$11
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$10 }
	$5 = ((int_64)$5 & (int_64)72057594037927935)
	goto $label$6 
	
.LABEL $label$7
	$5 = (int_64)0
	
.LABEL $label$6
	CALL $19(($4 + [24]), (int_64)-4155580855749438160, $1, $5)
	*($4 + [16]) = CALL current_time()
	$6 = CALL $57([8192])
	if ( ($6 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [8554])
	goto $label$14 
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$5 = (int_64)0
	
.LOOP $label$16:
	$7 = *(($6 + [8191]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [8599])
	
.LABEL $label$17
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$16 }
	$5 = ((int_64)$5 & (int_64)72057594037927935)
	goto $label$12 
	
.LABEL $label$13
	$5 = (int_64)0
	
.LABEL $label$12
	$6 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$21 }
	$5 = $8
	$7 = $6
	$6 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$21
	$5 = $8
	
.LOOP $label$22:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$19 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$9 = ($6 + [1])
	$6 = $9
	if ( $7 ){ goto $label$22 }
	$6 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [8652])
	
.LABEL $label$18
	$10 = ($0 + [72])
	$7 = *(($0 + [100]))
	$11 = *(($0 + [96]))
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$26 }
	
.LOOP $label$28:
	$6 = ($7 + [-24])
	$9 = *($6)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$27 }
	$7 = $6
	if ( ((int_32)$11 != (int_32)$6) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$26 }
	if ( ((int_32)*($9 + [48]) == (int_32)$10) ){ goto $label$25 }
	CALL eosio_assert([0], [8691])
	goto $label$25 
	
.LABEL $label$26
	$6 = CALL db_find_i64(*($10), *(($0 + [80])), (int_64)-3020371635640205312, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$24 }
	$9 = CALL $21($10, $6)
	if ( ((int_32)*($9 + [48]) == (int_32)$10) ){ goto $label$25 }
	CALL eosio_assert([0], [8691])
	
.LABEL $label$25
	$5 = *($9 + [8])
	if ( ((int_64)*(($9 + [32])) == (int_64)*(($9 + [16]))) ){ goto $label$29 }
	CALL eosio_assert([0], [8770])
	
.LABEL $label$29
	$5 = ((int_64)*($9 + [24]) + (int_64)$5)
	if ( ((int_64)$5 <= (int_64)-4611686018427387904) ){ goto $label$30 }
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$23 }
	CALL eosio_assert([0], [8832])
	goto $label$23 
	
.LABEL $label$30
	CALL eosio_assert([0], [8813])
	goto $label$23 
	
.LABEL $label$24
	$5 = (int_64)0
	
.LABEL $label$23
	$10 = ($0 + [152])
	$7 = *(($0 + [180]))
	$11 = *(($0 + [176]))
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$35 }
	
.LOOP $label$37:
	$6 = ($7 + [-24])
	$9 = *($6)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$36 }
	$7 = $6
	if ( ((int_32)$11 != (int_32)$6) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$36
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$35 }
	if ( ((int_32)*($9 + [32]) == (int_32)$10) ){ goto $label$38 }
	CALL eosio_assert([0], [8691])
	
.LABEL $label$38
	*($4 + [8]) = $10
	$6 = (($4 + [8]) | [4])
	goto $label$34 
	
.LABEL $label$35
	$6 = CALL db_find_i64(*($10), *(($0 + [160])), (int_64)-2507751408896311296, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$33 }
	$9 = CALL $20($10, $6)
	if ( ((int_32)*($9 + [32]) == (int_32)$10) ){ goto $label$39 }
	CALL eosio_assert([0], [8691])
	
.LABEL $label$39
	*($4 + [8]) = $10
	$6 = (($4 + [8]) | [4])
	
.LABEL $label$34
	*($6) = $9
	$8 = *($4 + [24])
	if ( ((uint_64)*($4 + [16]) >= (uint_64)*($9 + [24])) ){ goto $label$40 }
	CALL eosio_assert(((int_64)$8 >= (int_64)((int_64)((int_64)*($9 + [8]) + (int_64)$5) + (int_64)*($2))), [8378])
	$5 = *($0)
	$6 = *($4 + [12])
	if ( ($6 == 0) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$40
	CALL eosio_assert(((int_64)$8 >= (int_64)((int_64)*($2) + (int_64)$5)), [8378])
	$5 = *($0)
	$6 = *($4 + [12])
	if ( $6 ){ goto $label$31 }
	goto $label$32 
	
.LABEL $label$33
	*($4 + [12]) = [0]
	*($4 + [8]) = $10
	CALL eosio_assert(((int_64)*($4 + [24]) >= (int_64)((int_64)*($2) + (int_64)$5)), [8343])
	$5 = *($0)
	$6 = *($4 + [12])
	if ( $6 ){ goto $label$31 }
	
.LABEL $label$32
	if ( ((int_64)*($10) == (int_64)CALL current_receiver()) ){ goto $label$41 }
	CALL eosio_assert([0], [9047])
	
.LABEL $label$41
	*(($6 = CALL _Znwj([48])) + [32]) = $10
	*($6) = $1
	*($6 + [8]) = *($2)
	*(($6 + [16])) = *(($2 + [8]))
	*($6 + [24]) = ((int_64)*($4 + [16]) + (int_64)86400000000)
	*($4 + [88]) = (($4 + [48]) + [32])
	*($4 + [84]) = ($4 + [48])
	*($4 + [80]) = ($4 + [48])
	CALL $31(($4 + [80]), $6)
	$1 = *($6)
	$9 = CALL db_store_i64(*(($0 + [160])), (int_64)-2507751408896311296, $5, $1, ($4 + [48]), [32])
	*($6 + [36]) = $9
	$7 = ($0 + [168])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$42 }
	*($7) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$42
	*($4 + [80]) = $6
	$5 = *($6)
	*($4 + [48]) = $5
	*($4 + [44]) = $9
	$11 = ($0 + [180])
	$7 = *($11)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [184]))) ){ goto $label$45 }
	*($7 + [8]) = $5
	*($7 + [16]) = $9
	*($4 + [80]) = [0]
	*($7) = $6
	*($11) = ($7 + [24])
	$6 = *($4 + [80])
	*($4 + [80]) = [0]
	if ( $6 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$45
	CALL $32(($0 + [176]), ($4 + [80]), ($4 + [48]), ($4 + [44]))
	$6 = *($4 + [80])
	*($4 + [80]) = [0]
	if ( ($6 == 0) ){ goto $label$43 }
	
.LABEL $label$44
	CALL _ZdlPv($6)
	
.LABEL $label$43
	$global$0 = ($4 + [96])
	return 
	
.LABEL $label$31
	*($4 + [56]) = $2
	*($4 + [52]) = ($4 + [8])
	*($4 + [48]) = ($4 + [16])
	CALL $33($10, $6, $5, ($4 + [48]))
	$global$0 = ($4 + [96])
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9041])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9041])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9041])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [24])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9041])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $1, [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $58 ()
{
	return [9344]
}

int_32 .FUNC $59 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $58())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $60($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $61 (int_32 $0)
{
	return CALL $62([9360], $0)
}

int_32 .FUNC $63 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [9352]) == 0) ){ goto $label$2 }
	$2 = *([0] + [9356])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [9352]) = [1]
	$2 = ($2 << [16])
	*([0] + [9356]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [9356])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [9356]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [9352]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [9352]) = [1]
	$3 = ($3 << [16])
	*([0] + [9356]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [9356])
	
.LABEL $label$10
	*([0] + [9356]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

void .FUNC $64 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [17744])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [17552]
	$3 = (((int_32)$1 * (int_32)[12]) + [17552])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $64($0)
	
.LABEL $label$1
}

int_32 .FUNC $38 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $61($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [8765])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	CALL memcpy(($4 + [8]), $2, [1])
	$8 = *($4 + [8])
	*(($4 + [28])) = ($2 + [1])
	*(($4 + [32])) = ($2 + $7)
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 ((int_32)($8 & [255]) != (int_32)[0])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $64($2)
	
.LABEL $label$6
	CALL $1(($4 + [8]))
	$global$0 = ($4 + [240])
	return [1]
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $59(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [9340])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $59(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $64($0)
	
.LABEL $label$1
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

void .FUNC $56 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $57 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}