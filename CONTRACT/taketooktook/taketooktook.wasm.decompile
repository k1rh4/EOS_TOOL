(data (i32.const 8232) "failed to allocate pages\00external account already exist\00")
(data (i32.const 8288) "euser account does not exist\00")
(data (i32.const 8317) "external account does not exist\00")
(data (i32.const 8349) "TOOK\00")
(data (i32.const 8354) "link internal account to external account\00")
(data (i32.const 8396) "invalid symbol name\00")
(data (i32.const 8416) "invalid supply\00")
(data (i32.const 8431) "max-supply must be positive\00")
(data (i32.const 8459) "token with symbol already exists\00")
(data (i32.const 8492) "memo has more than 256 bytes\00")
(data (i32.const 8521) "token with symbol does not exist, create token before issue\00")
(data (i32.const 8581) "invalid quantity\00")
(data (i32.const 8598) "must issue positive quantity\00")
(data (i32.const 8627) "symbol precision mismatch\00")
(data (i32.const 8653) "quantity exceeds available supply\00")
(data (i32.const 8687) "cannot transfer to self\00")
(data (i32.const 8711) "You can not transfer to Newdex in a certain period\00")
(data (i32.const 8762) "You can not transfer to this exchange in a certain period\00")
(data (i32.const 8820) "From acocunt is locked, ask tooktook admin\00")
(data (i32.const 8863) "To cocunt is locked, ask tooktook admin\00")
(data (i32.const 8903) "to account does not exist\00")
(data (i32.const 8929) "unable to find key\00")
(data (i32.const 8948) "must transfer positive quantity\00")
(data (i32.const 8980) "lock account does not exist\00")
(data (i32.const 9008) "lock account already exists in the table\00")
(data (i32.const 9049) "unlock account does not exist\00")
(data (i32.const 9079) "there is no matched unlock account in the table\00")
(data (i32.const 9127) "nothing to delete\00")
(data (i32.const 9145) "account already exist\00")
(data (i32.const 9167) "from account does not exist\00")
(data (i32.const 9195) "stake event\00")
(data (i32.const 9207) "there is no staked amount to unstake\00")
(data (i32.const 9244) "unstake amount overdue\00")
(data (i32.const 9267) "refund will not work for internal account\00")
(data (i32.const 9309) "refund\00")
(data (i32.const 9316) "account does not exist\00")
(data (i32.const 9339) "no balance object found\00")
(data (i32.const 9363) "overdrawn balance\00")
(data (i32.const 9381) "string is too long to be a valid symbol_code\00")
(data (i32.const 9426) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9479) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 9528) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 9579) "error reading iterator\00")
(data (i32.const 9602) "cannot create objects in table of another contract\00")
(data (i32.const 9653) "write\00")
(data (i32.const 9659) "read\00")
(data (i32.const 9664) "cannot pass end iterator to modify\00")
(data (i32.const 9699) "object passed to modify is not in multi_index\00")
(data (i32.const 9745) "cannot modify objects in table of another contract\00")
(data (i32.const 9796) "updater cannot change primary key when modifying an object\00")
(data (i32.const 9855) "TOOKP\00")
(data (i32.const 9861) "attempt to add asset with different symbol\00")
(data (i32.const 9904) "addition underflow\00")
(data (i32.const 9923) "addition overflow\00")
(data (i32.const 9941) "cannot pass end iterator to erase\00")
(data (i32.const 9975) "cannot increment end iterator\00")
(data (i32.const 10005) "object passed to erase is not in multi_index\00")
(data (i32.const 10050) "cannot erase objects in table of another contract\00")
(data (i32.const 10100) "attempt to remove object that was not in multi_index\00")
(data (i32.const 10153) "AIR\00")
(data (i32.const 10157) "attempt to subtract asset with different symbol\00")
(data (i32.const 10205) "subtraction underflow\00")
(data (i32.const 10227) "subtraction overflow\00")
(data (i32.const 10248) "get\00")
(data (i32.const 0) "\10(\00\00")
(import "env" "require_auth" (func $fimport$0 (param i64)))
(import "env" "db_find_i64" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "eosio_assert" (func $fimport$2 (param i32 i32)))
(import "env" "current_receiver" (func $fimport$3 (result i64)))
(import "env" "abort" (func $fimport$4))
(import "env" "memset" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "db_store_i64" (func $fimport$7 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "is_account" (func $fimport$8 (param i64) (result i32)))
(import "env" "memmove" (func $fimport$9 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$10 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$11 (param i32 i32)))
(import "env" "__multf3" (func $fimport$12 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$13 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$14 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$15 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$16 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$18 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$19 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$20 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$21 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$22 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$23 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$24 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$25 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$26 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$27 (param i64 i64) (result i32)))
(import "env" "db_update_i64" (func $fimport$28 (param i32 i64 i32 i32)))
(import "env" "require_recipient" (func $fimport$29 (param i64)))
(import "env" "has_auth" (func $fimport$30 (param i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$31 (param i32 i32) (result i32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$32 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$33 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$34 (param i32 i32) (result i64)))
(import "env" "current_time" (func $fimport$35 (result i64)))
(import "env" "get_active_producers" (func $fimport$36 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$37 (param i32)))
(import "env" "action_data_size" (func $fimport$38 (result i32)))
(import "env" "read_action_data" (func $fimport$39 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$40 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$41 (param i32 i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$42 (param i32 i32)))
(export "apply" (func $88))
(table $0 17 17 anyfunc)
(elem (i32.const 1) $66 $85 $49 $63 $83 $29 $61 $42 $58 $75 $69 $36 $24 $40 $55 $87)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 10252))
(global $global$2 i32 (i32.const 10252))


void .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9659])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9659])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9659])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $113($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $7($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $20($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $20($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $16($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $9($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

int_32 .FUNC $94 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [144])
	$global$0 = $3
	*(($4 = $3) + [104]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [80])) = (int_64)0
	*(($4 + [96])) = [0]
	*($4 + [72]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	$6 = ($2 + $5)
	*($4 + [56]) = $6
	$3 = $2
	if ( ((uint_32)$5 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9659])
	$6 = *(($4 + [56]))
	$3 = *($4 + [52])
	
.LABEL $label$4
	CALL memcpy(($4 + [64]), $3, [8])
	$3 = ($3 + [8])
	*($4 + [52]) = $3
	$7 = (($4 + [64]) + [8])
	if ( ((uint_32)($6 - $3) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	$6 = *((($4 + [48]) + [8]))
	$3 = *($4 + [52])
	
.LABEL $label$5
	CALL memcpy($7, $3, [8])
	$3 = ($3 + [8])
	*($4 + [52]) = $3
	*($4 + [16]) = (int_64)0
	if ( ((uint_32)($6 - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9659])
	$3 = *($4 + [52])
	
.LABEL $label$6
	CALL memcpy(($4 + [16]), $3, [8])
	*(($4 + [80])) = *($4 + [16])
	*($4 + [52]) = ($3 + [8])
	CALL $99(($4 + [48]), (($4 + [64]) + [24]))
	*(($3 = ($4 + [8]))) = *((($4 + [48]) + [8]))
	*($4) = *($4 + [48])
	*(($6 = (($4 + [112]) + [8]))) = *($3)
	*($4 + [112]) = *($4)
	$3 = *($6)
	*((($4 + [128]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [112])
	*($4 + [32]) = $0
	*($4 + [128]) = $0
	*($4 + [132]) = ($4 + [104])
	*($4 + [128]) = ($4 + [16])
	CALL $100(($4 + [128]), ($4 + [64]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$9 }
	$2 = [1]
	if ( (*($4 + [88]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($4 + [96])))
	$global$0 = ($4 + [144])
	return $2
	
.LABEL $label$7
	$global$0 = ($4 + [144])
	return $2
}

int_32 .FUNC $95 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [128])
	$global$0 = $3
	*(($4 = $3) + [88]) = *($2)
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$3 = CALL $1($2)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $2)
	
.LABEL $label$1
	*(($4 + [80])) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [52]) = $3
	*($4 + [48]) = $3
	*($4 + [56]) = ($3 + $2)
	*($4 + [112]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $103(($4 + [16]), ($4 + [112]))
	*(($5 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	*(($6 = (($4 + [96]) + [8]))) = *($5)
	*($4 + [96]) = *($4)
	$5 = *($6)
	*((($4 + [112]) + [8])) = $5
	*(($4 + [40])) = $5
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [96])
	*($4 + [32]) = $0
	*($4 + [112]) = $0
	*($4 + [116]) = ($4 + [88])
	*($4 + [112]) = ($4 + [16])
	CALL $104(($4 + [112]), ($4 + [64]))
	if ( ((uint_32)$2 >= (uint_32)[513]) ){ goto $label$7 }
	$3 = [1]
	if ( (*($4 + [76]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $2($3)
	$3 = [1]
	if ( ((*($4 + [76]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($4 + [84])))
	$global$0 = ($4 + [128])
	return $3
	
.LABEL $label$5
	$global$0 = ($4 + [128])
	return $3
}

int_32 .FUNC $96 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [160])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = (($4 + [80]) + [24]))) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [68]) = $2
	*($4 + [64]) = $2
	*($4 + [72]) = ($2 + $7)
	*($4 + [144]) = ($4 + [64])
	*($4 + [32]) = ($4 + [80])
	CALL $105(($4 + [32]), ($4 + [144]))
	*(($9 = (($4 + [16]) + [8]))) = *($4 + [72])
	*($4 + [16]) = *($4 + [64])
	*(($3 = (($4 + [128]) + [8]))) = *($9)
	*($4 + [128]) = *($4 + [16])
	$9 = *($3)
	*((($4 + [144]) + [8])) = $9
	*((($4 + [32]) + [24])) = $9
	*($4 + [32]) = $0
	*($4 + [40]) = $1
	$0 = *($4 + [128])
	*($4 + [48]) = $0
	*($4 + [144]) = $0
	*(($9 = (($4 + [112]) + [8]))) = *($8)
	*($4 + [112]) = *($4 + [96])
	$0 = *($4 + [88])
	$1 = *($4 + [80])
	*($3) = *($9)
	*($4 + [128]) = *($4 + [112])
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$10 = *((($4 + [128]) + [8]))
	*((($4 + [144]) + [8])) = $10
	*(($4 + [8])) = $10
	$10 = *($4 + [128])
	*($4) = $10
	*($4 + [144]) = $10
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	$global$0 = ($4 + [160])
	return [1]
}

int_32 .FUNC $97 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [160])
	$global$0 = $3
	*(($4 = $3) + [120]) = *($2)
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$3 = CALL $1($2)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $2)
	
.LABEL $label$1
	*((($4 + [64]) + [24])) = (int_64)0
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [52]) = $3
	*($4 + [48]) = $3
	*($4 + [56]) = ($3 + $2)
	*($4 + [144]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $106(($4 + [16]), ($4 + [144]))
	*(($5 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	*(($6 = (($4 + [128]) + [8]))) = *($5)
	*($4 + [128]) = *($4)
	$5 = *($6)
	*((($4 + [144]) + [8])) = $5
	*((($4 + [16]) + [24])) = $5
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [128])
	*($4 + [32]) = $0
	*($4 + [144]) = $0
	*($4 + [148]) = ($4 + [120])
	*($4 + [144]) = ($4 + [16])
	CALL $107(($4 + [144]), ($4 + [64]))
	if ( ((uint_32)$2 >= (uint_32)[513]) ){ goto $label$9 }
	$3 = [1]
	if ( (*($4 + [108]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $2($3)
	$3 = [1]
	if ( ((*($4 + [108]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($4 + [116])))
	if ( (*($4 + [96]) & $3) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((*($4 + [96]) & $3) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($4 + [104])))
	
.LABEL $label$5
	$global$0 = ($4 + [160])
	return [1]
}

int_32 .FUNC $90 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [160])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [104]))) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [76]) = $2
	*($4 + [72]) = $2
	*($4 + [80]) = ($2 + $7)
	*($4 + [144]) = ($4 + [72])
	*($4 + [40]) = ($4 + [88])
	CALL $98(($4 + [40]), ($4 + [144]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [80])
	*($4 + [24]) = *($4 + [72])
	*(($3 = (($4 + [128]) + [8]))) = *($9)
	*($4 + [128]) = *($4 + [24])
	$9 = *($3)
	*((($4 + [144]) + [8])) = $9
	*(($4 + [64])) = $9
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$0 = *($4 + [128])
	*($4 + [56]) = $0
	*($4 + [144]) = $0
	*(($9 = (($4 + [112]) + [8]))) = *($8)
	*($4 + [112]) = *($4 + [96])
	$0 = *($4 + [88])
	*($3) = *($9)
	*($4 + [128]) = *($4 + [112])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$1 = *((($4 + [128]) + [8]))
	*((($4 + [144]) + [8])) = $1
	*((($4 + [8]) + [8])) = $1
	$1 = *($4 + [128])
	*($4 + [8]) = $1
	*($4 + [144]) = $1
	CALL void $3((int_32 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	$global$0 = ($4 + [160])
	return [1]
}

int_32 .FUNC $91 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [160])
	$global$0 = $3
	*(($4 = $3) + [120]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [72]) + [24])) = (int_64)0
	*(($4 + [112])) = [0]
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	*($4 + [144]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $101(($4 + [24]), ($4 + [144]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	*(($6 = (($4 + [128]) + [8]))) = *($3)
	*($4 + [128]) = *($4 + [8])
	$3 = *($6)
	*((($4 + [144]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [128])
	*($4 + [40]) = $0
	*($4 + [144]) = $0
	*($4 + [148]) = ($4 + [120])
	*($4 + [144]) = ($4 + [24])
	CALL $102(($4 + [144]), ($4 + [72]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [104]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [104]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($4 + [112])))
	$global$0 = ($4 + [160])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [160])
	return $2
}

int_32 .FUNC $92 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = (int_64)0
	*($4 + [32]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$5
	$8 = ($2 + $7)
	CALL memcpy(($4 + [32]), $2, [8])
	$9 = ($2 + [8])
	$3 = (($4 + [32]) + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$6
	CALL memcpy($3, $9, [8])
	*(($4 + [24])) = $8
	*($4 + [16]) = $2
	*(($4 + [20])) = ($2 + [16])
	*($4 + [8]) = $1
	*($4) = $0
	$8 = ($4 + int_32($5 >> [1]))
	$0 = *($3)
	$1 = *($4 + [32])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($8) + $6))
	
.LABEL $label$7
	CALL void $8((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $2($2)
	
.LABEL $label$8
	$global$0 = ($4 + [48])
	return [1]
}

int_32 .FUNC $93 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [144])
	$global$0 = $3
	*(($4 = $3) + [104]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [72]) + [24])) = [0]
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	*($4 + [128]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $108(($4 + [24]), ($4 + [128]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	*(($6 = (($4 + [112]) + [8]))) = *($3)
	*($4 + [112]) = *($4 + [8])
	$3 = *($6)
	*((($4 + [128]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [112])
	*($4 + [40]) = $0
	*($4 + [128]) = $0
	*($4 + [132]) = ($4 + [104])
	*($4 + [128]) = ($4 + [24])
	CALL $109(($4 + [128]), ($4 + [72]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [88]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($4 + [96])))
	$global$0 = ($4 + [144])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [144])
	return $2
}

int_32 .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9659])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9659])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9659])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [16])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [24])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9659])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($1, $4, [4])
	*($3) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $123 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [100]) = $2
	*($3 + [96]) = $2
	$5 = ($2 + $4)
	*($3 + [104]) = $5
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	$5 = *(($3 + [104]))
	$2 = *($3 + [100])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9659])
	$2 = *($3 + [100])
	
.LABEL $label$6
	CALL memcpy(($3 + [80]), $2, [8])
	*($3 + [100]) = ($2 + [8])
	*($3 + [72]) = [0]
	*($3 + [64]) = (int_64)0
	CALL $99(($3 + [96]), ($3 + [64]))
	*(($2 = (($3 + [16]) + [8]))) = *((($3 + [96]) + [8]))
	*($3 + [16]) = *($3 + [96])
	*(($4 = (($3 + [112]) + [8]))) = *($2)
	*($3 + [112]) = *($3 + [16])
	$2 = *($4)
	*((($3 + [128]) + [8])) = $2
	*(($3 + [56])) = $2
	*($3 + [32]) = $0
	*($3 + [40]) = $1
	$0 = *($3 + [112])
	*($3 + [48]) = $0
	*($3 + [128]) = $0
	$0 = *($3 + [80])
	$1 = *($3 + [88])
	$2 = CALL $17($3, ($3 + [64]))
	CALL $24(($3 + [32]), $1, $0, $3)
	if ( (*($2) & [1]) ){ goto $label$9 }
	if ( (*($3 + [64]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($3 + [72])))
	$global$0 = ($3 + [144])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [144])
}

void .FUNC $115 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [148]) = $2
	*($3 + [144]) = $2
	$5 = ($2 + $4)
	*($3 + [152]) = $5
	*($3 + [136]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	$5 = *(($3 + [152]))
	$2 = *($3 + [148])
	
.LABEL $label$5
	CALL memcpy(($3 + [136]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [128]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9659])
	$5 = *((($3 + [144]) + [8]))
	$2 = *($3 + [148])
	
.LABEL $label$6
	CALL memcpy(($3 + [128]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [120]) = (int_64)0
	*($3 + [112]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9659])
	$5 = *(($3 + [152]))
	$2 = *($3 + [148])
	
.LABEL $label$7
	CALL memcpy(($3 + [112]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9659])
	$2 = *($3 + [148])
	
.LABEL $label$8
	CALL memcpy(($3 + [64]), $2, [8])
	*(($5 = (($3 + [112]) + [8]))) = *($3 + [64])
	*($3 + [148]) = ($2 + [8])
	*($3 + [104]) = [0]
	*($3 + [96]) = (int_64)0
	CALL $99(($3 + [144]), ($3 + [96]))
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [144]) + [8]))
	*($3 + [48]) = *($3 + [144])
	*(($4 = (($3 + [160]) + [8]))) = *($2)
	*($3 + [160]) = *($3 + [48])
	$2 = *($4)
	*((($3 + [176]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$0 = *($3 + [160])
	*($3 + [80]) = $0
	*($3 + [176]) = $0
	*(($4 = (($3 + [32]) + [8]))) = *($5)
	*($3 + [32]) = *($3 + [112])
	$0 = *($3 + [128])
	$1 = *($3 + [136])
	$2 = CALL $17(($3 + [16]), ($3 + [96]))
	*(($3 + [8])) = *($4)
	*($3) = *($3 + [32])
	CALL $55(($3 + [64]), $1, $0, $3, $2)
	if ( (*($2) & [1]) ){ goto $label$11 }
	if ( (*($3 + [96]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [96]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $9(*(($3 + [104])))
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [192])
}

void .FUNC $122 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [72]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$7
	CALL memcpy(($3 + [40]), $5, [8])
	*(($5 = (($3 + [72]) + [8]))) = *($3 + [40])
	*((($3 + [40]) + [24])) = $4
	$7 = *($5)
	*((($3 + [24]) + [8])) = $7
	*((($3 + [8]) + [8])) = $7
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [24])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	$0 = *($3 + [72])
	*($3 + [24]) = $0
	*($3 + [8]) = $0
	CALL $85(($3 + [40]), *($3 + [88]), ($3 + [8]))
	$global$0 = ($3 + [96])
}

void .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $7($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $21($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $9($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9653])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9653])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9653])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9653])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $133(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $135(CALL $134($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9653])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9653])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

int_32 .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9653])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [9653])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9653])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9653])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9653])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $121 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [32]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$6
	CALL memcpy(($3 + [32]), $6, [8])
	*(($3 + [24])) = $5
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $83($3, *($3 + [40]), *($3 + [32]))
	$global$0 = ($3 + [48])
}

int_32 .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9659])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9659])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9659])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [16])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9659])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [4])
	$4 = (*($3) + [4])
	*($3) = $4
	$3 = ($1 + [28])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [4])
	*(($3 = ($0 + [4]))) = (*($3) + [4])
	$0 = CALL $99($0, ($1 + [32]))
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9653])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9653])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9653])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9653])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [4])
	$4 = (*($3) + [4])
	*($3) = $4
	$3 = ($1 + [28])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [9653])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [4])
	*(($3 = ($0 + [4]))) = (*($3) + [4])
	$0 = CALL $133($0, ($1 + [32]))
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $120 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [80]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$6
	CALL memcpy(($3 + [80]), $5, [8])
	*($3 + [72]) = (int_64)0
	*($3 + [64]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$7
	$4 = ($2 + $4)
	CALL memcpy(($3 + [64]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$8
	CALL memcpy(($3 + [32]), $5, [8])
	*(($6 = (($3 + [64]) + [8]))) = *($3 + [32])
	*((($3 + [32]) + [24])) = $4
	$7 = *($6)
	*((($3 + [16]) + [8])) = $7
	*(($3 + [8])) = $7
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [32])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	$0 = *($3 + [64])
	*($3 + [16]) = $0
	*($3) = $0
	CALL $75(($3 + [32]), *($3 + [88]), *($3 + [80]), $3)
	$global$0 = ($3 + [96])
}

void .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9653])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9653])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9653])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9653])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9653])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $126 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [100]) = $2
	*($3 + [96]) = $2
	$5 = ($2 + $4)
	*($3 + [104]) = $5
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	$5 = *(($3 + [104]))
	$2 = *($3 + [100])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9659])
	$5 = *((($3 + [96]) + [8]))
	$2 = *($3 + [100])
	
.LABEL $label$6
	CALL memcpy(($3 + [80]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [72]) = (int_64)0
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9659])
	$5 = *(($3 + [104]))
	$2 = *($3 + [100])
	
.LABEL $label$7
	CALL memcpy(($3 + [64]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [48]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9659])
	$2 = *($3 + [100])
	
.LABEL $label$8
	CALL memcpy(($3 + [48]), $2, [8])
	*((($3 + [64]) + [8])) = *($3 + [48])
	*($3 + [100]) = ($2 + [8])
	*($3 + [56]) = [0]
	*($3 + [48]) = (int_64)0
	CALL $99(($3 + [96]), ($3 + [48]))
	*($3 + [40]) = [0]
	*($3 + [32]) = (int_64)0
	CALL $99(($3 + [96]), ($3 + [32]))
	$5 = CALL $17(($3 + [16]), ($3 + [48]))
	$2 = CALL $17($3, ($3 + [32]))
	CALL require_auth($0)
	if ( (*($2) & [1]) ){ goto $label$15 }
	if ( (*($5) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $9(*($2 + [8]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $9(*($5 + [8]))
	$2 = [1]
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$2 = [1]
	if ( (*($3 + [32]) & [1]) ){ goto $label$11 }
	
.LABEL $label$12
	if ( (*($3 + [48]) & $2) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $9(*(($3 + [40])))
	if ( ((*($3 + [48]) & $2) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $9(*(($3 + [56])))
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [112])
}

void .FUNC $49 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	$5 = ($global$0 - [144])
	$global$0 = $5
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [8687])
	
.LABEL $label$1
	if ( ((int_64)$2 == (int_64)7691185309046446240) ){ goto $label$22 }
	if ( ((int_64)$2 == (int_64)-2067973376349130352) ){ goto $label$21 }
	if ( ((int_64)$2 != (int_64)-7297918859090848368) ){ goto $label$23 }
	CALL eosio_assert([0], [8711])
	
.LABEL $label$23
	if ( ((int_64)$1 == (int_64)7691185309046446240) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$1 != (int_64)7691185309046446240) ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$21
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$1 != (int_64)7691185309046446240) ){ goto $label$19 }
	
.LABEL $label$20
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$2 <= (int_64)6138543369096373631) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	if ( ((int_64)$1 != (int_64)-2067973376349130352) ){ goto $label$24 }
	CALL eosio_assert([0], [8762])
	
.LABEL $label$24
	if ( ((int_64)$2 > (int_64)6138543369096373631) ){ goto $label$17 }
	
.LABEL $label$18
	if ( ((int_64)$2 == (int_64)4491730902081394848) ){ goto $label$15 }
	if ( ((int_64)$2 == (int_64)6138543368799843712) ){ goto $label$14 }
	if ( ((int_64)$2 != (int_64)6138543368870089600) ){ goto $label$16 }
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$1 <= (int_64)6138543369096373631) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$17
	if ( ((int_64)$2 == (int_64)6138543369096373632) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)6138543369101776176) ){ goto $label$12 }
	if ( ((int_64)$2 != (int_64)6138558365803892624) ){ goto $label$16 }
	CALL eosio_assert([0], [8762])
	
.LABEL $label$16
	if ( ((int_64)$1 > (int_64)6138543369096373631) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$15
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$1 <= (int_64)6138543369096373631) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$14
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$1 <= (int_64)6138543369096373631) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$1 <= (int_64)6138543369096373631) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$1 <= (int_64)6138543369096373631) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_64)$1 == (int_64)6138543369096373632) ){ goto $label$26 }
	if ( ((int_64)$1 == (int_64)6138543369101776176) ){ goto $label$25 }
	if ( ((int_64)$1 != (int_64)6138558365803892624) ){ goto $label$9 }
	CALL eosio_assert([0], [8762])
	goto $label$9 
	
.LABEL $label$26
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$2 != (int_64)7289248425085577472) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$25
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$2 != (int_64)7289248425085577472) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$10
	if ( ((int_64)$1 == (int_64)4491730902081394848) ){ goto $label$8 }
	if ( ((int_64)$1 == (int_64)6138543368799843712) ){ goto $label$7 }
	if ( ((int_64)$1 != (int_64)6138543368870089600) ){ goto $label$9 }
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$2 != (int_64)7289248425085577472) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$9
	if ( ((int_64)$2 == (int_64)7289248425085577472) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$2 != (int_64)7289248425085577472) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$2 != (int_64)7289248425085577472) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$1 != (int_64)7289248425085577472) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_64)$2 != (int_64)-8281824141245601536) ){ goto $label$27 }
	CALL eosio_assert([0], [8762])
	
.LABEL $label$27
	if ( ((int_64)$1 == (int_64)7289248425085577472) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ((int_64)$1 != (int_64)-8281824141245601536) ){ goto $label$2 }
	CALL eosio_assert([0], [8762])
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8762])
	
.LABEL $label$2
	*(($5 + [136])) = [0]
	*($5 + [120]) = (int_64)-1
	*($5 + [128]) = (int_64)0
	$6 = *($0)
	*($5 + [104]) = $6
	*($5 + [112]) = $6
	$7 = CALL db_find_i64($6, $6, (int_64)-8281824366442840064, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$30 }
	if ( ((int_32)*(CALL $50(($5 + [104]), $7) + [44]) == (int_32)($5 + [104])) ){ goto $label$31 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$31
	CALL eosio_assert([0], [8820])
	$9 = *(($5 + [132]))
	$8 = *(($5 + [128]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$30 }
	
.LOOP $label$33:
	$7 = ($9 + [-24])
	$10 = *($7)
	if ( ((int_64)*($10) == (int_64)$2) ){ goto $label$32 }
	$9 = $7
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$33 }
	goto $label$30 
	
.LABEL $label$32
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$30 }
	if ( ((int_32)*($10 + [44]) == (int_32)($5 + [104])) ){ goto $label$29 }
	CALL eosio_assert([0], [9528])
	goto $label$29 
	
.LABEL $label$30
	$7 = CALL db_find_i64(*($5 + [104]), *(($5 + [112])), (int_64)-8281824366442840064, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$28 }
	if ( ((int_32)*(CALL $50(($5 + [104]), $7) + [44]) == (int_32)($5 + [104])) ){ goto $label$29 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$29
	CALL eosio_assert([0], [8863])
	
.LABEL $label$28
	CALL require_auth($1)
	if ( CALL is_account($2) ){ goto $label$34 }
	CALL eosio_assert([0], [8903])
	
.LABEL $label$34
	$11 = *($3 + [8])
	*(($5 + [96])) = [0]
	$6 = (uint_64)$11 >> (uint_64)(int_64)8
	*($5 + [72]) = $6)
	*($5 + [80]) = (int_64)-1
	*($5 + [88]) = (int_64)0
	*($5 + [64]) = *($0)
	$10 = CALL $33(($5 + [64]), $6, [8929])
	CALL require_recipient($1)
	CALL require_recipient($2)
	$12 = *($3)
	if ( ((uint_64)((int_64)$12 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$41 }
	$7 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$13 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$44 }
	$6 = $13
	$9 = $7
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$42 }
	goto $label$43 
	
.LABEL $label$44
	$6 = $13
	
.LOOP $label$45:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$41 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $9 ){ goto $label$45 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$42 }
	
.LABEL $label$43
	if ( ((int_64)$12 <= (int_64)0) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$41
	CALL eosio_assert([0], [8581])
	if ( ((int_64)$12 > (int_64)0) ){ goto $label$39 }
	
.LABEL $label$40
	CALL eosio_assert([0], [8948])
	if ( ((int_64)$11 == (int_64)*($10 + [8])) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	if ( ((int_64)$11 != (int_64)*($10 + [8])) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ((*($4) & [1]) == 0) ){ goto $label$35 }
	goto $label$36 
	
.LABEL $label$37
	CALL eosio_assert([0], [8627])
	if ( ((*($4) & [1]) == 0) ){ goto $label$35 }
	
.LABEL $label$36
	if ( (*($4 + [4]) <= [257]) ){ goto $label$35 }
	CALL eosio_assert([0], [8492])
	
.LABEL $label$35
	$7 = CALL has_auth($2)
	$9 = ($3 + [8])
	$13 = *($9)
	*((($5 + [48]) + [8])) = $13
	$6 = *($3)
	*((($5 + [16]) + [8])) = $13
	*($5 + [16]) = $6
	*($5 + [48]) = $6
	CALL $51($0, $1, ($5 + [16]))
	$13 = *($9)
	*((($5 + [32]) + [8])) = $13
	$6 = *($3)
	*(($5 + [8])) = $13
	*($5) = $6
	*($5 + [32]) = $6
	CALL $44($0, $2, $5, ( $2 ? $1 : $7 ))
	$8 = *($5 + [88])
	if ( ($8 == 0) ){ goto $label$46 }
	$10 = ($5 + [92])
	$7 = *($10)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$48 }
	
.LOOP $label$49:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$50 }
	CALL $9($9)
	
.LABEL $label$50
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$49 }
	$7 = *(($5 + [88]))
	goto $label$47 
	
.LABEL $label$48
	$7 = $8
	
.LABEL $label$47
	*($10) = $8
	CALL $9($7)
	
.LABEL $label$46
	$8 = *($5 + [128])
	if ( ($8 == 0) ){ goto $label$51 }
	$10 = ($5 + [132])
	$7 = *($10)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$53 }
	
.LOOP $label$54:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$55 }
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$56 }
	CALL $9(*(($9 + [40])))
	
.LABEL $label$56
	CALL $9($9)
	
.LABEL $label$55
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$54 }
	$7 = *(($5 + [128]))
	goto $label$52 
	
.LABEL $label$53
	$7 = $8
	
.LABEL $label$52
	*($10) = $8
	CALL $9($7)
	
.LABEL $label$51
	$global$0 = ($5 + [144])
}

void .FUNC $48 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $21($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $125 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [100]) = $2
	*($3 + [96]) = $2
	$5 = ($2 + $4)
	*($3 + [104]) = $5
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	$5 = *(($3 + [104]))
	$2 = *($3 + [100])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9659])
	$2 = *($3 + [100])
	
.LABEL $label$6
	CALL memcpy(($3 + [80]), $2, [8])
	*($3 + [100]) = ($2 + [8])
	*($3 + [72]) = [0]
	*($3 + [64]) = (int_64)0
	CALL $99(($3 + [96]), ($3 + [64]))
	*(($2 = (($3 + [16]) + [8]))) = *((($3 + [96]) + [8]))
	*($3 + [16]) = *($3 + [96])
	*(($4 = (($3 + [112]) + [8]))) = *($2)
	*($3 + [112]) = *($3 + [16])
	$2 = *($4)
	*((($3 + [128]) + [8])) = $2
	*(($3 + [56])) = $2
	*($3 + [32]) = $0
	*($3 + [40]) = $1
	$0 = *($3 + [112])
	*($3 + [48]) = $0
	*($3 + [128]) = $0
	$0 = *($3 + [80])
	$1 = *($3 + [88])
	$2 = CALL $17($3, ($3 + [64]))
	CALL $29(($3 + [32]), $1, $0, $3)
	if ( (*($2) & [1]) ){ goto $label$9 }
	if ( (*($3 + [64]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($3 + [72])))
	$global$0 = ($3 + [144])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [144])
}

void .FUNC $43 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9699])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9745])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [9861])
	
.LABEL $label$3
	$6 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9904])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9923])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [9796])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [32])
	CALL $38(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
}

void .FUNC $42 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [192])
	$global$0 = $4
	$5 = [0]
	$6 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$7 = $8
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$7 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8396])
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( (*($3 + [4]) <= [257]) ){ goto $label$1 }
	CALL eosio_assert([0], [8492])
	
.LABEL $label$1
	$11 = [0]
	*(($4 + [120])) = [0]
	*($4 + [104]) = (int_64)-1
	*($4 + [112]) = (int_64)0
	$7 = *($0)
	*($4 + [88]) = $7
	*($4 + [96]) = $6
	$5 = CALL db_find_i64($7, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$9 }
	$11 = CALL $37(($4 + [88]), $5)
	if ( ((int_32)*($11 + [40]) == (int_32)($4 + [88])) ){ goto $label$8 }
	CALL eosio_assert([0], [9528])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8521])
	
.LABEL $label$8
	CALL require_auth(*($11 + [32]))
	$6 = *($2)
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$7 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $8
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$14 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [8581])
	$6 = *($2)
	
.LABEL $label$10
	if ( ((int_64)$6 > (int_64)0) ){ goto $label$15 }
	CALL eosio_assert([0], [8598])
	
.LABEL $label$15
	if ( ((int_64)*(($2 + [8])) == (int_64)*($11 + [8])) ){ goto $label$16 }
	CALL eosio_assert([0], [8627])
	
.LABEL $label$16
	if ( ((int_64)*($2) <= (int_64))(*($11 + [16]) - *($11))) ){ goto $label$17 }
	CALL eosio_assert([0], [8653])
	
.LABEL $label$17
	*($4 + [128]) = $2
	CALL $43(($4 + [88]), $11, ($4 + [128]))
	$5 = ($11 + [32])
	$7 = *($5)
	$10 = ($2 + [8])
	*(($9 = (($4 + [72]) + [8]))) = *($10)
	$8 = *($2)
	*((($4 + [8]) + [8])) = *($9)
	*($4 + [72]) = $8
	*($4 + [8]) = *($4 + [72])
	CALL $44($0, $7, ($4 + [8]), $7)
	$7 = *($5)
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$18 }
	*(($9 = (($4 + [24]) + [24]))) = *($10)
	*($4 + [24]) = $7
	*($4 + [32]) = $1
	*($4 + [40]) = *($2)
	$8 = *($0)
	CALL $17((($4 + [24]) + [32]), $3)
	*(($5 = CALL $7([16]))) = $7
	*($5 + [8]) = (int_64)3617214756542218240
	*((($4 + [128]) + [24])) = *($9)
	$9 = (($4 + [24]) + [40])
	*(($10 = (($4 + [128]) + [40]))) = *($9)
	*($9) = [0]
	*($4 + [176]) = $5
	$5 = ($5 + [16])
	*($4 + [184]) = $5
	*($4 + [180]) = $5
	*($4 + [128]) = *($4 + [24])
	*($4 + [136]) = *($4 + [32])
	*($4 + [144]) = *($4 + [40])
	*($4 + [160]) = *($4 + [56])
	*($4 + [56]) = (int_64)0
	CALL $45($8, (int_64)-3617168760277827584, ($4 + [176]), ($4 + [128]))
	if ( ((*($4 + [160]) & [1]) == 0) ){ goto $label$19 }
	CALL $9(*($10))
	
.LABEL $label$19
	$5 = *($4 + [176])
	if ( ($5 == 0) ){ goto $label$20 }
	*($4 + [180]) = $5
	CALL $9($5)
	
.LABEL $label$20
	if ( ((*(($4 + [56])) & [1]) == 0) ){ goto $label$18 }
	CALL $9(*(($4 + [64])))
	
.LABEL $label$18
	$10 = *($4 + [112])
	if ( ($10 == 0) ){ goto $label$21 }
	$2 = ($4 + [116])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$10) ){ goto $label$23 }
	
.LOOP $label$24:
	$5 = ($5 + [-24])
	$9 = *($5)
	*($5) = [0]
	if ( ($9 == 0) ){ goto $label$25 }
	CALL $9($9)
	
.LABEL $label$25
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$24 }
	$5 = *(($4 + [112]))
	goto $label$22 
	
.LABEL $label$23
	$5 = $10
	
.LABEL $label$22
	*($2) = $10
	CALL $9($5)
	
.LABEL $label$21
	$global$0 = ($4 + [192])
}

void .FUNC $41 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9699])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9745])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$7 = *($3)
	$8 = *($7 + [8])
	*($1 + [8]) = $8
	*(($1 + [24])) = *($7 + [8])
	*($1 + [16]) = *($7)
	*($1 + [32]) = *(*($3 + [4]))
	$7 = ($1 + [16])
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)$6) == (int_64)(uint_64)$8 >> (uint_64)(int_64)8)) ){ goto $label$3 }
	CALL eosio_assert([0], [9796])
	
.LABEL $label$3
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($4 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $7
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [32])
	CALL $38(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $3, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$4
	$global$0 = ($5 + [48])
}

void .FUNC $40 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [64])
	$global$0 = $3
	*($3 + [56]) = $1
	CALL require_auth(*($0))
	$4 = [0]
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$1 = $5)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$1 = $6
	$7 = $4
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$1 = $6
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = ((int_32)$4 < (int_32)[6])
	$8 = ($4 + [1])
	$4 = $8
	if ( $7 ){ goto $label$5 }
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8396])
	
.LABEL $label$1
	$9 = *($2)
	if ( ((uint_64)((int_64)$9 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$1 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$6 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$1 = $6
	$7 = $4
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$1 = $6
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = ((int_32)$4 < (int_32)[6])
	$8 = ($4 + [1])
	$4 = $8
	if ( $7 ){ goto $label$10 }
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8416])
	$9 = *($2)
	
.LABEL $label$6
	if ( ((int_64)$9 > (int_64)0) ){ goto $label$11 }
	CALL eosio_assert([0], [8431])
	
.LABEL $label$11
	$4 = [0]
	*(($3 + [48])) = [0]
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	$1 = *($0)
	*($3 + [16]) = $1
	*($3 + [24]) = $5
	$7 = CALL db_find_i64($1, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$12 }
	$4 = CALL $37(($3 + [16]), $7)
	if ( ((int_32)*($4 + [40]) == (int_32)($3 + [16])) ){ goto $label$12 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$12
	$1 = *($0)
	*($3 + [8]) = $2
	*($3 + [12]) = ($3 + [56])
	if ( $4 ){ goto $label$13 }
	CALL eosio_assert([0], [9664])
	
.LABEL $label$13
	CALL $41(($3 + [16]), $4, $1, ($3 + [8]))
	$8 = *($3 + [40])
	if ( ($8 == 0) ){ goto $label$14 }
	$2 = ($3 + [44])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = ($4 + [-24])
	$7 = *($4)
	*($4) = [0]
	if ( ($7 == 0) ){ goto $label$18 }
	CALL $9($7)
	
.LABEL $label$18
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$17 }
	$4 = *(($3 + [40]))
	goto $label$15 
	
.LABEL $label$16
	$4 = $8
	
.LABEL $label$15
	*($2) = $8
	CALL $9($4)
	
.LABEL $label$14
	$global$0 = ($3 + [64])
}

void .FUNC $47 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9699])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9745])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9861])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9904])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9923])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [9796])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

int_32 .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9579])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $48(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $45 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $7($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [8])) = $5
	*($4) = $7
	*($4 + [4]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [4]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [36])) = $6
	*(($4 + [40])) = $5
	*(($4 + [8])) = [0]
	*((($4 + [16]) + [36])) = [0]
	*($4 + [24]) = $1
	*($4 + [16]) = $0
	*($4 + [32]) = $7
	*($4) = (int_64)0
	*($4 + [44 align=4]) = (int_64)0
	$7 = *($3 + [32])
	$2 = ( *(($3 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($4 + [44])
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($7 == 0) ){ goto $label$6 }
	CALL $130($2, $7)
	$2 = *(($4 + [48]))
	$7 = *(($4 + [44]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$7 = [0]
	
.LABEL $label$5
	*($4 + [84]) = $7
	*($4 + [80]) = $7
	*($4 + [88]) = $2
	*($4 + [56]) = ($4 + [80])
	*($4 + [64]) = $3
	CALL $131(($4 + [64]), ($4 + [56]))
	*($4 + [72]) = [0]
	*($4 + [64]) = (int_64)0
	$7 = [16]
	$3 = *((($4 + [16]) + [16]))
	$2 = *(($4 + [36]))
	$5 = ($2 - $3)
	$0 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$7:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$8 }
	$7 = (($5 & [-16]) + $7)
	
.LABEL $label$8
	$3 = *(($4 + [44]))
	$2 = *(($4 + [48]))
	$7 = (($7 + $2) - $3)
	$0 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$9:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$9 }
	if ( ($7 == 0) ){ goto $label$11 }
	CALL $130(($4 + [64]), $7)
	$2 = *($4 + [68])
	$7 = *($4 + [64])
	goto $label$10 
	
.LABEL $label$11
	$2 = [0]
	$7 = [0]
	
.LABEL $label$10
	*($4 + [84]) = $7
	*($4 + [80]) = $7
	*($4 + [88]) = $2
	CALL $132(($4 + [80]), ($4 + [16]))
	$7 = *($4 + [64])
	CALL send_inline($7, (*($4 + [68]) - $7))
	$7 = *($4 + [64])
	if ( ($7 == 0) ){ goto $label$12 }
	*($4 + [68]) = $7
	CALL $9($7)
	
.LABEL $label$12
	$7 = *($4 + [44])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($4 + [48])) = $7
	CALL $9($7)
	
.LABEL $label$13
	$7 = *($4 + [32])
	if ( ($7 == 0) ){ goto $label$14 }
	*(($4 + [36])) = $7
	CALL $9($7)
	
.LABEL $label$14
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$15 }
	*($4 + [4]) = $7
	CALL $9($7)
	
.LABEL $label$15
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $21($4)
}

void .FUNC $44 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($4 + [32])) = [0]
	*($4 + [16]) = (int_64)-1
	*($4 + [24]) = (int_64)0
	$5 = *($0)
	*($4) = $5
	$6 = *($2 + [8])
	*($4 + [8]) = $1
	$0 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $46($4, $0)
	if ( ((int_32)*($0 + [16]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$4
	*($4 + [48]) = $2
	CALL $47($4, $0, $3, ($4 + [48]))
	$7 = *($4 + [24])
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_64)CALL current_receiver() == (int_64)*($4)) ){ goto $label$5 }
	CALL eosio_assert([0], [9602])
	
.LABEL $label$5
	*(($0 = CALL $7([32])) + [16]) = $4
	*($0 + [8]) = *(($2 + [8]))
	*($0) = *($2)
	CALL memcpy(($4 + [48]), $0, [8])
	*($4 + [72]) = *($0 + [8])
	CALL memcpy((($4 + [48]) | [8]), ($4 + [72]), [8])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8
	$7 = CALL db_store_i64(*(($4 + [8])), (int_64)3607749779137757184, $3, $1), ($4 + [48]), [16]
	*($0 + [20]) = $7)
	$2 = ($4 + [16])
	if ( (uint_64)($1 <= *($2)) ){ goto $label$6 }
	*($2) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$6
	*($4 + [72]) = $0
	$1 = (uint_64)*(($0 + [8])) >> (uint_64)(int_64)8
	*($4 + [48]) = $1)
	*($4 + [44]) = $7
	$8 = ($4 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($4 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $1
	*($2 + [16]) = $7
	*($4 + [72]) = [0]
	*($2) = $0
	*($8) = ($2 + [24])
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( $0 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $48(($4 + [24]), ($4 + [72]), ($4 + [48]), ($4 + [44]))
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9($0)
	
.LABEL $label$7
	$7 = *($4 + [24])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($4 + [28])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $9($2)
	
.LABEL $label$13
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($4 + [24]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $7
	
.LABEL $label$10
	*($8) = $7
	CALL $9($0)
	
.LABEL $label$1
	$global$0 = ($4 + [80])
}

void .FUNC $124 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $5
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	CALL $63(($3 + [8]), *($3 + [40]))
	$global$0 = ($3 + [48])
}

int_32 .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9653])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9653])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9653])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [24]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9653])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9653])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [40]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9653])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9653])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [56]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9653])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$1 = ($1 + [64])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9653])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $1, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $8 (int_32 $0)
{
	return CALL $7($0)
}

void .FUNC $9 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

int_32 .FUNC $6 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $4())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $5($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $7 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $1($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $1($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $4 ()
{
	return [8208]
}

int_32 .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $1($1)
	
.LABEL $label$2
	*(CALL $4()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $1(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $2($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $2 (int_32 $0)
{
}

void .FUNC $3 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

void .FUNC $0 ()
{
	CALL $3()
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8232])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	CALL $13($0, $1)
}

int_32 .FUNC $15 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

void .FUNC $16 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $7($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $10 (int_32 $0)
{
	CALL $9($0)
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $6(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $6(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	return CALL $11($0, $1)
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

void .FUNC $75 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL require_auth(*($0))
	$5 = [0]
	*(($4 + [160])) = [0]
	*($4 + [136]) = $2
	*($4 + [144]) = (int_64)-1
	*($4 + [152]) = (int_64)0
	$6 = *($0)
	*($4 + [128]) = $6
	$7 = CALL db_find_i64($6, $2, (int_64)-3663382948557619200, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $27(($4 + [128]), $7)
	if ( ((int_32)*($5 + [72]) == (int_32)($4 + [128])) ){ goto $label$1 }
	CALL eosio_assert([0], [9528])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8903])
	
.LABEL $label$1
	*(($4 + [120])) = [0]
	*($4 + [104]) = (int_64)-1
	*($4 + [112]) = (int_64)0
	$6 = *($0)
	*($4 + [88]) = $6
	*($4 + [96]) = $1
	$7 = CALL db_find_i64($6, $1, (int_64)-3663382948557619200, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	if ( ((int_32)*(CALL $27(($4 + [88]), $7) + [72]) == (int_32)($4 + [88])) ){ goto $label$3 }
	CALL eosio_assert([0], [9528])
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [9167])
	
.LABEL $label$3
	$7 = [0]
	*(($4 + [80])) = [0]
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	$6 = *($0)
	*($4 + [48]) = $6
	*($4 + [56]) = $1
	$8 = CALL db_find_i64($6, $1, (int_64)-4157660949894922240, $2)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$7 }
	$7 = CALL $70(($4 + [48]), $8)
	if ( ((int_32)*($7 + [28]) == (int_32)($4 + [48])) ){ goto $label$8 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$8
	if ( ((int_64)*($7 + [8]) >= (int_64)*($3)) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [9207])
	if ( ((int_64)*([0] + [8]) >= (int_64)*($3)) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [9244])
	
.LABEL $label$5
	$6 = *($0)
	*($4 + [8]) = $3
	if ( $7 ){ goto $label$9 }
	CALL eosio_assert([0], [9664])
	
.LABEL $label$9
	CALL $76(($4 + [48]), $7, $6, ($4 + [8]))
	if ( ((int_64)*(($7 + [8])) == (int_64)0) ){ goto $label$12 }
	$6 = *($0)
	*($4 + [8]) = $3
	if ( $5 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	if ( $7 ){ goto $label$13 }
	CALL eosio_assert([0], [9941])
	CALL eosio_assert([0], [9975])
	
.LABEL $label$13
	$8 = CALL db_next_i64(*($7 + [32]), ($4 + [8]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$14 }
	CALL $70(($4 + [48]), $8)
	
.LABEL $label$14
	CALL $77(($4 + [48]), $7)
	$6 = *($0)
	*($4 + [8]) = $3
	if ( $5 ){ goto $label$10 }
	
.LABEL $label$11
	CALL eosio_assert([0], [9664])
	
.LABEL $label$10
	CALL $78(($4 + [128]), $5, $6, ($4 + [8]))
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	$6 = *($0)
	*($4 + [8]) = $6
	*($4 + [16]) = $1
	$7 = CALL db_find_i64($6, $1, (int_64)-3102536759402283008, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$17 }
	$7 = CALL $79(($4 + [8]), $7)
	if ( ((int_32)*($7 + [28]) == (int_32)($4 + [8])) ){ goto $label$18 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$18
	$1 = *($0)
	*($4 + [176]) = $3
	CALL $80(($4 + [8]), $7, $1, ($4 + [176]))
	$3 = *($4 + [32])
	if ( $3 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$6 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [8])) ){ goto $label$19 }
	CALL eosio_assert([0], [9602])
	
.LABEL $label$19
	*(($0 = CALL $7([40]))) = (int_64)0
	*($0 + [28]) = ($4 + [8])
	*(($0 + [16])) = *(($3 + [8]))
	*($0 + [8]) = *($3)
	$1 = CALL $22()
	*($0) = $2
	*($0 + [24]) = ((int_64)$1 / (int_64)1000000)
	*($4 + [216]) = (($4 + [176]) + [28])
	*($4 + [212]) = ($4 + [176])
	*($4 + [208]) = ($4 + [176])
	CALL $81(($4 + [208]), $0)
	$1 = *($0)
	$3 = CALL db_store_i64(*((($4 + [8]) + [8])), (int_64)-3102536759402283008, $6, $1, ($4 + [176]), [28])
	*($0 + [32]) = $3
	$7 = (($4 + [8]) + [16])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$20 }
	*($7) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$20
	*($4 + [208]) = $0
	$1 = *($0)
	*($4 + [176]) = $1
	*($4 + [172]) = $3
	$7 = *((($4 + [8]) + [28]))
	if ( ((uint_32)$7 >= (uint_32)*(($4 + [40]))) ){ goto $label$23 }
	*($7 + [8]) = $1
	*($7 + [16]) = $3
	*($4 + [208]) = [0]
	*($7) = $0
	*(($4 + [36])) = ($7 + [24])
	$0 = *($4 + [208])
	*($4 + [208]) = [0]
	if ( $0 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	CALL $82(($4 + [32]), ($4 + [208]), ($4 + [176]), ($4 + [172]))
	$0 = *($4 + [208])
	*($4 + [208]) = [0]
	if ( ($0 == 0) ){ goto $label$21 }
	
.LABEL $label$22
	CALL $9($0)
	
.LABEL $label$21
	$3 = *($4 + [32])
	if ( ($3 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$5 = ($4 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$25 }
	
.LOOP $label$26:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$27 }
	CALL $9($7)
	
.LABEL $label$27
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$26 }
	$0 = *(($4 + [32]))
	goto $label$24 
	
.LABEL $label$25
	$0 = $3
	
.LABEL $label$24
	*($5) = $3
	CALL $9($0)
	
.LABEL $label$15
	$3 = *($4 + [72])
	if ( ($3 == 0) ){ goto $label$28 }
	$5 = ($4 + [76])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$30 }
	
.LOOP $label$31:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$32 }
	CALL $9($7)
	
.LABEL $label$32
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$31 }
	$0 = *(($4 + [72]))
	goto $label$29 
	
.LABEL $label$30
	$0 = $3
	
.LABEL $label$29
	*($5) = $3
	CALL $9($0)
	
.LABEL $label$28
	$3 = *($4 + [112])
	if ( ($3 == 0) ){ goto $label$33 }
	$5 = ($4 + [116])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$35 }
	
.LOOP $label$36:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$37 }
	CALL $9($7)
	
.LABEL $label$37
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$36 }
	$0 = *(($4 + [112]))
	goto $label$34 
	
.LABEL $label$35
	$0 = $3
	
.LABEL $label$34
	*($5) = $3
	CALL $9($0)
	
.LABEL $label$33
	$3 = *($4 + [152])
	if ( ($3 == 0) ){ goto $label$38 }
	$5 = ($4 + [156])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$40 }
	
.LOOP $label$41:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$42 }
	CALL $9($7)
	
.LABEL $label$42
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$41 }
	$0 = *(($4 + [152]))
	goto $label$39 
	
.LABEL $label$40
	$0 = $3
	
.LABEL $label$39
	*($5) = $3
	CALL $9($0)
	
.LABEL $label$38
	$global$0 = ($4 + [224])
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $19($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $19 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $7($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $9($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $58 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [160])
	$global$0 = $4
	*($4 + [68]) = $2
	*($4 + [72]) = $1
	if ( CALL is_account($1) ){ goto $label$1 }
	CALL eosio_assert([0], [8980])
	
.LABEL $label$1
	CALL require_auth(*($0))
	*(($4 + [56])) = [0]
	*($4 + [40]) = (int_64)-1
	*($4 + [48]) = (int_64)0
	$5 = *($0)
	*($4 + [24]) = $5
	*($4 + [32]) = $5
	$2 = CALL db_find_i64($5, $5, (int_64)-8281824366442840064, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	if ( ((int_32)*(CALL $50(($4 + [24]), $2) + [44]) == (int_32)($4 + [24])) ){ goto $label$5 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$5
	CALL eosio_assert([0], [9008])
	$6 = *($4 + [48])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$2 = CALL $15([8349])
	if ( ($2 <= [8]) ){ goto $label$9 }
	CALL eosio_assert([0], [9381])
	goto $label$8 
	
.LABEL $label$9
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$5 = (int_64)0
	
.LOOP $label$10:
	$7 = *(($2 + [8348]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$11 }
	CALL eosio_assert([0], [9426])
	
.LABEL $label$11
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$10 }
	$5 = ((int_64)$5 & (int_64)72057594037927935)
	goto $label$6 
	
.LABEL $label$7
	$5 = (int_64)0
	
.LABEL $label$6
	*(($4 + [112])) = [0]
	*($4 + [88]) = $1
	*($4 + [96]) = (int_64)-1
	*($4 + [104]) = (int_64)0
	*($4 + [80]) = *($0)
	$2 = CALL $52(($4 + [80]), $5, [8929])
	*((($4 + [8]) + [8])) = *(($2 + [8]))
	*($4 + [8]) = *($2)
	$6 = *($4 + [104])
	if ( ($6 == 0) ){ goto $label$12 }
	$8 = ($4 + [108])
	$2 = *($8)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$14 }
	
.LOOP $label$15:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$16 }
	CALL $9($7)
	
.LABEL $label$16
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$15 }
	$2 = *(($4 + [104]))
	goto $label$13 
	
.LABEL $label$14
	$2 = $6
	
.LABEL $label$13
	*($8) = $6
	CALL $9($2)
	
.LABEL $label$12
	$5 = *($0)
	*($4 + [92]) = $3
	*($4 + [84]) = ($4 + [8])
	*($4 + [80]) = ($4 + [72])
	*($4 + [88]) = ($4 + [68])
	*($4 + [152]) = $5
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [24])) ){ goto $label$17 }
	CALL eosio_assert([0], [9602])
	
.LABEL $label$17
	*($4 + [132]) = ($4 + [80])
	*($4 + [128]) = ($4 + [24])
	*($4 + [136]) = ($4 + [152])
	*(($2 = CALL $7([56])) + [8]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [32 align=4]) = (int_64)0
	*($2 + [40]) = [0]
	*($2 + [44]) = ($4 + [24])
	CALL $59(($4 + [128]), $2)
	*($4 + [144]) = $2
	$5 = *($2)
	*($4 + [128]) = $5
	$6 = *($2 + [48])
	*($4 + [124]) = $6
	$0 = ($4 + [52])
	$7 = *($0)
	if ( ((uint_32)$7 >= (uint_32)*(($4 + [56]))) ){ goto $label$20 }
	*($7 + [8]) = $5
	*($7 + [16]) = $6
	*($4 + [144]) = [0]
	*($7) = $2
	*($0) = ($7 + [24])
	$2 = *($4 + [144])
	*($4 + [144]) = [0]
	if ( ($2 == 0) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL $60(($4 + [48]), ($4 + [144]), ($4 + [128]), ($4 + [124]))
	$2 = *($4 + [144])
	*($4 + [144]) = [0]
	if ( $2 ){ goto $label$18 }
	
.LABEL $label$19
	$6 = *($4 + [48])
	if ( ($6 == 0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$18
	if ( ((*($2 + [32]) & [1]) == 0) ){ goto $label$21 }
	CALL $9(*(($2 + [40])))
	
.LABEL $label$21
	CALL $9($2)
	$6 = *($4 + [48])
	if ( ($6 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$0 = ($4 + [52])
	$2 = *($0)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$23 }
	
.LOOP $label$24:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$25 }
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$26 }
	CALL $9(*(($7 + [40])))
	
.LABEL $label$26
	CALL $9($7)
	
.LABEL $label$25
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$24 }
	$2 = *(($4 + [48]))
	goto $label$22 
	
.LABEL $label$23
	$2 = $6
	
.LABEL $label$22
	*($0) = $6
	CALL $9($2)
	
.LABEL $label$2
	$global$0 = ($4 + [160])
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = *($4 + [4])
	*(($1 + [16])) = *(($6 + [8]))
	*($1 + [8]) = *($6)
	*($1 + [24]) = *(*($4 + [8]))
	*($1 + [28]) = ((int_64)CALL $22() / (int_64)1000000)
	CALL $18(($1 + [32]), *($4 + [12]))
	$4 = *($1 + [32])
	$6 = ( *(($1 + [36])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($6 + [32])
	$7 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	CALL $137($3, $1)
	$7 = *($1)
	*($1 + [48]) = CALL db_store_i64(*($5 + [8]), (int_64)-8281824366442840064, *(*($0 + [8])), $7, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$7 >= (uint_64)*($5 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $2($2)
	if ( (uint_64)($7 <= *($5 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [16])
}

int_32 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9579])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [40]) = [0]
	*($5 + [44]) = $0
	CALL $136(($3 + [32]), $5)
	*($5 + [48]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $60(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [40])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $51 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [40])) = [0]
	*($3 + [16]) = $1
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	*($3 + [8]) = *($0)
	$4 = *($2)
	$0 = CALL $52(($3 + [8]), (uint_64)*($2 + [8]) >> (uint_64)(int_64)8), [9339]
	$1 = *($0)
	if ( ((int_64)$1) < (int_64)$4) ){ goto $label$5 }
	if ( ((int_64)$1 != (int_64)$4) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [9363])
	if ( ((int_64)*($0) == (int_64)*($2)) ){ goto $label$3 }
	
.LABEL $label$4
	*($3) = $2
	CALL $53(($3 + [8]), $0, $3)
	$5 = *($3 + [32])
	if ( ($5 == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $54(($3 + [8]), $0)
	$5 = *($3 + [32])
	if ( $5 ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$1
	$6 = ($3 + [36])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	CALL $9($0)
	
.LABEL $label$9
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$8 }
	$2 = *(($3 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$2 = $5
	
.LABEL $label$6
	*($6) = $5
	CALL $9($2)
	$global$0 = ($3 + [48])
}

int_32 .FUNC $52 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9528])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $46($0, $5)
	if ( ((int_32)*($6 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9528])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9699])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9745])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [10157])
	
.LABEL $label$3
	$6 = (int_64)
	*($1) = $6(*($1) - *($2)))
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [10205])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10227])
	
.LABEL $label$5
	$2 = ($1 + [8])
	if ( ((int_64)$5 == (int_64)(uint_64)*($2) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [9796])
	
.LABEL $label$6
	$7 = $3
	$3 = ($7 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	*($4 + [8]) = *($2)
	CALL memcpy(($7 + [-8]), ($4 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $3, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [16])
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10005])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10050])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10100])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $34 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [40])) = [0]
	*($3 + [16]) = $1
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	*($3 + [8]) = *($0)
	$5 = *($2)
	$4 = CALL $52(($3 + [8]), (uint_64)*($2 + [8]) >> (uint_64)(int_64)8), [9339]
	$1 = *($4)
	if ( ((int_64)$1) < (int_64)$5) ){ goto $label$5 }
	if ( ((int_64)$1 != (int_64)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [9363])
	if ( ((int_64)*($4) == (int_64)*($2)) ){ goto $label$3 }
	
.LABEL $label$4
	$1 = *($0)
	*($3) = $2
	CALL $56(($3 + [8]), $4, $1, $3)
	$4 = *($3 + [32])
	if ( ($4 == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $54(($3 + [8]), $4)
	$4 = *($3 + [32])
	if ( $4 ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$1
	$6 = ($3 + [36])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	CALL $9($0)
	
.LABEL $label$9
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$8 }
	$2 = *(($3 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$2 = $4
	
.LABEL $label$6
	*($6) = $4
	CALL $9($2)
	$global$0 = ($3 + [48])
}

void .FUNC $56 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9699])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9745])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [10157])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [10205])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10227])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [9796])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $57 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9699])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9745])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9861])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9904])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9923])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [9796])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $116 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [100]) = $2
	*($3 + [96]) = $2
	$5 = ($2 + $4)
	*($3 + [104]) = $5
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	$5 = *(($3 + [104]))
	$2 = *($3 + [100])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [9659])
	$2 = *($3 + [100])
	
.LABEL $label$6
	CALL memcpy(($3 + [84]), $2, [4])
	*($3 + [100]) = ($2 + [4])
	*($3 + [80]) = [0]
	*($3 + [72]) = (int_64)0
	CALL $99(($3 + [96]), ($3 + [72]))
	*(($2 = (($3 + [24]) + [8]))) = *((($3 + [96]) + [8]))
	*($3 + [24]) = *($3 + [96])
	*(($4 = (($3 + [112]) + [8]))) = *($2)
	*($3 + [112]) = *($3 + [24])
	$2 = *($4)
	*((($3 + [128]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$0 = *($3 + [112])
	*($3 + [56]) = $0
	*($3 + [128]) = $0
	$2 = CALL $17(($3 + [8]), ($3 + [72]))
	CALL $58(($3 + [40]), *($3 + [88]), *($3 + [84]), $2)
	if ( (*($2) & [1]) ){ goto $label$9 }
	if ( (*($3 + [72]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [72]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($3 + [80])))
	$global$0 = ($3 + [144])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [144])
}

void .FUNC $117 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $5
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	CALL $61(($3 + [8]), *($3 + [40]))
	$global$0 = ($3 + [48])
}

void .FUNC $114 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [148]) = $2
	*($3 + [144]) = $2
	$5 = ($2 + $4)
	*($3 + [152]) = $5
	*($3 + [136]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	$5 = *(($3 + [152]))
	$2 = *($3 + [148])
	
.LABEL $label$5
	CALL memcpy(($3 + [136]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [128]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9659])
	$5 = *((($3 + [144]) + [8]))
	$2 = *($3 + [148])
	
.LABEL $label$6
	CALL memcpy(($3 + [128]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [120]) = (int_64)0
	*($3 + [112]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9659])
	$5 = *(($3 + [152]))
	$2 = *($3 + [148])
	
.LABEL $label$7
	CALL memcpy(($3 + [112]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9659])
	$2 = *($3 + [148])
	
.LABEL $label$8
	CALL memcpy(($3 + [64]), $2, [8])
	*(($5 = (($3 + [112]) + [8]))) = *($3 + [64])
	*($3 + [148]) = ($2 + [8])
	*($3 + [104]) = [0]
	*($3 + [96]) = (int_64)0
	CALL $99(($3 + [144]), ($3 + [96]))
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [144]) + [8]))
	*($3 + [48]) = *($3 + [144])
	*(($4 = (($3 + [160]) + [8]))) = *($2)
	*($3 + [160]) = *($3 + [48])
	$2 = *($4)
	*((($3 + [176]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$0 = *($3 + [160])
	*($3 + [80]) = $0
	*($3 + [176]) = $0
	*(($4 = (($3 + [32]) + [8]))) = *($5)
	*($3 + [32]) = *($3 + [112])
	$0 = *($3 + [128])
	$1 = *($3 + [136])
	$2 = CALL $17(($3 + [16]), ($3 + [96]))
	*(($3 + [8])) = *($4)
	*($3) = *($3 + [32])
	CALL $49(($3 + [64]), $1, $0, $3, $2)
	if ( (*($2) & [1]) ){ goto $label$11 }
	if ( (*($3 + [96]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [96]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $9(*(($3 + [104])))
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [192])
}

void .FUNC $35 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($4 + [32])) = [0]
	*($4 + [16]) = (int_64)-1
	*($4 + [24]) = (int_64)0
	$5 = *($0)
	*($4) = $5
	$6 = *($2 + [8])
	*($4 + [8]) = $1
	$0 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $46($4, $0)
	if ( ((int_32)*($0 + [16]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$4
	*($4 + [48]) = $2
	CALL $57($4, $0, $3, ($4 + [48]))
	$7 = *($4 + [24])
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_64)CALL current_receiver() == (int_64)*($4)) ){ goto $label$5 }
	CALL eosio_assert([0], [9602])
	
.LABEL $label$5
	*(($0 = CALL $7([32])) + [16]) = $4
	*($0 + [8]) = *(($2 + [8]))
	*($0) = *($2)
	CALL memcpy(($4 + [48]), $0, [8])
	*($4 + [72]) = *($0 + [8])
	CALL memcpy((($4 + [48]) | [8]), ($4 + [72]), [8])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8
	$7 = CALL db_store_i64(*(($4 + [8])), (int_64)3607749779137757184, $3, $1), ($4 + [48]), [16]
	*($0 + [20]) = $7)
	$2 = ($4 + [16])
	if ( (uint_64)($1 <= *($2)) ){ goto $label$6 }
	*($2) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$6
	*($4 + [72]) = $0
	$1 = (uint_64)*(($0 + [8])) >> (uint_64)(int_64)8
	*($4 + [48]) = $1)
	*($4 + [44]) = $7
	$8 = ($4 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($4 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $1
	*($2 + [16]) = $7
	*($4 + [72]) = [0]
	*($2) = $0
	*($8) = ($2 + [24])
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( $0 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $48(($4 + [24]), ($4 + [72]), ($4 + [48]), ($4 + [44]))
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9($0)
	
.LABEL $label$7
	$7 = *($4 + [24])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($4 + [28])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $9($2)
	
.LABEL $label$13
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($4 + [24]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $7
	
.LABEL $label$10
	*($8) = $7
	CALL $9($0)
	
.LABEL $label$1
	$global$0 = ($4 + [80])
}

void .FUNC $112 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [148]) = $2
	*($3 + [144]) = $2
	$5 = ($2 + $4)
	*($3 + [152]) = $5
	*($3 + [136]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	$5 = *(($3 + [152]))
	$2 = *($3 + [148])
	
.LABEL $label$5
	CALL memcpy(($3 + [136]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [128]) = (int_64)0
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9659])
	$5 = *((($3 + [144]) + [8]))
	$2 = *($3 + [148])
	
.LABEL $label$6
	CALL memcpy(($3 + [120]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9659])
	$2 = *($3 + [148])
	
.LABEL $label$7
	CALL memcpy(($3 + [72]), $2, [8])
	*(($4 = (($3 + [120]) + [8]))) = *($3 + [72])
	*($3 + [148]) = ($2 + [8])
	*($3 + [112]) = [0]
	*($3 + [104]) = (int_64)0
	CALL $99(($3 + [144]), ($3 + [104]))
	*(($2 = (($3 + [56]) + [8]))) = *((($3 + [144]) + [8]))
	*($3 + [56]) = *($3 + [144])
	*(($5 = (($3 + [160]) + [8]))) = *($2)
	*($3 + [160]) = *($3 + [56])
	$2 = *($5)
	*((($3 + [176]) + [8])) = $2
	*(($3 + [96])) = $2
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$0 = *($3 + [160])
	*($3 + [88]) = $0
	*($3 + [176]) = $0
	*(($5 = (($3 + [40]) + [8]))) = *($4)
	*($3 + [40]) = *($3 + [120])
	$0 = *($3 + [136])
	$2 = CALL $17(($3 + [24]), ($3 + [104]))
	*((($3 + [8]) + [8])) = *($5)
	*($3 + [8]) = *($3 + [40])
	CALL $42(($3 + [72]), $0, ($3 + [8]), $2)
	if ( (*($2) & [1]) ){ goto $label$10 }
	if ( (*($3 + [104]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [104]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [112])))
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [192])
}

int_32 .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10248])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $130($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $110 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [72]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$7
	CALL memcpy(($3 + [40]), $5, [8])
	*(($5 = (($3 + [72]) + [8]))) = *($3 + [40])
	*((($3 + [40]) + [24])) = $4
	$7 = *($5)
	*((($3 + [24]) + [8])) = $7
	*((($3 + [8]) + [8])) = $7
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [24])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	$0 = *($3 + [72])
	*($3 + [24]) = $0
	*($3 + [8]) = $0
	CALL $36(($3 + [40]), *($3 + [88]), ($3 + [8]))
	$global$0 = ($3 + [96])
}

void .FUNC $111 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [72]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$7
	CALL memcpy(($3 + [40]), $5, [8])
	*(($5 = (($3 + [72]) + [8]))) = *($3 + [40])
	*((($3 + [40]) + [24])) = $4
	$7 = *($5)
	*((($3 + [24]) + [8])) = $7
	*((($3 + [8]) + [8])) = $7
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [24])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	$0 = *($3 + [72])
	*($3 + [24]) = $0
	*($3 + [8]) = $0
	CALL $40(($3 + [40]), *($3 + [88]), ($3 + [8]))
	$global$0 = ($3 + [96])
}

int_32 .FUNC $139 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9659])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9659])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9659])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [16])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [24])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9659])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($1, $4, [4])
	*($3) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $118 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $5
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	CALL $66(($3 + [8]), *($3 + [40]))
	$global$0 = ($3 + [48])
}

void .FUNC $119 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [80]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$6
	CALL memcpy(($3 + [80]), $5, [8])
	*($3 + [72]) = (int_64)0
	*($3 + [64]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$7
	$4 = ($2 + $4)
	CALL memcpy(($3 + [64]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$8
	CALL memcpy(($3 + [32]), $5, [8])
	*(($6 = (($3 + [64]) + [8]))) = *($3 + [32])
	*((($3 + [32]) + [24])) = $4
	$7 = *($6)
	*((($3 + [16]) + [8])) = $7
	*(($3 + [8])) = $7
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [32])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	$0 = *($3 + [64])
	*($3 + [16]) = $0
	*($3) = $0
	CALL $69(($3 + [32]), *($3 + [88]), *($3 + [80]), $3)
	$global$0 = ($3 + [96])
}

void .FUNC $29 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [128])
	$global$0 = $4
	CALL require_auth(*($0))
	if ( CALL is_account($1) ){ goto $label$1 }
	CALL eosio_assert([0], [8288])
	
.LABEL $label$1
	*(($4 + [120])) = [0]
	*($4 + [104]) = (int_64)-1
	*($4 + [112]) = (int_64)0
	$5 = *($0)
	*($4 + [88]) = $5
	*($4 + [96]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)-7950098247169605632, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	if ( ((int_32)*(CALL $25(($4 + [88]), $6) + [16]) == (int_32)($4 + [88])) ){ goto $label$2 }
	CALL eosio_assert([0], [9528])
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8317])
	
.LABEL $label$2
	$7 = [0]
	*(($4 + [80])) = [0]
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	$5 = *($0)
	*($4 + [48]) = $5
	*($4 + [56]) = $2
	$6 = CALL db_find_i64($5, $2, (int_64)-3663382948557619200, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$7 = CALL $27(($4 + [48]), $6)
	if ( ((int_32)*($7 + [72]) == (int_32)($4 + [48])) ){ goto $label$4 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$4
	$5 = *($7 + [16])
	if ( ((int_64)$5 <= (int_64)0) ){ goto $label$6 }
	$6 = CALL $15([8349])
	if ( ($6 <= [8]) ){ goto $label$10 }
	CALL eosio_assert([0], [9381])
	goto $label$9 
	
.LABEL $label$10
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	$2 = (int_64)0
	
.LOOP $label$11:
	$8 = *(($6 + [8348]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$12 }
	CALL eosio_assert([0], [9426])
	
.LABEL $label$12
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$11 }
	goto $label$7 
	
.LABEL $label$8
	$2 = (int_64)0
	
.LABEL $label$7
	*($4 + [40]) = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	*($4 + [32]) = $5
	if ( (uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$13 }
	CALL eosio_assert([0], [9479])
	
.LABEL $label$13
	$2 = ((int_64)$2 & (int_64)72057594037927935)
	$6 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$5 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$17 }
	$2 = $5
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$17
	$2 = $5
	
.LOOP $label$18:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$15 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$9 = ($6 + [1])
	$6 = $9
	if ( $8 ){ goto $label$18 }
	$6 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	CALL eosio_assert([0], [8396])
	
.LABEL $label$14
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$6 = CALL $15([8354])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$21 }
	*($4 + [16]) = ($6 << [1])
	$8 = (($4 + [16]) | [1])
	if ( $6 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$9 = (($6 + [16]) & [-16])
	$8 = CALL $7($9)
	*($4 + [16]) = ($9 | [1])
	*($4 + [24]) = $8
	*($4 + [20]) = $6
	
.LABEL $label$20
	CALL memcpy($8, [8354], $6)
	
.LABEL $label$19
	*(($8 + $6)) = [0]
	*(($4 + [8])) = *((($4 + [32]) + [8]))
	*($4) = *($4 + [32])
	CALL $30($0, (int_64)-3917941655439857408, $1, $4, ($4 + [16]))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$22 }
	CALL $9(*($4 + [24]))
	
.LABEL $label$22
	$2 = *($0)
	if ( $7 ){ goto $label$23 }
	CALL eosio_assert([0], [9664])
	
.LABEL $label$23
	CALL $31(($4 + [48]), $7, $2)
	
.LABEL $label$6
	$2 = *($0)
	if ( $7 ){ goto $label$24 }
	CALL eosio_assert([0], [9664])
	
.LABEL $label$24
	CALL $32(($4 + [48]), $7, $2)
	$9 = *($4 + [72])
	if ( ($9 == 0) ){ goto $label$25 }
	$0 = ($4 + [76])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$27 }
	
.LOOP $label$28:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$29 }
	CALL $9($8)
	
.LABEL $label$29
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$28 }
	$6 = *(($4 + [72]))
	goto $label$26 
	
.LABEL $label$27
	$6 = $9
	
.LABEL $label$26
	*($0) = $9
	CALL $9($6)
	
.LABEL $label$25
	$9 = *($4 + [112])
	if ( ($9 == 0) ){ goto $label$30 }
	$0 = ($4 + [116])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$32 }
	
.LOOP $label$33:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$34 }
	CALL $9($8)
	
.LABEL $label$34
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$33 }
	$6 = *(($4 + [112]))
	goto $label$31 
	
.LABEL $label$32
	$6 = $9
	
.LABEL $label$31
	*($0) = $9
	CALL $9($6)
	
.LABEL $label$30
	$global$0 = ($4 + [128])
	return (unreachable)
	
.LABEL $label$5
	CALL $16(($4 + [16]))
}

void .FUNC $28 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [72]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9699])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9745])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	*($1 + [64]) = (int_64)1
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-80])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $128($5, $1)
	CALL db_update_i64(*($1 + [76]), $2, $4, [72])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

void .FUNC $55 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	$5 = ($global$0 - [144])
	$global$0 = $5
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [8687])
	
.LABEL $label$1
	if ( ((int_64)$2 == (int_64)7691185309046446240) ){ goto $label$22 }
	if ( ((int_64)$2 == (int_64)-2067973376349130352) ){ goto $label$21 }
	if ( ((int_64)$2 != (int_64)-7297918859090848368) ){ goto $label$23 }
	CALL eosio_assert([0], [8711])
	
.LABEL $label$23
	if ( ((int_64)$1 == (int_64)7691185309046446240) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$1 != (int_64)7691185309046446240) ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$21
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$1 != (int_64)7691185309046446240) ){ goto $label$19 }
	
.LABEL $label$20
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$2 <= (int_64)6138543369096373631) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	if ( ((int_64)$1 != (int_64)-2067973376349130352) ){ goto $label$24 }
	CALL eosio_assert([0], [8762])
	
.LABEL $label$24
	if ( ((int_64)$2 > (int_64)6138543369096373631) ){ goto $label$17 }
	
.LABEL $label$18
	if ( ((int_64)$2 == (int_64)4491730902081394848) ){ goto $label$15 }
	if ( ((int_64)$2 == (int_64)6138543368799843712) ){ goto $label$14 }
	if ( ((int_64)$2 != (int_64)6138543368870089600) ){ goto $label$16 }
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$1 <= (int_64)6138543369096373631) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$17
	if ( ((int_64)$2 == (int_64)6138543369096373632) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)6138543369101776176) ){ goto $label$12 }
	if ( ((int_64)$2 != (int_64)6138558365803892624) ){ goto $label$16 }
	CALL eosio_assert([0], [8762])
	
.LABEL $label$16
	if ( ((int_64)$1 > (int_64)6138543369096373631) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$15
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$1 <= (int_64)6138543369096373631) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$14
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$1 <= (int_64)6138543369096373631) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$1 <= (int_64)6138543369096373631) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$1 <= (int_64)6138543369096373631) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_64)$1 == (int_64)6138543369096373632) ){ goto $label$26 }
	if ( ((int_64)$1 == (int_64)6138543369101776176) ){ goto $label$25 }
	if ( ((int_64)$1 != (int_64)6138558365803892624) ){ goto $label$9 }
	CALL eosio_assert([0], [8762])
	goto $label$9 
	
.LABEL $label$26
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$2 != (int_64)7289248425085577472) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$25
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$2 != (int_64)7289248425085577472) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$10
	if ( ((int_64)$1 == (int_64)4491730902081394848) ){ goto $label$8 }
	if ( ((int_64)$1 == (int_64)6138543368799843712) ){ goto $label$7 }
	if ( ((int_64)$1 != (int_64)6138543368870089600) ){ goto $label$9 }
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$2 != (int_64)7289248425085577472) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$9
	if ( ((int_64)$2 == (int_64)7289248425085577472) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$2 != (int_64)7289248425085577472) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$2 != (int_64)7289248425085577472) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [8762])
	if ( ((int_64)$1 != (int_64)7289248425085577472) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_64)$2 != (int_64)-8281824141245601536) ){ goto $label$27 }
	CALL eosio_assert([0], [8762])
	
.LABEL $label$27
	if ( ((int_64)$1 == (int_64)7289248425085577472) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ((int_64)$1 != (int_64)-8281824141245601536) ){ goto $label$2 }
	CALL eosio_assert([0], [8762])
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8762])
	
.LABEL $label$2
	*(($5 + [136])) = [0]
	*($5 + [120]) = (int_64)-1
	*($5 + [128]) = (int_64)0
	$6 = *($0)
	*($5 + [104]) = $6
	*($5 + [112]) = $6
	$7 = CALL db_find_i64($6, $6, (int_64)-8281824366442840064, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$30 }
	if ( ((int_32)*(CALL $50(($5 + [104]), $7) + [44]) == (int_32)($5 + [104])) ){ goto $label$31 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$31
	CALL eosio_assert([0], [8820])
	$9 = *(($5 + [132]))
	$8 = *(($5 + [128]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$30 }
	
.LOOP $label$33:
	$7 = ($9 + [-24])
	$10 = *($7)
	if ( ((int_64)*($10) == (int_64)$2) ){ goto $label$32 }
	$9 = $7
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$33 }
	goto $label$30 
	
.LABEL $label$32
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$30 }
	if ( ((int_32)*($10 + [44]) == (int_32)($5 + [104])) ){ goto $label$29 }
	CALL eosio_assert([0], [9528])
	goto $label$29 
	
.LABEL $label$30
	$7 = CALL db_find_i64(*($5 + [104]), *(($5 + [112])), (int_64)-8281824366442840064, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$28 }
	if ( ((int_32)*(CALL $50(($5 + [104]), $7) + [44]) == (int_32)($5 + [104])) ){ goto $label$29 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$29
	CALL eosio_assert([0], [8863])
	
.LABEL $label$28
	CALL require_auth(*($0))
	if ( CALL is_account($2) ){ goto $label$34 }
	CALL eosio_assert([0], [8903])
	
.LABEL $label$34
	$11 = *($3 + [8])
	*(($5 + [96])) = [0]
	$6 = (uint_64)$11 >> (uint_64)(int_64)8
	*($5 + [72]) = $6)
	*($5 + [80]) = (int_64)-1
	*($5 + [88]) = (int_64)0
	*($5 + [64]) = *($0)
	$10 = CALL $33(($5 + [64]), $6, [8929])
	CALL require_recipient($1)
	CALL require_recipient($2)
	$12 = *($3)
	if ( ((uint_64)((int_64)$12 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$41 }
	$7 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$13 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$44 }
	$6 = $13
	$9 = $7
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$42 }
	goto $label$43 
	
.LABEL $label$44
	$6 = $13
	
.LOOP $label$45:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$41 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $9 ){ goto $label$45 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$42 }
	
.LABEL $label$43
	if ( ((int_64)$12 <= (int_64)0) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$41
	CALL eosio_assert([0], [8581])
	if ( ((int_64)$12 > (int_64)0) ){ goto $label$39 }
	
.LABEL $label$40
	CALL eosio_assert([0], [8948])
	if ( ((int_64)$11 == (int_64)*($10 + [8])) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	if ( ((int_64)$11 != (int_64)*($10 + [8])) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ((*($4) & [1]) == 0) ){ goto $label$35 }
	goto $label$36 
	
.LABEL $label$37
	CALL eosio_assert([0], [8627])
	if ( ((*($4) & [1]) == 0) ){ goto $label$35 }
	
.LABEL $label$36
	if ( (*($4 + [4]) <= [257]) ){ goto $label$35 }
	CALL eosio_assert([0], [8492])
	
.LABEL $label$35
	CALL has_auth($2)
	$7 = ($3 + [8])
	$13 = *($7)
	*((($5 + [48]) + [8])) = $13
	$6 = *($3)
	*((($5 + [16]) + [8])) = $13
	*($5 + [16]) = $6
	*($5 + [48]) = $6
	CALL $34($0, $1, ($5 + [16]))
	$1 = *($7)
	*((($5 + [32]) + [8])) = $1
	$13 = *($0)
	$6 = *($3)
	*(($5 + [8])) = $1
	*($5 + [32]) = $6
	*($5) = $6
	CALL $35($0, $2, $5, $13)
	$8 = *($5 + [88])
	if ( ($8 == 0) ){ goto $label$46 }
	$0 = ($5 + [92])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$48 }
	
.LOOP $label$49:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$50 }
	CALL $9($9)
	
.LABEL $label$50
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$49 }
	$7 = *(($5 + [88]))
	goto $label$47 
	
.LABEL $label$48
	$7 = $8
	
.LABEL $label$47
	*($0) = $8
	CALL $9($7)
	
.LABEL $label$46
	$8 = *($5 + [128])
	if ( ($8 == 0) ){ goto $label$51 }
	$0 = ($5 + [132])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$53 }
	
.LOOP $label$54:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$55 }
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$56 }
	CALL $9(*(($9 + [40])))
	
.LABEL $label$56
	CALL $9($9)
	
.LABEL $label$55
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$54 }
	$7 = *(($5 + [128]))
	goto $label$52 
	
.LABEL $label$53
	$7 = $8
	
.LABEL $label$52
	*($0) = $8
	CALL $9($7)
	
.LABEL $label$51
	$global$0 = ($5 + [144])
}

void .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [128])
	$global$0 = $2
	*(($3 = (($2 + [48]) + [8]))) = *(($1 + [24]))
	*($2 + [48]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$6 = CALL $17(($2 + [32]), ($1 + [32]))
	$1 = CALL $17(($2 + [16]), ($1 + [44]))
	*((($2 + [64]) + [8])) = *($3)
	*($2 + [64]) = *($2 + [48])
	$0 = *($0 + [4])
	$7 = *($0 + [4])
	$3 = (*($0) + int_32($7 >> [1]))
	$0 = *($0)
	if ( (($7 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($8 = (($2 + [112]) + [8]))) = *((($2 + [64]) + [8]))
	*($2 + [112]) = *($2 + [64])
	$7 = CALL $17(($2 + [96]), $6)
	$9 = CALL $17(($2 + [80]), $1)
	*(($2 + [8])) = *($8)
	*($2) = *($2 + [112])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $7), (int_32 $9), (int_32 $0))
	if ( (*($2 + [80]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [96]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*($9 + [8]))
	if ( ((*($2 + [96]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*($7 + [8]))
	$0 = [1]
	if ( ((*($1) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$0 = [1]
	if ( (*($1) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($6) & $0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($1 + [8]))
	if ( ((*($6) & $0) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($6 + [8]))
	$global$0 = ($2 + [128])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [128])
}

void .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9659])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9659])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9659])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9659])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [24])) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $99(*($1), ($4 + [32]))
	CALL $99(*($1), ($4 + [44]))
	$global$0 = ($2 + [16])
}

void .FUNC $21 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $7(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $23 (int_32 $0)
{
}

int_64 .FUNC $22 ()
{
	int_64 $0
	if ( (*([0] + [8220]) == 0) ){ goto $label$1 }
	return *([0] + [8224])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8224]) = $0
	return $0
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9579])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $26(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $24 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [112])
	$global$0 = $4
	*($4 + [88]) = $1
	CALL require_auth($1)
	*(($4 + [80])) = [0]
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	$5 = *($0)
	*($4 + [48]) = $5
	*($4 + [56]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)-7950098247169605632, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $25(($4 + [48]), $6) + [16]) == (int_32)($4 + [48])) ){ goto $label$2 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$2
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	$5 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [48])) ){ goto $label$3 }
	CALL eosio_assert([0], [9602])
	
.LABEL $label$3
	*(($6 = CALL $7([32])) + [16]) = ($4 + [48])
	*($6 + [8]) = $2
	*($6) = *($4 + [88])
	CALL memcpy($4, $6, [8])
	CALL memcpy(($4 | [8]), ($6 + [8]), [8])
	$1 = *($6)
	$7 = CALL db_store_i64(*((($4 + [48]) + [8])), (int_64)-7950098247169605632, $5, $1, $4, [16])
	*($6 + [20]) = $7
	$8 = (($4 + [48]) + [16])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$4 }
	*($8) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($4 + [104]) = $6
	$1 = *($6)
	*($4) = $1
	*($4 + [100]) = $7
	$9 = ($4 + [76])
	$8 = *($9)
	if ( ((uint_32)$8 >= (uint_32)*((($4 + [48]) + [32]))) ){ goto $label$7 }
	*($8 + [8]) = $1
	*($8 + [16]) = $7
	*($4 + [104]) = [0]
	*($8) = $6
	*($9) = ($8 + [24])
	$8 = *($4 + [104])
	$6 = [0]
	*($4 + [104]) = [0]
	if ( $8 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $26(($4 + [72]), ($4 + [104]), $4, ($4 + [100]))
	$8 = *($4 + [104])
	$6 = [0]
	*($4 + [104]) = [0]
	if ( ($8 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9($8)
	
.LABEL $label$5
	*(($4 + [32])) = $6
	*($4 + [16]) = (int_64)-1
	*($4 + [24]) = (int_64)0
	$1 = *($0)
	*($4) = $1
	*($4 + [8]) = $2
	$8 = CALL db_find_i64($1, $2, (int_64)-3663382948557619200, $2)
	if ( ((int_32)$8 < (int_32)$6) ){ goto $label$9 }
	$6 = CALL $27($4, $8)
	if ( ((int_32)*($6 + [72]) == (int_32)$4) ){ goto $label$10 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$10
	$2 = *($0)
	*($4 + [104]) = ($4 + [88])
	goto $label$8 
	
.LABEL $label$9
	$2 = *($0)
	*($4 + [104]) = ($4 + [88])
	$6 = [0]
	CALL eosio_assert([0], [9664])
	
.LABEL $label$8
	CALL $28($4, $6, $2, ($4 + [104]))
	$8 = *($4 + [24])
	if ( ($8 == 0) ){ goto $label$11 }
	$7 = ($4 + [28])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	CALL $9($0)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	$6 = *(($4 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $8
	
.LABEL $label$12
	*($7) = $8
	CALL $9($6)
	
.LABEL $label$11
	$8 = *($4 + [72])
	if ( ($8 == 0) ){ goto $label$16 }
	$7 = ($4 + [76])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$18 }
	
.LOOP $label$19:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$20 }
	CALL $9($0)
	
.LABEL $label$20
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$19 }
	$6 = *(($4 + [72]))
	goto $label$17 
	
.LABEL $label$18
	$6 = $8
	
.LABEL $label$17
	*($7) = $8
	CALL $9($6)
	
.LABEL $label$16
	$global$0 = ($4 + [112])
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9579])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([88])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [72]) = $0
	CALL $127(($3 + [32]), $5)
	*($5 + [76]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $68(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $26 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $21($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [8])
	$4 = *($1)
	$1 = CALL $17($2, ($1 + [16]))
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$6 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($6) + $0))
	
.LABEL $label$1
	$5 = CALL $17(($2 + [16]), $1)
	CALL void $6((int_32 $4), (int_64 $3), (int_64 $5), (int_32 $0))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($5 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

int_32 .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9653])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9653])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $69 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL require_auth(*($0))
	$5 = [0]
	*(($4 + [160])) = [0]
	*($4 + [136]) = $2
	*($4 + [144]) = (int_64)-1
	*($4 + [152]) = (int_64)0
	$6 = *($0)
	*($4 + [128]) = $6
	$7 = CALL db_find_i64($6, $2, (int_64)-3663382948557619200, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $27(($4 + [128]), $7)
	if ( ((int_32)*($5 + [72]) == (int_32)($4 + [128])) ){ goto $label$1 }
	CALL eosio_assert([0], [9528])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8903])
	
.LABEL $label$1
	$7 = [0]
	*(($4 + [120])) = [0]
	*($4 + [104]) = (int_64)-1
	*($4 + [112]) = (int_64)0
	$6 = *($0)
	*($4 + [88]) = $6
	*($4 + [96]) = $1
	$8 = CALL db_find_i64($6, $1, (int_64)-3663382948557619200, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$7 = CALL $27(($4 + [88]), $8)
	if ( ((int_32)*($7 + [72]) == (int_32)($4 + [88])) ){ goto $label$3 }
	CALL eosio_assert([0], [9528])
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [9167])
	
.LABEL $label$3
	$8 = [0]
	*(($4 + [80])) = [0]
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	$6 = *($0)
	*($4 + [48]) = $6
	*($4 + [56]) = $1
	$9 = CALL db_find_i64($6, $1, (int_64)-4157660949894922240, $2)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $70(($4 + [48]), $9)
	if ( ((int_32)*($8 + [28]) == (int_32)($4 + [48])) ){ goto $label$5 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$5
	$1 = *($7 + [8])
	if ( (int_64)($1 == 0) ){ goto $label$7 }
	*((($4 + [16]) + [8])) = [0]
	*((($4 + [32]) + [8])) = *(($3 + [8]))
	*($4 + [16]) = (int_64)0
	*($4 + [32]) = *($3)
	$7 = CALL $15([9195])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$10 }
	*($4 + [16]) = ($7 << [1])
	$9 = (($4 + [16]) | [1])
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$10 = (($7 + [16]) & [-16])
	$9 = CALL $7($10)
	*($4 + [16]) = ($10 | [1])
	*($4 + [24]) = $9
	*($4 + [20]) = $7
	
.LABEL $label$9
	CALL memcpy($9, [9195], $7)
	
.LABEL $label$8
	*(($9 + $7)) = [0]
	*(($4 + [8])) = *((($4 + [32]) + [8]))
	*($4) = *($4 + [32])
	CALL $30($0, $1, (int_64)-3917941655439857408, $4, ($4 + [16]))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*($4 + [24]))
	
.LABEL $label$7
	$1 = *($0)
	*($4 + [176]) = $3
	if ( $5 ){ goto $label$11 }
	CALL eosio_assert([0], [9664])
	
.LABEL $label$11
	CALL $71(($4 + [128]), $5, $1, ($4 + [176]))
	$1 = *($0)
	if ( ($8 == 0) ){ goto $label$14 }
	*($4 + [176]) = $3
	CALL $72(($4 + [48]), $8, $1, ($4 + [176]))
	$7 = *($4 + [72])
	if ( $7 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [48])) ){ goto $label$15 }
	CALL eosio_assert([0], [9602])
	
.LABEL $label$15
	*(($0 = CALL $7([40]))) = (int_64)0
	*($0 + [28]) = ($4 + [48])
	*(($0 + [16])) = *(($3 + [8]))
	*($0 + [8]) = *($3)
	$6 = CALL $22()
	*($0) = $2
	*($0 + [24]) = ((int_64)$6 / (int_64)1000000)
	*($4 + [216]) = (($4 + [176]) + [28])
	*($4 + [212]) = ($4 + [176])
	*($4 + [208]) = ($4 + [176])
	CALL $73(($4 + [208]), $0)
	$2 = *($0)
	$7 = CALL db_store_i64(*((($4 + [48]) + [8])), (int_64)-4157660949894922240, $1, $2, ($4 + [176]), [28])
	*($0 + [32]) = $7
	$3 = (($4 + [48]) + [16])
	if ( (uint_64)($2 <= *($3)) ){ goto $label$16 }
	*($3) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	*($4 + [208]) = $0
	$1 = *($0)
	*($4 + [176]) = $1
	*($4 + [172]) = $7
	$3 = *((($4 + [48]) + [28]))
	if ( ((uint_32)$3 >= (uint_32)*(($4 + [80]))) ){ goto $label$19 }
	*($3 + [8]) = $1
	*($3 + [16]) = $7
	*($4 + [208]) = [0]
	*($3) = $0
	*(($4 + [76])) = ($3 + [24])
	$0 = *($4 + [208])
	*($4 + [208]) = [0]
	if ( $0 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $74(($4 + [72]), ($4 + [208]), ($4 + [176]), ($4 + [172]))
	$0 = *($4 + [208])
	*($4 + [208]) = [0]
	if ( ($0 == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL $9($0)
	
.LABEL $label$17
	$7 = *($4 + [72])
	if ( ($7 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$5 = ($4 + [76])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$21 }
	
.LOOP $label$22:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$23 }
	CALL $9($3)
	
.LABEL $label$23
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$22 }
	$0 = *(($4 + [72]))
	goto $label$20 
	
.LABEL $label$21
	$0 = $7
	
.LABEL $label$20
	*($5) = $7
	CALL $9($0)
	
.LABEL $label$12
	$7 = *($4 + [112])
	if ( ($7 == 0) ){ goto $label$24 }
	$5 = ($4 + [116])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$26 }
	
.LOOP $label$27:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$28 }
	CALL $9($3)
	
.LABEL $label$28
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$27 }
	$0 = *(($4 + [112]))
	goto $label$25 
	
.LABEL $label$26
	$0 = $7
	
.LABEL $label$25
	*($5) = $7
	CALL $9($0)
	
.LABEL $label$24
	$7 = *($4 + [152])
	if ( ($7 == 0) ){ goto $label$29 }
	$5 = ($4 + [156])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$31 }
	
.LOOP $label$32:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$33 }
	CALL $9($3)
	
.LABEL $label$33
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$32 }
	$0 = *(($4 + [152]))
	goto $label$30 
	
.LABEL $label$31
	$0 = $7
	
.LABEL $label$30
	*($5) = $7
	CALL $9($0)
	
.LABEL $label$29
	$global$0 = ($4 + [224])
	return (unreachable)
	
.LABEL $label$6
	CALL $16(($4 + [16]))
}

void .FUNC $68 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $21($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9659])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9659])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $99(*($1), ($4 + [16]))
}

void .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10005])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10050])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10100])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $64 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [72]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9699])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9745])
	
.LABEL $label$2
	*($1 + [64]) = (int_64)0
	*($1 + [8]) = (int_64)0
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-80])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($6 + [-8])
	CALL $128($4, $1)
	CALL db_update_i64(*($1 + [76]), $2, $3, [72])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [16])
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	*($1) = *(*(*($0 + [4])))
	$4 = *($0)
	$5 = (int_64)0
	*($1 + [8]) = (int_64)0
	$6 = CALL $15([9855])
	if ( ($6 <= [8]) ){ goto $label$3 }
	CALL eosio_assert([0], [9381])
	goto $label$2 
	
.LABEL $label$3
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = (int_64)0
	
.LOOP $label$4:
	$7 = *(($6 + [9854]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$5 }
	CALL eosio_assert([0], [9426])
	
.LABEL $label$5
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$4 }
	
.LABEL $label$1
	$8 = ((int_64)$5 & (int_64)72057594037927935)
	$9 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)4)
	$6 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$5 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$8 = $5
	$7 = $6
	$6 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$8 = $5
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $7 ){ goto $label$10 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8396])
	
.LABEL $label$6
	$5 = (int_64)0
	*($1 + [16]) = (int_64)0
	*(($1 + [24])) = $9
	$6 = CALL $15([8349])
	if ( ($6 <= [8]) ){ goto $label$13 }
	CALL eosio_assert([0], [9381])
	goto $label$12 
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$5 = (int_64)0
	
.LOOP $label$14:
	$7 = *(($6 + [8348]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$15 }
	CALL eosio_assert([0], [9426])
	
.LABEL $label$15
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$14 }
	
.LABEL $label$11
	$8 = ((int_64)$5 & (int_64)72057594037927935)
	$9 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)4)
	$6 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$5 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$8 = $5
	$7 = $6
	$6 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$8 = $5
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $7 ){ goto $label$20 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [8396])
	
.LABEL $label$16
	$5 = (int_64)0
	*($1 + [32]) = (int_64)0
	*(($1 + [40])) = $9
	$6 = CALL $15([10153])
	if ( ($6 <= [8]) ){ goto $label$23 }
	CALL eosio_assert([0], [9381])
	goto $label$22 
	
.LABEL $label$23
	if ( ($6 == 0) ){ goto $label$21 }
	
.LABEL $label$22
	$5 = (int_64)0
	
.LOOP $label$24:
	$7 = *(($6 + [10152]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$25 }
	CALL eosio_assert([0], [9426])
	
.LABEL $label$25
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$24 }
	
.LABEL $label$21
	$8 = ((int_64)$5 & (int_64)72057594037927935)
	$9 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)4)
	$6 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$5 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$29 }
	$8 = $5
	$7 = $6
	$6 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$29
	$8 = $5
	
.LOOP $label$30:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$27 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $7 ){ goto $label$30 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	CALL eosio_assert([0], [8396])
	
.LABEL $label$26
	*($1 + [48]) = (int_64)0
	*($1 + [64]) = (int_64)0
	*(($1 + [56])) = $9
	$7 = $2
	$6 = ($7 + [-80])
	$global$0 = $6
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = ($7 + [-8])
	CALL $128($3, $1)
	$8 = *($1)
	*($1 + [76]) = CALL db_store_i64(*($4 + [8]), (int_64)-3663382948557619200, *(*($0 + [8])), $8, $6, [72])
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$31 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$31
	$global$0 = ($3 + [16])
}

void .FUNC $66 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	*($2 + [48]) = $1
	CALL require_auth(*($0))
	*(($2 + [40])) = [0]
	*($2 + [16]) = $1
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$3 = *($0)
	*($2 + [8]) = $3
	$4 = CALL db_find_i64($3, $1, (int_64)-3663382948557619200, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $27(($2 + [8]), $4) + [72]) == (int_32)($2 + [8])) ){ goto $label$2 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$2
	CALL eosio_assert([0], [9145])
	
.LABEL $label$1
	$1 = *($0)
	*($2) = ($2 + [48])
	*($2 + [88]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($2 + [8])) ){ goto $label$3 }
	CALL eosio_assert([0], [9602])
	
.LABEL $label$3
	*($2 + [68]) = $2
	*($2 + [64]) = ($2 + [8])
	*($2 + [72]) = ($2 + [88])
	*(($0 = CALL $7([88])) + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [24]) = (int_64)0
	*($0 + [32]) = (int_64)0
	*($0 + [40]) = (int_64)0
	*($0 + [48]) = (int_64)0
	*($0 + [56]) = (int_64)0
	*($0 + [72]) = ($2 + [8])
	CALL $67(($2 + [64]), $0)
	*($2 + [80]) = $0
	$1 = *($0)
	*($2 + [64]) = $1
	$5 = *($0 + [76])
	*($2 + [60]) = $5
	$6 = ($2 + [36])
	$4 = *($6)
	if ( ((uint_32)$4 >= (uint_32)*(($2 + [40]))) ){ goto $label$6 }
	*($4 + [8]) = $1
	*($4 + [16]) = $5
	*($2 + [80]) = [0]
	*($4) = $0
	*($6) = ($4 + [24])
	$0 = *($2 + [80])
	*($2 + [80]) = [0]
	if ( $0 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $68(($2 + [32]), ($2 + [80]), ($2 + [64]), ($2 + [60]))
	$0 = *($2 + [80])
	*($2 + [80]) = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9($0)
	
.LABEL $label$4
	$5 = *($2 + [32])
	if ( ($5 == 0) ){ goto $label$7 }
	$6 = ($2 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $9($4)
	
.LABEL $label$11
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($2 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $5
	
.LABEL $label$8
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$7
	$global$0 = ($2 + [96])
}

void .FUNC $61 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	if ( CALL is_account($1) ){ goto $label$1 }
	CALL eosio_assert([0], [9049])
	
.LABEL $label$1
	CALL require_auth(*($0))
	$3 = [0]
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	$4 = *($0)
	*($2) = $4
	*($2 + [8]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)-8281824366442840064, $1)
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$3 }
	$3 = CALL $50($2, $0)
	if ( ((int_32)*($3 + [44]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [9528])
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [9079])
	CALL eosio_assert([0], [9941])
	CALL eosio_assert([0], [9975])
	
.LABEL $label$2
	$0 = CALL db_next_i64(*($3 + [48]), ($2 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	CALL $50($2, $0)
	
.LABEL $label$4
	CALL $62($2, $3)
	$5 = *($2 + [24])
	if ( ($5 == 0) ){ goto $label$5 }
	$6 = ($2 + [28])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	if ( ((*($0 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($0 + [40])))
	
.LABEL $label$10
	CALL $9($0)
	
.LABEL $label$9
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$8 }
	$3 = *(($2 + [24]))
	goto $label$6 
	
.LABEL $label$7
	$3 = $5
	
.LABEL $label$6
	*($6) = $5
	CALL $9($3)
	
.LABEL $label$5
	$global$0 = ($2 + [48])
}

void .FUNC $60 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $21($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [40])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $9($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $63 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = [0]
	*(($2 + [80])) = [0]
	*($2 + [64]) = (int_64)-1
	*($2 + [72]) = (int_64)0
	$4 = *($0)
	*($2 + [48]) = $4
	*($2 + [56]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-7950098247169605632, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$3 = CALL $25(($2 + [48]), $5)
	if ( ((int_32)*($3 + [16]) == (int_32)($2 + [48])) ){ goto $label$1 }
	CALL eosio_assert([0], [9528])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9127])
	
.LABEL $label$1
	$4 = *($3 + [8])
	*(($2 + [40])) = [0]
	*($2 + [16]) = $4
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$1 = *($0)
	*($2 + [8]) = $1
	$5 = CALL db_find_i64($1, $4, (int_64)-3663382948557619200, $4)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $27(($2 + [8]), $5)
	if ( ((int_32)*($5 + [72]) == (int_32)($2 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$4
	CALL $64(($2 + [8]), $5, *($0))
	
.LABEL $label$3
	if ( $3 ){ goto $label$5 }
	CALL eosio_assert([0], [9941])
	CALL eosio_assert([0], [9975])
	
.LABEL $label$5
	$0 = CALL db_next_i64(*($3 + [20]), ($2 + [88]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	CALL $25(($2 + [48]), $0)
	
.LABEL $label$6
	CALL $65(($2 + [48]), $3)
	$5 = *($2 + [32])
	if ( ($5 == 0) ){ goto $label$7 }
	$6 = ($2 + [36])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $9($0)
	
.LABEL $label$11
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$10 }
	$3 = *(($2 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$3 = $5
	
.LABEL $label$8
	*($6) = $5
	CALL $9($3)
	
.LABEL $label$7
	$5 = *($2 + [72])
	if ( ($5 == 0) ){ goto $label$12 }
	$6 = ($2 + [76])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$16 }
	CALL $9($0)
	
.LABEL $label$16
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$15 }
	$3 = *(($2 + [72]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $5
	
.LABEL $label$13
	*($6) = $5
	CALL $9($3)
	
.LABEL $label$12
	$global$0 = ($2 + [96])
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10005])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10050])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10100])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($5 + [40])))
	
.LABEL $label$13
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($8 + [40])))
	
.LABEL $label$16
	CALL $9($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [48]))
}

void .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9659])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9659])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9659])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9659])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $99(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [16]))
	*($2 + [32]) = *($1 + [8])
	$4 = *($1)
	$1 = CALL $17(($2 + [16]), ($1 + [24]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$3 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($6 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$5 = CALL $17(($2 + [64]), $1)
	*(($2 + [8])) = *($6)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $4), (int_64 $2), (int_32 $5), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($5 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9659])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [9659])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	CALL $99(*($1), ($4 + [12]))
}

void .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $17(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $17(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9659])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9659])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [16])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9659])
	$4 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($1 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9659])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [24])) = *($2 + [8])
	*($4) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [8])
	$4 = *($1)
	$1 = CALL $17($2, ($1 + [12]))
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$6 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($6) + $0))
	
.LABEL $label$1
	$5 = CALL $17(($2 + [16]), $1)
	CALL void $6((int_32 $4), (int_64 $3), (int_32 $5), (int_32 $0))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($5 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

int_32 .FUNC $89 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	
.LABEL $label$5
	CALL memcpy(($4 + [40]), $2, [8])
	*(($4 + [28])) = ($2 + [8])
	*(($4 + [32])) = $3
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($4 + [40])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
	return [1]
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [256])
	$global$0 = $3
	CALL $0()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$1 }
	if ( ((int_64)$2 > (int_64)-3102536759825661953) ){ goto $label$16 }
	if ( ((int_64)$2 > (int_64)-4157661383434960897) ){ goto $label$15 }
	if ( ((int_64)$2 > (int_64)-5920734475137843201) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)-8281838239757631488) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)-7297973096368160768) ){ goto $label$1 }
	*($3 + [204]) = [0]
	*($3 + [200]) = [1]
	*($3 + [48]) = *($3 + [200])
	CALL $89($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$16
	if ( ((int_64)$2 > (int_64)5031766152489992191) ){ goto $label$14 }
	if ( ((int_64)$2 > (int_64)4849591919174483967) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)-3102536759825661952) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)-3075276112956227584) ){ goto $label$1 }
	*($3 + [172]) = [0]
	*($3 + [168]) = [2]
	*($3 + [80]) = *($3 + [168])
	CALL $90($1, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$15
	if ( ((int_64)$2 > (int_64)-3617168760276779009) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)-4157661383434960896) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	*($3 + [236]) = [0]
	*($3 + [232]) = [3]
	*($3 + [16]) = *($3 + [232])
	CALL $91($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$14
	if ( ((int_64)$2 > (int_64)7185106177376649215) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)5031766152489992192) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)5377971004819521536) ){ goto $label$1 }
	*($3 + [140]) = [0]
	*($3 + [136]) = [4]
	*($3 + [112]) = *($3 + [136])
	CALL $89($1, $1, ($3 + [112]))
	goto $label$1 
	
.LABEL $label$13
	if ( ((int_64)$2 == (int_64)-5920734475137843200) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-5001342339331915776) ){ goto $label$1 }
	*($3 + [180]) = [0]
	*($3 + [176]) = [5]
	*($3 + [72]) = *($3 + [176])
	CALL $92($1, $1, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$12
	if ( ((int_64)$2 == (int_64)4849591919174483968) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)4851652266525982720) ){ goto $label$1 }
	*($3 + [148]) = [0]
	*($3 + [144]) = [6]
	*($3 + [104]) = *($3 + [144])
	CALL $93($1, $1, ($3 + [104]))
	goto $label$1 
	
.LABEL $label$11
	if ( ((int_64)$2 == (int_64)-3617168760276779008) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-3106564276286914560) ){ goto $label$1 }
	*($3 + [212]) = [0]
	*($3 + [208]) = [7]
	*($3 + [40]) = *($3 + [208])
	CALL $89($1, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$10
	if ( ((int_64)$2 == (int_64)7185106177376649216) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)8516769789752901632) ){ goto $label$1 }
	*($3 + [244]) = [0]
	*($3 + [240]) = [8]
	*($3 + [8]) = *($3 + [240])
	CALL $94($1, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [220]) = [0]
	*($3 + [216]) = [9]
	*($3 + [32]) = *($3 + [216])
	CALL $95($1, $1, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [188]) = [0]
	*($3 + [184]) = [10]
	*($3 + [64]) = *($3 + [184])
	CALL $96($1, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [196]) = [0]
	*($3 + [192]) = [11]
	*($3 + [56]) = *($3 + [192])
	CALL $96($1, $1, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [252]) = [0]
	*($3 + [248]) = [12]
	*($3) = *($3 + [248])
	CALL $90($1, $1, $3)
	goto $label$1 
	
.LABEL $label$5
	*($3 + [156]) = [0]
	*($3 + [152]) = [13]
	*($3 + [96]) = *($3 + [152])
	CALL $93($1, $1, ($3 + [96]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [132]) = [0]
	*($3 + [128]) = [14]
	*($3 + [120]) = *($3 + [128])
	CALL $90($1, $1, ($3 + [120]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [228]) = [0]
	*($3 + [224]) = [15]
	*($3 + [24]) = *($3 + [224])
	CALL $91($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$2
	*($3 + [164]) = [0]
	*($3 + [160]) = [16]
	*($3 + [88]) = *($3 + [160])
	CALL $97($1, $1, ($3 + [88]))
	
.LABEL $label$1
	CALL $23([0])
	$global$0 = ($3 + [256])
}

void .FUNC $87 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5)
{
	CALL require_auth(*($0))
}

void .FUNC $86 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [72]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9699])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9745])
	
.LABEL $label$2
	$3 = *($3)
	*($1 + [16]) = *($3)
	*(($1 + [24])) = *(($3 + [8]))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-80])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $128($5, $1)
	CALL db_update_i64(*($1 + [76]), $2, $4, [72])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

void .FUNC $85 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$5 = *($0)
	*($3 + [8]) = $5
	*($3 + [16]) = $1
	$6 = CALL db_find_i64($5, $1, (int_64)-3663382948557619200, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $27(($3 + [8]), $6)
	if ( ((int_32)*($4 + [72]) == (int_32)($3 + [8])) ){ goto $label$3 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$3
	$1 = *($0)
	*($3) = $2
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9316])
	$1 = *($0)
	*($3) = $2
	CALL eosio_assert([0], [9664])
	
.LABEL $label$1
	CALL $86(($3 + [8]), $4, $1, $3)
	$2 = *($3 + [32])
	if ( ($2 == 0) ){ goto $label$4 }
	$6 = ($3 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $9($4)
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($3 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $2
	
.LABEL $label$5
	*($6) = $2
	CALL $9($0)
	
.LABEL $label$4
	$global$0 = ($3 + [48])
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10005])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10050])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10100])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [32]))
}

void .FUNC $83 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [144])
	$global$0 = $3
	CALL require_auth(*($0))
	*((($3 + [96]) + [32])) = [0]
	*($3 + [104]) = $1
	*($3 + [112]) = (int_64)-1
	*($3 + [120]) = (int_64)0
	$4 = *($0)
	*($3 + [96]) = $4
	$5 = [0]
	$6 = CALL db_find_i64($4, $1, (int_64)-3102536759402283008, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $79(($3 + [96]), $6)
	if ( ((int_32)*($5 + [28]) == (int_32)($3 + [96])) ){ goto $label$1 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$1
	*((($3 + [56]) + [32])) = [0]
	*($3 + [72]) = (int_64)-1
	*($3 + [80]) = (int_64)0
	$2 = *($0)
	*($3 + [56]) = $2
	*($3 + [64]) = $1
	$6 = CALL $27(($3 + [56]), CALL $fimport$1($2, $1, (int_64)-3663382948557619200, $1))
	if ( ((int_32)*($6 + [72]) == (int_32)($3 + [56])) ){ goto $label$2 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$2
	$1 = *($6 + [8])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$9 }
	$2 = *($5 + [8])
	*((($3 + [24]) + [8])) = [0]
	*((($3 + [40]) + [8])) = *(($5 + [16]))
	*($3 + [24]) = (int_64)0
	*($3 + [40]) = $2
	$6 = CALL $15([9309])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$8 }
	*($3 + [24]) = ($6 << [1])
	$7 = (($3 + [24]) | [1])
	if ( $6 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	CALL eosio_assert([0], [9267])
	if ( $5 ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$8
	$8 = (($6 + [16]) & [-16])
	$7 = CALL $7($8)
	*($3 + [24]) = ($8 | [1])
	*($3 + [32]) = $7
	*($3 + [28]) = $6
	
.LABEL $label$7
	CALL memcpy($7, [9309], $6)
	
.LABEL $label$6
	*(($7 + $6)) = [0]
	*((($3 + [8]) + [8])) = *((($3 + [40]) + [8]))
	*($3 + [8]) = *($3 + [40])
	CALL $30($0, (int_64)-3917941655439857408, $1, ($3 + [8]), ($3 + [24]))
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*($3 + [32]))
	
.LABEL $label$10
	if ( $5 ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9941])
	CALL eosio_assert([0], [9975])
	
.LABEL $label$4
	$0 = CALL db_next_i64(*($5 + [32]), ($3 + [136]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$11 }
	CALL $79(($3 + [96]), $0)
	
.LABEL $label$11
	CALL $84(($3 + [96]), $5)
	$6 = *($3 + [80])
	if ( ($6 == 0) ){ goto $label$12 }
	$7 = ($3 + [84])
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$14 }
	
.LOOP $label$15:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$16 }
	CALL $9($0)
	
.LABEL $label$16
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$15 }
	$5 = *(($3 + [80]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $6
	
.LABEL $label$13
	*($7) = $6
	CALL $9($5)
	
.LABEL $label$12
	$6 = *($3 + [120])
	if ( ($6 == 0) ){ goto $label$17 }
	$7 = ($3 + [124])
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$19 }
	
.LOOP $label$20:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$21 }
	CALL $9($0)
	
.LABEL $label$21
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$20 }
	$5 = *(($3 + [120]))
	goto $label$18 
	
.LABEL $label$19
	$5 = $6
	
.LABEL $label$18
	*($7) = $6
	CALL $9($5)
	
.LABEL $label$17
	$global$0 = ($3 + [144])
	return (unreachable)
	
.LABEL $label$3
	CALL $16(($3 + [24]))
}

void .FUNC $82 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $21($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9653])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9653])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9653])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [24])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9653])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $1, [4])
	*($3) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $80 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9699])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9745])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9861])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9904])
	$7 = *(($1 + [8]))
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9923])
	
.LABEL $label$5
	*($1 + [24]) = ((int_64)CALL $22() / (int_64)1000000)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [9796])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-4])
	CALL $81($5, $1)
	CALL db_update_i64(*($1 + [32]), $2, $4, [28])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $72 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9699])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9745])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9861])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9904])
	$7 = *(($1 + [8]))
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9923])
	
.LABEL $label$5
	*($1 + [24]) = ((int_64)CALL $22() / (int_64)1000000)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [9796])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-4])
	CALL $73($5, $1)
	CALL db_update_i64(*($1 + [32]), $2, $4, [28])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9653])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9653])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9653])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [24])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9653])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $1, [4])
	*($3) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9579])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [28]) = $0
	CALL $138(($3 + [32]), $5)
	*($5 + [32]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $74(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $71 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [72]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9699])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9745])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9861])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [32]) + (int_64)*($3))
	*($1 + [32]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [9904])
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [9923])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9796])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-80])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $128($5, $1)
	CALL db_update_i64(*($1 + [76]), $2, $4, [72])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [16])
}

void .FUNC $76 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9699])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9745])
	
.LABEL $label$2
	*($1 + [8]) = (int_64))(*($1 + [8]) - *(*($3)))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-4])
	CALL $73($5, $1)
	CALL db_update_i64(*($1 + [32]), $2, $4, [28])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10005])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10050])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10100])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [32]))
}

void .FUNC $74 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $21($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $39 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $21($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $36 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [128])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	$5 = *($2 + [8])
	$6 = (uint_64)$5 >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$7 = $8
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$4 < (int_32)[6])
	$10 = ($4 + [1])
	$4 = $10
	if ( $9 ){ goto $label$5 }
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8396])
	
.LABEL $label$1
	$11 = *($2)
	if ( ((uint_64)((int_64)$11 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$4 = [0]
	$7 = $6
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$7 = $8
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$7 = $8
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$4 < (int_32)[6])
	$10 = ($4 + [1])
	$4 = $10
	if ( $9 ){ goto $label$10 }
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8416])
	
.LABEL $label$6
	if ( ((int_64)$11 > (int_64)0) ){ goto $label$11 }
	CALL eosio_assert([0], [8431])
	
.LABEL $label$11
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$7 = *($0)
	*($3 + [8]) = $7
	*($3 + [16]) = $6
	$4 = CALL db_find_i64($7, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	if ( ((int_32)*(CALL $37(($3 + [8]), $4) + [40]) == (int_32)($3 + [8])) ){ goto $label$13 }
	CALL eosio_assert([0], [9528])
	
.LABEL $label$13
	CALL eosio_assert([0], [8459])
	
.LABEL $label$12
	$8 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [8])) ){ goto $label$14 }
	CALL eosio_assert([0], [9602])
	
.LABEL $label$14
	*(($4 = CALL $7([56]))) = (int_64)0
	*($4 + [40]) = ($3 + [8])
	*($4 + [8]) = $5
	*($4 + [32]) = $1
	*($4 + [16]) = *($2)
	*(($4 + [24])) = *(($2 + [8]))
	*($3 + [96]) = (($3 + [48]) + [40])
	*($3 + [92]) = ($3 + [48])
	*($3 + [88]) = ($3 + [48])
	*($3 + [104]) = ($3 + [88])
	*($3 + [116]) = ($4 + [16])
	*($3 + [112]) = $4
	*($3 + [120]) = ($4 + [32])
	CALL $38(($3 + [112]), ($3 + [104]))
	$7 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	$10 = CALL db_store_i64(*((($3 + [8]) + [8])), (int_64)-4157508551318700032, $8, $7), ($3 + [48]), [40]
	*($4 + [44]) = $10)
	$9 = (($3 + [8]) + [16])
	if ( (uint_64)($7 <= *($9)) ){ goto $label$15 }
	*($9) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	*($3 + [112]) = $4
	$7 = (uint_64)*(($4 + [8])) >> (uint_64)(int_64)8
	*($3 + [48]) = $7)
	*($3 + [88]) = $10
	$2 = ($3 + [36])
	$9 = *($2)
	if ( ((uint_32)$9 >= (uint_32)*((($3 + [8]) + [32]))) ){ goto $label$18 }
	*($9 + [8]) = $7
	*($9 + [16]) = $10
	*($3 + [112]) = [0]
	*($9) = $4
	*($2) = ($9 + [24])
	$4 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( $4 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $39(($3 + [32]), ($3 + [112]), ($3 + [48]), ($3 + [88]))
	$4 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $9($4)
	
.LABEL $label$16
	$10 = *($3 + [32])
	if ( ($10 == 0) ){ goto $label$19 }
	$2 = ($3 + [36])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$10) ){ goto $label$21 }
	
.LOOP $label$22:
	$4 = ($4 + [-24])
	$9 = *($4)
	*($4) = [0]
	if ( ($9 == 0) ){ goto $label$23 }
	CALL $9($9)
	
.LABEL $label$23
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$22 }
	$4 = *(($3 + [32]))
	goto $label$20 
	
.LABEL $label$21
	$4 = $10
	
.LABEL $label$20
	*($2) = $10
	CALL $9($4)
	
.LABEL $label$19
	$global$0 = ($3 + [128])
}

int_32 .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9579])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [32])
	CALL $129(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $39(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $78 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [72]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9699])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9745])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10157])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [32]) = $7(*($1 + [32]) - *($3)))
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10205])
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10227])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9796])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-80])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $128($5, $1)
	CALL db_update_i64(*($1 + [76]), $2, $4, [72])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [16])
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9579])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [28]) = $0
	CALL $139(($3 + [32]), $5)
	*($5 + [32]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $82(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $32 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [72]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9699])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9745])
	
.LABEL $label$2
	*($1 + [64]) = (int_64)2
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-80])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($6 + [-8])
	CALL $128($4, $1)
	CALL db_update_i64(*($1 + [76]), $2, $3, [72])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [16])
}

int_32 .FUNC $33 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9528])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $37($0, $5)
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9528])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $30 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$5 = ($global$0 - [112])
	$global$0 = $5
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [8687])
	
.LABEL $label$1
	if ( CALL is_account($2) ){ goto $label$2 }
	CALL eosio_assert([0], [8903])
	
.LABEL $label$2
	$6 = *($3 + [8])
	*(($5 + [104])) = [0]
	$7 = (uint_64)$6 >> (uint_64)(int_64)8
	*($5 + [80]) = $7)
	*($5 + [88]) = (int_64)-1
	*($5 + [96]) = (int_64)0
	*($5 + [72]) = *($0)
	$8 = CALL $33(($5 + [72]), $7, [8929])
	$9 = *($3)
	if ( ((uint_64)((int_64)$9 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$4 }
	$10 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$11 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$7 = $11
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	$7 = $11
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$12 = ((int_32)$10 < (int_32)[6])
	$13 = ($10 + [1])
	$10 = $13
	if ( $12 ){ goto $label$7 }
	$10 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [8581])
	
.LABEL $label$3
	if ( ((int_64)$9 <= (int_64)0) ){ goto $label$12 }
	if ( ((int_64)$6 != (int_64)*($8 + [8])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL eosio_assert([0], [8948])
	if ( ((int_64)$6 == (int_64)*($8 + [8])) ){ goto $label$10 }
	
.LABEL $label$11
	CALL eosio_assert([0], [8627])
	if ( (*($4) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	if ( ((*($4) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	if ( (*($4 + [4]) <= [257]) ){ goto $label$8 }
	CALL eosio_assert([0], [8492])
	
.LABEL $label$8
	$10 = ($3 + [8])
	$11 = *($10)
	*((($5 + [56]) + [8])) = $11
	$7 = *($3)
	*((($5 + [24]) + [8])) = $11
	*($5 + [56]) = $7
	*($5 + [24]) = $7
	CALL $34($0, $1, ($5 + [24]))
	$11 = *($10)
	*((($5 + [40]) + [8])) = $11
	$1 = *($0)
	$7 = *($3)
	*((($5 + [8]) + [8])) = $11
	*($5 + [40]) = $7
	*($5 + [8]) = $7
	CALL $35($0, $2, ($5 + [8]), $1)
	$13 = *($5 + [96])
	if ( ($13 == 0) ){ goto $label$13 }
	$3 = ($5 + [100])
	$10 = *($3)
	if ( ((int_32)$10 == (int_32)$13) ){ goto $label$15 }
	
.LOOP $label$16:
	$10 = ($10 + [-24])
	$12 = *($10)
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$17 }
	CALL $9($12)
	
.LABEL $label$17
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$16 }
	$10 = *(($5 + [96]))
	goto $label$14 
	
.LABEL $label$15
	$10 = $13
	
.LABEL $label$14
	*($3) = $13
	CALL $9($10)
	
.LABEL $label$13
	$global$0 = ($5 + [112])
}

void .FUNC $31 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [72]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9699])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9745])
	
.LABEL $label$2
	$5 = *($1)
	$6 = CALL $15([9855])
	if ( ($6 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9381])
	goto $label$5 
	
.LABEL $label$6
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = (int_64)0
	
.LOOP $label$7:
	$8 = *(($6 + [9854]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [9426])
	
.LABEL $label$8
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$7 = (int_64)0
	
.LABEL $label$3
	$9 = ((int_64)$7 & (int_64)72057594037927935)
	$10 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	$6 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$9 = $7
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$9 = $7
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $8 ){ goto $label$13 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert([0], [8396])
	
.LABEL $label$9
	*($1 + [16]) = (int_64)0
	*(($1 + [24])) = $10
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$14 }
	CALL eosio_assert([0], [9796])
	
.LABEL $label$14
	$8 = $3
	$6 = ($8 + [-80])
	$global$0 = $6
	*($4 + [4]) = $6
	*($4) = $6
	*($4 + [8]) = ($8 + [-8])
	CALL $128($4, $1)
	CALL db_update_i64(*($1 + [76]), $2, $6, [72])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	$global$0 = ($4 + [16])
}

void .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9659])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9659])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9659])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9659])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9659])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9659])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9659])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9659])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [24])) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9659])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9659])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [40])) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9659])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9659])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [56])) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$1 = ($1 + [64])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9659])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($1, $4, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
	return $0
}