(data (i32.const 4) "\f0f\00\00")
(data (i32.const 16) "cannot create objects in table of another contract\00")
(data (i32.const 80) "write\00")
(data (i32.const 96) "cannot pass end iterator to modify\00")
(data (i32.const 144) "object passed to modify is not in multi_index\00")
(data (i32.const 192) "cannot modify objects in table of another contract\00")
(data (i32.const 256) "updater cannot change primary key when modifying an object\00")
(data (i32.const 320) "error reading iterator\00")
(data (i32.const 352) "read\00")
(data (i32.const 368) "farmeosbank4\00")
(data (i32.const 384) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 448) "not find user name\00")
(data (i32.const 480) "ex table empty\00")
(data (i32.const 496) "only accepts FOS or FARM \00")
(data (i32.const 528) "must purchase a positive amount\00")
(data (i32.const 560) "invalid symbol name\00")
(data (i32.const 592) "must more than 1 FOS or FARM\00")
(data (i32.const 624) "stake not init\00")
(data (i32.const 640) "game not start\00")
(data (i32.const 656) " a\00")
(data (i32.const 672) " b\00")
(data (i32.const 688) "cannot stake\00")
(data (i32.const 704) " c\00")
(data (i32.const 720) "fos left too less\00")
(data (i32.const 752) " more than max exchange amount\00")
(data (i32.const 784) "active\00")
(data (i32.const 800) "farmeosbankx\00")
(data (i32.const 816) "transfer\00")
(data (i32.const 832) "farm exchange fos\00")
(data (i32.const 864) "cannot pass end iterator to erase\00")
(data (i32.const 912) "cannot increment end iterator\00")
(data (i32.const 944) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 1008) "object passed to erase is not in multi_index\00")
(data (i32.const 1056) "cannot erase objects in table of another contract\00")
(data (i32.const 1120) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1184) "z1nz1nz1nz1n\00")
(data (i32.const 1200) "tualalis4444\00")
(data (i32.const 1216) "eosgoodnight\00")
(data (i32.const 1232) "Not allowed operation!\00")
(data (i32.const 1264) "not find stake info\00")
(data (i32.const 1296) "status not eq 0\00")
(data (i32.const 1312) "status not eq 1\00")
(data (i32.const 1328) "refund time err\00")
(data (i32.const 1344) "refund\00")
(data (i32.const 1360) "onerror\00")
(data (i32.const 1376) "eosio\00")
(data (i32.const 1392) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 1456) "farmeosbank2\00")
(data (i32.const 1472) "get\00")
(data (i32.const 9872) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "current_time" (func $fimport$3 (result i64)))
(import "env" "db_find_i64" (func $fimport$4 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$6 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$7 (param i32)))
(import "env" "db_idx64_store" (func $fimport$8 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$9 (param i32 i64 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$10 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$11 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$12 (param i32)))
(import "env" "db_store_i64" (func $fimport$13 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$14 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$15 (param i32 i32)))
(import "env" "memcpy" (func $fimport$16 (param i32 i32 i32) (result i32)))
(import "env" "prints" (func $fimport$17 (param i32)))
(import "env" "read_action_data" (func $fimport$18 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$19 (param i64)))
(import "env" "require_auth2" (func $fimport$20 (param i64 i64)))
(import "env" "send_inline" (func $fimport$21 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN5eosio4fund6updateEmxx" (func $5))
(export "_ZN5eosio4fund8updateubEyx" (func $12))
(export "_ZN5eosio4fund8updateltEy" (func $15))
(export "_ZN5eosio4fund8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $16))
(export "_ZN5eosio4fund7unstakeEy" (func $34))
(export "_ZN5eosio4fund6refundEy" (func $35))
(export "_ZN5eosio4fund5allowEy" (func $37))
(export "apply" (func $38))
(export "malloc" (func $47))
(export "free" (func $50))
(export "memcmp" (func $57))
(export "strlen" (func $58))
(table $0 8 8 anyfunc)
(elem (i32.const 0) $59 $15 $34 $37 $5 $35 $16 $12)



void .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [80])
	CALL memcpy(*($0 + [4]), $2, [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $19 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $51(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $55($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $52($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $52($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [944])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [560])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $43(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $44(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $52(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

void .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [352])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [1008])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1056])
	$2 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$6 = *($1)
	$3 = ([0] - $2)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(*($8)) == (int_32)$6) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$2), [1120])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $52($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $52($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $51(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $55($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $52($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $52($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [320])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $51([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [352])
	CALL memcpy($6, $7, [8])
	$4 = ($4 & [-8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [352])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[16]), [352])
	CALL memcpy(($6 + [16]), ($7 + [16]), [8])
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $21(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $52($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $32(*($1), ($0 + [32]))
}

void .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $51($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $55($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $52($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [80])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), $2, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $22($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [80])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [80])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $31(CALL $30($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [320])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [20]) = $4
	*($8 + [16]) = $4
	*($8 + [24]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $51([56])) + [40]) = $0
	*($8 + [32]) = ($8 + [16])
	*($8 + [44]) = ($6 + [8])
	*($8 + [40]) = $6
	*($8 + [48]) = ($6 + [16])
	*($8 + [52]) = ($6 + [24])
	*($8 + [56]) = ($6 + [32])
	CALL $29(($8 + [40]), ($8 + [32]))
	*($6 + [44]) = $1
	*($8 + [32]) = $6
	$5 = *($6)
	*($8 + [40]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [32]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $26(($0 + [24]), ($8 + [32]), ($8 + [40]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [32])
	*($8 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $52($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

void .FUNC $26 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $51(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $55($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $52($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $52($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $49 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [9958]) == 0) ){ goto $label$2 }
	$7 = *([0] + [9960])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [9958]) = [1]
	$7 = ($7 << [16])
	*([0] + [9960]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [9960])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [9960]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [9958]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [9958]) = [1]
	$3 = ($3 << [16])
	*([0] + [9960]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [9960])
	
.LABEL $label$8
	*([0] + [9960]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $49($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [9872])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $45(*($1), ($0 + [32]))
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [352])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [352])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($1 + [4])
	$7 = *($1)
	$6 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($9 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [16]) = (int_64)0
	*($8 + [8]) = [0]
	*($8 + [24]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[3]), [352])
	CALL memcpy(($8 + [8]), $6, [4])
	CALL eosio_assert(((uint_32)($1 + [-4]) > (uint_32)[7]), [352])
	$9 = (($8 + [8]) + [8])
	CALL memcpy($9, ($6 + [4]), [8])
	CALL eosio_assert(((uint_32)($1 + [-12]) > (uint_32)[7]), [352])
	$5 = ($8 + [24])
	CALL memcpy($5, ($6 + [12]), [8])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($6)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($9)
	$6 = *($8 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$7 = *((*($1) + $7))
	
.LABEL $label$5
	CALL void $1((int_32 $6), (int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [32])
	return [1]
}

int_32 .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [352])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $48([1476], $0)
}

int_32 .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1472])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $22($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [352])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $46($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $54($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $51($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $54($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $52($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $53($7)
	return (unreachable)
}

void .FUNC $44 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $56(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $56(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $52(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $52(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

int_32 .FUNC $51 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [9964])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [80])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [80])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [80])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [80])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [80])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0 + [28])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), $2, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $9 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $51(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $55($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $52($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $52($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $6 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $51(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $55($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $52($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $52($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [320])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $51([20])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[3]), [352])
	CALL memcpy($6, $7, [4])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[4]), [352])
	CALL memcpy(($6 + [4]), ($7 + [4]), [4])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $6(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $52($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _ZN5eosio4fund6updateEmxx (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [192])
	*([0] + [4]) = $9
	CALL require_auth(*($0))
	*(($9 + [72])) = [0]
	*($9 + [56]) = (int_64)-1
	$4 = *($0)
	*($9 + [40]) = $4
	*($9 + [48]) = $4
	*($9 + [64]) = (int_64)0
	$8 = CALL db_lowerbound_i64($4, $4, (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = CALL $7(($9 + [40]), $8)
	$5 = *($0)
	CALL eosio_assert([1], [96])
	CALL eosio_assert(((int_32)*($8 + [8]) == (int_32)($9 + [40])), [144])
	CALL eosio_assert(((int_64)*($9 + [40]) == (int_64)CALL $fimport$2()), [192])
	*($8 + [4]) = $1
	$4 = *($8)
	CALL eosio_assert([1], [256])
	CALL eosio_assert([1], [80])
	CALL memcpy(($9 + [80]), $8, [4])
	CALL eosio_assert([1], [80])
	CALL memcpy((($9 + [80]) | [4]), ($8 + [4]), [4])
	CALL db_update_i64(*(($8 + [12])), $5, ($9 + [80]), [8])
	$8 = ($9 + [56])
	if ( (uint_64)($4 <= *($8)) ){ goto $label$1 }
	*($8) = ((int_64)$4 + (int_64)1)
	goto $label$1 
	
.LABEL $label$2
	$5 = *($0)
	CALL eosio_assert(((int_64)$4 == (int_64)CALL $fimport$2()), [16])
	*(($8 = CALL $51([20])) + [8]) = ($9 + [40])
	*($8 + [4]) = $1
	*($8) = [1]
	CALL eosio_assert([1], [80])
	CALL memcpy(($9 + [80]), $8, [4])
	CALL eosio_assert([1], [80])
	CALL memcpy((($9 + [80]) | [4]), ($8 + [4]), [4])
	$4 = *($8)
	$7 = CALL db_store_i64(*((($9 + [40]) + [8])), (int_64)7235159550150574080, $5, $4, ($9 + [80]), [8])
	*($8 + [12]) = $7
	$1 = ($9 + [56])
	if ( (uint_64)($4 <= *($1)) ){ goto $label$3 }
	*($1) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$3
	*($9) = $8
	$4 = *($8)
	*($9 + [80]) = $4
	*($9 + [160]) = $7
	$6 = ($9 + [68])
	$1 = *($6)
	if ( ((uint_32)$1 >= (uint_32)*(($9 + [72]))) ){ goto $label$5 }
	*($1 + [8]) = $4
	*($1 + [16]) = $7
	*($9) = [0]
	*($1) = $8
	*($6) = ($1 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $6(($9 + [64]), $9, ($9 + [80]), ($9 + [160]))
	
.LABEL $label$4
	$8 = *($9)
	*($9) = [0]
	if ( ($8 == 0) ){ goto $label$1 }
	CALL $52($8)
	
.LABEL $label$1
	*(($9 + [32])) = [0]
	*($9 + [16]) = (int_64)-1
	$4 = *($0)
	*($9) = $4
	*($9 + [8]) = $4
	*($9 + [24]) = (int_64)0
	$8 = CALL db_lowerbound_i64($4, $4, (int_64)6291761009417781248, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$9 }
	$8 = CALL $10($9, $8)
	$5 = *($0)
	CALL eosio_assert([1], [96])
	CALL eosio_assert(((int_32)*($8 + [48]) == (int_32)$9), [144])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$2()), [192])
	*($8 + [16]) = $2
	*($8 + [40]) = $3
	$4 = *($8)
	CALL eosio_assert([1], [256])
	*($9 + [144]) = (($9 + [80]) + [44])
	*($9 + [140]) = ($9 + [80])
	*($9 + [136]) = ($9 + [80])
	*($9 + [152]) = ($9 + [136])
	*($9 + [164]) = ($8 + [4])
	*($9 + [160]) = $8
	*($9 + [168]) = ($8 + [8])
	*($9 + [172]) = ($8 + [16])
	*($9 + [176]) = ($8 + [24])
	*($9 + [180]) = ($8 + [28])
	*($9 + [184]) = ($8 + [32])
	*($9 + [188]) = ($8 + [40])
	CALL $8(($9 + [160]), ($9 + [152]))
	CALL db_update_i64(*(($8 + [52])), $5, ($9 + [80]), [44])
	$8 = ($9 + [16])
	if ( (uint_64)($4 <= *($8)) ){ goto $label$8 }
	*($8) = ((int_64)$4 + (int_64)1)
	$1 = *($9 + [24])
	if ( $1 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$5 = *($0)
	CALL eosio_assert(((int_64)$4 == (int_64)CALL $fimport$2()), [16])
	*(($8 = CALL $51([64])) + [48]) = $9
	*($8 + [16]) = $2
	*($8) = [1]
	*($8 + [40]) = $3
	*($9 + [144]) = (($9 + [80]) + [44])
	*($9 + [140]) = ($9 + [80])
	*($9 + [136]) = ($9 + [80])
	*($9 + [152]) = ($9 + [136])
	*($9 + [164]) = ($8 + [4])
	*($9 + [160]) = $8
	*($9 + [168]) = ($8 + [8])
	*($9 + [172]) = ($8 + [16])
	*($9 + [176]) = ($8 + [24])
	*($9 + [180]) = ($8 + [28])
	*($9 + [184]) = ($8 + [32])
	*($9 + [188]) = ($8 + [40])
	CALL $8(($9 + [160]), ($9 + [152]))
	$4 = *($8)
	$1 = CALL db_store_i64(*(($9 + [8])), (int_64)6291761009417781248, $5, $4, ($9 + [80]), [44])
	*($8 + [52]) = $1
	$0 = ($9 + [16])
	if ( (uint_64)($4 <= *($0)) ){ goto $label$10 }
	*($0) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$10
	*($9 + [160]) = $8
	$4 = *($8)
	*($9 + [80]) = $4
	*($9 + [136]) = $1
	$0 = *(($9 + [28]))
	if ( ((uint_32)$0 >= (uint_32)*(($9 + [32]))) ){ goto $label$12 }
	*($0 + [8]) = $4
	*($0 + [16]) = $1
	*($9 + [160]) = [0]
	*($0) = $8
	*(($9 + [28])) = ($0 + [24])
	goto $label$11 
	
.LABEL $label$12
	CALL $9(($9 + [24]), ($9 + [160]), ($9 + [80]), ($9 + [136]))
	
.LABEL $label$11
	$8 = *($9 + [160])
	*($9 + [160]) = [0]
	if ( ($8 == 0) ){ goto $label$8 }
	CALL $52($8)
	
.LABEL $label$8
	$1 = *($9 + [24])
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$7 = ($9 + [28])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$8 = ($8 + [-24])
	$0 = *($8)
	*($8) = [0]
	if ( ($0 == 0) ){ goto $label$16 }
	CALL $52($0)
	
.LABEL $label$16
	if ( ((int_32)$1 != (int_32)$8) ){ goto $label$15 }
	$8 = *(($9 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$8 = $1
	
.LABEL $label$13
	*($7) = $1
	CALL $52($8)
	
.LABEL $label$6
	$1 = *($9 + [64])
	if ( ($1 == 0) ){ goto $label$17 }
	$7 = ($9 + [68])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$19 }
	
.LOOP $label$20:
	$8 = ($8 + [-24])
	$0 = *($8)
	*($8) = [0]
	if ( ($0 == 0) ){ goto $label$21 }
	CALL $52($0)
	
.LABEL $label$21
	if ( ((int_32)$1 != (int_32)$8) ){ goto $label$20 }
	$8 = *(($9 + [64]))
	goto $label$18 
	
.LABEL $label$19
	$8 = $1
	
.LABEL $label$18
	*($7) = $1
	CALL $52($8)
	
.LABEL $label$17
	*([0] + [4]) = ($9 + [192])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC $14 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $51(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $55($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $52($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $52($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN5eosio4fund8updateltEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [160])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [368]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($7)
	$4 = [0]
	*(($9 + [40])) = [0]
	*($9 + [24]) = (int_64)-1
	$6 = *($0)
	*($9 + [8]) = $6
	*($9 + [16]) = $6
	*($9 + [32]) = (int_64)0
	$2 = [0]
	$3 = CALL db_lowerbound_i64($6, $6, (int_64)6291761009417781248, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	CALL $10(($9 + [8]), $3)
	$2 = [1]
	
.LABEL $label$5
	CALL eosio_assert($2, [480])
	$2 = CALL db_lowerbound_i64(*($9 + [8]), *((($9 + [8]) + [8])), (int_64)6291761009417781248, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$6 }
	$4 = CALL $10(($9 + [8]), $2)
	
.LABEL $label$6
	$5 = *($0)
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [96])
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)($9 + [8])), [144])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$2()), [192])
	*($4 + [28]) = $1
	$6 = *($4)
	CALL eosio_assert([1], [256])
	*($9 + [112]) = (($9 + [48]) + [44])
	*($9 + [108]) = ($9 + [48])
	*($9 + [104]) = ($9 + [48])
	*($9 + [120]) = ($9 + [104])
	*($9 + [132]) = ($4 + [4])
	*($9 + [128]) = $4
	*($9 + [136]) = ($4 + [8])
	*($9 + [140]) = ($4 + [16])
	*($9 + [144]) = ($4 + [24])
	*($9 + [148]) = ($4 + [28])
	*($9 + [152]) = ($4 + [32])
	*($9 + [156]) = ($4 + [40])
	CALL $8(($9 + [128]), ($9 + [120]))
	CALL db_update_i64(*(($4 + [52])), $5, ($9 + [48]), [44])
	$4 = (($9 + [8]) + [16])
	if ( (uint_64)($6 <= *($4)) ){ goto $label$7 }
	*($4) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$0 = *($9 + [32])
	if ( ($0 == 0) ){ goto $label$8 }
	$3 = ($9 + [36])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$10 }
	
.LOOP $label$11:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $52($2)
	
.LABEL $label$12
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$11 }
	$4 = *(($9 + [32]))
	goto $label$9 
	
.LABEL $label$10
	$4 = $0
	
.LABEL $label$9
	*($3) = $0
	CALL $52($4)
	
.LABEL $label$8
	*([0] + [4]) = ($9 + [160])
}

void .FUNC _ZN5eosio4fund8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_32 $22
	$22 = (*([0] + [4]) - [272])
	*([0] + [4]) = $22
	$19 = *($0)
	if ( ((int_64)$19 == (int_64)$1) ){ goto $label$2 }
	if ( ((int_64)$19 != (int_64)$2) ){ goto $label$2 }
	CALL require_auth($1)
	$14 = [1]
	$19 = *($3 + [8])
	if ( ((int_64)$19 == (int_64)1397704196) ){ goto $label$3 }
	$14 = ((int_64)$19 == (int_64)332092491268)
	
.LABEL $label$3
	CALL eosio_assert($14, [496])
	$5 = *($3)
	CALL eosio_assert(((int_64)$5 > (int_64)0), [528])
	$2 = (uint_64)$19 >> (uint_64)(int_64)8)
	$14 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$11 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$11 = [0]
	
.LABEL $label$4
	CALL eosio_assert($11, [560])
	CALL eosio_assert(((int_64)$5 > (int_64)9999), [592])
	*(($22 + [200])) = [0]
	*($22 + [184]) = (int_64)-1
	$2 = *($0)
	*($22 + [168]) = $2
	*($22 + [176]) = $2
	*($22 + [192]) = (int_64)0
	$14 = [0]
	$11 = CALL db_lowerbound_i64($2, $2, (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$9 }
	$14 = CALL $7(($22 + [168]), $11)
	
.LABEL $label$9
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [624])
	CALL eosio_assert(((int_32)*(CALL $7(($22 + [168]), CALL $fimport$10(*($22 + [168]), *(($22 + [176])), (int_64)7235159550150574080, (int_64)0)) + [4]) == (int_32)[1]), [640])
	CALL current_time()
	if ( ((int_64)$19 != (int_64)1397704196) ){ goto $label$20 }
	CALL prints([656])
	*(($22 + [32])) = [0]
	*($22 + [16]) = (int_64)-1
	*($22 + [24]) = (int_64)0
	$2 = *($0)
	*($22) = $2
	*($22 + [8]) = $2
	*($22 + [36]) = [0]
	$14 = CALL db_find_i64($2, $2, (int_64)8419268397136609280, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$19 }
	CALL eosio_assert(((int_32)*(CALL $17($22, $14) + [32]) == (int_32)$22), [384])
	goto $label$15 
	
.LABEL $label$20
	if ( ((int_64)$19 != (int_64)332092491268) ){ goto $label$11 }
	$15 = [0]
	*(($22 + [160])) = [0]
	*($22 + [144]) = (int_64)-1
	$2 = *($0)
	*($22 + [128]) = $2
	*($22 + [136]) = $2
	*($22 + [152]) = (int_64)0
	$14 = [0]
	$11 = CALL db_lowerbound_i64($2, $2, (int_64)6291761009417781248, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$21 }
	$14 = CALL $10(($22 + [128]), $11)
	
.LABEL $label$21
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [480])
	$14 = CALL db_lowerbound_i64(*($22 + [128]), *(($22 + [136])), (int_64)6291761009417781248, (int_64)0)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$22 }
	$15 = CALL $10(($22 + [128]), $14)
	
.LABEL $label$22
	CALL eosio_assert(((int_64)*($15 + [16]) >= (int_64)$5), [720])
	*(($22 + [120])) = [0]
	*($22 + [104]) = (int_64)-1
	*($22 + [112]) = (int_64)0
	$2 = *($0)
	*($22 + [88]) = $2
	*($22 + [96]) = $2
	$14 = CALL db_find_i64($2, $2, (int_64)-3020378821120491520, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$18 }
	CALL eosio_assert(((int_32)*(CALL $20(($22 + [88]), $14) + [24]) == (int_32)($22 + [88])), [384])
	goto $label$12 
	
.LABEL $label$19
	$2 = *($0)
	CALL eosio_assert(((int_64)*($22) == (int_64)CALL $fimport$2()), [16])
	*(($14 = CALL $51([48])) + [32]) = $22
	*($14 + [24]) = [0]
	*($14) = $1
	*($14 + [8]) = (int_64)0
	*($22 + [56]) = (($22 + [128]) + [28])
	*($22 + [52]) = ($22 + [128])
	*($22 + [48]) = ($22 + [128])
	*($22 + [240]) = ($22 + [48])
	$11 = ($14 + [8])
	*($22 + [92]) = $11
	*($22 + [88]) = $14
	*($22 + [96]) = ($14 + [16])
	*($22 + [100]) = ($14 + [24])
	CALL $18(($22 + [88]), ($22 + [240]))
	$19 = *($14)
	$15 = ($22 + [8])
	*($14 + [36]) = CALL db_store_i64(*($15), (int_64)8419268397136609280, $2, $19, ($22 + [128]), [28])
	$3 = ($22 + [16])
	if ( (uint_64)($19 <= *($3)) ){ goto $label$23 }
	*($3) = ( (int_64)-2 ? ((int_64)$19 + (int_64)1) : ((uint_64)$19 > (uint_64)(int_64)-3) )
	
.LABEL $label$23
	$19 = *($14)
	$17 = *($15)
	*($22 + [88]) = *($11)
	*($14 + [40]) = CALL db_idx64_store($17, (int_64)8419268397136609280, $2, $19, ($22 + [88]))
	*($22 + [88]) = $14
	$2 = *($14)
	*($22 + [128]) = $2
	$15 = *(($14 + [36]))
	*($22 + [48]) = $15
	$11 = *(($22 + [28]))
	if ( ((uint_32)$11 >= (uint_32)*(($22 + [32]))) ){ goto $label$17 }
	*($11 + [8]) = $2
	*($11 + [16]) = $15
	*($22 + [88]) = [0]
	*($11) = $14
	*(($22 + [28])) = ($11 + [24])
	goto $label$16 
	
.LABEL $label$18
	$19 = *($0)
	CALL eosio_assert(((int_64)*($22 + [88]) == (int_64)CALL $fimport$2()), [16])
	*(($14 = CALL $51([40])) + [24]) = ($22 + [88])
	*($14 + [8]) = (int_64)0
	*($14) = $1
	*($14 + [16]) = (int_64)0
	CALL eosio_assert([1], [80])
	CALL memcpy($22, $14, [8])
	CALL eosio_assert([1], [80])
	CALL memcpy(($22 | [8]), ($14 + [8]), [8])
	CALL eosio_assert([1], [80])
	CALL memcpy(($22 + [16]), ($14 + [16]), [8])
	$2 = *($14)
	$16 = CALL db_store_i64(*((($22 + [88]) + [8])), (int_64)-3020378821120491520, $19, $2, $22, [24])
	*($14 + [28]) = $16
	if ( (uint_64)($2 <= *((($22 + [88]) + [16]))) ){ goto $label$24 }
	*(($22 + [104])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$24
	*($22 + [48]) = $14
	$2 = *($14)
	*($22) = $2
	*($22 + [240]) = $16
	$8 = ($22 + [116])
	$11 = *($8)
	if ( ((uint_32)$11 >= (uint_32)*(($22 + [120]))) ){ goto $label$14 }
	*($11 + [8]) = $2
	*($11 + [16]) = $16
	*($22 + [48]) = [0]
	*($11) = $14
	*($8) = ($11 + [24])
	goto $label$13 
	
.LABEL $label$17
	CALL $19(($22 + [24]), ($22 + [88]), ($22 + [128]), ($22 + [48]))
	
.LABEL $label$16
	$14 = *($22 + [88])
	*($22 + [88]) = [0]
	if ( ($14 == 0) ){ goto $label$25 }
	CALL $52($14)
	
.LABEL $label$25
	CALL prints([672])
	
.LABEL $label$15
	$16 = *(($22 + [24]))
	$15 = *(($22 + [28]))
	if ( ((int_32)$15 == (int_32)$16) ){ goto $label$26 }
	$14 = ($15 + [-24])
	$3 = ([0] - $16)
	
.LOOP $label$27:
	if ( ((int_64)*(*($14)) == (int_64)$1) ){ goto $label$26 }
	$15 = $14
	$11 = ($14 + [-24])
	$14 = $11
	if ( ((int_32)($11 + $3) != (int_32)[-24]) ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)$15 == (int_32)$16) ){ goto $label$29 }
	$14 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [32]) == (int_32)$22), [384])
	goto $label$28 
	
.LABEL $label$29
	$14 = [0]
	$11 = CALL db_find_i64(*($22), *(($22 + [8])), (int_64)8419268397136609280, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$28 }
	$14 = CALL $17($22, $11)
	CALL eosio_assert(((int_32)*($14 + [32]) == (int_32)$22), [384])
	
.LABEL $label$28
	CALL eosio_assert((*($14 + [24]) == 0), [688])
	$19 = *($0)
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [96])
	CALL eosio_assert(((int_32)*($14 + [32]) == (int_32)$22), [144])
	CALL eosio_assert(((int_64)*($22) == (int_64)CALL $fimport$2()), [192])
	$11 = ($14 + [8])
	$2 = *($11)
	*($22 + [216]) = $2
	*($11) = ((int_64)$5 + (int_64)$2)
	$2 = *($14)
	CALL prints([704])
	CALL eosio_assert(((int_64)$2 == (int_64)*($14)), [256])
	*($22 + [56]) = (($22 + [128]) + [28])
	*($22 + [52]) = ($22 + [128])
	*($22 + [48]) = ($22 + [128])
	*($22 + [240]) = ($22 + [48])
	*($22 + [92]) = $11
	*($22 + [88]) = $14
	*($22 + [96]) = ($14 + [16])
	*($22 + [100]) = ($14 + [24])
	CALL $18(($22 + [88]), ($22 + [240]))
	CALL db_update_i64(*($14 + [36]), $19, ($22 + [128]), [28])
	$0 = ($22 + [16])
	if ( (uint_64)($2 <= *($0)) ){ goto $label$30 }
	*($0) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$30
	*($22 + [88]) = *($11)
	if ( (CALL memcmp(($22 + [216]), ($22 + [88]), [8]) == 0) ){ goto $label$31 }
	$11 = ($14 + [40])
	$14 = *($11)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$32 }
	$14 = CALL db_idx64_find_primary(*($22), *(($22 + [8])), (int_64)8419268397136609280, ($22 + [240]), $2)
	*($11) = $14
	
.LABEL $label$32
	CALL db_idx64_update($14, $19, ($22 + [88]))
	
.LABEL $label$31
	$0 = *($22 + [24])
	if ( ($0 == 0) ){ goto $label$11 }
	$15 = ($22 + [28])
	$14 = *($15)
	if ( ((int_32)$14 == (int_32)$0) ){ goto $label$34 }
	
.LOOP $label$35:
	$14 = ($14 + [-24])
	$11 = *($14)
	*($14) = [0]
	if ( ($11 == 0) ){ goto $label$36 }
	CALL $52($11)
	
.LABEL $label$36
	if ( ((int_32)$0 != (int_32)$14) ){ goto $label$35 }
	$14 = *(($22 + [24]))
	goto $label$33 
	
.LABEL $label$34
	$14 = $0
	
.LABEL $label$33
	*($15) = $0
	CALL $52($14)
	$0 = *($22 + [192])
	if ( $0 ){ goto $label$10 }
	goto $label$2 
	
.LABEL $label$14
	CALL $21(($22 + [112]), ($22 + [48]), $22, ($22 + [240]))
	
.LABEL $label$13
	$14 = *($22 + [48])
	*($22 + [48]) = [0]
	if ( ($14 == 0) ){ goto $label$12 }
	CALL $52($14)
	
.LABEL $label$12
	$7 = *(($22 + [112]))
	$16 = *(($22 + [116]))
	if ( ((int_32)$16 == (int_32)$7) ){ goto $label$37 }
	$14 = ($16 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$38:
	if ( ((int_64)*(*($14)) == (int_64)$1) ){ goto $label$37 }
	$16 = $14
	$11 = ($14 + [-24])
	$14 = $11
	if ( ((int_32)($11 + $8) != (int_32)[-24]) ){ goto $label$38 }
	
.LABEL $label$37
	if ( ((int_32)$16 == (int_32)$7) ){ goto $label$40 }
	$16 = *(($16 + [-24]))
	CALL eosio_assert(((int_32)*($16 + [24]) == (int_32)($22 + [88])), [384])
	goto $label$39 
	
.LABEL $label$40
	$16 = [0]
	$14 = CALL db_find_i64(*($22 + [88]), *(($22 + [96])), (int_64)-3020378821120491520, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$39 }
	$16 = CALL $20(($22 + [88]), $14)
	CALL eosio_assert(((int_32)*($16 + [24]) == (int_32)($22 + [88])), [384])
	
.LABEL $label$39
	$8 = ($15 + [28])
	if ( ((uint_64)*($16 + [16]) >= (uint_64)*($15 + [28])) ){ goto $label$41 }
	$19 = *($0)
	CALL eosio_assert(((int_32)$16 != (int_32)[0]), [96])
	CALL eosio_assert(((int_32)*($16 + [24]) == (int_32)($22 + [88])), [144])
	CALL eosio_assert(((int_64)*($22 + [88]) == (int_64)CALL $fimport$2()), [192])
	*($16 + [8]) = (int_64)0
	*($16 + [16]) = (CASTING uint_64)(uint_32 (*($8) + [1]))
	$2 = *($16)
	CALL eosio_assert([1], [256])
	CALL eosio_assert([1], [80])
	CALL memcpy($22, $16, [8])
	CALL eosio_assert([1], [80])
	CALL memcpy(($22 | [8]), ($16 + [8]), [8])
	CALL eosio_assert([1], [80])
	CALL memcpy(($22 + [16]), ($16 + [16]), [8])
	CALL db_update_i64(*($16 + [28]), $19, $22, [24])
	$14 = (($22 + [88]) + [16])
	if ( (uint_64)($2 <= *($14)) ){ goto $label$41 }
	*($14) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$41
	$6 = ($15 + [16])
	CALL eosio_assert(((int_64)((int_64)$5 + (int_64)*($16 + [8])) <= (int_64)*($15 + [40])), [752])
	$9 = ($15 + [40])
	$10 = *($0)
	$2 = (int_64)0
	$17 = (int_64)59
	$14 = [784]
	$18 = (int_64)0
	
.LOOP $label$42:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$47 }
	$11 = *($14)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$46 }
	$11 = ($11 + [165])
	goto $label$45 
	
.LABEL $label$47
	$19 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$46
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$45
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56)
	
.LABEL $label$44
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$43
	$14 = ($14 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$42 }
	$2 = (int_64)0
	$19 = (int_64)59
	$14 = [800]
	$20 = (int_64)0
	
.LOOP $label$48:
	$17 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$49 }
	$11 = *($14)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$11 = ($11 + [165])
	goto $label$50 
	
.LABEL $label$51
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$17 = ((int_64)(CASTING uint_64)(uint_32 ($11 & [31])) << (int_64)((int_64)$19 & (int_64)4294967295))
	
.LABEL $label$49
	$14 = ($14 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$20 = ((int_64)$17 | (int_64)$20)
	$19 = ((int_64)$19 + (int_64)-5)
	if ( ((int_64)$19 != (int_64)-6) ){ goto $label$48 }
	$2 = (int_64)0
	$17 = (int_64)59
	$14 = [816]
	$21 = (int_64)0
	
.LOOP $label$52:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$57 }
	$11 = *($14)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$56 }
	$11 = ($11 + [165])
	goto $label$55 
	
.LABEL $label$57
	$19 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$56
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$55
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56)
	
.LABEL $label$54
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$53
	$14 = ($14 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$19 | (int_64)$21)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$52 }
	CALL eosio_assert((uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [944])
	$2 = (int_64)5459782
	$14 = [0]
	
.LOOP $label$60:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$59 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$61 }
	
.LOOP $label$62:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$59 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$62 }
	
.LABEL $label$61
	$11 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$60 }
	goto $label$58 
	
.LABEL $label$59
	$11 = [0]
	
.LABEL $label$58
	CALL eosio_assert($11, [560])
	*(($22 + [224])) = [0]
	*($22 + [216]) = (int_64)0
	$14 = CALL strlen([832])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$65 }
	*($22 + [216]) = ($14 << [1])
	$11 = (($22 + [216]) | [1])
	if ( $14 ){ goto $label$64 }
	goto $label$63 
	
.LABEL $label$65
	$7 = (($14 + [16]) & [-16])
	$11 = CALL $51($7)
	*($22 + [216]) = ($7 | [1])
	*($22 + [224]) = $11
	*($22 + [220]) = $14
	
.LABEL $label$64
	CALL memcpy($11, [832], $14)
	
.LABEL $label$63
	*(($11 + $14)) = [0]
	*(($22 + [24])) = (int_64)1397704196
	*(($11 = ($22 + [36]))) = *($22 + [220])
	*($22 + [8]) = $1
	$14 = ($22 + [224])
	*(($22 + [40])) = *($14)
	*($22) = *($0)
	*($22 + [16]) = $5
	*($22 + [32]) = *($22 + [216])
	*($22 + [216]) = [0]
	*($22 + [220]) = [0]
	*($14) = [0]
	*($22 + [48]) = $20
	*($22 + [56]) = $21
	*($22 + [64]) = [0]
	*(($7 = ($22 + [68]))) = [0]
	*(($12 = (($22 + [48]) + [24]))) = [0]
	*(($14 = CALL $51([16]))) = $10
	*($14 + [8]) = $18
	*((($22 + [48]) + [32])) = [0]
	$13 = ($14 + [16])
	*($12) = $13
	*($7) = $13
	*($22 + [64]) = $14
	*($22 + [76]) = [0]
	*((($22 + [48]) + [36])) = [0]
	$14 = *($22 + [32])
	$11 = ( *($11) ? uint_32($14 >> [1]) : ($14 & [1]) )
	$14 = ($11 + [32])
	$2 = (CASTING uint_64)(uint_32 $11)
	$11 = ($22 + [76])
	
.LOOP $label$66:
	$14 = ($14 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$66 }
	if ( ($14 == 0) ){ goto $label$68 }
	CALL $22($11, $14)
	$11 = *(($22 + [80]))
	$14 = *(($22 + [76]))
	goto $label$67 
	
.LABEL $label$68
	$11 = [0]
	$14 = [0]
	
.LABEL $label$67
	*($22 + [244]) = $14
	*($22 + [240]) = $14
	*($22 + [248]) = $11
	*($22 + [208]) = ($22 + [240])
	*($22 + [232]) = $22
	CALL $23(($22 + [232]), ($22 + [208]))
	CALL $24(($22 + [240]), ($22 + [48]))
	$14 = *($22 + [240])
	CALL send_inline($14, (*($22 + [244]) - $14))
	$14 = *($22 + [240])
	if ( ($14 == 0) ){ goto $label$69 }
	*($22 + [244]) = $14
	CALL $52($14)
	
.LABEL $label$69
	$14 = *($22 + [76])
	if ( ($14 == 0) ){ goto $label$70 }
	*(($22 + [80])) = $14
	CALL $52($14)
	
.LABEL $label$70
	$14 = *($22 + [64])
	if ( ($14 == 0) ){ goto $label$71 }
	*(($22 + [68])) = $14
	CALL $52($14)
	
.LABEL $label$71
	if ( ((*(($22 + [32])) & [1]) == 0) ){ goto $label$72 }
	CALL $52(*(($22 + [40])))
	
.LABEL $label$72
	if ( ((*($22 + [216]) & [1]) == 0) ){ goto $label$73 }
	CALL $52(*(($22 + [224])))
	
.LABEL $label$73
	*(($12 = (($22 + [48]) + [32]))) = [0]
	*($22 + [72]) = (int_64)0
	*($22 + [64]) = (int_64)-1
	$2 = *($0)
	*($22 + [48]) = $2
	*($22 + [56]) = $2
	$7 = *($15 + [24])
	$11 = *($15 + [4])
	CALL eosio_assert(((int_64)$2 == (int_64)CALL $fimport$2()), [16])
	*(($14 = CALL $51([56])) + [40]) = ($22 + [48])
	*($14 + [8]) = $1
	*($14) = $11
	$19 = *($3)
	*($14 + [16]) = $19
	*($14 + [24]) = $19
	*($14 + [32]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($22 + [224]) = ($22 + [36])
	*($22 + [220]) = $22
	*($22 + [216]) = $22
	*($22 + [232]) = ($22 + [216])
	*($22 + [244]) = ($14 + [8])
	*($22 + [240]) = $14
	*($22 + [248]) = ($14 + [16])
	*($22 + [252]) = ($14 + [24])
	*($22 + [256]) = ($14 + [32])
	CALL $25(($22 + [240]), ($22 + [232]))
	$17 = *($14)
	$3 = CALL db_store_i64(*($22 + [56]), (int_64)6300153604753850368, $2, $17, $22, [36])
	*($14 + [44]) = $3
	if ( (uint_64)($17 <= *($22 + [64])) ){ goto $label$74 }
	*((($22 + [48]) + [16])) = ((int_64)$17 + (int_64)1)
	
.LABEL $label$74
	*($22 + [240]) = $14
	$2 = *($14)
	*($22) = $2
	*($22 + [216]) = $3
	$13 = ($22 + [76])
	$11 = *($13)
	if ( ((uint_32)$11 >= (uint_32)*($12)) ){ goto $label$76 }
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	*($22 + [240]) = [0]
	*($11) = $14
	*($13) = ($11 + [24])
	goto $label$75 
	
.LABEL $label$76
	CALL $26(($22 + [72]), ($22 + [240]), $22, ($22 + [216]))
	
.LABEL $label$75
	$14 = ($7 + [1])
	$11 = *($22 + [240])
	*($22 + [240]) = [0]
	if ( ($11 == 0) ){ goto $label$77 }
	CALL $52($11)
	
.LABEL $label$77
	$11 = ($15 + [4])
	$3 = ($15 + [24])
	if ( ($14 <= [201]) ){ goto $label$78 }
	$14 = [0]
	$12 = CALL db_lowerbound_i64(*($22 + [48]), *(($22 + [56])), (int_64)6300153604753850368, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$79 }
	$14 = CALL $27(($22 + [48]), $12)
	
.LABEL $label$79
	$12 = ((int_32)$14 != (int_32)[0])
	CALL eosio_assert($12, [864])
	CALL eosio_assert($12, [912])
	$12 = CALL db_next_i64(*($14 + [44]), $22)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$80 }
	CALL $27(($22 + [48]), $12)
	
.LABEL $label$80
	CALL $28(($22 + [48]), $14)
	$14 = $7
	
.LABEL $label$78
	$17 = *($0)
	CALL eosio_assert(((int_32)$15 != (int_32)[0]), [96])
	CALL eosio_assert(((int_32)*($15 + [48]) == (int_32)($22 + [128])), [144])
	CALL eosio_assert(((int_64)*($22 + [128]) == (int_64)CALL $fimport$2()), [192])
	*(($15 + [24])) = $14
	*(($14 = ($15 + [4]))) = (*($14) + [1])
	*(($14 = ($15 + [16]))) = (int_64))(*($14) - $19)
	$2 = *($15)
	CALL eosio_assert([1], [256])
	*($22 + [224]) = ($22 + [44])
	*($22 + [220]) = $22
	*($22 + [216]) = $22
	*($22 + [232]) = ($22 + [216])
	*($22 + [244]) = $11
	*($22 + [240]) = $15
	*($22 + [248]) = ($15 + [8])
	*($22 + [252]) = $6
	*($22 + [256]) = $3
	*($22 + [260]) = $8
	*($22 + [264]) = ($15 + [32])
	*($22 + [268]) = $9
	CALL $8(($22 + [240]), ($22 + [232]))
	CALL db_update_i64(*(($15 + [52])), $17, $22, [44])
	$14 = (($22 + [128]) + [16])
	if ( (uint_64)($2 <= *($14)) ){ goto $label$81 }
	*($14) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$81
	$17 = *($0)
	CALL eosio_assert(((int_32)$16 != (int_32)[0]), [96])
	CALL eosio_assert(((int_32)*($16 + [24]) == (int_32)($22 + [88])), [144])
	CALL eosio_assert(((int_64)*($22 + [88]) == (int_64)CALL $fimport$2()), [192])
	*($16 + [8]) = ((int_64)*($16 + [8]) + (int_64)$19)
	$2 = *($16)
	CALL eosio_assert([1], [256])
	CALL eosio_assert([1], [80])
	CALL memcpy($22, $16, [8])
	CALL eosio_assert([1], [80])
	CALL memcpy(($22 | [8]), ($16 + [8]), [8])
	CALL eosio_assert([1], [80])
	CALL memcpy(($22 + [16]), ($16 + [16]), [8])
	CALL db_update_i64(*($16 + [28]), $17, $22, [24])
	if ( (uint_64)($2 <= *((($22 + [88]) + [16]))) ){ goto $label$82 }
	*(($22 + [104])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$82
	$0 = *($22 + [72])
	if ( ($0 == 0) ){ goto $label$83 }
	$15 = ($22 + [76])
	$14 = *($15)
	if ( ((int_32)$14 == (int_32)$0) ){ goto $label$85 }
	
.LOOP $label$86:
	$14 = ($14 + [-24])
	$11 = *($14)
	*($14) = [0]
	if ( ($11 == 0) ){ goto $label$87 }
	CALL $52($11)
	
.LABEL $label$87
	if ( ((int_32)$0 != (int_32)$14) ){ goto $label$86 }
	$14 = *(($22 + [72]))
	goto $label$84 
	
.LABEL $label$85
	$14 = $0
	
.LABEL $label$84
	*($15) = $0
	CALL $52($14)
	
.LABEL $label$83
	$0 = *($22 + [112])
	if ( ($0 == 0) ){ goto $label$88 }
	$15 = ($22 + [116])
	$14 = *($15)
	if ( ((int_32)$14 == (int_32)$0) ){ goto $label$90 }
	
.LOOP $label$91:
	$14 = ($14 + [-24])
	$11 = *($14)
	*($14) = [0]
	if ( ($11 == 0) ){ goto $label$92 }
	CALL $52($11)
	
.LABEL $label$92
	if ( ((int_32)$0 != (int_32)$14) ){ goto $label$91 }
	$14 = *(($22 + [112]))
	goto $label$89 
	
.LABEL $label$90
	$14 = $0
	
.LABEL $label$89
	*($15) = $0
	CALL $52($14)
	
.LABEL $label$88
	$0 = *($22 + [152])
	if ( ($0 == 0) ){ goto $label$11 }
	$15 = ($22 + [156])
	$14 = *($15)
	if ( ((int_32)$14 == (int_32)$0) ){ goto $label$94 }
	
.LOOP $label$95:
	$14 = ($14 + [-24])
	$11 = *($14)
	*($14) = [0]
	if ( ($11 == 0) ){ goto $label$96 }
	CALL $52($11)
	
.LABEL $label$96
	if ( ((int_32)$0 != (int_32)$14) ){ goto $label$95 }
	$14 = *(($22 + [152]))
	goto $label$93 
	
.LABEL $label$94
	$14 = $0
	
.LABEL $label$93
	*($15) = $0
	CALL $52($14)
	
.LABEL $label$11
	$0 = *($22 + [192])
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$10
	$15 = ($22 + [196])
	$14 = *($15)
	if ( ((int_32)$14 == (int_32)$0) ){ goto $label$98 }
	
.LOOP $label$99:
	$14 = ($14 + [-24])
	$11 = *($14)
	*($14) = [0]
	if ( ($11 == 0) ){ goto $label$100 }
	CALL $52($11)
	
.LABEL $label$100
	if ( ((int_32)$0 != (int_32)$14) ){ goto $label$99 }
	$14 = *(($22 + [192]))
	goto $label$97 
	
.LABEL $label$98
	$14 = $0
	
.LABEL $label$97
	*($15) = $0
	CALL $52($14)
	
.LABEL $label$2
	*([0] + [4]) = ($22 + [272])
	return (unreachable)
	
.LABEL $label$1
	CALL $53(($22 + [216]))
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [320])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $51([48])) + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [16])
	*($8 + [44]) = ($6 + [24])
	CALL $33(($8 + [32]), ($8 + [24]))
	*($6 + [40]) = [-1]
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [36])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $19(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $52($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [320])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $51([64])) + [48]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [4])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [8])
	*($8 + [44]) = ($6 + [16])
	*($8 + [48]) = ($6 + [24])
	*($8 + [52]) = ($6 + [28])
	*($8 + [56]) = ($6 + [32])
	*($8 + [60]) = ($6 + [40])
	CALL $11(($8 + [32]), ($8 + [24]))
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [52])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $9(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $52($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

void .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [352])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [352])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [352])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [352])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [352])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0 + [28])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC _ZN5eosio4fund8updateubEyx (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [80])
	*([0] + [4]) = $10
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [368]
	$8 = (int_64)0
	
.LOOP $label$1:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($8)
	*(($10 + [40])) = [0]
	*($10 + [24]) = (int_64)-1
	*($10 + [32]) = (int_64)0
	$7 = *($0)
	*($10 + [8]) = $7
	*($10 + [16]) = $7
	$5 = [0]
	$3 = CALL db_find_i64($7, $7, (int_64)3774946861941522432, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $13(($10 + [8]), $3)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($10 + [8])), [384])
	
.LABEL $label$5
	$3 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($3, [448])
	$6 = *($0)
	CALL eosio_assert($3, [96])
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($10 + [8])), [144])
	CALL eosio_assert(((int_64)*($10 + [8]) == (int_64)CALL $fimport$2()), [192])
	*($5 + [16]) = ((int_64)*($5 + [16]) + (int_64)$2)
	$7 = *($5)
	CALL eosio_assert([1], [256])
	CALL eosio_assert([1], [80])
	CALL memcpy(($10 + [48]), $5, [8])
	*($10 + [79]) = *($5 + [8])
	CALL eosio_assert([1], [80])
	CALL memcpy((($10 + [48]) | [8]), ($10 + [79]), [1])
	CALL eosio_assert([1], [80])
	CALL memcpy((($10 + [48]) | [9]), ($5 + [16]), [8])
	CALL db_update_i64(*($5 + [28]), $6, ($10 + [48]), [17])
	$5 = (($10 + [8]) + [16])
	if ( (uint_64)($7 <= *($5)) ){ goto $label$6 }
	*($5) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$0 = *($10 + [32])
	if ( ($0 == 0) ){ goto $label$7 }
	$4 = ($10 + [36])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $52($3)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$10 }
	$5 = *(($10 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$5 = $0
	
.LABEL $label$8
	*($4) = $0
	CALL $52($5)
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [80])
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [320])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $51([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [352])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [352])
	CALL memcpy(($8 + [16]), ($7 + [8]), [1])
	*($6 + [8]) = ((int_32)*($8 + [16]) != (int_32)[0])
	CALL eosio_assert(((uint_32)($4 + [-9]) > (uint_32)[7]), [352])
	CALL memcpy(($6 + [16]), ($7 + [9]), [8])
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $14(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $52($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1008])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1056])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1120])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $52($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $52($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
	$7 = *(($1 + [40]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)8419268397136609280, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _ZN5eosio4fund5allowEy (int_32 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	CALL require_auth($1)
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$2 = *($0)
	*($7 + [8]) = $2
	*($7 + [16]) = $2
	$4 = CALL db_find_i64($2, $2, (int_64)3774946861941522432, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $13(($7 + [8]), $4) + [24]) == (int_32)($7 + [8])), [384])
	$3 = *($7 + [32])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0)
	CALL eosio_assert(((int_64)$2 == (int_64)CALL $fimport$2()), [16])
	*(($0 = CALL $51([40])) + [24]) = ($7 + [8])
	*($0) = $1
	CALL eosio_assert([1], [80])
	CALL memcpy(($7 + [64]), $0, [8])
	*($7 + [56]) = *($0 + [8])
	CALL eosio_assert([1], [80])
	CALL memcpy((($7 + [64]) | [8]), ($7 + [56]), [1])
	CALL eosio_assert([1], [80])
	CALL memcpy((($7 + [64]) | [9]), ($0 + [16]), [8])
	$2 = *($0)
	$3 = CALL db_store_i64(*((($7 + [8]) + [8])), (int_64)3774946861941522432, $5, $2, ($7 + [64]), [17])
	*($0 + [28]) = $3
	$4 = (($7 + [8]) + [16])
	if ( (uint_64)($2 <= *($4)) ){ goto $label$4 }
	*($4) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($7 + [56]) = $0
	$2 = *($0)
	*($7 + [64]) = $2
	*($7 + [52]) = $3
	$6 = ($7 + [36])
	$4 = *($6)
	if ( ((uint_32)$4 >= (uint_32)*(($7 + [40]))) ){ goto $label$6 }
	*($4 + [8]) = $2
	*($4 + [16]) = $3
	*($7 + [56]) = [0]
	*($4) = $0
	*($6) = ($4 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $14(($7 + [32]), ($7 + [56]), ($7 + [64]), ($7 + [52]))
	
.LABEL $label$5
	$0 = *($7 + [56])
	*($7 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $52($0)
	
.LABEL $label$7
	$3 = *($7 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($7 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $52($4)
	
.LABEL $label$11
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($7 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $3
	
.LABEL $label$8
	*($6) = $3
	CALL $52($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [96])
}

void .FUNC _ZN5eosio4fund7unstakeEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	*([0] + [4]) = $9
	CALL require_auth($1)
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1184]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	$3 = [0]
	$4 = [0]
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$5 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1200]
	$7 = (int_64)0
	
.LOOP $label$6:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$7 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$2 = ($2 + [165])
	goto $label$8 
	
.LABEL $label$9
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$7
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$6 }
	$4 = [0]
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$5 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1216]
	$7 = (int_64)0
	
.LOOP $label$10:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$11 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$2 = ($2 + [165])
	goto $label$12 
	
.LABEL $label$13
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$11
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$10 }
	$4 = ((int_64)$7 != (int_64)$1)
	
.LABEL $label$5
	CALL eosio_assert($4, [1232])
	*(($9 + [40])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$6 = *($0)
	*($9 + [8]) = $6
	*($9 + [16]) = $6
	*($9 + [44]) = [0]
	$4 = CALL db_find_i64($6, $6, (int_64)8419268397136609280, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$14 }
	$3 = CALL $17(($9 + [8]), $4)
	CALL eosio_assert(((int_32)*($3 + [32]) == (int_32)($9 + [8])), [384])
	
.LABEL $label$14
	$4 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($4, [1264])
	CALL eosio_assert((*($3 + [24]) == 0), [1296])
	$5 = *($0)
	CALL eosio_assert($4, [96])
	CALL eosio_assert(((int_32)*($3 + [32]) == (int_32)($9 + [8])), [144])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$2()), [192])
	*($3 + [24]) = [1]
	$4 = ($3 + [8])
	*($9 + [96]) = *($4)
	$6 = *($3)
	*($3 + [16]) = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) + (int_64)86400) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$6 == (int_64)*($3)), [256])
	*($9 + [88]) = (($9 + [48]) + [28])
	*($9 + [84]) = ($9 + [48])
	*($9 + [80]) = ($9 + [48])
	*($9 + [104]) = ($9 + [80])
	*($9 + [116]) = $4
	*($9 + [112]) = $3
	*($9 + [120]) = ($3 + [16])
	*($9 + [124]) = ($3 + [24])
	CALL $18(($9 + [112]), ($9 + [104]))
	CALL db_update_i64(*($3 + [36]), $5, ($9 + [48]), [28])
	$2 = (($9 + [8]) + [16])
	if ( (uint_64)($6 <= *($2)) ){ goto $label$15 }
	*($2) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	*($9 + [112]) = *($4)
	if ( (CALL memcmp(($9 + [96]), ($9 + [112]), [8]) == 0) ){ goto $label$16 }
	$2 = ($3 + [40])
	$4 = *($2)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$17 }
	$4 = CALL db_idx64_find_primary(*($9 + [8]), *(($9 + [16])), (int_64)8419268397136609280, ($9 + [104]), $6)
	*($2) = $4
	
.LABEL $label$17
	CALL db_idx64_update($4, $5, ($9 + [112]))
	
.LABEL $label$16
	$3 = *($9 + [32])
	if ( ($3 == 0) ){ goto $label$18 }
	$0 = ($9 + [36])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$20 }
	
.LOOP $label$21:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$22 }
	CALL $52($2)
	
.LABEL $label$22
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$21 }
	$4 = *(($9 + [32]))
	goto $label$19 
	
.LABEL $label$20
	$4 = $3
	
.LABEL $label$19
	*($0) = $3
	CALL $52($4)
	
.LABEL $label$18
	*([0] + [4]) = ($9 + [128])
}

void .FUNC _ZN5eosio4fund6refundEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [176])
	*([0] + [4]) = $14
	CALL require_auth($1)
	$10 = (int_64)0
	$11 = (int_64)59
	$7 = [1184]
	$8 = (int_64)0
	
.LOOP $label$1:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($7)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$1 }
	$5 = [0]
	$7 = [0]
	if ( ((int_64)$8 == (int_64)$1) ){ goto $label$5 }
	$10 = (int_64)0
	$11 = (int_64)59
	$7 = [1200]
	$8 = (int_64)0
	
.LOOP $label$6:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$7 }
	$2 = *($7)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$2 = ($2 + [165])
	goto $label$8 
	
.LABEL $label$9
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$7
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$6 }
	$7 = [0]
	if ( ((int_64)$8 == (int_64)$1) ){ goto $label$5 }
	$10 = (int_64)0
	$11 = (int_64)59
	$7 = [1216]
	$8 = (int_64)0
	
.LOOP $label$10:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$11 }
	$2 = *($7)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$2 = ($2 + [165])
	goto $label$12 
	
.LABEL $label$13
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$11
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$10 }
	$7 = ((int_64)$8 != (int_64)$1)
	
.LABEL $label$5
	CALL eosio_assert($7, [1232])
	*(($14 + [136])) = [0]
	*($14 + [120]) = (int_64)-1
	*($14 + [128]) = (int_64)0
	$10 = *($0)
	*($14 + [104]) = $10
	*($14 + [112]) = $10
	*($14 + [140]) = [0]
	$7 = CALL db_find_i64($10, $10, (int_64)8419268397136609280, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$14 }
	$5 = CALL $17(($14 + [104]), $7)
	CALL eosio_assert(((int_32)*($5 + [32]) == (int_32)($14 + [104])), [384])
	
.LABEL $label$14
	$3 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($3, [1264])
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)[1]), [1312])
	$7 = [0]
	$10 = *($5 + [16])
	if ( (int_64)($10 == 0) ){ goto $label$15 }
	$7 = ((uint_64)$10 <= (uint_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295))
	
.LABEL $label$15
	CALL eosio_assert($7, [1328])
	$4 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [784]
	$8 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$21 }
	$2 = *($7)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$2 = ($2 + [165])
	goto $label$19 
	
.LABEL $label$21
	$11 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$17
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$11 | (int_64)$8)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$16 }
	$10 = (int_64)0
	$11 = (int_64)59
	$7 = [800]
	$12 = (int_64)0
	
.LOOP $label$22:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$23 }
	$2 = *($7)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$2 = ($2 + [165])
	goto $label$24 
	
.LABEL $label$25
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$23
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$12 = ((int_64)$9 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$22 }
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [816]
	$13 = (int_64)0
	
.LOOP $label$26:
	if ( ((uint_64)$10 > (uint_64)(int_64)7) ){ goto $label$31 }
	$2 = *($7)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$2 = ($2 + [165])
	goto $label$29 
	
.LABEL $label$31
	$11 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$30
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$28
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$27
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$26 }
	$11 = *($5 + [8])
	CALL eosio_assert((uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [944])
	$10 = (int_64)5459782
	$7 = [0]
	
.LOOP $label$34:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$33 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$35 }
	
.LOOP $label$36:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$33 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$36 }
	
.LABEL $label$35
	$2 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	$2 = [0]
	
.LABEL $label$32
	CALL eosio_assert($2, [560])
	*(($14 + [8])) = [0]
	*($14) = (int_64)0
	$7 = CALL strlen([1344])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$37 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$40 }
	*($14) = ($7 << [1])
	$2 = ($14 | [1])
	if ( $7 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	$6 = (($7 + [16]) & [-16])
	$2 = CALL $51($6)
	*($14) = ($6 | [1])
	*($14 + [8]) = $2
	*($14 + [4]) = $7
	
.LABEL $label$39
	CALL memcpy($2, [1344], $7)
	
.LABEL $label$38
	*(($2 + $7)) = [0]
	*((($14 + [16]) + [24])) = (int_64)1397704196
	*(($2 = (($14 + [16]) + [36]))) = *($14 + [4])
	*($14 + [24]) = $1
	$7 = ($14 + [8])
	*(($14 + [56])) = *($7)
	*($14 + [16]) = *($0)
	*($14 + [32]) = $11
	*($14 + [48]) = *($14)
	*($14) = [0]
	*($14 + [4]) = [0]
	*($7) = [0]
	*($14 + [64]) = $12
	*($14 + [72]) = $13
	*(($7 = CALL $51([16]))) = $4
	*($7 + [8]) = $8
	*((($14 + [64]) + [32])) = [0]
	$0 = ($7 + [16])
	*((($14 + [64]) + [24])) = $0
	*(($14 + [84])) = $0
	*($14 + [80]) = $7
	*($14 + [92]) = [0]
	*((($14 + [64]) + [36])) = [0]
	$7 = *($14 + [48])
	$2 = ( *($2) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($2 + [32])
	$10 = (CASTING uint_64)(uint_32 $2)
	$2 = ($14 + [92])
	
.LOOP $label$41:
	$7 = ($7 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$41 }
	if ( ($7 == 0) ){ goto $label$43 }
	CALL $22($2, $7)
	$2 = *(($14 + [96]))
	$7 = *(($14 + [92]))
	goto $label$42 
	
.LABEL $label$43
	$2 = [0]
	$7 = [0]
	
.LABEL $label$42
	*($14 + [148]) = $7
	*($14 + [144]) = $7
	*($14 + [152]) = $2
	*($14 + [160]) = ($14 + [144])
	*($14 + [168]) = ($14 + [16])
	CALL $23(($14 + [168]), ($14 + [160]))
	CALL $24(($14 + [144]), ($14 + [64]))
	$7 = *($14 + [144])
	CALL send_inline($7, (*($14 + [148]) - $7))
	$7 = *($14 + [144])
	if ( ($7 == 0) ){ goto $label$44 }
	*($14 + [148]) = $7
	CALL $52($7)
	
.LABEL $label$44
	$7 = *($14 + [92])
	if ( ($7 == 0) ){ goto $label$45 }
	*(($14 + [96])) = $7
	CALL $52($7)
	
.LABEL $label$45
	$7 = *($14 + [80])
	if ( ($7 == 0) ){ goto $label$46 }
	*(($14 + [84])) = $7
	CALL $52($7)
	
.LABEL $label$46
	if ( ((*(($14 + [48])) & [1]) == 0) ){ goto $label$47 }
	CALL $52(*(($14 + [56])))
	
.LABEL $label$47
	if ( ((*($14) & [1]) == 0) ){ goto $label$48 }
	CALL $52(*(($14 + [8])))
	
.LABEL $label$48
	CALL eosio_assert($3, [864])
	CALL eosio_assert($3, [912])
	$7 = CALL db_next_i64(*($5 + [36]), ($14 + [16]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$49 }
	CALL $17(($14 + [104]), $7)
	
.LABEL $label$49
	CALL $36(($14 + [104]), $5)
	$5 = *($14 + [128])
	if ( ($5 == 0) ){ goto $label$50 }
	$0 = ($14 + [132])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$52 }
	
.LOOP $label$53:
	$7 = ($7 + [-24])
	$2 = *($7)
	*($7) = [0]
	if ( ($2 == 0) ){ goto $label$54 }
	CALL $52($2)
	
.LABEL $label$54
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$53 }
	$7 = *(($14 + [128]))
	goto $label$51 
	
.LABEL $label$52
	$7 = $5
	
.LABEL $label$51
	*($0) = $5
	CALL $52($7)
	
.LABEL $label$50
	*([0] + [4]) = ($14 + [176])
	return (unreachable)
	
.LABEL $label$37
	CALL $53($14)
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [80])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [80])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [352])
	CALL memcpy($2, *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [80])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [80])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [80])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [80])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [80])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC $59 ()
{
	(unreachable)
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [9860])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [9668]
	$1 = (((int_32)$2 * (int_32)[12]) + [9668])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1360]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1376]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [1392])
	
.LABEL $label$7
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [800]
	$7 = (int_64)0
	
.LOOP $label$14:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$15 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$3 = ($3 + [165])
	goto $label$16 
	
.LABEL $label$17
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$15
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$14 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$21 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [1456]
	$7 = (int_64)0
	
.LOOP $label$22:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$23 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$3 = ($3 + [165])
	goto $label$24 
	
.LABEL $label$25
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$23
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$22 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$20 }
	
.LABEL $label$21
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [816]
	$7 = (int_64)0
	
.LOOP $label$26:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$31 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$3 = ($3 + [165])
	goto $label$29 
	
.LABEL $label$31
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$30
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$28
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$27
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$26 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$19 }
	
.LABEL $label$20
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$18 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [816]
	$7 = (int_64)0
	
.LOOP $label$32:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$37 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$36 }
	$3 = ($3 + [165])
	goto $label$35 
	
.LABEL $label$37
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$36
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$35
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$34
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$33
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$32 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$18 }
	
.LABEL $label$19
	*($9 + [120]) = $0
	if ( ((int_64)$2 <= (int_64)-3075276126730321921) ){ goto $label$43 }
	if ( ((int_64)$2 > (int_64)-3075276112654237697) ){ goto $label$42 }
	if ( ((int_64)$2 == (int_64)-3075276126730321920) ){ goto $label$41 }
	if ( ((int_64)$2 != (int_64)-3075276117184086016) ){ goto $label$18 }
	*($9 + [68]) = [0]
	*($9 + [64]) = [1]
	*($9 + [56 align=4]) = *($9 + [64])
	CALL $40(($9 + [120]), ($9 + [56]))
	goto $label$18 
	
.LABEL $label$43
	if ( ((int_64)$2 == (int_64)-5001342339331915776) ){ goto $label$40 }
	if ( ((int_64)$2 == (int_64)-3617168760277827584) ){ goto $label$39 }
	if ( ((int_64)$2 != (int_64)-3102536759825661952) ){ goto $label$18 }
	*($9 + [100]) = [0]
	*($9 + [96]) = [2]
	*($9 + [24 align=4]) = *($9 + [96])
	CALL $40(($9 + [120]), ($9 + [24]))
	goto $label$18 
	
.LABEL $label$42
	if ( ((int_64)$2 == (int_64)-3075276112654237696) ){ goto $label$38 }
	if ( ((int_64)$2 != (int_64)3774946674573574144) ){ goto $label$18 }
	*($9 + [84]) = [0]
	*($9 + [80]) = [3]
	*($9 + [40 align=4]) = *($9 + [80])
	CALL $40(($9 + [120]), ($9 + [40]))
	goto $label$18 
	
.LABEL $label$41
	*($9 + [92]) = [0]
	*($9 + [88]) = [4]
	*($9 + [32 align=4]) = *($9 + [88])
	CALL $41(($9 + [120]), ($9 + [32]))
	goto $label$18 
	
.LABEL $label$40
	*($9 + [108]) = [0]
	*($9 + [104]) = [5]
	*($9 + [16 align=4]) = *($9 + [104])
	CALL $40(($9 + [120]), ($9 + [16]))
	goto $label$18 
	
.LABEL $label$39
	*($9 + [116]) = [0]
	*($9 + [112]) = [6]
	*($9 + [8 align=4]) = *($9 + [112])
	CALL $39(($9 + [120]), ($9 + [8]))
	goto $label$18 
	
.LABEL $label$38
	*($9 + [76]) = [0]
	*($9 + [72]) = [7]
	*($9 + [48 align=4]) = *($9 + [72])
	CALL $42(($9 + [120]), ($9 + [48]))
	
.LABEL $label$18
	*([0] + [4]) = ($9 + [128])
}

void .FUNC $52 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC $53 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $51(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $52($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $55 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $51($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}