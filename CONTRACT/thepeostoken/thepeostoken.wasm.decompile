(data (i32.const 8192) "invalid symbol name\00unexpected error in fixed_bytes constructor\00")
(data (i32.const 8256) "invalid supply\00malloc_from_freed was designed to only be called after _heap was completely allocated\00write\00")
(data (i32.const 8363) "max-supply must be positive\00")
(data (i32.const 8391) "token with symbol already exists\00")
(data (i32.const 8424) "token with symbol doesn\'t exists\00")
(data (i32.const 8457) "max_supply must be larger that available supply\00")
(data (i32.const 8505) "symbol precission mismatch\00")
(data (i32.const 8532) "memo has more than 256 bytes\00")
(data (i32.const 8561) "token with symbol does not exist, create token before issue\00")
(data (i32.const 8621) "invalid quantity\00")
(data (i32.const 8638) "must issue positive quantity\00")
(data (i32.const 8667) "symbol precision mismatch\00")
(data (i32.const 8693) "quantity exceeds available supply\00")
(data (i32.const 8727) "token with symbol does not exist\00")
(data (i32.const 8760) "must retire positive quantity\00")
(data (i32.const 8790) "cannot transfer to self\00")
(data (i32.const 8814) "to account does not exist\00")
(data (i32.const 8840) "unable to find key\00")
(data (i32.const 8859) "must transfer positive quantity\00")
(data (i32.const 8891) "Invalid symbol name\00")
(data (i32.const 8911) "no balance object found\00")
(data (i32.const 8935) "There must be no balance object\00")
(data (i32.const 8967) "overdrawn balance\00")
(data (i32.const 8985) "Balance row already deleted or never existed. Action won\'t have any effect.\00")
(data (i32.const 9061) "Cannot close because the balance is not zero.\00")
(data (i32.const 9107) "pEOS marketing/operations budget claimed\00")
(data (i32.const 9148) "pEOS team can only issue their tokens over 400 days\00")
(data (i32.const 9200) "pEOS token budget for <1.0000 PEOS airdrop accounts and contracts claimed\00")
(data (i32.const 9274) "token issuing era finished\00")
(data (i32.const 9301) "Unknown UTXO\00")
(data (i32.const 9314) "Invalid asset\00")
(data (i32.const 9328) "Symbol precision mismatch\00")
(data (i32.const 9354) "Output amount must be positive\00")
(data (i32.const 9385) "Inputs don\'t cover outputs\00")
(data (i32.const 9413) "Must load utxo with positive quantity\00")
(data (i32.const 9451) "Your dividents from staked PEOS tokens\00")
(data (i32.const 9490) "PEOS tokens staked\00")
(data (i32.const 9509) "nothing staked\00")
(data (i32.const 9524) "must unstake positive quantity\00")
(data (i32.const 9555) "refund request not found\00")
(data (i32.const 9580) "refund is not available yet\00")
(data (i32.const 9608) "Your unstaked PEOS tokens\00")
(data (i32.const 9634) "Only distribute PEOS\00")
(data (i32.const 9655) "Can\'t distribute negative tokens\00")
(data (i32.const 9688) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 9737) "attempt to add asset with different symbol\00")
(data (i32.const 9780) "addition underflow\00")
(data (i32.const 9799) "addition overflow\00")
(data (i32.const 9817) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 9876) "attempt to subtract asset with different symbol\00")
(data (i32.const 9924) "subtraction underflow\00")
(data (i32.const 9946) "subtraction overflow\00")
(data (i32.const 9967) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 10018) "error reading iterator\00")
(data (i32.const 10041) "read\00")
(data (i32.const 10046) "cannot create objects in table of another contract\00")
(data (i32.const 10097) "write\00")
(data (i32.const 10103) "object passed to modify is not in multi_index\00")
(data (i32.const 10149) "cannot modify objects in table of another contract\00")
(data (i32.const 10200) "updater cannot change primary key when modifying an object\00")
(data (i32.const 10259) "object passed to erase is not in multi_index\00")
(data (i32.const 10304) "cannot erase objects in table of another contract\00")
(data (i32.const 10354) "attempt to remove object that was not in multi_index\00")
(data (i32.const 10407) "cannot pass end iterator to erase\00")
(data (i32.const 10441) "cannot increment end iterator\00")
(data (i32.const 10471) "cannot pass end iterator to modify\00")
(data (i32.const 10506) "get\00")
(data (i32.const 10510) "Divs not realized\00")
(import "env" "require_auth" (func $fimport$0 (param i64)))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "db_find_i64" (func $fimport$2 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$3 (result i64)))
(import "env" "db_store_i64" (func $fimport$4 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$5 (param i32 i64 i32 i32)))
(import "env" "current_time" (func $fimport$6 (result i64)))
(import "env" "is_account" (func $fimport$7 (param i64) (result i32)))
(import "env" "require_recipient" (func $fimport$8 (param i64)))
(import "env" "has_auth" (func $fimport$9 (param i64) (result i32)))
(import "env" "db_remove_i64" (func $fimport$10 (param i32)))
(import "env" "db_next_i64" (func $fimport$11 (param i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$12 (param i32 i32 i32) (result i32)))
(import "env" "action_data_size" (func $fimport$13 (result i32)))
(import "env" "read_action_data" (func $fimport$14 (param i32 i32) (result i32)))
(import "env" "db_get_i64" (func $fimport$15 (param i32 i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$16 (param i32 i32)))
(import "env" "db_idx256_find_primary" (func $fimport$17 (param i64 i64 i64 i32 i32 i64) (result i32)))
(import "env" "db_idx256_remove" (func $fimport$18 (param i32)))
(import "env" "db_idx256_store" (func $fimport$19 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$20 (param i32 i32 i32) (result i32)))
(import "env" "abort" (func $fimport$21))
(import "env" "memmove" (func $fimport$22 (param i32 i32 i32) (result i32)))
(import "env" "prints_l" (func $fimport$23 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$24 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$25 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$26 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$27 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$28 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$29 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$30 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$31 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$32 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$33 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$34 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$35 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$36 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$37 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$38 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$39 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$40 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$41 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$42 (param i32 i32) (result i32)))
(import "env" "assert_sha256" (func $fimport$43 (param i32 i32 i32)))
(import "env" "assert_sha1" (func $fimport$44 (param i32 i32 i32)))
(import "env" "assert_sha512" (func $fimport$45 (param i32 i32 i32)))
(import "env" "assert_ripemd160" (func $fimport$46 (param i32 i32 i32)))
(import "env" "sha256" (func $fimport$47 (param i32 i32 i32)))
(import "env" "__ashlti3" (func $fimport$48 (param i32 i64 i64 i32)))
(import "env" "sha1" (func $fimport$49 (param i32 i32 i32)))
(import "env" "sha512" (func $fimport$50 (param i32 i32 i32)))
(import "env" "ripemd160" (func $fimport$51 (param i32 i32 i32)))
(import "env" "recover_key" (func $fimport$52 (param i32 i32 i32 i32 i32) (result i32)))
(import "env" "assert_recover_key" (func $fimport$53 (param i32 i32 i32 i32 i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $71))
(export "_Znwj" (func $112))
(export "_ZdlPv" (func $114))
(export "_Znaj" (func $113))
(export "_ZdaPv" (func $115))
(export "_ZnwjSt11align_val_t" (func $116))
(export "_ZnajSt11align_val_t" (func $117))
(export "_ZdlPvSt11align_val_t" (func $118))
(export "_ZdaPvSt11align_val_t" (func $119))
(table $0 16 16 anyfunc)
(elem (i32.const 1) $58 $20 $1 $30 $29 $25 $7 $32 $66 $31 $40 $46 $5 $51 $68)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 18944))
(global $global$2 i32 (i32.const 18944))


int_32 .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10097])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [10097])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10041])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10041])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [10041])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [7]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($6) = ((int_32)*($2 + [7]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10097])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10097])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10097])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10097])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $96(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $98(CALL $97($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10097])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10097])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

int_32 .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10097])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [10097])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10097])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10097])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10097])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [10506])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$7 = (CASTING uint_32)(uint_64 $4)
	$3 = *($1)
	$8 = *($1 + [4])
	$6 = int_32(($8 - $3) >> [6])
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$5 }
	CALL $110($1, ($7 - $6))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$6 }
	$8 = ($3 + ($7 << [6]))
	*(($1 + [4])) = $8
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = ($2 + [24])
	
.LOOP $label$7:
	*($2 + [8]) = $0
	*($2 + [16]) = $3
	*($7) = ($3 + [48])
	*($2 + [20]) = ($3 + [40])
	CALL $111(($2 + [16]), ($2 + [8]))
	$3 = ($3 + [64])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$global$0 = $2
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = [0]
	$3 = (*(($1 + [12])) - *($1 + [8]))
	$4 = ((int_32)$3 / (int_32)[80])
	$5 = *($1)
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((uint_32)$4 >= (uint_32)[53687092]) ){ goto $label$2 }
	$3 = CALL _Znwj($3)
	*((($2 + [40]) + [8])) = ($3 + ((int_32)$4 * (int_32)[80]))
	*($2 + [40]) = $3
	*($2 + [44]) = $3
	$6 = *(($1 + [8]))
	$4 = (*(($1 + [12])) - $6)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($3, $6, $4)
	*($2 + [44]) = ($3 + ((int_32)((uint_32)$4 / (uint_32)[80]) * (int_32)[80]))
	
.LABEL $label$3
	*($2 + [32]) = [0]
	*($2 + [24]) = (int_64)0
	$3 = (*(($1 + [24])) - *($1 + [20]))
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = int_32($3 >> [6])
	if ( ((uint_32)$4 >= (uint_32)[67108864]) ){ goto $label$1 }
	$3 = CALL _Znwj($3)
	*(($2 + [32])) = ($3 + ($4 << [6]))
	*($2 + [24]) = $3
	*($2 + [28]) = $3
	$6 = *(($1 + [20]))
	$4 = (*(($1 + [24])) - $6)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($3, $6, $4)
	*($2 + [28]) = ($3 + $4)
	
.LABEL $label$4
	$1 = CALL $121(($2 + [8]), ($1 + [32]))
	*($2 + [56]) = $5
	$0 = *($0 + [4])
	$4 = *($0 + [4])
	$3 = (*($0) + int_32($4 >> [1]))
	$0 = *($0)
	if ( (($4 & [1]) == 0) ){ goto $label$5 }
	$0 = *((*($3) + $0))
	
.LABEL $label$5
	CALL void $3((int_32 ($2 + [56])), (int_32 ($2 + [40])), (int_32 ($2 + [24])), (int_32 $1), (int_32 $0))
	if ( ((*($1) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($1 + [8]))
	
.LABEL $label$6
	$1 = *($2 + [24])
	if ( ($1 == 0) ){ goto $label$7 }
	*($2 + [28]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$7
	$1 = *($2 + [40])
	if ( ($1 == 0) ){ goto $label$8 }
	*($2 + [44]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$8
	$global$0 = ($2 + [64])
	return (unreachable)
	
.LABEL $label$2
	CALL $123(($2 + [40]))
	
.LABEL $label$1
	CALL $123(($2 + [24]))
	(unreachable)
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10041])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0)
	$5 = *($1)
	$4 = *($5 + [4])
	$7 = (int_64)0
	$8 = [0]
	
.LOOP $label$2:
	if ( ($4 <= *(($5 + [8]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10506])
	$4 = *(($5 + [4]))
	
.LABEL $label$3
	$0 = *($4)
	$3 = ($4 + [1])
	*(($5 + [4])) = $3
	$4 = ($8 & [255])
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($0 & [127]) << $4)))
	$8 = ($4 + [7])
	$4 = $3
	if ( ($0 & [128]) ){ goto $label$2 }
	*($6 + [8]) = $7
	$4 = ($6 + [12])
	if ( ((uint_32)(*(($5 + [8])) - $3) > (uint_32)[32]) ){ goto $label$4 }
	CALL eosio_assert([0], [10041])
	$3 = *(($5 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $3, [33])
	*(($4 = ($5 + [4]))) = (*($4) + [33])
	$5 = ($6 + [48])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10041])
	$0 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10041])
	$0 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $0, [8])
	*(($6 + [56])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10041])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10041])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10041])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10041])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10041])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $123 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

int_32 .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $131($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)*(($1 + [8200])) == (int_32)*($9)) ){ goto $label$10 }
	CALL eosio_assert([0], [8271])
	
.LABEL $label$10
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$11:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$12 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$13 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$14 }
	
.LABEL $label$13
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$15 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$15
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$12
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$11 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $131 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10540]) == 0) ){ goto $label$2 }
	$2 = *([0] + [10544])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [10540]) = [1]
	$2 = ($2 << [16])
	*([0] + [10544]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10544])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [10544]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [10540]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [10540]) = [1]
	$3 = ($3 << [16])
	*([0] + [10544]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10544])
	
.LABEL $label$10
	*([0] + [10544]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

void .FUNC $132 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [18932])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [18740]
	$3 = (((int_32)$1 * (int_32)[12]) + [18740])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

void .FUNC $133 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL sha256($1, $2, ($3 + [16]))
	$4 = (int_64)0
	$1 = [16]
	$2 = [0]
	$5 = (int_64)0
	
.LOOP $label$2:
	$6 = (($3 + [16]) + $2)
	if ( ($1 <= [2]) ){ goto $label$3 }
	$4 = ((int_64)$4 | (int_64)*($6))
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)(uint_64)$4 >> (uint_64)(int_64)56))
	$1 = ($1 + [-1])
	$4 = ((int_64)$4 << (int_64)8)
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [8212])
	
.LABEL $label$4
	*($0 + [8]) = $5
	*($0) = ((int_64)$4 | (int_64)*($6))
	$1 = [16]
	$0 = ($0 + [16])
	$4 = (int_64)0
	$5 = (int_64)0
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$1 == (int_32)[16]) ){ goto $label$5 }
	if ( ($1 <= [2]) ){ goto $label$6 }
	CALL __ashlti3($3, $4, $5, (($1 << [3]) + [-8]))
	$5 = *(($3 + [8]))
	$4 = *($3)
	
.LABEL $label$6
	*($0) = $4
	*($0 + [8]) = $5
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $134 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [160])
	$global$0 = $3
	$4 = *($0)
	*($3 + [131]) = (uint_64)$4 >> (uint_64)(int_64)32)
	*($3 + [130]) = (uint_64)$4 >> (uint_64)(int_64)40)
	*($3 + [129]) = (uint_64)$4 >> (uint_64)(int_64)48)
	*($3 + [128]) = (uint_64)$4 >> (uint_64)(int_64)56)
	$5 = *(($0 + [8]))
	*($3 + [123]) = (uint_64)$5 >> (uint_64)(int_64)32)
	*($3 + [122]) = (uint_64)$5 >> (uint_64)(int_64)40)
	*($3 + [121]) = (uint_64)$5 >> (uint_64)(int_64)48)
	*($3 + [120]) = (uint_64)$5 >> (uint_64)(int_64)56)
	$6 = (CASTING uint_32)(uint_64 $4)
	*($3 + [135]) = $6
	*($3 + [134]) = uint_32($6 >> [8])
	*($3 + [133]) = uint_32($6 >> [16])
	*($3 + [132]) = uint_32($6 >> [24])
	$6 = (CASTING uint_32)(uint_64 $5)
	*($3 + [127]) = $6
	*($3 + [126]) = uint_32($6 >> [8])
	*($3 + [125]) = uint_32($6 >> [16])
	*($3 + [124]) = uint_32($6 >> [24])
	$4 = *(($0 + [24]))
	*($3 + [143]) = $4
	$5 = *($0 + [16])
	*($3 + [147]) = (uint_64)$5 >> (uint_64)(int_64)32)
	*($3 + [146]) = (uint_64)$5 >> (uint_64)(int_64)40)
	*($3 + [145]) = (uint_64)$5 >> (uint_64)(int_64)48)
	*($3 + [144]) = (uint_64)$5 >> (uint_64)(int_64)56)
	*($3 + [139]) = (uint_64)$4 >> (uint_64)(int_64)32)
	*($3 + [138]) = (uint_64)$4 >> (uint_64)(int_64)40)
	*($3 + [137]) = (uint_64)$4 >> (uint_64)(int_64)48)
	*($3 + [136]) = (uint_64)$4 >> (uint_64)(int_64)56)
	$0 = (CASTING uint_32)(uint_64 $4)
	*($3 + [142]) = uint_32($0 >> [8])
	*($3 + [141]) = uint_32($0 >> [16])
	*($3 + [140]) = uint_32($0 >> [24])
	$0 = (CASTING uint_32)(uint_64 $5)
	*($3 + [151]) = $0
	*($3 + [150]) = uint_32($0 >> [8])
	*($3 + [149]) = uint_32($0 >> [16])
	*($3 + [148]) = uint_32($0 >> [24])
	$7 = ($3 + [118])
	$4 = *($1)
	$6 = ($3 + [48])
	
.LOOP $label$2:
	$0 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($3) = (($8) << [7]) | ($0 & [127]))
	$0 = $6
	if ( ((int_32)($7 - $0) <= (int_32)[0]) ){ goto $label$3 }
	CALL memcpy($0, $3, [1])
	$6 = ($0 + [1])
	if ( $8 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [8357])
	CALL memcpy($0, $3, [1])
	$6 = ($0 + [1])
	if ( $8 ){ goto $label$2 }
	
.LABEL $label$1
	$8 = ($1 + [4])
	if ( ((int_32)($7 - $6) > (int_32)[64]) ){ goto $label$4 }
	CALL eosio_assert([0], [8357])
	
.LABEL $label$4
	CALL memcpy($6, $8, [65])
	$1 = ($0 + [66])
	$7 = ($3 + [38])
	$4 = *($2)
	$6 = $3
	
.LOOP $label$5:
	$0 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($3 + [159]) = (($8) << [7]) | ($0 & [127]))
	$0 = $6
	if ( ((int_32)($7 - $0) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [8357])
	
.LABEL $label$6
	CALL memcpy($0, ($3 + [159]), [1])
	$6 = ($0 + [1])
	if ( $8 ){ goto $label$5 }
	$8 = ($2 + [4])
	if ( ((int_32)($7 - $6) > (int_32)[32]) ){ goto $label$7 }
	CALL eosio_assert([0], [8357])
	
.LABEL $label$7
	CALL memcpy($6, $8, [33])
	CALL assert_recover_key(($3 + [120]), ($3 + [48]), ($1 - ($3 + [48])), $3, (($0 + [34]) - $3))
	$global$0 = ($3 + [160])
}

int_32 .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $120 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $123($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $126 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

void .FUNC $49 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	float_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10103])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10149])
	
.LABEL $label$2
	$6 = (float_64)
	if ( ((float_64)(float_64)|$6((CASTING float_64)(int_64 *($1 + [32])) - *(*($3))))| < (float_64)(float_64)9223372036854775808) ){ goto $label$4 }
	$7 = (int_64)-9223372036854775808
	goto $label$3 
	
.LABEL $label$4
	$7 = (Rounds 0)($6)
	
.LABEL $label$3
	*($1 + [32]) = $7
	$7 = *($1 + [8])
	$3 = $4
	$4 = ($3 + [-64])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [16])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [48])
	CALL $105(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [60]), $2, $4, [56])
	$2 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( (uint_64)($2) <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$5
	$global$0 = ($5 + [48])
}

int_32 .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10018])
	
.LABEL $label$5
	$4 = CALL $129($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([72])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [56]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [32])
	*($3 + [44]) = ($5 + [48])
	CALL $104(($3 + [32]), ($3 + [24]))
	*($5 + [60]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $54(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $132($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $125 (int_32 $0)
{
}

int_32 .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10018])
	
.LABEL $label$5
	$2 = CALL $129($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10041])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10041])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $45(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $132($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

int_64 .FUNC $42 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [80])
	$global$0 = $1
	*(($1 + [40])) = [0]
	*($1 + [24]) = (int_64)-1
	*($1 + [32]) = (int_64)0
	$2 = *($0)
	*($1 + [8]) = $2
	*($1 + [16]) = $2
	*($1) = (int_64)0
	$3 = CALL db_find_i64($2, $2, (int_64)-2991720258727546880, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $43(($1 + [8]), $3)
	if ( ((int_32)*($0 + [16]) == (int_32)($1 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [9967])
	
.LABEL $label$4
	*($1 + [64]) = $1
	CALL $44(($1 + [8]), $0, ($1 + [64]))
	$2 = *($1)
	$4 = *($1 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0)
	if ( ((int_64)$2 == (int_64)CALL current_receiver()) ){ goto $label$5 }
	CALL eosio_assert([0], [10046])
	
.LABEL $label$5
	*(($0 = CALL _Znwj([32])) + [16]) = ($1 + [8])
	*($0 + [8]) = (int_64)1
	CALL memcpy(($1 + [64]), $0, [8])
	CALL memcpy((($1 + [64]) | [8]), ($0 + [8]), [8])
	$2 = *($0)
	$4 = CALL db_store_i64(*((($1 + [8]) + [8])), (int_64)-2991720258727546880, $5, $2, ($1 + [64]), [16])
	*($0 + [20]) = $4
	$3 = (($1 + [8]) + [16])
	if ( (uint_64)($2 <= *($3)) ){ goto $label$6 }
	*($3) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($1 + [56]) = $0
	$2 = *($0)
	*($1 + [64]) = $2
	*($1 + [52]) = $4
	$6 = ($1 + [36])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*((($1 + [8]) + [32]))) ){ goto $label$9 }
	*($3 + [8]) = $2
	*($3 + [16]) = $4
	*($1 + [56]) = [0]
	*($3) = $0
	*($6) = ($3 + [24])
	$0 = *($1 + [56])
	*($1 + [56]) = [0]
	if ( $0 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $45(($1 + [32]), ($1 + [56]), ($1 + [64]), ($1 + [52]))
	$0 = *($1 + [56])
	*($1 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv($0)
	
.LABEL $label$7
	$2 = *($1)
	$4 = *($1 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($1 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$13 }
	CALL _ZdlPv($3)
	
.LABEL $label$13
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($1 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $4
	
.LABEL $label$10
	*($6) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($1 + [80])
	return $2
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	*($1) = CALL $42(*($5))
	$6 = *($5 + [4])
	*($1 + [8 align=4]) = *($6)
	*(($1 + [37])) = *(($6 + [29]))
	*(($1 + [32])) = *(($6 + [24]))
	*(($1 + [24])) = *(($6 + [16]))
	*(($1 + [16])) = *(($6 + [8]))
	$6 = *($5 + [8])
	*($1 + [48]) = *($6)
	*(($1 + [56])) = *(($6 + [8]))
	$7 = ($1 + [48])
	$8 = ($1 + [8])
	$9 = *($1 + [8])
	$6 = [57]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ($6 <= [513]) ){ goto $label$3 }
	$5 = CALL $129($6)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$2
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($5 + $6)
	*($3 + [56]) = $3
	*($3 + [20]) = $8
	*($3 + [16]) = $1
	*($3 + [24]) = $7
	CALL $102(($3 + [16]), ($3 + [56]))
	$9 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($4 + [8]), (int_64)-2991713964573851648, *(*($0 + [8])), $9, $5, $6)
	if ( ($6 <= [513]) ){ goto $label$4 }
	CALL $132($5)
	
.LABEL $label$4
	if ( (uint_64)($9 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$9 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$11 = *($1)
	CALL $133(($3 + [16]), ($1 + [12]), [33])
	*($1 + [72]) = CALL db_idx256_store($9, (int_64)-2991713964573851648, $10, $11, ($3 + [16]), [2])
	$global$0 = ($3 + [64])
}

void .FUNC $40 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [208])
	$global$0 = $4
	CALL require_auth(*($1))
	$5 = [0]
	$6 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$7 = $8
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$7 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = (int_64)0
	if ( ((int_64)*($3) <= (int_64)0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [8192])
	$7 = (int_64)0
	if ( ((int_64)*($3) > (int_64)0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9413])
	
.LABEL $label$1
	$9 = [0]
	*(($4 + [112])) = [0]
	*($4 + [96]) = (int_64)-1
	*($4 + [104]) = $7
	$7 = *($0)
	*($4 + [80]) = $7
	*($4 + [88]) = $6
	$5 = CALL db_find_i64($7, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$9 }
	$9 = CALL $2(($4 + [80]), $5)
	if ( ((int_32)*($9 + [40]) == (int_32)($4 + [80])) ){ goto $label$8 }
	CALL eosio_assert([0], [9967])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8727])
	
.LABEL $label$8
	$7 = *($0)
	*($4 + [56]) = (int_64)3617214756542218240
	*($4 + [48]) = *($1)
	*((($5 = CALL _Znwj([16])) + [8])) = *($4 + [56])
	*($5) = *($4 + [48])
	*(($4 + [24])) = *(($3 + [8]))
	$8 = *($9 + [32])
	*(($4 + [40])) = [0]
	*($4 + [64]) = $5
	$5 = ($5 + [16])
	*($4 + [72]) = $5
	*($4 + [68]) = $5
	*($4) = *($1)
	*($4 + [16]) = *($3)
	*($4 + [8]) = $8
	*($4 + [32]) = (int_64)0
	$9 = ($4 + [32])
	$5 = CALL $126([9412])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$10 }
	$10 = ($4 + [16])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$13 }
	*(($4 + [32])) = ($5 << [1])
	$11 = ($9 + [1])
	if ( $5 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$12 = (($5 + [16]) & [-16])
	$11 = CALL _Znwj($12)
	*(($4 + [40])) = $11
	*(($4 + [36])) = $5
	*($4 + [32]) = ($12 | [1])
	
.LABEL $label$12
	CALL memcpy($11, [9412], $5)
	
.LABEL $label$11
	*(($11 + $5)) = [0]
	$5 = (($4 + [64]) + [8])
	$11 = *($5)
	*($5) = [0]
	*(($4 + [168])) = *(($10 + [8]))
	*(($5 = (($4 + [144]) + [40]))) = *(($9 + [8]))
	$8 = *($9)
	*(($4 + [32])) = [0]
	*($4 + [192]) = *($4 + [64])
	*($4 + [200]) = $11
	*($4 + [64]) = (int_64)0
	*($4 + [144]) = *($4)
	*($4 + [152]) = *(($4 + [8]))
	*($4 + [160]) = *($10)
	*($4 + [176]) = $8
	*(($4 + [36])) = [0]
	*(($4 + [40])) = [0]
	CALL $10($7, (int_64)-3617168760277827584, ($4 + [192]), ($4 + [144]))
	if ( ((*($4 + [176]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*($5))
	
.LABEL $label$14
	$5 = *($4 + [192])
	if ( ($5 == 0) ){ goto $label$15 }
	*($4 + [196]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$15
	if ( ((*(($4 + [32])) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*(($4 + [40])))
	
.LABEL $label$16
	$8 = *($1)
	$7 = *($0)
	*((($4 + [144]) + [32])) = [0]
	*($4 + [152]) = $7
	*($4 + [144]) = $7
	*($4 + [160]) = (int_64)-1
	*($4 + [168]) = (int_64)0
	*($4 + [180]) = [0]
	*($4 + [196]) = $2
	*($4 + [192]) = $0
	*($4 + [200]) = $3
	*($4 + [136]) = $8
	if ( ((int_64)$7 == (int_64)CALL current_receiver()) ){ goto $label$17 }
	CALL eosio_assert([0], [10046])
	
.LABEL $label$17
	*($4 + [52]) = ($4 + [192])
	*($4 + [48]) = ($4 + [144])
	*($4 + [56]) = ($4 + [136])
	*(($5 = CALL _Znwj([80])) + [48]) = (int_64)0
	*($5 + [8]) = [0]
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = ($4 + [144])
	CALL $41(($4 + [48]), $5)
	*($4 + [128]) = $5
	$7 = *($5)
	*($4 + [48]) = $7
	$10 = *($5 + [68])
	*($4 + [124]) = $10
	$3 = ($4 + [172])
	$9 = *($3)
	if ( ((uint_32)$9 >= (uint_32)*(($4 + [176]))) ){ goto $label$20 }
	*($9 + [8]) = $7
	*($9 + [16]) = $10
	*($4 + [128]) = [0]
	*($9) = $5
	*($3) = ($9 + [24])
	$5 = *($4 + [128])
	*($4 + [128]) = [0]
	if ( $5 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL $37(($4 + [168]), ($4 + [128]), ($4 + [48]), ($4 + [124]))
	$5 = *($4 + [128])
	*($4 + [128]) = [0]
	if ( ($5 == 0) ){ goto $label$18 }
	
.LABEL $label$19
	CALL _ZdlPv($5)
	
.LABEL $label$18
	$10 = *($4 + [168])
	if ( ($10 == 0) ){ goto $label$21 }
	$3 = ($4 + [172])
	$5 = *($3)
	if ( ((int_32)$5 == (int_32)$10) ){ goto $label$23 }
	
.LOOP $label$24:
	$5 = ($5 + [-24])
	$9 = *($5)
	*($5) = [0]
	if ( ($9 == 0) ){ goto $label$25 }
	CALL _ZdlPv($9)
	
.LABEL $label$25
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$24 }
	$5 = *(($4 + [168]))
	goto $label$22 
	
.LABEL $label$23
	$5 = $10
	
.LABEL $label$22
	*($3) = $10
	CALL _ZdlPv($5)
	
.LABEL $label$21
	$10 = *($4 + [104])
	if ( ($10 == 0) ){ goto $label$26 }
	$3 = ($4 + [108])
	$5 = *($3)
	if ( ((int_32)$5 == (int_32)$10) ){ goto $label$28 }
	
.LOOP $label$29:
	$5 = ($5 + [-24])
	$9 = *($5)
	*($5) = [0]
	if ( ($9 == 0) ){ goto $label$30 }
	CALL _ZdlPv($9)
	
.LABEL $label$30
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$29 }
	$5 = *(($4 + [104]))
	goto $label$27 
	
.LABEL $label$28
	$5 = $10
	
.LABEL $label$27
	*($3) = $10
	CALL _ZdlPv($5)
	
.LABEL $label$26
	$global$0 = ($4 + [208])
	return (unreachable)
	
.LABEL $label$10
	CALL $120($9)
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10018])
	
.LABEL $label$5
	$2 = CALL $129($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10041])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10041])
	
.LABEL $label$8
	$8 = ($5 + [16])
	CALL memcpy(($3 + [24]), $7, [8])
	*(($5 + [8])) = *($3 + [24])
	$7 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$9 }
	CALL eosio_assert([0], [10041])
	
.LABEL $label$9
	CALL memcpy($8, $7, [8])
	*($5 + [28]) = $1
	*($3 + [16]) = $5
	$9 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($3 + [24]) = $9)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $57(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $132($2)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL _ZdlPv($1)
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	float_64 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [176])
	$global$0 = $2
	CALL require_auth(*($1))
	*(($2 + [104])) = [0]
	*($2 + [88]) = (int_64)-1
	*($2 + [96]) = (int_64)0
	$3 = *($0)
	*($2 + [72]) = $3
	$4 = *($1)
	*($2 + [80]) = $4
	$5 = CALL db_find_i64($3, $4, (int_64)-4157661228816138240, (int_64)1397704016)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $47(($2 + [72]), $5)
	if ( ((int_32)*($5 + [24]) == (int_32)($2 + [72])) ){ goto $label$3 }
	CALL eosio_assert([0], [9967])
	
.LABEL $label$3
	if ( (int_64)(*($5) == 0) ){ goto $label$2 }
	$6 = [0]
	*(($2 + [64])) = [0]
	*($2 + [48]) = (int_64)-1
	*($2 + [56]) = (int_64)0
	$3 = *($0)
	*($2 + [32]) = $3
	*($2 + [40]) = $3
	$7 = CALL db_find_i64($3, $3, (int_64)5455799419175698432, (int_64)1397704016)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$5 }
	$6 = CALL $48(($2 + [32]), $7)
	if ( ((int_32)*($6 + [56]) == (int_32)($2 + [32])) ){ goto $label$6 }
	CALL eosio_assert([0], [9967])
	
.LABEL $label$6
	*($2 + [28]) = $6
	*($2 + [24]) = ($2 + [32])
	goto $label$4 
	
.LABEL $label$5
	*($2 + [28]) = [0]
	*($2 + [24]) = ($2 + [32])
	
.LABEL $label$4
	*($2 + [16]) = ((float_64)(float_64))(*($6 + [48]) - *($5 + [16])) * (float_64)(CASTING float_64)(int_64 *($5)))
	$3 = *($0)
	*($2 + [112]) = ($2 + [16])
	if ( $6 ){ goto $label$7 }
	CALL eosio_assert([0], [10471])
	
.LABEL $label$7
	CALL $49(($2 + [32]), $6, $3, ($2 + [112]))
	$3 = *($1)
	*($2 + [112]) = ($2 + [24])
	CALL $50(($2 + [72]), $5, $3, ($2 + [112]))
	$8 = *($2 + [16])
	if ( ((int_32)((float_64)$8 >= (float_64)(float_64)1) ^ (int_32)[1]) ){ goto $label$8 }
	if ( ((float_64)(float_64)|$8| < (float_64)(float_64)9223372036854775808) ){ goto $label$10 }
	$9 = (int_64)-9223372036854775808
	goto $label$9 
	
.LABEL $label$10
	$9 = (Rounds 0)($8)
	
.LABEL $label$9
	$10 = *($0)
	if ( (uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$11 }
	CALL eosio_assert([0], [9688])
	
.LABEL $label$11
	$3 = (int_64)1397704016
	$0 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$4 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$15 }
	$3 = $4
	$5 = $0
	$0 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$15
	$3 = $4
	
.LOOP $label$16:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$13 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$5 = ((int_32)$0 < (int_32)[6])
	$6 = ($0 + [1])
	$0 = $6
	if ( $5 ){ goto $label$16 }
	$0 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [8192])
	
.LABEL $label$12
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	$0 = CALL $126([9451])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$19 }
	*($2) = ($0 << [1])
	$5 = ($2 | [1])
	if ( $0 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$6 = (($0 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $0
	
.LABEL $label$18
	CALL memcpy($5, [9451], $0)
	
.LABEL $label$17
	*(($5 + $0)) = [0]
	$3 = *($2)
	*($2) = (int_64)0
	$5 = *($2 + [8])
	*($2 + [8]) = [0]
	$4 = *($1)
	*(($0 = CALL _Znwj([16]))) = $10
	*($0 + [8]) = (int_64)3617214756542218240
	*(($2 + [136])) = (int_64)357812228100
	*(($6 = ($2 + [152]))) = $5
	*($2 + [160]) = $0
	*($2 + [112]) = $10
	*($2 + [120]) = $4
	*($2 + [128]) = $9
	*($2 + [144]) = $3
	$0 = ($0 + [16])
	*($2 + [168]) = $0
	*($2 + [164]) = $0
	CALL $10($10, (int_64)-3617168760277827584, ($2 + [160]), ($2 + [112]))
	if ( ((*($2 + [144]) & [1]) == 0) ){ goto $label$20 }
	CALL _ZdlPv(*($6))
	
.LABEL $label$20
	$0 = *($2 + [160])
	if ( ($0 == 0) ){ goto $label$21 }
	*($2 + [164]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$21
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*(($2 + [8])))
	
.LABEL $label$8
	$6 = *($2 + [56])
	if ( ($6 == 0) ){ goto $label$2 }
	$1 = ($2 + [60])
	$0 = *($1)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$23 }
	
.LOOP $label$24:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$25 }
	CALL _ZdlPv($5)
	
.LABEL $label$25
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$24 }
	$0 = *(($2 + [56]))
	goto $label$22 
	
.LABEL $label$23
	$0 = $6
	
.LABEL $label$22
	*($1) = $6
	CALL _ZdlPv($0)
	
.LABEL $label$2
	$6 = *($2 + [96])
	if ( ($6 == 0) ){ goto $label$26 }
	$1 = ($2 + [100])
	$0 = *($1)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$28 }
	
.LOOP $label$29:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$30 }
	CALL _ZdlPv($5)
	
.LABEL $label$30
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$29 }
	$0 = *(($2 + [96]))
	goto $label$27 
	
.LABEL $label$28
	$0 = $6
	
.LABEL $label$27
	*($1) = $6
	CALL _ZdlPv($0)
	
.LABEL $label$26
	$global$0 = ($2 + [176])
	return (unreachable)
	
.LABEL $label$1
	CALL $120($2)
}

void .FUNC $45 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $123($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = $global$0
	$4 = $3
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10103])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10149])
	
.LABEL $label$2
	$5 = *($1)
	*(*($2)) = *($1 + [8])
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)1)
	$6 = ($1 + [8])
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [10200])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($3 + [-8]), $6, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = $4
}

int_32 .FUNC $124 ()
{
	return [10532]
}

int_32 .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $129($1)
	
.LABEL $label$2
	*(CALL $124()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $129(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $132($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $8 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10103])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10149])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [9737])
	
.LABEL $label$3
	$6 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9780])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9799])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10200])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [32])
	CALL $3(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
}

void .FUNC $9 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$5 = ($global$0 - [112])
	$global$0 = $5
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$6 = *($0)
	*($5 + [8]) = $6
	$7 = *($2 + [8])
	*($5 + [16]) = $1
	$0 = CALL db_find_i64($6, $1, (int_64)3607749779137757184, (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $12(($5 + [8]), $0)
	if ( ((int_32)*($0 + [20]) == (int_32)($5 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [9967])
	
.LABEL $label$4
	*($5 + [48]) = $2
	CALL $13(($5 + [8]), $0, ($5 + [48]))
	$4 = *($5 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)CALL current_receiver()) ){ goto $label$5 }
	CALL eosio_assert([0], [10046])
	
.LABEL $label$5
	*(($0 = CALL _Znwj([32])) + [20]) = ($5 + [8])
	*($0 + [16]) = $4
	*($0 + [8]) = *(($2 + [8]))
	*($0) = *($2)
	*($5 + [88]) = (($5 + [48]) + [17])
	*($5 + [84]) = ($5 + [48])
	*($5 + [80]) = ($5 + [48])
	*($5 + [96]) = ($5 + [80])
	*($5 + [108]) = ($0 + [16])
	*($5 + [104]) = $0
	CALL $14(($5 + [104]), ($5 + [96]))
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8
	$4 = CALL db_store_i64(*((($5 + [8]) + [8])), (int_64)3607749779137757184, $3, $1), ($5 + [48]), [17]
	*($0 + [24]) = $4)
	$2 = (($5 + [8]) + [16])
	if ( (uint_64)($1 <= *($2)) ){ goto $label$6 }
	*($2) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$6
	*($5 + [80]) = $0
	$1 = (uint_64)*(($0 + [8])) >> (uint_64)(int_64)8
	*($5 + [48]) = $1)
	*($5 + [104]) = $4
	$8 = ($5 + [36])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*((($5 + [8]) + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $1
	*($2 + [16]) = $4
	*($5 + [80]) = [0]
	*($2) = $0
	*($8) = ($2 + [24])
	$0 = *($5 + [80])
	*($5 + [80]) = [0]
	if ( $0 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $15(($5 + [32]), ($5 + [80]), ($5 + [48]), ($5 + [104]))
	$0 = *($5 + [80])
	*($5 + [80]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv($0)
	
.LABEL $label$7
	$4 = *($5 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($5 + [36])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$13 }
	CALL _ZdlPv($2)
	
.LABEL $label$13
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($5 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $4
	
.LABEL $label$10
	*($8) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($5 + [112])
}

void .FUNC $6 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10103])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10149])
	
.LABEL $label$2
	$5 = *($2)
	*($1 + [16]) = *($5)
	*(($1 + [24])) = *(($5 + [8]))
	*($1 + [32]) = *(*($2 + [4]))
	$6 = *($1 + [8])
	$3 = $3
	$2 = ($3 + [-48])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = ($1 + [16])
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [32])
	CALL $3(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $2, [40])
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( (uint_64)($6) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $7 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [240])
	$global$0 = $4
	$5 = [0]
	$6 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$7 = $8
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$7 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8192])
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( (*($3 + [4]) <= [257]) ){ goto $label$1 }
	CALL eosio_assert([0], [8532])
	
.LABEL $label$1
	$11 = [0]
	*(($4 + [168])) = [0]
	*($4 + [152]) = (int_64)-1
	*($4 + [160]) = (int_64)0
	$7 = *($0)
	*($4 + [136]) = $7
	*($4 + [144]) = $6
	$5 = CALL db_find_i64($7, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$9 }
	$11 = CALL $2(($4 + [136]), $5)
	if ( ((int_32)*($11 + [40]) == (int_32)($4 + [136])) ){ goto $label$8 }
	CALL eosio_assert([0], [9967])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8561])
	
.LABEL $label$8
	CALL require_auth(*($11 + [32]))
	$6 = *($2)
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$7 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $8
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$14 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [8621])
	$6 = *($2)
	
.LABEL $label$10
	if ( ((int_64)$6 > (int_64)0) ){ goto $label$15 }
	CALL eosio_assert([0], [8638])
	
.LABEL $label$15
	if ( ((int_64)*(($2 + [8])) == (int_64)*($11 + [8])) ){ goto $label$16 }
	CALL eosio_assert([0], [8667])
	
.LABEL $label$16
	if ( ((int_64)*($2) <= (int_64))(*($11 + [16]) - *($11))) ){ goto $label$17 }
	CALL eosio_assert([0], [8693])
	
.LABEL $label$17
	*($4 + [176]) = $2
	CALL $8(($4 + [136]), $11, ($4 + [176]))
	$5 = ($11 + [32])
	$7 = *($5)
	$9 = ($2 + [8])
	*(($10 = (($4 + [120]) + [8]))) = *($9)
	$8 = *($2)
	*((($4 + [24]) + [8])) = *($10)
	*($4 + [120]) = $8
	*($4 + [24]) = *($4 + [120])
	CALL $9($0, $7, ($4 + [24]), $7, [1])
	$7 = *($5)
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$18 }
	$8 = *($0)
	*($4 + [112]) = (int_64)3617214756542218240
	*($4 + [104]) = $7
	*((($10 = CALL _Znwj([16])) + [8])) = *($4 + [112])
	*($10) = *($4 + [104])
	$7 = *($5)
	*(($5 = (($4 + [56]) + [24]))) = *($9)
	*($4 + [64]) = $1
	*($4 + [56]) = $7
	*($4 + [72]) = *($2)
	CALL $121((($4 + [56]) + [32]), $3)
	*((($4 + [176]) + [24])) = *($5)
	$5 = (($4 + [56]) + [40])
	*(($11 = (($4 + [176]) + [40]))) = *($5)
	*($5) = [0]
	$5 = ($10 + [16])
	*($4 + [228]) = $5
	*($4 + [224]) = $10
	*($4 + [232]) = $5
	*($4 + [176]) = *($4 + [56])
	*($4 + [184]) = *($4 + [64])
	*($4 + [192]) = *($4 + [72])
	*($4 + [208]) = *($4 + [88])
	*($4 + [88]) = (int_64)0
	CALL $10($8, (int_64)-3617168760277827584, ($4 + [224]), ($4 + [176]))
	if ( ((*($4 + [208]) & [1]) == 0) ){ goto $label$19 }
	CALL _ZdlPv(*($11))
	
.LABEL $label$19
	$5 = *($4 + [224])
	if ( ($5 == 0) ){ goto $label$20 }
	*($4 + [228]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$20
	if ( ((*(($4 + [88])) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*(($4 + [96])))
	
.LABEL $label$18
	$8 = *($9)
	*((($4 + [40]) + [8])) = $8
	$7 = *($2)
	*((($4 + [8]) + [8])) = $8
	*($4 + [40]) = $7
	*($4 + [8]) = $7
	CALL $11($0, $1, ($4 + [8]))
	$10 = *($4 + [160])
	if ( ($10 == 0) ){ goto $label$21 }
	$2 = ($4 + [164])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$10) ){ goto $label$23 }
	
.LOOP $label$24:
	$5 = ($5 + [-24])
	$9 = *($5)
	*($5) = [0]
	if ( ($9 == 0) ){ goto $label$25 }
	CALL _ZdlPv($9)
	
.LABEL $label$25
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$24 }
	$5 = *(($4 + [160]))
	goto $label$22 
	
.LABEL $label$23
	$5 = $10
	
.LABEL $label$22
	*($2) = $10
	CALL _ZdlPv($5)
	
.LABEL $label$21
	$global$0 = ($4 + [240])
}

void .FUNC $4 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $123($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $5 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [64])
	$global$0 = $3
	*($3 + [56]) = $1
	CALL require_auth(*($0))
	$4 = [0]
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$1 = $5)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$1 = $6
	$7 = $4
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$1 = $6
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = ((int_32)$4 < (int_32)[6])
	$8 = ($4 + [1])
	$4 = $8
	if ( $7 ){ goto $label$5 }
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8192])
	
.LABEL $label$1
	$9 = *($2)
	if ( ((uint_64)((int_64)$9 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$1 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$6 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$1 = $6
	$7 = $4
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$1 = $6
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = ((int_32)$4 < (int_32)[6])
	$8 = ($4 + [1])
	$4 = $8
	if ( $7 ){ goto $label$10 }
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8256])
	$9 = *($2)
	
.LABEL $label$6
	if ( ((int_64)$9 > (int_64)0) ){ goto $label$11 }
	CALL eosio_assert([0], [8363])
	
.LABEL $label$11
	$4 = [0]
	*(($3 + [48])) = [0]
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	$1 = *($0)
	*($3 + [16]) = $1
	*($3 + [24]) = $5
	$7 = CALL db_find_i64($1, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$14 }
	$4 = CALL $2(($3 + [16]), $7)
	if ( ((int_32)*($4 + [40]) == (int_32)($3 + [16])) ){ goto $label$15 }
	CALL eosio_assert([0], [9967])
	
.LABEL $label$15
	if ( ((int_64)*($4) <= (int_64)*($2)) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	CALL eosio_assert([0], [8424])
	if ( ((int_64)*([0]) <= (int_64)*($2)) ){ goto $label$12 }
	
.LABEL $label$13
	CALL eosio_assert([0], [8457])
	
.LABEL $label$12
	if ( ((int_64)*(($2 + [8])) == (int_64)*($4 + [8])) ){ goto $label$16 }
	CALL eosio_assert([0], [8505])
	
.LABEL $label$16
	*($3 + [8]) = $2
	*($3 + [12]) = ($3 + [56])
	CALL $6(($3 + [16]), $4, ($3 + [8]))
	$8 = *($3 + [40])
	if ( ($8 == 0) ){ goto $label$17 }
	$2 = ($3 + [44])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$19 }
	
.LOOP $label$20:
	$4 = ($4 + [-24])
	$7 = *($4)
	*($4) = [0]
	if ( ($7 == 0) ){ goto $label$21 }
	CALL _ZdlPv($7)
	
.LABEL $label$21
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$20 }
	$4 = *(($3 + [40]))
	goto $label$18 
	
.LABEL $label$19
	$4 = $8
	
.LABEL $label$18
	*($2) = $8
	CALL _ZdlPv($4)
	
.LABEL $label$17
	$global$0 = ($3 + [64])
}

int_32 .FUNC $2 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10018])
	
.LABEL $label$5
	$4 = CALL $129($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [32])
	CALL $93(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $4(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $132($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $3 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10097])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10097])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10097])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10097])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10097])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC memory ()
{
}

void .FUNC $1 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [128])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	$5 = *($2 + [8])
	$6 = (uint_64)$5 >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$7 = $8
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$4 < (int_32)[6])
	$10 = ($4 + [1])
	$4 = $10
	if ( $9 ){ goto $label$5 }
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8192])
	
.LABEL $label$1
	$11 = *($2)
	if ( ((uint_64)((int_64)$11 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$4 = [0]
	$7 = $6
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$7 = $8
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$7 = $8
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$4 < (int_32)[6])
	$10 = ($4 + [1])
	$4 = $10
	if ( $9 ){ goto $label$10 }
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8256])
	
.LABEL $label$6
	if ( ((int_64)$11 > (int_64)0) ){ goto $label$11 }
	CALL eosio_assert([0], [8363])
	
.LABEL $label$11
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$7 = *($0)
	*($3 + [8]) = $7
	*($3 + [16]) = $6
	$4 = CALL db_find_i64($7, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	if ( ((int_32)*(CALL $2(($3 + [8]), $4) + [40]) == (int_32)($3 + [8])) ){ goto $label$13 }
	CALL eosio_assert([0], [9967])
	
.LABEL $label$13
	CALL eosio_assert([0], [8391])
	$7 = *($3 + [8])
	
.LABEL $label$12
	$8 = *($0)
	if ( ((int_64)$7 == (int_64)CALL current_receiver()) ){ goto $label$14 }
	CALL eosio_assert([0], [10046])
	
.LABEL $label$14
	*(($4 = CALL _Znwj([56]))) = (int_64)0
	*($4 + [40]) = ($3 + [8])
	*($4 + [8]) = $5
	*($4 + [32]) = $1
	*($4 + [16]) = *($2)
	*(($4 + [24])) = *(($2 + [8]))
	*($3 + [96]) = (($3 + [48]) + [40])
	*($3 + [92]) = ($3 + [48])
	*($3 + [88]) = ($3 + [48])
	*($3 + [104]) = ($3 + [88])
	*($3 + [116]) = ($4 + [16])
	*($3 + [112]) = $4
	*($3 + [120]) = ($4 + [32])
	CALL $3(($3 + [112]), ($3 + [104]))
	$7 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	$10 = CALL db_store_i64(*((($3 + [8]) + [8])), (int_64)-4157508551318700032, $8, $7), ($3 + [48]), [40]
	*($4 + [44]) = $10)
	$9 = (($3 + [8]) + [16])
	if ( (uint_64)($7 <= *($9)) ){ goto $label$15 }
	*($9) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	*($3 + [112]) = $4
	$7 = (uint_64)*(($4 + [8])) >> (uint_64)(int_64)8
	*($3 + [48]) = $7)
	*($3 + [88]) = $10
	$2 = ($3 + [36])
	$9 = *($2)
	if ( ((uint_32)$9 >= (uint_32)*((($3 + [8]) + [32]))) ){ goto $label$18 }
	*($9 + [8]) = $7
	*($9 + [16]) = $10
	*($3 + [112]) = [0]
	*($9) = $4
	*($2) = ($9 + [24])
	$4 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( $4 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $4(($3 + [32]), ($3 + [112]), ($3 + [48]), ($3 + [88]))
	$4 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL _ZdlPv($4)
	
.LABEL $label$16
	$10 = *($3 + [32])
	if ( ($10 == 0) ){ goto $label$19 }
	$2 = ($3 + [36])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$10) ){ goto $label$21 }
	
.LOOP $label$22:
	$4 = ($4 + [-24])
	$9 = *($4)
	*($4) = [0]
	if ( ($9 == 0) ){ goto $label$23 }
	CALL _ZdlPv($9)
	
.LABEL $label$23
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$22 }
	$4 = *(($3 + [32]))
	goto $label$20 
	
.LABEL $label$21
	$4 = $10
	
.LABEL $label$20
	*($2) = $10
	CALL _ZdlPv($4)
	
.LABEL $label$19
	$global$0 = ($3 + [128])
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10097])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10097])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$4 = *($1)
	*($2 + [7]) = *(*($0 + [4]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [10097])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [7]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $15 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $123($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10018])
	
.LABEL $label$5
	$2 = CALL $129($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10041])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10041])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$9 }
	CALL eosio_assert([0], [10041])
	
.LABEL $label$9
	CALL memcpy(($3 + [24]), $7, [8])
	*(($5 + [16])) = *($3 + [24])
	*($5 + [28]) = $1
	*($3 + [16]) = $5
	$9 = *($5)
	*($3 + [24]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $19(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $132($2)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL _ZdlPv($1)
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $17 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10103])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10149])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9737])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [9780])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [9799])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10200])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $18($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [16])
}

void .FUNC $10 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL _Znwj($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [8])) = $5
	*($4) = $7
	*($4 + [4]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [4]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [36])) = $6
	*(($4 + [40])) = $5
	*(($4 + [8])) = [0]
	*((($4 + [16]) + [36])) = [0]
	*($4 + [24]) = $1
	*($4 + [16]) = $0
	*($4 + [32]) = $7
	*($4) = (int_64)0
	*($4 + [44 align=4]) = (int_64)0
	$7 = *($3 + [32])
	$2 = ( *(($3 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($4 + [44])
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($7 == 0) ){ goto $label$6 }
	CALL $38($2, $7)
	$2 = *(($4 + [48]))
	$7 = *(($4 + [44]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$7 = [0]
	
.LABEL $label$5
	*($4 + [84]) = $7
	*($4 + [80]) = $7
	*($4 + [88]) = $2
	*($4 + [56]) = ($4 + [80])
	*($4 + [64]) = $3
	CALL $94(($4 + [64]), ($4 + [56]))
	*($4 + [72]) = [0]
	*($4 + [64]) = (int_64)0
	$7 = [16]
	$3 = *((($4 + [16]) + [16]))
	$2 = *(($4 + [36]))
	$5 = ($2 - $3)
	$0 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$7:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$8 }
	$7 = (($5 & [-16]) + $7)
	
.LABEL $label$8
	$3 = *(($4 + [44]))
	$2 = *(($4 + [48]))
	$7 = (($7 + $2) - $3)
	$0 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$9:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$9 }
	if ( ($7 == 0) ){ goto $label$11 }
	CALL $38(($4 + [64]), $7)
	$2 = *($4 + [68])
	$7 = *($4 + [64])
	goto $label$10 
	
.LABEL $label$11
	$2 = [0]
	$7 = [0]
	
.LABEL $label$10
	*($4 + [84]) = $7
	*($4 + [80]) = $7
	*($4 + [88]) = $2
	CALL $95(($4 + [80]), ($4 + [16]))
	$7 = *($4 + [64])
	CALL send_inline($7, (*($4 + [68]) - $7))
	$7 = *($4 + [64])
	if ( ($7 == 0) ){ goto $label$12 }
	*($4 + [68]) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$12
	$7 = *($4 + [44])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($4 + [48])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$13
	$7 = *($4 + [32])
	if ( ($7 == 0) ){ goto $label$14 }
	*(($4 + [36])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$14
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$15 }
	*($4 + [4]) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$15
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $123($4)
}

void .FUNC $11 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	float_64 $9
	$3 = ($global$0 - [96])
	$global$0 = $3
	$4 = [0]
	*(($3 + [32])) = [0]
	*($3 + [16]) = (int_64)-1
	$5 = (int_64)0
	*($3 + [24]) = (int_64)0
	$6 = *($0)
	*($3) = $6
	*($3 + [8]) = $6
	$7 = CALL db_find_i64($6, $6, (int_64)-3851371893449818112, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $16($3, $7)
	if ( ((int_32)*($4 + [24]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9967])
	
.LABEL $label$1
	if ( ((int_64)$1 == (int_64)-6149233067403354832) ){ goto $label$7 }
	if ( ((int_64)$1 == (int_64)-3795033295588944592) ){ goto $label$7 }
	if ( ((int_64)$1 != (int_64)-6149229159485888880) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ($4 == 0) ){ goto $label$8 }
	$5 = *($4 + [8])
	$6 = *($0)
	*($3 + [48]) = $2
	CALL $17($3, $4, $6, ($3 + [48]))
	if ( ((int_64)$1 != (int_64)-6149233067403354832) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = *($0)
	if ( ((int_64)*($3) == (int_64)CALL current_receiver()) ){ goto $label$9 }
	CALL eosio_assert([0], [10046])
	
.LABEL $label$9
	*(($4 = CALL _Znwj([40])) + [24]) = $3
	*($4) = $1
	*($4 + [8]) = *($2)
	*(($4 + [16])) = *(($2 + [8]))
	*($3 + [88]) = (($3 + [48]) + [24])
	*($3 + [84]) = ($3 + [48])
	*($3 + [80]) = ($3 + [48])
	CALL $18(($3 + [80]), $4)
	$6 = *($4)
	$7 = CALL db_store_i64(*(($3 + [8])), (int_64)-3851371893449818112, $5, $6, ($3 + [48]), [24])
	*($4 + [28]) = $7
	$0 = ($3 + [16])
	if ( (uint_64)($6 <= *($0)) ){ goto $label$10 }
	*($0) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*($3 + [80]) = $4
	$6 = *($4)
	*($3 + [48]) = $6
	*($3 + [44]) = $7
	$8 = ($3 + [28])
	$0 = *($8)
	if ( ((uint_32)$0 >= (uint_32)*(($3 + [32]))) ){ goto $label$13 }
	*($0 + [8]) = $6
	*($0 + [16]) = $7
	*($3 + [80]) = [0]
	*($0) = $4
	*($8) = ($0 + [24])
	$4 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( $4 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $19(($3 + [24]), ($3 + [80]), ($3 + [48]), ($3 + [44]))
	$4 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL _ZdlPv($4)
	
.LABEL $label$11
	$5 = (int_64)0
	if ( ((int_64)$1 == (int_64)-6149233067403354832) ){ goto $label$5 }
	
.LABEL $label$6
	if ( ((int_64)$1 == (int_64)-3795033295588944592) ){ goto $label$17 }
	if ( ((int_64)$1 != (int_64)-6149229159485888880) ){ goto $label$16 }
	$1 = CALL current_time()
	$6 = ((int_64)*($2) + (int_64)$5)
	$9 = ((float_64)((float_64)(CASTING float_64)(int_64 ((int_64)((int_64)((uint_64)$1 / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)-1551096000)) * (float_64)(float_64)2e12) / (float_64)(float_64)3456e4)
	if ( ((float_64)(float_64)|$9| < (float_64)(float_64)9223372036854775808) ){ goto $label$15 }
	if ( ((int_64)$6 > (int_64)-9223372036854775808) ){ goto $label$14 }
	goto $label$4 
	
.LABEL $label$17
	if ( ((int_64)((int_64)*($2) + (int_64)$5) < (int_64)5962241697) ){ goto $label$4 }
	CALL eosio_assert([0], [9200])
	$0 = *($3 + [24])
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$16
	CALL eosio_assert([0], [9274])
	$0 = *($3 + [24])
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$15
	if ( ((int_64)$6 <= (int_64)(Rounds 0)($9)) ){ goto $label$4 }
	
.LABEL $label$14
	CALL eosio_assert([0], [9148])
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_64)((int_64)*($2) + (int_64)$5) < (int_64)500000000001) ){ goto $label$4 }
	CALL eosio_assert([0], [9107])
	$0 = *($3 + [24])
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$0 = *($3 + [24])
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = ($3 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$19 }
	
.LOOP $label$20:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$21 }
	CALL _ZdlPv($2)
	
.LABEL $label$21
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$20 }
	$4 = *(($3 + [24]))
	goto $label$18 
	
.LABEL $label$19
	$4 = $0
	
.LABEL $label$18
	*($7) = $0
	CALL _ZdlPv($4)
	
.LABEL $label$2
	$global$0 = ($3 + [96])
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10018])
	
.LABEL $label$5
	$4 = CALL $129($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = [0]
	*($5 + [20]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [16])
	*($3 + [40]) = $5
	CALL $99(($3 + [40]), ($3 + [32]))
	*($5 + [24]) = $1
	*($3 + [32]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [40]) = $7)
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $15(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $132($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $13 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [32])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*(($1 + [20])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10103])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10149])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [9737])
	
.LABEL $label$3
	$6 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9780])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9799])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10200])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($2 + [-15])
	*($4 + [16]) = $4
	*($4 + [24]) = $1
	*($4 + [28]) = ($1 + [16])
	CALL $14(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [24]), (int_64)0, $3, [17])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [32])
}

int_32 .FUNC $75 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $129($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = (int_64)0
	*($4 + [32]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10041])
	
.LABEL $label$5
	$3 = ($2 + $7)
	CALL memcpy(($4 + [32]), $2, [8])
	*($4) = (int_64)0
	$8 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10041])
	
.LABEL $label$6
	CALL memcpy($4, $8, [8])
	$9 = *($4)
	*((($4 + [32]) + [8])) = $9
	*(($4 + [24])) = $3
	*($4 + [16]) = $2
	*(($4 + [20])) = ($2 + [16])
	*($4 + [8]) = $1
	*($4) = $0
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *($4 + [32])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $0), (int_64 $9), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $132($2)
	
.LABEL $label$8
	$global$0 = ($4 + [48])
	return [1]
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10097])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	$4 = ($1 + [8])
	CALL memcpy($3, $1, [8])
	$5 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $5
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10097])
	$5 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10097])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $19 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $123($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $58 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$3 = ($global$0 - [240])
	$global$0 = $3
	CALL require_auth(*($1))
	CALL $46($0, $1)
	$4 = [0]
	*(($3 + [152])) = [0]
	*($3 + [136]) = (int_64)-1
	*($3 + [144]) = (int_64)0
	$5 = *($0)
	*($3 + [120]) = $5
	$6 = *($1)
	*($3 + [128]) = $6
	$7 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$8 = CALL db_find_i64($5, $6, (int_64)-4157661228816138240, $7)
	if ( ((int_32)$8) <= (int_32)[-1]) ){ goto $label$2 }
	$4 = CALL $47(($3 + [120]), $8)
	if ( ((int_32)*($4 + [24]) == (int_32)($3 + [120])) ){ goto $label$1 }
	CALL eosio_assert([0], [9967])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9509])
	
.LABEL $label$1
	if ( ((int_64)*($4 + [8]) != (int_64)*(($2 + [8]))) ){ goto $label$6 }
	if ( ((int_64)*($4) <= (int_64)*($2)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9817])
	if ( ((int_64)*($4) > (int_64)*($2)) ){ goto $label$4 }
	
.LABEL $label$5
	*($2) = *($4)
	*(($2 + [8])) = *(($4 + [8]))
	if ( $4 ){ goto $label$7 }
	CALL eosio_assert([0], [10407])
	CALL eosio_assert([0], [10441])
	
.LABEL $label$7
	$8 = CALL db_next_i64(*($4 + [28]), ($3 + [80]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$8 }
	CALL $47(($3 + [120]), $8)
	
.LABEL $label$8
	CALL $59(($3 + [120]), $4)
	goto $label$3 
	
.LABEL $label$4
	$5 = *($1)
	*($3 + [80]) = $2
	if ( $4 ){ goto $label$9 }
	CALL eosio_assert([0], [10471])
	
.LABEL $label$9
	CALL $60(($3 + [120]), $4, $5, ($3 + [80]))
	
.LABEL $label$3
	*(($3 + [112])) = [0]
	*($3 + [96]) = (int_64)-1
	*($3 + [104]) = (int_64)0
	*($3 + [80]) = *($0)
	*($3 + [88]) = $7
	$9 = CALL $26(($3 + [80]), $7, [8840])
	$10 = *($2)
	if ( ((uint_64)((int_64)$10 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$12 }
	$5 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$15 }
	$5 = $6
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	$5 = $6
	
.LOOP $label$16:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$11 = ($4 + [1])
	$4 = $11
	if ( $8 ){ goto $label$16 }
	$4 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_64)$10 <= (int_64)0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL eosio_assert([0], [8621])
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL eosio_assert([0], [9524])
	
.LABEL $label$10
	if ( ((int_64)*(($2 + [8])) == (int_64)*($9 + [8])) ){ goto $label$17 }
	CALL eosio_assert([0], [8667])
	
.LABEL $label$17
	$4 = [0]
	*(($3 + [72])) = [0]
	*($3 + [56]) = (int_64)-1
	*($3 + [64]) = (int_64)0
	$5 = *($0)
	*($3 + [40]) = $5
	*($3 + [48]) = $5
	$8 = CALL db_find_i64($5, $5, (int_64)5455799419175698432, $7)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$18 }
	$4 = CALL $48(($3 + [40]), $8)
	if ( ((int_32)*($4 + [56]) == (int_32)($3 + [40])) ){ goto $label$18 }
	CALL eosio_assert([0], [9967])
	
.LABEL $label$18
	$5 = *($0)
	*($3) = $2
	if ( $4 ){ goto $label$19 }
	CALL eosio_assert([0], [10471])
	
.LABEL $label$19
	CALL $61(($3 + [40]), $4, $5, $3)
	*(($3 + [32])) = [0]
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	$6 = *($0)
	*($3) = $6
	$5 = *($1)
	*($3 + [8]) = $5
	$4 = CALL db_find_i64($6, $5, (int_64)-5001342326447013888, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$22 }
	$4 = CALL $62($3, $4)
	if ( ((int_32)*($4 + [32]) == (int_32)$3) ){ goto $label$23 }
	CALL eosio_assert([0], [9967])
	
.LABEL $label$23
	$5 = *($1)
	*($3 + [160]) = $2
	CALL $63($3, $4, $5, ($3 + [160]))
	$11 = *($3 + [24])
	if ( $11 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$6 = *($1)
	if ( ((int_64)*($3) == (int_64)CALL current_receiver()) ){ goto $label$24 }
	CALL eosio_assert([0], [10046])
	
.LABEL $label$24
	*(($4 = CALL _Znwj([48])) + [24]) = (int_64)0
	*($4 + [16]) = (int_64)0
	*($4 + [32]) = $3
	*($4) = *($1)
	$5 = CALL current_time()
	*($4 + [16]) = *($2)
	*($4 + [8]) = ((uint_64)$5 / (uint_64)(int_64)1000000)
	*($4 + [24]) = *(($2 + [8]))
	*($3 + [208]) = (($3 + [160]) + [28])
	*($3 + [204]) = ($3 + [160])
	*($3 + [200]) = ($3 + [160])
	*($3 + [216]) = ($3 + [200])
	*($3 + [228]) = ($4 + [8])
	*($3 + [224]) = $4
	*($3 + [232]) = ($4 + [16])
	CALL $64(($3 + [224]), ($3 + [216]))
	$5 = *($4)
	$11 = CALL db_store_i64(*(($3 + [8])), (int_64)-5001342326447013888, $6, $5, ($3 + [160]), [28])
	*($4 + [36]) = $11
	$8 = ($3 + [16])
	if ( (uint_64)($5 <= *($8)) ){ goto $label$25 }
	*($8) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$25
	*($3 + [224]) = $4
	$5 = *($4)
	*($3 + [160]) = $5
	*($3 + [200]) = $11
	$8 = *(($3 + [28]))
	if ( ((uint_32)$8 >= (uint_32)*(($3 + [32]))) ){ goto $label$28 }
	*($8 + [8]) = $5
	*($8 + [16]) = $11
	*($3 + [224]) = [0]
	*($8) = $4
	*(($3 + [28])) = ($8 + [24])
	$4 = *($3 + [224])
	*($3 + [224]) = [0]
	if ( $4 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	CALL $65(($3 + [24]), ($3 + [224]), ($3 + [160]), ($3 + [200]))
	$4 = *($3 + [224])
	*($3 + [224]) = [0]
	if ( ($4 == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL _ZdlPv($4)
	
.LABEL $label$26
	$11 = *($3 + [24])
	if ( ($11 == 0) ){ goto $label$20 }
	
.LABEL $label$21
	$2 = ($3 + [28])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$11) ){ goto $label$30 }
	
.LOOP $label$31:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$32 }
	CALL _ZdlPv($8)
	
.LABEL $label$32
	if ( ((int_32)$11 != (int_32)$4) ){ goto $label$31 }
	$4 = *(($3 + [24]))
	goto $label$29 
	
.LABEL $label$30
	$4 = $11
	
.LABEL $label$29
	*($2) = $11
	CALL _ZdlPv($4)
	
.LABEL $label$20
	$11 = *($3 + [64])
	if ( ($11 == 0) ){ goto $label$33 }
	$2 = ($3 + [68])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$11) ){ goto $label$35 }
	
.LOOP $label$36:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$37 }
	CALL _ZdlPv($8)
	
.LABEL $label$37
	if ( ((int_32)$11 != (int_32)$4) ){ goto $label$36 }
	$4 = *(($3 + [64]))
	goto $label$34 
	
.LABEL $label$35
	$4 = $11
	
.LABEL $label$34
	*($2) = $11
	CALL _ZdlPv($4)
	
.LABEL $label$33
	$11 = *($3 + [104])
	if ( ($11 == 0) ){ goto $label$38 }
	$2 = ($3 + [108])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$11) ){ goto $label$40 }
	
.LOOP $label$41:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$42 }
	CALL _ZdlPv($8)
	
.LABEL $label$42
	if ( ((int_32)$11 != (int_32)$4) ){ goto $label$41 }
	$4 = *(($3 + [104]))
	goto $label$39 
	
.LABEL $label$40
	$4 = $11
	
.LABEL $label$39
	*($2) = $11
	CALL _ZdlPv($4)
	
.LABEL $label$38
	$11 = *($3 + [144])
	if ( ($11 == 0) ){ goto $label$43 }
	$2 = ($3 + [148])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$11) ){ goto $label$45 }
	
.LOOP $label$46:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$47 }
	CALL _ZdlPv($8)
	
.LABEL $label$47
	if ( ((int_32)$11 != (int_32)$4) ){ goto $label$46 }
	$4 = *(($3 + [144]))
	goto $label$44 
	
.LABEL $label$45
	$4 = $11
	
.LABEL $label$44
	*($2) = $11
	CALL _ZdlPv($4)
	
.LABEL $label$43
	$global$0 = ($3 + [240])
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10259])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10304])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10354])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $50 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10103])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10149])
	
.LABEL $label$2
	*($1 + [16]) = *(*(*($3) + [4]) + [48])
	$6 = *($1 + [8])
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $56($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	$2 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( (uint_64)($2) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

void .FUNC $51 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [272])
	$global$0 = $3
	CALL require_auth(*($1))
	$4 = *($2 + [8])
	*(($3 + [184])) = [0]
	$5 = (uint_64)$4 >> (uint_64)(int_64)8
	*($3 + [160]) = $5)
	*($3 + [168]) = (int_64)-1
	*($3 + [176]) = (int_64)0
	*($3 + [152]) = *($0)
	$6 = CALL $26(($3 + [152]), $5, [8840])
	$7 = *($2)
	if ( ((uint_64)((int_64)$7 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$3 }
	$8 = [0]
	$4 = $5
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$9 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$4 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$4 = $9
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$7 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((int_64)$7 <= (int_64)0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [8621])
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8859])
	
.LABEL $label$1
	if ( ((int_64)*(($2 + [8])) == (int_64)*($6 + [8])) ){ goto $label$8 }
	CALL eosio_assert([0], [8667])
	
.LABEL $label$8
	CALL $46($0, $1)
	*((($3 + [112]) + [32])) = [0]
	*($3 + [128]) = (int_64)-1
	*($3 + [136]) = (int_64)0
	$4 = *($0)
	*($3 + [112]) = $4
	$9 = *($1)
	*($3 + [120]) = $9
	$10 = [0]
	$8 = CALL db_find_i64($4, $9, (int_64)-4157661228816138240, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$9 }
	$10 = CALL $47(($3 + [112]), $8)
	if ( ((int_32)*($10 + [24]) == (int_32)($3 + [112])) ){ goto $label$9 }
	CALL eosio_assert([0], [9967])
	
.LABEL $label$9
	*((($3 + [72]) + [32])) = [0]
	*($3 + [88]) = (int_64)-1
	*($3 + [96]) = (int_64)0
	$4 = *($0)
	*($3 + [72]) = $4
	*($3 + [80]) = $4
	*($3 + [64]) = (int_64)4607182418800017408
	$8 = CALL db_find_i64($4, $4, (int_64)5455799419175698432, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$13 }
	$8 = CALL $48(($3 + [72]), $8)
	if ( ((int_32)*($8 + [56]) == (int_32)($3 + [72])) ){ goto $label$14 }
	CALL eosio_assert([0], [9967])
	
.LABEL $label$14
	*($3 + [64]) = *($8 + [48])
	$4 = *($0)
	*($3 + [208]) = $2
	CALL $52(($3 + [72]), $8, $4, ($3 + [208]))
	$4 = *($1)
	if ( $10 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$4 = *($0)
	*($3 + [56]) = $2
	*($3 + [256]) = $4
	if ( ((int_64)*($3 + [72]) == (int_64)CALL current_receiver()) ){ goto $label$15 }
	CALL eosio_assert([0], [10046])
	
.LABEL $label$15
	*($3 + [212]) = ($3 + [56])
	*($3 + [208]) = ($3 + [72])
	*($3 + [216]) = ($3 + [256])
	*(($8 = CALL _Znwj([72])) + [8]) = (int_64)0
	*($8) = (int_64)0
	*($8 + [16]) = (int_64)0
	*($8 + [24]) = (int_64)0
	*($8 + [32]) = (int_64)0
	*($8 + [40]) = (int_64)0
	*($8 + [56]) = ($3 + [72])
	CALL $53(($3 + [208]), $8)
	*($3 + [200]) = $8
	$4 = (uint_64)*($8 + [8]) >> (uint_64)(int_64)8
	*($3 + [208]) = $4)
	$6 = *($8 + [60])
	*($3 + [196]) = $6
	$12 = ($3 + [100])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)*(($3 + [104]))) ){ goto $label$18 }
	*($11 + [8]) = $4
	*($11 + [16]) = $6
	*($3 + [200]) = [0]
	*($11) = $8
	*($12) = ($11 + [24])
	$8 = *($3 + [200])
	*($3 + [200]) = [0]
	if ( $8 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $54(($3 + [96]), ($3 + [200]), ($3 + [208]), ($3 + [196]))
	$8 = *($3 + [200])
	*($3 + [200]) = [0]
	if ( ($8 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL _ZdlPv($8)
	
.LABEL $label$16
	$4 = *($1)
	if ( ($10 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	*($3 + [208]) = $2
	*($3 + [212]) = ($3 + [64])
	CALL $55(($3 + [112]), $10, $4, ($3 + [208]))
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_64)*($3 + [112]) == (int_64)CALL current_receiver()) ){ goto $label$19 }
	CALL eosio_assert([0], [10046])
	
.LABEL $label$19
	*(($8 = CALL _Znwj([40])) + [24]) = ($3 + [112])
	*($8 + [8]) = *(($2 + [8]))
	*($8) = *($2)
	*($8 + [16]) = *($3 + [64])
	*($3 + [264]) = (($3 + [208]) + [24])
	*($3 + [260]) = ($3 + [208])
	*($3 + [256]) = ($3 + [208])
	CALL $56(($3 + [256]), $8)
	$5 = (uint_64)*($8 + [8]) >> (uint_64)(int_64)8
	$11 = CALL db_store_i64(*((($3 + [112]) + [8])), (int_64)-4157661228816138240, $4, $5), ($3 + [208]), [24]
	*($8 + [28]) = $11)
	$10 = ($3 + [128])
	if ( (uint_64)($5 <= *($10)) ){ goto $label$20 }
	*($10) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$20
	*($3 + [256]) = $8
	$4 = (uint_64)*(($8 + [8])) >> (uint_64)(int_64)8
	*($3 + [208]) = $4)
	*($3 + [200]) = $11
	$6 = ($3 + [140])
	$10 = *($6)
	if ( ((uint_32)$10 >= (uint_32)*(($3 + [144]))) ){ goto $label$22 }
	*($10 + [8]) = $4
	*($10 + [16]) = $11
	*($3 + [256]) = [0]
	*($10) = $8
	*($6) = ($10 + [24])
	$8 = *($3 + [256])
	*($3 + [256]) = [0]
	if ( $8 ){ goto $label$21 }
	goto $label$10 
	
.LABEL $label$22
	CALL $57(($3 + [136]), ($3 + [256]), ($3 + [208]), ($3 + [200]))
	$8 = *($3 + [256])
	*($3 + [256]) = [0]
	if ( ($8 == 0) ){ goto $label$10 }
	
.LABEL $label$21
	CALL _ZdlPv($8)
	
.LABEL $label$10
	*(($3 + [48])) = [0]
	*(($3 + [32])) = *(($2 + [8]))
	*($3 + [40]) = (int_64)0
	$4 = *($1)
	*($3 + [8]) = $4
	$5 = *($0)
	*($3 + [16]) = $5
	*($3 + [24]) = *($2)
	$10 = ($3 + [40])
	$8 = CALL $126([9490])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$23 }
	$11 = ($3 + [24])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$26 }
	*(($3 + [40])) = ($8 << [1])
	$2 = ($10 + [1])
	if ( $8 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$0 = (($8 + [16]) & [-16])
	$2 = CALL _Znwj($0)
	*(($3 + [48])) = $2
	*(($3 + [44])) = $8
	*($3 + [40]) = ($0 | [1])
	
.LABEL $label$25
	CALL memcpy($2, [9490], $8)
	
.LABEL $label$24
	*(($2 + $8)) = [0]
	*(($8 = CALL _Znwj([16]))) = $4
	*($8 + [8]) = (int_64)3617214756542218240
	*(($3 + [232])) = *(($11 + [8]))
	*(($2 = (($3 + [208]) + [40]))) = *(($10 + [8]))
	$4 = *($10)
	*(($3 + [40])) = (int_64)0
	*($3 + [256]) = $8
	$8 = ($8 + [16])
	*($3 + [264]) = $8
	*($3 + [260]) = $8
	*($3 + [208]) = *($3 + [8])
	*($3 + [216]) = *((($3 + [8]) + [8]))
	*($3 + [224]) = *($11)
	*($3 + [240]) = $4
	*((($3 + [8]) + [40])) = [0]
	CALL $10($5, (int_64)-3617168760277827584, ($3 + [256]), ($3 + [208]))
	if ( ((*($3 + [240]) & [1]) == 0) ){ goto $label$27 }
	CALL _ZdlPv(*($2))
	
.LABEL $label$27
	$8 = *($3 + [256])
	if ( ($8 == 0) ){ goto $label$28 }
	*($3 + [260]) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$28
	if ( ((*(($3 + [40])) & [1]) == 0) ){ goto $label$29 }
	CALL _ZdlPv(*(($3 + [48])))
	
.LABEL $label$29
	$11 = *($3 + [96])
	if ( ($11 == 0) ){ goto $label$30 }
	$2 = ($3 + [100])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$32 }
	
.LOOP $label$33:
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$34 }
	CALL _ZdlPv($10)
	
.LABEL $label$34
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$33 }
	$8 = *(($3 + [96]))
	goto $label$31 
	
.LABEL $label$32
	$8 = $11
	
.LABEL $label$31
	*($2) = $11
	CALL _ZdlPv($8)
	
.LABEL $label$30
	$11 = *($3 + [136])
	if ( ($11 == 0) ){ goto $label$35 }
	$2 = ($3 + [140])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$37 }
	
.LOOP $label$38:
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$39 }
	CALL _ZdlPv($10)
	
.LABEL $label$39
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$38 }
	$8 = *(($3 + [136]))
	goto $label$36 
	
.LABEL $label$37
	$8 = $11
	
.LABEL $label$36
	*($2) = $11
	CALL _ZdlPv($8)
	
.LABEL $label$35
	$11 = *($3 + [176])
	if ( ($11 == 0) ){ goto $label$40 }
	$2 = ($3 + [180])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$42 }
	
.LOOP $label$43:
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$44 }
	CALL _ZdlPv($10)
	
.LABEL $label$44
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$43 }
	$8 = *(($3 + [176]))
	goto $label$41 
	
.LABEL $label$42
	$8 = $11
	
.LABEL $label$41
	*($2) = $11
	CALL _ZdlPv($8)
	
.LABEL $label$40
	$global$0 = ($3 + [272])
	return (unreachable)
	
.LABEL $label$23
	CALL $120($10)
}

void .FUNC $52 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10103])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10149])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9737])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9780])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9799])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10200])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-64])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [48])
	CALL $105(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [60]), $2, $4, [56])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	*($1) = *($5)
	*(($1 + [8])) = *(($5 + [8]))
	$6 = (int_64)1397704016
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $7
	$8 = $5
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $7
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$9 = ($5 + [1])
	$5 = $9
	if ( $8 ){ goto $label$5 }
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8192])
	
.LABEL $label$1
	*($1 + [16]) = (int_64)0
	*(($1 + [24])) = (int_64)357812228100
	$6 = (int_64)1397704016
	$5 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$6 = $7
	$8 = $5
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$6 = $7
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$9 = ($5 + [1])
	$5 = $9
	if ( $8 ){ goto $label$10 }
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8192])
	
.LABEL $label$6
	*($1 + [32]) = (int_64)0
	*($1 + [48]) = (int_64)4607182418800017408
	*(($1 + [40])) = (int_64)357812228100
	$8 = $2
	$5 = ($8 + [-64])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($8 + [-8])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [16])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [32])
	*($3 + [44]) = ($1 + [48])
	CALL $105(($3 + [32]), ($3 + [24]))
	$6 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	*($1 + [60]) = CALL db_store_i64(*($4 + [8]), (int_64)5455799419175698432, *(*($0 + [8])), $6), $5, [56])
	if ( (uint_64)($6 <= *($4 + [16])) ){ goto $label$11 }
	*(($4 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$11
	$global$0 = ($3 + [48])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $123($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10018])
	
.LABEL $label$5
	$4 = CALL $129($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([80])) + [48]) = (int_64)0
	*($5 + [8]) = [0]
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [48])
	CALL $101(($3 + [32]), ($3 + [24]))
	*($5 + [72]) = [-1]
	*($5 + [68]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $37(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $132($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10097])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10097])
	$4 = *($3)
	
.LABEL $label$2
	$6 = ($1 + [16])
	CALL memcpy($4, ($2 + [8]), [8])
	$1 = (*($3) + [8])
	*($3) = $1
	if ( ((int_32)(*($5) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10097])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $6, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $57 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $123($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $127(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [10528])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $127(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $132($0)
	
.LABEL $label$1
}

void .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [32])
	$global$0 = $2
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10259])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10304])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [10354])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
	$9 = *(($1 + [72]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	*(($2 + [24])) = (int_64)0
	*(($2 + [16])) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2) = (int_64)0
	$9 = CALL db_idx256_find_primary(*($0), *($0 + [8]), (int_64)-2991713964573851648, $2, [2], *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx256_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [32])
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $129($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10528])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $129($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [6]) >= (uint_32)$1) ){ goto $label$6 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [6])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[67108864]) ){ goto $label$4 }
	$3 = [67108863]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [6]) > (uint_32)[33554430]) ){ goto $label$7 }
	$3 = int_32($2 >> [5])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[67108864]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL _Znwj(($3 << [6]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($3) = (int_64)0
	*(($3 + [32])) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [48]) = (int_64)0
	*($3) = [0]
	*(($3 + [56])) = (int_64)0
	$3 = (*($0) + [64])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $123($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($3 << [6]))
	$5 = ($2 + ($5 << [6]))
	$3 = $5
	
.LOOP $label$9:
	*($3) = (int_64)0
	*(($3 + [32])) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	*($3) = [0]
	*(($3 + [40])) = (int_64)0
	*(($3 + [48])) = (int_64)0
	*(($3 + [56])) = (int_64)0
	$3 = ($3 + [64])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$6 = ($2 + ($6 << [6]))
	$3 = *($0)
	$7 = ($0 + [4])
	$1 = (*($7) - $3)
	$2 = ($5 - $1)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$10
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($3 == 0) ){ goto $label$1 }
	CALL _ZdlPv($3)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC $111 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	$5 = *($4 + [4])
	$6 = (int_64)0
	$7 = ($4 + [8])
	$8 = ($4 + [4])
	$9 = [0]
	
.LOOP $label$1:
	if ( ($5 <= *($7)) ){ goto $label$2 }
	CALL eosio_assert([0], [10506])
	$5 = *($8)
	
.LABEL $label$2
	$10 = *($5)
	$11 = ($5 + [1])
	*($8) = $11
	$5 = ($9 & [255])
	$6 = ((int_64)$6 | (int_64)(CASTING uint_64)(uint_32 (($10 & [127]) << $5)))
	$9 = ($5 + [7])
	$5 = $11
	if ( ($10 & [128]) ){ goto $label$1 }
	*($3) = $6
	$5 = ($3 + [4])
	if ( ((uint_32)(*(($4 + [8])) - $11) > (uint_32)[32]) ){ goto $label$3 }
	CALL eosio_assert([0], [10041])
	$11 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $11, [33])
	*(($5 = ($4 + [4]))) = (*($5) + [33])
	$11 = *($0 + [4])
	$10 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $10) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10041])
	$10 = *(($5 + [4]))
	
.LABEL $label$4
	CALL memcpy($11, $10, [8])
	*(($5 = ($5 + [4]))) = (*($5) + [8])
	$11 = *($0 + [8])
	$10 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $10) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10041])
	$10 = *(($5 + [4]))
	
.LABEL $label$5
	CALL memcpy($11, $10, [8])
	$10 = (*($10) + [8])
	*(($10 = ($5 + [4]))) = $10
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $10) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10041])
	$10 = *(($5 + [4]))
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $10, [8])
	*($11 + [8]) = *($2 + [8])
	*(($5 = ($5 + [4]))) = (*($5) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $132($0)
	
.LABEL $label$1
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

void .FUNC $29 (int_32 $0, int_64 $1, int_64 $2)
{
	CALL $27($0, $1, $2, $1)
}

void .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*(($1 + [20])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10259])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10304])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10354])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [24]))
}

void .FUNC $55 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10103])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10149])
	
.LABEL $label$2
	$7 = *($1 + [8])
	$6 = *($3)
	if ( ((int_64)*($6 + [8]) == (int_64)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [9737])
	
.LABEL $label$3
	$8 = ((int_64)*($1) + (int_64)*($6))
	*($1) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9780])
	$8 = *($1)
	
.LABEL $label$4
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9799])
	
.LABEL $label$5
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((float_64)*($1 + [16]) == (float_64)*(*($3 + [4]))) ){ goto $label$6 }
	CALL eosio_assert([0], [10510])
	
.LABEL $label$6
	if ( ((int_64)$8 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$7 }
	CALL eosio_assert([0], [10200])
	
.LABEL $label$7
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	CALL $56($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $3, [24])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ((int_64)$8 + (int_64)1)
	
.LABEL $label$8
	$global$0 = ($5 + [16])
}

int_32 .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10506])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $38($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10041])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10041])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [10041])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$5 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10041])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $1, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10041])
	$4 = *($1)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*($5 + [8]) = *($2 + [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10103])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10149])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [9876])
	
.LABEL $label$3
	$6 = (int_64)
	*($1) = $6(*($1) - *($2)))
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9924])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10200])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [32])
	CALL $3(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
}

void .FUNC $20 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [80])
	$global$0 = $3
	$4 = [0]
	$5 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	$6 = $5)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$7 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8192])
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( (*($2 + [4]) <= [257]) ){ goto $label$1 }
	CALL eosio_assert([0], [8532])
	
.LABEL $label$1
	$2 = [0]
	*(($3 + [72])) = [0]
	*($3 + [56]) = (int_64)-1
	*($3 + [64]) = (int_64)0
	$6 = *($0)
	*($3 + [40]) = $6
	*($3 + [48]) = $5
	$4 = CALL db_find_i64($6, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$9 }
	$2 = CALL $2(($3 + [40]), $4)
	if ( ((int_32)*($2 + [40]) == (int_32)($3 + [40])) ){ goto $label$8 }
	CALL eosio_assert([0], [9967])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8727])
	
.LABEL $label$8
	CALL require_auth(*($2 + [32]))
	$5 = *($1)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$6 = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$6 = $7
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$14 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [8621])
	$5 = *($1)
	
.LABEL $label$10
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$15 }
	CALL eosio_assert([0], [8760])
	
.LABEL $label$15
	$4 = ($1 + [8])
	if ( ((int_64)*($4) == (int_64)*($2 + [8])) ){ goto $label$16 }
	CALL eosio_assert([0], [8667])
	
.LABEL $label$16
	*($3 + [32]) = $1
	CALL $21(($3 + [40]), $2, ($3 + [32]))
	$6 = *(($2 + [32]))
	*(($8 = (($3 + [16]) + [8]))) = *($4)
	$7 = *($1)
	*(($3 + [8])) = *($8)
	*($3 + [16]) = $7
	*($3) = *($3 + [16])
	CALL $22($0, $6, $3)
	$9 = *($3 + [64])
	if ( ($9 == 0) ){ goto $label$17 }
	$1 = ($3 + [68])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$19 }
	
.LOOP $label$20:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$21 }
	CALL _ZdlPv($8)
	
.LABEL $label$21
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$20 }
	$4 = *(($3 + [64]))
	goto $label$18 
	
.LABEL $label$19
	$4 = $9
	
.LABEL $label$18
	*($1) = $9
	CALL _ZdlPv($4)
	
.LABEL $label$17
	$global$0 = ($3 + [80])
}

int_32 .FUNC $23 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*(($6 + [20])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9967])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $12($0, $5)
	if ( ((int_32)*($6 + [20]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9967])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $22 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [40])) = [0]
	*($3 + [16]) = $1
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	*($3 + [8]) = *($0)
	$0 = CALL $23(($3 + [8]), (uint_64)*($2 + [8]) >> (uint_64)(int_64)8), [8911]
	if ( ((int_64)*($0)) >= (int_64)*($2)) ){ goto $label$1 }
	CALL eosio_assert([0], [8967])
	
.LABEL $label$1
	*($3) = $2
	CALL $24(($3 + [8]), $0, $1, $3)
	$4 = *($3 + [32])
	if ( ($4 == 0) ){ goto $label$2 }
	$5 = ($3 + [36])
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL _ZdlPv($0)
	
.LABEL $label$6
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$5 }
	$2 = *(($3 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$2 = $4
	
.LABEL $label$3
	*($5) = $4
	CALL _ZdlPv($2)
	
.LABEL $label$2
	$global$0 = ($3 + [48])
}

void .FUNC $25 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$5 = ($global$0 - [112])
	$global$0 = $5
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [8790])
	
.LABEL $label$1
	CALL require_auth($1)
	if ( CALL is_account($2) ){ goto $label$2 }
	CALL eosio_assert([0], [8814])
	
.LABEL $label$2
	$6 = *($3 + [8])
	*(($5 + [104])) = [0]
	$7 = (uint_64)$6 >> (uint_64)(int_64)8
	*($5 + [80]) = $7)
	*($5 + [88]) = (int_64)-1
	*($5 + [96]) = (int_64)0
	*($5 + [72]) = *($0)
	$8 = CALL $26(($5 + [72]), $7, [8840])
	CALL require_recipient($1)
	CALL require_recipient($2)
	$9 = *($3)
	if ( ((uint_64)((int_64)$9 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$4 }
	$10 = [0]
	$11 = $7
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$12 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$11 = $12
	$13 = $10
	$10 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	$11 = $12
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$13 = ((int_32)$10 < (int_32)[6])
	$14 = ($10 + [1])
	$10 = $14
	if ( $13 ){ goto $label$7 }
	$10 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [8621])
	
.LABEL $label$3
	if ( ((int_64)$9 <= (int_64)0) ){ goto $label$12 }
	if ( ((int_64)$6 != (int_64)*($8 + [8])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL eosio_assert([0], [8859])
	if ( ((int_64)$6 == (int_64)*($8 + [8])) ){ goto $label$10 }
	
.LABEL $label$11
	CALL eosio_assert([0], [8667])
	if ( (*($4) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	if ( ((*($4) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	if ( (*($4 + [4]) <= [257]) ){ goto $label$8 }
	CALL eosio_assert([0], [8532])
	
.LABEL $label$8
	$10 = CALL has_auth($2)
	CALL $27($0, $1, $7, $1)
	$13 = ($3 + [8])
	$12 = *($13)
	*((($5 + [56]) + [8])) = $12
	$11 = *($3)
	*((($5 + [24]) + [8])) = $12
	*($5 + [24]) = $11
	*($5 + [56]) = $11
	CALL $22($0, $1, ($5 + [24]))
	$12 = *($13)
	*((($5 + [40]) + [8])) = $12
	$6 = *($8 + [32])
	$11 = *($3)
	*((($5 + [8]) + [8])) = $12
	*($5 + [40]) = $11
	*($5 + [8]) = $11
	$11 = ( $2 ? $1 : $10 )
	CALL $9($0, $2, ($5 + [8]), $11, ((int_64)$11 != (int_64)$6))
	if ( ((int_64)*($8 + [32]) == (int_64)$1) ){ goto $label$13 }
	CALL $27($0, $2, $7, $1)
	
.LABEL $label$13
	$14 = *($5 + [96])
	if ( ($14 == 0) ){ goto $label$14 }
	$3 = ($5 + [100])
	$10 = *($3)
	if ( ((int_32)$10 == (int_32)$14) ){ goto $label$16 }
	
.LOOP $label$17:
	$10 = ($10 + [-24])
	$13 = *($10)
	*($10) = [0]
	if ( ($13 == 0) ){ goto $label$18 }
	CALL _ZdlPv($13)
	
.LABEL $label$18
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$17 }
	$10 = *(($5 + [96]))
	goto $label$15 
	
.LABEL $label$16
	$10 = $14
	
.LABEL $label$15
	*($3) = $14
	CALL _ZdlPv($10)
	
.LABEL $label$14
	$global$0 = ($5 + [112])
}

void .FUNC $24 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [20])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10103])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10149])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9876])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9924])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$5
	*($1 + [16]) = [1]
	$3 = ($1 + [16])
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10200])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($8 + [-15])
	*($5 + [16]) = $5
	*($5 + [28]) = $3
	*($5 + [24]) = $1
	CALL $14(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [24]), $2, $4, [17])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [32])
}

void .FUNC $27 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [128])
	$global$0 = $4
	CALL require_auth($3)
	$5 = [0]
	$6 = $2
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $7
	$8 = $5
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $7
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$9 = ($5 + [1])
	$5 = $9
	if ( $8 ){ goto $label$5 }
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8891])
	
.LABEL $label$1
	*(($4 + [56])) = [0]
	*($4 + [32]) = $1
	*($4 + [40]) = (int_64)-1
	*($4 + [48]) = (int_64)0
	*($4 + [24]) = *($0)
	$5 = CALL $23(($4 + [24]), $2, [8911])
	if ( *($5 + [16]) ){ goto $label$6 }
	*((($4 + [8]) + [8])) = *(($5 + [8]))
	*($4 + [8]) = *($5)
	CALL $28(($4 + [24]), $5)
	$8 = *(($4 + [52]))
	$9 = *(($4 + [48]))
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$9 }
	
.LOOP $label$11:
	$5 = ($8 + [-24])
	$0 = *($5)
	if ( ((int_64)(uint_64)*($0 + [8]) >> (uint_64)(int_64)8) == (int_64)$2) ){ goto $label$10 }
	$8 = $5
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$9 }
	if ( ((int_32)*(($0 + [20])) == (int_32)($4 + [24])) ){ goto $label$8 }
	CALL eosio_assert([0], [9967])
	goto $label$8 
	
.LABEL $label$9
	$5 = CALL db_find_i64(*($4 + [24]), *((($4 + [24]) + [8])), (int_64)3607749779137757184, $2)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$7 }
	if ( ((int_32)*(CALL $12(($4 + [24]), $5) + [20]) == (int_32)($4 + [24])) ){ goto $label$8 }
	CALL eosio_assert([0], [9967])
	
.LABEL $label$8
	CALL eosio_assert([0], [8935])
	
.LABEL $label$7
	if ( ((int_64)*($4 + [24]) == (int_64)CALL current_receiver()) ){ goto $label$12 }
	CALL eosio_assert([0], [10046])
	
.LABEL $label$12
	*(($5 = CALL _Znwj([32])) + [20]) = ($4 + [24])
	*($5 + [16]) = [1]
	*($5 + [8]) = *((($4 + [8]) + [8]))
	*($5) = *($4 + [8])
	*($4 + [104]) = (($4 + [64]) + [17])
	*($4 + [100]) = ($4 + [64])
	*($4 + [96]) = ($4 + [64])
	*($4 + [112]) = ($4 + [96])
	*($4 + [124]) = ($5 + [16])
	*($4 + [120]) = $5
	CALL $14(($4 + [120]), ($4 + [112]))
	$6 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	$9 = CALL db_store_i64(*((($4 + [24]) + [8])), (int_64)3607749779137757184, $3, $6), ($4 + [64]), [17]
	*($5 + [24]) = $9)
	$8 = (($4 + [24]) + [16])
	if ( (uint_64)($6 <= *($8)) ){ goto $label$13 }
	*($8) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$13
	*($4 + [96]) = $5
	$6 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($4 + [64]) = $6)
	*($4 + [120]) = $9
	$0 = ($4 + [52])
	$8 = *($0)
	if ( ((uint_32)$8 >= (uint_32)*((($4 + [24]) + [32]))) ){ goto $label$15 }
	*($8 + [8]) = $6
	*($8 + [16]) = $9
	*($4 + [96]) = [0]
	*($8) = $5
	*($0) = ($8 + [24])
	$5 = *($4 + [96])
	*($4 + [96]) = [0]
	if ( $5 ){ goto $label$14 }
	goto $label$6 
	
.LABEL $label$15
	CALL $15(($4 + [48]), ($4 + [96]), ($4 + [64]), ($4 + [120]))
	$5 = *($4 + [96])
	*($4 + [96]) = [0]
	if ( ($5 == 0) ){ goto $label$6 }
	
.LABEL $label$14
	CALL _ZdlPv($5)
	
.LABEL $label$6
	$9 = *($4 + [48])
	if ( ($9 == 0) ){ goto $label$16 }
	$0 = ($4 + [52])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$18 }
	
.LOOP $label$19:
	$5 = ($5 + [-24])
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$20 }
	CALL _ZdlPv($8)
	
.LABEL $label$20
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$19 }
	$5 = *(($4 + [48]))
	goto $label$17 
	
.LABEL $label$18
	$5 = $9
	
.LABEL $label$17
	*($0) = $9
	CALL _ZdlPv($5)
	
.LABEL $label$16
	$global$0 = ($4 + [128])
}

int_32 .FUNC $26 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9967])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $2($0, $5)
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9967])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10041])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$5 = *($0 + [4])
	$1 = *($1)
	$3 = *($1 + [4])
	$6 = (int_64)0
	$2 = [0]
	
.LOOP $label$2:
	if ( ($3 <= *(($1 + [8]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10506])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	$0 = *($3)
	$4 = ($3 + [1])
	*(($1 + [4])) = $4
	$3 = ($2 & [255])
	$6 = ((int_64)$6 | (int_64)(CASTING uint_64)(uint_32 (($0 & [127]) << $3)))
	$2 = ($3 + [7])
	$3 = $4
	if ( ($0 & [128]) ){ goto $label$2 }
	*($5) = $6
	$3 = ($5 + [4])
	if ( ((uint_32)(*(($1 + [8])) - $4) > (uint_32)[64]) ){ goto $label$4 }
	CALL eosio_assert([0], [10041])
	$4 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $4, [65])
	*(($3 = ($1 + [4]))) = (*($3) + [65])
}

void .FUNC $69 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10103])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10149])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$7 = *($3)
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9737])
	
.LABEL $label$3
	$8 = ((int_64)*($1 + [32]) + (int_64)*($7))
	*($1 + [32]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9780])
	$8 = *(($1 + [32]))
	
.LABEL $label$4
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9799])
	
.LABEL $label$5
	$8 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)*($1) < (int_64)1) ){ goto $label$6 }
	$7 = *($3)
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$7 }
	CALL eosio_assert([0], [9737])
	
.LABEL $label$7
	$6 = ((int_64)*($1 + [16]) + (int_64)*($7))
	*($1 + [16]) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [9780])
	$6 = *(($1 + [16]))
	
.LABEL $label$8
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$9 }
	CALL eosio_assert([0], [9799])
	
.LABEL $label$9
	*($1 + [48]) = ((float_64)*($1 + [48]) + (float_64)((float_64)(CASTING float_64)(int_64 *(*($3))) / (float_64)(CASTING float_64)(int_64 *($1))))
	
.LABEL $label$6
	if ( ((int_64)$8 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$10 }
	CALL eosio_assert([0], [10200])
	
.LABEL $label$10
	$4 = $4
	$3 = ($4 + [-64])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($4 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [48])
	CALL $105(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [56])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$11 }
	*(($0 + [16])) = ((int_64)$8 + (int_64)1)
	
.LABEL $label$11
	$global$0 = ($5 + [48])
}

void .FUNC $68 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [144])
	$global$0 = $3
	CALL require_auth(*($1))
	*(($3 + [48])) = [0]
	*(($3 + [32])) = *(($2 + [8]))
	*($3 + [40]) = (int_64)0
	$4 = *($1)
	*($3 + [8]) = $4
	$5 = *($0)
	*($3 + [16]) = $5
	*($3 + [24]) = *($2)
	$6 = ($3 + [40])
	$1 = CALL $126([9412])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$7 = ($3 + [24])
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$7 }
	*(($3 + [40])) = ($1 << [1])
	$8 = ($6 + [1])
	if ( $1 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$9 = (($1 + [16]) & [-16])
	$8 = CALL _Znwj($9)
	*(($3 + [48])) = $8
	*(($3 + [44])) = $1
	*($3 + [40]) = ($9 | [1])
	
.LABEL $label$6
	CALL memcpy($8, [9412], $1)
	
.LABEL $label$5
	*(($8 + $1)) = [0]
	*(($1 = CALL _Znwj([16]))) = $4
	*($1 + [8]) = (int_64)3617214756542218240
	*(($3 + [104])) = *(($7 + [8]))
	*(($8 = (($3 + [80]) + [40]))) = *(($6 + [8]))
	$4 = *($6)
	*(($3 + [40])) = (int_64)0
	*($3 + [128]) = $1
	$1 = ($1 + [16])
	*($3 + [136]) = $1
	*($3 + [132]) = $1
	*($3 + [80]) = *($3 + [8])
	*($3 + [88]) = *((($3 + [8]) + [8]))
	*($3 + [96]) = *($7)
	*($3 + [112]) = $4
	*((($3 + [8]) + [40])) = [0]
	CALL $10($5, (int_64)-3617168760277827584, ($3 + [128]), ($3 + [80]))
	if ( ((*($3 + [112]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*($8))
	
.LABEL $label$8
	$1 = *($3 + [128])
	if ( ($1 == 0) ){ goto $label$9 }
	*($3 + [132]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$9
	if ( (*(($3 + [40])) & [1]) ){ goto $label$11 }
	if ( ((int_64)*($2 + [8]) != (int_64)357812228100) ){ goto $label$10 }
	goto $label$3 
	
.LABEL $label$11
	CALL _ZdlPv(*(($3 + [48])))
	if ( ((int_64)*($2 + [8]) == (int_64)357812228100) ){ goto $label$3 }
	
.LABEL $label$10
	CALL eosio_assert([0], [9634])
	$4 = (int_64)0
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL $120($6)
	
.LABEL $label$3
	$4 = (int_64)0
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9655])
	
.LABEL $label$1
	*(($3 + [112])) = [0]
	*($3 + [96]) = (int_64)-1
	*($3 + [104]) = $4
	$4 = *($0)
	*($3 + [80]) = $4
	*($3 + [88]) = $4
	$1 = CALL db_find_i64($4, $4, (int_64)5455799419175698432, (int_64)1397704016)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$14 }
	$1 = CALL $48(($3 + [80]), $1)
	if ( ((int_32)*($1 + [56]) == (int_32)($3 + [80])) ){ goto $label$15 }
	CALL eosio_assert([0], [9967])
	
.LABEL $label$15
	$4 = *($0)
	*($3 + [128]) = $2
	CALL $69(($3 + [80]), $1, $4, ($3 + [128]))
	$0 = *($3 + [104])
	if ( $0 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$5 = *($0)
	*($3) = $2
	*($3 + [72]) = $5
	if ( ((int_64)$4 == (int_64)CALL current_receiver()) ){ goto $label$16 }
	CALL eosio_assert([0], [10046])
	
.LABEL $label$16
	*($3 + [132]) = $3
	*($3 + [128]) = ($3 + [80])
	*($3 + [136]) = ($3 + [72])
	*(($2 = CALL _Znwj([72])) + [8]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [56]) = ($3 + [80])
	CALL $70(($3 + [128]), $2)
	*($3 + [64]) = $2
	$4 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	*($3 + [128]) = $4)
	$0 = *($2 + [60])
	*($3 + [60]) = $0
	$6 = ($3 + [108])
	$1 = *($6)
	if ( ((uint_32)$1 >= (uint_32)*(($3 + [112]))) ){ goto $label$19 }
	*($1 + [8]) = $4
	*($1 + [16]) = $0
	*($3 + [64]) = [0]
	*($1) = $2
	*($6) = ($1 + [24])
	$2 = *($3 + [64])
	*($3 + [64]) = [0]
	if ( $2 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $54(($3 + [104]), ($3 + [64]), ($3 + [128]), ($3 + [60]))
	$2 = *($3 + [64])
	*($3 + [64]) = [0]
	if ( ($2 == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL _ZdlPv($2)
	
.LABEL $label$17
	$0 = *($3 + [104])
	if ( ($0 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$6 = ($3 + [108])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$21 }
	
.LOOP $label$22:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$23 }
	CALL _ZdlPv($1)
	
.LABEL $label$23
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$22 }
	$2 = *(($3 + [104]))
	goto $label$20 
	
.LABEL $label$21
	$2 = $0
	
.LABEL $label$20
	*($6) = $0
	CALL _ZdlPv($2)
	
.LABEL $label$12
	$global$0 = ($3 + [144])
	(unreachable)
}

void .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[80]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($3 - $4) / (int_32)[80])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[53687092]) ){ goto $label$3 }
	$3 = [53687091]
	$2 = ((int_32)($2 - $4) / (int_32)[80])
	if ( ((uint_32)$2 > (uint_32)[26843544]) ){ goto $label$6 }
	$3 = ($2 << [1])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj(((int_32)$3 * (int_32)[80]))
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*(CALL memset($3, [0], [80]) + [8]) = [0]
	$3 = (*($0) + [80])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $123($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$3 * (int_32)[80]))
	$5 = ($2 + ((int_32)$5 * (int_32)[80]))
	$3 = $5
	
.LOOP $label$8:
	*((($3 = CALL memset($3, [0], [80])) + [8])) = [0]
	$3 = ($3 + [80])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$6 = ($2 + ((int_32)$6 * (int_32)[80]))
	$1 = *($0)
	$7 = ($0 + [4])
	$3 = (*($7) - $1)
	$2 = ($5 + ((int_32)((int_32)$3 / (int_32)[-80]) * (int_32)[80]))
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $65 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $123($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10097])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [10097])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$5 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10097])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $5, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10097])
	$4 = *($1)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [8]), [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10259])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10304])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10354])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [144])
	$global$0 = $2
	CALL require_auth(*($1))
	$3 = [0]
	*(($2 + [72])) = [0]
	*($2 + [56]) = (int_64)-1
	*($2 + [64]) = (int_64)0
	$4 = *($0)
	*($2 + [40]) = $4
	$5 = *($1)
	*($2 + [48]) = $5
	$6 = CALL db_find_i64($4, $5, (int_64)-5001342326447013888, $5)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$3 = CALL $62(($2 + [40]), $6)
	if ( ((int_32)*($3 + [32]) == (int_32)($2 + [40])) ){ goto $label$1 }
	CALL eosio_assert([0], [9967])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9555])
	
.LABEL $label$1
	if ( ((uint_32)(*($3 + [8]) + [259200]) <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$3 }
	CALL eosio_assert([0], [9580])
	
.LABEL $label$3
	$5 = *($0)
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	$0 = CALL $126([9608])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$7 }
	*($2 + [8]) = ($0 << [1])
	$6 = (($2 + [8]) | [1])
	if ( $0 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$7 = (($0 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($2 + [8]) = ($7 | [1])
	*($2 + [16]) = $6
	*($2 + [12]) = $0
	
.LABEL $label$6
	CALL memcpy($6, [9608], $0)
	
.LABEL $label$5
	*(($6 + $0)) = [0]
	*(($6 = ($2 + [32]))) = *(($3 + [24]))
	*($2 + [24]) = *($3 + [16])
	$7 = *($2 + [16])
	*($2 + [16]) = [0]
	$4 = *($2 + [8])
	*($2 + [8]) = (int_64)0
	$8 = *($1)
	*(($0 = CALL _Znwj([16]))) = $5
	*($0 + [8]) = (int_64)3617214756542218240
	*(($1 = ($2 + [120]))) = $7
	*((($2 + [80]) + [24])) = *($6)
	*($2 + [128]) = $0
	*($2 + [80]) = $5
	*($2 + [88]) = $8
	*($2 + [112]) = $4
	$0 = ($0 + [16])
	*($2 + [136]) = $0
	*($2 + [132]) = $0
	*($2 + [96]) = *($2 + [24])
	CALL $10($5, (int_64)-3617168760277827584, ($2 + [128]), ($2 + [80]))
	if ( ((*($2 + [112]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*($1))
	
.LABEL $label$8
	$0 = *($2 + [128])
	if ( ($0 == 0) ){ goto $label$9 }
	*($2 + [132]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$9
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($2 + [16])))
	
.LABEL $label$10
	if ( $3 ){ goto $label$11 }
	CALL eosio_assert([0], [10407])
	CALL eosio_assert([0], [10441])
	
.LABEL $label$11
	$0 = CALL db_next_i64(*($3 + [36]), ($2 + [80]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$12 }
	CALL $62(($2 + [40]), $0)
	
.LABEL $label$12
	CALL $67(($2 + [40]), $3)
	$1 = *($2 + [64])
	if ( ($1 == 0) ){ goto $label$13 }
	$6 = ($2 + [68])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$15 }
	
.LOOP $label$16:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$17 }
	CALL _ZdlPv($0)
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$16 }
	$3 = *(($2 + [64]))
	goto $label$14 
	
.LABEL $label$15
	$3 = $1
	
.LABEL $label$14
	*($6) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$13
	$global$0 = ($2 + [144])
	return (unreachable)
	
.LABEL $label$4
	CALL $120(($2 + [8]))
}

void .FUNC $61 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10103])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10149])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9876])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9924])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10200])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-64])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [48])
	CALL $105(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [60]), $2, $4, [56])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

void .FUNC $60 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10103])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10149])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9876])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9924])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10200])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $56($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $63 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10103])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10149])
	
.LABEL $label$2
	$6 = *($1)
	*($1 + [8]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9737])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [16]) + (int_64)*($3))
	*($1 + [16]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	$3 = [8]
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [9780])
	$3 = [8]
	if ( ((int_64)*(($1 + [16])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [9799])
	$3 = ($1 + $3)
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = ($1 + $3)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10200])
	
.LABEL $label$4
	$8 = $4
	$4 = ($8 + [-32])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($8 + [-4])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $3
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	CALL $64(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $4, [28])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [48])
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10018])
	
.LABEL $label$5
	$4 = CALL $129($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	CALL $106(($3 + [32]), ($3 + [24]))
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $65(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $132($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10041])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [4])
	$3 = *($1)
	$4 = *($3 + [4])
	$7 = (int_64)0
	$8 = [0]
	
.LOOP $label$2:
	if ( ($4 <= *(($3 + [8]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10506])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	$5 = *($4)
	$9 = ($4 + [1])
	*(($3 + [4])) = $9
	$4 = ($8 & [255])
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($5 & [127]) << $4)))
	$8 = ($4 + [7])
	$4 = $9
	if ( ($5 & [128]) ){ goto $label$2 }
	*($6) = $7
	$4 = ($6 + [4])
	if ( ((uint_32)(*(($3 + [8])) - $9) > (uint_32)[32]) ){ goto $label$4 }
	CALL eosio_assert([0], [10041])
	$9 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $9, [33])
	*(($4 = ($3 + [4]))) = (*($4) + [33])
	$9 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10041])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($9, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10041])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*($9 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $100 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($1)
	$1 = *($5 + [4])
	$6 = ($5 + [8])
	$7 = ($5 + [4])
	
.LOOP $label$1:
	$8 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$9 = ((int_64)$4) != (int_64)0
	*($3 + [15]) = (($9) << [7]) | ($8 & [127]))
	if ( ((int_32)(*($6) - $1) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10097])
	$1 = *($7)
	
.LABEL $label$2
	CALL memcpy($1, ($3 + [15]), [1])
	$1 = (*($7) + [1])
	*($7) = $1
	if ( $9 ){ goto $label$1 }
	$7 = ($0 + [4])
	if ( ((int_32)(*(($5 + [8])) - $1) > (int_32)[32]) ){ goto $label$3 }
	CALL eosio_assert([0], [10097])
	$1 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $7, [33])
	*(($1 = ($5 + [4]))) = (*($1) + [33])
	$global$0 = ($3 + [16])
}

void .FUNC $103 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($1)
	$1 = *($5 + [4])
	$6 = ($5 + [8])
	$7 = ($5 + [4])
	
.LOOP $label$1:
	$8 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$9 = ((int_64)$4) != (int_64)0
	*($3 + [15]) = (($9) << [7]) | ($8 & [127]))
	if ( ((int_32)(*($6) - $1) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10097])
	$1 = *($7)
	
.LABEL $label$2
	CALL memcpy($1, ($3 + [15]), [1])
	$1 = (*($7) + [1])
	*($7) = $1
	if ( $9 ){ goto $label$1 }
	$7 = ($0 + [4])
	if ( ((int_32)(*(($5 + [8])) - $1) > (int_32)[32]) ){ goto $label$3 }
	CALL eosio_assert([0], [10097])
	$1 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $7, [33])
	*(($1 = ($5 + [4]))) = (*($1) + [33])
	$global$0 = ($3 + [16])
}

void .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10097])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $103(*($0 + [4]), $1, [1])
	$4 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10097])
	$1 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($1, $4, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = *($4 + [8])
	if ( ((int_32)(*(($0 + [8])) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10097])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10097])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10097])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10097])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10097])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10097])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10097])
	$6 = *($5)
	
.LABEL $label$6
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10097])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10041])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10041])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10041])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10041])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10041])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10041])
	$6 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10041])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [10506])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$7 = (CASTING uint_32)(uint_64 $4)
	$3 = *($1)
	$8 = *($1 + [4])
	$6 = ((int_32)($8 - $3) / (int_32)[80])
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$5 }
	CALL $108($1, ($7 - $6))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$6 }
	$8 = ($3 + ((int_32)$7 * (int_32)[80]))
	*(($1 + [4])) = $8
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	*($2) = $0
	*($2 + [8]) = $3
	*($2 + [12]) = ($3 + [8])
	CALL $109(($2 + [8]), $2)
	$3 = ($3 + [80])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [8]))
	*($2 + [32]) = *($1)
	$1 = CALL $121(($2 + [16]), ($1 + [16]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$4 = *($0 + [4])
	$3 = (*($0) + int_32($4 >> [1]))
	$0 = *($0)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($5 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$4 = CALL $121(($2 + [64]), $1)
	*(($2 + [8])) = *($5)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $2), (int_32 $4), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($4 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10041])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10041])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $83(*($1), (*($0) + [16]))
	$global$0 = ($2 + [16])
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $121(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $121(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10041])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10041])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10041])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10041])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $83(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [16]))
	*($2 + [32]) = *($1 + [8])
	$4 = *($1)
	$1 = CALL $121(($2 + [16]), ($1 + [24]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$3 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($6 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$5 = CALL $121(($2 + [64]), $1)
	*(($2 + [8])) = *($6)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $4), (int_64 $2), (int_32 $5), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($5 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

int_32 .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $107($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $122($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $122($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $120($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10041])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10041])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10041])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $81 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [256])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $129($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [116])) = [0]
	*(($4 + [108])) = (int_64)0
	*(($4 + [100])) = (int_64)0
	*(($4 + [92])) = (int_64)0
	*(($4 + [84])) = (int_64)0
	*(($8 = ($4 + [128]))) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [80]) = [0]
	*($4 + [120]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $7)
	*($4 + [152]) = ($4 + [56])
	*($4 + [192]) = ($4 + [72])
	CALL $92(($4 + [192]), ($4 + [152]))
	*(($9 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	*(($3 = (($4 + [152]) + [8]))) = *($9)
	*($4 + [152]) = *($4 + [8])
	$10 = *($3)
	*(($9 = (($4 + [192]) + [8]))) = $10
	*((($4 + [24]) + [24])) = $10
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [152])
	*($4 + [40]) = $0
	*($4 + [192]) = $0
	*($3) = *((($4 + [72]) + [16]))
	*(($10 = (($4 + [152]) + [16]))) = *((($4 + [72]) + [24]))
	*(($11 = (($4 + [152]) + [24]))) = *((($4 + [72]) + [32]))
	*(($12 = (($4 + [152]) + [32]))) = *(($4 + [112]))
	*(($13 = (($4 + [136]) + [8]))) = *($8)
	*($4 + [152]) = *($4 + [80])
	*($4 + [136]) = *($4 + [120])
	$0 = *($4 + [72])
	*((($4 + [232]) + [8])) = *($13)
	*($9) = *($3)
	*((($4 + [192]) + [16])) = *($10)
	*((($4 + [192]) + [24])) = *($11)
	*((($4 + [192]) + [32])) = *($12)
	*($4 + [248]) = $0
	*($4 + [232]) = *($4 + [136])
	*($4 + [192]) = *($4 + [152])
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 ($4 + [248])), (int_32 ($4 + [192])), (int_32 ($4 + [232])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $132($2)
	
.LABEL $label$5
	$global$0 = ($4 + [256])
	return [1]
}

int_32 .FUNC $80 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $129($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [48]) = (int_64)0
	*($4 + [40]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10041])
	
.LABEL $label$5
	$3 = ($2 + $7)
	CALL memcpy(($4 + [40]), $2, [8])
	*($4 + [8]) = (int_64)0
	$8 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10041])
	
.LABEL $label$6
	CALL memcpy(($4 + [8]), $8, [8])
	$9 = *($4 + [8])
	*((($4 + [40]) + [8])) = $9
	*(($4 + [32])) = $3
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [16])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	$0 = *($4 + [40])
	*($4 + [56]) = $9
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $0), (int_64 ($4 + [56])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $132($2)
	
.LABEL $label$8
	$global$0 = ($4 + [64])
	return [1]
}

int_32 .FUNC $72 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [160])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $129($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [96]))) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [68]) = $2
	*($4 + [64]) = $2
	*($4 + [72]) = ($2 + $7)
	*($4 + [136]) = ($4 + [64])
	*($4 + [32]) = ($4 + [80])
	CALL $82(($4 + [32]), ($4 + [136]))
	*(($9 = (($4 + [16]) + [8]))) = *($4 + [72])
	*($4 + [16]) = *($4 + [64])
	*(($3 = (($4 + [120]) + [8]))) = *($9)
	*($4 + [120]) = *($4 + [16])
	$9 = *($3)
	*((($4 + [136]) + [8])) = $9
	*(($4 + [56])) = $9
	*($4 + [32]) = $0
	*($4 + [40]) = $1
	$0 = *($4 + [120])
	*($4 + [48]) = $0
	*($4 + [136]) = $0
	*(($9 = (($4 + [104]) + [8]))) = *($8)
	*($4 + [104]) = *($4 + [88])
	$0 = *($4 + [80])
	*($3) = *($9)
	*($4 + [152]) = $0
	*($4 + [120]) = *($4 + [104])
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$0 = *((($4 + [120]) + [8]))
	*((($4 + [136]) + [8])) = $0
	*(($4 + [8])) = $0
	$0 = *($4 + [120])
	*($4) = $0
	*($4 + [136]) = $0
	CALL void $3((int_32 ($4 + [152])), (int_32 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $132($2)
	
.LABEL $label$6
	$global$0 = ($4 + [160])
	return [1]
}

int_32 .FUNC $73 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [144])
	$global$0 = $3
	*(($4 = $3) + [104]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $129($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [72]) + [24])) = [0]
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	*($4 + [128]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $87(($4 + [24]), ($4 + [128]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	*(($6 = (($4 + [112]) + [8]))) = *($3)
	*($4 + [112]) = *($4 + [8])
	$3 = *($6)
	*((($4 + [128]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [112])
	*($4 + [40]) = $0
	*($4 + [128]) = $0
	*($4 + [132]) = ($4 + [104])
	*($4 + [128]) = ($4 + [24])
	CALL $88(($4 + [128]), ($4 + [72]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [88]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $132($2)
	$2 = [1]
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [96])))
	$global$0 = ($4 + [144])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [144])
	return $2
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *($0)
	$6 = (int_64)1397704016
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $8
	$9 = $7
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$10 = ($7 + [1])
	$7 = $10
	if ( $9 ){ goto $label$5 }
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8192])
	
.LABEL $label$1
	*($1 + [8]) = (int_64)357812228100
	*($1) = (int_64)0
	$6 = (int_64)1397704016
	$7 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$8 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$6 = $8
	$9 = $7
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$6 = $8
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$10 = ($7 + [1])
	$7 = $10
	if ( $9 ){ goto $label$10 }
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8192])
	
.LABEL $label$6
	*($1 + [16]) = (int_64)0
	*(($1 + [24])) = (int_64)357812228100
	$7 = *($4)
	*($1 + [32]) = *($7)
	$6 = *(($7 + [8]))
	*($1 + [48]) = (int_64)4607182418800017408
	*(($1 + [40])) = $6
	$9 = $2
	$7 = ($9 + [-64])
	$global$0 = $7
	*($3 + [12]) = $7
	*($3 + [8]) = $7
	*($3 + [16]) = ($9 + [-8])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [16])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [32])
	*($3 + [44]) = ($1 + [48])
	CALL $105(($3 + [32]), ($3 + [24]))
	$6 = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8
	*($1 + [60]) = CALL db_store_i64(*($5 + [8]), (int_64)5455799419175698432, *(*($0 + [8])), $6), $7, [56])
	if ( (uint_64)($6 <= *($5 + [16])) ){ goto $label$11 }
	*(($5 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$11
	$global$0 = ($3 + [48])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [240])
	$global$0 = $3
	CALL memory()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$1 }
	if ( ((int_64)$2 <= (int_64)-3617168760263771329) ){ goto $label$15 }
	if ( ((int_64)$2 > (int_64)4929617502180212735) ){ goto $label$14 }
	if ( ((int_64)$2 > (int_64)-3075276126730321921) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)-3617168760263771328) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)-3102536759825661952) ){ goto $label$1 }
	*($3 + [148]) = [0]
	*($3 + [144]) = [1]
	*($3 + [88]) = *($3 + [144])
	CALL $72($1, $1, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$15
	if ( ((int_64)$2 <= (int_64)-5001342339331915777) ){ goto $label$13 }
	if ( ((int_64)$2 > (int_64)-4157661383434960897) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)-5001342339331915776) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)-4993669930013425664) ){ goto $label$1 }
	*($3 + [188]) = [0]
	*($3 + [184]) = [2]
	*($3 + [48]) = *($3 + [184])
	CALL $73($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$14
	if ( ((int_64)$2 > (int_64)5454311842506244095) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)4929617502180212736) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)5031766152489992192) ){ goto $label$1 }
	*($3 + [236]) = [0]
	*($3 + [232]) = [3]
	*($3) = *($3 + [232])
	CALL $74($1, $1, $3)
	goto $label$1 
	
.LABEL $label$13
	if ( ((int_64)$2 == (int_64)-8283072545914093568) ){ goto $label$6 }
	if ( ((int_64)$2 == (int_64)-5004317784067883008) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-5003132314734034944) ){ goto $label$1 }
	*($3 + [196]) = [0]
	*($3 + [192]) = [4]
	*($3 + [40]) = *($3 + [192])
	CALL $75($1, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$12
	if ( ((int_64)$2 == (int_64)-3075276126730321920) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)4921564679018381312) ){ goto $label$1 }
	*($3 + [204]) = [0]
	*($3 + [200]) = [5]
	*($3 + [32]) = *($3 + [200])
	CALL $75($1, $1, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$11
	if ( ((int_64)$2 == (int_64)-4157661383434960896) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	*($3 + [212]) = [0]
	*($3 + [208]) = [6]
	*($3 + [24]) = *($3 + [208])
	CALL $76($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$10
	if ( ((int_64)$2 == (int_64)5454311842506244096) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)8516769789752901632) ){ goto $label$1 }
	*($3 + [220]) = [0]
	*($3 + [216]) = [7]
	*($3 + [16]) = *($3 + [216])
	CALL $77($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [172]) = [0]
	*($3 + [168]) = [8]
	*($3 + [64]) = *($3 + [168])
	CALL $78($1, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [132]) = [0]
	*($3 + [128]) = [9]
	*($3 + [104]) = *($3 + [128])
	CALL $79($1, $1, ($3 + [104]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [180]) = [0]
	*($3 + [176]) = [10]
	*($3 + [56]) = *($3 + [176])
	CALL $80($1, $1, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [164]) = [0]
	*($3 + [160]) = [11]
	*($3 + [72]) = *($3 + [160])
	CALL $81($1, $1, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [140]) = [0]
	*($3 + [136]) = [12]
	*($3 + [96]) = *($3 + [136])
	CALL $79($1, $1, ($3 + [96]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [228]) = [0]
	*($3 + [224]) = [13]
	*($3 + [8]) = *($3 + [224])
	CALL $74($1, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [156]) = [0]
	*($3 + [152]) = [14]
	*($3 + [80]) = *($3 + [152])
	CALL $72($1, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$2
	*($3 + [124]) = [0]
	*($3 + [120]) = [15]
	*($3 + [112]) = *($3 + [120])
	CALL $72($1, $1, ($3 + [112]))
	
.LABEL $label$1
	CALL $125([0])
	$global$0 = ($3 + [240])
}

int_32 .FUNC $76 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [160])
	$global$0 = $3
	*(($4 = $3) + [120]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $129($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [72]) + [24])) = (int_64)0
	*(($4 + [112])) = [0]
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	*($4 + [144]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $85(($4 + [24]), ($4 + [144]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	*(($6 = (($4 + [128]) + [8]))) = *($3)
	*($4 + [128]) = *($4 + [8])
	$3 = *($6)
	*((($4 + [144]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [128])
	*($4 + [40]) = $0
	*($4 + [144]) = $0
	*($4 + [148]) = ($4 + [120])
	*($4 + [144]) = ($4 + [24])
	CALL $86(($4 + [144]), ($4 + [72]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [104]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $132($2)
	$2 = [1]
	if ( ((*($4 + [104]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [112])))
	$global$0 = ($4 + [160])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [160])
	return $2
}

int_32 .FUNC $77 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [144])
	$global$0 = $3
	*(($4 = $3) + [104]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $129($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [80])) = (int_64)0
	*(($4 + [96])) = [0]
	*($4 + [72]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	$6 = ($2 + $5)
	*($4 + [56]) = $6
	$3 = $2
	if ( ((uint_32)$5 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10041])
	$6 = *(($4 + [56]))
	$3 = *($4 + [52])
	
.LABEL $label$4
	CALL memcpy(($4 + [64]), $3, [8])
	$3 = ($3 + [8])
	*($4 + [52]) = $3
	$7 = (($4 + [64]) + [8])
	if ( ((uint_32)($6 - $3) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10041])
	$6 = *((($4 + [48]) + [8]))
	$3 = *($4 + [52])
	
.LABEL $label$5
	CALL memcpy($7, $3, [8])
	$3 = ($3 + [8])
	*($4 + [52]) = $3
	*($4 + [16]) = (int_64)0
	if ( ((uint_32)($6 - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10041])
	$3 = *($4 + [52])
	
.LABEL $label$6
	CALL memcpy(($4 + [16]), $3, [8])
	*(($4 + [80])) = *($4 + [16])
	*($4 + [52]) = ($3 + [8])
	CALL $83(($4 + [48]), (($4 + [64]) + [24]))
	*(($3 = ($4 + [8]))) = *((($4 + [48]) + [8]))
	*($4) = *($4 + [48])
	*(($6 = (($4 + [112]) + [8]))) = *($3)
	*($4 + [112]) = *($4)
	$3 = *($6)
	*((($4 + [128]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [112])
	*($4 + [32]) = $0
	*($4 + [128]) = $0
	*($4 + [132]) = ($4 + [104])
	*($4 + [128]) = ($4 + [16])
	CALL $84(($4 + [128]), ($4 + [64]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$9 }
	$2 = [1]
	if ( (*($4 + [88]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $132($2)
	$2 = [1]
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv(*(($4 + [96])))
	$global$0 = ($4 + [144])
	return $2
	
.LABEL $label$7
	$global$0 = ($4 + [144])
	return $2
}

int_32 .FUNC $74 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [160])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $129($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [104]))) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [76]) = $2
	*($4 + [72]) = $2
	*($4 + [80]) = ($2 + $7)
	*($4 + [144]) = ($4 + [72])
	*($4 + [40]) = ($4 + [88])
	CALL $82(($4 + [40]), ($4 + [144]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [80])
	*($4 + [24]) = *($4 + [72])
	*(($3 = (($4 + [128]) + [8]))) = *($9)
	*($4 + [128]) = *($4 + [24])
	$9 = *($3)
	*((($4 + [144]) + [8])) = $9
	*(($4 + [64])) = $9
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$0 = *($4 + [128])
	*($4 + [56]) = $0
	*($4 + [144]) = $0
	*(($9 = (($4 + [112]) + [8]))) = *($8)
	*($4 + [112]) = *($4 + [96])
	$0 = *($4 + [88])
	*($3) = *($9)
	*($4 + [128]) = *($4 + [112])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$1 = *((($4 + [128]) + [8]))
	*((($4 + [144]) + [8])) = $1
	*((($4 + [8]) + [8])) = $1
	$1 = *($4 + [128])
	*($4 + [8]) = $1
	*($4 + [144]) = $1
	CALL void $3((int_32 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $132($2)
	
.LABEL $label$6
	$global$0 = ($4 + [160])
	return [1]
}

void .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $100(*($0), $1, [1])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10097])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [8])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10097])
	$0 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $4, [8])
	$0 = (*($0) + [8])
	*(($0 = ($1 + [4]))) = $0
	*($2 + [8]) = *($4 + [8])
	if ( ((int_32)(*(($1 + [8])) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10097])
	$0 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, ($2 + [8]), [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	*($1) = CALL $42(*($5))
	$6 = *(*($5 + [4]))
	*($1 + [8 align=4]) = *($6)
	*(($1 + [37])) = *(($6 + [29]))
	*(($1 + [32])) = *(($6 + [24]))
	*(($1 + [24])) = *(($6 + [16]))
	*(($1 + [16])) = *(($6 + [8]))
	$6 = *($5 + [8])
	*($1 + [48]) = *($6)
	*(($1 + [56])) = *(($6 + [8]))
	$7 = ($1 + [48])
	$8 = ($1 + [8])
	$9 = *($1 + [8])
	$6 = [57]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ($6 <= [513]) ){ goto $label$3 }
	$5 = CALL $129($6)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$2
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($5 + $6)
	*($3 + [56]) = $3
	*($3 + [20]) = $8
	*($3 + [16]) = $1
	*($3 + [24]) = $7
	CALL $102(($3 + [16]), ($3 + [56]))
	$9 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($4 + [8]), (int_64)-2991713964573851648, *(*($0 + [8])), $9, $5, $6)
	if ( ($6 <= [513]) ){ goto $label$4 }
	CALL $132($5)
	
.LABEL $label$4
	if ( (uint_64)($9 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$9 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$11 = *($1)
	CALL $133(($3 + [16]), ($1 + [12]), [33])
	*($1 + [72]) = CALL db_idx256_store($9, (int_64)-2991713964573851648, $10, $11, ($3 + [16]), [2])
	$global$0 = ($3 + [64])
}

void .FUNC $37 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $123($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $78 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [160])
	$global$0 = $3
	*(($4 = $3) + [120]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $129($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [88])) = (int_64)0
	*((($4 + [72]) + [24])) = (int_64)0
	*(($4 + [112])) = [0]
	*($4 + [72]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	$3 = $2
	if ( ((uint_32)$5 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10041])
	$3 = *($4 + [60])
	
.LABEL $label$4
	CALL memcpy(($4 + [72]), $3, [8])
	*($4 + [60]) = ($3 + [8])
	CALL $89(($4 + [56]), (($4 + [72]) + [8]))
	CALL $90(($4 + [56]), ($4 + [92]))
	CALL $83(($4 + [56]), ($4 + [104]))
	*(($3 = (($4 + [8]) + [8]))) = *((($4 + [56]) + [8]))
	*($4 + [8]) = *($4 + [56])
	*(($6 = (($4 + [128]) + [8]))) = *($3)
	*($4 + [128]) = *($4 + [8])
	$3 = *($6)
	*((($4 + [144]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [128])
	*($4 + [40]) = $0
	*($4 + [144]) = $0
	*($4 + [148]) = ($4 + [120])
	*($4 + [144]) = ($4 + [24])
	CALL $91(($4 + [144]), ($4 + [72]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$9 }
	if ( (*($4 + [104]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $132($2)
	if ( ((*($4 + [104]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv(*(($4 + [112])))
	$2 = *(($4 + [92]))
	if ( $2 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$2 = *(($4 + [92]))
	if ( ($2 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + [96])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$5
	$2 = *(($4 + [80]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($4 + [84])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$10
	$global$0 = ($4 + [160])
	return [1]
}

int_32 .FUNC $79 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $129($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [32]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10041])
	
.LABEL $label$5
	CALL memcpy(($4 + [32]), $2, [8])
	*(($4 + [20])) = ($2 + [8])
	*(($4 + [24])) = $3
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [40]) = *($4 + [32])
	$3 = ($4 + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 ($4 + [40])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $132($2)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
	return [1]
}

void .FUNC $32 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	$5 = ($global$0 - [336])
	$global$0 = $5
	$6 = [0]
	*(($5 + [256])) = [0]
	*($5 + [240]) = (int_64)-1
	*($5 + [248]) = (int_64)0
	*($5 + [260]) = [0]
	$7 = *($0)
	*($5 + [224]) = $7
	*($5 + [232]) = $7
	CALL require_auth(*($1))
	if ( ((*($4) & [1]) == 0) ){ goto $label$1 }
	if ( (*($4 + [4]) <= [257]) ){ goto $label$1 }
	CALL eosio_assert([0], [8532])
	
.LABEL $label$1
	CALL $33(($5 + [208]), $3)
	$8 = *($5 + [208])
	CALL $133(($5 + [176]), $8, (*($5 + [212]) - $8))
	$7 = (int_64)1397704016
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$5 }
	$7 = $9
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$5
	$7 = $9
	
.LOOP $label$6:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $8 ){ goto $label$6 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8192])
	
.LABEL $label$2
	$11 = (int_64)0
	$12 = *($2)
	if ( ((int_32)$12 == (int_32)*($2 + [4])) ){ goto $label$7 }
	$13 = (($5 + [264]) + [8])
	$11 = (int_64)0
	$14 = ($5 + [252])
	$15 = ($2 + [4])
	
.LOOP $label$8:
	$7 = *($12)
	*($13) = *($5 + [176])
	*(($13 + [8])) = *($5 + [184])
	*(($13 + [16])) = *((($5 + [176]) + [16]))
	*(($13 + [24])) = *((($5 + [176]) + [24]))
	*($5 + [264]) = $7
	CALL $133(($5 + [144]), ($5 + [264]), [40])
	$7 = *($12)
	$8 = *($14)
	$2 = *((($5 + [224]) + [24]))
	if ( ((int_32)$2 == (int_32)$8) ){ goto $label$12 }
	
.LOOP $label$14:
	$6 = ($8 + [-24])
	$10 = *($6)
	if ( ((int_64)*($10) == (int_64)$7) ){ goto $label$13 }
	$8 = $6
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	if ( ((int_32)$2 == (int_32)$8) ){ goto $label$12 }
	if ( ((int_32)*($10 + [64]) != (int_32)($5 + [224])) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$6 = CALL db_find_i64(*($5 + [224]), *((($5 + [224]) + [8])), (int_64)-2991713964573851648, $7)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$10 }
	$10 = CALL $34(($5 + [224]), $6)
	if ( ((int_32)*($10 + [64]) == (int_32)($5 + [224])) ){ goto $label$9 }
	
.LABEL $label$11
	CALL eosio_assert([0], [9967])
	goto $label$9 
	
.LABEL $label$10
	$10 = [0]
	CALL eosio_assert([0], [9301])
	
.LABEL $label$9
	CALL $134(($5 + [144]), ($12 + [8]), ($10 + [8]))
	if ( ((int_64)*(($10 + [56])) == (int_64)357812228100) ){ goto $label$15 }
	CALL eosio_assert([0], [9737])
	
.LABEL $label$15
	$11 = ((int_64)*($10 + [48]) + (int_64)$11)
	if ( ((int_64)$11 > (int_64)-4611686018427387904) ){ goto $label$18 }
	CALL eosio_assert([0], [9780])
	if ( $10 ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$18
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$19 }
	CALL eosio_assert([0], [9799])
	
.LABEL $label$19
	if ( $10 ){ goto $label$16 }
	
.LABEL $label$17
	CALL eosio_assert([0], [10407])
	CALL eosio_assert([0], [10441])
	
.LABEL $label$16
	$6 = CALL db_next_i64(*($10 + [68]), ($5 + [120]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$20 }
	CALL $34(($5 + [224]), $6)
	
.LABEL $label$20
	CALL $35(($5 + [224]), $10)
	$12 = ($12 + [80])
	if ( ((int_32)$12 != (int_32)*($15)) ){ goto $label$8 }
	
.LABEL $label$7
	$7 = (int_64)1397704016
	$6 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$24 }
	$7 = $9
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$24
	$7 = $9
	
.LOOP $label$25:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$22 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $8 ){ goto $label$25 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	CALL eosio_assert([0], [8192])
	
.LABEL $label$21
	$6 = *($3)
	*($5 + [136]) = $6
	if ( ((int_32)$6 == (int_32)*($3 + [4])) ){ goto $label$28 }
	$12 = (($5 + [72]) + [32])
	$13 = (($5 + [264]) + [32])
	$15 = (($5 + [264]) + [16])
	$14 = (($5 + [72]) + [16])
	$16 = (($5 + [224]) + [24])
	$2 = (($5 + [144]) + [8])
	$17 = ($5 + [252])
	$18 = ($3 + [4])
	$19 = (($5 + [72]) + [40])
	$20 = (int_64)0
	
.LOOP $label$29:
	*($2) = *(($6 + [56]))
	$7 = *($6 + [48])
	*($5 + [144]) = $7
	if ( ((uint_64)((int_64)$7 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$41 }
	$21 = *($2)
	$7 = (uint_64)$21 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$44 }
	$7 = $9
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$42 }
	goto $label$43 
	
.LABEL $label$44
	$7 = $9
	
.LOOP $label$45:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$41 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $8 ){ goto $label$45 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$42 }
	
.LABEL $label$43
	if ( ((int_64)$21 != (int_64)357812228100) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$41
	CALL eosio_assert([0], [9314])
	if ( ((int_64)*($2) == (int_64)357812228100) ){ goto $label$39 }
	
.LABEL $label$40
	CALL eosio_assert([0], [9328])
	if ( ((int_64)*($5 + [144]) > (int_64)0) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	if ( ((int_64)*($5 + [144]) <= (int_64)0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ((int_64)*($2) != (int_64)357812228100) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$37
	CALL eosio_assert([0], [9354])
	if ( ((int_64)*($2) == (int_64)357812228100) ){ goto $label$35 }
	
.LABEL $label$36
	CALL eosio_assert([0], [9737])
	$20 = ((int_64)*($5 + [144]) + (int_64)$20)
	if ( ((int_64)$20 > (int_64)-4611686018427387904) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	$20 = ((int_64)*($5 + [144]) + (int_64)$20)
	if ( ((int_64)$20 <= (int_64)-4611686018427387904) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ((int_64)$20 < (int_64)4611686018427387904) ){ goto $label$46 }
	CALL eosio_assert([0], [9799])
	
.LABEL $label$46
	if ( (int_64)(*(*($5 + [136]) + [40]) == 0) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	CALL eosio_assert([0], [9780])
	if ( ((int_64)(*(*($5 + [136]) + [40]) == 0) == 0) ){ goto $label$31 }
	
.LABEL $label$32
	$7 = *($1)
	*($5 + [120]) = $0
	*((($5 + [120]) + [8])) = ($5 + [144])
	*($5 + [124]) = ($5 + [136])
	*($5 + [312]) = $7
	if ( ((int_64)*($5 + [224]) == (int_64)CALL current_receiver()) ){ goto $label$47 }
	CALL eosio_assert([0], [10046])
	
.LABEL $label$47
	*((($5 + [264]) + [8])) = ($5 + [312])
	*($5 + [268]) = ($5 + [120])
	*($5 + [264]) = ($5 + [224])
	*(($6 = CALL _Znwj([80])) + [48]) = (int_64)0
	*($6 + [8]) = [0]
	*($6 + [56]) = (int_64)0
	*($6 + [64]) = ($5 + [224])
	CALL $36(($5 + [264]), $6)
	*($5 + [328]) = $6
	$7 = *($6)
	*($5 + [264]) = $7
	$10 = *($6 + [68])
	*($5 + [324]) = $10
	$8 = *($17)
	if ( ((uint_32)$8 >= (uint_32)*((($5 + [224]) + [32]))) ){ goto $label$49 }
	*($8 + [8]) = $7
	*($8 + [16]) = $10
	*($5 + [328]) = [0]
	*($8) = $6
	*($17) = ($8 + [24])
	$6 = *($5 + [328])
	*($5 + [328]) = [0]
	if ( $6 ){ goto $label$48 }
	goto $label$30 
	
.LABEL $label$49
	CALL $37($16, ($5 + [328]), ($5 + [264]), ($5 + [324]))
	$6 = *($5 + [328])
	*($5 + [328]) = [0]
	if ( ($6 == 0) ){ goto $label$30 }
	
.LABEL $label$48
	CALL _ZdlPv($6)
	goto $label$30 
	
.LABEL $label$31
	$7 = *($0)
	*(($8 = (($5 + [120]) + [8]))) = (int_64)3617214756542218240
	*($5 + [120]) = $7
	*((($6 = CALL _Znwj([16])) + [8])) = *($8)
	*($6) = *($5 + [120])
	*($14) = *($5 + [144])
	*(($8 = ($14 + [8]))) = *($2)
	*(($10 = (($5 + [72]) + [8]))) = *(*($5 + [136]) + [40])
	*($5 + [72]) = *($0)
	CALL $121($12, $4)
	$3 = ($6 + [16])
	*((($5 + [312]) + [8])) = $3
	*((($5 + [264]) + [8])) = *($10)
	*($15) = *($14)
	*(($15 + [8])) = *($8)
	$8 = *(($12 + [8]))
	$9 = *($12)
	*($12) = (int_64)0
	*($13) = $9
	*($19) = [0]
	*(($13 + [8])) = $8
	*($5 + [316]) = $3
	*($5 + [312]) = $6
	*($5 + [264]) = *($5 + [72])
	CALL $10($7, (int_64)-3617168760277827584, ($5 + [312]), ($5 + [264]))
	if ( ((*($13) & [1]) == 0) ){ goto $label$50 }
	CALL _ZdlPv(*((($5 + [264]) + [40])))
	
.LABEL $label$50
	$6 = *($5 + [312])
	if ( ($6 == 0) ){ goto $label$51 }
	*($5 + [316]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$51
	if ( ((*($12) & [1]) == 0) ){ goto $label$30 }
	CALL _ZdlPv(*($19))
	
.LABEL $label$30
	$6 = (*($5 + [136]) + [64])
	*($5 + [136]) = $6
	if ( ((int_32)$6 != (int_32)*($18)) ){ goto $label$29 }
	if ( ((int_64)$11 >= (int_64)$20) ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$28
	$20 = (int_64)0
	if ( ((int_64)$11 >= (int_64)0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL eosio_assert([0], [9385])
	
.LABEL $label$26
	$7 = (int_64)
	if ( ((int_64)$7($11 - $20)) <= (int_64)-4611686018427387904) ){ goto $label$58 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$57 }
	if ( ((int_64)$7 > (int_64)0) ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$58
	CALL eosio_assert([0], [9924])
	$6 = *($5 + [208])
	if ( $6 ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$57
	CALL eosio_assert([0], [9946])
	
.LABEL $label$56
	$9 = *($0)
	*($5 + [152]) = (int_64)3617214756542218240
	*($5 + [144]) = $9
	$6 = CALL _Znwj([16])
	*(($5 + [32])) = (int_64)357812228100
	*(($5 + [48])) = [0]
	*($6) = *($5 + [144])
	*(($6 + [8])) = *($5 + [152])
	*($5 + [56]) = $6
	*($5 + [24]) = $7
	*($5 + [40]) = (int_64)0
	$6 = ($6 + [16])
	*($5 + [64]) = $6
	*($5 + [60]) = $6
	*($5 + [8]) = *($0)
	*($5 + [16]) = *($1)
	$8 = ($5 + [40])
	$6 = CALL $126([9412])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$52 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$61 }
	*(($5 + [40])) = ($6 << [1])
	$10 = ($8 + [1])
	if ( $6 ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$61
	$2 = (($6 + [16]) & [-16])
	$10 = CALL _Znwj($2)
	*(($5 + [48])) = $10
	*(($5 + [44])) = $6
	*($5 + [40]) = ($2 | [1])
	
.LABEL $label$60
	CALL memcpy($10, [9412], $6)
	
.LABEL $label$59
	*(($10 + $6)) = [0]
	$6 = (($5 + [56]) + [8])
	$10 = *($6)
	*($6) = [0]
	*((($5 + [264]) + [24])) = *((($5 + [8]) + [24]))
	*(($6 = (($5 + [264]) + [40]))) = *(($8 + [8]))
	$7 = *($8)
	*(($5 + [40])) = [0]
	*($5 + [120]) = *($5 + [56])
	*($5 + [128]) = $10
	*($5 + [56]) = (int_64)0
	*($5 + [264]) = *($5 + [8])
	*($5 + [272]) = *((($5 + [8]) + [8]))
	*($5 + [280]) = *($5 + [24])
	*($5 + [296]) = $7
	*(($5 + [44])) = [0]
	*((($5 + [8]) + [40])) = [0]
	CALL $10($9, (int_64)-3617168760277827584, ($5 + [120]), ($5 + [264]))
	if ( ((*($5 + [296]) & [1]) == 0) ){ goto $label$62 }
	CALL _ZdlPv(*($6))
	
.LABEL $label$62
	$6 = *($5 + [120])
	if ( ($6 == 0) ){ goto $label$63 }
	*($5 + [124]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$63
	if ( ((*(($5 + [40])) & [1]) == 0) ){ goto $label$55 }
	CALL _ZdlPv(*(($5 + [48])))
	
.LABEL $label$55
	$6 = *($5 + [208])
	if ( ($6 == 0) ){ goto $label$53 }
	
.LABEL $label$54
	*($5 + [212]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$53
	$10 = *($5 + [248])
	if ( ($10 == 0) ){ goto $label$64 }
	$2 = ($5 + [252])
	$6 = *($2)
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$66 }
	
.LOOP $label$67:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$68 }
	CALL _ZdlPv($8)
	
.LABEL $label$68
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$67 }
	$6 = *(($5 + [248]))
	goto $label$65 
	
.LABEL $label$66
	$6 = $10
	
.LABEL $label$65
	*($2) = $10
	CALL _ZdlPv($6)
	
.LABEL $label$64
	$global$0 = ($5 + [336])
	return (unreachable)
	
.LABEL $label$52
	CALL $120($8)
}

void .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = *($1)
	$4 = *($1 + [4])
	$6 = (CASTING uint_64)(uint_32 int_32(($4 - $5) >> [6]))
	$7 = $6
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = ([-57] - $3)
	$7 = *($5)
	
.LOOP $label$6:
	$8 = ($8 + [-1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$6 }
	$3 = ([0] - $8)
	$5 = ($5 + [64])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	$3 = [0]
	if ( ($8 == 0) ){ goto $label$3 }
	$3 = ([0] - $8)
	
.LABEL $label$4
	CALL $38($0, $3)
	$3 = *(($0 + [4]))
	$6 = (CASTING uint_64)(uint_32 int_32((*(($1 + [4])) - *($1)) >> [6]))
	$8 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$8 = [0]
	
.LABEL $label$2
	*($2 + [12]) = $8
	*($2 + [8]) = $8
	*($2 + [16]) = $3
	$4 = ($2 + [16])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	*($2 + [32]) = ((((int_64)$6) != (int_64)0) << [7]) | ($5 & [127]))
	if ( ((int_32)($3 - $8) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [10097])
	$8 = *($2 + [12])
	
.LABEL $label$8
	CALL memcpy($8, ($2 + [32]), [1])
	$8 = ($8 + [1])
	*($2 + [12]) = $8
	if ( (int_64)($6 == 0) ){ goto $label$9 }
	$3 = *($4)
	goto $label$7 
	
.LABEL $label$9
	$3 = *(($1 + [4]))
	$8 = *($1)
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$10 }
	$5 = ($2 + [40])
	
.LOOP $label$11:
	*($2 + [24]) = ($2 + [8])
	*($2 + [32]) = $8
	*($5) = ($8 + [48])
	*($2 + [36]) = ($8 + [40])
	CALL $39(($2 + [32]), ($2 + [24]))
	$8 = ($8 + [64])
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$11 }
	
.LABEL $label$10
	$global$0 = ($2 + [48])
}

void .FUNC $30 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [128])
	$global$0 = $3
	$4 = [0]
	$5 = $2
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$5 = $6
	$7 = $4
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = $6
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = ((int_32)$4 < (int_32)[6])
	$8 = ($4 + [1])
	$4 = $8
	if ( $7 ){ goto $label$5 }
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8192])
	
.LABEL $label$1
	*(($3 + [112])) = [0]
	*($3 + [96]) = (int_64)-1
	*($3 + [104]) = (int_64)0
	$5 = *($0)
	*($3 + [80]) = $5
	*($3 + [88]) = $2
	$4 = CALL db_find_i64($5, $2, (int_64)-4157508551318700032, $2)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	$4 = CALL $2(($3 + [80]), $4)
	if ( ((int_32)*($4 + [40]) == (int_32)($3 + [80])) ){ goto $label$7 }
	CALL eosio_assert([0], [9967])
	
.LABEL $label$7
	CALL require_auth(*($4 + [32]))
	*(($3 + [72])) = [0]
	*($3 + [56]) = (int_64)-1
	*($3 + [64]) = (int_64)0
	$5 = *($0)
	*($3 + [40]) = $5
	*($3 + [48]) = $1
	$7 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	$7 = CALL $12(($3 + [40]), $7)
	if ( ((int_32)*($7 + [20]) == (int_32)($3 + [40])) ){ goto $label$9 }
	CALL eosio_assert([0], [9967])
	
.LABEL $label$9
	if ( *($7 + [16]) ){ goto $label$8 }
	$5 = *(($4 + [32]))
	$2 = *(($7 + [8]))
	*((($3 + [24]) + [8])) = $2
	$6 = *($7)
	*((($3 + [8]) + [8])) = $2
	*($3 + [8]) = $6
	*($3 + [24]) = $6
	CALL $9($0, $5, ($3 + [8]), $5, [1])
	$4 = CALL db_next_i64(*($7 + [24]), ($3 + [120]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$10 }
	CALL $12(($3 + [40]), $4)
	
.LABEL $label$10
	CALL $28(($3 + [40]), $7)
	
.LABEL $label$8
	$8 = *($3 + [64])
	if ( ($8 == 0) ){ goto $label$11 }
	$0 = ($3 + [68])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($4 + [-24])
	$7 = *($4)
	*($4) = [0]
	if ( ($7 == 0) ){ goto $label$15 }
	CALL _ZdlPv($7)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$14 }
	$4 = *(($3 + [64]))
	goto $label$12 
	
.LABEL $label$13
	$4 = $8
	
.LABEL $label$12
	*($0) = $8
	CALL _ZdlPv($4)
	
.LABEL $label$11
	$8 = *($3 + [104])
	if ( ($8 == 0) ){ goto $label$16 }
	$0 = ($3 + [108])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$18 }
	
.LOOP $label$19:
	$4 = ($4 + [-24])
	$7 = *($4)
	*($4) = [0]
	if ( ($7 == 0) ){ goto $label$20 }
	CALL _ZdlPv($7)
	
.LABEL $label$20
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$19 }
	$4 = *(($3 + [104]))
	goto $label$17 
	
.LABEL $label$18
	$4 = $8
	
.LABEL $label$17
	*($0) = $8
	CALL _ZdlPv($4)
	
.LABEL $label$16
	$global$0 = ($3 + [128])
	return (unreachable)
	
.LABEL $label$6
	CALL eosio_assert([0], [8727])
}

void .FUNC $31 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth($1)
	$4 = [0]
	*(($3 + [32])) = [0]
	*($3 + [8]) = $1
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	$5 = *($0)
	*($3) = $5
	$2 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)*($2) >> (uint_64)(int_64)8)
	if ( ((int_32)$2) <= (int_32)[-1]) ){ goto $label$3 }
	$4 = CALL $12($3, $2)
	if ( ((int_32)*($4 + [20]) == (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [9967])
	
.LABEL $label$4
	if ( (int_64)(*($4) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8985])
	if ( (int_64)(*([0]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9061])
	
.LABEL $label$1
	if ( $4 ){ goto $label$5 }
	CALL eosio_assert([0], [10407])
	CALL eosio_assert([0], [10441])
	
.LABEL $label$5
	$2 = CALL db_next_i64(*($4 + [24]), ($3 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$6 }
	CALL $12($3, $2)
	
.LABEL $label$6
	CALL $28($3, $4)
	$0 = *($3 + [24])
	if ( ($0 == 0) ){ goto $label$7 }
	$6 = ($3 + [28])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($3 + [24]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $0
	
.LABEL $label$8
	*($6) = $0
	CALL _ZdlPv($4)
	
.LABEL $label$7
	$global$0 = ($3 + [48])
}

int_32 .FUNC $129 (int_32 $0)
{
	return CALL $130([10548], $0)
}

int_32 .FUNC $127 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $124())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $128($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}