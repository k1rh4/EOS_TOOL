(data (i32.const 4) "`g\00\00")
(data (i32.const 16) "onerror\00")
(data (i32.const 32) "eosio\00")
(data (i32.const 48) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 112) "transfer\00")
(data (i32.const 128) "faireostoken\00")
(data (i32.const 144) "read\00")
(data (i32.const 160) "The game has not yet been activated\00")
(data (i32.const 208) "The current round is not over\00")
(data (i32.const 240) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 304) "eosio.token\00")
(data (i32.const 320) "invalid symbol name\00")
(data (i32.const 352) "faireosgiver\00")
(data (i32.const 368) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 432) "error reading iterator\00")
(data (i32.const 464) "cannot pass end iterator to erase\00")
(data (i32.const 512) "cannot increment end iterator\00")
(data (i32.const 544) "cannot create objects in table of another contract\00")
(data (i32.const 608) "cannot pass end iterator to modify\00")
(data (i32.const 656) "object passed to modify is not in multi_index\00")
(data (i32.const 704) "cannot modify objects in table of another contract\00")
(data (i32.const 768) "updater cannot change primary key when modifying an object\00")
(data (i32.const 832) "write\00")
(data (i32.const 848) "next primary key in table is at autoincrement limit\00")
(data (i32.const 912) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 976) "cannot decrement iterator at beginning of table\00")
(data (i32.const 1024) "object passed to erase is not in multi_index\00")
(data (i32.const 1072) "cannot erase objects in table of another contract\00")
(data (i32.const 1136) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1200) "active\00")
(data (i32.const 1216) "FairEOS King Reward/FairEOS\e7\8e\8b\e8\80\85\e5\a5\96\e5\8a\b1\00")
(data (i32.const 1264) "get\00")
(data (i32.const 1280) "faireosadmin\00")
(data (i32.const 1296) "The new rand has not yet started\00")
(data (i32.const 1344) "Bid invalid\00")
(data (i32.const 1360) "Consecutive bids are not allowed\00")
(data (i32.const 1408) "attempt to add asset with different symbol\00")
(data (i32.const 1456) "addition underflow\00")
(data (i32.const 1488) "addition overflow\00")
(data (i32.const 1520) "invalide token type\00")
(data (i32.const 1552) "invalid bid quantity\00")
(data (i32.const 9984) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "current_time" (func $fimport$3 (result i64)))
(import "env" "db_end_i64" (func $fimport$4 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$5 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$7 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$8 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$9 (param i32)))
(import "env" "db_idx64_store" (func $fimport$10 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$11 (param i32 i64 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$12 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$13 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$14 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$15 (param i32)))
(import "env" "db_store_i64" (func $fimport$16 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$17 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$18 (param i32 i32)))
(import "env" "is_account" (func $fimport$19 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$20 (param i32 i32 i32) (result i32)))
(import "env" "read_action_data" (func $fimport$21 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$22 (param i64)))
(import "env" "require_auth2" (func $fimport$23 (param i64 i64)))
(import "env" "send_inline" (func $fimport$24 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "apply" (func $5))
(export "_ZN4fomo8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $6))
(export "_ZN4fomo8activateEb" (func $8))
(export "_ZN4fomo9startnextEm" (func $10))
(export "_ZN4fomo8disbonusEhyN5eosio5assetE" (func $15))
(export "_ZN4fomo13recordlastwinEmyymyN5eosio5assetES1_" (func $16))
(export "_ZN4fomo13clearlastinfoEm" (func $17))
(export "malloc" (func $61))
(export "free" (func $64))
(export "memcmp" (func $71))
(export "strlen" (func $72))
(table $0 4 4 anyfunc)
(elem (i32.const 0) $73 $6 $10 $8)



void .FUNC $18 (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	$9 = [0]
	*(($10 + [40])) = [0]
	*($10 + [24]) = (int_64)-1
	*($10 + [32]) = (int_64)0
	$7 = *($1)
	*($10 + [8]) = $7
	*($10 + [16]) = $2
	$8 = (uint_64)$3 >> (uint_64)(int_64)8
	$1 = CALL db_find_i64($7, $2, (int_64)3607749779137757184, $8)
	if ( ((int_32)$1) < (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert(((int_32)*(CALL $19(($10 + [8]), $1) + [16]) == (int_32)($10 + [8])), [240])
	$4 = *(($10 + [32]))
	$6 = *(($10 + [36]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$6 }
	$9 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)(uint_64)*(*($9) + [8]) >> (uint_64)(int_64)8) == (int_64)$8) ){ goto $label$6 }
	$6 = $9
	$1 = ($9 + [-24])
	$9 = $1
	if ( ((int_32)($1 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)($10 + [8])), [240])
	goto $label$3 
	
.LABEL $label$5
	*($0 + [8]) = $3
	*($0) = (int_64)0
	CALL eosio_assert([1], [368])
	
.LOOP $label$9:
	$1 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$1 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	CALL eosio_assert($1, [320])
	$6 = *($10 + [32])
	if ( $6 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$9 = [0]
	$1 = CALL db_find_i64(*($10 + [8]), *(($10 + [16])), (int_64)3607749779137757184, $8)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $19(($10 + [8]), $1)
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)($10 + [8])), [240])
	
.LABEL $label$3
	*($0) = *($9)
	*(($0 + [8])) = *(($9 + [8]))
	$6 = *($10 + [32])
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($10 + [36])
	$9 = *($5)
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$13 }
	
.LOOP $label$14:
	$9 = ($9 + [-24])
	$1 = *($9)
	*($9) = [0]
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $66($1)
	
.LABEL $label$15
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$14 }
	$9 = *(($10 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$9 = $6
	
.LABEL $label$12
	*($5) = $6
	CALL $66($9)
	
.LABEL $label$1
	*([0] + [4]) = ($10 + [48])
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $63($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [9984])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [432])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $65([32])
	$6 = CALL $20($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $21(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $66($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $66 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $65 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10076])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $39 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [76]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [976])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-8524860086709911552)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [912])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [912])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $36(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $73 ()
{
	(unreachable)
}

void .FUNC $67 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $29 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [56]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [976])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-3553555610274365440)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [912])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [912])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $13(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [832])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [832])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [832])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [832])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [832])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [832])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [832])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [832])
	CALL memcpy(*($2 + [4]), $0, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $65(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $69($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $66($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $66($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $20 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [368])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [320])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [144])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

void .FUNC $23 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $66($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $66($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
	$7 = *(($1 + [48]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6030912129794572288, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [432])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $65([56])
	$6 = CALL $30($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [44])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $31(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $66($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$7 = *(*($0 + [4]))
	$6 = *($7 + [16])
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$1 }
	$6 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($7), *($7 + [8]), (int_64)-3553555610274365440, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	CALL $13($7, $8)
	*($9 + [36]) = [0]
	*($9 + [32]) = $7
	$6 = *(*(CALL $29(($9 + [32])) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($7 + [16])) = $6
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [848])
	$6 = *(($7 + [16]))
	*($1) = $6
	*($1 + [8]) = ( (int_64)1 ? $6 : (int_64)($6 == 0) )
	$6 = CALL current_time()
	*($1 + [20]) = [0]
	*($1 + [16]) = ((CASTING uint_32)(uint_64 ((uint_64)$6 / (uint_64)(int_64)1000000)) + [60])
	CALL eosio_assert([1], [368])
	$5 = ($1 + [20])
	$4 = ($1 + [16])
	$3 = ($1 + [8])
	$6 = (int_64)1380532550
	$7 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	
.LABEL $label$3
	CALL eosio_assert($8, [320])
	*(($1 + [40])) = (int_64)353416332804
	*($1 + [32]) = (int_64)0
	*($1 + [24]) = (int_64)0
	*($1 + [48]) = [0]
	$8 = $10
	$7 = ($8 + [-64])
	*([0] + [4]) = $7
	*($9 + [12]) = $7
	*($9 + [8]) = $7
	*($9 + [16]) = ($8 + [-12])
	*($9 + [24]) = ($9 + [8])
	*($9 + [36]) = $3
	*($9 + [32]) = $1
	*($9 + [40]) = $4
	*($9 + [44]) = $5
	*($9 + [48]) = ($1 + [24])
	*($9 + [52]) = ($1 + [32])
	*($9 + [56]) = ($1 + [48])
	CALL $28(($9 + [32]), ($9 + [24]))
	$6 = *($1)
	*($1 + [56]) = CALL db_store_i64(*($2 + [8]), (int_64)-3553555610274365440, *(*($0 + [8])), $6, $7, [52])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$8 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($9 + [64])
}

void .FUNC $24 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1072])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1136])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $66($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $66($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $27 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	$9 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [52]) == (int_32)$0), [656])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [704])
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)1)
	$2 = *($1)
	$6 = CALL current_time()
	$7 = [0]
	*($1 + [20]) = [0]
	*($1 + [16]) = ((CASTING uint_32)(uint_64 ((uint_64)$6 / (uint_64)(int_64)1000000)) + [60])
	CALL eosio_assert([1], [368])
	$5 = ($1 + [20])
	$4 = ($1 + [16])
	$3 = ($1 + [8])
	$6 = (int_64)1380532550
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [320])
	*(($1 + [40])) = (int_64)353416332804
	*($1 + [32]) = (int_64)0
	*($1 + [24]) = (int_64)0
	*($1 + [48]) = [0]
	CALL eosio_assert(((int_64)$2 == (int_64)*($1)), [768])
	$8 = $10
	$7 = ($8 + [-64])
	*([0] + [4]) = $7
	*($9 + [12]) = $7
	*($9 + [8]) = $7
	*($9 + [16]) = ($8 + [-12])
	*($9 + [24]) = ($9 + [8])
	*($9 + [36]) = $3
	*($9 + [32]) = $1
	*($9 + [40]) = $4
	*($9 + [44]) = $5
	*($9 + [48]) = ($1 + [24])
	*($9 + [52]) = ($1 + [32])
	*($9 + [56]) = ($1 + [48])
	CALL $28(($9 + [32]), ($9 + [24]))
	CALL db_update_i64(*($1 + [56]), (int_64)0, $7, [52])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [64])
}

void .FUNC $26 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $65(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $69($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $66($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $66($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $49 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $65(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $69($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $66($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $66($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [144])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [144])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [144])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [144])
	CALL memcpy($0, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

void .FUNC $69 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $65(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $66($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [832])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [832])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [832])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $40($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [832])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [832])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $44(CALL $43($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [832])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [832])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [832])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [832])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $45(*($1), ($0 + [32]))
}

void .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $65($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $69($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $66($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $47 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($0 + [32]) = (int_64)0
	*(($4 = ($0 + [40]))) = (int_64)1398362884
	CALL eosio_assert([1], [368])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [320])
	*($0 + [52]) = $1
	*($6 + [8]) = *($2 + [4])
	*($6 + [20]) = ($0 + [8])
	*($6 + [16]) = $0
	*($6 + [24]) = ($0 + [16])
	*($6 + [28]) = ($0 + [20])
	*($6 + [32]) = ($0 + [24])
	*($6 + [36]) = ($0 + [32])
	*($6 + [40]) = ($0 + [48])
	CALL $48(($6 + [16]), ($6 + [8]))
	*($0 + [56]) = *(*($2 + [8]))
	*([0] + [4]) = ($6 + [48])
	return $0
}

void .FUNC $46 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $65(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $69($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $66($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $66($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [832])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [832])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [832])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [832])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $70(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $70(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $66(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $66(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $65($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $60 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [44]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [976])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-6030912129794572288)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [912])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [912])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $22(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

void .FUNC _ZN4fomo8activateEb (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	*((($6 + [8]) + [32])) = [0]
	*($6 + [24]) = (int_64)-1
	$2 = *($0)
	*($6 + [8]) = $2
	*($6 + [16]) = $2
	*($6 + [32]) = (int_64)0
	$3 = CALL db_lowerbound_i64($2, $2, (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL $12(($6 + [8]), $3)
	CALL eosio_assert([1], [608])
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)($6 + [8])), [656])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)CALL $fimport$2()), [704])
	*($0 + [8]) = $1
	$2 = *($0)
	CALL eosio_assert([1], [768])
	CALL eosio_assert([1], [832])
	CALL memcpy(($6 + [64]), $0, [8])
	*($6 + [56]) = *($0 + [8])
	CALL eosio_assert([1], [832])
	CALL memcpy((($6 + [64]) | [8]), ($6 + [56]), [1])
	CALL db_update_i64(*($0 + [20]), (int_64)0, ($6 + [64]), [9])
	$0 = ($6 + [24])
	if ( (uint_64)($2 <= *($0)) ){ goto $label$3 }
	*($0) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	$3 = *($6 + [32])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$4 = *($0)
	CALL eosio_assert(((int_64)$2 == (int_64)CALL $fimport$2()), [544])
	*(($0 = CALL $65([32])) + [16]) = ($6 + [8])
	*($0 + [8]) = $1
	CALL eosio_assert([1], [832])
	CALL memcpy(($6 + [64]), $0, [8])
	*($6 + [56]) = *($0 + [8])
	CALL eosio_assert([1], [832])
	CALL memcpy((($6 + [64]) | [8]), ($6 + [56]), [1])
	$2 = *($0)
	$3 = CALL db_store_i64(*((($6 + [8]) + [8])), (int_64)7235159550150574080, $4, $2, ($6 + [64]), [9])
	*($0 + [20]) = $3
	$1 = ($6 + [24])
	if ( (uint_64)($2 <= *($1)) ){ goto $label$5 }
	*($1) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($6 + [56]) = $0
	$2 = *($0)
	*($6 + [64]) = $2
	*($6 + [52]) = $3
	$5 = ($6 + [36])
	$1 = *($5)
	if ( ((uint_32)$1 >= (uint_32)*(($6 + [40]))) ){ goto $label$7 }
	*($1 + [8]) = $2
	*($1 + [16]) = $3
	*($6 + [56]) = [0]
	*($1) = $0
	*($5) = ($1 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $49(($6 + [32]), ($6 + [56]), ($6 + [64]), ($6 + [52]))
	
.LABEL $label$6
	$0 = *($6 + [56])
	*($6 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	CALL $66($0)
	
.LABEL $label$3
	$3 = *($6 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($6 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $66($1)
	
.LABEL $label$11
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($6 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $3
	
.LABEL $label$8
	*($5) = $3
	CALL $66($0)
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [80])
}

int_32 .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$3 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$3 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$2
	CALL read_action_data($3, $1)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [144])
	CALL memcpy(($5 + [15]), $3, [1])
	$6 = *($5 + [15])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($3)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL void $1((int_32 ((int_32)($6 & [255]) != (int_32)[0])), (int_32 $4))
	*([0] + [4]) = ($5 + [16])
	return [1]
}

void .FUNC _ZN4fomo8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	float_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$17 = (*([0] + [4]) - [272])
	*([0] + [4]) = $17
	*($17 + [128]) = $1
	$5 = *($0)
	if ( ((int_64)$5 == (int_64)$1) ){ goto $label$1 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1280]
	$12 = (int_64)0
	
.LOOP $label$2:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$3 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$6 = ($6 + [165])
	goto $label$4 
	
.LABEL $label$5
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$3
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$2 }
	if ( ((int_64)$12 == (int_64)$1) ){ goto $label$1 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [128]
	$12 = (int_64)0
	
.LOOP $label$6:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$7 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$6 = ($6 + [165])
	goto $label$8 
	
.LABEL $label$9
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$7
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$6 }
	if ( ((int_64)$12 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$5 != (int_64)$2) ){ goto $label$1 }
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)353416332804), [1520])
	CALL eosio_assert(((int_64)*($3) > (int_64)9999999), [1552])
	$14 = [0]
	*((($17 + [88]) + [32])) = [0]
	*($17 + [104]) = (int_64)-1
	$11 = *($0)
	*($17 + [88]) = $11
	*($17 + [96]) = $11
	*($17 + [112]) = (int_64)0
	$9 = [0]
	$6 = CALL db_lowerbound_i64($11, $11, (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$10 }
	$9 = CALL $12(($17 + [88]), $6)
	
.LABEL $label$10
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [160])
	CALL eosio_assert(*($9 + [8]), [160])
	*((($17 + [48]) + [32])) = [0]
	*($17 + [64]) = (int_64)-1
	$11 = *($0)
	*($17 + [48]) = $11
	*($17 + [56]) = $11
	*($17 + [72]) = (int_64)0
	$9 = CALL db_lowerbound_i64($11, $11, (int_64)-3553555610274365440, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$12 }
	$15 = CALL $13(($17 + [48]), $9)
	$9 = ((uint_32)*($15 + [16]) >= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)))
	$14 = [1]
	$6 = $15
	goto $label$11 
	
.LABEL $label$12
	$15 = [0]
	$6 = [0]
	$9 = [0]
	
.LABEL $label$11
	CALL eosio_assert($9, [1296])
	CALL eosio_assert(((int_64)*($3) > (int_64)*($15 + [32])), [1344])
	$11 = *($15 + [32])
	if ( ((int_64)$11 < (int_64)1) ){ goto $label$13 }
	$9 = [0]
	$7 = (CASTING float_64)(int_64 $11)
	$10 = (int_64)
	if ( ((int_64)$10(*($3) - $11)) < (int_64)(Rounds 0)(((float_64)$7 * (float_64)(float_64)0.04))) ){ goto $label$14 }
	$9 = ((int_64)$10 <= (int_64)(Rounds 0)(((float_64)$7 * (float_64)(float_64)0.06)))
	
.LABEL $label$14
	CALL eosio_assert($9, [1344])
	CALL eosio_assert(((int_64)*($15 + [24]) != (int_64)*($17 + [128])), [1360])
	
.LABEL $label$13
	*($17 + [144]) = $3
	*($17 + [148]) = ($17 + [128])
	CALL eosio_assert($14, [608])
	CALL $54(($17 + [48]), $6, ($17 + [144]))
	*($17 + [24]) = (int_64)-1
	*($17 + [32]) = [0]
	*($17 + [8]) = *($0)
	*($17 + [16]) = *($15 + [8])
	*(($17 + [36])) = [0]
	*(($17 + [40])) = [0]
	*($17 + [44]) = [0]
	*($17) = ($17 + [8])
	CALL $55(($17 + [144]), $17, ($17 + [128]))
	$9 = *($17 + [148])
	if ( ($9 == 0) ){ goto $label$16 }
	if ( ((int_64)*($17 + [128]) != (int_64)*($9 + [8])) ){ goto $label$16 }
	if ( ($9 == 0) ){ goto $label$16 }
	CALL eosio_assert([1], [608])
	$16 = *($17)
	CALL eosio_assert(((int_32)*($9 + [40]) == (int_32)$16), [656])
	CALL eosio_assert(((int_64)*($16) == (int_64)CALL $fimport$2()), [704])
	$8 = ($9 + [8])
	*($17 + [256]) = *($8)
	$11 = *($9)
	CALL eosio_assert(((int_64)*(($3 + [8])) == (int_64)*(($9 + [24]))), [1408])
	$10 = ((int_64)*($9 + [16]) + (int_64)*($3))
	*($9 + [16]) = $10
	CALL eosio_assert(((int_64)$10 > (int_64)-4611686018427387904), [1456])
	CALL eosio_assert(((int_64)*($9 + [16]) < (int_64)4611686018427387904), [1488])
	*($9 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($9 + [36]) = (*($9 + [36]) + [1])
	CALL eosio_assert(((int_64)$11 == (int_64)*($9)), [768])
	*($17 + [248]) = (($17 + [144]) + [40])
	*($17 + [244]) = ($17 + [144])
	*($17 + [240]) = ($17 + [144])
	*($17 + [264]) = ($17 + [240])
	*($17 + [212]) = $8
	*($17 + [208]) = $9
	*($17 + [216]) = ($9 + [16])
	*($17 + [220]) = ($9 + [32])
	*($17 + [224]) = ($9 + [36])
	CALL $57(($17 + [208]), ($17 + [264]))
	CALL db_update_i64(*($9 + [44]), (int_64)0, ($17 + [144]), [40])
	if ( (uint_64)($11 <= *($16 + [16])) ){ goto $label$17 }
	*(($16 + [16])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	*($17 + [208]) = *($8)
	if ( (CALL memcmp(($17 + [256]), ($17 + [208]), [8]) == 0) ){ goto $label$15 }
	$3 = ($9 + [48])
	$9 = *($3)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($16), *($16 + [8]), (int_64)-6030912129794572288, ($17 + [264]), $11)
	*($3) = $9
	
.LABEL $label$18
	CALL db_idx64_update($9, (int_64)0, ($17 + [208]))
	goto $label$15 
	
.LABEL $label$16
	$11 = *($0)
	*($17 + [216]) = $3
	*($17 + [212]) = ($17 + [128])
	*($17 + [208]) = ($17 + [8])
	*($17 + [240]) = $11
	CALL eosio_assert(((int_64)*($17 + [8]) == (int_64)CALL $fimport$2()), [544])
	*($17 + [148]) = ($17 + [208])
	*($17 + [144]) = ($17 + [8])
	*($17 + [152]) = ($17 + [240])
	*(($3 = CALL $65([56])) + [24]) = (int_64)1398362884
	*($3 + [16]) = (int_64)0
	CALL eosio_assert([1], [368])
	$11 = (int_64)5462355
	$9 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	
.LOOP $label$23:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$23 }
	
.LABEL $label$22
	$16 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	$16 = [0]
	
.LABEL $label$19
	CALL eosio_assert($16, [320])
	*($3 + [40]) = ($17 + [8])
	CALL $56(($17 + [144]), $3)
	*($17 + [264]) = $3
	$11 = *($3)
	*($17 + [144]) = $11
	$16 = *($3 + [44])
	*($17 + [256]) = $16
	$8 = ($17 + [36])
	$9 = *($8)
	if ( ((uint_32)$9 >= (uint_32)*(($17 + [40]))) ){ goto $label$25 }
	*($9 + [8]) = $11
	*($9 + [16]) = $16
	*($17 + [264]) = [0]
	*($9) = $3
	*($8) = ($9 + [24])
	goto $label$24 
	
.LABEL $label$25
	CALL $31(($17 + [32]), ($17 + [264]), ($17 + [144]), ($17 + [256]))
	
.LABEL $label$24
	$9 = *($17 + [264])
	*($17 + [264]) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	CALL $66($9)
	
.LABEL $label$15
	CALL eosio_assert($14, [608])
	CALL eosio_assert(((int_32)*($6 + [52]) == (int_32)($17 + [48])), [656])
	CALL eosio_assert(((int_64)*($17 + [48]) == (int_64)CALL $fimport$2()), [704])
	*($6 + [48]) = (*($6 + [48]) + [1])
	$11 = *($6)
	CALL eosio_assert([1], [768])
	*($17 + [248]) = (($17 + [144]) + [52])
	*($17 + [244]) = ($17 + [144])
	*($17 + [240]) = ($17 + [144])
	*($17 + [264]) = ($17 + [240])
	*($17 + [212]) = ($6 + [8])
	*($17 + [208]) = $15
	*($17 + [216]) = ($6 + [16])
	*($17 + [220]) = ($6 + [20])
	*($17 + [224]) = ($6 + [24])
	*($17 + [228]) = ($6 + [32])
	*($17 + [232]) = ($6 + [48])
	CALL $28(($17 + [208]), ($17 + [264]))
	CALL db_update_i64(*($6 + [56]), (int_64)0, ($17 + [144]), [52])
	$9 = (($17 + [48]) + [16])
	if ( (uint_64)($11 <= *($9)) ){ goto $label$26 }
	*($9) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$26
	*($17 + [160]) = (int_64)-1
	*($17 + [168]) = [0]
	$11 = *($0)
	*($17 + [144]) = $11
	*($17 + [152]) = *(($15 + [8]))
	*(($0 = ($17 + [172]))) = [0]
	*(($3 = (($17 + [144]) + [32]))) = [0]
	*($17 + [268]) = ($17 + [128])
	*($17 + [264]) = ($17 + [144])
	*($17 + [240]) = $11
	CALL eosio_assert(((int_64)$11 == (int_64)CALL $fimport$2()), [544])
	*($17 + [212]) = ($17 + [264])
	*($17 + [208]) = ($17 + [144])
	*($17 + [216]) = ($17 + [240])
	*(($9 = CALL $65([40])) + [24]) = ($17 + [144])
	CALL $58(($17 + [208]), $9)
	*($17 + [256]) = $9
	$11 = *($9)
	*($17 + [208]) = $11
	$15 = *($9 + [28])
	*($17 + [140]) = $15
	$6 = *($0)
	if ( ((uint_32)$6 >= (uint_32)*($3)) ){ goto $label$28 }
	*($6 + [8]) = $11
	*($6 + [16]) = $15
	*($17 + [256]) = [0]
	*($6) = $9
	*($0) = ($6 + [24])
	goto $label$27 
	
.LABEL $label$28
	CALL $46(($17 + [168]), ($17 + [256]), ($17 + [208]), ($17 + [140]))
	
.LABEL $label$27
	$9 = *($17 + [256])
	*($17 + [256]) = [0]
	if ( ($9 == 0) ){ goto $label$29 }
	CALL $66($9)
	
.LABEL $label$29
	$0 = *($17 + [168])
	if ( ($0 == 0) ){ goto $label$30 }
	$3 = ($17 + [172])
	$9 = *($3)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$32 }
	
.LOOP $label$33:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$34 }
	CALL $66($6)
	
.LABEL $label$34
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$33 }
	$9 = *(($17 + [168]))
	goto $label$31 
	
.LABEL $label$32
	$9 = $0
	
.LABEL $label$31
	*($3) = $0
	CALL $66($9)
	
.LABEL $label$30
	$0 = *($17 + [32])
	if ( ($0 == 0) ){ goto $label$35 }
	$3 = ($17 + [36])
	$9 = *($3)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$37 }
	
.LOOP $label$38:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$39 }
	CALL $66($6)
	
.LABEL $label$39
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$38 }
	$9 = *(($17 + [32]))
	goto $label$36 
	
.LABEL $label$37
	$9 = $0
	
.LABEL $label$36
	*($3) = $0
	CALL $66($9)
	
.LABEL $label$35
	$0 = *($17 + [72])
	if ( ($0 == 0) ){ goto $label$40 }
	$3 = ($17 + [76])
	$9 = *($3)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$42 }
	
.LOOP $label$43:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$44 }
	CALL $66($6)
	
.LABEL $label$44
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$43 }
	$9 = *(($17 + [72]))
	goto $label$41 
	
.LABEL $label$42
	$9 = $0
	
.LABEL $label$41
	*($3) = $0
	CALL $66($9)
	
.LABEL $label$40
	$0 = *($17 + [112])
	if ( ($0 == 0) ){ goto $label$1 }
	$3 = ($17 + [116])
	$9 = *($3)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$46 }
	
.LOOP $label$47:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$48 }
	CALL $66($6)
	
.LABEL $label$48
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$47 }
	$9 = *(($17 + [112]))
	goto $label$45 
	
.LABEL $label$46
	$9 = $0
	
.LABEL $label$45
	*($3) = $0
	CALL $66($9)
	
.LABEL $label$1
	*([0] + [4]) = ($17 + [272])
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [368])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [320])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $50(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $51(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $66(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [16]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [32]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [48])
	
.LABEL $label$7
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$16 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [112]
	$7 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$22 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$3 = ($3 + [165])
	goto $label$20 
	
.LABEL $label$22
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$18
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$17 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$15 }
	
.LABEL $label$16
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [128]
	$7 = (int_64)0
	
.LOOP $label$23:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$24 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$3 = ($3 + [165])
	goto $label$25 
	
.LABEL $label$26
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$24
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$23 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$14 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [112]
	$7 = (int_64)0
	
.LOOP $label$27:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$32 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$3 = ($3 + [165])
	goto $label$30 
	
.LABEL $label$32
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$31
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$29
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$28
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$27 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$14 }
	
.LABEL $label$15
	*($9 + [56]) = $0
	if ( ((int_64)$2 == (int_64)-4157529659509571584) ){ goto $label$34 }
	if ( ((int_64)$2 == (int_64)3617214701412286464) ){ goto $label$33 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$14 }
	*($9 + [52]) = [0]
	*($9 + [48]) = [1]
	*($9 + [8 align=4]) = *($9 + [48])
	CALL $7(($9 + [56]), ($9 + [8]))
	goto $label$14 
	
.LABEL $label$34
	*($9 + [36]) = [0]
	*($9 + [32]) = [2]
	*($9 + [24 align=4]) = *($9 + [32])
	CALL $11(($9 + [56]), ($9 + [24]))
	goto $label$14 
	
.LABEL $label$33
	*($9 + [44]) = [0]
	*($9 + [40]) = [3]
	*($9 + [16 align=4]) = *($9 + [40])
	CALL $9(($9 + [56]), ($9 + [16]))
	
.LABEL $label$14
	*([0] + [4]) = ($9 + [64])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [432])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $65([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [144])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [144])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[16]), [144])
	CALL memcpy(($6 + [16]), ($7 + [16]), [4])
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $46(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $66($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC _ZN4fomo8disbonusEhyN5eosio5assetE (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [144])
	*([0] + [4]) = $13
	if ( ((int_64)*($3) < (int_64)1) ){ goto $label$3 }
	if ( ($1 == 0) ){ goto $label$10 }
	$4 = *($0)
	$8 = (int_64)0
	$7 = (int_64)59
	$1 = [1200]
	$9 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$16 }
	$5 = *($1)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$5 = ($5 + [165])
	goto $label$14 
	
.LABEL $label$16
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$12
	$1 = ($1 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$11 }
	$8 = (int_64)0
	$10 = (int_64)59
	$1 = [128]
	$11 = (int_64)0
	
.LOOP $label$17:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$18 }
	$5 = *($1)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$5 = ($5 + [165])
	goto $label$19 
	
.LABEL $label$20
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$18
	$1 = ($1 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$11 = ((int_64)$7 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$17 }
	$8 = (int_64)0
	$7 = (int_64)59
	$1 = [112]
	$12 = (int_64)0
	
.LOOP $label$21:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$26 }
	$5 = *($1)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$5 = ($5 + [165])
	goto $label$24 
	
.LABEL $label$26
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$23
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$22
	$1 = ($1 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$21 }
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$1 = CALL strlen([1216])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$9 }
	*($13 + [8]) = ($1 << [1])
	$5 = (($13 + [8]) | [1])
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	$4 = *($0)
	$8 = (int_64)0
	$7 = (int_64)59
	$1 = [1200]
	$9 = (int_64)0
	
.LOOP $label$27:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$32 }
	$5 = *($1)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$5 = ($5 + [165])
	goto $label$30 
	
.LABEL $label$32
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$31
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$29
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$28
	$1 = ($1 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$27 }
	$8 = (int_64)0
	$7 = (int_64)59
	$1 = [304]
	$11 = (int_64)0
	
.LOOP $label$33:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$38 }
	$5 = *($1)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$5 = ($5 + [165])
	goto $label$36 
	
.LABEL $label$38
	$10 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$37
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$35
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$34
	$1 = ($1 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$11 = ((int_64)$10 | (int_64)$11)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$33 }
	$8 = (int_64)0
	$7 = (int_64)59
	$1 = [112]
	$12 = (int_64)0
	
.LOOP $label$39:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$44 }
	$5 = *($1)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$43 }
	$5 = ($5 + [165])
	goto $label$42 
	
.LABEL $label$44
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$43
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$42
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$41
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$40
	$1 = ($1 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$39 }
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$1 = CALL strlen([1216])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$6 }
	*($13 + [8]) = ($1 << [1])
	$5 = (($13 + [8]) | [1])
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$9
	$6 = (($1 + [16]) & [-16])
	$5 = CALL $65($6)
	*($13 + [8]) = ($6 | [1])
	*($13 + [16]) = $5
	*($13 + [12]) = $1
	
.LABEL $label$8
	CALL memcpy($5, [1216], $1)
	
.LABEL $label$7
	*(($5 + $1)) = [0]
	*((($13 + [24]) + [28])) = *(($3 + [12]))
	*((($13 + [24]) + [24])) = *(($3 + [8]))
	*((($13 + [24]) + [20])) = *(($3 + [4]))
	*($13 + [32]) = $2
	*($13 + [24]) = *($0)
	*($13 + [40]) = *($3)
	$1 = (($13 + [8]) + [8])
	*(($13 + [64])) = *($1)
	*($13 + [56]) = *($13 + [8])
	*($13 + [8]) = [0]
	*($13 + [12]) = [0]
	*($1) = [0]
	*($13 + [72]) = $11
	*($13 + [80]) = $12
	*(($1 = CALL $65([16]))) = $4
	*($1 + [8]) = $9
	*((($13 + [72]) + [32])) = [0]
	$5 = ($1 + [16])
	*((($13 + [72]) + [24])) = $5
	*((($13 + [72]) + [20])) = $5
	*($13 + [88]) = $1
	*($13 + [100]) = [0]
	*((($13 + [72]) + [36])) = [0]
	$1 = *($13 + [56])
	$5 = ( *((($13 + [24]) + [36])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($5 + [32])
	$8 = (CASTING uint_64)(uint_32 $5)
	$5 = (($13 + [72]) + [28])
	
.LOOP $label$45:
	$1 = ($1 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$45 }
	if ( ($1 == 0) ){ goto $label$47 }
	CALL $40($5, $1)
	$5 = *(($13 + [104]))
	$1 = *(($13 + [100]))
	goto $label$46 
	
.LABEL $label$47
	$5 = [0]
	$1 = [0]
	
.LABEL $label$46
	*($13 + [132]) = $1
	*($13 + [128]) = $1
	*($13 + [136]) = $5
	*($13 + [112]) = ($13 + [128])
	*($13 + [120]) = ($13 + [24])
	CALL $41(($13 + [120]), ($13 + [112]))
	CALL $42(($13 + [128]), ($13 + [72]))
	$1 = *($13 + [128])
	CALL send_inline($1, (*($13 + [132]) - $1))
	$1 = *($13 + [128])
	if ( ($1 == 0) ){ goto $label$48 }
	*($13 + [132]) = $1
	CALL $66($1)
	
.LABEL $label$48
	$1 = *($13 + [100])
	if ( ($1 == 0) ){ goto $label$49 }
	*(($13 + [104])) = $1
	CALL $66($1)
	
.LABEL $label$49
	$1 = *($13 + [88])
	if ( ($1 == 0) ){ goto $label$50 }
	*(($13 + [92])) = $1
	CALL $66($1)
	
.LABEL $label$50
	if ( ((*(($13 + [56])) & [1]) == 0) ){ goto $label$51 }
	CALL $66(*(($13 + [64])))
	
.LABEL $label$51
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$3 }
	CALL $66(*(($13 + [16])))
	goto $label$3 
	
.LABEL $label$6
	$6 = (($1 + [16]) & [-16])
	$5 = CALL $65($6)
	*($13 + [8]) = ($6 | [1])
	*($13 + [16]) = $5
	*($13 + [12]) = $1
	
.LABEL $label$5
	CALL memcpy($5, [1216], $1)
	
.LABEL $label$4
	*(($5 + $1)) = [0]
	*((($13 + [24]) + [28])) = *(($3 + [12]))
	*((($13 + [24]) + [24])) = *(($3 + [8]))
	*((($13 + [24]) + [20])) = *(($3 + [4]))
	*($13 + [32]) = $2
	*($13 + [24]) = *($0)
	*($13 + [40]) = *($3)
	$1 = (($13 + [8]) + [8])
	*(($13 + [64])) = *($1)
	*($13 + [56]) = *($13 + [8])
	*($13 + [8]) = [0]
	*($13 + [12]) = [0]
	*($1) = [0]
	*($13 + [72]) = $11
	*($13 + [80]) = $12
	*(($1 = CALL $65([16]))) = $4
	*($1 + [8]) = $9
	*((($13 + [72]) + [32])) = [0]
	$5 = ($1 + [16])
	*((($13 + [72]) + [24])) = $5
	*((($13 + [72]) + [20])) = $5
	*($13 + [88]) = $1
	*($13 + [100]) = [0]
	*((($13 + [72]) + [36])) = [0]
	$1 = *($13 + [56])
	$5 = ( *((($13 + [24]) + [36])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($5 + [32])
	$8 = (CASTING uint_64)(uint_32 $5)
	$5 = (($13 + [72]) + [28])
	
.LOOP $label$52:
	$1 = ($1 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$52 }
	if ( ($1 == 0) ){ goto $label$54 }
	CALL $40($5, $1)
	$5 = *(($13 + [104]))
	$1 = *(($13 + [100]))
	goto $label$53 
	
.LABEL $label$54
	$5 = [0]
	$1 = [0]
	
.LABEL $label$53
	*($13 + [132]) = $1
	*($13 + [128]) = $1
	*($13 + [136]) = $5
	*($13 + [112]) = ($13 + [128])
	*($13 + [120]) = ($13 + [24])
	CALL $41(($13 + [120]), ($13 + [112]))
	CALL $42(($13 + [128]), ($13 + [72]))
	$1 = *($13 + [128])
	CALL send_inline($1, (*($13 + [132]) - $1))
	$1 = *($13 + [128])
	if ( ($1 == 0) ){ goto $label$55 }
	*($13 + [132]) = $1
	CALL $66($1)
	
.LABEL $label$55
	$1 = *($13 + [100])
	if ( ($1 == 0) ){ goto $label$56 }
	*(($13 + [104])) = $1
	CALL $66($1)
	
.LABEL $label$56
	$1 = *($13 + [88])
	if ( ($1 == 0) ){ goto $label$57 }
	*(($13 + [92])) = $1
	CALL $66($1)
	
.LABEL $label$57
	if ( ((*(($13 + [56])) & [1]) == 0) ){ goto $label$58 }
	CALL $66(*(($13 + [64])))
	
.LABEL $label$58
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$3 }
	CALL $66(*(($13 + [16])))
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [144])
	return (unreachable)
	
.LABEL $label$2
	CALL $67(($13 + [8]))
	
.LABEL $label$1
	CALL $67(($13 + [8]))
	(unreachable)
}

void .FUNC _ZN4fomo13recordlastwinEmyymyN5eosio5assetES1_ (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4, int_64 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	$8 = (*([0] + [4]) - [208])
	*([0] + [4]) = $8
	*($8 + [72]) = $1
	*($8 + [64]) = $2
	*($8 + [56]) = $3
	*($8 + [52]) = $4
	*($8 + [40]) = $5
	*(($1 = ($8 + [32]))) = [0]
	*($8 + [16]) = (int_64)-1
	$5 = *($0)
	*($8) = $5
	*($8 + [8]) = $5
	*($8 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($5, $5, (int_64)-8524860086709911552, (int_64)0)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL $36($8, $4)
	CALL eosio_assert([1], [608])
	CALL eosio_assert(((int_32)*($0 + [72]) == (int_32)$8), [656])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$2()), [704])
	*($0 + [20]) = *($8 + [72])
	*($0 + [8]) = *($8 + [64])
	$5 = *($0)
	*($0 + [24]) = *($8 + [56])
	*($0 + [32]) = *($8 + [40])
	*(($0 + [64])) = *(($6 + [8]))
	*($0 + [56]) = *($6)
	*(($0 + [48])) = *(($7 + [8]))
	*($0 + [40]) = *($7)
	*($0 + [16]) = *($8 + [52])
	CALL eosio_assert([1], [768])
	*($8 + [160]) = (($8 + [80]) + [72])
	*($8 + [156]) = ($8 + [80])
	*($8 + [152]) = ($8 + [80])
	*($8 + [168]) = ($8 + [152])
	*($8 + [180]) = ($0 + [8])
	*($8 + [176]) = $0
	*($8 + [184]) = ($0 + [16])
	*($8 + [188]) = ($0 + [20])
	*($8 + [192]) = ($0 + [24])
	*($8 + [196]) = ($0 + [32])
	*($8 + [200]) = ($0 + [40])
	*($8 + [204]) = ($0 + [56])
	CALL $37(($8 + [176]), ($8 + [168]))
	CALL db_update_i64(*($0 + [76]), (int_64)0, ($8 + [80]), [72])
	$0 = ($8 + [16])
	if ( (uint_64)($5 <= *($0)) ){ goto $label$3 }
	*($0) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$7 = *($8 + [24])
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$3 = *($0)
	*($8 + [100]) = $6
	*($8 + [104]) = $7
	*($8 + [84]) = ($8 + [72])
	*($8 + [80]) = $8
	*($8 + [88]) = ($8 + [64])
	*($8 + [92]) = ($8 + [56])
	*($8 + [96]) = ($8 + [40])
	*($8 + [108]) = ($8 + [52])
	*($8 + [152]) = $3
	CALL eosio_assert(((int_64)$5 == (int_64)CALL $fimport$2()), [544])
	*($8 + [180]) = ($8 + [80])
	*($8 + [176]) = $8
	*($8 + [184]) = ($8 + [152])
	$0 = CALL $65([88])
	CALL $33($0)
	*($0 + [72]) = $8
	CALL $34(($8 + [176]), $0)
	*($8 + [168]) = $0
	$5 = *($0)
	*($8 + [176]) = $5
	$7 = *($0 + [76])
	*($8 + [76]) = $7
	$4 = ($8 + [28])
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($1)) ){ goto $label$6 }
	*($6 + [8]) = $5
	*($6 + [16]) = $7
	*($8 + [168]) = [0]
	*($6) = $0
	*($4) = ($6 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $35(($8 + [24]), ($8 + [168]), ($8 + [176]), ($8 + [76]))
	
.LABEL $label$5
	$0 = *($8 + [168])
	*($8 + [168]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	CALL $66($0)
	
.LABEL $label$3
	$7 = *($8 + [24])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = ($8 + [28])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$8 }
	
.LOOP $label$9:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $66($6)
	
.LABEL $label$10
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$9 }
	$0 = *(($8 + [24]))
	goto $label$7 
	
.LABEL $label$8
	$0 = $7
	
.LABEL $label$7
	*($4) = $7
	CALL $66($0)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [208])
}

void .FUNC _ZN4fomo13clearlastinfoEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [176])
	*([0] + [4]) = $6
	*((($6 + [96]) + [32])) = [0]
	*($6 + [112]) = (int_64)-1
	$3 = *($0)
	*($6 + [96]) = $3
	$5 = (CASTING uint_64)(uint_32 $1)
	*($6 + [104]) = $5
	*($6 + [120]) = (int_64)0
	*($6 + [132]) = [0]
	$1 = CALL db_lowerbound_i64($3, $5, (int_64)-6030912129794572288, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$1 = CALL $22(($6 + [96]), $1)
	$4 = ($6 + [104])
	
.LOOP $label$2:
	CALL eosio_assert([1], [464])
	CALL eosio_assert([1], [512])
	$2 = CALL db_next_i64(*($1 + [44]), ($6 + [56]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	CALL $22(($6 + [96]), $2)
	
.LABEL $label$3
	CALL $23(($6 + [96]), $1)
	$1 = CALL db_lowerbound_i64(*($6 + [96]), *($4), (int_64)-6030912129794572288, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$1 = CALL $22(($6 + [96]), $1)
	goto $label$2 
	
.LABEL $label$1
	*((($6 + [56]) + [32])) = [0]
	*($6 + [72]) = (int_64)-1
	$3 = *($0)
	*($6 + [56]) = $3
	*($6 + [64]) = $5
	*($6 + [80]) = (int_64)0
	$1 = CALL db_lowerbound_i64($3, $5, (int_64)-5003134530400288768, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $14(($6 + [56]), $1)
	$4 = ($6 + [64])
	
.LOOP $label$5:
	CALL eosio_assert([1], [464])
	CALL eosio_assert([1], [512])
	$2 = CALL db_next_i64(*($1 + [28]), ($6 + [16]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$6 }
	CALL $14(($6 + [56]), $2)
	
.LABEL $label$6
	CALL $24(($6 + [56]), $1)
	$1 = CALL db_lowerbound_i64(*($6 + [56]), *($4), (int_64)-5003134530400288768, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $14(($6 + [56]), $1)
	goto $label$5 
	
.LABEL $label$4
	$1 = [0]
	*(($6 + [48])) = [0]
	*($6 + [32]) = (int_64)-1
	$5 = *($0)
	*($6 + [16]) = $5
	*($6 + [24]) = $5
	*($6 + [40]) = (int_64)0
	$2 = CALL db_lowerbound_i64($5, $5, (int_64)-3553555610274365440, (int_64)0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$9 }
	$1 = CALL $13(($6 + [16]), $2)
	CALL eosio_assert([1], [608])
	CALL $27(($6 + [16]), $1)
	$4 = *($6 + [40])
	if ( $4 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$5 = *($0)
	*($6 + [8]) = ($6 + [16])
	*($6 + [168]) = $5
	CALL eosio_assert(((int_64)*($6 + [16]) == (int_64)CALL $fimport$2()), [544])
	*($6 + [148]) = ($6 + [8])
	*($6 + [144]) = ($6 + [16])
	*($6 + [152]) = ($6 + [168])
	*(($4 = CALL $65([64])) + [40]) = (int_64)1398362884
	*($4 + [32]) = (int_64)0
	CALL eosio_assert([1], [368])
	$5 = (int_64)5462355
	
.LOOP $label$11:
	$2 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$2 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	CALL eosio_assert($2, [320])
	*($4 + [52]) = ($6 + [16])
	CALL $25(($6 + [144]), $4)
	*($6 + [160]) = $4
	$5 = *($4)
	*($6 + [144]) = $5
	$2 = *($4 + [56])
	*($6 + [140]) = $2
	$0 = ($6 + [44])
	$1 = *($0)
	if ( ((uint_32)$1 >= (uint_32)*(($6 + [48]))) ){ goto $label$15 }
	*($1 + [8]) = $5
	*($1 + [16]) = $2
	*($6 + [160]) = [0]
	*($1) = $4
	*($0) = ($1 + [24])
	goto $label$14 
	
.LABEL $label$15
	CALL $26(($6 + [40]), ($6 + [160]), ($6 + [144]), ($6 + [140]))
	
.LABEL $label$14
	$1 = *($6 + [160])
	*($6 + [160]) = [0]
	if ( ($1 == 0) ){ goto $label$16 }
	CALL $66($1)
	
.LABEL $label$16
	$4 = *($6 + [40])
	if ( ($4 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$0 = ($6 + [44])
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$18 }
	
.LOOP $label$19:
	$1 = ($1 + [-24])
	$2 = *($1)
	*($1) = [0]
	if ( ($2 == 0) ){ goto $label$20 }
	CALL $66($2)
	
.LABEL $label$20
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$19 }
	$1 = *(($6 + [40]))
	goto $label$17 
	
.LABEL $label$18
	$1 = $4
	
.LABEL $label$17
	*($0) = $4
	CALL $66($1)
	
.LABEL $label$7
	$4 = *($6 + [80])
	if ( ($4 == 0) ){ goto $label$21 }
	$0 = ($6 + [84])
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$23 }
	
.LOOP $label$24:
	$1 = ($1 + [-24])
	$2 = *($1)
	*($1) = [0]
	if ( ($2 == 0) ){ goto $label$25 }
	CALL $66($2)
	
.LABEL $label$25
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$24 }
	$1 = *(($6 + [80]))
	goto $label$22 
	
.LABEL $label$23
	$1 = $4
	
.LABEL $label$22
	*($0) = $4
	CALL $66($1)
	
.LABEL $label$21
	$4 = *($6 + [120])
	if ( ($4 == 0) ){ goto $label$26 }
	$0 = ($6 + [124])
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$28 }
	
.LOOP $label$29:
	$1 = ($1 + [-24])
	$2 = *($1)
	*($1) = [0]
	if ( ($2 == 0) ){ goto $label$30 }
	CALL $66($2)
	
.LABEL $label$30
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$29 }
	$1 = *(($6 + [120]))
	goto $label$27 
	
.LABEL $label$28
	$1 = $4
	
.LABEL $label$27
	*($0) = $4
	CALL $66($1)
	
.LABEL $label$26
	*([0] + [4]) = ($6 + [176])
}

void .FUNC _ZN4fomo9startnextEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_32 $19
	$19 = (*([0] + [4]) - [368])
	*([0] + [4]) = $19
	CALL require_auth(*($0))
	$2 = [0]
	*((($19 + [328]) + [32])) = [0]
	*($19 + [344]) = (int_64)-1
	$15 = *($0)
	*($19 + [328]) = $15
	*($19 + [336]) = $15
	*($19 + [352]) = (int_64)0
	$11 = [0]
	$5 = CALL db_lowerbound_i64($15, $15, (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$11 = CALL $12(($19 + [328]), $5)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [160])
	CALL eosio_assert(*($11 + [8]), [160])
	*((($19 + [288]) + [32])) = [0]
	*($19 + [304]) = (int_64)-1
	$15 = *($0)
	*($19 + [288]) = $15
	*($19 + [296]) = $15
	*($19 + [312]) = (int_64)0
	$11 = CALL db_lowerbound_i64($15, $15, (int_64)-3553555610274365440, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $13(($19 + [288]), $11)
	$11 = ((uint_32)*($2 + [16]) <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)))
	goto $label$2 
	
.LABEL $label$3
	$11 = [1]
	
.LABEL $label$2
	CALL eosio_assert($11, [208])
	$11 = *($2 + [48])
	if ( ($11 == 0) ){ goto $label$7 }
	*($19 + [264]) = (int_64)-1
	*($19 + [272]) = [0]
	$15 = *($0)
	*($19 + [248]) = $15
	$17 = *($2 + [8])
	*($19 + [256]) = $17
	*(($19 + [276])) = [0]
	*(($19 + [280])) = [0]
	$1 = ((uint_32)$1 % (uint_32)$11)
	$11 = CALL db_find_i64($15, $17, (int_64)-5003134530400288768, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$6 }
	$11 = CALL $14(($19 + [248]), $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)($19 + [248])), [240])
	$13 = *($11 + [8])
	goto $label$5 
	
.LABEL $label$7
	$6 = ($2 + [24])
	$13 = (int_64)0
	goto $label$4 
	
.LABEL $label$6
	$13 = (int_64)0
	
.LABEL $label$5
	$6 = ($2 + [24])
	if ( ((int_64)$13 != (int_64)*($2 + [24])) ){ goto $label$8 }
	$7 = ($2 + [48])
	$8 = (($19 + [248]) + [24])
	$9 = ($19 + [276])
	$10 = ($19 + [256])
	
.LOOP $label$9:
	$11 = *($7)
	if ( ($11 <= [2]) ){ goto $label$8 }
	$1 = ((uint_32)($1 + [1]) % (uint_32)$11)
	$15 = (CASTING uint_64)(uint_32 $1)
	$3 = *($8)
	$12 = *($9)
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$10 }
	$11 = ($12 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$11:
	if ( ((int_64)*(*($11)) == (int_64)$15) ){ goto $label$10 }
	$12 = $11
	$5 = ($11 + [-24])
	$11 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$15 }
	$11 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)($19 + [248])), [240])
	if ( ($11 == 0) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$15
	$11 = CALL db_find_i64(*($19 + [248]), *($10), (int_64)-5003134530400288768, $15)
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_64)$13 == (int_64)*($6)) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$13
	$11 = CALL $14(($19 + [248]), $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)($19 + [248])), [240])
	
.LABEL $label$12
	$13 = *($11 + [8])
	if ( ((int_64)$13 == (int_64)*($6)) ){ goto $label$9 }
	
.LABEL $label$8
	$12 = *($19 + [272])
	if ( ($12 == 0) ){ goto $label$4 }
	$4 = ($19 + [276])
	$11 = *($4)
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$5 = *($11)
	*($11) = [0]
	if ( ($5 == 0) ){ goto $label$19 }
	CALL $66($5)
	
.LABEL $label$19
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$18 }
	$11 = *(($19 + [272]))
	goto $label$16 
	
.LABEL $label$17
	$11 = $12
	
.LABEL $label$16
	*($4) = $12
	CALL $66($11)
	
.LABEL $label$4
	$15 = (int_64)0
	if ( ((int_64)*($6) == (int_64)0) ){ goto $label$24 }
	$14 = (int_64)59
	$11 = [304]
	$16 = (int_64)0
	
.LOOP $label$25:
	if ( ((uint_64)$15 > (uint_64)(int_64)10) ){ goto $label$30 }
	$5 = *($11)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$5 = ($5 + [165])
	goto $label$28 
	
.LABEL $label$30
	$17 = (int_64)0
	if ( ((int_64)$15 == (int_64)11) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$26
	$11 = ($11 + [1])
	$14 = ((int_64)$14 + (int_64)-5)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)1)
	if ( ((int_64)$15 != (int_64)13) ){ goto $label$25 }
	*($19 + [184]) = $16
	CALL $18(($19 + [248]), ($19 + [184]), *($0), (int_64)1397703940)
	$15 = (int_64)0
	$17 = *($19 + [248])
	if ( ((int_64)$17 <= (int_64)0) ){ goto $label$21 }
	*($19 + [240]) = (int_64)1397703940
	$17 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $17) * (float_64)(float_64)0.6))
	*($19 + [232]) = $17
	$14 = *($6)
	CALL eosio_assert((uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [368])
	$17 = (int_64)5459781
	$11 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	
.LOOP $label$33:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$33 }
	
.LABEL $label$32
	$5 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$31 }
	goto $label$22 
	
.LABEL $label$24
	$11 = ($2 + [8])
	goto $label$20 
	
.LABEL $label$23
	$5 = [0]
	
.LABEL $label$22
	CALL eosio_assert($5, [320])
	*((($19 + [96]) + [8])) = *((($19 + [232]) + [8]))
	*($19 + [96]) = *($19 + [232])
	CALL _ZN4fomo8disbonusEhyN5eosio5assetE($0, [0], $14, ($19 + [96]))
	$17 = (int_64)0
	$14 = (int_64)59
	$11 = [352]
	$18 = (int_64)0
	
.LOOP $label$34:
	$16 = (int_64)0
	if ( ((uint_64)$17 > (uint_64)(int_64)11) ){ goto $label$35 }
	$5 = *($11)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$5 = ($5 + [165])
	goto $label$36 
	
.LABEL $label$37
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$16 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$35
	$11 = ($11 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$16 | (int_64)$18)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$34 }
	*($19 + [224]) = (int_64)1397703940
	$17 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 *($19 + [248])) * (float_64)(float_64)0.3))
	*($19 + [216]) = $17
	CALL eosio_assert((uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [368])
	$17 = (int_64)5459781
	$11 = [0]
	
.LOOP $label$40:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$39 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	
.LOOP $label$42:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$42 }
	
.LABEL $label$41
	$5 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	$5 = [0]
	
.LABEL $label$38
	CALL eosio_assert($5, [320])
	*((($19 + [80]) + [8])) = *((($19 + [216]) + [8]))
	*($19 + [80]) = *($19 + [216])
	$11 = [0]
	CALL _ZN4fomo8disbonusEhyN5eosio5assetE($0, [0], $18, ($19 + [80]))
	if ( (CALL is_account($13) == 0) ){ goto $label$21 }
	*($19 + [208]) = (int_64)1397703940
	$17 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 *($19 + [248])) * (float_64)(float_64)0.1))
	*($19 + [200]) = $17
	CALL eosio_assert((uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [368])
	$17 = (int_64)5459781
	
.LOOP $label$45:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$44 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$46 }
	
.LOOP $label$47:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$44 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$47 }
	
.LABEL $label$46
	$5 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	$5 = [0]
	
.LABEL $label$43
	CALL eosio_assert($5, [320])
	*((($19 + [64]) + [8])) = *((($19 + [200]) + [8]))
	*($19 + [64]) = *($19 + [200])
	CALL _ZN4fomo8disbonusEhyN5eosio5assetE($0, [0], $13, ($19 + [64]))
	
.LABEL $label$21
	$17 = (int_64)59
	$11 = [128]
	$16 = (int_64)0
	
.LOOP $label$48:
	$14 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$49 }
	$5 = *($11)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$5 = ($5 + [165])
	goto $label$50 
	
.LABEL $label$51
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$49
	$11 = ($11 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$16 = ((int_64)$14 | (int_64)$16)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$48 }
	*($19 + [176]) = $16
	CALL $18(($19 + [184]), ($19 + [176]), *($0), (int_64)353416332804)
	$15 = (int_64)0
	$18 = *($19 + [184])
	if ( ((int_64)$18 <= (int_64)0) ){ goto $label$52 }
	$17 = (int_64)59
	$11 = [352]
	$16 = (int_64)0
	
.LOOP $label$53:
	$14 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$54 }
	$5 = *($11)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$56 }
	$5 = ($5 + [165])
	goto $label$55 
	
.LABEL $label$56
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$55
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$54
	$11 = ($11 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$16 = ((int_64)$14 | (int_64)$16)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$53 }
	*($19 + [168]) = (int_64)353416332804
	$15 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $18) * (float_64)(float_64)0.6))
	*($19 + [160]) = $15
	CALL eosio_assert((uint_64)(((int_64)$15 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [368])
	$15 = (int_64)1380532550
	$11 = [0]
	
.LOOP $label$59:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$58 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$60 }
	
.LOOP $label$61:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$58 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$61 }
	
.LABEL $label$60
	$5 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$59 }
	goto $label$57 
	
.LABEL $label$58
	$5 = [0]
	
.LABEL $label$57
	CALL eosio_assert($5, [320])
	*((($19 + [48]) + [8])) = *((($19 + [160]) + [8]))
	*($19 + [48]) = *($19 + [160])
	CALL _ZN4fomo8disbonusEhyN5eosio5assetE($0, [1], $16, ($19 + [48]))
	if ( (CALL is_account($13) == 0) ){ goto $label$52 }
	*($19 + [152]) = (int_64)353416332804
	$15 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 *($19 + [184])) * (float_64)(float_64)0.3))
	*($19 + [144]) = $15
	CALL eosio_assert((uint_64)(((int_64)$15 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [368])
	$15 = (int_64)1380532550
	$11 = [0]
	
.LOOP $label$64:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$63 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$65 }
	
.LOOP $label$66:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$63 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$66 }
	
.LABEL $label$65
	$5 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$64 }
	goto $label$62 
	
.LABEL $label$63
	$5 = [0]
	
.LABEL $label$62
	CALL eosio_assert($5, [320])
	*((($19 + [32]) + [8])) = *((($19 + [144]) + [8]))
	*($19 + [32]) = *($19 + [144])
	CALL _ZN4fomo8disbonusEhyN5eosio5assetE($0, [1], $13, ($19 + [32]))
	
.LABEL $label$52
	$15 = *(($2 + [24]))
	$17 = *($2 + [8])
	*((($19 + [128]) + [12])) = *((($19 + [248]) + [12]))
	*(($11 = (($19 + [128]) + [8]))) = *((($19 + [248]) + [8]))
	*($19 + [132]) = *($19 + [252])
	*($19 + [128]) = *($19 + [248])
	$5 = *($2 + [16])
	*(($12 = (($19 + [112]) + [8]))) = *((($19 + [184]) + [8]))
	*($19 + [112]) = *($19 + [184])
	*((($19 + [16]) + [8])) = *($11)
	*($19 + [16]) = *($19 + [128])
	*(($19 + [8])) = *($12)
	*($19) = *($19 + [112])
	CALL _ZN4fomo13recordlastwinEmyymyN5eosio5assetES1_($0, $5, $17, $15, $1, $13, ($19 + [16]), $19)
	$11 = ($2 + [8])
	
.LABEL $label$20
	CALL _ZN4fomo13clearlastinfoEm($0, *($11))
	$12 = *($19 + [312])
	if ( ($12 == 0) ){ goto $label$67 }
	$4 = ($19 + [316])
	$11 = *($4)
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$69 }
	
.LOOP $label$70:
	$11 = ($11 + [-24])
	$5 = *($11)
	*($11) = [0]
	if ( ($5 == 0) ){ goto $label$71 }
	CALL $66($5)
	
.LABEL $label$71
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$70 }
	$11 = *(($19 + [312]))
	goto $label$68 
	
.LABEL $label$69
	$11 = $12
	
.LABEL $label$68
	*($4) = $12
	CALL $66($11)
	
.LABEL $label$67
	$12 = *($19 + [352])
	if ( ($12 == 0) ){ goto $label$72 }
	$4 = ($19 + [356])
	$11 = *($4)
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$74 }
	
.LOOP $label$75:
	$11 = ($11 + [-24])
	$5 = *($11)
	*($11) = [0]
	if ( ($5 == 0) ){ goto $label$76 }
	CALL $66($5)
	
.LABEL $label$76
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$75 }
	$11 = *(($19 + [352]))
	goto $label$73 
	
.LABEL $label$74
	$11 = $12
	
.LABEL $label$73
	*($4) = $12
	CALL $66($11)
	
.LABEL $label$72
	*([0] + [4]) = ($19 + [368])
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$3 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$3 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$2
	CALL read_action_data($3, $1)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[3]), [144])
	CALL memcpy(($5 + [8]), $3, [4])
	$6 = *($5 + [8])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($3)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL void $1((int_32 $6), (int_32 $4))
	*([0] + [4]) = ($5 + [16])
	return [1]
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [432])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $65([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [144])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [144])
	CALL memcpy(($8 + [16]), ($7 + [8]), [1])
	*($6 + [8]) = ((int_32)*($8 + [16]) != (int_32)[0])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $49(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $66($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [432])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $65([64])
	$6 = CALL $47($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [56])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $26(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $66($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [432])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $65([88])
	CALL $33($6)
	*($6 + [72]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [16])
	*($8 + [44]) = ($6 + [20])
	*($8 + [48]) = ($6 + [24])
	*($8 + [52]) = ($6 + [32])
	*($8 + [56]) = ($6 + [40])
	*($8 + [60]) = ($6 + [56])
	CALL $38(($8 + [32]), ($8 + [24]))
	*($6 + [76]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [76])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $35(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $66($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

void .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [832])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [832])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [832])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [832])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [832])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [832])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [832])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [832])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [28])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [832])
	CALL memcpy(*($0 + [4]), $2, [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	CALL eosio_assert(((int_32)(*($0 + [8]) - $1) > (int_32)[7]), [832])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$6 = *($4 + [16])
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$1 }
	$6 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-8524860086709911552, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $36($4, $5)
	*($7 + [36]) = [0]
	*($7 + [32]) = $4
	$6 = *(*(CALL $39(($7 + [32])) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $6
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [848])
	*($1) = *(($4 + [16]))
	*($1 + [20]) = *(*($3 + [4]))
	*($1 + [8]) = *(*($3 + [8]))
	*($1 + [24]) = *(*($3 + [12]))
	*($1 + [32]) = *(*($3 + [16]))
	$4 = *($3 + [20])
	*($1 + [56]) = *($4)
	*(($1 + [64])) = *(($4 + [8]))
	$4 = *($3 + [24])
	*($1 + [40]) = *($4)
	*(($1 + [48])) = *(($4 + [8]))
	*($1 + [16]) = *(*($3 + [28]))
	$4 = $8
	$3 = ($4 + [-80])
	*([0] + [4]) = $3
	*($7 + [12]) = $3
	*($7 + [8]) = $3
	*($7 + [16]) = ($4 + [-8])
	*($7 + [24]) = ($7 + [8])
	*($7 + [36]) = ($1 + [8])
	*($7 + [32]) = $1
	*($7 + [40]) = ($1 + [16])
	*($7 + [44]) = ($1 + [20])
	*($7 + [48]) = ($1 + [24])
	*($7 + [52]) = ($1 + [32])
	*($7 + [56]) = ($1 + [40])
	*($7 + [60]) = ($1 + [56])
	CALL $37(($7 + [32]), ($7 + [24]))
	$6 = *($1)
	*($1 + [76]) = CALL db_store_i64(*($2 + [8]), (int_64)-8524860086709911552, *(*($0 + [8])), $6, $3, [72])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [64])
}

void .FUNC $35 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $65(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $69($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $66($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $66($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [144])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [144])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$0 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [144])
	CALL memcpy($0, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

int_32 .FUNC $33 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [40]) = (int_64)0
	*(($2 = ($0 + [48]))) = (int_64)1398362884
	CALL eosio_assert([1], [368])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [320])
	*(($2 = ($0 + [64]))) = (int_64)1398362884
	*($0 + [56]) = (int_64)0
	CALL eosio_assert([1], [368])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [320])
	return $0
}

int_32 .FUNC $30 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [16]) = (int_64)0
	*(($4 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [368])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [320])
	*($0 + [40]) = $1
	*($6) = *($2 + [4])
	*($6 + [12]) = ($0 + [8])
	*($6 + [8]) = $0
	*($6 + [16]) = ($0 + [16])
	*($6 + [20]) = ($0 + [32])
	*($6 + [24]) = ($0 + [36])
	CALL $32(($6 + [8]), $6)
	$4 = *(*($2 + [8]))
	*($0 + [48]) = [-1]
	*($0 + [44]) = $4
	*([0] + [4]) = ($6 + [32])
	return $0
}

void .FUNC $31 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $65(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $69($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $66($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $66($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$6 = *($4 + [16])
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$1 }
	$6 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-5003134530400288768, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $14($4, $5)
	*($7 + [12]) = [0]
	*($7 + [8]) = $4
	$6 = *(*(CALL $59(($7 + [8])) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $6
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [848])
	*($1) = *(($4 + [16]))
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$4 = $8
	$8 = ($4 + [-32])
	*([0] + [4]) = $8
	CALL eosio_assert([1], [832])
	CALL memcpy($8, $1, [8])
	CALL eosio_assert([1], [832])
	CALL memcpy(($4 + [-24]), ($1 + [8]), [8])
	CALL eosio_assert([1], [832])
	CALL memcpy(($4 + [-16]), ($1 + [16]), [4])
	$6 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-5003134530400288768, *(*($0 + [8])), $6, $8, [20])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $59 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [28]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [976])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-5003134530400288768)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [912])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [912])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $14(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $62([1576], $0)
}

int_32 .FUNC $63 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10070]) == 0) ){ goto $label$2 }
	$7 = *([0] + [10072])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [10070]) = [1]
	$7 = ($7 << [16])
	*([0] + [10072]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10072])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [10072]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [10070]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [10070]) = [1]
	$3 = ($3 << [16])
	*([0] + [10072]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10072])
	
.LABEL $label$8
	*([0] + [10072]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [9960])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [9768]
	$1 = (((int_32)$2 * (int_32)[12]) + [9768])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [144])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [144])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [144])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $52(*($1), ($0 + [32]))
}

void .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [144])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [144])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [144])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [28])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($2, *($0 + [4]), [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]), [144])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $53($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $68($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $65($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $68($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $66($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $67($7)
	return (unreachable)
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1264])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $40($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [144])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $54 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	$6 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [52]) == (int_32)$0), [656])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [704])
	$3 = *($1)
	$4 = ($1 + [16])
	if ( ((uint_32)((*($1 + [16]) + [60]) - (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) > (uint_32)[3600]) ){ goto $label$1 }
	*($4) = (*($4) + [60])
	
.LABEL $label$1
	*($1 + [20]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$5 = *($2)
	*($1 + [32]) = *($5)
	*(($1 + [40])) = *(($5 + [8]))
	*($1 + [24]) = *(*($2 + [4]))
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [768])
	$7 = $7
	$2 = ($7 + [-64])
	*([0] + [4]) = $2
	*($6 + [12]) = $2
	*($6 + [8]) = $2
	*($6 + [16]) = ($7 + [-12])
	*($6 + [24]) = ($6 + [8])
	*($6 + [36]) = ($1 + [8])
	*($6 + [32]) = $1
	*($6 + [40]) = $4
	*($6 + [44]) = ($1 + [20])
	*($6 + [48]) = ($1 + [24])
	*($6 + [52]) = ($1 + [32])
	*($6 + [56]) = ($1 + [48])
	CALL $28(($6 + [32]), ($6 + [24]))
	CALL db_update_i64(*($1 + [56]), (int_64)0, $2, [52])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$2 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [64])
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-6030912129794572288, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [40]) == (int_32)$4), [240])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $22($4, CALL $fimport$5(*($4), *($4 + [8]), (int_64)-6030912129794572288, $5))
	CALL eosio_assert(((int_32)*($2 + [40]) == (int_32)$4), [240])
	
.LABEL $label$4
	*(($2 + [48])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [48])
	$10 = $11
	*([0] + [4]) = $11
	$2 = *($0)
	$3 = *($0 + [4])
	$8 = *($3)
	$7 = *($8 + [16])
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$9 = CALL db_lowerbound_i64(*($8), *($8 + [8]), (int_64)-6030912129794572288, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$2 }
	CALL $22($8, $9)
	*($10 + [28]) = [0]
	*($10 + [24]) = $8
	$7 = *(*(CALL $60(($10 + [24])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($8 + [16])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [848])
	*($1) = *(($8 + [16]))
	*($1 + [8]) = *(*($3 + [4]))
	CALL eosio_assert([1], [368])
	$4 = ($1 + [8])
	$7 = (int_64)1380532550
	$8 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$9 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$9 = [0]
	
.LABEL $label$3
	CALL eosio_assert($9, [320])
	*(($1 + [24])) = (int_64)353416332804
	*($1 + [16]) = (int_64)0
	$8 = *($3 + [8])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)353416332804), [1408])
	$7 = ((int_64)*($1 + [16]) + (int_64)*($8))
	*($1 + [16]) = $7
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1456])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [1488])
	$7 = CALL current_time()
	*($1 + [36]) = [1]
	*($1 + [32]) = ((uint_64)$7 / (uint_64)(int_64)1000000)
	$9 = $11
	$8 = ($9 + [-48])
	*([0] + [4]) = $8
	*($10 + [4]) = $8
	*($10) = $8
	*($10 + [8]) = ($9 + [-8])
	*($10 + [16]) = $10
	*($10 + [28]) = $4
	*($10 + [24]) = $1
	*($10 + [32]) = ($1 + [16])
	*($10 + [36]) = ($1 + [32])
	*($10 + [40]) = ($1 + [36])
	CALL $57(($10 + [24]), ($10 + [16]))
	$7 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($2 + [8]), (int_64)-6030912129794572288, *(*($0 + [8])), $7, $8, [40])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$8 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$7 = *(($2 + [8]))
	$5 = *(*(($0 + [8])))
	$6 = *($1)
	*($10 + [24]) = *(($1 + [8]))
	*($1 + [48]) = CALL db_idx64_store($7, (int_64)-6030912129794572288, $5, $6, ($10 + [24]))
	*([0] + [4]) = ($10 + [48])
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [832])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [832])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [832])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [832])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [832])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$0 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [832])
	CALL memcpy(*($2 + [4]), $0, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}