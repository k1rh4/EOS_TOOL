(data (i32.const 4) " j\00\00")
(data (i32.const 16) "onerror\00")
(data (i32.const 32) "eosio\00")
(data (i32.const 48) "onerror  action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 128) "eosio.token\00")
(data (i32.const 144) "eosenbpocket\00")
(data (i32.const 160) "linzongsheng\00")
(data (i32.const 176) "okkkkkkkkkkk\00")
(data (i32.const 192) "iteosithbxmf\00")
(data (i32.const 208) "token.bank\00")
(data (i32.const 224) "xiaomiaocoin\00")
(data (i32.const 240) "transfer\00")
(data (i32.const 256) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 320) "invalid symbol name\00")
(data (i32.const 352) "read\00")
(data (i32.const 368) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 432) "this EOS user is not exist\00")
(data (i32.const 464) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 528) "this user has not enough EOS token\00")
(data (i32.const 576) "active\00")
(data (i32.const 592) "withdraw EOS succ\00")
(data (i32.const 624) "cannot pass end iterator to modify\00")
(data (i32.const 672) "this ENB user is not exist\00")
(data (i32.const 704) "this user has not enough ENB token\00")
(data (i32.const 752) "withdraw ENB succ\00")
(data (i32.const 784) "this TEA user is not exist\00")
(data (i32.const 816) "this user has not enough TEA token\00")
(data (i32.const 864) "withdraw TEA succ\00")
(data (i32.const 896) "this GSH user is not exist\00")
(data (i32.const 928) "this user has not enough GSH token\00")
(data (i32.const 976) "withdraw GSH succ\00")
(data (i32.const 1008) "this LED user is not exist\00")
(data (i32.const 1040) "this user has not enough LED token\00")
(data (i32.const 1088) "withdraw LED succ\00")
(data (i32.const 1120) "this ITB user is not exist\00")
(data (i32.const 1152) "this user has not enough ITB token\00")
(data (i32.const 1200) "withdraw ITB  succ\00")
(data (i32.const 1232) "this XMC user is not exist\00")
(data (i32.const 1264) "this user has not enough XMC token\00")
(data (i32.const 1312) "withdraw XMC  succ\00")
(data (i32.const 1344) "this OGM user is not exist\00")
(data (i32.const 1376) "this user has not enough OGM token\00")
(data (i32.const 1424) "withdraw OGM  succ\00")
(data (i32.const 1456) "this REXS user is not exist\00")
(data (i32.const 1488) "this user has not enough REXS token\00")
(data (i32.const 1536) "withdraw REXS  succ\00")
(data (i32.const 1568) "this YT user is not exist\00")
(data (i32.const 1600) "this user has not enough YT token\00")
(data (i32.const 1648) "withdraw YT  succ\00")
(data (i32.const 1680) "object passed to modify is not in multi_index\00")
(data (i32.const 1728) "cannot modify objects in table of another contract\00")
(data (i32.const 1792) "attempt to subtract asset with different symbol\00")
(data (i32.const 1840) "subtraction underflow\00")
(data (i32.const 1872) "subtraction overflow\00")
(data (i32.const 1904) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1968) "write\00")
(data (i32.const 1984) "error reading iterator\00")
(data (i32.const 2016) "only EOS or ENB or TEA or GSH or LED or ITB or XMC or OGM or YT or REXS token allowed\00")
(data (i32.const 2112) "get\00")
(data (i32.const 2128) "attempt to add asset with different symbol\00")
(data (i32.const 2176) "addition underflow\00")
(data (i32.const 2208) "addition overflow\00")
(data (i32.const 2240) "cannot create objects in table of another contract\00")
(data (i32.const 10688) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "current_time" (func $fimport$3 (result i64)))
(import "env" "db_find_i64" (func $fimport$4 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "db_store_i64" (func $fimport$6 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$7 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$8 (param i32 i32)))
(import "env" "memcpy" (func $fimport$9 (param i32 i32 i32) (result i32)))
(import "env" "read_action_data" (func $fimport$10 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$11 (param i64)))
(import "env" "require_auth2" (func $fimport$12 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$13 (param i32 i64 i32 i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "apply" (func $5))
(export "malloc" (func $109))
(export "free" (func $112))
(export "strlen" (func $119))
(export "memcmp" (func $120))
(table $0 3 3 anyfunc)
(elem (i32.const 0) $121 $6 $8)



void .FUNC $98 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)5527812
	$4 = *($1)
	*($1 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($5)), [2128])
	$6 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [2176])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [2208])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($7 + [48]) = ($7 + [32])
	*($7 + [44]) = $7
	*($7 + [40]) = $7
	*($7 + [56]) = ($7 + [40])
	*($7 + [68]) = ($1 + [8])
	*($7 + [64]) = $1
	*($7 + [72]) = ($1 + [24])
	CALL $33(($7 + [64]), ($7 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $7, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

int_32 .FUNC $99 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [256])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [320])
	*($0 + [32]) = $1
	$5 = *($2 + [4])
	*($0) = *(*($5))
	*(($1 = ($0 + [16]))) = (int_64)5527812
	$4 = *($2)
	*($0 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$5 = *($5 + [4])
	*($0 + [8]) = *($5)
	*($1) = *(($5 + [8]))
	*($6 + [48]) = ($6 + [32])
	*($6 + [44]) = $6
	*($6 + [40]) = $6
	*($6 + [56]) = ($6 + [40])
	*($6 + [68]) = ($0 + [8])
	*($6 + [64]) = $0
	*($6 + [72]) = ($0 + [24])
	CALL $33(($6 + [64]), ($6 + [56]))
	$3 = *($0)
	*($0 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)-687496737920647168, *(*($2 + [8])), $3, $6, [32])
	if ( (uint_64)($3 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [80])
	return $0
}

void .FUNC $94 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)1296518912
	$4 = *($1)
	*($1 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($5)), [2128])
	$6 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [2176])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [2208])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($7 + [48]) = ($7 + [32])
	*($7 + [44]) = $7
	*($7 + [40]) = $7
	*($7 + [56]) = ($7 + [40])
	*($7 + [68]) = ($1 + [8])
	*($7 + [64]) = $1
	*($7 + [72]) = ($1 + [24])
	CALL $39(($7 + [64]), ($7 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $7, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

void .FUNC $95 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [2240])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $113([48])
	CALL $100($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [36])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $38(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $114($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $96 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)357963223556
	$4 = *($1)
	*($1 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($5)), [2128])
	$6 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [2176])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [2208])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($7 + [48]) = ($7 + [32])
	*($7 + [44]) = $7
	*($7 + [40]) = $7
	*($7 + [56]) = ($7 + [40])
	*($7 + [68]) = ($1 + [8])
	*($7 + [64]) = $1
	*($7 + [72]) = ($1 + [24])
	CALL $36(($7 + [64]), ($7 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $7, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

void .FUNC $97 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [2240])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $113([48])
	CALL $99($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [36])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $35(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $114($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $90 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)1112819972
	$4 = *($1)
	*($1 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($5)), [2128])
	$6 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [2176])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [2208])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($7 + [48]) = ($7 + [32])
	*($7 + [44]) = $7
	*($7 + [40]) = $7
	*($7 + [56]) = ($7 + [40])
	*($7 + [68]) = ($1 + [8])
	*($7 + [64]) = $1
	*($7 + [72]) = ($1 + [24])
	CALL $45(($7 + [64]), ($7 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $7, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

void .FUNC $91 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [2240])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $113([48])
	CALL $102($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [36])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $44(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $114($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $92 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)1129142276
	$4 = *($1)
	*($1 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($5)), [2128])
	$6 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [2176])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [2208])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($7 + [48]) = ($7 + [32])
	*($7 + [44]) = $7
	*($7 + [40]) = $7
	*($7 + [56]) = ($7 + [40])
	*($7 + [68]) = ($1 + [8])
	*($7 + [64]) = $1
	*($7 + [72]) = ($1 + [24])
	CALL $42(($7 + [64]), ($7 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $7, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

void .FUNC $93 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [2240])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $113([48])
	CALL $101($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [36])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $41(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $114($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $115 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $121 ()
{
	(unreachable)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

void .FUNC $38 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $113(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $117($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $114($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $114($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [352])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [352])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $41 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $113(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $117($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $114($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $114($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [352])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $47 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $113(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $117($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $114($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $114($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [352])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $113(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $117($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $114($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $114($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $8 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [112])
	*([0] + [4]) = $13
	CALL require_auth($1)
	if ( ((int_64)*($0) == (int_64)$1) ){ goto $label$1 }
	CALL $11($0, $2)
	$9 = *($2 + [8])
	if ( ((int_64)$9 > (int_64)1145392133) ){ goto $label$50 }
	if ( ((int_64)$9 <= (int_64)1112425731) ){ goto $label$49 }
	if ( ((int_64)$9 == (int_64)1112425732) ){ goto $label$47 }
	if ( ((int_64)$9 == (int_64)1112819972) ){ goto $label$43 }
	if ( ((int_64)$9 != (int_64)1129142276) ){ goto $label$1 }
	$3 = *(($0 + [312]))
	$12 = *(($0 + [316]))
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$51 }
	$7 = ($12 + [-24])
	$6 = ([0] - $3)
	
.LOOP $label$52:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$51 }
	$12 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $6) != (int_32)[-24]) ){ goto $label$52 }
	
.LABEL $label$51
	$6 = ($0 + [288])
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$35 }
	$7 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$18 
	
.LABEL $label$50
	if ( ((int_64)$9 <= (int_64)1296518911) ){ goto $label$48 }
	if ( ((int_64)$9 == (int_64)1296518912) ){ goto $label$46 }
	if ( ((int_64)$9 == (int_64)357963223556) ){ goto $label$42 }
	if ( ((int_64)$9 != (int_64)1397703940) ){ goto $label$1 }
	$3 = *(($0 + [72]))
	$12 = *(($0 + [76]))
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$53 }
	$7 = ($12 + [-24])
	$6 = ([0] - $3)
	
.LOOP $label$54:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$53 }
	$12 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $6) != (int_32)[-24]) ){ goto $label$54 }
	
.LABEL $label$53
	$6 = ($0 + [48])
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$34 }
	$7 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$16 
	
.LABEL $label$49
	if ( ((int_64)$9 == (int_64)5527812) ){ goto $label$45 }
	if ( ((int_64)$9 != (int_64)1095062532) ){ goto $label$1 }
	$3 = *(($0 + [152]))
	$12 = *(($0 + [156]))
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$55 }
	$7 = ($12 + [-24])
	$6 = ([0] - $3)
	
.LOOP $label$56:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$55 }
	$12 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $6) != (int_32)[-24]) ){ goto $label$56 }
	
.LABEL $label$55
	$6 = ($0 + [128])
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$41 }
	$7 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$30 
	
.LABEL $label$48
	if ( ((int_64)$9 == (int_64)1145392134) ){ goto $label$44 }
	if ( ((int_64)$9 != (int_64)1213417223) ){ goto $label$1 }
	$3 = *(($0 + [192]))
	$12 = *(($0 + [196]))
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$57 }
	$7 = ($12 + [-24])
	$6 = ([0] - $3)
	
.LOOP $label$58:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$57 }
	$12 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $6) != (int_32)[-24]) ){ goto $label$58 }
	
.LABEL $label$57
	$6 = ($0 + [168])
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$40 }
	$7 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$28 
	
.LABEL $label$47
	$3 = *(($0 + [112]))
	$12 = *(($0 + [116]))
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$59 }
	$7 = ($12 + [-24])
	$6 = ([0] - $3)
	
.LOOP $label$60:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$59 }
	$12 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $6) != (int_32)[-24]) ){ goto $label$60 }
	
.LABEL $label$59
	$6 = ($0 + [88])
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$39 }
	$7 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$26 
	
.LABEL $label$46
	$3 = *(($0 + [352]))
	$12 = *(($0 + [356]))
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$61 }
	$7 = ($12 + [-24])
	$6 = ([0] - $3)
	
.LOOP $label$62:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$61 }
	$12 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $6) != (int_32)[-24]) ){ goto $label$62 }
	
.LABEL $label$61
	$6 = ($0 + [328])
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$38 }
	$7 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$24 
	
.LABEL $label$45
	$3 = *(($0 + [392]))
	$12 = *(($0 + [396]))
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$63 }
	$7 = ($12 + [-24])
	$6 = ([0] - $3)
	
.LOOP $label$64:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$63 }
	$12 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $6) != (int_32)[-24]) ){ goto $label$64 }
	
.LABEL $label$63
	$6 = ($0 + [368])
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$37 }
	$7 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$22 
	
.LABEL $label$44
	$3 = *(($0 + [232]))
	$12 = *(($0 + [236]))
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$65 }
	$7 = ($12 + [-24])
	$6 = ([0] - $3)
	
.LOOP $label$66:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$65 }
	$12 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $6) != (int_32)[-24]) ){ goto $label$66 }
	
.LABEL $label$65
	$6 = ($0 + [208])
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$36 }
	$7 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$20 
	
.LABEL $label$43
	$3 = *(($0 + [272]))
	$12 = *(($0 + [276]))
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$67 }
	$7 = ($12 + [-24])
	$6 = ([0] - $3)
	
.LOOP $label$68:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$67 }
	$12 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $6) != (int_32)[-24]) ){ goto $label$68 }
	
.LABEL $label$67
	$6 = ($0 + [248])
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$33 }
	$7 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$14 
	
.LABEL $label$42
	$3 = *(($0 + [432]))
	$12 = *(($0 + [436]))
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$69 }
	$7 = ($12 + [-24])
	$6 = ([0] - $3)
	
.LOOP $label$70:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$69 }
	$12 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $6) != (int_32)[-24]) ){ goto $label$70 }
	
.LABEL $label$69
	$6 = ($0 + [408])
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$32 }
	$7 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$12 
	
.LABEL $label$41
	$7 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)-3851232806185205760, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$31 }
	$7 = CALL $17($6, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$30 
	
.LABEL $label$40
	$7 = CALL db_find_i64(*(($0 + [168])), *(($0 + [176])), (int_64)7357663716386537472, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$29 }
	$7 = CALL $19($6, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$28 
	
.LABEL $label$39
	$7 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)6111292519511752704, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$27 }
	$7 = CALL $15($6, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$26 
	
.LABEL $label$38
	$7 = CALL db_find_i64(*(($0 + [328])), *(($0 + [336])), (int_64)-6690752371242303488, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$25 }
	$7 = CALL $27($6, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$24 
	
.LABEL $label$37
	$7 = CALL db_find_i64(*(($0 + [368])), *(($0 + [376])), (int_64)-687496737920647168, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$23 }
	$7 = CALL $31($6, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$22 
	
.LABEL $label$36
	$7 = CALL db_find_i64(*(($0 + [208])), *(($0 + [216])), (int_64)-8461229974752329728, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$21 }
	$7 = CALL $21($6, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$20 
	
.LABEL $label$35
	$7 = CALL db_find_i64(*(($0 + [288])), *(($0 + [296])), (int_64)-1400148708988813312, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$19 }
	$7 = CALL $25($6, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$18 
	
.LABEL $label$34
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)6138877067229396992, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$17 }
	$7 = CALL $12($6, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$16 
	
.LABEL $label$33
	$7 = CALL db_find_i64(*(($0 + [248])), *(($0 + [256])), (int_64)8525221919782338560, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$15 }
	$7 = CALL $23($6, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$14 
	
.LABEL $label$32
	$7 = CALL db_find_i64(*(($0 + [408])), *(($0 + [416])), (int_64)-4991240312799100928, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$13 }
	$7 = CALL $29($6, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$6), [368])
	goto $label$12 
	
.LABEL $label$31
	$7 = [0]
	
.LABEL $label$30
	*($13 + [108]) = $7
	*($13 + [104]) = $6
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [784])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*(($7 + [16]))), [464])
	CALL eosio_assert(((int_64)*($2) <= (int_64)*($7 + [8])), [816])
	$4 = *($0)
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [576]
	$10 = (int_64)0
	
.LOOP $label$71:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$76 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$75 }
	$5 = ($5 + [165])
	goto $label$74 
	
.LABEL $label$76
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$75
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$74
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$73
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$72
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$71 }
	*($13 + [96]) = $10
	*($13 + [88]) = $4
	$9 = (int_64)0
	$11 = (int_64)59
	$7 = [160]
	$10 = (int_64)0
	
.LOOP $label$77:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$78 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$80 }
	$5 = ($5 + [165])
	goto $label$79 
	
.LABEL $label$80
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$79
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$78
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$8 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$77 }
	*($13 + [80]) = $10
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [240]
	$10 = (int_64)0
	
.LOOP $label$81:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$86 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$85 }
	$5 = ($5 + [165])
	goto $label$84 
	
.LABEL $label$86
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$85
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$84
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$83
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$82
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$81 }
	*($13 + [72]) = $10
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$7 = CALL strlen([864])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$89 }
	*($13 + [8]) = ($7 << [1])
	$5 = (($13 + [8]) | [1])
	if ( $7 ){ goto $label$88 }
	goto $label$87 
	
.LABEL $label$89
	$12 = (($7 + [16]) & [-16])
	$5 = CALL $113($12)
	*($13 + [8]) = ($12 | [1])
	*($13 + [16]) = $5
	*($13 + [12]) = $7
	
.LABEL $label$88
	CALL memcpy($5, [864], $7)
	
.LABEL $label$87
	*(($5 + $7)) = [0]
	*(($13 + [52])) = *(($2 + [12]))
	*(($13 + [48])) = *(($2 + [8]))
	*(($13 + [44])) = *(($2 + [4]))
	*($13 + [32]) = $1
	*($13 + [24]) = *($0)
	*($13 + [40]) = *($2)
	$7 = (($13 + [8]) + [8])
	*(($5 = ($13 + [64]))) = *($7)
	*($13 + [56]) = *($13 + [8])
	*($13 + [8]) = [0]
	*($13 + [12]) = [0]
	*($7) = [0]
	CALL $13($0, ($13 + [88]), ($13 + [80]), ($13 + [72]), ($13 + [24]))
	if ( ((*($13 + [56]) & [1]) == 0) ){ goto $label$90 }
	CALL $114(*($5))
	
.LABEL $label$90
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$91 }
	CALL $114(*(($13 + [16])))
	
.LABEL $label$91
	$1 = *($0)
	$0 = *($13 + [108])
	*($13 + [28]) = $2
	*($13 + [24]) = ($13 + [104])
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [624])
	CALL $18($6, $0, $1, ($13 + [24]))
	goto $label$1 
	
.LABEL $label$29
	$7 = [0]
	
.LABEL $label$28
	*($13 + [108]) = $7
	*($13 + [104]) = $6
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [896])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*(($7 + [16]))), [464])
	CALL eosio_assert(((int_64)*($2) <= (int_64)*($7 + [8])), [928])
	$4 = *($0)
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [576]
	$10 = (int_64)0
	
.LOOP $label$92:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$97 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$96 }
	$5 = ($5 + [165])
	goto $label$95 
	
.LABEL $label$97
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$94 }
	goto $label$93 
	
.LABEL $label$96
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$95
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$94
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$93
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$92 }
	*($13 + [96]) = $10
	*($13 + [88]) = $4
	$9 = (int_64)0
	$11 = (int_64)59
	$7 = [176]
	$10 = (int_64)0
	
.LOOP $label$98:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$99 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$101 }
	$5 = ($5 + [165])
	goto $label$100 
	
.LABEL $label$101
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$100
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$99
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$8 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$98 }
	*($13 + [80]) = $10
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [240]
	$10 = (int_64)0
	
.LOOP $label$102:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$107 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$106 }
	$5 = ($5 + [165])
	goto $label$105 
	
.LABEL $label$107
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$104 }
	goto $label$103 
	
.LABEL $label$106
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$105
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$104
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$103
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$102 }
	*($13 + [72]) = $10
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$7 = CALL strlen([976])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$110 }
	*($13 + [8]) = ($7 << [1])
	$5 = (($13 + [8]) | [1])
	if ( $7 ){ goto $label$109 }
	goto $label$108 
	
.LABEL $label$110
	$12 = (($7 + [16]) & [-16])
	$5 = CALL $113($12)
	*($13 + [8]) = ($12 | [1])
	*($13 + [16]) = $5
	*($13 + [12]) = $7
	
.LABEL $label$109
	CALL memcpy($5, [976], $7)
	
.LABEL $label$108
	*(($5 + $7)) = [0]
	*(($13 + [52])) = *(($2 + [12]))
	*(($13 + [48])) = *(($2 + [8]))
	*(($13 + [44])) = *(($2 + [4]))
	*($13 + [32]) = $1
	*($13 + [24]) = *($0)
	*($13 + [40]) = *($2)
	$7 = (($13 + [8]) + [8])
	*(($5 = ($13 + [64]))) = *($7)
	*($13 + [56]) = *($13 + [8])
	*($13 + [8]) = [0]
	*($13 + [12]) = [0]
	*($7) = [0]
	CALL $13($0, ($13 + [88]), ($13 + [80]), ($13 + [72]), ($13 + [24]))
	if ( ((*($13 + [56]) & [1]) == 0) ){ goto $label$111 }
	CALL $114(*($5))
	
.LABEL $label$111
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$112 }
	CALL $114(*(($13 + [16])))
	
.LABEL $label$112
	$1 = *($0)
	$0 = *($13 + [108])
	*($13 + [28]) = $2
	*($13 + [24]) = ($13 + [104])
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [624])
	CALL $20($6, $0, $1, ($13 + [24]))
	goto $label$1 
	
.LABEL $label$27
	$7 = [0]
	
.LABEL $label$26
	*($13 + [108]) = $7
	*($13 + [104]) = $6
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [672])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*(($7 + [16]))), [464])
	CALL eosio_assert(((int_64)*($2) <= (int_64)*($7 + [8])), [704])
	$4 = *($0)
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [576]
	$10 = (int_64)0
	
.LOOP $label$113:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$118 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$117 }
	$5 = ($5 + [165])
	goto $label$116 
	
.LABEL $label$118
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$115 }
	goto $label$114 
	
.LABEL $label$117
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$116
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$115
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$114
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$113 }
	*($13 + [96]) = $10
	*($13 + [88]) = $4
	$9 = (int_64)0
	$11 = (int_64)59
	$7 = [144]
	$10 = (int_64)0
	
.LOOP $label$119:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$120 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$122 }
	$5 = ($5 + [165])
	goto $label$121 
	
.LABEL $label$122
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$121
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$120
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$8 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$119 }
	*($13 + [80]) = $10
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [240]
	$10 = (int_64)0
	
.LOOP $label$123:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$128 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$127 }
	$5 = ($5 + [165])
	goto $label$126 
	
.LABEL $label$128
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$125 }
	goto $label$124 
	
.LABEL $label$127
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$126
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$125
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$124
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$123 }
	*($13 + [72]) = $10
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$7 = CALL strlen([752])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$131 }
	*($13 + [8]) = ($7 << [1])
	$5 = (($13 + [8]) | [1])
	if ( $7 ){ goto $label$130 }
	goto $label$129 
	
.LABEL $label$131
	$12 = (($7 + [16]) & [-16])
	$5 = CALL $113($12)
	*($13 + [8]) = ($12 | [1])
	*($13 + [16]) = $5
	*($13 + [12]) = $7
	
.LABEL $label$130
	CALL memcpy($5, [752], $7)
	
.LABEL $label$129
	*(($5 + $7)) = [0]
	*(($13 + [52])) = *(($2 + [12]))
	*(($13 + [48])) = *(($2 + [8]))
	*(($13 + [44])) = *(($2 + [4]))
	*($13 + [32]) = $1
	*($13 + [24]) = *($0)
	*($13 + [40]) = *($2)
	$7 = (($13 + [8]) + [8])
	*(($5 = ($13 + [64]))) = *($7)
	*($13 + [56]) = *($13 + [8])
	*($13 + [8]) = [0]
	*($13 + [12]) = [0]
	*($7) = [0]
	CALL $13($0, ($13 + [88]), ($13 + [80]), ($13 + [72]), ($13 + [24]))
	if ( ((*($13 + [56]) & [1]) == 0) ){ goto $label$132 }
	CALL $114(*($5))
	
.LABEL $label$132
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$133 }
	CALL $114(*(($13 + [16])))
	
.LABEL $label$133
	$1 = *($0)
	$0 = *($13 + [108])
	*($13 + [28]) = $2
	*($13 + [24]) = ($13 + [104])
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [624])
	CALL $16($6, $0, $1, ($13 + [24]))
	goto $label$1 
	
.LABEL $label$25
	$7 = [0]
	
.LABEL $label$24
	*($13 + [108]) = $7
	*($13 + [104]) = $6
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [1344])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*(($7 + [16]))), [464])
	CALL eosio_assert(((int_64)*($2) <= (int_64)*($7 + [8])), [1376])
	$4 = *($0)
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [576]
	$10 = (int_64)0
	
.LOOP $label$134:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$139 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$138 }
	$5 = ($5 + [165])
	goto $label$137 
	
.LABEL $label$139
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$136 }
	goto $label$135 
	
.LABEL $label$138
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$137
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$136
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$135
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$134 }
	*($13 + [96]) = $10
	*($13 + [88]) = $4
	$9 = (int_64)0
	$11 = (int_64)59
	$7 = [176]
	$10 = (int_64)0
	
.LOOP $label$140:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$141 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$143 }
	$5 = ($5 + [165])
	goto $label$142 
	
.LABEL $label$143
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$142
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$141
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$8 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$140 }
	*($13 + [80]) = $10
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [240]
	$10 = (int_64)0
	
.LOOP $label$144:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$149 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$148 }
	$5 = ($5 + [165])
	goto $label$147 
	
.LABEL $label$149
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$146 }
	goto $label$145 
	
.LABEL $label$148
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$147
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$146
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$145
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$144 }
	*($13 + [72]) = $10
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$7 = CALL strlen([1424])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$152 }
	*($13 + [8]) = ($7 << [1])
	$5 = (($13 + [8]) | [1])
	if ( $7 ){ goto $label$151 }
	goto $label$150 
	
.LABEL $label$152
	$12 = (($7 + [16]) & [-16])
	$5 = CALL $113($12)
	*($13 + [8]) = ($12 | [1])
	*($13 + [16]) = $5
	*($13 + [12]) = $7
	
.LABEL $label$151
	CALL memcpy($5, [1424], $7)
	
.LABEL $label$150
	*(($5 + $7)) = [0]
	*(($13 + [52])) = *(($2 + [12]))
	*(($13 + [48])) = *(($2 + [8]))
	*(($13 + [44])) = *(($2 + [4]))
	*($13 + [32]) = $1
	*($13 + [24]) = *($0)
	*($13 + [40]) = *($2)
	$7 = (($13 + [8]) + [8])
	*(($5 = ($13 + [64]))) = *($7)
	*($13 + [56]) = *($13 + [8])
	*($13 + [8]) = [0]
	*($13 + [12]) = [0]
	*($7) = [0]
	CALL $13($0, ($13 + [88]), ($13 + [80]), ($13 + [72]), ($13 + [24]))
	if ( ((*($13 + [56]) & [1]) == 0) ){ goto $label$153 }
	CALL $114(*($5))
	
.LABEL $label$153
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$154 }
	CALL $114(*(($13 + [16])))
	
.LABEL $label$154
	$1 = *($0)
	$0 = *($13 + [108])
	*($13 + [28]) = $2
	*($13 + [24]) = ($13 + [104])
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [624])
	CALL $28($6, $0, $1, ($13 + [24]))
	goto $label$1 
	
.LABEL $label$23
	$7 = [0]
	
.LABEL $label$22
	*($13 + [108]) = $7
	*($13 + [104]) = $6
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [1568])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*(($7 + [16]))), [464])
	CALL eosio_assert(((int_64)*($2) <= (int_64)*($7 + [8])), [1600])
	$4 = *($0)
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [576]
	$10 = (int_64)0
	
.LOOP $label$155:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$160 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$159 }
	$5 = ($5 + [165])
	goto $label$158 
	
.LABEL $label$160
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$157 }
	goto $label$156 
	
.LABEL $label$159
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$158
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$157
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$156
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$155 }
	*($13 + [96]) = $10
	*($13 + [88]) = $4
	$9 = (int_64)0
	$11 = (int_64)59
	$7 = [176]
	$10 = (int_64)0
	
.LOOP $label$161:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$162 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$164 }
	$5 = ($5 + [165])
	goto $label$163 
	
.LABEL $label$164
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$163
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$162
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$8 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$161 }
	*($13 + [80]) = $10
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [240]
	$10 = (int_64)0
	
.LOOP $label$165:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$170 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$169 }
	$5 = ($5 + [165])
	goto $label$168 
	
.LABEL $label$170
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$167 }
	goto $label$166 
	
.LABEL $label$169
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$168
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$167
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$166
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$165 }
	*($13 + [72]) = $10
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$7 = CALL strlen([1648])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$173 }
	*($13 + [8]) = ($7 << [1])
	$5 = (($13 + [8]) | [1])
	if ( $7 ){ goto $label$172 }
	goto $label$171 
	
.LABEL $label$173
	$12 = (($7 + [16]) & [-16])
	$5 = CALL $113($12)
	*($13 + [8]) = ($12 | [1])
	*($13 + [16]) = $5
	*($13 + [12]) = $7
	
.LABEL $label$172
	CALL memcpy($5, [1648], $7)
	
.LABEL $label$171
	*(($5 + $7)) = [0]
	*(($13 + [52])) = *(($2 + [12]))
	*(($13 + [48])) = *(($2 + [8]))
	*(($13 + [44])) = *(($2 + [4]))
	*($13 + [32]) = $1
	*($13 + [24]) = *($0)
	*($13 + [40]) = *($2)
	$7 = (($13 + [8]) + [8])
	*(($5 = ($13 + [64]))) = *($7)
	*($13 + [56]) = *($13 + [8])
	*($13 + [8]) = [0]
	*($13 + [12]) = [0]
	*($7) = [0]
	CALL $13($0, ($13 + [88]), ($13 + [80]), ($13 + [72]), ($13 + [24]))
	if ( ((*($13 + [56]) & [1]) == 0) ){ goto $label$174 }
	CALL $114(*($5))
	
.LABEL $label$174
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$175 }
	CALL $114(*(($13 + [16])))
	
.LABEL $label$175
	$1 = *($0)
	$0 = *($13 + [108])
	*($13 + [28]) = $2
	*($13 + [24]) = ($13 + [104])
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [624])
	CALL $32($6, $0, $1, ($13 + [24]))
	goto $label$1 
	
.LABEL $label$21
	$7 = [0]
	
.LABEL $label$20
	*($13 + [108]) = $7
	*($13 + [104]) = $6
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [1008])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*(($7 + [16]))), [464])
	CALL eosio_assert(((int_64)*($2) <= (int_64)*($7 + [8])), [1040])
	$4 = *($0)
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [576]
	$10 = (int_64)0
	
.LOOP $label$176:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$181 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$180 }
	$5 = ($5 + [165])
	goto $label$179 
	
.LABEL $label$181
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$178 }
	goto $label$177 
	
.LABEL $label$180
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$179
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$178
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$177
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$176 }
	*($13 + [96]) = $10
	*($13 + [88]) = $4
	$9 = (int_64)0
	$11 = (int_64)59
	$7 = [176]
	$10 = (int_64)0
	
.LOOP $label$182:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$183 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$185 }
	$5 = ($5 + [165])
	goto $label$184 
	
.LABEL $label$185
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$184
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$183
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$8 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$182 }
	*($13 + [80]) = $10
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [240]
	$10 = (int_64)0
	
.LOOP $label$186:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$191 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$190 }
	$5 = ($5 + [165])
	goto $label$189 
	
.LABEL $label$191
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$188 }
	goto $label$187 
	
.LABEL $label$190
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$189
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$188
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$187
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$186 }
	*($13 + [72]) = $10
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$7 = CALL strlen([1088])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$194 }
	*($13 + [8]) = ($7 << [1])
	$5 = (($13 + [8]) | [1])
	if ( $7 ){ goto $label$193 }
	goto $label$192 
	
.LABEL $label$194
	$12 = (($7 + [16]) & [-16])
	$5 = CALL $113($12)
	*($13 + [8]) = ($12 | [1])
	*($13 + [16]) = $5
	*($13 + [12]) = $7
	
.LABEL $label$193
	CALL memcpy($5, [1088], $7)
	
.LABEL $label$192
	*(($5 + $7)) = [0]
	*(($13 + [52])) = *(($2 + [12]))
	*(($13 + [48])) = *(($2 + [8]))
	*(($13 + [44])) = *(($2 + [4]))
	*($13 + [32]) = $1
	*($13 + [24]) = *($0)
	*($13 + [40]) = *($2)
	$7 = (($13 + [8]) + [8])
	*(($5 = ($13 + [64]))) = *($7)
	*($13 + [56]) = *($13 + [8])
	*($13 + [8]) = [0]
	*($13 + [12]) = [0]
	*($7) = [0]
	CALL $13($0, ($13 + [88]), ($13 + [80]), ($13 + [72]), ($13 + [24]))
	if ( ((*($13 + [56]) & [1]) == 0) ){ goto $label$195 }
	CALL $114(*($5))
	
.LABEL $label$195
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$196 }
	CALL $114(*(($13 + [16])))
	
.LABEL $label$196
	$1 = *($0)
	$0 = *($13 + [108])
	*($13 + [28]) = $2
	*($13 + [24]) = ($13 + [104])
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [624])
	CALL $22($6, $0, $1, ($13 + [24]))
	goto $label$1 
	
.LABEL $label$19
	$7 = [0]
	
.LABEL $label$18
	*($13 + [108]) = $7
	*($13 + [104]) = $6
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [1232])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*(($7 + [16]))), [464])
	CALL eosio_assert(((int_64)*($2) <= (int_64)*($7 + [8])), [1264])
	$4 = *($0)
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [576]
	$10 = (int_64)0
	
.LOOP $label$197:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$202 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$201 }
	$5 = ($5 + [165])
	goto $label$200 
	
.LABEL $label$202
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$199 }
	goto $label$198 
	
.LABEL $label$201
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$200
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$199
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$198
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$197 }
	*($13 + [96]) = $10
	*($13 + [88]) = $4
	$9 = (int_64)0
	$11 = (int_64)59
	$7 = [224]
	$10 = (int_64)0
	
.LOOP $label$203:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$204 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$206 }
	$5 = ($5 + [165])
	goto $label$205 
	
.LABEL $label$206
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$205
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$204
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$8 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$203 }
	*($13 + [80]) = $10
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [240]
	$10 = (int_64)0
	
.LOOP $label$207:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$212 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$211 }
	$5 = ($5 + [165])
	goto $label$210 
	
.LABEL $label$212
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$209 }
	goto $label$208 
	
.LABEL $label$211
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$210
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$209
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$208
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$207 }
	*($13 + [72]) = $10
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$7 = CALL strlen([1312])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$215 }
	*($13 + [8]) = ($7 << [1])
	$5 = (($13 + [8]) | [1])
	if ( $7 ){ goto $label$214 }
	goto $label$213 
	
.LABEL $label$215
	$12 = (($7 + [16]) & [-16])
	$5 = CALL $113($12)
	*($13 + [8]) = ($12 | [1])
	*($13 + [16]) = $5
	*($13 + [12]) = $7
	
.LABEL $label$214
	CALL memcpy($5, [1312], $7)
	
.LABEL $label$213
	*(($5 + $7)) = [0]
	*(($13 + [52])) = *(($2 + [12]))
	*(($13 + [48])) = *(($2 + [8]))
	*(($13 + [44])) = *(($2 + [4]))
	*($13 + [32]) = $1
	*($13 + [24]) = *($0)
	*($13 + [40]) = *($2)
	$7 = (($13 + [8]) + [8])
	*(($5 = ($13 + [64]))) = *($7)
	*($13 + [56]) = *($13 + [8])
	*($13 + [8]) = [0]
	*($13 + [12]) = [0]
	*($7) = [0]
	CALL $13($0, ($13 + [88]), ($13 + [80]), ($13 + [72]), ($13 + [24]))
	if ( ((*($13 + [56]) & [1]) == 0) ){ goto $label$216 }
	CALL $114(*($5))
	
.LABEL $label$216
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$217 }
	CALL $114(*(($13 + [16])))
	
.LABEL $label$217
	$1 = *($0)
	$0 = *($13 + [108])
	*($13 + [28]) = $2
	*($13 + [24]) = ($13 + [104])
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [624])
	CALL $26($6, $0, $1, ($13 + [24]))
	goto $label$1 
	
.LABEL $label$17
	$7 = [0]
	
.LABEL $label$16
	*($13 + [108]) = $7
	*($13 + [104]) = $6
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [432])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*(($7 + [16]))), [464])
	CALL eosio_assert(((int_64)*($2) <= (int_64)*($7 + [8])), [528])
	$4 = *($0)
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [576]
	$10 = (int_64)0
	
.LOOP $label$218:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$223 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$222 }
	$5 = ($5 + [165])
	goto $label$221 
	
.LABEL $label$223
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$220 }
	goto $label$219 
	
.LABEL $label$222
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$221
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$220
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$219
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$218 }
	*($13 + [96]) = $10
	*($13 + [88]) = $4
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [128]
	$10 = (int_64)0
	
.LOOP $label$224:
	if ( ((uint_64)$9 > (uint_64)(int_64)10) ){ goto $label$229 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$228 }
	$5 = ($5 + [165])
	goto $label$227 
	
.LABEL $label$229
	$11 = (int_64)0
	if ( ((int_64)$9 == (int_64)11) ){ goto $label$226 }
	goto $label$225 
	
.LABEL $label$228
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$227
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$226
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$225
	$7 = ($7 + [1])
	$8 = ((int_64)$8 + (int_64)-5)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)1)
	if ( ((int_64)$9 != (int_64)13) ){ goto $label$224 }
	*($13 + [80]) = $10
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [240]
	$10 = (int_64)0
	
.LOOP $label$230:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$235 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$234 }
	$5 = ($5 + [165])
	goto $label$233 
	
.LABEL $label$235
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$232 }
	goto $label$231 
	
.LABEL $label$234
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$233
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$232
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$231
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$230 }
	*($13 + [72]) = $10
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$7 = CALL strlen([592])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$238 }
	*($13 + [8]) = ($7 << [1])
	$5 = (($13 + [8]) | [1])
	if ( $7 ){ goto $label$237 }
	goto $label$236 
	
.LABEL $label$238
	$12 = (($7 + [16]) & [-16])
	$5 = CALL $113($12)
	*($13 + [8]) = ($12 | [1])
	*($13 + [16]) = $5
	*($13 + [12]) = $7
	
.LABEL $label$237
	CALL memcpy($5, [592], $7)
	
.LABEL $label$236
	*(($5 + $7)) = [0]
	*(($13 + [52])) = *(($2 + [12]))
	*(($13 + [48])) = *(($2 + [8]))
	*(($13 + [44])) = *(($2 + [4]))
	*($13 + [32]) = $1
	*($13 + [24]) = *($0)
	*($13 + [40]) = *($2)
	$7 = (($13 + [8]) + [8])
	*(($5 = ($13 + [64]))) = *($7)
	*($13 + [56]) = *($13 + [8])
	*($13 + [8]) = [0]
	*($13 + [12]) = [0]
	*($7) = [0]
	CALL $13($0, ($13 + [88]), ($13 + [80]), ($13 + [72]), ($13 + [24]))
	if ( ((*($13 + [56]) & [1]) == 0) ){ goto $label$239 }
	CALL $114(*($5))
	
.LABEL $label$239
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$240 }
	CALL $114(*(($13 + [16])))
	
.LABEL $label$240
	$1 = *($0)
	$0 = *($13 + [108])
	*($13 + [28]) = $2
	*($13 + [24]) = ($13 + [104])
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [624])
	CALL $14($6, $0, $1, ($13 + [24]))
	goto $label$1 
	
.LABEL $label$15
	$7 = [0]
	
.LABEL $label$14
	*($13 + [108]) = $7
	*($13 + [104]) = $6
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [1120])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*(($7 + [16]))), [464])
	CALL eosio_assert(((int_64)*($2) <= (int_64)*($7 + [8])), [1152])
	$4 = *($0)
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [576]
	$10 = (int_64)0
	
.LOOP $label$241:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$246 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$245 }
	$5 = ($5 + [165])
	goto $label$244 
	
.LABEL $label$246
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$243 }
	goto $label$242 
	
.LABEL $label$245
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$244
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$243
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$242
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$241 }
	*($13 + [96]) = $10
	*($13 + [88]) = $4
	$9 = (int_64)0
	$11 = (int_64)59
	$7 = [192]
	$10 = (int_64)0
	
.LOOP $label$247:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$248 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$250 }
	$5 = ($5 + [165])
	goto $label$249 
	
.LABEL $label$250
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$249
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$248
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$8 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$247 }
	*($13 + [80]) = $10
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [240]
	$10 = (int_64)0
	
.LOOP $label$251:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$256 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$255 }
	$5 = ($5 + [165])
	goto $label$254 
	
.LABEL $label$256
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$253 }
	goto $label$252 
	
.LABEL $label$255
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$254
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$253
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$252
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$251 }
	*($13 + [72]) = $10
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$7 = CALL strlen([1200])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$259 }
	*($13 + [8]) = ($7 << [1])
	$5 = (($13 + [8]) | [1])
	if ( $7 ){ goto $label$258 }
	goto $label$257 
	
.LABEL $label$259
	$12 = (($7 + [16]) & [-16])
	$5 = CALL $113($12)
	*($13 + [8]) = ($12 | [1])
	*($13 + [16]) = $5
	*($13 + [12]) = $7
	
.LABEL $label$258
	CALL memcpy($5, [1200], $7)
	
.LABEL $label$257
	*(($5 + $7)) = [0]
	*(($13 + [52])) = *(($2 + [12]))
	*(($13 + [48])) = *(($2 + [8]))
	*(($13 + [44])) = *(($2 + [4]))
	*($13 + [32]) = $1
	*($13 + [24]) = *($0)
	*($13 + [40]) = *($2)
	$7 = (($13 + [8]) + [8])
	*(($5 = ($13 + [64]))) = *($7)
	*($13 + [56]) = *($13 + [8])
	*($13 + [8]) = [0]
	*($13 + [12]) = [0]
	*($7) = [0]
	CALL $13($0, ($13 + [88]), ($13 + [80]), ($13 + [72]), ($13 + [24]))
	if ( ((*($13 + [56]) & [1]) == 0) ){ goto $label$260 }
	CALL $114(*($5))
	
.LABEL $label$260
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$261 }
	CALL $114(*(($13 + [16])))
	
.LABEL $label$261
	$1 = *($0)
	$0 = *($13 + [108])
	*($13 + [28]) = $2
	*($13 + [24]) = ($13 + [104])
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [624])
	CALL $24($6, $0, $1, ($13 + [24]))
	goto $label$1 
	
.LABEL $label$13
	$7 = [0]
	
.LABEL $label$12
	*($13 + [108]) = $7
	*($13 + [104]) = $6
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [1456])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*(($7 + [16]))), [464])
	CALL eosio_assert(((int_64)*($2) <= (int_64)*($7 + [8])), [1488])
	$4 = *($0)
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [576]
	$10 = (int_64)0
	
.LOOP $label$262:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$267 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$266 }
	$5 = ($5 + [165])
	goto $label$265 
	
.LABEL $label$267
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$264 }
	goto $label$263 
	
.LABEL $label$266
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$265
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$264
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$263
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$262 }
	*($13 + [96]) = $10
	*($13 + [88]) = $4
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [208]
	$10 = (int_64)0
	
.LOOP $label$268:
	if ( ((uint_64)$9 > (uint_64)(int_64)9) ){ goto $label$273 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$272 }
	$5 = ($5 + [165])
	goto $label$271 
	
.LABEL $label$273
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$270 }
	goto $label$269 
	
.LABEL $label$272
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$271
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$270
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$269
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$268 }
	*($13 + [80]) = $10
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [240]
	$10 = (int_64)0
	
.LOOP $label$274:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$279 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$278 }
	$5 = ($5 + [165])
	goto $label$277 
	
.LABEL $label$279
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$276 }
	goto $label$275 
	
.LABEL $label$278
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$277
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$276
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$275
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$274 }
	*($13 + [72]) = $10
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$7 = CALL strlen([1536])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$282 }
	*($13 + [8]) = ($7 << [1])
	$5 = (($13 + [8]) | [1])
	if ( $7 ){ goto $label$281 }
	goto $label$280 
	
.LABEL $label$282
	$12 = (($7 + [16]) & [-16])
	$5 = CALL $113($12)
	*($13 + [8]) = ($12 | [1])
	*($13 + [16]) = $5
	*($13 + [12]) = $7
	
.LABEL $label$281
	CALL memcpy($5, [1536], $7)
	
.LABEL $label$280
	*(($5 + $7)) = [0]
	*(($13 + [52])) = *(($2 + [12]))
	*(($13 + [48])) = *(($2 + [8]))
	*(($13 + [44])) = *(($2 + [4]))
	*($13 + [32]) = $1
	*($13 + [24]) = *($0)
	*($13 + [40]) = *($2)
	$7 = (($13 + [8]) + [8])
	*(($5 = ($13 + [64]))) = *($7)
	*($13 + [56]) = *($13 + [8])
	*($13 + [8]) = [0]
	*($13 + [12]) = [0]
	*($7) = [0]
	CALL $13($0, ($13 + [88]), ($13 + [80]), ($13 + [72]), ($13 + [24]))
	if ( ((*($13 + [56]) & [1]) == 0) ){ goto $label$283 }
	CALL $114(*($5))
	
.LABEL $label$283
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$284 }
	CALL $114(*(($13 + [16])))
	
.LABEL $label$284
	$1 = *($0)
	$0 = *($13 + [108])
	*($13 + [28]) = $2
	*($13 + [24]) = ($13 + [104])
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [624])
	CALL $30($6, $0, $1, ($13 + [24]))
	goto $label$1 
	
.LABEL $label$11
	CALL $115(($13 + [8]))
	
.LABEL $label$10
	CALL $115(($13 + [8]))
	
.LABEL $label$9
	CALL $115(($13 + [8]))
	
.LABEL $label$8
	CALL $115(($13 + [8]))
	
.LABEL $label$7
	CALL $115(($13 + [8]))
	
.LABEL $label$6
	CALL $115(($13 + [8]))
	
.LABEL $label$5
	CALL $115(($13 + [8]))
	
.LABEL $label$4
	CALL $115(($13 + [8]))
	
.LABEL $label$3
	CALL $115(($13 + [8]))
	
.LABEL $label$2
	CALL $115(($13 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($13 + [112])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [256])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [320])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [352])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [352])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [352])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

void .FUNC $6 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	*([0] + [4]) = $11
	*($11 + [24]) = $1
	$8 = *($0)
	if ( ((int_64)$8 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$8 != (int_64)$2) ){ goto $label$1 }
	CALL $11($0, $3)
	$1 = *($3 + [8])
	if ( ((int_64)$1 > (int_64)1145392133) ){ goto $label$50 }
	if ( ((int_64)$1 <= (int_64)1112425731) ){ goto $label$49 }
	if ( ((int_64)$1 == (int_64)1112425732) ){ goto $label$47 }
	if ( ((int_64)$1 == (int_64)1112819972) ){ goto $label$46 }
	if ( ((int_64)$1 != (int_64)1129142276) ){ goto $label$1 }
	$1 = *($11 + [24])
	$5 = *(($0 + [312]))
	$10 = *(($0 + [316]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$51 }
	$9 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$52:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$51 }
	$10 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$52 }
	
.LABEL $label$51
	$9 = ($0 + [288])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$41 }
	$7 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	if ( $7 ){ goto $label$40 }
	goto $label$20 
	
.LABEL $label$50
	if ( ((int_64)$1 <= (int_64)1296518911) ){ goto $label$48 }
	if ( ((int_64)$1 == (int_64)1296518912) ){ goto $label$45 }
	if ( ((int_64)$1 == (int_64)357963223556) ){ goto $label$44 }
	if ( ((int_64)$1 != (int_64)1397703940) ){ goto $label$1 }
	$1 = *($11 + [24])
	$5 = *(($0 + [72]))
	$10 = *(($0 + [76]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$53 }
	$9 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$54:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$53 }
	$10 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$54 }
	
.LABEL $label$53
	$9 = ($0 + [48])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$39 }
	$7 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	if ( $7 ){ goto $label$38 }
	goto $label$18 
	
.LABEL $label$49
	if ( ((int_64)$1 == (int_64)5527812) ){ goto $label$43 }
	if ( ((int_64)$1 != (int_64)1095062532) ){ goto $label$1 }
	$1 = *($11 + [24])
	$5 = *(($0 + [152]))
	$10 = *(($0 + [156]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$55 }
	$9 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$56:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$55 }
	$10 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$56 }
	
.LABEL $label$55
	$9 = ($0 + [128])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$37 }
	$7 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	if ( $7 ){ goto $label$36 }
	goto $label$16 
	
.LABEL $label$48
	if ( ((int_64)$1 == (int_64)1145392134) ){ goto $label$42 }
	if ( ((int_64)$1 != (int_64)1213417223) ){ goto $label$1 }
	$1 = *($11 + [24])
	$5 = *(($0 + [192]))
	$10 = *(($0 + [196]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$57 }
	$9 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$58:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$57 }
	$10 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$58 }
	
.LABEL $label$57
	$9 = ($0 + [168])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$35 }
	$7 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	if ( $7 ){ goto $label$34 }
	goto $label$14 
	
.LABEL $label$47
	$1 = *($11 + [24])
	$5 = *(($0 + [112]))
	$10 = *(($0 + [116]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$59 }
	$9 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$60:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$59 }
	$10 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$60 }
	
.LABEL $label$59
	$9 = ($0 + [88])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$33 }
	$7 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	if ( $7 ){ goto $label$32 }
	goto $label$12 
	
.LABEL $label$46
	$1 = *($11 + [24])
	$5 = *(($0 + [272]))
	$10 = *(($0 + [276]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$61 }
	$9 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$62:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$61 }
	$10 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$62 }
	
.LABEL $label$61
	$9 = ($0 + [248])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$31 }
	$7 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	if ( $7 ){ goto $label$30 }
	goto $label$10 
	
.LABEL $label$45
	$1 = *($11 + [24])
	$5 = *(($0 + [352]))
	$10 = *(($0 + [356]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$63 }
	$9 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$64:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$63 }
	$10 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$64 }
	
.LABEL $label$63
	$9 = ($0 + [328])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$29 }
	$7 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	if ( $7 ){ goto $label$28 }
	goto $label$8 
	
.LABEL $label$44
	$1 = *($11 + [24])
	$5 = *(($0 + [432]))
	$10 = *(($0 + [436]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$65 }
	$9 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$66:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$65 }
	$10 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$66 }
	
.LABEL $label$65
	$9 = ($0 + [408])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$27 }
	$7 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	if ( $7 ){ goto $label$26 }
	goto $label$6 
	
.LABEL $label$43
	$1 = *($11 + [24])
	$5 = *(($0 + [392]))
	$10 = *(($0 + [396]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$67 }
	$9 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$68:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$67 }
	$10 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$68 }
	
.LABEL $label$67
	$9 = ($0 + [368])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$25 }
	$7 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	if ( $7 ){ goto $label$24 }
	goto $label$4 
	
.LABEL $label$42
	$1 = *($11 + [24])
	$5 = *(($0 + [232]))
	$10 = *(($0 + [236]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$69 }
	$9 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$70:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$69 }
	$10 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$70 }
	
.LABEL $label$69
	$9 = ($0 + [208])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$23 }
	$7 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	if ( $7 ){ goto $label$22 }
	goto $label$2 
	
.LABEL $label$41
	$7 = CALL db_find_i64(*(($0 + [288])), *(($0 + [296])), (int_64)-1400148708988813312, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$21 }
	$7 = CALL $25($9, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	
.LABEL $label$40
	*($11 + [16]) = $3
	CALL eosio_assert([1], [624])
	CALL $92($9, $7, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$39
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)6138877067229396992, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$19 }
	$7 = CALL $12($9, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	
.LABEL $label$38
	*($11 + [16]) = $3
	CALL eosio_assert([1], [624])
	CALL $80($9, $7, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$37
	$7 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)-3851232806185205760, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$17 }
	$7 = CALL $17($9, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	
.LABEL $label$36
	*($11 + [16]) = $3
	CALL eosio_assert([1], [624])
	CALL $84($9, $7, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$35
	$7 = CALL db_find_i64(*(($0 + [168])), *(($0 + [176])), (int_64)7357663716386537472, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$15 }
	$7 = CALL $19($9, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	
.LABEL $label$34
	*($11 + [16]) = $3
	CALL eosio_assert([1], [624])
	CALL $86($9, $7, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$33
	$7 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)6111292519511752704, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$13 }
	$7 = CALL $15($9, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	
.LABEL $label$32
	*($11 + [16]) = $3
	CALL eosio_assert([1], [624])
	CALL $82($9, $7, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$31
	$7 = CALL db_find_i64(*(($0 + [248])), *(($0 + [256])), (int_64)8525221919782338560, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$11 }
	$7 = CALL $23($9, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	
.LABEL $label$30
	*($11 + [16]) = $3
	CALL eosio_assert([1], [624])
	CALL $90($9, $7, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$29
	$7 = CALL db_find_i64(*(($0 + [328])), *(($0 + [336])), (int_64)-6690752371242303488, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$9 }
	$7 = CALL $27($9, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	
.LABEL $label$28
	*($11 + [16]) = $3
	CALL eosio_assert([1], [624])
	CALL $94($9, $7, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$27
	$7 = CALL db_find_i64(*(($0 + [408])), *(($0 + [416])), (int_64)-4991240312799100928, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$7 }
	$7 = CALL $29($9, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	
.LABEL $label$26
	*($11 + [16]) = $3
	CALL eosio_assert([1], [624])
	CALL $96($9, $7, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$25
	$7 = CALL db_find_i64(*(($0 + [368])), *(($0 + [376])), (int_64)-687496737920647168, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$5 }
	$7 = CALL $31($9, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	
.LABEL $label$24
	*($11 + [16]) = $3
	CALL eosio_assert([1], [624])
	CALL $98($9, $7, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$23
	$7 = CALL db_find_i64(*(($0 + [208])), *(($0 + [216])), (int_64)-8461229974752329728, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = CALL $21($9, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$9), [368])
	$1 = *($0)
	
.LABEL $label$22
	*($11 + [16]) = $3
	CALL eosio_assert([1], [624])
	CALL $88($9, $7, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$21
	$1 = *($0)
	
.LABEL $label$20
	*($11 + [20]) = $3
	*($11 + [16]) = ($11 + [24])
	CALL $91(($11 + [8]), $9, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$19
	$1 = *($0)
	
.LABEL $label$18
	*($11 + [20]) = $3
	*($11 + [16]) = ($11 + [24])
	CALL $79(($11 + [8]), $9, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$17
	$1 = *($0)
	
.LABEL $label$16
	*($11 + [20]) = $3
	*($11 + [16]) = ($11 + [24])
	CALL $83(($11 + [8]), $9, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$15
	$1 = *($0)
	
.LABEL $label$14
	*($11 + [20]) = $3
	*($11 + [16]) = ($11 + [24])
	CALL $85(($11 + [8]), $9, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$13
	$1 = *($0)
	
.LABEL $label$12
	*($11 + [20]) = $3
	*($11 + [16]) = ($11 + [24])
	CALL $81(($11 + [8]), $9, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$11
	$1 = *($0)
	
.LABEL $label$10
	*($11 + [20]) = $3
	*($11 + [16]) = ($11 + [24])
	CALL $89(($11 + [8]), $9, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$9
	$1 = *($0)
	
.LABEL $label$8
	*($11 + [20]) = $3
	*($11 + [16]) = ($11 + [24])
	CALL $93(($11 + [8]), $9, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$7
	$1 = *($0)
	
.LABEL $label$6
	*($11 + [20]) = $3
	*($11 + [16]) = ($11 + [24])
	CALL $95(($11 + [8]), $9, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$5
	$1 = *($0)
	
.LABEL $label$4
	*($11 + [20]) = $3
	*($11 + [16]) = ($11 + [24])
	CALL $97(($11 + [8]), $9, $1, ($11 + [16]))
	goto $label$1 
	
.LABEL $label$3
	$1 = *($0)
	
.LABEL $label$2
	*($11 + [20]) = $3
	*($11 + [16]) = ($11 + [24])
	CALL $87(($11 + [8]), $9, $1, ($11 + [16]))
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [32])
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [256])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [320])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $75(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $76(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $114(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [480])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [16]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [32]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [48])
	
.LABEL $label$7
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [128]
	$7 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$19 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$3 = ($3 + [165])
	goto $label$17 
	
.LABEL $label$19
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$15
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$14 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$23 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [144]
	$7 = (int_64)0
	
.LOOP $label$24:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$25 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$3 = ($3 + [165])
	goto $label$26 
	
.LABEL $label$27
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$25
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$24 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$23 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [160]
	$7 = (int_64)0
	
.LOOP $label$28:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$29 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$3 = ($3 + [165])
	goto $label$30 
	
.LABEL $label$31
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$29
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$28 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$23 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [176]
	$7 = (int_64)0
	
.LOOP $label$32:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$33 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$35 }
	$3 = ($3 + [165])
	goto $label$34 
	
.LABEL $label$35
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$34
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$33
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$32 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$23 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [192]
	$7 = (int_64)0
	
.LOOP $label$36:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$37 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$3 = ($3 + [165])
	goto $label$38 
	
.LABEL $label$39
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$37
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$36 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$23 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [208]
	$7 = (int_64)0
	
.LOOP $label$40:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$45 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$44 }
	$3 = ($3 + [165])
	goto $label$43 
	
.LABEL $label$45
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$44
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$43
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$42
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$41
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$40 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$23 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [224]
	$7 = (int_64)0
	
.LOOP $label$46:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$47 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$49 }
	$3 = ($3 + [165])
	goto $label$48 
	
.LABEL $label$49
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$48
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$47
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$46 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$22 }
	
.LABEL $label$23
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [240]
	$7 = (int_64)0
	
.LOOP $label$50:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$55 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$54 }
	$3 = ($3 + [165])
	goto $label$53 
	
.LABEL $label$55
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$54
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$53
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$52
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$51
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$50 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$21 }
	
.LABEL $label$22
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$20 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [240]
	$7 = (int_64)0
	
.LOOP $label$56:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$61 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$60 }
	$3 = ($3 + [165])
	goto $label$59 
	
.LABEL $label$61
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$60
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$59
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$58
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$57
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$56 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$20 }
	
.LABEL $label$21
	*(($9 + [48])) = $0
	*(($9 + [56])) = (int_64)-1
	*(($9 + [64])) = (int_64)0
	*(($9 + [72])) = [0]
	*($9 + [40]) = $0
	*($9 + [32]) = $0
	*($9 + [80]) = $0
	*(($9 + [88])) = $0
	*(($9 + [96])) = (int_64)-1
	*(($9 + [104])) = [0]
	*(($9 + [108])) = [0]
	*(($9 + [112])) = [0]
	*($9 + [120]) = $0
	*(($9 + [128])) = $0
	*(($9 + [136])) = (int_64)-1
	*(($9 + [144])) = [0]
	*(($9 + [148])) = [0]
	*(($9 + [152])) = [0]
	*($9 + [160]) = $0
	*(($9 + [168])) = $0
	*(($9 + [176])) = (int_64)-1
	*(($9 + [184])) = [0]
	*(($9 + [188])) = [0]
	*(($9 + [192])) = [0]
	*($9 + [200]) = $0
	*(($9 + [208])) = $0
	*(($9 + [216])) = (int_64)-1
	*(($9 + [224])) = [0]
	*(($9 + [228])) = [0]
	*(($9 + [232])) = [0]
	*($9 + [240]) = $0
	*(($9 + [248])) = $0
	*(($9 + [256])) = (int_64)-1
	*(($9 + [264])) = [0]
	*(($9 + [268])) = [0]
	*(($9 + [272])) = [0]
	*($9 + [280]) = $0
	*(($9 + [288])) = $0
	*(($9 + [296])) = (int_64)-1
	*(($9 + [304])) = [0]
	*(($9 + [308])) = [0]
	*(($9 + [312])) = [0]
	*($9 + [320]) = $0
	*(($9 + [328])) = $0
	*(($9 + [336])) = (int_64)-1
	*(($9 + [344])) = [0]
	*(($9 + [348])) = [0]
	*(($9 + [352])) = [0]
	*($9 + [360]) = $0
	*(($9 + [368])) = $0
	*(($9 + [376])) = (int_64)-1
	*(($9 + [384])) = [0]
	*(($9 + [388])) = [0]
	*(($9 + [392])) = [0]
	$6 = *($9 + [32])
	*($9 + [400]) = $6
	*(($9 + [408])) = $6
	*(($9 + [416])) = (int_64)-1
	*(($9 + [424])) = [0]
	*(($9 + [428])) = [0]
	*(($9 + [432])) = [0]
	*($9 + [440]) = $6
	*(($9 + [448])) = $6
	*(($9 + [456])) = (int_64)-1
	*(($9 + [464])) = [0]
	*(($9 + [468])) = [0]
	*(($9 + [472])) = [0]
	if ( ((int_64)$2 == (int_64)-2039333636196532224) ){ goto $label$63 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$62 }
	*($9 + [28]) = [0]
	*($9 + [24]) = [1]
	*($9) = *($9 + [24])
	CALL $7(($9 + [32]), $9)
	goto $label$62 
	
.LABEL $label$63
	*($9 + [20]) = [0]
	*($9 + [16]) = [2]
	*($9 + [8 align=4]) = *($9 + [16])
	CALL $9(($9 + [32]), ($9 + [8]))
	
.LABEL $label$62
	CALL $10(($9 + [32]))
	
.LABEL $label$20
	*([0] + [4]) = ($9 + [480])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC $14 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)1397703940
	$4 = *($1)
	$6 = *(*($3) + [4])
	$8 = *($6 + [8])
	$7 = *(($6 + [16]))
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$7), [1792])
	$8 = (int_64)
	CALL eosio_assert(((int_64)$8($8 - *($3))) > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1872])
	*($5) = $7
	*($1 + [8]) = $8
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($9 + [48]) = ($9 + [32])
	*($9 + [44]) = $9
	*($9 + [40]) = $9
	*($9 + [56]) = ($9 + [40])
	*($9 + [68]) = ($1 + [8])
	*($9 + [64]) = $1
	*($9 + [72]) = ($1 + [24])
	CALL $60(($9 + [64]), ($9 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $9, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

int_32 .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1984])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$2 = ($0 + [24])
	*(($4 = CALL $113([48])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [256])
	$3 = ($4 + [8])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [320])
	*($4 + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = $3
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + [24])
	CALL $58(($8 + [32]), ($8 + [24]))
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [32]) = $7
	$6 = *($4 + [36])
	*($8 + [4]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $59($2, ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $114($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $16 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)1112425732
	$4 = *($1)
	$6 = *(*($3) + [4])
	$8 = *($6 + [8])
	$7 = *(($6 + [16]))
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$7), [1792])
	$8 = (int_64)
	CALL eosio_assert(((int_64)$8($8 - *($3))) > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1872])
	*($5) = $7
	*($1 + [8]) = $8
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($9 + [48]) = ($9 + [32])
	*($9 + [44]) = $9
	*($9 + [40]) = $9
	*($9 + [56]) = ($9 + [40])
	*($9 + [68]) = ($1 + [8])
	*($9 + [64]) = $1
	*($9 + [72]) = ($1 + [24])
	CALL $57(($9 + [64]), ($9 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $9, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1984])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$2 = ($0 + [24])
	*(($4 = CALL $113([48])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [256])
	$3 = ($4 + [8])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [320])
	*($4 + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = $3
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + [24])
	CALL $55(($8 + [32]), ($8 + [24]))
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [32]) = $7
	$6 = *($4 + [36])
	*($8 + [4]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $56($2, ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $114($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC $10 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [432]))
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = ($0 + [436])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $114($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$4 = *(($0 + [432]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*($3) = $1
	CALL $114($4)
	
.LABEL $label$1
	$1 = *(($0 + [392]))
	if ( ($1 == 0) ){ goto $label$6 }
	$3 = ($0 + [396])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $114($2)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$4 = *(($0 + [392]))
	goto $label$7 
	
.LABEL $label$8
	$4 = $1
	
.LABEL $label$7
	*($3) = $1
	CALL $114($4)
	
.LABEL $label$6
	$1 = *(($0 + [352]))
	if ( ($1 == 0) ){ goto $label$11 }
	$3 = ($0 + [356])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	CALL $114($2)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$14 }
	$4 = *(($0 + [352]))
	goto $label$12 
	
.LABEL $label$13
	$4 = $1
	
.LABEL $label$12
	*($3) = $1
	CALL $114($4)
	
.LABEL $label$11
	$1 = *(($0 + [312]))
	if ( ($1 == 0) ){ goto $label$16 }
	$3 = ($0 + [316])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$20 }
	CALL $114($2)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$19 }
	$4 = *(($0 + [312]))
	goto $label$17 
	
.LABEL $label$18
	$4 = $1
	
.LABEL $label$17
	*($3) = $1
	CALL $114($4)
	
.LABEL $label$16
	$1 = *(($0 + [272]))
	if ( ($1 == 0) ){ goto $label$21 }
	$3 = ($0 + [276])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$23 }
	
.LOOP $label$24:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$25 }
	CALL $114($2)
	
.LABEL $label$25
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$24 }
	$4 = *(($0 + [272]))
	goto $label$22 
	
.LABEL $label$23
	$4 = $1
	
.LABEL $label$22
	*($3) = $1
	CALL $114($4)
	
.LABEL $label$21
	$1 = *(($0 + [232]))
	if ( ($1 == 0) ){ goto $label$26 }
	$3 = ($0 + [236])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$28 }
	
.LOOP $label$29:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$30 }
	CALL $114($2)
	
.LABEL $label$30
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$29 }
	$4 = *(($0 + [232]))
	goto $label$27 
	
.LABEL $label$28
	$4 = $1
	
.LABEL $label$27
	*($3) = $1
	CALL $114($4)
	
.LABEL $label$26
	$1 = *(($0 + [192]))
	if ( ($1 == 0) ){ goto $label$31 }
	$3 = ($0 + [196])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$33 }
	
.LOOP $label$34:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$35 }
	CALL $114($2)
	
.LABEL $label$35
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$34 }
	$4 = *(($0 + [192]))
	goto $label$32 
	
.LABEL $label$33
	$4 = $1
	
.LABEL $label$32
	*($3) = $1
	CALL $114($4)
	
.LABEL $label$31
	$1 = *(($0 + [152]))
	if ( ($1 == 0) ){ goto $label$36 }
	$3 = ($0 + [156])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$38 }
	
.LOOP $label$39:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$40 }
	CALL $114($2)
	
.LABEL $label$40
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$39 }
	$4 = *(($0 + [152]))
	goto $label$37 
	
.LABEL $label$38
	$4 = $1
	
.LABEL $label$37
	*($3) = $1
	CALL $114($4)
	
.LABEL $label$36
	$1 = *(($0 + [112]))
	if ( ($1 == 0) ){ goto $label$41 }
	$3 = ($0 + [116])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$43 }
	
.LOOP $label$44:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$45 }
	CALL $114($2)
	
.LABEL $label$45
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$44 }
	$4 = *(($0 + [112]))
	goto $label$42 
	
.LABEL $label$43
	$4 = $1
	
.LABEL $label$42
	*($3) = $1
	CALL $114($4)
	
.LABEL $label$41
	$1 = *(($0 + [72]))
	if ( ($1 == 0) ){ goto $label$46 }
	$3 = ($0 + [76])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$48 }
	
.LOOP $label$49:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$50 }
	CALL $114($2)
	
.LABEL $label$50
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$49 }
	$4 = *(($0 + [72]))
	goto $label$47 
	
.LABEL $label$48
	$4 = $1
	
.LABEL $label$47
	*($3) = $1
	CALL $114($4)
	
.LABEL $label$46
	$1 = *(($0 + [32]))
	if ( ($1 == 0) ){ goto $label$51 }
	$3 = ($0 + [36])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$53 }
	
.LOOP $label$54:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$55 }
	CALL $114($2)
	
.LABEL $label$55
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$54 }
	$4 = *(($0 + [32]))
	goto $label$52 
	
.LABEL $label$53
	$4 = $1
	
.LABEL $label$52
	*($3) = $1
	CALL $114($4)
	
.LABEL $label$51
	return $0
}

void .FUNC $11 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	$3 = [1]
	$2 = *($1 + [8])
	if ( ((int_64)$2 == (int_64)1397703940) ){ goto $label$1 }
	if ( ((int_64)$2 == (int_64)1112425732) ){ goto $label$1 }
	if ( ((int_64)$2 == (int_64)1095062532) ){ goto $label$1 }
	if ( ((int_64)$2 == (int_64)1213417223) ){ goto $label$1 }
	if ( ((int_64)$2 == (int_64)1112819972) ){ goto $label$1 }
	if ( ((int_64)$2 == (int_64)1129142276) ){ goto $label$1 }
	if ( ((int_64)$2 == (int_64)1296518912) ){ goto $label$1 }
	if ( ((int_64)$2 == (int_64)5527812) ){ goto $label$1 }
	if ( ((int_64)$2 == (int_64)357963223556) ){ goto $label$1 }
	$3 = ((int_64)$2 == (int_64)1145392134)
	
.LABEL $label$1
	CALL eosio_assert($3, [2016])
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1984])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$2 = ($0 + [24])
	*(($4 = CALL $113([48])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [256])
	$3 = ($4 + [8])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [320])
	*($4 + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = $3
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + [24])
	CALL $73(($8 + [32]), ($8 + [24]))
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [32]) = $7
	$6 = *($4 + [36])
	*($8 + [4]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $74($2, ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $114($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $13 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [96])
	*([0] + [4]) = $6
	$5 = CALL current_time()
	*(($6 + [44])) = [0]
	*(($6 + [48])) = [0]
	*($6 + [28]) = [0]
	*($6 + [32]) = [0]
	*($6 + [36]) = [0]
	*($6 + [40]) = [0]
	*($6 + [16]) = ((CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000)) + [60])
	*($6 + [52]) = [0]
	*(($6 + [56])) = [0]
	*(($6 + [60])) = [0]
	*($6 + [64]) = [0]
	*(($6 + [68])) = [0]
	*(($6 + [72])) = [0]
	CALL $61(($6 + [52]), $1, $2, $3, $4)
	$5 = *($0)
	*($6 + [8]) = (int_64)0
	*($6) = (int_64)323
	CALL $62(($6 + [80]), ($6 + [16]))
	$0 = *($6 + [80])
	CALL send_deferred($6, $5, $0, (*($6 + [84]) - $0), [0])
	$0 = *($6 + [80])
	if ( ($0 == 0) ){ goto $label$1 }
	*($6 + [84]) = $0
	CALL $114($0)
	
.LABEL $label$1
	CALL $63(($6 + [16]))
	*([0] + [4]) = ($6 + [96])
}

void .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $77(*($1), ($0 + [32]))
}

void .FUNC $18 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)1095062532
	$4 = *($1)
	$6 = *(*($3) + [4])
	$8 = *($6 + [8])
	$7 = *(($6 + [16]))
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$7), [1792])
	$8 = (int_64)
	CALL eosio_assert(((int_64)$8($8 - *($3))) > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1872])
	*($5) = $7
	*($1 + [8]) = $8
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($9 + [48]) = ($9 + [32])
	*($9 + [44]) = $9
	*($9 + [40]) = $9
	*($9 + [56]) = ($9 + [40])
	*($9 + [68]) = ($1 + [8])
	*($9 + [64]) = $1
	*($9 + [72]) = ($1 + [24])
	CALL $54(($9 + [64]), ($9 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $9, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1984])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$2 = ($0 + [24])
	*(($4 = CALL $113([48])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [256])
	$3 = ($4 + [8])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [320])
	*($4 + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = $3
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + [24])
	CALL $52(($8 + [32]), ($8 + [24]))
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [32]) = $7
	$6 = *($4 + [36])
	*($8 + [4]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $53($2, ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $114($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [352])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $59 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $113(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $117($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $114($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $114($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $50 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $113(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $117($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $114($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $114($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [352])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $113(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $117($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $114($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $114($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [352])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $56 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $113(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $117($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $114($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $114($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $113(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $114($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $117 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $114 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC $35 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $113(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $117($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $114($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $114($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [10676])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [10484]
	$1 = (((int_32)$2 * (int_32)[12]) + [10484])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $113 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10780])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $111($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [10688])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $111 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10774]) == 0) ){ goto $label$2 }
	$7 = *([0] + [10776])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [10774]) = [1]
	$7 = ($7 << [16])
	*([0] + [10776]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10776])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [10776]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [10774]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [10774]) = [1]
	$3 = ($3 << [16])
	*([0] + [10776]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10776])
	
.LABEL $label$8
	*([0] + [10776]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $113($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1984])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$2 = ($0 + [24])
	*(($4 = CALL $113([48])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [256])
	$3 = ($4 + [8])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [320])
	*($4 + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = $3
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + [24])
	CALL $37(($8 + [32]), ($8 + [24]))
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [32]) = $7
	$6 = *($4 + [36])
	*($8 + [4]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $38($2, ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $114($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $28 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)1296518912
	$4 = *($1)
	$6 = *(*($3) + [4])
	$8 = *($6 + [8])
	$7 = *(($6 + [16]))
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$7), [1792])
	$8 = (int_64)
	CALL eosio_assert(((int_64)$8($8 - *($3))) > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1872])
	*($5) = $7
	*($1 + [8]) = $8
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($9 + [48]) = ($9 + [32])
	*($9 + [44]) = $9
	*($9 + [40]) = $9
	*($9 + [56]) = ($9 + [40])
	*($9 + [68]) = ($1 + [8])
	*($9 + [64]) = $1
	*($9 + [72]) = ($1 + [24])
	CALL $39(($9 + [64]), ($9 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $9, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

void .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [352])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $107 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [256])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [320])
	*($0 + [32]) = $1
	$5 = *($2 + [4])
	*($0) = *(*($5))
	*(($1 = ($0 + [16]))) = (int_64)1112425732
	$4 = *($2)
	*($0 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$5 = *($5 + [4])
	*($0 + [8]) = *($5)
	*($1) = *(($5 + [8]))
	*($6 + [48]) = ($6 + [32])
	*($6 + [44]) = $6
	*($6 + [40]) = $6
	*($6 + [56]) = ($6 + [40])
	*($6 + [68]) = ($0 + [8])
	*($6 + [64]) = $0
	*($6 + [72]) = ($0 + [24])
	CALL $57(($6 + [64]), ($6 + [56]))
	$3 = *($0)
	*($0 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)6111292519511752704, *(*($2 + [8])), $3, $6, [32])
	if ( (uint_64)($3 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [80])
	return $0
}

int_32 .FUNC $106 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [256])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [320])
	*($0 + [32]) = $1
	$5 = *($2 + [4])
	*($0) = *(*($5))
	*(($1 = ($0 + [16]))) = (int_64)1095062532
	$4 = *($2)
	*($0 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$5 = *($5 + [4])
	*($0 + [8]) = *($5)
	*($1) = *(($5 + [8]))
	*($6 + [48]) = ($6 + [32])
	*($6 + [44]) = $6
	*($6 + [40]) = $6
	*($6 + [56]) = ($6 + [40])
	*($6 + [68]) = ($0 + [8])
	*($6 + [64]) = $0
	*($6 + [72]) = ($0 + [24])
	CALL $54(($6 + [64]), ($6 + [56]))
	$3 = *($0)
	*($0 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)-3851232806185205760, *(*($2 + [8])), $3, $6, [32])
	if ( (uint_64)($3 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [80])
	return $0
}

int_32 .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1984])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$2 = ($0 + [24])
	*(($4 = CALL $113([48])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [256])
	$3 = ($4 + [8])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [320])
	*($4 + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = $3
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + [24])
	CALL $49(($8 + [32]), ($8 + [24]))
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [32]) = $7
	$6 = *($4 + [36])
	*($8 + [4]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $50($2, ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $114($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $20 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)1213417223
	$4 = *($1)
	$6 = *(*($3) + [4])
	$8 = *($6 + [8])
	$7 = *(($6 + [16]))
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$7), [1792])
	$8 = (int_64)
	CALL eosio_assert(((int_64)$8($8 - *($3))) > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1872])
	*($5) = $7
	*($1 + [8]) = $8
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($9 + [48]) = ($9 + [32])
	*($9 + [44]) = $9
	*($9 + [40]) = $9
	*($9 + [56]) = ($9 + [40])
	*($9 + [68]) = ($1 + [8])
	*($9 + [64]) = $1
	*($9 + [72]) = ($1 + [24])
	CALL $51(($9 + [64]), ($9 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $9, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1984])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$2 = ($0 + [24])
	*(($4 = CALL $113([48])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [256])
	$3 = ($4 + [8])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [320])
	*($4 + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = $3
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + [24])
	CALL $46(($8 + [32]), ($8 + [24]))
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [32]) = $7
	$6 = *($4 + [36])
	*($8 + [4]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $47($2, ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $114($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $22 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)1145392134
	$4 = *($1)
	$6 = *(*($3) + [4])
	$8 = *($6 + [8])
	$7 = *(($6 + [16]))
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$7), [1792])
	$8 = (int_64)
	CALL eosio_assert(((int_64)$8($8 - *($3))) > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1872])
	*($5) = $7
	*($1 + [8]) = $8
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($9 + [48]) = ($9 + [32])
	*($9 + [44]) = $9
	*($9 + [40]) = $9
	*($9 + [56]) = ($9 + [40])
	*($9 + [68]) = ($1 + [8])
	*($9 + [64]) = $1
	*($9 + [72]) = ($1 + [24])
	CALL $48(($9 + [64]), ($9 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $9, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1984])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$2 = ($0 + [24])
	*(($4 = CALL $113([48])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [256])
	$3 = ($4 + [8])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [320])
	*($4 + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = $3
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + [24])
	CALL $43(($8 + [32]), ($8 + [24]))
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [32]) = $7
	$6 = *($4 + [36])
	*($8 + [4]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $44($2, ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $114($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $24 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)1112819972
	$4 = *($1)
	$6 = *(*($3) + [4])
	$8 = *($6 + [8])
	$7 = *(($6 + [16]))
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$7), [1792])
	$8 = (int_64)
	CALL eosio_assert(((int_64)$8($8 - *($3))) > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1872])
	*($5) = $7
	*($1 + [8]) = $8
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($9 + [48]) = ($9 + [32])
	*($9 + [44]) = $9
	*($9 + [40]) = $9
	*($9 + [56]) = ($9 + [40])
	*($9 + [68]) = ($1 + [8])
	*($9 + [64]) = $1
	*($9 + [72]) = ($1 + [24])
	CALL $45(($9 + [64]), ($9 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $9, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1984])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$2 = ($0 + [24])
	*(($4 = CALL $113([48])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [256])
	$3 = ($4 + [8])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [320])
	*($4 + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = $3
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + [24])
	CALL $40(($8 + [32]), ($8 + [24]))
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [32]) = $7
	$6 = *($4 + [36])
	*($8 + [4]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $41($2, ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $114($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $26 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)1129142276
	$4 = *($1)
	$6 = *(*($3) + [4])
	$8 = *($6 + [8])
	$7 = *(($6 + [16]))
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$7), [1792])
	$8 = (int_64)
	CALL eosio_assert(((int_64)$8($8 - *($3))) > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1872])
	*($5) = $7
	*($1 + [8]) = $8
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($9 + [48]) = ($9 + [32])
	*($9 + [44]) = $9
	*($9 + [40]) = $9
	*($9 + [56]) = ($9 + [40])
	*($9 + [68]) = ($1 + [8])
	*($9 + [64]) = $1
	*($9 + [72]) = ($1 + [24])
	CALL $42(($9 + [64]), ($9 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $9, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $110([2292], $0)
}

int_32 .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1968])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1968])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1968])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [1968])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $69($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $108 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [256])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [320])
	*($0 + [32]) = $1
	$5 = *($2 + [4])
	*($0) = *(*($5))
	*(($1 = ($0 + [16]))) = (int_64)1397703940
	$4 = *($2)
	*($0 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$5 = *($5 + [4])
	*($0 + [8]) = *($5)
	*($1) = *(($5 + [8]))
	*($6 + [48]) = ($6 + [32])
	*($6 + [44]) = $6
	*($6 + [40]) = $6
	*($6 + [56]) = ($6 + [40])
	*($6 + [68]) = ($0 + [8])
	*($6 + [64]) = $0
	*($6 + [72]) = ($0 + [24])
	CALL $60(($6 + [64]), ($6 + [56]))
	$3 = *($0)
	*($0 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)6138877067229396992, *(*($2 + [8])), $3, $6, [32])
	if ( (uint_64)($3 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [80])
	return $0
}

void .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $113($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $117($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $114($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1968])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1968])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1968])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $69(CALL $70($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [1968])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [1968])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [1968])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [1968])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1968])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1968])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	$9 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $9) / (int_32)[40])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[40])
	if ( ((uint_32)$9 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($9 << [1])
	$7 = ( $6 ? $9 : ($9 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $113(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $117($0)
	
.LABEL $label$1
	*(($9 = ($6 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($9 + [8]) = *($3)
	*($9 + [16 align=4]) = (int_64)0
	*(($3 = ($9 + [24]))) = [0]
	$2 = CALL $113([16])
	*($9 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($9 + [20])) = $5
	*($9 + [28]) = [0]
	*(($5 = ($9 + [32]))) = [0]
	*(($9 + [36])) = [0]
	$2 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($1 + [32])
	$8 = (CASTING uint_64)(uint_32 $1)
	$3 = ($6 + ((int_32)$7 * (int_32)[40]))
	$1 = ($9 + [28])
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $65($1, $2)
	$7 = *($5)
	$2 = *($1)
	goto $label$6 
	
.LABEL $label$7
	$7 = [0]
	$2 = [0]
	
.LABEL $label$6
	*($10 + [4]) = $2
	*($10) = $2
	*($10 + [8]) = $7
	*($10 + [16]) = $10
	*($10 + [24]) = $4
	$5 = ($9 + [40])
	CALL $71(($10 + [24]), ($10 + [16]))
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$9 }
	$6 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$10:
	*(($9 + [-32])) = *(($2 + [-12]))
	*(($9 + [-40])) = *(($2 + [-20]))
	*(($1 = ($9 + [-24]))) = (int_64)0
	*(($4 = ($9 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($9 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($4) = *($1)
	*($1) = [0]
	*(($1 = ($9 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($4 = ($9 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($9 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($4) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$9 = ($9 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $6) != (int_32)[-20]) ){ goto $label$10 }
	$2 = *(($0 + [4]))
	$4 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$4 = $2
	
.LABEL $label$8
	*($0) = $9
	*(($0 + [4])) = $5
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$11 }
	$1 = ([0] - $4)
	$9 = ($2 + [-24])
	
.LOOP $label$12:
	$2 = *(($9 + [12]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($9 + [16])) = $2
	CALL $114($2)
	
.LABEL $label$13
	$2 = *($9)
	if ( ($2 == 0) ){ goto $label$14 }
	*(($9 + [4])) = $2
	CALL $114($2)
	
.LABEL $label$14
	$9 = ($9 + [-40])
	if ( ((int_32)($9 + $1) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $114($4)
	
.LABEL $label$15
	*([0] + [4]) = ($10 + [32])
	(unreachable)
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $63 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $114($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $114($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $114($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $114($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $114($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $114($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $114($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $114($5)
	
.LABEL $label$12
	return $0
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $64($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $65($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $66($4, $1)
	CALL $68(CALL $67(CALL $67($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $101 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [256])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [320])
	*($0 + [32]) = $1
	$5 = *($2 + [4])
	*($0) = *(*($5))
	*(($1 = ($0 + [16]))) = (int_64)1296518912
	$4 = *($2)
	*($0 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$5 = *($5 + [4])
	*($0 + [8]) = *($5)
	*($1) = *(($5 + [8]))
	*($6 + [48]) = ($6 + [32])
	*($6 + [44]) = $6
	*($6 + [40]) = $6
	*($6 + [56]) = ($6 + [40])
	*($6 + [68]) = ($0 + [8])
	*($6 + [64]) = $0
	*($6 + [72]) = ($0 + [24])
	CALL $39(($6 + [64]), ($6 + [56]))
	$3 = *($0)
	*($0 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)-6690752371242303488, *(*($2 + [8])), $3, $6, [32])
	if ( (uint_64)($3 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [80])
	return $0
}

int_32 .FUNC $100 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [256])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [320])
	*($0 + [32]) = $1
	$5 = *($2 + [4])
	*($0) = *(*($5))
	*(($1 = ($0 + [16]))) = (int_64)357963223556
	$4 = *($2)
	*($0 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$5 = *($5 + [4])
	*($0 + [8]) = *($5)
	*($1) = *(($5 + [8]))
	*($6 + [48]) = ($6 + [32])
	*($6 + [44]) = $6
	*($6 + [40]) = $6
	*($6 + [56]) = ($6 + [40])
	*($6 + [68]) = ($0 + [8])
	*($6 + [64]) = $0
	*($6 + [72]) = ($0 + [24])
	CALL $36(($6 + [64]), ($6 + [56]))
	$3 = *($0)
	*($0 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)-4991240312799100928, *(*($2 + [8])), $3, $6, [32])
	if ( (uint_64)($3 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [80])
	return $0
}

int_32 .FUNC $103 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [256])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [320])
	*($0 + [32]) = $1
	$5 = *($2 + [4])
	*($0) = *(*($5))
	*(($1 = ($0 + [16]))) = (int_64)1112819972
	$4 = *($2)
	*($0 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$5 = *($5 + [4])
	*($0 + [8]) = *($5)
	*($1) = *(($5 + [8]))
	*($6 + [48]) = ($6 + [32])
	*($6 + [44]) = $6
	*($6 + [40]) = $6
	*($6 + [56]) = ($6 + [40])
	*($6 + [68]) = ($0 + [8])
	*($6 + [64]) = $0
	*($6 + [72]) = ($0 + [24])
	CALL $45(($6 + [64]), ($6 + [56]))
	$3 = *($0)
	*($0 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)8525221919782338560, *(*($2 + [8])), $3, $6, [32])
	if ( (uint_64)($3 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [80])
	return $0
}

int_32 .FUNC $102 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [256])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [320])
	*($0 + [32]) = $1
	$5 = *($2 + [4])
	*($0) = *(*($5))
	*(($1 = ($0 + [16]))) = (int_64)1129142276
	$4 = *($2)
	*($0 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$5 = *($5 + [4])
	*($0 + [8]) = *($5)
	*($1) = *(($5 + [8]))
	*($6 + [48]) = ($6 + [32])
	*($6 + [44]) = $6
	*($6 + [40]) = $6
	*($6 + [56]) = ($6 + [40])
	*($6 + [68]) = ($0 + [8])
	*($6 + [64]) = $0
	*($6 + [72]) = ($0 + [24])
	CALL $42(($6 + [64]), ($6 + [56]))
	$3 = *($0)
	*($0 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)-1400148708988813312, *(*($2 + [8])), $3, $6, [32])
	if ( (uint_64)($3 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [80])
	return $0
}

int_32 .FUNC $105 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [256])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [320])
	*($0 + [32]) = $1
	$5 = *($2 + [4])
	*($0) = *(*($5))
	*(($1 = ($0 + [16]))) = (int_64)1213417223
	$4 = *($2)
	*($0 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$5 = *($5 + [4])
	*($0 + [8]) = *($5)
	*($1) = *(($5 + [8]))
	*($6 + [48]) = ($6 + [32])
	*($6 + [44]) = $6
	*($6 + [40]) = $6
	*($6 + [56]) = ($6 + [40])
	*($6 + [68]) = ($0 + [8])
	*($6 + [64]) = $0
	*($6 + [72]) = ($0 + [24])
	CALL $51(($6 + [64]), ($6 + [56]))
	$3 = *($0)
	*($0 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)7357663716386537472, *(*($2 + [8])), $3, $6, [32])
	if ( (uint_64)($3 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [80])
	return $0
}

int_32 .FUNC $104 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [256])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [320])
	*($0 + [32]) = $1
	$5 = *($2 + [4])
	*($0) = *(*($5))
	*(($1 = ($0 + [16]))) = (int_64)1145392134
	$4 = *($2)
	*($0 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$5 = *($5 + [4])
	*($0 + [8]) = *($5)
	*($1) = *(($5 + [8]))
	*($6 + [48]) = ($6 + [32])
	*($6 + [44]) = $6
	*($6 + [40]) = $6
	*($6 + [56]) = ($6 + [40])
	*($6 + [68]) = ($0 + [8])
	*($6 + [64]) = $0
	*($6 + [72]) = ($0 + [24])
	CALL $48(($6 + [64]), ($6 + [56]))
	$3 = *($0)
	*($0 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)-8461229974752329728, *(*($2 + [8])), $3, $6, [32])
	if ( (uint_64)($3 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [80])
	return $0
}

void .FUNC $89 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [2240])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $113([48])
	CALL $103($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [36])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $47(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $114($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $88 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)1145392134
	$4 = *($1)
	*($1 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($5)), [2128])
	$6 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [2176])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [2208])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($7 + [48]) = ($7 + [32])
	*($7 + [44]) = $7
	*($7 + [40]) = $7
	*($7 + [56]) = ($7 + [40])
	*($7 + [68]) = ($1 + [8])
	*($7 + [64]) = $1
	*($7 + [72]) = ($1 + [24])
	CALL $48(($7 + [64]), ($7 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $7, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

void .FUNC $87 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [2240])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $113([48])
	CALL $104($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [36])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $50(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $114($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $86 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)1213417223
	$4 = *($1)
	*($1 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($5)), [2128])
	$6 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [2176])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [2208])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($7 + [48]) = ($7 + [32])
	*($7 + [44]) = $7
	*($7 + [40]) = $7
	*($7 + [56]) = ($7 + [40])
	*($7 + [68]) = ($1 + [8])
	*($7 + [64]) = $1
	*($7 + [72]) = ($1 + [24])
	CALL $51(($7 + [64]), ($7 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $7, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

void .FUNC $85 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [2240])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $113([48])
	CALL $105($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [36])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $53(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $114($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $84 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)1095062532
	$4 = *($1)
	*($1 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($5)), [2128])
	$6 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [2176])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [2208])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($7 + [48]) = ($7 + [32])
	*($7 + [44]) = $7
	*($7 + [40]) = $7
	*($7 + [56]) = ($7 + [40])
	*($7 + [68]) = ($1 + [8])
	*($7 + [64]) = $1
	*($7 + [72]) = ($1 + [24])
	CALL $54(($7 + [64]), ($7 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $7, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

void .FUNC $83 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [2240])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $113([48])
	CALL $106($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [36])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $56(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $114($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $82 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)1112425732
	$4 = *($1)
	*($1 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($5)), [2128])
	$6 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [2176])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [2208])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($7 + [48]) = ($7 + [32])
	*($7 + [44]) = $7
	*($7 + [40]) = $7
	*($7 + [56]) = ($7 + [40])
	*($7 + [68]) = ($1 + [8])
	*($7 + [64]) = $1
	*($7 + [72]) = ($1 + [24])
	CALL $57(($7 + [64]), ($7 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $7, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

void .FUNC $81 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [2240])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $113([48])
	CALL $107($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [36])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $59(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $114($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $80 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)1397703940
	$4 = *($1)
	*($1 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($5)), [2128])
	$6 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [2176])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [2208])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($7 + [48]) = ($7 + [32])
	*($7 + [44]) = $7
	*($7 + [40]) = $7
	*($7 + [56]) = ($7 + [40])
	*($7 + [68]) = ($1 + [8])
	*($7 + [64]) = $1
	*($7 + [72]) = ($1 + [24])
	CALL $60(($7 + [64]), ($7 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $7, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1968])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1968])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [352])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [1968])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1968])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1968])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1968])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $72(*($1), ($0 + [32]))
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $118(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $118(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $114(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $114(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $78($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $116($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $113($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $116($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $114($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $115($7)
	return (unreachable)
}

void .FUNC $74 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $113(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $117($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $114($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $114($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [352])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [2112])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $65($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [352])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $79 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [2240])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $113([48])
	CALL $108($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [36])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $74(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $114($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $32 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)5527812
	$4 = *($1)
	$6 = *(*($3) + [4])
	$8 = *($6 + [8])
	$7 = *(($6 + [16]))
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$7), [1792])
	$8 = (int_64)
	CALL eosio_assert(((int_64)$8($8 - *($3))) > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1872])
	*($5) = $7
	*($1 + [8]) = $8
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($9 + [48]) = ($9 + [32])
	*($9 + [44]) = $9
	*($9 + [40]) = $9
	*($9 + [56]) = ($9 + [40])
	*($9 + [68]) = ($1 + [8])
	*($9 + [64]) = $1
	*($9 + [72]) = ($1 + [24])
	CALL $33(($9 + [64]), ($9 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $9, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

void .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1968])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $30 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1680])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1728])
	*(($5 = ($1 + [16]))) = (int_64)357963223556
	$4 = *($1)
	$6 = *(*($3) + [4])
	$8 = *($6 + [8])
	$7 = *(($6 + [16]))
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$7), [1792])
	$8 = (int_64)
	CALL eosio_assert(((int_64)$8($8 - *($3))) > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1872])
	*($5) = $7
	*($1 + [8]) = $8
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1904])
	*($9 + [48]) = ($9 + [32])
	*($9 + [44]) = $9
	*($9 + [40]) = $9
	*($9 + [56]) = ($9 + [40])
	*($9 + [68]) = ($1 + [8])
	*($9 + [64]) = $1
	*($9 + [72]) = ($1 + [24])
	CALL $36(($9 + [64]), ($9 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $9, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1984])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$2 = ($0 + [24])
	*(($4 = CALL $113([48])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [256])
	$3 = ($4 + [8])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [320])
	*($4 + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = $3
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + [24])
	CALL $34(($8 + [32]), ($8 + [24]))
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [32]) = $7
	$6 = *($4 + [36])
	*($8 + [4]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $35($2, ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $114($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}