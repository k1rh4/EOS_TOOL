(data (i32.const 8192) "onerror action\'s are only valid from the \"eosio\" system account\00\00\01\02\04\07\03\06\05\00")
(data (i32.const 8265) "EOS\00stoi\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 8360) "only accpet EOS\00")
(data (i32.const 8376) "chip is too little\00")
(data (i32.const 8395) "CHIP\00")
(data (i32.const 8400) "symbol must CHIP\00")
(data (i32.const 8417) "qumtity is not enough\00")
(data (i32.const 8439) "bet limit 1000~1000000 CHIP\00")
(data (i32.const 8467) "CHIP is not enough\00")
(data (i32.const 8486) "player is not on table\00")
(data (i32.const 8509) "EPC\00")
(data (i32.const 8513) "EOS\e7\99\be\e5\ae\b6\e4\b9\90\e6\8c\96\e7\9f\bf\e5\a5\96\e5\8a\b1,https://game.eospokers.com/bjl\00")
(data (i32.const 8569) "EOS\e7\99\be\e5\ae\b6\e4\b9\90\e5\8f\8d\e5\88\a9\e5\a5\96\e5\8a\b1,https://game.eospokers.com/bjl\00")
(data (i32.const 8626) "##########\n\00")
(data (i32.const 8638) "\n\00")
(data (i32.const 8640) "symbol is wrong\00")
(data (i32.const 8656) "ok\00")
(data (i32.const 8659) "string is too long to be a valid symbol_code\00")
(data (i32.const 8704) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 8757) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 8816) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 8865) "invalid symbol name\00")
(data (i32.const 8885) "attempt to add asset with different symbol\00")
(data (i32.const 8928) "addition underflow\00")
(data (i32.const 8947) "addition overflow\00: no conversion\00")
(data (i32.const 8981) "write\00")
(data (i32.const 8987) "string is too long to be a valid name\00")
(data (i32.const 9025) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 9092) "character is not in allowed character set for names\00")
(data (i32.const 9144) "read\00")
(data (i32.const 9149) "get\00")
(data (i32.const 9153) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 9204) "error reading iterator\00")
(data (i32.const 9227) "cannot create objects in table of another contract\00")
(data (i32.const 9278) "cannot pass end iterator to modify\00")
(data (i32.const 9313) "object passed to modify is not in multi_index\00")
(data (i32.const 9359) "cannot modify objects in table of another contract\00")
(data (i32.const 9410) "updater cannot change primary key when modifying an object\00")
(data (i32.const 9469) "attempt to subtract asset with different symbol\00")
(data (i32.const 9517) "subtraction underflow\00")
(data (i32.const 9539) "subtraction overflow\00")
(data (i32.const 9560) "object passed to erase is not in multi_index\00")
(data (i32.const 9605) "cannot erase objects in table of another contract\00")
(data (i32.const 9655) "attempt to remove object that was not in multi_index\00")
(data (i32.const 9708) "no enough chip\00")
(data (i32.const 9728) "ffffff\ee?\00\00\00\00\00\00\f0?\00\00\00\00\00\00 @\00\00\00\00\00\00&@\00\00\00\00\00\00&@")
(data (i32.const 18184) ": out of range\00")
(data (i32.const 18208) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(import "env" "eosio_assert" (func $fimport$0 (param i32 i32)))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "read_action_data" (func $fimport$2 (param i32 i32) (result i32)))
(import "env" "db_find_i64" (func $fimport$3 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$4 (result i64)))
(import "env" "require_auth" (func $fimport$5 (param i64)))
(import "env" "memcpy" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "db_next_i64" (func $fimport$7 (param i32 i32) (result i32)))
(import "env" "prints" (func $fimport$8 (param i32)))
(import "env" "printi" (func $fimport$9 (param i64)))
(import "env" "db_store_i64" (func $fimport$10 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$11 (param i32 i32)))
(import "env" "abort" (func $fimport$12))
(import "env" "db_get_i64" (func $fimport$13 (param i32 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$14 (param i32 i64 i32 i32)))
(import "env" "db_remove_i64" (func $fimport$15 (param i32)))
(import "env" "memmove" (func $fimport$16 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$17 (param i32 i32 i32) (result i32)))
(import "env" "prints_l" (func $fimport$18 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$19 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$20 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$21 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$22 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$23 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$24 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$25 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$26 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$27 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$28 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$29 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$30 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$31 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$32 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$33 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$34 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$35 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$36 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$37 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $1))
(export "_ZdlPv" (func $102))
(export "_Znwj" (func $100))
(export "_Znaj" (func $101))
(export "_ZdaPv" (func $103))
(export "_ZnwjSt11align_val_t" (func $104))
(export "_ZnajSt11align_val_t" (func $105))
(export "_ZdlPvSt11align_val_t" (func $106))
(export "_ZdaPvSt11align_val_t" (func $107))
(table $0 13 13 anyfunc)
(elem (i32.const 1) $2 $4 $6 $8 $10 $12 $13 $15 $16 $18 $20 $21)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 18465))
(global $global$2 i32 (i32.const 18465))


void .FUNC $98 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	if ( (*($0 + [8]) == 0) ){ goto $label$3 }
	$3 = *($0)
	$4 = ($0 + [4])
	*($0) = $4
	$5 = *($0 + [4])
	*($0 + [4]) = [0]
	*(($6 = ($0 + [8]))) = [0]
	*($5 + [8]) = [0]
	$5 = *($3 + [4])
	$3 = ( $5 ? $3 : $5 )
	if ( ($3 == 0) ){ goto $label$3 }
	$7 = ($0 + [4])
	
.LOOP $label$4:
	$8 = $3
	$9 = $1
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$2 }
	$10 = *($9 + [16])
	*($8 + [16]) = $10
	*(($8 + [32])) = *(($9 + [32]))
	*(($8 + [24])) = *($9 + [24])
	$3 = *($8 + [8])
	if ( ($3 == 0) ){ goto $label$10 }
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$9 }
	*($3 + [4]) = [0]
	if ( ($1 == 0) ){ goto $label$8 }
	
.LOOP $label$11:
	$3 = $1
	$1 = *($3)
	if ( $1 ){ goto $label$11 }
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$11 }
	goto $label$8 
	
.LABEL $label$10
	$3 = [0]
	$1 = *($4)
	if ( $1 ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$9
	*($3) = [0]
	
.LOOP $label$12:
	$1 = *($3 + [4])
	if ( ($1 == 0) ){ goto $label$8 }
	
.LOOP $label$13:
	$3 = $1
	$1 = *($3)
	if ( $1 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$8
	$1 = *($4)
	if ( $1 ){ goto $label$6 }
	
.LABEL $label$7
	$1 = $4
	$5 = $4
	goto $label$5 
	
.LABEL $label$6
	
.LOOP $label$16:
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$18 }
	$5 = *($1)
	if ( $5 ){ goto $label$17 }
	goto $label$14 
	
.LABEL $label$18
	$5 = *($1 + [4])
	if ( ($5 == 0) ){ goto $label$15 }
	
.LABEL $label$17
	$1 = $5
	goto $label$16 
	
.LABEL $label$15
	$5 = ($1 + [4])
	goto $label$5 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$5
	*($8) = (int_64)0
	*(($8 + [8])) = $1
	*($5) = $8
	$1 = *(*($0))
	if ( ($1 == 0) ){ goto $label$19 }
	*($0) = $1
	$8 = *($5)
	
.LABEL $label$19
	CALL $52(*($7), $8)
	*($6) = (*($6) + [1])
	$5 = *($9 + [4])
	if ( ($5 == 0) ){ goto $label$21 }
	
.LOOP $label$22:
	$1 = $5
	$5 = *($1)
	if ( $5 ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$1 = *($9 + [8])
	if ( ((int_32)*($1) == (int_32)$9) ){ goto $label$20 }
	$8 = ($9 + [8])
	
.LOOP $label$23:
	$5 = *($8)
	$8 = ($5 + [8])
	$1 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($1)) ){ goto $label$23 }
	
.LABEL $label$20
	if ( $3 ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$6 = ($0 + [4])
	$9 = ($0 + [8])
	
.LOOP $label$24:
	$8 = $1
	*((($5 = CALL _Znwj([40])) + [32])) = *(($8 + [32]))
	*(($5 + [24])) = *(($8 + [24]))
	*($5 + [16]) = *($8 + [16])
	$1 = *($6)
	if ( ($1 == 0) ){ goto $label$29 }
	$10 = *(($5 + [16]))
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$29
	$1 = $6
	$3 = $6
	goto $label$26 
	
.LABEL $label$28
	$11 = [2]
	goto $label$25 
	
.LABEL $label$27
	$11 = [0]
	goto $label$25 
	
.LABEL $label$26
	$11 = [4]
	
.LABEL $label$25
	
.LOOP $label$30:
	goto $label$52 
	
.LABEL $label$54
	$1 = $3
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$41 }
	$11 = [2]
	goto $label$30 
	
.LABEL $label$53
	$3 = *($1)
	if ( $3 ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$52
	$3 = *($1 + [4])
	if ( $3 ){ goto $label$40 }
	$11 = [12]
	goto $label$30 
	
.LABEL $label$51
	$3 = ($1 + [4])
	goto $label$37 
	
.LABEL $label$50
	$3 = $1
	$11 = [4]
	goto $label$30 
	
.LABEL $label$49
	*($5 + [8]) = $1
	*($5) = (int_64)0
	*($3) = $5
	$1 = *(*($0))
	if ( ($1 == 0) ){ goto $label$36 }
	$11 = [5]
	goto $label$30 
	
.LABEL $label$48
	*($0) = $1
	$5 = *($3)
	$11 = [6]
	goto $label$30 
	
.LABEL $label$47
	CALL $52(*(($0 + [4])), $5)
	*($9) = (*($9) + [1])
	$3 = *($8 + [4])
	if ( ($3 == 0) ){ goto $label$33 }
	$11 = [7]
	goto $label$30 
	
.LABEL $label$46
	$1 = $3
	$3 = *($1)
	if ( $3 ){ goto $label$34 }
	goto $label$35 
	
.LABEL $label$45
	$1 = *($8 + [8])
	if ( ((int_32)*($1) == (int_32)$8) ){ goto $label$32 }
	$11 = [10]
	goto $label$30 
	
.LABEL $label$44
	$5 = ($8 + [8])
	$11 = [11]
	goto $label$30 
	
.LABEL $label$43
	$3 = *($5)
	$5 = ($3 + [8])
	$1 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($1)) ){ goto $label$31 }
	$11 = [8]
	goto $label$30 
	
.LABEL $label$42
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$24 }
	goto $label$1 
	
.LABEL $label$41
	$11 = [0]
	goto $label$30 
	
.LABEL $label$40
	$11 = [1]
	goto $label$30 
	
.LABEL $label$39
	$11 = [3]
	goto $label$30 
	
.LABEL $label$38
	$11 = [1]
	goto $label$30 
	
.LABEL $label$37
	$11 = [4]
	goto $label$30 
	
.LABEL $label$36
	$11 = [6]
	goto $label$30 
	
.LABEL $label$35
	$11 = [8]
	goto $label$30 
	
.LABEL $label$34
	$11 = [7]
	goto $label$30 
	
.LABEL $label$33
	$11 = [9]
	goto $label$30 
	
.LABEL $label$32
	$11 = [8]
	goto $label$30 
	
.LABEL $label$31
	$11 = [11]
	goto $label$30 
	
.LABEL $label$2
	
.LOOP $label$56:
	$1 = *($8 + [8])
	if ( ($1 == 0) ){ goto $label$55 }
	$8 = $1
	goto $label$56 
	
.LABEL $label$55
	CALL $36($0, $8)
	return 
	
.LABEL $label$1
	$11
}

void .FUNC $99 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $120($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8981])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [8981])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = $1
	$3 = *($1)
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = *($1 + [4])
	if ( ($4 == 0) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = $4
	$4 = *($2)
	if ( $4 ){ goto $label$5 }
	
.LABEL $label$4
	$3 = *($2 + [4])
	if ( $3 ){ goto $label$2 }
	$5 = ($2 + [8])
	$6 = [0]
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = $1
	
.LABEL $label$2
	*($3 + [8]) = *($2 + [8])
	$5 = ($2 + [8])
	$6 = [1]
	
.LABEL $label$1
	$7 = *(($2 + [8]))
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	*($7 + [4]) = $3
	$7 = *($2 + [12])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	*($7) = $3
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$11 }
	$4 = *($7 + [4])
	$7 = *($2 + [12])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$4 = [0]
	$0 = $3
	$7 = *($2 + [12])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$8 }
	
.LABEL $label$9
	$8 = *($1 + [8])
	*($5) = $8
	*(($8 + ( [0] ? [4] : ((int_32)*(*($1 + [8])) == (int_32)$1) ))) = $2
	*(($5 = *($1)) + [8]) = $2
	*($2) = $5
	$5 = *($1 + [4])
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*(($2 + [12])) = *($1 + [12])
	$0 = ( $2 ? $0 : ((int_32)$0 == (int_32)$1) )
	if ( ($7 & [255]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( (($7 & [255]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ($0 == 0) ){ goto $label$6 }
	if ( ($6 == 0) ){ goto $label$13 }
	*($3 + [12]) = [1]
	return 
	
.LABEL $label$13
	
.LOOP $label$21:
	$1 = *($4 + [12])
	$2 = *($4 + [8])
	if ( ((int_32)*($2) == (int_32)$4) ){ goto $label$33 }
	if ( (($1 & [255]) == 0) ){ goto $label$32 }
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$33
	if ( (($1 & [255]) == 0) ){ goto $label$31 }
	$1 = $4
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$32
	*(($4 + [12])) = [1]
	*($2 + [12]) = [0]
	$1 = *($2 + [4])
	$3 = *($1)
	*($2 + [4]) = $3
	if ( ($3 == 0) ){ goto $label$34 }
	*($3 + [8]) = $2
	
.LABEL $label$34
	*($1 + [8]) = *($2 + [8])
	*((($3 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($3) == (int_32)$2) ))) = $1
	*($1) = $2
	*($2 + [8]) = $1
	$2 = *($4)
	$0 = ( $4 ? $0 : ((int_32)$0 == (int_32)$2) )
	$4 = *($2 + [4])
	$2 = *($4)
	if ( $2 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$31
	*(($4 + [12])) = [1]
	$1 = *($4 + [4])
	*($2) = $1
	*($2 + [12]) = [0]
	if ( ($1 == 0) ){ goto $label$35 }
	*($1 + [8]) = $2
	
.LABEL $label$35
	*(($4 + [8])) = *($2 + [8])
	$3 = *($2 + [8])
	if ( ((int_32)*($3) == (int_32)$2) ){ goto $label$37 }
	*($3 + [4]) = $4
	goto $label$36 
	
.LABEL $label$37
	*($3) = $4
	$1 = *($2)
	
.LABEL $label$36
	*(($2 + [8])) = $4
	*(($4 + [4])) = $2
	$0 = ( $4 ? $0 : ((int_32)$0 == (int_32)$2) )
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$29 }
	
.LABEL $label$30
	if ( (*($2 + [12]) == 0) ){ goto $label$28 }
	
.LABEL $label$29
	$4 = *($1 + [4])
	if ( ($4 == 0) ){ goto $label$38 }
	if ( (*($4 + [12]) == 0) ){ goto $label$27 }
	
.LABEL $label$38
	*($1 + [12]) = [0]
	$4 = *($1 + [8])
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$39 }
	if ( (*($4 + [12]) & [255]) ){ goto $label$22 }
	
.LABEL $label$39
	*($4 + [12]) = [1]
	return 
	
.LABEL $label$28
	$3 = ($2 + [12])
	goto $label$26 
	
.LABEL $label$27
	if ( ($2 == 0) ){ goto $label$41 }
	if ( (*($2 + [12]) == 0) ){ goto $label$40 }
	$4 = *($1 + [4])
	
.LABEL $label$41
	*($4 + [12]) = [1]
	*($1 + [12]) = [0]
	$2 = *($4)
	*(($1 + [4])) = $2
	if ( ($2 == 0) ){ goto $label$42 }
	*($2 + [8]) = $1
	
.LABEL $label$42
	$3 = ($1 + [12])
	$2 = ($4 + [12])
	*($4 + [8]) = *($1 + [8])
	*((($0 = *($1 + [8])) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$1) ))) = $4
	*($1 + [8]) = $4
	*($4) = $1
	$4 = ($4 + [8])
	goto $label$25 
	
.LABEL $label$40
	$3 = ($2 + [12])
	
.LABEL $label$26
	$2 = ($1 + [12])
	$4 = ($1 + [8])
	
.LABEL $label$25
	$4 = *($4)
	*($2) = *($4 + [12])
	*($4 + [12]) = [1]
	$2 = *($4)
	$0 = *($2 + [4])
	*($4) = $0
	*($3) = [1]
	if ( ($0 == 0) ){ goto $label$43 }
	*($0 + [8]) = $4
	
.LABEL $label$43
	*($2 + [8]) = *($4 + [8])
	*((($0 = *($4 + [8])) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$4) ))) = $2
	*($4 + [8]) = $2
	*(($2 + [4])) = $4
	return 
	
.LABEL $label$24
	if ( (*($2 + [12]) == 0) ){ goto $label$18 }
	
.LABEL $label$23
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$44 }
	if ( (*($1 + [12]) == 0) ){ goto $label$17 }
	
.LABEL $label$44
	*($4 + [12]) = [0]
	$4 = *($4 + [8])
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$20 }
	if ( (*($4 + [12]) == 0) ){ goto $label$19 }
	
.LABEL $label$22
	$2 = *($4 + [8])
	$4 = *(($2 + (((int_32)*($2) == (int_32)$4) << [2])))
	goto $label$21 
	
.LABEL $label$20
	$4 = $0
	
.LABEL $label$19
	*($4 + [12]) = [1]
	return 
	
.LABEL $label$18
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	if ( (*($1 + [12]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	*($2 + [12]) = [1]
	*($4 + [12]) = [0]
	$0 = *($2 + [4])
	*($4) = $0
	if ( ($0 == 0) ){ goto $label$45 }
	*($0 + [8]) = $4
	
.LABEL $label$45
	$1 = ($4 + [12])
	$0 = ($2 + [12])
	*($2 + [8]) = *($4 + [8])
	*((($3 = *($4 + [8])) + ( [0] ? [4] : ((int_32)*($3) == (int_32)$4) ))) = $2
	*($4 + [8]) = $2
	*(($2 + [4])) = $4
	$4 = ($2 + [8])
	goto $label$14 
	
.LABEL $label$15
	$1 = ($1 + [12])
	$0 = ($4 + [12])
	$4 = ($4 + [8])
	
.LABEL $label$14
	$4 = *($4)
	*($0) = *($4 + [12])
	*($4 + [12]) = [1]
	$2 = *($4 + [4])
	$0 = *($2)
	*($4 + [4]) = $0
	*($1) = [1]
	if ( ($0 == 0) ){ goto $label$46 }
	*($0 + [8]) = $4
	
.LABEL $label$46
	*($2 + [8]) = *($4 + [8])
	*((($0 = *($4 + [8])) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$4) ))) = $2
	*($4 + [8]) = $2
	*($2) = $4
	return 
	
.LABEL $label$6
}

int_32 .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8981])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$5 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [8981])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [1])
	$4 = (*($7) + [1])
	*($7) = $4
	$6 = ($6 + [1])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $97 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = ($2 - $1)
	if ( ((uint_32)$3 <= (uint_32)($4 - $5)) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL _ZdlPv($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$2 = [2147483647]
	if ( ((uint_32)$4 > (uint_32)[1073741822]) ){ goto $label$6 }
	$5 = ($4 << [1])
	$2 = ( $3 ? $5 : ($5 <= $3) )
	
.LABEL $label$6
	$5 = CALL _Znwj($2)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $2)
	CALL memcpy($5, $1, $3)
	$1 = ($0 + [4])
	$0 = (*($0 + [4]) + $3)
	goto $label$3 
	
.LABEL $label$4
	$4 = (*($0 + [4]) - $5)
	$6 = ( ($1 + $4) ? $2 : ((uint_32)$3 > (uint_32)$4) )
	$7 = ($6 - $1)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $7)
	
.LABEL $label$7
	$1 = ($0 + [4])
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$8 }
	$0 = ($2 - $6)
	if ( ((int_32)$0 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy(*($1), $6, $0)
	$0 = (*($1) + $0)
	goto $label$3 
	
.LABEL $label$8
	$0 = ($5 + $7)
	
.LABEL $label$3
	*($1) = $0
	
.LABEL $label$2
	return (unreachable)
	
.LABEL $label$1
	CALL $120($0)
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *($1 + [8])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8981])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$9 = ($1 + [4])
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$3 }
	$1 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$4:
	$8 = $7
	$6 = ($8 + [16])
	if ( ((int_32)(*($1) - $3) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8981])
	$3 = *($5)
	
.LABEL $label$5
	CALL memcpy($3, $6, [8])
	$6 = (*($5) + [8])
	*($5) = $6
	$7 = ($8 + [24])
	if ( ((int_32)(*($1) - $6) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [8981])
	$6 = *($5)
	
.LABEL $label$6
	CALL memcpy($6, $7, [8])
	$6 = (*($5) + [8])
	*($5) = $6
	*($2) = *($8 + [32])
	if ( ((int_32)(*($1) - $6) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [8981])
	$6 = *($5)
	
.LABEL $label$7
	CALL memcpy($6, $2, [8])
	$3 = (*($5) + [8])
	*($5) = $3
	$6 = *($8 + [4])
	if ( ($6 == 0) ){ goto $label$9 }
	
.LOOP $label$10:
	$7 = $6
	$6 = *($7)
	if ( $6 ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$7 = *($8 + [8])
	if ( ((int_32)*($7) == (int_32)$8) ){ goto $label$8 }
	$8 = ($8 + [8])
	
.LOOP $label$11:
	$6 = *($8)
	$8 = ($6 + [8])
	$7 = *($6 + [8])
	if ( ((int_32)$6 != (int_32)*($7)) ){ goto $label$11 }
	
.LABEL $label$8
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8981])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[0]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[0]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [8981])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [1])
	*($7) = (*($7) + [1])
	CALL $90($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

int_32 .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	*(($2 = ($0 + [8]))) = (int_64)0
	*($0 + [4]) = $2
	*($0) = *($1)
	$4 = ($1 + [8])
	$3 = *($1 + [4])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	$5 = [0]
	$6 = ($0 + [12])
	$7 = ($3 + [16])
	if ( ((int_32)$2 != (int_32)$2) ){ goto $label$3 }
	$9 = [28]
	goto $label$1 
	
.LABEL $label$3
	$9 = [3]
	goto $label$1 
	
.LABEL $label$2
	$9 = [29]
	
.LABEL $label$1
	
.LOOP $label$4:
	goto $label$38 
	
.LABEL $label$65
	$5 = *(($0 + [8]))
	$3 = $8
	$7 = ($3 + [16])
	if ( ((int_32)*(($0 + [4])) == (int_32)$2) ){ goto $label$35 }
	$9 = [3]
	goto $label$4 
	
.LABEL $label$64
	$8 = $5
	$10 = $2
	if ( ($5 == 0) ){ goto $label$18 }
	$9 = [4]
	goto $label$4 
	
.LABEL $label$63
	$1 = $8
	$8 = *($1 + [4])
	if ( $8 ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$62
	$1 = *($10 + [8])
	$8 = ((int_32)*($1) == (int_32)$10)
	$10 = $1
	if ( $8 ){ goto $label$17 }
	$9 = [5]
	goto $label$4 
	
.LABEL $label$61
	$11 = *($7)
	if ( (uint_64)(*($1 + [16]) <= $11) ){ goto $label$34 }
	$9 = [6]
	goto $label$4 
	
.LABEL $label$60
	if ( ($5 == 0) ){ goto $label$16 }
	$9 = [7]
	goto $label$4 
	
.LABEL $label$59
	$8 = $2
	$12 = *($5 + [16])
	if ( ((uint_64)$11 >= (uint_64)$12) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$58
	$8 = $5
	$5 = $1
	$12 = *($5 + [16])
	if ( ((uint_64)$11 >= (uint_64)$12) ){ goto $label$31 }
	$9 = [20]
	goto $label$4 
	
.LABEL $label$57
	$1 = *($5)
	if ( $1 ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$56
	if ( ((uint_64)$12 >= (uint_64)$11) ){ goto $label$13 }
	$9 = [17]
	goto $label$4 
	
.LABEL $label$55
	$8 = ($5 + [4])
	$1 = *($5 + [4])
	if ( ($1 == 0) ){ goto $label$8 }
	$9 = [18]
	goto $label$4 
	
.LABEL $label$54
	$5 = $8
	goto $label$30 
	
.LABEL $label$53
	$1 = $2
	$9 = [24]
	goto $label$4 
	
.LABEL $label$52
	if ( ($5 == 0) ){ goto $label$5 }
	$9 = [25]
	goto $label$4 
	
.LABEL $label$51
	$5 = ($1 + [4])
	if ( (*($5) == 0) ){ goto $label$10 }
	$9 = [10]
	goto $label$4 
	
.LABEL $label$50
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$27 }
	$9 = [11]
	goto $label$4 
	
.LABEL $label$49
	$8 = *($3 + [8])
	if ( ((int_32)*($8) == (int_32)$3) ){ goto $label$24 }
	$9 = [12]
	goto $label$4 
	
.LABEL $label$48
	$10 = ($3 + [8])
	$9 = [13]
	goto $label$4 
	
.LABEL $label$47
	$1 = *($10)
	$10 = ($1 + [8])
	$8 = *($1 + [8])
	if ( ((int_32)$1 != (int_32)*($8)) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$46
	$1 = $2
	$5 = $2
	if ( *($5) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$45
	$5 = $2
	$1 = $2
	goto $label$33 
	
.LABEL $label$44
	$1 = $5
	goto $label$32 
	
.LABEL $label$43
	$1 = $5
	$5 = $8
	if ( *($5) ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$42
	$1 = $5
	$5 = $8
	$9 = [14]
	goto $label$4 
	
.LABEL $label$41
	*((($8 = CALL _Znwj([40])) + [32])) = *(($7 + [16]))
	*(($8 + [24])) = *(($7 + [8]))
	*($8 + [16]) = *($7)
	*($8) = (int_64)0
	*($8 + [8]) = $1
	*($5) = $8
	$1 = ($0 + [4])
	$10 = *(*($1))
	if ( ($10 == 0) ){ goto $label$9 }
	$9 = [15]
	goto $label$4 
	
.LABEL $label$40
	*($1) = $10
	$8 = *($5)
	$9 = [16]
	goto $label$4 
	
.LABEL $label$39
	CALL $52(*(($0 + [8])), $8)
	*($6) = (*($6) + [1])
	$1 = *($3 + [4])
	if ( ($1 == 0) ){ goto $label$25 }
	$9 = [0]
	goto $label$4 
	
.LABEL $label$38
	$8 = $1
	$1 = *($8)
	if ( $1 ){ goto $label$26 }
	$9 = [1]
	goto $label$4 
	
.LABEL $label$37
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$21 }
	$9 = [29]
	goto $label$4 
	
.LABEL $label$36
	return $0
	
.LABEL $label$35
	$9 = [28]
	goto $label$4 
	
.LABEL $label$34
	$9 = [24]
	goto $label$4 
	
.LABEL $label$33
	$9 = [14]
	goto $label$4 
	
.LABEL $label$32
	$9 = [14]
	goto $label$4 
	
.LABEL $label$31
	$9 = [8]
	goto $label$4 
	
.LABEL $label$30
	$9 = [19]
	goto $label$4 
	
.LABEL $label$29
	$9 = [14]
	goto $label$4 
	
.LABEL $label$28
	$9 = [10]
	goto $label$4 
	
.LABEL $label$27
	$9 = [0]
	goto $label$4 
	
.LABEL $label$26
	$9 = [0]
	goto $label$4 
	
.LABEL $label$25
	$9 = [11]
	goto $label$4 
	
.LABEL $label$24
	$9 = [1]
	goto $label$4 
	
.LABEL $label$23
	$9 = [1]
	goto $label$4 
	
.LABEL $label$22
	$9 = [13]
	goto $label$4 
	
.LABEL $label$21
	$9 = [2]
	goto $label$4 
	
.LABEL $label$20
	$9 = [5]
	goto $label$4 
	
.LABEL $label$19
	$9 = [4]
	goto $label$4 
	
.LABEL $label$18
	$9 = [27]
	goto $label$4 
	
.LABEL $label$17
	$9 = [27]
	goto $label$4 
	
.LABEL $label$16
	$9 = [23]
	goto $label$4 
	
.LABEL $label$15
	$9 = [20]
	goto $label$4 
	
.LABEL $label$14
	$9 = [8]
	goto $label$4 
	
.LABEL $label$13
	$9 = [9]
	goto $label$4 
	
.LABEL $label$12
	$9 = [14]
	goto $label$4 
	
.LABEL $label$11
	$9 = [10]
	goto $label$4 
	
.LABEL $label$10
	$9 = [14]
	goto $label$4 
	
.LABEL $label$9
	$9 = [16]
	goto $label$4 
	
.LABEL $label$8
	$9 = [22]
	goto $label$4 
	
.LABEL $label$7
	$9 = [21]
	goto $label$4 
	
.LABEL $label$6
	$9 = [19]
	goto $label$4 
	
.LABEL $label$5
	$9 = [26]
	goto $label$4 
	return $9
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$2 = *($0)
	$3 = int_32((*($0 + [4]) - $2) >> [4])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$3 }
	$5 = [268435455]
	$2 = (*($0 + [8]) - $2)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$5 }
	$5 = int_32($2 >> [3])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$5
	$6 = CALL _Znwj(($5 << [4]))
	goto $label$1 
	
.LABEL $label$4
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $120($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$7 = ($6 + ($5 << [4]))
	$8 = ($6 + ($3 << [4]))
	$5 = CALL $92($8, $1)
	$9 = ($5 + [16])
	$1 = *($0)
	$2 = ($0 + [4])
	$10 = *($2)
	if ( ((int_32)$10 == (int_32)$1) ){ goto $label$8 }
	$11 = (($3 + [-1]) - uint_32((($10 + [-16]) - $1) >> [4]))
	$12 = ($1 - $10)
	$5 = [0]
	
.LOOP $label$10:
	$3 = ($10 + $5)
	*((($1 = ($8 + $5)) + [-16])) = *(($3 + [-16]))
	$14 = ($3 + [-12])
	*(($13 = ($1 + [-12]))) = *($14)
	$2 = ($3 + [-8])
	$15 = *($2)
	*(($4 = ($1 + [-8]))) = $15
	$3 = ($3 + [-4])
	$1 = *($3)
	*(($1 + [-4])) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($15 + [8]) = $4
	*($3) = [0]
	*($2) = [0]
	*($14) = $2
	$5 = ($5 + [-16])
	if ( ((int_32)$12 != (int_32)$5) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	*($13) = $4
	$5 = ($5 + [-16])
	if ( ((int_32)$12 != (int_32)$5) ){ goto $label$10 }
	
.LABEL $label$9
	*(($0 + [8])) = $7
	$1 = *($0)
	*($0) = ($6 + ($11 << [4]))
	$3 = ($0 + [4])
	$5 = *($3)
	*($3) = $9
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$12 }
	
.LOOP $label$13:
	CALL $36(($5 + [-12]), *(($5 + [-8])))
	$5 = ($5 + [-16])
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($1 == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	*($0) = $5
	*($2) = $9
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv($1)
	
.LABEL $label$6
	(unreachable)
	(unreachable)
}

int_32 .FUNC $123 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

void .FUNC $115 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $117($1, $0, [18184])
	CALL $118()
	(unreachable)
}

void .FUNC $122 (int_32 $0)
{
}

int_32 .FUNC $130 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $131 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $121())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $132($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $133($1)
	
.LABEL $label$2
	*(CALL $121()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $133(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $136($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $133 (int_32 $0)
{
	return CALL $134([9788], $0)
}

int_32 .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $135($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)*(($1 + [8200])) == (int_32)*($9)) ){ goto $label$10 }
	CALL eosio_assert([0], [8274])
	
.LABEL $label$10
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$11:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$12 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$13 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$14 }
	
.LABEL $label$13
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$15 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$15
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$12
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$11 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $121 ()
{
	return [9772]
}

void .FUNC $136 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [18172])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [17980]
	$3 = (((int_32)$1 * (int_32)[12]) + [17980])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

void .FUNC $120 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $38 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9313])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9359])
	
.LABEL $label$2
	$6 = *($1)
	$7 = ($1 + [12])
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$13 }
	$9 = *(*($3))
	$10 = $7
	
.LOOP $label$14:
	$11 = (uint_64)(*($8 + [16]) <= $9)
	$10 = ( $10 ? $8 : $11 )
	$8 = *(($8 + ($11 << [2])))
	if ( $8 ){ goto $label$14 }
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$12 }
	if ( (uint_64)($9 <= *($10 + [16])) ){ goto $label$11 }
	$11 = *($3 + [4])
	if ( ((int_64)*($11 + [8]) == (int_64)*($10 + [32])) ){ goto $label$15 }
	CALL eosio_assert([0], [9469])
	
.LABEL $label$15
	$9 = (int_64)
	*(($8 = ($10 + [24]))) = $9(*($8) - *($11)))
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$16 }
	CALL eosio_assert([0], [9517])
	$9 = *($8)
	
.LABEL $label$16
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$17 }
	CALL eosio_assert([0], [9539])
	
.LABEL $label$17
	$7 = *($3 + [8])
	$8 = *(($1 + [24]))
	$10 = *($1 + [20])
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$23 }
	$11 = (*($7) & [255])
	
.LOOP $label$24:
	if ( ((int_32)$11 == (int_32)*($10)) ){ goto $label$23 }
	$10 = ($10 + [16])
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$22 }
	$9 = *(*($3))
	$12 = ($10 + [8])
	$8 = *($12)
	if ( ($8 == 0) ){ goto $label$25 }
	$11 = $12
	
.LOOP $label$26:
	$7 = (uint_64)(*($8 + [16]) <= $9)
	$11 = ( $11 ? $8 : $7 )
	$8 = *(($8 + ($7 << [2])))
	if ( $8 ){ goto $label$26 }
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$25 }
	if ( ((uint_64)$9 >= (uint_64)*($11 + [16])) ){ goto $label$20 }
	
.LABEL $label$25
	$8 = *(($3 + [4]))
	*((($5 + [24]) + [8])) = *(($8 + [8]))
	*($5 + [24]) = *($8)
	$8 = *($12)
	if ( ($8 == 0) ){ goto $label$21 }
	$12 = ($10 + [8])
	$13 = *($8 + [16])
	if ( ((uint_64)$9 >= (uint_64)$13) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$22
	*(($10 = (($5 + [24]) + [8]))) = (int_64)0
	*($5 + [28]) = $10
	*($5 + [24]) = *($7)
	$8 = *(($3 + [4]))
	*(($11 = (($5 + [8]) + [8]))) = *(($8 + [8]))
	*($5 + [8]) = *($8)
	$9 = *(*($3))
	*(($8 = CALL _Znwj([40]))) = (int_64)0
	*($10) = $8
	*($8 + [24]) = *($5 + [8])
	*(($8 + [32])) = *($11)
	*($8 + [16]) = $9
	*($8 + [8]) = $10
	$10 = *(*($5 + [28]))
	if ( ($10 == 0) ){ goto $label$27 }
	*($5 + [28]) = $10
	
.LABEL $label$27
	CALL $52($8, $8)
	*(($8 = ($5 + [36]))) = (*($8) + [1])
	$8 = ($1 + [24])
	$10 = *($8)
	if ( ((int_32)$10 == (int_32)*(($1 + [28]))) ){ goto $label$29 }
	CALL $92($10, ($5 + [24]))
	*($8) = (*($8) + [16])
	goto $label$28 
	
.LABEL $label$29
	CALL $93(($1 + [20]), ($5 + [24]))
	
.LABEL $label$28
	CALL $36((($5 + [24]) | [4]), *(($5 + [32])))
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$21
	$8 = $12
	if ( *($12) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$20
	$10 = *(($3 + [4]))
	if ( ((int_64)*($10 + [8]) == (int_64)*($11 + [32])) ){ goto $label$30 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$30
	$9 = ((int_64)*($8) + (int_64)*($10))
	*(($8 = ($11 + [24]))) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$31 }
	CALL eosio_assert([0], [8928])
	$9 = *($8)
	
.LABEL $label$31
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [8947])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$19
	$14 = [20]
	goto $label$3 
	
.LABEL $label$18
	$14 = [2]
	goto $label$3 
	
.LABEL $label$13
	$14 = [4]
	goto $label$3 
	
.LABEL $label$12
	$14 = [4]
	goto $label$3 
	
.LABEL $label$11
	$14 = [4]
	goto $label$3 
	
.LABEL $label$10
	$14 = [4]
	goto $label$3 
	
.LABEL $label$9
	$14 = [16]
	goto $label$3 
	
.LABEL $label$8
	$14 = [4]
	goto $label$3 
	
.LABEL $label$7
	$14 = [6]
	goto $label$3 
	
.LABEL $label$6
	$14 = [5]
	goto $label$3 
	
.LABEL $label$5
	$14 = [6]
	goto $label$3 
	
.LABEL $label$4
	$14 = [5]
	
.LABEL $label$3
	
.LOOP $label$32:
	goto $label$65 
	
.LABEL $label$69
	$12 = $8
	$8 = $11
	$13 = *($8 + [16])
	if ( ((uint_64)$9 >= (uint_64)$13) ){ goto $label$47 }
	$14 = [20]
	goto $label$32 
	
.LABEL $label$68
	$11 = *($8)
	if ( $11 ){ goto $label$43 }
	goto $label$44 
	
.LABEL $label$67
	if ( ((uint_64)$13 >= (uint_64)$9) ){ goto $label$42 }
	$14 = [19]
	goto $label$32 
	
.LABEL $label$66
	$12 = ($8 + [4])
	$11 = *($8 + [4])
	if ( ($11 == 0) ){ goto $label$45 }
	$14 = [0]
	goto $label$32 
	
.LABEL $label$65
	$8 = $12
	goto $label$46 
	
.LABEL $label$64
	$12 = $8
	$14 = [3]
	goto $label$32 
	
.LABEL $label$63
	if ( *($12) ){ goto $label$41 }
	$14 = [16]
	goto $label$32 
	
.LABEL $label$62
	*(($11 = CALL _Znwj([40]))) = (int_64)0
	*($11 + [8]) = $8
	*($11 + [24]) = *($5 + [24])
	*(($11 + [32])) = *((($5 + [24]) + [8]))
	*($12) = $11
	*($11 + [16]) = $9
	$8 = ($10 + [4])
	$7 = *(*($8))
	if ( ($7 == 0) ){ goto $label$33 }
	$14 = [17]
	goto $label$32 
	
.LABEL $label$61
	*($8) = $7
	$11 = *($12)
	$14 = [18]
	goto $label$32 
	
.LABEL $label$60
	CALL $52(*(($10 + [8])), $11)
	*(($8 = ($10 + [12]))) = (*($8) + [1])
	$14 = [4]
	goto $label$32 
	
.LABEL $label$59
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$40 }
	$14 = [5]
	goto $label$32 
	
.LABEL $label$58
	CALL eosio_assert([0], [9410])
	$14 = [6]
	goto $label$32 
	
.LABEL $label$57
	*($5 + [40]) = [0]
	*($5 + [8]) = ($5 + [40])
	*($5 + [24]) = $1
	$7 = ($1 + [8])
	*($5 + [28]) = $7
	$3 = ($1 + [20])
	*($5 + [32]) = $3
	CALL $89(($5 + [24]), ($5 + [8]))
	$10 = *($5 + [40])
	if ( ($10 <= [513]) ){ goto $label$39 }
	$14 = [15]
	goto $label$32 
	
.LABEL $label$56
	$8 = CALL $133($10)
	goto $label$38 
	
.LABEL $label$55
	$8 = ($4 - (($10 + [15]) & [-16]))
	$global$0 = $8
	$14 = [8]
	goto $label$32 
	
.LABEL $label$54
	*($5 + [28]) = $8
	*($5 + [24]) = $8
	*($5 + [32]) = ($8 + $10)
	$11 = $8
	if ( ((int_32)$10 > (int_32)[7]) ){ goto $label$37 }
	$14 = [14]
	goto $label$32 
	
.LABEL $label$53
	CALL eosio_assert([0], [8981])
	$11 = *($5 + [28])
	$14 = [9]
	goto $label$32 
	
.LABEL $label$52
	CALL memcpy($11, $1, [8])
	*($5 + [28]) = ($11 + [8])
	CALL $90(($5 + [24]), $7)
	CALL $91(($5 + [24]), $3)
	CALL db_update_i64(*($1 + [36]), $2, $8, $10)
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$36 }
	$14 = [10]
	goto $label$32 
	
.LABEL $label$51
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$35 }
	$14 = [12]
	goto $label$32 
	
.LABEL $label$50
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$49
	CALL $136($8)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$34 }
	$14 = [11]
	goto $label$32 
	
.LABEL $label$48
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$47
	$14 = [2]
	goto $label$32 
	
.LABEL $label$46
	$14 = [1]
	goto $label$32 
	
.LABEL $label$45
	$14 = [3]
	goto $label$32 
	
.LABEL $label$44
	$14 = [21]
	goto $label$32 
	
.LABEL $label$43
	$14 = [1]
	goto $label$32 
	
.LABEL $label$42
	$14 = [3]
	goto $label$32 
	
.LABEL $label$41
	$14 = [4]
	goto $label$32 
	
.LABEL $label$40
	$14 = [6]
	goto $label$32 
	
.LABEL $label$39
	$14 = [7]
	goto $label$32 
	
.LABEL $label$38
	$14 = [8]
	goto $label$32 
	
.LABEL $label$37
	$14 = [9]
	goto $label$32 
	
.LABEL $label$36
	$14 = [13]
	goto $label$32 
	
.LABEL $label$35
	$14 = [11]
	goto $label$32 
	
.LABEL $label$34
	$14 = [12]
	goto $label$32 
	
.LABEL $label$33
	$14 = [18]
	goto $label$32 
	$14
}

int_32 .FUNC $126 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$6 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = CALL $124($0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($0 + [8])
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$7 }
	$4 = *($0 + [4])
	$1 = (int_64)
	if ( ((int_64)$1($1 - *($0 + [120]))) <= (int_64)(CASTING int_64)(int_32 ($3 - $4))) ){ goto $label$4 }
	
.LABEL $label$7
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$4
	*($0 + [104]) = (($4 + (CASTING uint_32)(uint_64 $1)) + [-1])
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)*($0 + [120]) + (int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)$2 == (int_32)*($0)) ){ goto $label$8 }
	*($0) = $2
	
.LABEL $label$8
	return $2
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	*($1) = *(*(*($0 + [4])))
	$4 = [8]
	$5 = ($1 + [8])
	$7 = *($1 + [8])
	$6 = *(($1 + [12]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 $8)
	$10 = *($0)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	$8 = ( $4 ? ($8 + $4) : ((int_32)$7 == (int_32)$6) )
	$9 = *(($1 + [28]))
	
.LOOP $label$2:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	$11 = ($1 + [24])
	$6 = *($1 + [20])
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$3 }
	
.LOOP $label$4:
	$7 = $6
	$4 = *($7 + [4])
	if ( ($4 == 0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = $4
	$4 = *($6)
	if ( $4 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$6 = *($7 + [8])
	if ( ((int_32)*($6) == (int_32)$7) ){ goto $label$5 }
	$7 = ($7 + [8])
	
.LOOP $label$8:
	$4 = *($7)
	$7 = ($4 + [8])
	$6 = *($4 + [8])
	if ( ((int_32)$4 != (int_32)*($6)) ){ goto $label$8 }
	
.LABEL $label$5
	$8 = ($8 + [24])
	if ( ((int_32)$6 != (int_32)$11) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ($8 <= [513]) ){ goto $label$10 }
	$4 = CALL $133($8)
	goto $label$9 
	
.LABEL $label$10
	$4 = ($2 - (($8 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$9
	*($3 + [4]) = $4
	*($3) = $4
	*($3 + [8]) = ($4 + $8)
	$7 = ($1 + [20])
	$6 = $4
	if ( ((int_32)$8 > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [8981])
	$6 = *($3 + [4])
	
.LABEL $label$11
	CALL memcpy($6, $1, [8])
	*($3 + [4]) = ($6 + [8])
	CALL $96($3, $5)
	CALL $90($3, $7)
	$9 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($10 + [8]), (int_64)4148315866783547392, *(*($0 + [8])), $9, $4, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$14 }
	if ( ((uint_64)$9 >= (uint_64)*($10 + [16])) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $136($4)
	if ( (uint_64)($9 <= *($10 + [16])) ){ goto $label$12 }
	
.LABEL $label$13
	*(($10 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$12
	$global$0 = ($3 + [16])
}

int_32 .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	$7 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9204])
	
.LABEL $label$5
	$4 = CALL $133($6)
	$7 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $6)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $6)
	*(($5 = CALL _Znwj([48]))) = (int_64)0
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [16]) = [0]
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32]) = $0
	*($5 + [20]) = ($5 + [24])
	$8 = ($5 + [20])
	$9 = ($5 + [8])
	$2 = $4
	if ( ((uint_32)$6 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9144])
	$2 = *($3 + [36])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [36]) = ($2 + [8])
	CALL $46(($3 + [32]), $9)
	CALL $59(($3 + [32]), $8)
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$10 = *($5)
	*($3 + [16]) = $10
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($6 + [8]) = $10
	*($6 + [16]) = $1
	*($3 + [24]) = [0]
	*($6) = $5
	*($2) = ($6 + [24])
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $50(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $136($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $36(($1 + [20]), *(($1 + [24])))
	$4 = *($1 + [8])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [12])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$11
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $125 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($2 - $3))
	*($0 + [120]) = $4
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	if ( ((int_64)$4 <= (int_64)$1) ){ goto $label$1 }
	*($0 + [104]) = ($3 + (CASTING uint_32)(uint_64 $1))
	return 
	
.LABEL $label$1
	*($0 + [104]) = $2
}

int_32 .FUNC $43 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL _Znwj([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $70($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $71(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

void .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9560])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9655])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [16]) = (int_64)0
	*($2 + [24]) = [0]
	$3 = *($1 + [8])
	$4 = *($1)
	$5 = (*(($1 + [20])) - *($1 + [16]))
	if ( ($5 == 0) ){ goto $label$2 }
	$6 = int_32($5 >> [4])
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$1 }
	$5 = CALL _Znwj($5)
	*(($2 + [24])) = ($5 + ($6 << [4]))
	*($2 + [16]) = $5
	*($2 + [20]) = $5
	$7 = *(($1 + [16]))
	$6 = (*(($1 + [20])) - $7)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($5, $7, $6)
	*($2 + [20]) = ($5 + $6)
	
.LABEL $label$2
	$1 = CALL $109($2, ($1 + [28]))
	CALL $81($0, $4, $3, ($2 + [16]), $1)
	if ( ((*($1) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*($1 + [8]))
	
.LABEL $label$3
	$1 = *($2 + [16])
	if ( ($1 == 0) ){ goto $label$4 }
	*($2 + [20]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$4
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $120(($2 + [16]))
}

void .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9144])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9144])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $79(*($1), ($0 + [16]))
	CALL $77(*($1), ($0 + [28]))
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [16]) = (int_64)0
	*($2 + [24]) = [0]
	$3 = *($1)
	$4 = (*(($1 + [12])) - *($1 + [8]))
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL _Znwj($4)
	*((($2 + [16]) + [8])) = ($5 + $4)
	*($2 + [16]) = $5
	*($2 + [20]) = $5
	$6 = *(($1 + [8]))
	$4 = (*(($1 + [12])) - $6)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $6, $4)
	*($2 + [20]) = ($5 + $4)
	
.LABEL $label$3
	*($2 + [8]) = [0]
	*($2) = (int_64)0
	$4 = (*(($1 + [24])) - *($1 + [20]))
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$1 }
	$5 = CALL _Znwj($4)
	*(($2 + [8])) = ($5 + $4)
	*($2) = $5
	*($2 + [4]) = $5
	$4 = *(($1 + [20]))
	$1 = (*(($1 + [24])) - $4)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($5, $4, $1)
	*($2 + [4]) = ($5 + $1)
	
.LABEL $label$4
	CALL $83($0, $3, ($2 + [16]), $2)
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$5 }
	*($2 + [4]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$1 = *($2 + [16])
	if ( ($1 == 0) ){ goto $label$6 }
	*($2 + [20]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$6
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $120(($2 + [16]))
	
.LABEL $label$1
	CALL $120($2)
	(unreachable)
}

int_32 .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9149])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = ($5 - $7)
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $82($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + $2)
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$8 }
	CALL eosio_assert([0], [9144])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [1])
	$2 = (*($6) + [1])
	*($6) = $2
	$7 = ($7 + [1])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $45 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9313])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9359])
	
.LABEL $label$2
	$6 = ($1 + [8])
	$7 = *($1)
	$8 = ($1 + [12])
	$9 = *($8)
	if ( ($9 == 0) ){ goto $label$3 }
	$10 = *(*($3))
	$11 = $8
	$3 = $9
	
.LOOP $label$4:
	$12 = (uint_64)(*($3 + [16]) <= $10)
	$11 = ( $11 ? $3 : $12 )
	$3 = *(($3 + ($12 << [2])))
	if ( $3 ){ goto $label$4 }
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$3 }
	if ( (uint_64)($10 <= *($11 + [16])) ){ goto $label$3 }
	$3 = *($11 + [4])
	if ( ($3 == 0) ){ goto $label$6 }
	
.LOOP $label$7:
	$12 = $3
	$3 = *($12)
	if ( $3 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$12 = *($11 + [8])
	if ( ((int_32)*($12) == (int_32)$11) ){ goto $label$5 }
	$8 = ($11 + [8])
	
.LOOP $label$8:
	$3 = *($8)
	$8 = ($3 + [8])
	$12 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($12)) ){ goto $label$8 }
	
.LABEL $label$5
	if ( ((int_32)*($6) != (int_32)$11) ){ goto $label$9 }
	*($6) = $12
	
.LABEL $label$9
	*(($3 = ($1 + [16]))) = (*($3) + [-1])
	CALL $95($9, $11)
	CALL _ZdlPv($11)
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9410])
	
.LABEL $label$3
	*($5) = [0]
	*($5 + [8]) = $5
	*($5 + [20]) = $6
	*($5 + [16]) = $1
	$8 = ($1 + [20])
	*($5 + [24]) = $8
	CALL $89(($5 + [16]), ($5 + [8]))
	$11 = *($5)
	if ( ($11 <= [513]) ){ goto $label$11 }
	$3 = CALL $133($11)
	goto $label$10 
	
.LABEL $label$11
	$3 = ($4 - (($11 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$10
	*($5 + [20]) = $3
	*($5 + [16]) = $3
	*($5 + [24]) = ($3 + $11)
	$12 = $3
	if ( ((int_32)$11 > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [8981])
	$12 = *($5 + [20])
	
.LABEL $label$12
	CALL memcpy($12, $1, [8])
	*($5 + [20]) = ($12 + [8])
	CALL $90(($5 + [16]), $6)
	CALL $91(($5 + [16]), $8)
	CALL db_update_i64(*($1 + [36]), $2, $3, $11)
	if ( ((uint_32)$11 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$7 >= (uint_64)*($0 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $136($3)
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [32])
	return 
	
.LABEL $label$13
	$global$0 = ($5 + [32])
}

void .FUNC $44 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $70($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $72(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

int_32 .FUNC $124 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = [-1]
	if ( CALL $123($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($1 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$2 = *($1 + [15])
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

int_32 .FUNC $128 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [4]) = $0
	*($3 + [44]) = $0
	*($3) = [0]
	*($3 + [76]) = [-1]
	*($3 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL $125($3, (int_64)0)
	$4 = CALL $127($3, $2, [1], (int_64)2147483648)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + ((*($3 + [4]) + *($3 + [120])) - *(($3 + [8]))))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return (CASTING uint_32)(uint_64 $4)
}

void .FUNC $8 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [80])
	$global$0 = $4
	*($4 + [24]) = $2
	*($4 + [32]) = $1
	CALL require_auth(*($0))
	$5 = CALL $130([8395])
	if ( ($5 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8659])
	goto $label$3 
	
.LABEL $label$4
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = (int_64)0
	
.LOOP $label$5:
	$7 = *(($5 + [8394]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$6
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$5 }
	$6 = ((int_64)$6 << (int_64)8)
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)0
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$6), [8400])
	$8 = ($0 + [32])
	$7 = *(($0 + [60]))
	$9 = *(($0 + [56]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$10 }
	
.LOOP $label$12:
	$5 = ($7 + [-24])
	$10 = *($5)
	if ( ((int_64)*($10) == (int_64)$2) ){ goto $label$11 }
	$7 = $5
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$10 }
	if ( ((int_32)*($10 + [24]) == (int_32)$8) ){ goto $label$9 }
	CALL eosio_assert([0], [9153])
	goto $label$9 
	
.LABEL $label$10
	$5 = CALL db_find_i64(*($8), *(($0 + [40])), (int_64)-4157798822388432896, $2)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$8 }
	$10 = CALL $26($8, $5)
	if ( ((int_32)*($10 + [24]) == (int_32)$8) ){ goto $label$9 }
	CALL eosio_assert([0], [9153])
	
.LABEL $label$9
	if ( ((int_64)*(($10 + [16])) == (int_64)*(($3 + [8]))) ){ goto $label$13 }
	CALL eosio_assert([0], [8757])
	
.LABEL $label$13
	CALL eosio_assert(((int_64)*($10 + [8]) >= (int_64)*($3)), [8417])
	$6 = *($0)
	*($4 + [48]) = $3
	CALL $31($8, $10, $6, ($4 + [48]))
	$8 = ($0 + [72])
	$7 = *(($0 + [100]))
	$9 = *(($0 + [96]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$16 }
	
.LOOP $label$18:
	$5 = ($7 + [-24])
	$10 = *($5)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$17 }
	$7 = $5
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$16 }
	if ( ((int_32)*($10 + [32]) == (int_32)$8) ){ goto $label$15 }
	CALL eosio_assert([0], [9153])
	goto $label$15 
	
.LABEL $label$16
	$5 = CALL db_find_i64(*($8), *(($0 + [80])), (int_64)-3922893409758478336, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$14 }
	$10 = CALL $32($8, $5)
	if ( ((int_32)*($10 + [32]) == (int_32)$8) ){ goto $label$15 }
	CALL eosio_assert([0], [9153])
	
.LABEL $label$15
	$6 = *($0)
	*($4 + [52]) = $3
	*($4 + [48]) = ($4 + [24])
	CALL $33($8, $10, $6, ($4 + [48]))
	$global$0 = ($4 + [80])
	return 
	
.LABEL $label$14
	$6 = *($0)
	*($4 + [16]) = $3
	*($4 + [12]) = ($4 + [24])
	*($4 + [8]) = ($4 + [32])
	*($4 + [72]) = $6
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$19 }
	CALL eosio_assert([0], [9227])
	
.LABEL $label$19
	*($4 + [48]) = $8
	*($4 + [52]) = ($4 + [8])
	*($4 + [56]) = ($4 + [72])
	*(($5 = CALL _Znwj([48]))) = (int_64)0
	*($5 + [12 align=4]) = (int_64)0
	*($5 + [20 align=4]) = (int_64)0
	*($5 + [28]) = [0]
	*($5 + [32]) = $8
	*($5 + [8]) = ($5 + [12])
	CALL $34(($4 + [48]), $5)
	*($4 + [64]) = $5
	$6 = *($5)
	*($4 + [48]) = $6
	$10 = *($5 + [36])
	*($4 + [44]) = $10
	$9 = ($0 + [100])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [104]))) ){ goto $label$20 }
	*($7 + [8]) = $6
	*($7 + [16]) = $10
	*($4 + [64]) = [0]
	*($7) = $5
	*($9) = ($7 + [24])
	$10 = *($4 + [64])
	*($4 + [64]) = [0]
	if ( ($10 == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$20
	CALL $35(($0 + [96]), ($4 + [64]), ($4 + [48]), ($4 + [44]))
	$10 = *($4 + [64])
	*($4 + [64]) = [0]
	if ( $10 ){ goto $label$7 }
	
.LABEL $label$8
	$global$0 = ($4 + [80])
	return 
	
.LABEL $label$7
	$7 = *($10 + [20])
	if ( ($7 == 0) ){ goto $label$21 }
	$9 = $7
	$0 = ($10 + [24])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$22 }
	
.LOOP $label$23:
	CALL $36(($5 + [-12]), *(($5 + [-8])))
	$5 = ($5 + [-16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$23 }
	$9 = *(($10 + [20]))
	
.LABEL $label$22
	*($0) = $7
	CALL _ZdlPv($9)
	
.LABEL $label$21
	CALL $36(($10 + [8]), *(($10 + [12])))
	CALL _ZdlPv($10)
	$global$0 = ($4 + [80])
}

int_32 .FUNC $9 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [320])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $133($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = (($4 + [240]) + [24]))) = (int_64)0
	*($4 + [248]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [256]) = (int_64)0
	*($4 + [228]) = $2
	*($4 + [224]) = $2
	*($4 + [232]) = ($2 + $7)
	*($4 + [304]) = ($4 + [224])
	*($4 + [32]) = ($4 + [240])
	CALL $30(($4 + [32]), ($4 + [304]))
	*(($9 = (($4 + [16]) + [8]))) = *($4 + [232])
	*($4 + [16]) = *($4 + [224])
	$10 = *($9)
	*(($3 = (($4 + [272]) + [8]))) = $10
	*(($9 = (($4 + [288]) + [8]))) = $10
	$11 = *($4 + [16])
	*($4 + [288]) = $11
	*($4 + [272]) = $11
	$10 = *($9)
	*((($4 + [304]) + [8])) = $10
	*((($4 + [32]) + [24])) = $10
	*($4 + [32]) = $0
	*($4 + [40]) = $1
	$1 = *($4 + [288])
	*($4 + [48]) = $1
	*($4 + [304]) = $1
	*(($4 + [72])) = $0
	*(($4 + [80])) = (int_64)-1
	*(($4 + [88])) = (int_64)0
	*(($4 + [96])) = [0]
	*(($4 + [112])) = $0
	*(($4 + [120])) = (int_64)-1
	*(($4 + [128])) = (int_64)0
	*(($4 + [136])) = [0]
	*(($4 + [152])) = $0
	*(($4 + [160])) = (int_64)-1
	*(($4 + [168])) = (int_64)0
	*(($4 + [176])) = [0]
	*(($4 + [192])) = $0
	*(($4 + [200])) = (int_64)-1
	*($4 + [64]) = $0
	*($4 + [104]) = $0
	*($4 + [144]) = $0
	*($4 + [184]) = $0
	*(($4 + [216])) = [0]
	*(($4 + [208])) = (int_64)0
	*($3) = *($8)
	*($4 + [272]) = *($4 + [256])
	$0 = *($4 + [248])
	$1 = *($4 + [240])
	*($9) = *($3)
	*($4 + [288]) = *($4 + [272])
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$11 = *((($4 + [288]) + [8]))
	*((($4 + [304]) + [8])) = $11
	*(($4 + [8])) = $11
	$11 = *($4 + [288])
	*($4) = $11
	*($4 + [304]) = $11
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $136($2)
	
.LABEL $label$5
	CALL $25(($4 + [32]))
	$global$0 = ($4 + [320])
	return [1]
}

void .FUNC $6 (int_32 $0, int_32 $1, int_32 $2)
{
	CALL prints([8656])
}

int_32 .FUNC $7 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [304])
	$global$0 = $3
	*(($4 = $3) + [248]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $133($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($3 = ($4 + [240]))) = (int_64)0
	*($4 + [232]) = [0]
	*($4 + [224]) = (int_64)0
	*($4 + [236]) = $3
	*($4 + [212]) = $2
	*($4 + [208]) = $2
	*($4 + [216]) = ($2 + $5)
	CALL $46(($4 + [208]), ($4 + [224]))
	$6 = ($4 + [236])
	CALL $59(($4 + [208]), $6)
	*(($7 = ($4 + [8]))) = *($4 + [216])
	*($4) = *($4 + [208])
	$7 = *($7)
	*((($4 + [256]) + [8])) = $7
	*(($8 = (($4 + [272]) + [8]))) = $7
	$9 = *($4)
	*($4 + [272]) = $9
	*($4 + [256]) = $9
	$7 = *($8)
	*((($4 + [288]) + [8])) = $7
	*(($4 + [40])) = $7
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [272])
	*($4 + [32]) = $1
	*($4 + [288]) = $1
	*(($4 + [56])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [176])) = $0
	*(($4 + [184])) = (int_64)-1
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [168]) = $0
	*(($4 + [200])) = [0]
	*(($4 + [192])) = (int_64)0
	*($4 + [292]) = ($4 + [248])
	*($4 + [288]) = ($4 + [16])
	CALL $60(($4 + [288]), ($4 + [224]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $136($2)
	
.LABEL $label$4
	CALL $25(($4 + [16]))
	CALL $36($6, *($3))
	$2 = *($4 + [224])
	if ( ($2 == 0) ){ goto $label$5 }
	*($4 + [228]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$5
	$global$0 = ($4 + [304])
	return [1]
}

void .FUNC $4 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($global$0 - [64])
	$global$0 = $5
	*($5 + [16]) = $1
	$6 = *($0)
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$1 }
	$7 = CALL $130([8265])
	if ( ($7 <= [8]) ){ goto $label$5 }
	CALL eosio_assert([0], [8659])
	goto $label$4 
	
.LABEL $label$5
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = (int_64)0
	
.LOOP $label$6:
	$8 = *(($7 + [8264]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$7
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$6 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$2 
	
.LABEL $label$3
	$2 = (int_64)4
	
.LABEL $label$2
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$2), [8360])
	CALL eosio_assert(((int_64)*($3) > (int_64)99), [8376])
	$9 = ($0 + [32])
	$8 = *(($0 + [60]))
	$10 = *(($0 + [56]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$10 }
	
.LOOP $label$12:
	$7 = ($8 + [-24])
	$11 = *($7)
	if ( ((int_64)*($11) == (int_64)$1) ){ goto $label$11 }
	$8 = $7
	if ( ((int_32)$10 != (int_32)$7) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)*($11 + [24]) == (int_32)$9) ){ goto $label$9 }
	CALL eosio_assert([0], [9153])
	goto $label$9 
	
.LABEL $label$10
	$7 = CALL db_find_i64(*($9), *(($0 + [40])), (int_64)-4157798822388432896, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	$11 = CALL $26($9, $7)
	if ( ((int_32)*($11 + [24]) == (int_32)$9) ){ goto $label$9 }
	CALL eosio_assert([0], [9153])
	
.LABEL $label$9
	$2 = *($0)
	*($5 + [32]) = $3
	CALL $27($9, $11, $2, ($5 + [32]))
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$8
	$2 = *($0)
	*($5 + [12]) = $3
	*($5 + [8]) = ($5 + [16])
	*($5 + [56]) = $2
	if ( ((int_64)*(($0 + [32])) == (int_64)CALL current_receiver()) ){ goto $label$13 }
	CALL eosio_assert([0], [9227])
	
.LABEL $label$13
	*($5 + [32]) = $9
	*($5 + [36]) = ($5 + [8])
	*($5 + [40]) = ($5 + [56])
	*(($7 = CALL _Znwj([40])) + [8]) = (int_64)0
	*($7) = (int_64)0
	*($7 + [16]) = (int_64)0
	*($7 + [24]) = $9
	CALL $28(($5 + [32]), $7)
	*($5 + [48]) = $7
	$2 = *($7)
	*($5 + [32]) = $2
	$11 = *($7 + [28])
	*($5 + [28]) = $11
	$10 = ($0 + [60])
	$8 = *($10)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [64]))) ){ goto $label$15 }
	*($8 + [8]) = $2
	*($8 + [16]) = $11
	*($5 + [48]) = [0]
	*($8) = $7
	*($10) = ($8 + [24])
	$7 = *($5 + [48])
	*($5 + [48]) = [0]
	if ( $7 ){ goto $label$14 }
	goto $label$1 
	
.LABEL $label$15
	CALL $29(($0 + [56]), ($5 + [48]), ($5 + [32]), ($5 + [28]))
	$7 = *($5 + [48])
	*($5 + [48]) = [0]
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$14
	CALL _ZdlPv($7)
	
.LABEL $label$1
	$global$0 = ($5 + [64])
}

int_32 .FUNC $5 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [336])
	$global$0 = $3
	*(($4 = $3) + [280]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $133($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [232]) + [24])) = (int_64)0
	*((($4 + [232]) + [40])) = [0]
	*($4 + [240]) = (int_64)0
	*($4 + [232]) = (int_64)0
	*($4 + [248]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [220]) = $2
	*($4 + [216]) = $2
	*($4 + [224]) = ($2 + $5)
	*($4 + [320]) = ($4 + [216])
	*($4 + [24]) = ($4 + [232])
	CALL $23(($4 + [24]), ($4 + [320]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [224])
	*($4 + [8]) = *($4 + [216])
	$3 = *($3)
	*((($4 + [288]) + [8])) = $3
	*(($6 = (($4 + [304]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [304]) = $7
	*($4 + [288]) = $7
	$3 = *($6)
	*((($4 + [320]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [304])
	*($4 + [40]) = $1
	*($4 + [320]) = $1
	*((($4 + [24]) + [40])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [184])) = $0
	*(($4 + [192])) = (int_64)-1
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [208])) = [0]
	*(($4 + [200])) = (int_64)0
	*($4 + [324]) = ($4 + [280])
	*($4 + [320]) = ($4 + [24])
	CALL $24(($4 + [320]), ($4 + [232]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $136($2)
	
.LABEL $label$4
	CALL $25(($4 + [24]))
	if ( ((*($4 + [264]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [272])))
	
.LABEL $label$5
	$global$0 = ($4 + [336])
	return [1]
}

void .FUNC $2 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($5 + [23]) = $2
	*($5 + [24]) = $3
	CALL require_auth($3)
	$2 = CALL $130([8395])
	if ( ($2 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8659])
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = (int_64)0
	
.LOOP $label$5:
	$7 = *(($2 + [8394]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$6
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$5 }
	$6 = ((int_64)$6 << (int_64)8)
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)0
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*($4 + [8]) == (int_64)$6), [8400])
	CALL eosio_assert((uint_64)(((int_64)*($4) + (int_64)-1000) <= (int_64)999001), [8439])
	$8 = ($0 + [72])
	$7 = *(($0 + [100]))
	$9 = *(($0 + [96]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$10 }
	
.LOOP $label$12:
	$2 = ($7 + [-24])
	$10 = *($2)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$11 }
	$7 = $2
	if ( ((int_32)$9 != (int_32)$2) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$10 }
	if ( ((int_32)*($10 + [32]) == (int_32)$8) ){ goto $label$9 }
	CALL eosio_assert([0], [9153])
	$11 = ($10 + [12])
	$2 = *($11)
	if ( $2 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	$10 = [0]
	$2 = CALL db_find_i64(*($8), *(($0 + [80])), (int_64)-3922893409758478336, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$9 }
	$10 = CALL $32($8, $2)
	if ( ((int_32)*($10 + [32]) == (int_32)$8) ){ goto $label$9 }
	CALL eosio_assert([0], [9153])
	
.LABEL $label$9
	$11 = ($10 + [12])
	$2 = *($11)
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$7 = $11
	
.LOOP $label$13:
	$9 = (uint_64)(*($2 + [16]) <= $3)
	$7 = ( $7 ? $2 : $9 )
	$2 = *(($2 + ($9 << [2])))
	if ( $2 ){ goto $label$13 }
	if ( ((int_32)$7 == (int_32)$11) ){ goto $label$7 }
	if ( ((uint_64)*($7 + [16]) > (uint_64)$3) ){ goto $label$7 }
	if ( ((int_64)*($7 + [32]) == (int_64)*(($4 + [8]))) ){ goto $label$14 }
	CALL eosio_assert([0], [8757])
	
.LABEL $label$14
	CALL eosio_assert(((int_64)*(($7 + [24])) >= (int_64)*($4)), [8467])
	$6 = *($0)
	*($5 + [12]) = $4
	*($5 + [8]) = ($5 + [24])
	*($5 + [16]) = ($5 + [23])
	if ( $10 ){ goto $label$15 }
	CALL eosio_assert([0], [9278])
	
.LABEL $label$15
	CALL $38($8, $10, $6, ($5 + [8]))
	
.LABEL $label$7
	$global$0 = ($5 + [32])
}

int_32 .FUNC $3 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [336])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $133($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [280]))) = (int_64)0
	*($4 + [256]) = [0]
	*($4 + [248]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [236]) = $2
	*($4 + [232]) = $2
	*($4 + [240]) = ($2 + $7)
	*($4 + [320]) = ($4 + [232])
	*($4 + [40]) = ($4 + [248])
	CALL $37(($4 + [40]), ($4 + [320]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [240])
	*($4 + [24]) = *($4 + [232])
	$10 = *($9)
	*(($3 = (($4 + [288]) + [8]))) = $10
	*(($9 = (($4 + [304]) + [8]))) = $10
	$11 = *($4 + [24])
	*($4 + [304]) = $11
	*($4 + [288]) = $11
	$10 = *($9)
	*((($4 + [320]) + [8])) = $10
	*(($4 + [64])) = $10
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$1 = *($4 + [304])
	*($4 + [56]) = $1
	*($4 + [320]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*($4 + [192]) = $0
	*(($4 + [224])) = [0]
	*(($4 + [216])) = (int_64)0
	*($3) = *($8)
	*($4 + [288]) = *($4 + [272])
	$0 = *($4 + [264])
	$8 = *($4 + [256])
	$1 = *($4 + [248])
	*($9) = *($3)
	*($4 + [304]) = *($4 + [288])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$11 = *((($4 + [304]) + [8]))
	*((($4 + [320]) + [8])) = $11
	*((($4 + [8]) + [8])) = $11
	$11 = *($4 + [304])
	*($4 + [8]) = $11
	*($4 + [320]) = $11
	CALL void $3((int_32 $1), (int_64 ($8 & [255])), (int_32 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $136($2)
	
.LABEL $label$5
	CALL $25(($4 + [40]))
	$global$0 = ($4 + [336])
	return [1]
}

void .FUNC memory ()
{
}

void .FUNC apply (int_64 $0, int_64 apply, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [192])
	$global$0 = $3
	CALL memory()
	if ( ((int_64)$2 != (int_64)-6569208335818555392) ){ goto $label$1 }
	CALL eosio_assert(((int_64)$1 == (int_64)6138663577826885632), [8192])
	
.LABEL $label$1
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$13 }
	if ( ((int_64)$2 > (int_64)4148182128082812927) ){ goto $label$12 }
	if ( ((int_64)$2 > (int_64)4147944336004655615) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)-3617168760277827584) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)3626333793311637504) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)4147944329165406208) ){ goto $label$2 }
	*($3 + [172]) = [0]
	*($3 + [168]) = [1]
	*($3 + [16]) = *($3 + [168])
	CALL $3($1, $1, ($3 + [16]))
	goto $label$2 
	
.LABEL $label$13
	if ( ((int_64)$1 != (int_64)6138663591592764928) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$2 }
	*($3 + [188]) = [0]
	*($3 + [184]) = [2]
	*($3) = *($3 + [184])
	CALL $5($0, (int_64)6138663591592764928, $3)
	goto $label$2 
	
.LABEL $label$12
	if ( ((int_64)$2 > (int_64)4148225859293544447) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)4148182128082812928) ){ goto $label$8 }
	if ( ((int_64)$2 == (int_64)4148225519176586240) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)4148225520019963904) ){ goto $label$2 }
	*($3 + [124]) = [0]
	*($3 + [120]) = [3]
	*($3 + [64]) = *($3 + [120])
	CALL $7($1, $1, ($3 + [64]))
	goto $label$2 
	
.LABEL $label$11
	if ( ((int_64)$2 == (int_64)4147944336004655616) ){ goto $label$6 }
	if ( ((int_64)$2 == (int_64)4148007375527215104) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)4148090385433886720) ){ goto $label$2 }
	*($3 + [180]) = [0]
	*($3 + [176]) = [4]
	*($3 + [8]) = *($3 + [176])
	CALL $9($1, $1, ($3 + [8]))
	goto $label$2 
	
.LABEL $label$10
	if ( ((int_64)$2 == (int_64)4148225859293544448) ){ goto $label$4 }
	if ( ((int_64)$2 == (int_64)4148251612244606976) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)5378048487623142912) ){ goto $label$2 }
	*($3 + [108]) = [0]
	*($3 + [104]) = [5]
	*($3 + [80]) = *($3 + [104])
	CALL $11($1, $1, ($3 + [80]))
	goto $label$2 
	
.LABEL $label$9
	*($3 + [116]) = [0]
	*($3 + [112]) = [6]
	*($3 + [72]) = *($3 + [112])
	CALL $11($1, $1, ($3 + [72]))
	goto $label$2 
	
.LABEL $label$8
	*($3 + [132]) = [0]
	*($3 + [128]) = [7]
	*($3 + [56]) = *($3 + [128])
	CALL $14($1, $1, ($3 + [56]))
	goto $label$2 
	
.LABEL $label$7
	*($3 + [156]) = [0]
	*($3 + [152]) = [8]
	*($3 + [32]) = *($3 + [152])
	CALL $9($1, $1, ($3 + [32]))
	goto $label$2 
	
.LABEL $label$6
	*($3 + [148]) = [0]
	*($3 + [144]) = [9]
	*($3 + [40]) = *($3 + [144])
	CALL $17($1, $1, ($3 + [40]))
	goto $label$2 
	
.LABEL $label$5
	*($3 + [140]) = [0]
	*($3 + [136]) = [10]
	*($3 + [48]) = *($3 + [136])
	CALL $19($1, $1, ($3 + [48]))
	goto $label$2 
	
.LABEL $label$4
	*($3 + [164]) = [0]
	*($3 + [160]) = [11]
	*($3 + [24]) = *($3 + [160])
	CALL $9($1, $1, ($3 + [24]))
	goto $label$2 
	
.LABEL $label$3
	*($3 + [100]) = [0]
	*($3 + [96]) = [12]
	*($3 + [88]) = *($3 + [96])
	CALL $22($1, $1, ($3 + [88]))
	
.LABEL $label$2
	CALL $122([0])
	$global$0 = ($3 + [192])
}

int_32 .FUNC $14 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [320])
	$global$0 = $3
	*(($4 = $3) + [264]) = *($2)
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$3 = CALL $133($2)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $2)
	
.LABEL $label$1
	*(($4 + [248])) = (int_64)0
	*((($4 + [232]) + [24])) = (int_64)0
	*($4 + [232]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [220]) = $3
	*($4 + [216]) = $3
	*($4 + [224]) = ($3 + $2)
	$5 = $3
	if ( ((uint_32)$2 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9144])
	$5 = *($4 + [220])
	
.LABEL $label$5
	CALL memcpy(($4 + [232]), $5, [8])
	*($4 + [220]) = ($5 + [8])
	CALL $46(($4 + [216]), (($4 + [232]) + [8]))
	$5 = ($4 + [252])
	CALL $46(($4 + [216]), $5)
	*(($6 = (($4 + [8]) + [8]))) = *((($4 + [216]) + [8]))
	*($4 + [8]) = *($4 + [216])
	$6 = *($6)
	*((($4 + [272]) + [8])) = $6
	*(($7 = (($4 + [288]) + [8]))) = $6
	$8 = *($4 + [8])
	*($4 + [288]) = $8
	*($4 + [272]) = $8
	$6 = *($7)
	*((($4 + [304]) + [8])) = $6
	*((($4 + [24]) + [24])) = $6
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [288])
	*($4 + [40]) = $1
	*($4 + [304]) = $1
	*(($4 + [64])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [184])) = $0
	*(($4 + [192])) = (int_64)-1
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [208])) = [0]
	*(($4 + [200])) = (int_64)0
	*($4 + [308]) = ($4 + [264])
	*($4 + [304]) = ($4 + [24])
	CALL $47(($4 + [304]), ($4 + [232]))
	if ( ($2 <= [513]) ){ goto $label$6 }
	CALL $136($3)
	
.LABEL $label$6
	CALL $25(($4 + [24]))
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$7 }
	*(($4 + [256])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$7
	$3 = *(($4 + [240]))
	if ( ($3 == 0) ){ goto $label$8 }
	*(($4 + [244])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$8
	$global$0 = ($4 + [320])
	return [1]
}

void .FUNC $15 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *(($3 + [8]))
	*((($4 + [16]) + [8])) = $5
	$6 = *($3)
	*(($4 + [8])) = $5
	*($4 + [16]) = $6
	*($4) = $6
	CALL $8($0, $1, $2, $4)
	$global$0 = ($4 + [32])
}

void .FUNC $16 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_64 $15
	float_64 $16
	$5 = ($global$0 - [208])
	$global$0 = $5
	CALL require_auth($2)
	$6 = ($0 + [72])
	$8 = *(($0 + [100]))
	$7 = *(($0 + [96]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$2 }
	
.LOOP $label$4:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$3 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$2 }
	if ( ((int_32)*($10 + [32]) == (int_32)$6) ){ goto $label$1 }
	CALL eosio_assert([0], [9153])
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	$9 = CALL db_find_i64(*($6), *(($0 + [80])), (int_64)-3922893409758478336, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$10 = CALL $32($6, $9)
	if ( ((int_32)*($10 + [32]) == (int_32)$6) ){ goto $label$1 }
	CALL eosio_assert([0], [9153])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [8486])
	$7 = ($10 + [12])
	$9 = *($7)
	if ( ($9 == 0) ){ goto $label$6 }
	$10 = $7
	
.LOOP $label$7:
	$8 = (uint_64)(*($9 + [16]) <= $2)
	$10 = ( $10 ? $9 : $8 )
	$9 = *(($9 + ($8 << [2])))
	if ( $9 ){ goto $label$7 }
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$6 }
	if ( ((uint_64)*($10 + [16]) <= (uint_64)$2) ){ goto $label$5 }
	
.LABEL $label$6
	$10 = $7
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$10 != (int_32)$7), [8486])
	$9 = CALL $130([8395])
	if ( ($9 <= [8]) ){ goto $label$11 }
	CALL eosio_assert([0], [8659])
	goto $label$10 
	
.LABEL $label$11
	if ( ($9 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	$11 = (int_64)0
	
.LOOP $label$12:
	$8 = *(($9 + [8394]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$13 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$13
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$12 }
	$12 = ((int_64)$11 << (int_64)8)
	goto $label$8 
	
.LABEL $label$9
	$12 = (int_64)0
	
.LABEL $label$8
	$11 = (uint_64)$12 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$13 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$17 }
	$11 = $13
	$8 = $9
	$9 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$17
	$11 = $13
	
.LOOP $label$18:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$15 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$8 = ((int_32)$9 < (int_32)[6])
	$7 = ($9 + [1])
	$9 = $7
	if ( $8 ){ goto $label$18 }
	$9 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	CALL eosio_assert([0], [8865])
	
.LABEL $label$14
	$11 = (int_64)0
	$8 = *($3)
	if ( ((int_32)*($3 + [4]) == (int_32)$8) ){ goto $label$19 }
	$11 = (int_64)0
	$9 = [8]
	$7 = [0]
	
.LOOP $label$20:
	$8 = ($8 + $9)
	if ( ((int_64)*($8) == (int_64)$12) ){ goto $label$21 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$21
	$11 = ((int_64)*(($8 + [-8])) + (int_64)$11)
	if ( ((int_64)$11 <= (int_64)-4611686018427387904) ){ goto $label$23 }
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$22 }
	CALL eosio_assert([0], [8947])
	goto $label$22 
	
.LABEL $label$23
	CALL eosio_assert([0], [8928])
	
.LABEL $label$22
	$9 = ($9 + [16])
	$8 = *($3)
	$7 = ($7 + [1])
	if ( ($7 <= int_32((*(($3 + [4])) - $8) >> [4])) ){ goto $label$20 }
	
.LABEL $label$19
	if ( ((int_64)*($10 + [32]) == (int_64)$12) ){ goto $label$24 }
	CALL eosio_assert([0], [8757])
	
.LABEL $label$24
	if ( ((int_64)*(($10 + [24])) < (int_64)$11) ){ goto $label$26 }
	CALL eosio_assert(((int_64)$11 < (int_64)1000001), [8439])
	$8 = *($3)
	$14 = ($3 + [4])
	$6 = *($14)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$27 }
	$9 = [0]
	$10 = [0]
	
.LOOP $label$28:
	$7 = ($8 + $9)
	if ( ((int_64)*($7) < (int_64)1) ){ goto $label$29 }
	$13 = *(($7 + [8]))
	*((($5 + [192]) + [8])) = $13
	$12 = *($7)
	*((($5 + [16]) + [8])) = $13
	*($5 + [192]) = $12
	*($5 + [16]) = $12
	CALL $2($0, $1, ($10 & [255]), $2, ($5 + [16]))
	$6 = *($14)
	$8 = *($3)
	
.LABEL $label$29
	$9 = ($9 + [16])
	$10 = ($10 + [1])
	if ( ($10 <= int_32(($6 - $8) >> [4])) ){ goto $label$28 }
	
.LABEL $label$27
	if ( ((int_64)$11 <= (int_64)0) ){ goto $label$26 }
	$1 = *($0)
	$9 = CALL $130([8509])
	if ( ($9 <= [8]) ){ goto $label$33 }
	CALL eosio_assert([0], [8659])
	goto $label$32 
	
.LABEL $label$33
	if ( ($9 == 0) ){ goto $label$31 }
	
.LABEL $label$32
	$12 = (int_64)0
	
.LOOP $label$34:
	$8 = *(($9 + [8508]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$35 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$35
	$12 = ((int_64)((int_64)$12 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$34 }
	$12 = ((int_64)$12 << (int_64)8)
	goto $label$30 
	
.LABEL $label$31
	$12 = (int_64)0
	
.LABEL $label$30
	CALL $67(($5 + [176]), $9, $1, ((int_64)$12 | (int_64)4))
	$13 = *($5 + [176])
	if ( ((int_64)$13 < (int_64)1) ){ goto $label$38 }
	$9 = CALL $130([8509])
	if ( ($9 <= [8]) ){ goto $label$42 }
	CALL eosio_assert([0], [8659])
	goto $label$41 
	
.LABEL $label$42
	if ( ($9 == 0) ){ goto $label$40 }
	
.LABEL $label$41
	$12 = (int_64)0
	
.LOOP $label$43:
	$8 = *(($9 + [8508]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$44 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$44
	$12 = ((int_64)((int_64)$12 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$43 }
	$1 = ((int_64)$12 << (int_64)8)
	goto $label$39 
	
.LABEL $label$40
	$1 = (int_64)0
	
.LABEL $label$39
	$12 = (uint_64)$1 >> (uint_64)(int_64)8)
	$15 = ((int_64)$1 | (int_64)4)
	$9 = [0]
	
.LOOP $label$47:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$46 }
	$1 = (uint_64)$12 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$12 & (int_64)65280) == (int_64)0) ){ goto $label$48 }
	$12 = $1
	$8 = $9
	$9 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$47 }
	goto $label$45 
	
.LABEL $label$48
	$12 = $1
	
.LOOP $label$49:
	if ( ((int_64)((int_64)$12 & (int_64)65280) != (int_64)0) ){ goto $label$46 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8)
	$8 = ((int_32)$9 < (int_32)[6])
	$10 = ($9 + [1])
	$9 = $10
	if ( $8 ){ goto $label$49 }
	$9 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$47 }
	goto $label$45 
	
.LABEL $label$46
	CALL eosio_assert([0], [8865])
	
.LABEL $label$45
	$12 = ((int_64)$11 * (int_64)10)
	if ( ((int_64)$15 == (int_64)*($5 + [184])) ){ goto $label$50 }
	CALL eosio_assert([0], [8757])
	
.LABEL $label$50
	if ( ((int_64)$12 > (int_64)$13) ){ goto $label$38 }
	*($5 + [128]) = (int_64)3617214756542218240
	*($5 + [120]) = *($0)
	*(($5 + [64])) = [0]
	*($5 + [56]) = (int_64)0
	$9 = CALL $130([8513])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$37 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$53 }
	*($5 + [56]) = ($9 << [1])
	$8 = (($5 + [56]) | [1])
	if ( $9 ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$53
	$10 = (($9 + [16]) & [-16])
	$8 = CALL _Znwj($10)
	*($5 + [56]) = ($10 | [1])
	*($5 + [64]) = $8
	*($5 + [60]) = $9
	
.LABEL $label$52
	CALL memcpy($8, [8513], $9)
	
.LABEL $label$51
	*(($8 + $9)) = [0]
	*(($5 + [96])) = $15
	$9 = ($5 + [64])
	*(($5 + [112])) = *($9)
	*($9) = [0]
	*($5 + [80]) = $2
	*($5 + [88]) = $12
	*($5 + [72]) = *($0)
	*($5 + [104]) = *($5 + [56])
	*($5 + [56]) = (int_64)0
	$9 = CALL $43(($5 + [136]), ($5 + [120]), (int_64)-3838636544615976944, (int_64)-3617168760277827584, ($5 + [72]))
	CALL $44($9)
	$8 = *($9 + [28])
	if ( ($8 == 0) ){ goto $label$54 }
	*(($9 + [32])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$54
	$8 = *($9 + [16])
	if ( ($8 == 0) ){ goto $label$55 }
	*(($9 + [20])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$55
	if ( ((*(($5 + [104])) & [1]) == 0) ){ goto $label$56 }
	CALL _ZdlPv(*(($5 + [112])))
	
.LABEL $label$56
	if ( ((*($5 + [56]) & [1]) == 0) ){ goto $label$38 }
	CALL _ZdlPv(*(($5 + [64])))
	
.LABEL $label$38
	$9 = *($4)
	if ( ($9 & [1]) ){ goto $label$58 }
	if ( uint_32($9 >> [1]) ){ goto $label$57 }
	goto $label$26 
	
.LABEL $label$58
	if ( (*($4 + [4]) == 0) ){ goto $label$26 }
	
.LABEL $label$57
	$9 = CALL $130([8265])
	if ( ($9 <= [8]) ){ goto $label$61 }
	CALL eosio_assert([0], [8659])
	goto $label$60 
	
.LABEL $label$61
	if ( ($9 == 0) ){ goto $label$59 }
	
.LABEL $label$60
	$2 = (int_64)0
	
.LOOP $label$62:
	$8 = *(($9 + [8264]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$63 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$63
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$62 }
	$12 = ((int_64)$2 << (int_64)8)
	goto $label$36 
	
.LABEL $label$59
	$12 = (int_64)0
	goto $label$36 
	
.LABEL $label$37
	CALL $108(($5 + [56]))
	
.LABEL $label$36
	$2 = (uint_64)$12 >> (uint_64)(int_64)8)
	$1 = ((int_64)$12 | (int_64)4)
	$9 = [0]
	
.LOOP $label$66:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$65 }
	$12 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$67 }
	$2 = $12
	$8 = $9
	$9 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$66 }
	goto $label$64 
	
.LABEL $label$67
	$2 = $12
	
.LOOP $label$68:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$65 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = ((int_32)$9 < (int_32)[6])
	$10 = ($9 + [1])
	$9 = $10
	if ( $8 ){ goto $label$68 }
	$9 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$66 }
	goto $label$64 
	
.LABEL $label$65
	CALL eosio_assert([0], [8865])
	
.LABEL $label$64
	$9 = *($4)
	if ( ($9 & [1]) ){ goto $label$70 }
	$9 = uint_32($9 >> [1])
	$8 = ($4 + [1])
	goto $label$69 
	
.LABEL $label$70
	$9 = *($4 + [4])
	$8 = *($4 + [8])
	
.LABEL $label$69
	$7 = ($0 + [152])
	*($5 + [52]) = $9
	*($5 + [48]) = $8
	*($5 + [8]) = *($5 + [48])
	$2 = *(CALL $68(($5 + [72]), ($5 + [8])))
	$8 = *(($0 + [180]))
	$10 = *(($0 + [176]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$74 }
	
.LOOP $label$76:
	$9 = ($8 + [-24])
	$3 = *($9)
	if ( ((int_64)*($3) == (int_64)$2) ){ goto $label$75 }
	$8 = $9
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$76 }
	goto $label$74 
	
.LABEL $label$75
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$74 }
	if ( ((int_32)*($3 + [8]) == (int_32)$7) ){ goto $label$73 }
	CALL eosio_assert([0], [9153])
	goto $label$73 
	
.LABEL $label$74
	$9 = CALL db_find_i64(*(($0 + [152])), *(($0 + [160])), (int_64)4148188400133193728, $2)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$72 }
	if ( ((int_32)*(CALL $61($7, $9) + [8]) == (int_32)$7) ){ goto $label$73 }
	CALL eosio_assert([0], [9153])
	
.LABEL $label$73
	$16 = (float_64)0.005
	goto $label$71 
	
.LABEL $label$72
	$16 = (float_64)0.002
	
.LABEL $label$71
	$16 = ((float_64)$16 * (float_64)(CASTING float_64)(int_64 $11))
	if ( ((float_64)(float_64)|$16| < (float_64)(float_64)9223372036854775808) ){ goto $label$78 }
	$11 = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 >= (int_64)1) ){ goto $label$77 }
	goto $label$26 
	
.LABEL $label$78
	$11 = (Rounds 0)($16)
	if ( ((int_64)$11 < (int_64)1) ){ goto $label$26 }
	
.LABEL $label$77
	*($5 + [128]) = (int_64)3617214756542218240
	*($5 + [120]) = *($0)
	$9 = *($4)
	if ( ($9 & [1]) ){ goto $label$80 }
	$9 = uint_32($9 >> [1])
	$8 = ($4 + [1])
	goto $label$79 
	
.LABEL $label$80
	$9 = *($4 + [4])
	$8 = *($4 + [8])
	
.LABEL $label$79
	*($5 + [36]) = $9
	*($5 + [32]) = $8
	*($5) = *($5 + [32])
	$10 = CALL $68(($5 + [40]), $5)
	*(($5 + [64])) = [0]
	*($5 + [56]) = (int_64)0
	$9 = CALL $130([8569])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$25 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$83 }
	*($5 + [56]) = ($9 << [1])
	$8 = (($5 + [56]) | [1])
	if ( $9 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$83
	$3 = (($9 + [16]) & [-16])
	$8 = CALL _Znwj($3)
	*($5 + [56]) = ($3 | [1])
	*($5 + [64]) = $8
	*($5 + [60]) = $9
	
.LABEL $label$82
	CALL memcpy($8, [8569], $9)
	
.LABEL $label$81
	*(($8 + $9)) = [0]
	*(($5 + [96])) = $1
	$9 = ($5 + [64])
	*(($5 + [112])) = *($9)
	*($9) = [0]
	*($5 + [88]) = $11
	*($5 + [72]) = *($0)
	*($5 + [80]) = *($10)
	*($5 + [104]) = *($5 + [56])
	*($5 + [56]) = (int_64)0
	$9 = CALL $43(($5 + [136]), ($5 + [120]), (int_64)6138663591592764928, (int_64)-3617168760277827584, ($5 + [72]))
	CALL $44($9)
	$8 = *($9 + [28])
	if ( ($8 == 0) ){ goto $label$84 }
	*(($9 + [32])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$84
	$8 = *($9 + [16])
	if ( ($8 == 0) ){ goto $label$85 }
	*(($9 + [20])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$85
	if ( ((*(($5 + [104])) & [1]) == 0) ){ goto $label$86 }
	CALL _ZdlPv(*(($5 + [112])))
	
.LABEL $label$86
	if ( ((*($5 + [56]) & [1]) == 0) ){ goto $label$26 }
	CALL _ZdlPv(*(($5 + [64])))
	
.LABEL $label$26
	$global$0 = ($5 + [208])
	return (unreachable)
	
.LABEL $label$25
	CALL $108(($5 + [56]))
	(unreachable)
}

int_32 .FUNC $17 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [320])
	$global$0 = $3
	*(($4 = $3) + [264]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $133($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [224]) + [24])) = (int_64)0
	*(($4 + [256])) = (int_64)0
	*($4 + [232]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [212]) = $2
	*($4 + [208]) = $2
	*($4 + [216]) = ($2 + $5)
	*($4 + [304]) = ($4 + [208])
	*($4 + [16]) = ($4 + [224])
	CALL $40(($4 + [16]), ($4 + [304]))
	*(($3 = ($4 + [8]))) = *($4 + [216])
	*($4) = *($4 + [208])
	$3 = *($3)
	*((($4 + [272]) + [8])) = $3
	*(($6 = (($4 + [288]) + [8]))) = $3
	$7 = *($4)
	*($4 + [288]) = $7
	*($4 + [272]) = $7
	$3 = *($6)
	*((($4 + [304]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [288])
	*($4 + [32]) = $1
	*($4 + [304]) = $1
	*(($4 + [56])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [176])) = $0
	*(($4 + [184])) = (int_64)-1
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [168]) = $0
	*(($4 + [200])) = [0]
	*(($4 + [192])) = (int_64)0
	*($4 + [308]) = ($4 + [264])
	*($4 + [304]) = ($4 + [16])
	CALL $41(($4 + [304]), ($4 + [224]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $136($2)
	
.LABEL $label$4
	CALL $25(($4 + [16]))
	if ( ((*($4 + [252]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [260])))
	
.LABEL $label$5
	$2 = *(($4 + [240]))
	if ( ($2 == 0) ){ goto $label$6 }
	*(($4 + [244])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$6
	$global$0 = ($4 + [320])
	return [1]
}

void .FUNC $10 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = ($0 + [152])
	$5 = *(($0 + [180]))
	$4 = *(($0 + [176]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$4 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [8]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [9153])
	goto $label$2 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($3), *(($0 + [160])), (int_64)4148188400133193728, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $61($3, $6)
	if ( ((int_32)*($7 + [8]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [9153])
	
.LABEL $label$2
	$6 = CALL db_next_i64(*($7 + [12]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	CALL $61($3, $6)
	
.LABEL $label$6
	CALL $63($3, $7)
	
.LABEL $label$1
	$global$0 = ($2 + [16])
}

int_32 .FUNC $11 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [208])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $133($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [200]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9144])
	
.LABEL $label$5
	CALL memcpy(($4 + [200]), $2, [8])
	*(($4 + [28])) = ($2 + [8])
	*(($4 + [32])) = $3
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*($4 + [160]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($4 + [200])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $136($2)
	
.LABEL $label$7
	CALL $25(($4 + [8]))
	$global$0 = ($4 + [208])
	return [1]
}

void .FUNC $12 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = ($0 + [152])
	$5 = *(($0 + [180]))
	$4 = *(($0 + [176]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [8]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9153])
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$6 = CALL db_find_i64(*($3), *(($0 + [160])), (int_64)4148188400133193728, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)*(CALL $61($3, $6) + [8]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9153])
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$5
	$8 = *($0)
	if ( ((int_64)*(($0 + [152])) == (int_64)CALL current_receiver()) ){ goto $label$6 }
	CALL eosio_assert([0], [9227])
	
.LABEL $label$6
	*(($6 = CALL _Znwj([24])) + [8]) = $3
	*($6) = $1
	CALL memcpy(($2 + [16]), $6, [8])
	$1 = *($6)
	$4 = CALL db_store_i64(*(($0 + [160])), (int_64)4148188400133193728, $8, $1, ($2 + [16]), [8])
	*($6 + [12]) = $4
	$5 = ($0 + [168])
	if ( (uint_64)($1 <= *($5)) ){ goto $label$7 }
	*($5) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($2 + [8]) = $6
	$1 = *($6)
	*($2 + [16]) = $1
	*($2 + [4]) = $4
	$7 = ($0 + [180])
	$5 = *($7)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [184]))) ){ goto $label$9 }
	*($5 + [8]) = $1
	*($5 + [16]) = $4
	*($2 + [8]) = [0]
	*($5) = $6
	*($7) = ($5 + [24])
	$6 = *($2 + [8])
	*($2 + [8]) = [0]
	if ( $6 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$9
	CALL $62(($0 + [176]), ($2 + [8]), ($2 + [16]), ($2 + [4]))
	$6 = *($2 + [8])
	*($2 + [8]) = [0]
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$8
	CALL _ZdlPv($6)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
}

void .FUNC $13 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_64 $18
	float_64 $19
	int_32 $20
	int_64 $21
	int_32 $22
	$4 = ($global$0 - [112])
	$global$0 = $4
	*($4 + [104]) = $1
	CALL require_auth(*($0))
	$5 = ($0 + [72])
	$7 = *(($0 + [100]))
	$6 = *(($0 + [96]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$8:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$7 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	if ( ((int_32)*($9 + [32]) == (int_32)$5) ){ goto $label$5 }
	CALL eosio_assert([0], [9153])
	goto $label$5 
	
.LABEL $label$6
	$8 = CALL db_find_i64(*($5), *(($0 + [80])), (int_64)-3922893409758478336, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$9 = CALL $32($5, $8)
	if ( ((int_32)*($9 + [32]) == (int_32)$5) ){ goto $label$5 }
	CALL eosio_assert([0], [9153])
	
.LABEL $label$5
	$10 = ($0 + [112])
	$7 = *(($0 + [140]))
	$6 = *(($0 + [136]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$10 }
	
.LOOP $label$12:
	$8 = ($7 + [-24])
	$11 = *($8)
	if ( ((int_64)*($11) == (int_64)$1) ){ goto $label$11 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$10 }
	if ( ((int_32)*($11 + [32]) == (int_32)$10) ){ goto $label$9 }
	CALL eosio_assert([0], [9153])
	goto $label$9 
	
.LABEL $label$10
	$8 = CALL db_find_i64(*($10), *(($0 + [120])), (int_64)4148315866783547392, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$13 }
	$11 = CALL $48($10, $8)
	if ( ((int_32)*($11 + [32]) == (int_32)$10) ){ goto $label$9 }
	CALL eosio_assert([0], [9153])
	goto $label$9 
	
.LABEL $label$13
	$1 = *($0)
	*($4 + [96]) = ($4 + [104])
	*($4) = $1
	if ( ((int_64)*(($0 + [112])) == (int_64)CALL current_receiver()) ){ goto $label$14 }
	CALL eosio_assert([0], [9227])
	
.LABEL $label$14
	*($4 + [24]) = $10
	*($4 + [28]) = ($4 + [96])
	*($4 + [32]) = $4
	*(($8 = CALL _Znwj([48]))) = (int_64)0
	*($8 + [8 align=4]) = (int_64)0
	*($8 + [16]) = [0]
	*($8 + [24 align=4]) = (int_64)0
	*($8 + [32]) = $10
	*($8 + [20]) = ($8 + [24])
	CALL $49(($4 + [24]), $8)
	*($4 + [80]) = $8
	$1 = *($8)
	*($4 + [24]) = $1
	$6 = *($8 + [36])
	*($4 + [64]) = $6
	$12 = ($0 + [140])
	$7 = *($12)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [144]))) ){ goto $label$17 }
	*($7 + [8]) = $1
	*($7 + [16]) = $6
	*($4 + [80]) = [0]
	*($7) = $8
	*($12) = ($7 + [24])
	$8 = *($4 + [80])
	*($4 + [80]) = [0]
	if ( $8 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $50(($0 + [136]), ($4 + [80]), ($4 + [24]), ($4 + [64]))
	$8 = *($4 + [80])
	*($4 + [80]) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $36(($8 + [20]), *(($8 + [24])))
	$7 = *($8 + [8])
	if ( ($7 == 0) ){ goto $label$18 }
	*(($8 + [12])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$18
	CALL _ZdlPv($8)
	
.LABEL $label$15
	$1 = *($4 + [104])
	$7 = *(($0 + [140]))
	$6 = *(($0 + [136]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$19 }
	
.LOOP $label$21:
	$8 = ($7 + [-24])
	$11 = *($8)
	if ( ((int_64)*($11) == (int_64)$1) ){ goto $label$20 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$19 }
	if ( ((int_32)*($11 + [32]) == (int_32)$10) ){ goto $label$9 }
	CALL eosio_assert([0], [9153])
	goto $label$9 
	
.LABEL $label$19
	$11 = [0]
	$8 = CALL db_find_i64(*(($0 + [112])), *(($0 + [120])), (int_64)4148315866783547392, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$9 }
	$11 = CALL $48($10, $8)
	if ( ((int_32)*($11 + [32]) == (int_32)$10) ){ goto $label$9 }
	CALL eosio_assert([0], [9153])
	
.LABEL $label$9
	$6 = [0]
	*($4 + [88]) = [0]
	*($4 + [80]) = (int_64)0
	$13 = (($4 + [64]) | [4])
	*($4 + [64]) = $13
	*($4 + [68 align=4]) = (int_64)0
	$12 = [0]
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)*($2 + [4])) ){ goto $label$22 }
	$12 = [0]
	$14 = ($2 + [4])
	
.LOOP $label$23:
	$7 = (((uint_32)*($8) % (uint_32)[13]) + [2])
	*($8) = $7
	if ( ((int_32)$7 != (int_32)[14]) ){ goto $label$26 }
	$7 = [1]
	*($8) = [1]
	goto $label$25 
	
.LABEL $label$26
	if ( ((uint_32)($7 & [255]) > (uint_32)[9]) ){ goto $label$24 }
	
.LABEL $label$25
	$12 = ($7 + $12)
	
.LABEL $label$24
	$8 = ($8 + [1])
	if ( ((int_32)$8 != (int_32)*($14)) ){ goto $label$23 }
	
.LABEL $label$22
	$14 = ((uint_32)($12 & [255]) % (uint_32)[10])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)*($3 + [4])) ){ goto $label$27 }
	$6 = [0]
	$12 = ($3 + [4])
	
.LOOP $label$28:
	$7 = (((uint_32)*($8) % (uint_32)[13]) + [2])
	*($8) = $7
	if ( ((int_32)$7 != (int_32)[14]) ){ goto $label$31 }
	$7 = [1]
	*($8) = [1]
	goto $label$30 
	
.LABEL $label$31
	if ( ((uint_32)($7 & [255]) > (uint_32)[9]) ){ goto $label$29 }
	
.LABEL $label$30
	$6 = ($7 + $6)
	
.LABEL $label$29
	$8 = ($8 + [1])
	if ( ((int_32)$8 != (int_32)*($12)) ){ goto $label$28 }
	
.LABEL $label$27
	$8 = ((uint_32)($6 & [255]) % (uint_32)[10])
	if ( ((uint_32)($14 & [255]) <= (uint_32)$8) ){ goto $label$37 }
	*($4 + [24]) = [0]
	$8 = *($4 + [84])
	if ( ((uint_32)$8 >= (uint_32)*(($4 + [88]))) ){ goto $label$36 }
	*($8) = [0]
	*($4 + [84]) = (*($4 + [84]) + [1])
	goto $label$32 
	
.LABEL $label$37
	if ( ((int_32)$8 != (int_32)$14) ){ goto $label$35 }
	*($4 + [24]) = [2]
	$8 = *($4 + [84])
	if ( ((uint_32)$8 >= (uint_32)*(($4 + [88]))) ){ goto $label$34 }
	*($8) = [2]
	*($4 + [84]) = (*($4 + [84]) + [1])
	goto $label$32 
	
.LABEL $label$36
	CALL $51(($4 + [80]), ($4 + [24]))
	goto $label$32 
	
.LABEL $label$35
	*($4 + [24]) = [1]
	$8 = *($4 + [84])
	if ( ((uint_32)$8 >= (uint_32)*(($4 + [88]))) ){ goto $label$33 }
	*($8) = [1]
	*($4 + [84]) = (*($4 + [84]) + [1])
	goto $label$32 
	
.LABEL $label$34
	CALL $51(($4 + [80]), ($4 + [24]))
	goto $label$32 
	
.LABEL $label$33
	CALL $51(($4 + [80]), ($4 + [24]))
	
.LABEL $label$32
	$8 = *($2)
	if ( ((int_32)*($8) != (int_32)*($8 + [1])) ){ goto $label$38 }
	*($4 + [24]) = [3]
	$8 = *($4 + [84])
	if ( ((uint_32)$8 >= (uint_32)*(($4 + [88]))) ){ goto $label$39 }
	*($8) = [3]
	*($4 + [84]) = (*($4 + [84]) + [1])
	goto $label$38 
	
.LABEL $label$39
	CALL $51(($4 + [80]), ($4 + [24]))
	
.LABEL $label$38
	$8 = *($3)
	if ( ((int_32)*($8) != (int_32)*($8 + [1])) ){ goto $label$41 }
	*($4 + [24]) = [4]
	$8 = *($4 + [84])
	if ( ((uint_32)$8 >= (uint_32)*(($4 + [88]))) ){ goto $label$40 }
	*($8) = [4]
	*($4 + [84]) = (*($4 + [84]) + [1])
	
.LABEL $label$41
	$3 = *($4 + [80])
	if ( ((int_32)$3 == (int_32)*($4 + [84])) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$40
	CALL $51(($4 + [80]), ($4 + [24]))
	$3 = *($4 + [80])
	if ( ((int_32)$3 != (int_32)*($4 + [84])) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$22 = [37]
	goto $label$1 
	
.LABEL $label$3
	$15 = ($9 + [24])
	$16 = ($9 + [20])
	
.LOOP $label$42:
	CALL prints([8626])
	CALL printi(*($3))
	CALL prints([8638])
	$7 = *($15)
	$8 = *($16)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$44 }
	$6 = *($3)
	
.LOOP $label$45:
	if ( ((int_32)($6 & [255]) == (int_32)*($8)) ){ goto $label$44 }
	$8 = ($8 + [16])
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$43 }
	$17 = (float_64)0
	$7 = *($3)
	if ( ((uint_32)$7 > (uint_32)[4]) ){ goto $label$46 }
	$17 = *((($7 << [3]) + [9728]))
	
.LABEL $label$46
	$7 = *($8 + [4])
	*($4 + [96]) = $7
	$2 = ($8 + [8])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$43 }
	
.LOOP $label$47:
	$8 = CALL $130([8395])
	if ( ($8 <= [8]) ){ goto $label$51 }
	CALL eosio_assert([0], [8659])
	goto $label$50 
	
.LABEL $label$51
	if ( ($8 == 0) ){ goto $label$49 }
	
.LABEL $label$50
	$1 = (int_64)0
	
.LOOP $label$52:
	$7 = *(($8 + [8394]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$53 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$53
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$52 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$48 
	
.LABEL $label$49
	$1 = (int_64)0
	
.LABEL $label$48
	*(($14 = (($4 + [24]) + [8]))) = $1
	*($4 + [24]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$56:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$55 }
	$18 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$57 }
	$1 = $18
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$56 }
	goto $label$54 
	
.LABEL $label$57
	$1 = $18
	
.LOOP $label$58:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$55 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$58 }
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$56 }
	goto $label$54 
	
.LABEL $label$55
	CALL eosio_assert([0], [8865])
	
.LABEL $label$54
	$8 = *($4 + [96])
	$19 = (CASTING float_64)(int_64 *(($8 + [24])))
	$19 = ((float_64)((float_64)$17 * (float_64)$19) + (float_64)$19)
	if ( ((float_64)(float_64)|$19| < (float_64)(float_64)9223372036854775808) ){ goto $label$62 }
	$18 = (int_64)-9223372036854775808
	*($4 + [24]) = (int_64)-9223372036854775808
	$12 = *($4 + [68])
	if ( ($12 == 0) ){ goto $label$61 }
	goto $label$60 
	
.LABEL $label$62
	$18 = (Rounds 0)($19)
	*($4 + [24]) = $18
	$12 = *($4 + [68])
	if ( $12 ){ goto $label$60 }
	
.LABEL $label$61
	*(($4 + [8])) = *($14)
	*($4) = *($4 + [24])
	$1 = *(($8 + [16]))
	$12 = $13
	$8 = $13
	$20 = [3]
	goto $label$59 
	
.LABEL $label$60
	$1 = *(($8 + [16]))
	$7 = $13
	$8 = $12
	
.LOOP $label$63:
	$6 = (uint_64)(*($8 + [16]) <= $1)
	$7 = ( $7 ? $8 : $6 )
	$8 = *(($8 + ($6 << [2])))
	if ( $8 ){ goto $label$63 }
	if ( ((int_32)$7 == (int_32)$13) ){ goto $label$69 }
	if ( ((uint_64)$1 >= (uint_64)*($7 + [16])) ){ goto $label$68 }
	
.LABEL $label$69
	*(($4 + [8])) = *($14)
	*($4) = *($4 + [24])
	$8 = $13
	$18 = *($12 + [16])
	if ( ((uint_64)$1 >= (uint_64)$18) ){ goto $label$66 }
	goto $label$67 
	
.LABEL $label$68
	if ( ((int_64)*($14) == (int_64)*($7 + [32])) ){ goto $label$70 }
	CALL eosio_assert([0], [8885])
	$18 = *($4 + [24])
	
.LABEL $label$70
	$1 = ((int_64)*($8) + (int_64)$18)
	*(($8 = ($7 + [24]))) = $1
	if ( ((int_64)$1 > (int_64)-4611686018427387904) ){ goto $label$71 }
	CALL eosio_assert([0], [8928])
	$1 = *($8)
	
.LABEL $label$71
	if ( ((int_64)$1 < (int_64)4611686018427387904) ){ goto $label$65 }
	CALL eosio_assert([0], [8947])
	goto $label$64 
	
.LABEL $label$67
	$20 = [14]
	goto $label$59 
	
.LABEL $label$66
	$20 = [2]
	goto $label$59 
	
.LABEL $label$65
	$20 = [4]
	goto $label$59 
	
.LABEL $label$64
	$20 = [4]
	
.LABEL $label$59
	
.LOOP $label$72:
	goto $label$99 
	
.LABEL $label$103
	$8 = $12
	$12 = $7
	$18 = *($12 + [16])
	if ( ((uint_64)$1 >= (uint_64)$18) ){ goto $label$87 }
	$20 = [14]
	goto $label$72 
	
.LABEL $label$102
	$7 = *($12)
	if ( $7 ){ goto $label$83 }
	goto $label$84 
	
.LABEL $label$101
	if ( ((uint_64)$18 >= (uint_64)$1) ){ goto $label$82 }
	$20 = [13]
	goto $label$72 
	
.LABEL $label$100
	$8 = ($12 + [4])
	$7 = *($12 + [4])
	if ( ($7 == 0) ){ goto $label$85 }
	$20 = [0]
	goto $label$72 
	
.LABEL $label$99
	$12 = $8
	goto $label$86 
	
.LABEL $label$98
	if ( *($8) ){ goto $label$81 }
	$20 = [10]
	goto $label$72 
	
.LABEL $label$97
	*(($7 = CALL _Znwj([40]))) = (int_64)0
	*($7 + [8]) = $12
	*($7 + [24]) = *($4)
	*(($7 + [32])) = *(($4 + [8]))
	*($8) = $7
	*($7 + [16]) = $1
	$6 = *(*($4 + [64]))
	if ( ($6 == 0) ){ goto $label$73 }
	$20 = [11]
	goto $label$72 
	
.LABEL $label$96
	*($4 + [64]) = $6
	$7 = *($8)
	$20 = [12]
	goto $label$72 
	
.LABEL $label$95
	CALL $52(*($4 + [68]), $7)
	*(($8 = (($4 + [64]) + [8]))) = (*($8) + [1])
	goto $label$80 
	
.LABEL $label$94
	$8 = $12
	if ( (*($8) == 0) ){ goto $label$79 }
	$20 = [4]
	goto $label$72 
	
.LABEL $label$93
	$1 = *($0)
	*($4 + [4]) = ($4 + [24])
	*($4) = ($4 + [96])
	CALL $53($5, $9, $1, $4)
	$6 = *($4 + [96])
	$8 = *($6 + [4])
	if ( ($8 == 0) ){ goto $label$76 }
	$20 = [5]
	goto $label$72 
	
.LABEL $label$92
	$7 = $8
	$8 = *($7)
	if ( $8 ){ goto $label$77 }
	goto $label$78 
	
.LABEL $label$91
	$7 = *($6 + [8])
	if ( ((int_32)*($7) == (int_32)$6) ){ goto $label$75 }
	$20 = [8]
	goto $label$72 
	
.LABEL $label$90
	$6 = ($6 + [8])
	$20 = [9]
	goto $label$72 
	
.LABEL $label$89
	$8 = *($6)
	$6 = ($8 + [8])
	$7 = *($8 + [8])
	if ( ((int_32)$8 != (int_32)*($7)) ){ goto $label$74 }
	$20 = [6]
	goto $label$72 
	
.LABEL $label$88
	*($4 + [96]) = $7
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$47 }
	goto $label$43 
	
.LABEL $label$87
	$20 = [2]
	goto $label$72 
	
.LABEL $label$86
	$20 = [1]
	goto $label$72 
	
.LABEL $label$85
	$20 = [3]
	goto $label$72 
	
.LABEL $label$84
	$20 = [15]
	goto $label$72 
	
.LABEL $label$83
	$20 = [1]
	goto $label$72 
	
.LABEL $label$82
	$20 = [3]
	goto $label$72 
	
.LABEL $label$81
	$20 = [4]
	goto $label$72 
	
.LABEL $label$80
	$20 = [4]
	goto $label$72 
	
.LABEL $label$79
	$20 = [10]
	goto $label$72 
	
.LABEL $label$78
	$20 = [6]
	goto $label$72 
	
.LABEL $label$77
	$20 = [5]
	goto $label$72 
	
.LABEL $label$76
	$20 = [7]
	goto $label$72 
	
.LABEL $label$75
	$20 = [6]
	goto $label$72 
	
.LABEL $label$74
	$20 = [9]
	goto $label$72 
	
.LABEL $label$73
	$20 = [12]
	goto $label$72 
	
.LABEL $label$43
	if ( ((int_32)*($3) != (int_32)[2]) ){ goto $label$104 }
	$12 = *($16)
	$8 = $12
	$7 = *($15)
	if ( ((int_32)$12 == (int_32)$7) ){ goto $label$106 }
	$8 = $12
	
.LOOP $label$107:
	if ( (*($8) == 0) ){ goto $label$106 }
	$8 = ($8 + [16])
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$107 }
	goto $label$105 
	
.LABEL $label$106
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$105 }
	$6 = *($8 + [4])
	*($4) = $6
	$14 = ($8 + [8])
	if ( ((int_32)$6 == (int_32)$14) ){ goto $label$105 }
	
.LOOP $label$108:
	$1 = *($0)
	*($4 + [28]) = ($4 + [64])
	*($4 + [24]) = $4
	CALL $54($5, $9, $1, ($4 + [24]))
	$6 = *($4)
	$8 = *($6 + [4])
	if ( ($8 == 0) ){ goto $label$110 }
	
.LOOP $label$111:
	$7 = $8
	$8 = *($7)
	if ( $8 ){ goto $label$111 }
	goto $label$109 
	
.LABEL $label$110
	$7 = *($6 + [8])
	if ( ((int_32)*($7) == (int_32)$6) ){ goto $label$109 }
	$6 = ($6 + [8])
	
.LOOP $label$112:
	$8 = *($6)
	$6 = ($8 + [8])
	$7 = *($8 + [8])
	if ( ((int_32)$8 != (int_32)*($7)) ){ goto $label$112 }
	
.LABEL $label$109
	*($4) = $7
	if ( ((int_32)$7 != (int_32)$14) ){ goto $label$108 }
	$7 = *($15)
	$12 = *($16)
	
.LABEL $label$105
	if ( ((int_32)$12 == (int_32)$7) ){ goto $label$104 }
	
.LOOP $label$114:
	if ( ((int_32)*($12) == (int_32)[1]) ){ goto $label$113 }
	$12 = ($12 + [16])
	if ( ((int_32)$7 != (int_32)$12) ){ goto $label$114 }
	goto $label$104 
	
.LABEL $label$113
	if ( ((int_32)$7 == (int_32)$12) ){ goto $label$104 }
	$8 = *(($12 + [4]))
	*($4) = $8
	if ( ((int_32)($8 + [-8]) == (int_32)$12) ){ goto $label$104 }
	
.LOOP $label$115:
	$1 = *($0)
	*($4 + [28]) = ($4 + [64])
	*($4 + [24]) = $4
	CALL $55($5, $9, $1, ($4 + [24]))
	$6 = *($4)
	$8 = *($6 + [4])
	if ( ($8 == 0) ){ goto $label$117 }
	
.LOOP $label$118:
	$7 = $8
	$8 = *($7)
	if ( $8 ){ goto $label$118 }
	goto $label$116 
	
.LABEL $label$117
	$7 = *($6 + [8])
	if ( ((int_32)*($7) == (int_32)$6) ){ goto $label$116 }
	$6 = ($6 + [8])
	
.LOOP $label$119:
	$8 = *($6)
	$6 = ($8 + [8])
	$7 = *($8 + [8])
	if ( ((int_32)$8 != (int_32)*($7)) ){ goto $label$119 }
	
.LABEL $label$116
	*($4) = $7
	if ( ((int_32)($7 + [-8]) != (int_32)$12) ){ goto $label$115 }
	
.LABEL $label$104
	$3 = ($3 + [1])
	if ( ((int_32)$3 != (int_32)*($4 + [84])) ){ goto $label$42 }
	
.LABEL $label$2
	$1 = *($0)
	*($4 + [28]) = ($4 + [64])
	*($4 + [24]) = ($4 + [80])
	if ( $11 ){ goto $label$120 }
	CALL eosio_assert([0], [9278])
	
.LABEL $label$120
	CALL $56($10, $11, $1, ($4 + [24]))
	$1 = *($4 + [104])
	$7 = *(($0 + [100]))
	$12 = *(($0 + [96]))
	if ( ((int_32)$12 == (int_32)$7) ){ goto $label$122 }
	
.LOOP $label$124:
	$8 = ($7 + [-24])
	$6 = *($8)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$123 }
	$7 = $8
	if ( ((int_32)$12 != (int_32)$8) ){ goto $label$124 }
	goto $label$122 
	
.LABEL $label$123
	if ( ((int_32)$12 == (int_32)$7) ){ goto $label$122 }
	if ( ((int_32)*($6 + [32]) == (int_32)$5) ){ goto $label$121 }
	CALL eosio_assert([0], [9153])
	goto $label$121 
	
.LABEL $label$122
	$6 = [0]
	$8 = CALL db_find_i64(*(($0 + [72])), *(($0 + [80])), (int_64)-3922893409758478336, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$121 }
	$6 = CALL $32($5, $8)
	if ( ((int_32)*($6 + [32]) == (int_32)$5) ){ goto $label$121 }
	CALL eosio_assert([0], [9153])
	
.LABEL $label$121
	if ( ((int_32)*(($6 + [24])) == (int_32)*($6 + [20])) ){ goto $label$125 }
	$1 = *($0)
	if ( $6 ){ goto $label$126 }
	CALL eosio_assert([0], [9278])
	
.LABEL $label$126
	CALL $57($5, $6, $1)
	
.LABEL $label$125
	$21 = *($0)
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	$8 = (*($4 + [84]) - *($4 + [80]))
	if ( ($8 == 0) ){ goto $label$131 }
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$130 }
	$7 = CALL _Znwj($8)
	*(($4 + [8])) = ($7 + $8)
	*($4) = $7
	*($4 + [4]) = $7
	$6 = *($4 + [80])
	$8 = (*($4 + [84]) - $6)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$131 }
	CALL memcpy($7, $6, $8)
	*($4 + [4]) = (*($4 + [4]) + $8)
	
.LABEL $label$131
	*(($9 = ($4 + [16]))) = (int_64)0
	*($4 + [12]) = $9
	$14 = *($4 + [64])
	if ( ((int_32)$14 == (int_32)$13) ){ goto $label$127 }
	$12 = [0]
	$5 = ($4 + [12])
	$2 = ($4 + [20])
	$0 = ($14 + [16])
	if ( ((int_32)$9 != (int_32)$9) ){ goto $label$128 }
	goto $label$129 
	
.LABEL $label$130
	CALL $120($4)
	
.LABEL $label$129
	$22 = [28]
	goto $label$1 
	
.LABEL $label$128
	$22 = [3]
	goto $label$1 
	
.LABEL $label$127
	$22 = [29]
	
.LABEL $label$1
	
.LOOP $label$132:
	goto $label$178 
	
.LABEL $label$205
	$12 = *(($4 + [16]))
	$14 = $7
	$0 = ($14 + [16])
	if ( ((int_32)*($5) == (int_32)$9) ){ goto $label$167 }
	$22 = [3]
	goto $label$132 
	
.LABEL $label$204
	$7 = $12
	$6 = $9
	if ( ($12 == 0) ){ goto $label$150 }
	$22 = [4]
	goto $label$132 
	
.LABEL $label$203
	$8 = $7
	$7 = *($8 + [4])
	if ( $7 ){ goto $label$151 }
	goto $label$152 
	
.LABEL $label$202
	$8 = *($6 + [8])
	$7 = ((int_32)*($8) == (int_32)$6)
	$6 = $8
	if ( $7 ){ goto $label$149 }
	$22 = [5]
	goto $label$132 
	
.LABEL $label$201
	$1 = *($0)
	if ( (uint_64)(*($8 + [16]) <= $1) ){ goto $label$166 }
	$22 = [6]
	goto $label$132 
	
.LABEL $label$200
	if ( ($12 == 0) ){ goto $label$148 }
	$22 = [7]
	goto $label$132 
	
.LABEL $label$199
	$7 = $9
	$18 = *($12 + [16])
	if ( ((uint_64)$1 >= (uint_64)$18) ){ goto $label$146 }
	goto $label$147 
	
.LABEL $label$198
	$7 = $12
	$12 = $8
	$18 = *($12 + [16])
	if ( ((uint_64)$1 >= (uint_64)$18) ){ goto $label$163 }
	$22 = [20]
	goto $label$132 
	
.LABEL $label$197
	$8 = *($12)
	if ( $8 ){ goto $label$138 }
	goto $label$139 
	
.LABEL $label$196
	if ( ((uint_64)$18 >= (uint_64)$1) ){ goto $label$145 }
	$22 = [17]
	goto $label$132 
	
.LABEL $label$195
	$7 = ($12 + [4])
	$8 = *($12 + [4])
	if ( ($8 == 0) ){ goto $label$140 }
	$22 = [18]
	goto $label$132 
	
.LABEL $label$194
	$12 = $7
	goto $label$162 
	
.LABEL $label$193
	$8 = $9
	$22 = [24]
	goto $label$132 
	
.LABEL $label$192
	if ( ($12 == 0) ){ goto $label$137 }
	$22 = [25]
	goto $label$132 
	
.LABEL $label$191
	$12 = ($8 + [4])
	if ( (*($12) == 0) ){ goto $label$142 }
	$22 = [10]
	goto $label$132 
	
.LABEL $label$190
	$8 = *($14 + [4])
	if ( $8 ){ goto $label$159 }
	$22 = [11]
	goto $label$132 
	
.LABEL $label$189
	$7 = *($14 + [8])
	if ( ((int_32)*($7) == (int_32)$14) ){ goto $label$156 }
	$22 = [12]
	goto $label$132 
	
.LABEL $label$188
	$6 = ($14 + [8])
	$22 = [13]
	goto $label$132 
	
.LABEL $label$187
	$8 = *($6)
	$6 = ($8 + [8])
	$7 = *($8 + [8])
	if ( ((int_32)$8 != (int_32)*($7)) ){ goto $label$154 }
	goto $label$155 
	
.LABEL $label$186
	$8 = $9
	$12 = $9
	if ( *($12) ){ goto $label$143 }
	goto $label$144 
	
.LABEL $label$185
	$12 = $9
	$8 = $9
	goto $label$165 
	
.LABEL $label$184
	$8 = $12
	goto $label$164 
	
.LABEL $label$183
	$8 = $12
	$12 = $7
	if ( *($12) ){ goto $label$160 }
	goto $label$161 
	
.LABEL $label$182
	$8 = $12
	$12 = $7
	$22 = [14]
	goto $label$132 
	
.LABEL $label$181
	*((($7 = CALL _Znwj([40])) + [32])) = *(($0 + [16]))
	*(($7 + [24])) = *(($0 + [8]))
	*($7 + [16]) = *($0)
	*($7) = (int_64)0
	*($7 + [8]) = $8
	*($12) = $7
	$8 = *(*($5))
	if ( ($8 == 0) ){ goto $label$141 }
	$22 = [15]
	goto $label$132 
	
.LABEL $label$180
	*($5) = $8
	$7 = *($12)
	$22 = [16]
	goto $label$132 
	
.LABEL $label$179
	CALL $52(*(($4 + [16])), $7)
	*($2) = (*($2) + [1])
	$8 = *($14 + [4])
	if ( ($8 == 0) ){ goto $label$157 }
	$22 = [0]
	goto $label$132 
	
.LABEL $label$178
	$7 = $8
	$8 = *($7)
	if ( $8 ){ goto $label$158 }
	$22 = [1]
	goto $label$132 
	
.LABEL $label$177
	if ( ((int_32)$7 != (int_32)$13) ){ goto $label$153 }
	$22 = [29]
	goto $label$132 
	
.LABEL $label$176
	*($4 + [32]) = (int_64)4148225520019963904
	*($4 + [24]) = $21
	*(($8 = CALL _Znwj([16]))) = $21
	*($8 + [8]) = (int_64)3617214756542218240
	$7 = ($8 + [16])
	*(($4 + [48])) = $7
	*(($4 + [44])) = $7
	*($4 + [40]) = $8
	CALL $58(($4 + [52]), $4)
	CALL $44(($4 + [24]))
	$8 = *($4 + [52])
	if ( ($8 == 0) ){ goto $label$136 }
	$22 = [30]
	goto $label$132 
	
.LABEL $label$175
	*(($4 + [56])) = $8
	CALL _ZdlPv($8)
	$22 = [31]
	goto $label$132 
	
.LABEL $label$174
	$8 = *($4 + [40])
	if ( ($8 == 0) ){ goto $label$135 }
	$22 = [32]
	goto $label$132 
	
.LABEL $label$173
	*(($4 + [44])) = $8
	CALL _ZdlPv($8)
	$22 = [33]
	goto $label$132 
	
.LABEL $label$172
	CALL $36(($4 + [12]), *(($4 + [16])))
	$8 = *($4)
	if ( ($8 == 0) ){ goto $label$134 }
	$22 = [34]
	goto $label$132 
	
.LABEL $label$171
	*($4 + [4]) = $8
	CALL _ZdlPv($8)
	$22 = [35]
	goto $label$132 
	
.LABEL $label$170
	CALL $36(($4 + [64]), *($4 + [68]))
	$8 = *($4 + [80])
	if ( ($8 == 0) ){ goto $label$133 }
	$22 = [36]
	goto $label$132 
	
.LABEL $label$169
	*($4 + [84]) = $8
	CALL _ZdlPv($8)
	$22 = [37]
	goto $label$132 
	
.LABEL $label$168
	$global$0 = ($4 + [112])
	return 
	
.LABEL $label$167
	$22 = [28]
	goto $label$132 
	
.LABEL $label$166
	$22 = [24]
	goto $label$132 
	
.LABEL $label$165
	$22 = [14]
	goto $label$132 
	
.LABEL $label$164
	$22 = [14]
	goto $label$132 
	
.LABEL $label$163
	$22 = [8]
	goto $label$132 
	
.LABEL $label$162
	$22 = [19]
	goto $label$132 
	
.LABEL $label$161
	$22 = [14]
	goto $label$132 
	
.LABEL $label$160
	$22 = [10]
	goto $label$132 
	
.LABEL $label$159
	$22 = [0]
	goto $label$132 
	
.LABEL $label$158
	$22 = [0]
	goto $label$132 
	
.LABEL $label$157
	$22 = [11]
	goto $label$132 
	
.LABEL $label$156
	$22 = [1]
	goto $label$132 
	
.LABEL $label$155
	$22 = [1]
	goto $label$132 
	
.LABEL $label$154
	$22 = [13]
	goto $label$132 
	
.LABEL $label$153
	$22 = [2]
	goto $label$132 
	
.LABEL $label$152
	$22 = [5]
	goto $label$132 
	
.LABEL $label$151
	$22 = [4]
	goto $label$132 
	
.LABEL $label$150
	$22 = [27]
	goto $label$132 
	
.LABEL $label$149
	$22 = [27]
	goto $label$132 
	
.LABEL $label$148
	$22 = [23]
	goto $label$132 
	
.LABEL $label$147
	$22 = [20]
	goto $label$132 
	
.LABEL $label$146
	$22 = [8]
	goto $label$132 
	
.LABEL $label$145
	$22 = [9]
	goto $label$132 
	
.LABEL $label$144
	$22 = [14]
	goto $label$132 
	
.LABEL $label$143
	$22 = [10]
	goto $label$132 
	
.LABEL $label$142
	$22 = [14]
	goto $label$132 
	
.LABEL $label$141
	$22 = [16]
	goto $label$132 
	
.LABEL $label$140
	$22 = [22]
	goto $label$132 
	
.LABEL $label$139
	$22 = [21]
	goto $label$132 
	
.LABEL $label$138
	$22 = [19]
	goto $label$132 
	
.LABEL $label$137
	$22 = [26]
	goto $label$132 
	
.LABEL $label$136
	$22 = [31]
	goto $label$132 
	
.LABEL $label$135
	$22 = [33]
	goto $label$132 
	
.LABEL $label$134
	$22 = [35]
	goto $label$132 
	
.LABEL $label$133
	$22 = [37]
	goto $label$132 
	$20
	(unreachable)
	$22
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8981])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [8981])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $18 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$3 = ($global$0 - [128])
	$global$0 = $3
	*($3 + [120]) = $2
	CALL require_auth(*($0))
	$4 = ($0 + [72])
	$6 = *(($0 + [100]))
	$5 = *(($0 + [96]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$7:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$6 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)*($8 + [32]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [9153])
	$9 = ($8 + [12])
	$7 = *($9)
	if ( $7 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$7 = CALL db_find_i64(*($4), *(($0 + [80])), (int_64)-3922893409758478336, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = CALL $32($4, $7)
	if ( ((int_32)*($8 + [32]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [9153])
	
.LABEL $label$4
	$9 = ($8 + [12])
	$7 = *($9)
	if ( ($7 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = $9
	
.LOOP $label$8:
	$5 = (uint_64)(*($7 + [16]) <= $2)
	$6 = ( $6 ? $7 : $5 )
	$7 = *(($7 + ($5 << [2])))
	if ( $7 ){ goto $label$8 }
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$2 }
	if ( ((uint_64)*($6 + [16]) > (uint_64)$2) ){ goto $label$2 }
	$10 = ($0 + [32])
	$5 = *(($0 + [60]))
	$9 = *(($0 + [56]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$12:
	$7 = ($5 + [-24])
	$11 = *($7)
	if ( ((int_64)*($11) == (int_64)$2) ){ goto $label$11 }
	$5 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$10 }
	if ( ((int_32)*($11 + [24]) == (int_32)$10) ){ goto $label$9 }
	CALL eosio_assert([0], [9153])
	goto $label$9 
	
.LABEL $label$10
	$11 = [0]
	$7 = CALL db_find_i64(*($10), *(($0 + [40])), (int_64)-4157798822388432896, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	$11 = CALL $26($10, $7)
	if ( ((int_32)*($11 + [24]) == (int_32)$10) ){ goto $label$9 }
	CALL eosio_assert([0], [9153])
	
.LABEL $label$9
	$7 = CALL $130([8265])
	if ( ($7 <= [8]) ){ goto $label$16 }
	CALL eosio_assert([0], [8659])
	goto $label$15 
	
.LABEL $label$16
	if ( ($7 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$2 = (int_64)0
	
.LOOP $label$17:
	$5 = *(($7 + [8264]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$18
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$17 }
	$12 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$13 
	
.LABEL $label$14
	$12 = (int_64)4
	
.LABEL $label$13
	$2 = (uint_64)$12 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$1 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$22 }
	$2 = $1
	$5 = $7
	$7 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$22
	$2 = $1
	
.LOOP $label$23:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$20 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$5 = ((int_32)$7 < (int_32)[6])
	$9 = ($7 + [1])
	$7 = $9
	if ( $5 ){ goto $label$23 }
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	CALL eosio_assert([0], [8865])
	
.LABEL $label$19
	if ( ($11 == 0) ){ goto $label$25 }
	$2 = *($11 + [8])
	$7 = CALL db_next_i64(*($11 + [28]), ($3 + [16]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$26 }
	CALL $26($10, $7)
	
.LABEL $label$26
	CALL $42($10, $11)
	goto $label$24 
	
.LABEL $label$25
	$2 = (int_64)0
	
.LABEL $label$24
	$2 = ((int_64)*($6 + [24]) + (int_64)$2)
	if ( ((int_64)$2 < (int_64)1) ){ goto $label$27 }
	*($3 + [72]) = (int_64)3617214756542218240
	*($3 + [64]) = *($0)
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$7 = CALL $130([8625])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$30 }
	*($3) = ($7 << [1])
	$6 = ($3 | [1])
	if ( $7 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$5 = (($7 + [16]) & [-16])
	$6 = CALL _Znwj($5)
	*($3) = ($5 | [1])
	*($3 + [8]) = $6
	*($3 + [4]) = $7
	
.LABEL $label$29
	CALL memcpy($6, [8625], $7)
	
.LABEL $label$28
	*(($6 + $7)) = [0]
	*(($3 + [40])) = $12
	$7 = ($3 + [8])
	*(($3 + [56])) = *($7)
	*($7) = [0]
	*($3 + [32]) = $2
	*($3 + [16]) = *($0)
	*($3 + [24]) = *($3 + [120])
	*($3 + [48]) = *($3)
	*($3) = (int_64)0
	$7 = CALL $43(($3 + [80]), ($3 + [64]), (int_64)6138663591592764928, (int_64)-3617168760277827584, ($3 + [16]))
	CALL $44($7)
	$6 = *($7 + [28])
	if ( ($6 == 0) ){ goto $label$31 }
	*(($7 + [32])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$31
	$6 = *($7 + [16])
	if ( ($6 == 0) ){ goto $label$32 }
	*(($7 + [20])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$32
	if ( ((*(($3 + [48])) & [1]) == 0) ){ goto $label$33 }
	CALL _ZdlPv(*(($3 + [56])))
	
.LABEL $label$33
	if ( ((*($3) & [1]) == 0) ){ goto $label$27 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$27
	$2 = *($0)
	*($3 + [16]) = ($3 + [120])
	CALL $45($4, $8, $2, ($3 + [16]))
	
.LABEL $label$2
	$global$0 = ($3 + [128])
	return (unreachable)
	
.LABEL $label$1
	CALL $108($3)
}

int_32 .FUNC $19 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [208])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $133($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [200]) = (int_64)0
	*($4 + [192]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9144])
	
.LABEL $label$5
	$8 = ($2 + $7)
	CALL memcpy(($4 + [192]), $2, [8])
	$9 = ($2 + [8])
	$3 = (($4 + [192]) + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9144])
	
.LABEL $label$6
	CALL memcpy($3, $9, [8])
	*(($4 + [24])) = $8
	*(($4 + [40])) = $0
	*(($4 + [48])) = (int_64)-1
	*(($4 + [56])) = (int_64)0
	*(($4 + [64])) = [0]
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*($4 + [16]) = $2
	*(($4 + [20])) = ($2 + [16])
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [32]) = $0
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*($4 + [152]) = $0
	$8 = ($4 + int_32($5 >> [1]))
	$0 = *($3)
	$1 = *($4 + [192])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($8) + $6))
	
.LABEL $label$7
	CALL void $8((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $136($2)
	
.LABEL $label$8
	CALL $25($4)
	$global$0 = ($4 + [208])
	return [1]
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = *($1)
	$4 = *($1 + [4])
	$6 = ($4 - $5)
	$7 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	$6 = ( $3 ? ($6 + $3) : ((int_32)$5 == (int_32)$4) )
	$7 = *(($1 + [20]))
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	$8 = ($1 + [16])
	$4 = *($1 + [12])
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$3 }
	
.LOOP $label$4:
	$5 = $4
	$3 = *($5 + [4])
	if ( ($3 == 0) ){ goto $label$6 }
	
.LOOP $label$7:
	$4 = $3
	$3 = *($4)
	if ( $3 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$4 = *($5 + [8])
	if ( ((int_32)*($4) == (int_32)$5) ){ goto $label$5 }
	$5 = ($5 + [8])
	
.LOOP $label$8:
	$3 = *($5)
	$5 = ($3 + [8])
	$4 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($4)) ){ goto $label$8 }
	
.LABEL $label$5
	$6 = ($6 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $70($0, $6)
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$4 = [0]
	$3 = [0]
	
.LABEL $label$9
	*($2 + [4]) = $3
	*($2) = $3
	*($2 + [8]) = $4
	CALL $96($2, $1)
	CALL $90($2, ($1 + [12]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	$2 = ($global$0 - [32])
	$global$0 = $2
	CALL $36($1, *($1 + [4]))
	$3 = ($1 + [4])
	*($1) = $3
	$4 = (int_64)0
	*($1 + [4 align=4]) = (int_64)0
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($5 <= *($6)) ){ goto $label$2 }
	CALL eosio_assert([0], [9149])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	$8 = *($5)
	$9 = ($5 + [1])
	*(($0 + [4])) = $9
	$5 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $5)))
	$7 = ($5 + [7])
	$5 = $9
	if ( ($8 & [128]) ){ goto $label$1 }
	$10 = (CASTING uint_32)(uint_64 $4)
	if ( ($10 == 0) ){ goto $label$3 }
	$11 = ($1 + [4])
	$12 = [0]
	
.LOOP $label$4:
	*($2 + [16]) = (int_64)0
	*(($6 = ($2 + [8]))) = (int_64)0
	*($2) = (int_64)0
	$8 = ($0 + [8])
	if ( ((uint_32)(*($8) - $9) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9144])
	$9 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [16]), $9, [8])
	$5 = (*($7) + [8])
	*(($7 = ($0 + [4]))) = $5
	if ( ((uint_32)(*($8) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9144])
	$5 = *($7)
	
.LABEL $label$6
	CALL memcpy($2, $5, [8])
	$5 = (*($7) + [8])
	*($7) = $5
	*($2 + [24]) = (int_64)0
	if ( ((uint_32)(*($8) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9144])
	$5 = *($7)
	
.LABEL $label$7
	CALL memcpy(($2 + [24]), $5, [8])
	*($6) = *($2 + [24])
	*($7) = (*($7) + [8])
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$11 }
	$9 = $11
	$13 = *($5 + [16])
	$4 = *($2 + [16])
	if ( ((uint_64)$4 >= (uint_64)$13) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$11
	$5 = $3
	$9 = $3
	$14 = [3]
	goto $label$8 
	
.LABEL $label$10
	$14 = [10]
	goto $label$8 
	
.LABEL $label$9
	$14 = [2]
	
.LABEL $label$8
	
.LOOP $label$13:
	goto $label$31 
	
.LABEL $label$35
	$9 = $5
	$5 = $8
	$13 = *($5 + [16])
	if ( ((uint_64)$4 >= (uint_64)$13) ){ goto $label$24 }
	$14 = [10]
	goto $label$13 
	
.LABEL $label$34
	$8 = *($5)
	if ( $8 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$33
	if ( ((uint_64)$13 >= (uint_64)$4) ){ goto $label$19 }
	$14 = [9]
	goto $label$13 
	
.LABEL $label$32
	$9 = ($5 + [4])
	$8 = *($5 + [4])
	if ( ($8 == 0) ){ goto $label$22 }
	$14 = [0]
	goto $label$13 
	
.LABEL $label$31
	$5 = $9
	goto $label$23 
	
.LABEL $label$30
	if ( (*($9) == 0) ){ goto $label$18 }
	$14 = [4]
	goto $label$13 
	
.LABEL $label$29
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$16 }
	goto $label$3 
	
.LABEL $label$28
	$9 = $5
	if ( *($9) ){ goto $label$17 }
	$14 = [6]
	goto $label$13 
	
.LABEL $label$27
	*(($8 = CALL _Znwj([40]))) = (int_64)0
	*($8 + [8]) = $5
	*($8 + [24]) = *($2)
	*(($8 + [32])) = *($6)
	*($9) = $8
	*($8 + [16]) = *($2 + [16])
	$5 = *(*($1))
	if ( ($5 == 0) ){ goto $label$14 }
	$14 = [7]
	goto $label$13 
	
.LABEL $label$26
	*($1) = $5
	$8 = *($9)
	$14 = [8]
	goto $label$13 
	
.LABEL $label$25
	CALL $52(*(($1 + [4])), $8)
	*(($5 = ($1 + [8]))) = (*($5) + [1])
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$15 }
	goto $label$3 
	
.LABEL $label$24
	$14 = [2]
	goto $label$13 
	
.LABEL $label$23
	$14 = [1]
	goto $label$13 
	
.LABEL $label$22
	$14 = [3]
	goto $label$13 
	
.LABEL $label$21
	$14 = [11]
	goto $label$13 
	
.LABEL $label$20
	$14 = [1]
	goto $label$13 
	
.LABEL $label$19
	$14 = [3]
	goto $label$13 
	
.LABEL $label$18
	$14 = [6]
	goto $label$13 
	
.LABEL $label$17
	$14 = [4]
	goto $label$13 
	
.LABEL $label$16
	$14 = [5]
	goto $label$13 
	
.LABEL $label$15
	$14 = [5]
	goto $label$13 
	
.LABEL $label$14
	$14 = [8]
	goto $label$13 
	
.LABEL $label$12
	$9 = *($7)
	goto $label$4 
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	$14
	return $0
}

void .FUNC $50 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $120($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $36(($1 + [20]), *(($1 + [24])))
	$2 = *($1 + [8])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ($2 - $3)
	$5 = ($4 + [1])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = [2147483647]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)$7 > (uint_32)[1073741822]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj($6)
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $120($0)
	
.LABEL $label$1
	*(($4 = ($5 + $4))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + $6)
	$5 = ($4 + [1])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $2
	if ( $2 ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($1 + [8])
	if ( *($3 + [12]) ){ goto $label$3 }
	$4 = ($3 + [12])
	$2 = *($3 + [8])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$2 }
	if ( *($5 + [12]) ){ goto $label$2 }
	$3 = ($5 + [12])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [12]) ){ goto $label$1 }
	$3 = ($5 + [12])
	
.LABEL $label$5
	*($4) = [1]
	*($2 + [12]) = ((int_32)$2 == (int_32)$0)
	*($3) = [1]
	$1 = $2
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	if ( ((int_32)*($3) != (int_32)$1) ){ goto $label$7 }
	$5 = *($1 + [4])
	*($3) = $5
	if ( ($5 == 0) ){ goto $label$8 }
	*($5 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$8
	*(($5 = ($1 + [8]))) = $2
	*((($0 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$3) ))) = $1
	*($2) = $1
	*(($1 + [4])) = $3
	$4 = ($1 + [12])
	$2 = *($5)
	
.LABEL $label$7
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2 + [4])
	$5 = *($3)
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$9 }
	*($5 + [8]) = $2
	
.LABEL $label$9
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*($3) = $2
	return 
	
.LABEL $label$1
	if ( ((int_32)*($3) == (int_32)$1) ){ goto $label$10 }
	$5 = *($3 + [4])
	$1 = *($5)
	*($3 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$11
	*($5 + [8]) = $2
	*((($1 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($1) == (int_32)$3) ))) = $5
	*($2) = $5
	*($5) = $3
	$4 = ($5 + [12])
	$2 = *($5 + [8])
	
.LABEL $label$10
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2)
	$5 = *($3 + [4])
	*($2) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*(($3 + [4])) = $2
}

void .FUNC $53 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9313])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9359])
	
.LABEL $label$2
	$6 = *($1)
	$7 = ($1 + [12])
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$3 }
	$9 = *(($3 + [4]))
	$10 = *(*(*($3)) + [16])
	$3 = $7
	
.LOOP $label$4:
	$11 = (uint_64)(*($8 + [16]) <= $10)
	$3 = ( $3 ? $8 : $11 )
	$8 = *(($8 + ($11 << [2])))
	if ( $8 ){ goto $label$4 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$3 }
	if ( (uint_64)($10 <= *($3 + [16])) ){ goto $label$3 }
	if ( ((int_64)*($9 + [8]) == (int_64)*($3 + [32])) ){ goto $label$5 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$5
	$10 = ((int_64)*($8) + (int_64)*($9))
	*(($8 = ($3 + [24]))) = $10
	if ( ((int_64)$10 > (int_64)-4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [8928])
	$10 = *($8)
	
.LABEL $label$6
	if ( ((int_64)$10 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [8947])
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$7 }
	CALL eosio_assert([0], [9410])
	
.LABEL $label$7
	*($5) = [0]
	*($5 + [8]) = $5
	*($5 + [16]) = $1
	$7 = ($1 + [8])
	*($5 + [20]) = $7
	$9 = ($1 + [20])
	*($5 + [24]) = $9
	CALL $89(($5 + [16]), ($5 + [8]))
	$3 = *($5)
	if ( ($3 <= [513]) ){ goto $label$9 }
	$8 = CALL $133($3)
	goto $label$8 
	
.LABEL $label$9
	$8 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $8
	
.LABEL $label$8
	*($5 + [20]) = $8
	*($5 + [16]) = $8
	*($5 + [24]) = ($8 + $3)
	$11 = $8
	if ( ((int_32)$3 > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [8981])
	$11 = *($5 + [20])
	
.LABEL $label$10
	CALL memcpy($11, $1, [8])
	*($5 + [20]) = ($11 + [8])
	CALL $90(($5 + [16]), $7)
	CALL $91(($5 + [16]), $9)
	CALL db_update_i64(*($1 + [36]), $2, $8, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$13 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $136($8)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$11 }
	
.LABEL $label$12
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [32])
	return 
	
.LABEL $label$11
	$global$0 = ($5 + [32])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9313])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9359])
	
.LABEL $label$2
	$6 = *($1)
	$7 = ($1 + [12])
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$3 }
	$9 = *(*($3))
	$10 = *($9 + [16])
	$11 = $7
	
.LOOP $label$4:
	$12 = (uint_64)(*($8 + [16]) <= $10)
	$11 = ( $11 ? $8 : $12 )
	$8 = *(($8 + ($12 << [2])))
	if ( $8 ){ goto $label$4 }
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$3 }
	if ( (uint_64)($10 <= *($11 + [16])) ){ goto $label$3 }
	if ( ((int_64)*(($9 + [32])) == (int_64)*($11 + [32])) ){ goto $label$5 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$5
	$10 = ((int_64)*($8) + (int_64)*(($9 + [24])))
	*(($8 = ($11 + [24]))) = $10
	if ( ((int_64)$10 > (int_64)-4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [8928])
	$10 = *($8)
	
.LABEL $label$6
	if ( ((int_64)$10 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [8947])
	
.LABEL $label$3
	$9 = *($3 + [4])
	$7 = ($9 + [4])
	$13 = *(*($3))
	$10 = *($13 + [16])
	$3 = *($9 + [4])
	if ( ($3 == 0) ){ goto $label$16 }
	$11 = $7
	$8 = $3
	
.LOOP $label$17:
	$12 = (uint_64)(*($8 + [16]) <= $10)
	$11 = ( $11 ? $8 : $12 )
	$8 = *(($8 + ($12 << [2])))
	if ( $8 ){ goto $label$17 }
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$18 }
	if ( ((uint_64)$10 >= (uint_64)*($11 + [16])) ){ goto $label$15 }
	
.LABEL $label$18
	*(($5 + [8])) = *(($13 + [32]))
	*($5) = *(($13 + [24]))
	$7 = ($9 + [4])
	$14 = *($3 + [16])
	if ( ((uint_64)$10 >= (uint_64)$14) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$16
	*(($5 + [8])) = *(($13 + [32]))
	*($5) = *(($13 + [24]))
	$11 = $5
	$3 = $7
	if ( *($7) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$15
	if ( ((int_64)*(($13 + [32])) == (int_64)*($11 + [32])) ){ goto $label$19 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$19
	$10 = ((int_64)*($8) + (int_64)*(($13 + [24])))
	*(($8 = ($11 + [24]))) = $10
	if ( ((int_64)$10 > (int_64)-4611686018427387904) ){ goto $label$20 }
	CALL eosio_assert([0], [8928])
	$10 = *($8)
	
.LABEL $label$20
	if ( ((int_64)$10 < (int_64)4611686018427387904) ){ goto $label$12 }
	CALL eosio_assert([0], [8947])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$14
	$15 = [20]
	goto $label$7 
	
.LABEL $label$13
	$15 = [2]
	goto $label$7 
	
.LABEL $label$12
	$15 = [4]
	goto $label$7 
	
.LABEL $label$11
	$15 = [16]
	goto $label$7 
	
.LABEL $label$10
	$15 = [4]
	goto $label$7 
	
.LABEL $label$9
	$15 = [6]
	goto $label$7 
	
.LABEL $label$8
	$15 = [5]
	
.LABEL $label$7
	
.LOOP $label$21:
	goto $label$56 
	
.LABEL $label$60
	$7 = $3
	$3 = $8
	$14 = *($3 + [16])
	if ( ((uint_64)$10 >= (uint_64)$14) ){ goto $label$38 }
	$15 = [20]
	goto $label$21 
	
.LABEL $label$59
	$8 = *($3)
	if ( $8 ){ goto $label$34 }
	goto $label$35 
	
.LABEL $label$58
	if ( ((uint_64)$14 >= (uint_64)$10) ){ goto $label$33 }
	$15 = [19]
	goto $label$21 
	
.LABEL $label$57
	$7 = ($3 + [4])
	$8 = *($3 + [4])
	if ( ($8 == 0) ){ goto $label$36 }
	$15 = [0]
	goto $label$21 
	
.LABEL $label$56
	$3 = $7
	goto $label$37 
	
.LABEL $label$55
	$11 = $5
	if ( *($7) ){ goto $label$31 }
	goto $label$32 
	
.LABEL $label$54
	$11 = $5
	$7 = $3
	if ( *($7) ){ goto $label$30 }
	$15 = [16]
	goto $label$21 
	
.LABEL $label$53
	*(($8 = CALL _Znwj([40]))) = (int_64)0
	*($8 + [8]) = $3
	*($8 + [24]) = *($11)
	*(($8 + [32])) = *(($11 + [8]))
	*($7) = $8
	*($8 + [16]) = $10
	$11 = *(*($9))
	if ( ($11 == 0) ){ goto $label$22 }
	$15 = [17]
	goto $label$21 
	
.LABEL $label$52
	*($9) = $11
	$8 = *($7)
	$15 = [18]
	goto $label$21 
	
.LABEL $label$51
	CALL $52(*($9 + [4]), $8)
	*($9 + [8]) = (*($9 + [8]) + [1])
	$15 = [4]
	goto $label$21 
	
.LABEL $label$50
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$29 }
	$15 = [5]
	goto $label$21 
	
.LABEL $label$49
	CALL eosio_assert([0], [9410])
	$15 = [6]
	goto $label$21 
	
.LABEL $label$48
	*($5 + [16]) = [0]
	*($5 + [24]) = ($5 + [16])
	*($5) = $1
	$3 = ($1 + [8])
	*($5 + [4]) = $3
	$7 = ($1 + [20])
	*($5 + [8]) = $7
	CALL $89($5, ($5 + [24]))
	$11 = *($5 + [16])
	if ( ($11 <= [513]) ){ goto $label$28 }
	$15 = [15]
	goto $label$21 
	
.LABEL $label$47
	$8 = CALL $133($11)
	goto $label$27 
	
.LABEL $label$46
	$8 = ($4 - (($11 + [15]) & [-16]))
	$global$0 = $8
	$15 = [8]
	goto $label$21 
	
.LABEL $label$45
	*($5 + [4]) = $8
	*($5) = $8
	*($5 + [8]) = ($8 + $11)
	$12 = $8
	if ( ((int_32)$11 > (int_32)[7]) ){ goto $label$26 }
	$15 = [14]
	goto $label$21 
	
.LABEL $label$44
	CALL eosio_assert([0], [8981])
	$12 = *($5 + [4])
	$15 = [9]
	goto $label$21 
	
.LABEL $label$43
	CALL memcpy($12, $1, [8])
	*($5 + [4]) = ($12 + [8])
	CALL $90($5, $3)
	CALL $91($5, $7)
	CALL db_update_i64(*($1 + [36]), $2, $8, $11)
	if ( ((uint_32)$11 >= (uint_32)[513]) ){ goto $label$25 }
	$15 = [10]
	goto $label$21 
	
.LABEL $label$42
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$24 }
	$15 = [12]
	goto $label$21 
	
.LABEL $label$41
	$global$0 = ($5 + [32])
	return 
	
.LABEL $label$40
	CALL $136($8)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$23 }
	$15 = [11]
	goto $label$21 
	
.LABEL $label$39
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [32])
	return 
	
.LABEL $label$38
	$15 = [2]
	goto $label$21 
	
.LABEL $label$37
	$15 = [1]
	goto $label$21 
	
.LABEL $label$36
	$15 = [3]
	goto $label$21 
	
.LABEL $label$35
	$15 = [21]
	goto $label$21 
	
.LABEL $label$34
	$15 = [1]
	goto $label$21 
	
.LABEL $label$33
	$15 = [3]
	goto $label$21 
	
.LABEL $label$32
	$15 = [16]
	goto $label$21 
	
.LABEL $label$31
	$15 = [4]
	goto $label$21 
	
.LABEL $label$30
	$15 = [4]
	goto $label$21 
	
.LABEL $label$29
	$15 = [6]
	goto $label$21 
	
.LABEL $label$28
	$15 = [7]
	goto $label$21 
	
.LABEL $label$27
	$15 = [8]
	goto $label$21 
	
.LABEL $label$26
	$15 = [9]
	goto $label$21 
	
.LABEL $label$25
	$15 = [13]
	goto $label$21 
	
.LABEL $label$24
	$15 = [11]
	goto $label$21 
	
.LABEL $label$23
	$15 = [12]
	goto $label$21 
	
.LABEL $label$22
	$15 = [18]
	goto $label$21 
	$15
}

void .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1) = *(*($3))
	$4 = *($0)
	$6 = *($3 + [8])
	*((($5 = $2) + [8])) = *(($6 + [8]))
	*($5) = *($6)
	$7 = *(*($3 + [4]))
	$6 = ($1 + [12])
	$3 = *($6)
	if ( ($3 == 0) ){ goto $label$4 }
	$6 = ($1 + [12])
	$8 = *($3 + [16])
	if ( ((uint_64)$7 >= (uint_64)$8) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$3 = $6
	$10 = [3]
	goto $label$1 
	
.LABEL $label$3
	$10 = [18]
	goto $label$1 
	
.LABEL $label$2
	$10 = [2]
	
.LABEL $label$1
	
.LOOP $label$5:
	goto $label$37 
	
.LABEL $label$41
	$6 = $3
	$3 = $9
	$8 = *($3 + [16])
	if ( ((uint_64)$7 >= (uint_64)$8) ){ goto $label$21 }
	$10 = [18]
	goto $label$5 
	
.LABEL $label$40
	$9 = *($3)
	if ( $9 ){ goto $label$17 }
	goto $label$18 
	
.LABEL $label$39
	if ( ((uint_64)$8 >= (uint_64)$7) ){ goto $label$16 }
	$10 = [17]
	goto $label$5 
	
.LABEL $label$38
	$6 = ($3 + [4])
	$9 = *($3 + [4])
	if ( ($9 == 0) ){ goto $label$19 }
	$10 = [0]
	goto $label$5 
	
.LABEL $label$37
	$3 = $6
	goto $label$20 
	
.LABEL $label$36
	$9 = ($1 + [8])
	if ( *($6) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$35
	$9 = ($1 + [8])
	$6 = $3
	if ( *($6) ){ goto $label$13 }
	$10 = [14]
	goto $label$5 
	
.LABEL $label$34
	*(($11 = CALL _Znwj([40]))) = (int_64)0
	*($11 + [8]) = $3
	*($11 + [24]) = *($5)
	*(($11 + [32])) = *(($5 + [8]))
	*($6) = $11
	*($11 + [16]) = $7
	$3 = *(*($9))
	if ( ($3 == 0) ){ goto $label$6 }
	$10 = [15]
	goto $label$5 
	
.LABEL $label$33
	*($9) = $3
	$11 = *($6)
	$10 = [16]
	goto $label$5 
	
.LABEL $label$32
	CALL $52(*(($1 + [12])), $11)
	*(($3 = ($1 + [16]))) = (*($3) + [1])
	$10 = [4]
	goto $label$5 
	
.LABEL $label$31
	*($5 + [16]) = [0]
	*($5 + [24]) = ($5 + [16])
	*($5 + [4]) = $9
	*($5) = $1
	$12 = ($1 + [20])
	*($5 + [8]) = $12
	CALL $89($5, ($5 + [24]))
	$6 = *($5 + [16])
	if ( ($6 <= [513]) ){ goto $label$12 }
	$10 = [13]
	goto $label$5 
	
.LABEL $label$30
	$3 = CALL $133($6)
	goto $label$11 
	
.LABEL $label$29
	$3 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $3
	$10 = [6]
	goto $label$5 
	
.LABEL $label$28
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $6)
	$11 = $3
	if ( ((int_32)$6 > (int_32)[7]) ){ goto $label$10 }
	$10 = [12]
	goto $label$5 
	
.LABEL $label$27
	CALL eosio_assert([0], [8981])
	$11 = *($5 + [4])
	$10 = [7]
	goto $label$5 
	
.LABEL $label$26
	CALL memcpy($11, $1, [8])
	*($5 + [4]) = ($11 + [8])
	CALL $90($5, $9)
	CALL $91($5, $12)
	$7 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)-3922893409758478336, *(*($0 + [8])), $7, $3, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$9 }
	$10 = [8]
	goto $label$5 
	
.LABEL $label$25
	if ( ((uint_64)$7 >= (uint_64)*($4 + [16])) ){ goto $label$8 }
	$10 = [10]
	goto $label$5 
	
.LABEL $label$24
	$global$0 = ($5 + [32])
	return 
	
.LABEL $label$23
	CALL $136($3)
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$7 }
	$10 = [9]
	goto $label$5 
	
.LABEL $label$22
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [32])
	return 
	
.LABEL $label$21
	$10 = [2]
	goto $label$5 
	
.LABEL $label$20
	$10 = [1]
	goto $label$5 
	
.LABEL $label$19
	$10 = [3]
	goto $label$5 
	
.LABEL $label$18
	$10 = [19]
	goto $label$5 
	
.LABEL $label$17
	$10 = [1]
	goto $label$5 
	
.LABEL $label$16
	$10 = [3]
	goto $label$5 
	
.LABEL $label$15
	$10 = [14]
	goto $label$5 
	
.LABEL $label$14
	$10 = [4]
	goto $label$5 
	
.LABEL $label$13
	$10 = [4]
	goto $label$5 
	
.LABEL $label$12
	$10 = [5]
	goto $label$5 
	
.LABEL $label$11
	$10 = [6]
	goto $label$5 
	
.LABEL $label$10
	$10 = [7]
	goto $label$5 
	
.LABEL $label$9
	$10 = [11]
	goto $label$5 
	
.LABEL $label$8
	$10 = [9]
	goto $label$5 
	
.LABEL $label$7
	$10 = [10]
	goto $label$5 
	
.LABEL $label$6
	$10 = [16]
	goto $label$5 
	$10
}

void .FUNC $56 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9313])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9359])
	
.LABEL $label$2
	$6 = *($1)
	$8 = *($3)
	$7 = ($1 + [8])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	CALL $97($7, *($8), *($8 + [4]))
	
.LABEL $label$3
	$3 = *($3 + [4])
	$9 = ($1 + [20])
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$4 }
	CALL $98($9, *($3), ($3 + [4]))
	
.LABEL $label$4
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [9410])
	
.LABEL $label$5
	$10 = *($1 + [8])
	$8 = *(($1 + [12]))
	$11 = ($8 - $10)
	$12 = (CASTING uint_64)(uint_32 $11)
	$3 = [8]
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$6 }
	$11 = ( $3 ? ($11 + $3) : ((int_32)$10 == (int_32)$8) )
	$12 = *(($1 + [28]))
	
.LOOP $label$7:
	$11 = ($11 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$7 }
	$13 = ($1 + [24])
	$8 = *($1 + [20])
	if ( ((int_32)$8 == (int_32)$13) ){ goto $label$8 }
	
.LOOP $label$9:
	$10 = $8
	$3 = *($10 + [4])
	if ( ($3 == 0) ){ goto $label$11 }
	
.LOOP $label$12:
	$8 = $3
	$3 = *($8)
	if ( $3 ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	$8 = *($10 + [8])
	if ( ((int_32)*($8) == (int_32)$10) ){ goto $label$10 }
	$10 = ($10 + [8])
	
.LOOP $label$13:
	$3 = *($10)
	$10 = ($3 + [8])
	$8 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($8)) ){ goto $label$13 }
	
.LABEL $label$10
	$11 = ($11 + [24])
	if ( ((int_32)$8 != (int_32)$13) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($11 <= [513]) ){ goto $label$15 }
	$3 = CALL $133($11)
	goto $label$14 
	
.LABEL $label$15
	$3 = ($4 - (($11 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$14
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $11)
	$8 = $3
	if ( ((int_32)$11 > (int_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [8981])
	$8 = *($5 + [4])
	
.LABEL $label$16
	CALL memcpy($8, $1, [8])
	*($5 + [4]) = ($8 + [8])
	CALL $96($5, $7)
	CALL $90($5, $9)
	CALL db_update_i64(*($1 + [36]), $2, $3, $11)
	if ( ((uint_32)$11 >= (uint_32)[513]) ){ goto $label$19 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $136($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$17 }
	
.LABEL $label$18
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$17
	$global$0 = ($5 + [16])
}

void .FUNC $57 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [32])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9313])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9359])
	
.LABEL $label$2
	$5 = *($1)
	$8 = *($1 + [20])
	$6 = ($1 + [24])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$4 }
	
.LOOP $label$5:
	CALL $36(($7 + [-12]), *(($7 + [-8])))
	$7 = ($7 + [-16])
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$5 }
	*(($1 + [24])) = $8
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9410])
	goto $label$3 
	
.LABEL $label$4
	*($6) = $8
	
.LABEL $label$3
	*($4) = [0]
	*($4 + [8]) = $4
	*($4 + [16]) = $1
	$6 = ($1 + [8])
	*($4 + [20]) = $6
	$9 = ($1 + [20])
	*($4 + [24]) = $9
	CALL $89(($4 + [16]), ($4 + [8]))
	$8 = *($4)
	if ( ($8 <= [513]) ){ goto $label$7 }
	$7 = CALL $133($8)
	goto $label$6 
	
.LABEL $label$7
	$7 = ($3 - (($8 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$6
	*($4 + [20]) = $7
	*($4 + [16]) = $7
	*($4 + [24]) = ($7 + $8)
	$3 = $7
	if ( ((int_32)$8 > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [8981])
	$3 = *($4 + [20])
	
.LABEL $label$8
	CALL memcpy($3, $1, [8])
	*($4 + [20]) = ($3 + [8])
	CALL $90(($4 + [16]), $6)
	CALL $91(($4 + [16]), $9)
	CALL db_update_i64(*($1 + [36]), $2, $7, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$5 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $136($7)
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [32])
	return 
	
.LABEL $label$9
	$global$0 = ($4 + [32])
}

void .FUNC $116 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $117($1, $0, [8965])
	CALL $119()
	(unreachable)
}

void .FUNC $117 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL $130($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $4)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$4 }
	$6 = *($1)
	$7 = *($1 + [8])
	if ( ((uint_32)$5 > (uint_32)[10]) ){ goto $label$7 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = (($5 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*(($0 + [8])) = $5
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL memcpy($5, ( $7 ? ($1 + [1]) : ($6 & [1]) ), $3)
	
.LABEL $label$5
	*(($5 + $3)) = [0]
	$1 = *($0)
	$5 = ($1 & [1])
	if ( $5 ){ goto $label$9 }
	$3 = [10]
	$1 = uint_32($1 >> [1])
	if ( (([10] - $1) <= $4) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$9
	$1 = *(($0 + [4]))
	$3 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($3 - $1) >= (uint_32)$4) ){ goto $label$3 }
	
.LABEL $label$8
	CALL $111($0, $3, (($1 + $4) - $3), $1, $1, [0], $4, $2)
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	if ( ($4 == 0) ){ goto $label$2 }
	$3 = ( *(($0 + [8])) ? ($0 + [1]) : $5 )
	CALL memcpy(($3 + $1), $2, $4)
	$1 = ($1 + $4)
	if ( (*($0) & [1]) ){ goto $label$1 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($0 + [4])) = $1
	*(($3 + $1)) = [0]
	(unreachable)
}

int_32 .FUNC $114 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$global$0 = $3
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$4 = CALL $130([8269])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$6 }
	*($3) = ($4 << [1])
	$5 = ($3 | [1])
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3) = ($6 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $4
	
.LABEL $label$5
	CALL memcpy($5, [8269], $4)
	
.LABEL $label$4
	*(($5 + $4)) = [0]
	*($3 + [12]) = [0]
	$4 = *($0 + [8])
	$5 = *($0)
	$6 = *(CALL $121())
	*(CALL $121()) = [0]
	$4 = ( $4 ? ($0 + [1]) : ($5 & [1]) )
	$0 = CALL $128($4, ($3 + [12]), $2)
	$5 = CALL $121()
	$2 = *($5)
	*($5) = $6
	if ( ((int_32)$2 == (int_32)[34]) ){ goto $label$2 }
	$5 = *($3 + [12])
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($5 - $4)
	
.LABEL $label$7
	if ( ((*($3) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$8
	$global$0 = ($3 + [16])
	return $0
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $115($3)
	
.LABEL $label$1
	CALL $116($3)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $35 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$8 = ($0 + [8])
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($4 + [24])) = $8
	$8 = [0]
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$5 = ($5 << [1])
	$5 = ( $7 ? $5 : ($5 <= $7) )
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = $5
	goto $label$4 
	
.LABEL $label$5
	*(($4 + [24])) = $8
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$8 = [178956970]
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$8 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $120($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*($4 + [8]) = $5
	*(($4 + [20])) = ($5 + ((int_32)$8 * (int_32)[24]))
	*(($5 = ($5 + ((int_32)$6 * (int_32)[24])))) = $7
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($4 + [12]) = $5
	$1 = ($5 + [24])
	*($4 + [16]) = $1
	$3 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$8 = *($4 + [12])
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$2 = *($1)
	*($1) = [0]
	*(($8 + [-24])) = $2
	*(($8 + [-8])) = *(($5 + [-8]))
	*(($8 + [-16])) = *(($5 + [-16]))
	$8 = (*($4 + [12]) + [-24])
	*($4 + [12]) = $8
	$5 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$8 }
	$5 = *(($0 + [4]))
	$3 = *($0)
	$1 = *(($4 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$8 = *($4 + [12])
	
.LABEL $label$6
	*($0) = $8
	*(($0 + [4])) = $1
	*((($4 + [8]) + [8])) = $5
	*($4 + [12]) = $3
	$5 = ($0 + [8])
	$8 = *($5)
	*($5) = *($9)
	*($9) = $8
	*($4 + [8]) = $3
	CALL $88(($4 + [8]))
	$global$0 = ($4 + [32])
	(unreachable)
}

void .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

int_32 .FUNC $113 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$3 }
	$4 = ($0 + [1])
	$5 = [-1]
	$0 = uint_32($3 >> [1])
	if ( ((uint_32)$0 <= (uint_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [8])
	$5 = [-1]
	$0 = *($0 + [4])
	if ( ((uint_32)$0 > (uint_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	$0 = ($0 - $2)
	if ( ($0 == 0) ){ goto $label$4 }
	$0 = CALL $129(($4 + $2), ($1 & [255]), $0)
	return ( ($0 - $4) ? [-1] : $0 )
	
.LABEL $label$4
	return ( ([0] - $4) ? [-1] : [0] )
}

int_32 .FUNC $110 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $111 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL _ZdlPv($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $118 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC $119 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC $29 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $120($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = *(*($4 + [4]))
	$4 = CALL $130([8395])
	if ( ($4 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8659])
	goto $label$3 
	
.LABEL $label$4
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = (int_64)0
	
.LOOP $label$5:
	$8 = *(($4 + [8394]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$6
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$5 }
	$9 = ((int_64)$7 << (int_64)8)
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)0
	
.LABEL $label$1
	if ( (uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$7 }
	CALL eosio_assert([0], [8816])
	
.LABEL $label$7
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$7 = $10
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$7 = $10
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$11 = ($4 + [1])
	$4 = $11
	if ( $8 ){ goto $label$12 }
	$4 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8865])
	
.LABEL $label$8
	*($1 + [8]) = $6
	*(($1 + [16])) = $9
	$8 = $2
	$4 = ($8 + [-32])
	$global$0 = $4
	*($3 + [4]) = $4
	*($3) = $4
	*($3 + [8]) = ($8 + [-8])
	CALL $85($3, $1)
	$7 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($5 + [8]), (int_64)-4157798822388432896, *(*($0 + [8])), $7, $4, [24])
	if ( (uint_64)($7 <= *($5 + [16])) ){ goto $label$13 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	$global$0 = ($3 + [16])
}

void .FUNC $55 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9313])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9359])
	
.LABEL $label$2
	$6 = *($1)
	$7 = ($1 + [12])
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$3 }
	$9 = *(*($3))
	$10 = *($9 + [16])
	$11 = $7
	
.LOOP $label$4:
	$12 = (uint_64)(*($8 + [16]) <= $10)
	$11 = ( $11 ? $8 : $12 )
	$8 = *(($8 + ($12 << [2])))
	if ( $8 ){ goto $label$4 }
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$3 }
	if ( (uint_64)($10 <= *($11 + [16])) ){ goto $label$3 }
	if ( ((int_64)*(($9 + [32])) == (int_64)*($11 + [32])) ){ goto $label$5 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$5
	$10 = ((int_64)*($8) + (int_64)*(($9 + [24])))
	*(($8 = ($11 + [24]))) = $10
	if ( ((int_64)$10 > (int_64)-4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [8928])
	$10 = *($8)
	
.LABEL $label$6
	if ( ((int_64)$10 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [8947])
	
.LABEL $label$3
	$9 = *($3 + [4])
	$7 = ($9 + [4])
	$13 = *(*($3))
	$10 = *($13 + [16])
	$3 = *($9 + [4])
	if ( ($3 == 0) ){ goto $label$16 }
	$11 = $7
	$8 = $3
	
.LOOP $label$17:
	$12 = (uint_64)(*($8 + [16]) <= $10)
	$11 = ( $11 ? $8 : $12 )
	$8 = *(($8 + ($12 << [2])))
	if ( $8 ){ goto $label$17 }
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$18 }
	if ( ((uint_64)$10 >= (uint_64)*($11 + [16])) ){ goto $label$15 }
	
.LABEL $label$18
	*(($5 + [8])) = *(($13 + [32]))
	*($5) = *(($13 + [24]))
	$7 = ($9 + [4])
	$14 = *($3 + [16])
	if ( ((uint_64)$10 >= (uint_64)$14) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$16
	*(($5 + [8])) = *(($13 + [32]))
	*($5) = *(($13 + [24]))
	$11 = $5
	$3 = $7
	if ( *($7) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$15
	if ( ((int_64)*(($13 + [32])) == (int_64)*($11 + [32])) ){ goto $label$19 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$19
	$10 = ((int_64)*($8) + (int_64)*(($13 + [24])))
	*(($8 = ($11 + [24]))) = $10
	if ( ((int_64)$10 > (int_64)-4611686018427387904) ){ goto $label$20 }
	CALL eosio_assert([0], [8928])
	$10 = *($8)
	
.LABEL $label$20
	if ( ((int_64)$10 < (int_64)4611686018427387904) ){ goto $label$12 }
	CALL eosio_assert([0], [8947])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$14
	$15 = [20]
	goto $label$7 
	
.LABEL $label$13
	$15 = [2]
	goto $label$7 
	
.LABEL $label$12
	$15 = [4]
	goto $label$7 
	
.LABEL $label$11
	$15 = [16]
	goto $label$7 
	
.LABEL $label$10
	$15 = [4]
	goto $label$7 
	
.LABEL $label$9
	$15 = [6]
	goto $label$7 
	
.LABEL $label$8
	$15 = [5]
	
.LABEL $label$7
	
.LOOP $label$21:
	goto $label$56 
	
.LABEL $label$60
	$7 = $3
	$3 = $8
	$14 = *($3 + [16])
	if ( ((uint_64)$10 >= (uint_64)$14) ){ goto $label$38 }
	$15 = [20]
	goto $label$21 
	
.LABEL $label$59
	$8 = *($3)
	if ( $8 ){ goto $label$34 }
	goto $label$35 
	
.LABEL $label$58
	if ( ((uint_64)$14 >= (uint_64)$10) ){ goto $label$33 }
	$15 = [19]
	goto $label$21 
	
.LABEL $label$57
	$7 = ($3 + [4])
	$8 = *($3 + [4])
	if ( ($8 == 0) ){ goto $label$36 }
	$15 = [0]
	goto $label$21 
	
.LABEL $label$56
	$3 = $7
	goto $label$37 
	
.LABEL $label$55
	$11 = $5
	if ( *($7) ){ goto $label$31 }
	goto $label$32 
	
.LABEL $label$54
	$11 = $5
	$7 = $3
	if ( *($7) ){ goto $label$30 }
	$15 = [16]
	goto $label$21 
	
.LABEL $label$53
	*(($8 = CALL _Znwj([40]))) = (int_64)0
	*($8 + [8]) = $3
	*($8 + [24]) = *($11)
	*(($8 + [32])) = *(($11 + [8]))
	*($7) = $8
	*($8 + [16]) = $10
	$11 = *(*($9))
	if ( ($11 == 0) ){ goto $label$22 }
	$15 = [17]
	goto $label$21 
	
.LABEL $label$52
	*($9) = $11
	$8 = *($7)
	$15 = [18]
	goto $label$21 
	
.LABEL $label$51
	CALL $52(*($9 + [4]), $8)
	*($9 + [8]) = (*($9 + [8]) + [1])
	$15 = [4]
	goto $label$21 
	
.LABEL $label$50
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$29 }
	$15 = [5]
	goto $label$21 
	
.LABEL $label$49
	CALL eosio_assert([0], [9410])
	$15 = [6]
	goto $label$21 
	
.LABEL $label$48
	*($5 + [16]) = [0]
	*($5 + [24]) = ($5 + [16])
	*($5) = $1
	$3 = ($1 + [8])
	*($5 + [4]) = $3
	$7 = ($1 + [20])
	*($5 + [8]) = $7
	CALL $89($5, ($5 + [24]))
	$11 = *($5 + [16])
	if ( ($11 <= [513]) ){ goto $label$28 }
	$15 = [15]
	goto $label$21 
	
.LABEL $label$47
	$8 = CALL $133($11)
	goto $label$27 
	
.LABEL $label$46
	$8 = ($4 - (($11 + [15]) & [-16]))
	$global$0 = $8
	$15 = [8]
	goto $label$21 
	
.LABEL $label$45
	*($5 + [4]) = $8
	*($5) = $8
	*($5 + [8]) = ($8 + $11)
	$12 = $8
	if ( ((int_32)$11 > (int_32)[7]) ){ goto $label$26 }
	$15 = [14]
	goto $label$21 
	
.LABEL $label$44
	CALL eosio_assert([0], [8981])
	$12 = *($5 + [4])
	$15 = [9]
	goto $label$21 
	
.LABEL $label$43
	CALL memcpy($12, $1, [8])
	*($5 + [4]) = ($12 + [8])
	CALL $90($5, $3)
	CALL $91($5, $7)
	CALL db_update_i64(*($1 + [36]), $2, $8, $11)
	if ( ((uint_32)$11 >= (uint_32)[513]) ){ goto $label$25 }
	$15 = [10]
	goto $label$21 
	
.LABEL $label$42
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$24 }
	$15 = [12]
	goto $label$21 
	
.LABEL $label$41
	$global$0 = ($5 + [32])
	return 
	
.LABEL $label$40
	CALL $136($8)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$23 }
	$15 = [11]
	goto $label$21 
	
.LABEL $label$39
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [32])
	return 
	
.LABEL $label$38
	$15 = [2]
	goto $label$21 
	
.LABEL $label$37
	$15 = [1]
	goto $label$21 
	
.LABEL $label$36
	$15 = [3]
	goto $label$21 
	
.LABEL $label$35
	$15 = [21]
	goto $label$21 
	
.LABEL $label$34
	$15 = [1]
	goto $label$21 
	
.LABEL $label$33
	$15 = [3]
	goto $label$21 
	
.LABEL $label$32
	$15 = [16]
	goto $label$21 
	
.LABEL $label$31
	$15 = [4]
	goto $label$21 
	
.LABEL $label$30
	$15 = [4]
	goto $label$21 
	
.LABEL $label$29
	$15 = [6]
	goto $label$21 
	
.LABEL $label$28
	$15 = [7]
	goto $label$21 
	
.LABEL $label$27
	$15 = [8]
	goto $label$21 
	
.LABEL $label$26
	$15 = [9]
	goto $label$21 
	
.LABEL $label$25
	$15 = [13]
	goto $label$21 
	
.LABEL $label$24
	$15 = [11]
	goto $label$21 
	
.LABEL $label$23
	$15 = [12]
	goto $label$21 
	
.LABEL $label$22
	$15 = [18]
	goto $label$21 
	$15
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $136($0)
	
.LABEL $label$1
}

void .FUNC $21 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	float_64 $17
	$5 = ($global$0 - [224])
	$global$0 = $5
	CALL require_auth($2)
	$6 = ($0 + [72])
	$8 = *(($0 + [100]))
	$7 = *(($0 + [96]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$2 }
	
.LOOP $label$4:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$3 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$2 }
	if ( ((int_32)*($10 + [32]) == (int_32)$6) ){ goto $label$1 }
	CALL eosio_assert([0], [9153])
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	$9 = CALL db_find_i64(*($6), *(($0 + [80])), (int_64)-3922893409758478336, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$10 = CALL $32($6, $9)
	if ( ((int_32)*($10 + [32]) == (int_32)$6) ){ goto $label$1 }
	CALL eosio_assert([0], [9153])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [8486])
	*($5 + [216]) = [0]
	*($5 + [208]) = (int_64)0
	CALL $66($9, $3, [59], ($5 + [208]))
	$10 = ($10 + [12])
	$9 = *($10)
	if ( ($9 == 0) ){ goto $label$6 }
	$6 = $10
	
.LOOP $label$7:
	$8 = (uint_64)(*($9 + [16]) <= $2)
	$6 = ( $6 ? $9 : $8 )
	$9 = *(($9 + ($8 << [2])))
	if ( $9 ){ goto $label$7 }
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$6 }
	if ( ((uint_64)*($6 + [16]) <= (uint_64)$2) ){ goto $label$5 }
	
.LABEL $label$6
	$6 = $10
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$6 != (int_32)$10), [8486])
	$9 = CALL $130([8395])
	if ( ($9 <= [8]) ){ goto $label$11 }
	CALL eosio_assert([0], [8659])
	goto $label$10 
	
.LABEL $label$11
	if ( ($9 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	$11 = (int_64)0
	
.LOOP $label$12:
	$8 = *(($9 + [8394]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$13 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$13
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$12 }
	$12 = ((int_64)$11 << (int_64)8)
	goto $label$8 
	
.LABEL $label$9
	$12 = (int_64)0
	
.LABEL $label$8
	$11 = (uint_64)$12 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$13 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$17 }
	$11 = $13
	$8 = $9
	$9 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$17
	$11 = $13
	
.LOOP $label$18:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$15 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$8 = ((int_32)$9 < (int_32)[6])
	$10 = ($9 + [1])
	$9 = $10
	if ( $8 ){ goto $label$18 }
	$9 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	CALL eosio_assert([0], [8865])
	
.LABEL $label$14
	$14 = (int_64)0
	$9 = *($5 + [208])
	if ( ((int_32)*($5 + [212]) == (int_32)$9) ){ goto $label$19 }
	$7 = [0]
	$14 = (int_64)0
	
.LOOP $label$20:
	$15 = (CASTING int_64)(int_32 CALL $114(($9 + ((int_32)$7 * (int_32)[12])), [0], [10]))
	$9 = CALL $130([8395])
	if ( ($9 <= [8]) ){ goto $label$24 }
	CALL eosio_assert([0], [8659])
	goto $label$23 
	
.LABEL $label$24
	if ( ($9 == 0) ){ goto $label$22 }
	
.LABEL $label$23
	$11 = (int_64)0
	
.LOOP $label$25:
	$8 = *(($9 + [8394]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$26 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$26
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$25 }
	$16 = ((int_64)$11 << (int_64)8)
	if ( (uint_64)(((int_64)$15 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$21 }
	CALL eosio_assert([0], [8816])
	goto $label$21 
	
.LABEL $label$22
	$16 = (int_64)0
	
.LABEL $label$21
	$11 = (uint_64)$16 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$30:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$29 }
	$13 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$32 }
	$11 = $13
	$8 = $9
	$9 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$30 }
	goto $label$31 
	
.LABEL $label$32
	$11 = $13
	
.LOOP $label$33:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$29 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$8 = ((int_32)$9 < (int_32)[6])
	$10 = ($9 + [1])
	$9 = $10
	if ( $8 ){ goto $label$33 }
	$9 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$30 }
	
.LABEL $label$31
	if ( ((int_64)$16 == (int_64)$12) ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$29
	CALL eosio_assert([0], [8865])
	if ( ((int_64)$16 == (int_64)$12) ){ goto $label$27 }
	
.LABEL $label$28
	CALL eosio_assert([0], [8885])
	
.LABEL $label$27
	$14 = ((int_64)$14 + (int_64)$15)
	if ( ((int_64)$14 <= (int_64)-4611686018427387904) ){ goto $label$35 }
	if ( ((int_64)$14 < (int_64)4611686018427387904) ){ goto $label$34 }
	CALL eosio_assert([0], [8947])
	goto $label$34 
	
.LABEL $label$35
	CALL eosio_assert([0], [8928])
	
.LABEL $label$34
	$9 = *($5 + [208])
	$7 = ($7 + [1])
	if ( ($7 <= ((int_32)(*($5 + [212]) - $9) / (int_32)[12])) ){ goto $label$20 }
	
.LABEL $label$19
	if ( ((int_64)*($6 + [32]) == (int_64)$12) ){ goto $label$36 }
	CALL eosio_assert([0], [8757])
	
.LABEL $label$36
	if ( ((int_64)*(($6 + [24])) < (int_64)$14) ){ goto $label$38 }
	CALL eosio_assert(((int_64)$14 < (int_64)1000001), [8439])
	$9 = *($5 + [208])
	if ( ((int_32)*($5 + [212]) == (int_32)$9) ){ goto $label$39 }
	$7 = [0]
	
.LOOP $label$40:
	$8 = ((int_32)$7 * (int_32)[12])
	if ( ((int_32)CALL $114(($9 + $8), [0], [10]) < (int_32)[1]) ){ goto $label$41 }
	$13 = (CASTING int_64)(int_32 CALL $114((*($5 + [208]) + $8), [0], [10]))
	$9 = CALL $130([8395])
	if ( ($9 <= [8]) ){ goto $label$45 }
	CALL eosio_assert([0], [8659])
	goto $label$44 
	
.LABEL $label$45
	if ( ($9 == 0) ){ goto $label$43 }
	
.LABEL $label$44
	$11 = (int_64)0
	
.LOOP $label$46:
	$8 = *(($9 + [8394]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$47 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$47
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$46 }
	$11 = ((int_64)$11 << (int_64)8)
	*(($9 = (($5 + [192]) + [8]))) = $11
	*($5 + [192]) = $13
	if ( (uint_64)(((int_64)$13 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$42 }
	CALL eosio_assert([0], [8816])
	$11 = *($9)
	goto $label$42 
	
.LABEL $label$43
	$11 = (int_64)0
	*((($5 + [192]) + [8])) = (int_64)0
	*($5 + [192]) = $13
	
.LABEL $label$42
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$50:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$49 }
	$13 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$51 }
	$11 = $13
	$8 = $9
	$9 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$50 }
	goto $label$48 
	
.LABEL $label$51
	$11 = $13
	
.LOOP $label$52:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$49 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$8 = ((int_32)$9 < (int_32)[6])
	$10 = ($9 + [1])
	$9 = $10
	if ( $8 ){ goto $label$52 }
	$9 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$50 }
	goto $label$48 
	
.LABEL $label$49
	CALL eosio_assert([0], [8865])
	
.LABEL $label$48
	*((($5 + [16]) + [8])) = *((($5 + [192]) + [8]))
	*($5 + [16]) = *($5 + [192])
	CALL $2($0, $1, ($7 & [255]), $2, ($5 + [16]))
	
.LABEL $label$41
	$9 = *($5 + [208])
	$7 = ($7 + [1])
	if ( ($7 <= ((int_32)(*($5 + [212]) - $9) / (int_32)[12])) ){ goto $label$40 }
	
.LABEL $label$39
	if ( ((int_64)$14 <= (int_64)0) ){ goto $label$38 }
	$13 = *($0)
	$9 = CALL $130([8509])
	if ( ($9 <= [8]) ){ goto $label$56 }
	CALL eosio_assert([0], [8659])
	goto $label$55 
	
.LABEL $label$56
	if ( ($9 == 0) ){ goto $label$54 }
	
.LABEL $label$55
	$11 = (int_64)0
	
.LOOP $label$57:
	$8 = *(($9 + [8508]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$58 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$58
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$57 }
	$11 = ((int_64)$11 << (int_64)8)
	goto $label$53 
	
.LABEL $label$54
	$11 = (int_64)0
	
.LABEL $label$53
	CALL $67(($5 + [176]), $9, $13, ((int_64)$11 | (int_64)4))
	$16 = *($5 + [176])
	if ( ((int_64)$16 < (int_64)1) ){ goto $label$61 }
	$9 = CALL $130([8509])
	if ( ($9 <= [8]) ){ goto $label$65 }
	CALL eosio_assert([0], [8659])
	goto $label$64 
	
.LABEL $label$65
	if ( ($9 == 0) ){ goto $label$63 }
	
.LABEL $label$64
	$11 = (int_64)0
	
.LOOP $label$66:
	$8 = *(($9 + [8508]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$67 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$67
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$66 }
	$13 = ((int_64)$11 << (int_64)8)
	goto $label$62 
	
.LABEL $label$63
	$13 = (int_64)0
	
.LABEL $label$62
	$11 = (uint_64)$13 >> (uint_64)(int_64)8)
	$15 = ((int_64)$13 | (int_64)4)
	$9 = [0]
	
.LOOP $label$70:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$69 }
	$13 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$71 }
	$11 = $13
	$8 = $9
	$9 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$70 }
	goto $label$68 
	
.LABEL $label$71
	$11 = $13
	
.LOOP $label$72:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$69 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$8 = ((int_32)$9 < (int_32)[6])
	$10 = ($9 + [1])
	$9 = $10
	if ( $8 ){ goto $label$72 }
	$9 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$70 }
	goto $label$68 
	
.LABEL $label$69
	CALL eosio_assert([0], [8865])
	
.LABEL $label$68
	$11 = ((int_64)$14 * (int_64)10)
	if ( ((int_64)$15 == (int_64)*($5 + [184])) ){ goto $label$73 }
	CALL eosio_assert([0], [8757])
	
.LABEL $label$73
	if ( ((int_64)$11 > (int_64)$16) ){ goto $label$61 }
	*($5 + [128]) = (int_64)3617214756542218240
	*($5 + [120]) = *($0)
	*(($5 + [64])) = [0]
	*($5 + [56]) = (int_64)0
	$9 = CALL $130([8513])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$60 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$76 }
	*($5 + [56]) = ($9 << [1])
	$8 = (($5 + [56]) | [1])
	if ( $9 ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$76
	$10 = (($9 + [16]) & [-16])
	$8 = CALL _Znwj($10)
	*($5 + [56]) = ($10 | [1])
	*($5 + [64]) = $8
	*($5 + [60]) = $9
	
.LABEL $label$75
	CALL memcpy($8, [8513], $9)
	
.LABEL $label$74
	*(($8 + $9)) = [0]
	*(($5 + [96])) = $15
	$9 = ($5 + [64])
	*(($5 + [112])) = *($9)
	*($9) = [0]
	*($5 + [80]) = $2
	*($5 + [88]) = $11
	*($5 + [72]) = *($0)
	*($5 + [104]) = *($5 + [56])
	*($5 + [56]) = (int_64)0
	$9 = CALL $43(($5 + [136]), ($5 + [120]), (int_64)-3838636544615976944, (int_64)-3617168760277827584, ($5 + [72]))
	CALL $44($9)
	$8 = *($9 + [28])
	if ( ($8 == 0) ){ goto $label$77 }
	*(($9 + [32])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$77
	$8 = *($9 + [16])
	if ( ($8 == 0) ){ goto $label$78 }
	*(($9 + [20])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$78
	if ( ((*(($5 + [104])) & [1]) == 0) ){ goto $label$79 }
	CALL _ZdlPv(*(($5 + [112])))
	
.LABEL $label$79
	if ( ((*($5 + [56]) & [1]) == 0) ){ goto $label$61 }
	CALL _ZdlPv(*(($5 + [64])))
	
.LABEL $label$61
	$9 = *($4)
	if ( ($9 & [1]) ){ goto $label$81 }
	if ( uint_32($9 >> [1]) ){ goto $label$80 }
	goto $label$38 
	
.LABEL $label$81
	if ( (*($4 + [4]) == 0) ){ goto $label$38 }
	
.LABEL $label$80
	$9 = CALL $130([8265])
	if ( ($9 <= [8]) ){ goto $label$84 }
	CALL eosio_assert([0], [8659])
	goto $label$83 
	
.LABEL $label$84
	if ( ($9 == 0) ){ goto $label$82 }
	
.LABEL $label$83
	$11 = (int_64)0
	
.LOOP $label$85:
	$8 = *(($9 + [8264]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$86 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$86
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$85 }
	$13 = ((int_64)$11 << (int_64)8)
	goto $label$59 
	
.LABEL $label$82
	$13 = (int_64)0
	goto $label$59 
	
.LABEL $label$60
	CALL $108(($5 + [56]))
	
.LABEL $label$59
	$11 = (uint_64)$13 >> (uint_64)(int_64)8)
	$16 = ((int_64)$13 | (int_64)4)
	$9 = [0]
	
.LOOP $label$89:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$88 }
	$13 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$90 }
	$11 = $13
	$8 = $9
	$9 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$89 }
	goto $label$87 
	
.LABEL $label$90
	$11 = $13
	
.LOOP $label$91:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$88 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$8 = ((int_32)$9 < (int_32)[6])
	$10 = ($9 + [1])
	$9 = $10
	if ( $8 ){ goto $label$91 }
	$9 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$89 }
	goto $label$87 
	
.LABEL $label$88
	CALL eosio_assert([0], [8865])
	
.LABEL $label$87
	$9 = *($4)
	if ( ($9 & [1]) ){ goto $label$93 }
	$9 = uint_32($9 >> [1])
	$8 = ($4 + [1])
	goto $label$92 
	
.LABEL $label$93
	$9 = *($4 + [4])
	$8 = *($4 + [8])
	
.LABEL $label$92
	$6 = ($0 + [152])
	*($5 + [52]) = $9
	*($5 + [48]) = $8
	*($5 + [8]) = *($5 + [48])
	$11 = *(CALL $68(($5 + [72]), ($5 + [8])))
	$8 = *(($0 + [180]))
	$10 = *(($0 + [176]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$97 }
	
.LOOP $label$99:
	$9 = ($8 + [-24])
	$7 = *($9)
	if ( ((int_64)*($7) == (int_64)$11) ){ goto $label$98 }
	$8 = $9
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$99 }
	goto $label$97 
	
.LABEL $label$98
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$97 }
	if ( ((int_32)*($7 + [8]) == (int_32)$6) ){ goto $label$96 }
	CALL eosio_assert([0], [9153])
	goto $label$96 
	
.LABEL $label$97
	$9 = CALL db_find_i64(*(($0 + [152])), *(($0 + [160])), (int_64)4148188400133193728, $11)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$95 }
	if ( ((int_32)*(CALL $61($6, $9) + [8]) == (int_32)$6) ){ goto $label$96 }
	CALL eosio_assert([0], [9153])
	
.LABEL $label$96
	$17 = (float_64)0.005
	goto $label$94 
	
.LABEL $label$95
	$17 = (float_64)0.002
	
.LABEL $label$94
	$17 = ((float_64)$17 * (float_64)(CASTING float_64)(int_64 $14))
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)9223372036854775808) ){ goto $label$101 }
	$11 = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 >= (int_64)1) ){ goto $label$100 }
	goto $label$38 
	
.LABEL $label$101
	$11 = (Rounds 0)($17)
	if ( ((int_64)$11 < (int_64)1) ){ goto $label$38 }
	
.LABEL $label$100
	*($5 + [128]) = (int_64)3617214756542218240
	*($5 + [120]) = *($0)
	$9 = *($4)
	if ( ($9 & [1]) ){ goto $label$103 }
	$9 = uint_32($9 >> [1])
	$8 = ($4 + [1])
	goto $label$102 
	
.LABEL $label$103
	$9 = *($4 + [4])
	$8 = *($4 + [8])
	
.LABEL $label$102
	*($5 + [36]) = $9
	*($5 + [32]) = $8
	*($5) = *($5 + [32])
	$10 = CALL $68(($5 + [40]), $5)
	*(($5 + [64])) = [0]
	*($5 + [56]) = (int_64)0
	$9 = CALL $130([8569])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$37 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$106 }
	*($5 + [56]) = ($9 << [1])
	$8 = (($5 + [56]) | [1])
	if ( $9 ){ goto $label$105 }
	goto $label$104 
	
.LABEL $label$106
	$7 = (($9 + [16]) & [-16])
	$8 = CALL _Znwj($7)
	*($5 + [56]) = ($7 | [1])
	*($5 + [64]) = $8
	*($5 + [60]) = $9
	
.LABEL $label$105
	CALL memcpy($8, [8569], $9)
	
.LABEL $label$104
	*(($8 + $9)) = [0]
	*(($5 + [96])) = $16
	$9 = ($5 + [64])
	*(($5 + [112])) = *($9)
	*($9) = [0]
	*($5 + [88]) = $11
	*($5 + [72]) = *($0)
	*($5 + [80]) = *($10)
	*($5 + [104]) = *($5 + [56])
	*($5 + [56]) = (int_64)0
	$9 = CALL $43(($5 + [136]), ($5 + [120]), (int_64)6138663591592764928, (int_64)-3617168760277827584, ($5 + [72]))
	CALL $44($9)
	$8 = *($9 + [28])
	if ( ($8 == 0) ){ goto $label$107 }
	*(($9 + [32])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$107
	$8 = *($9 + [16])
	if ( ($8 == 0) ){ goto $label$108 }
	*(($9 + [20])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$108
	if ( ((*(($5 + [104])) & [1]) == 0) ){ goto $label$109 }
	CALL _ZdlPv(*(($5 + [112])))
	
.LABEL $label$109
	if ( ((*($5 + [56]) & [1]) == 0) ){ goto $label$38 }
	CALL _ZdlPv(*(($5 + [64])))
	
.LABEL $label$38
	$10 = *($5 + [208])
	if ( ($10 == 0) ){ goto $label$110 }
	$8 = *($5 + [212])
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$112 }
	
.LOOP $label$113:
	$9 = ($8 + [-12])
	if ( ((*($9) & [1]) == 0) ){ goto $label$114 }
	CALL _ZdlPv(*(($8 + [-4])))
	
.LABEL $label$114
	$8 = $9
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$113 }
	$9 = *($5 + [208])
	goto $label$111 
	
.LABEL $label$112
	$9 = $10
	
.LABEL $label$111
	*($5 + [212]) = $10
	CALL _ZdlPv($9)
	
.LABEL $label$110
	$global$0 = ($5 + [224])
	return (unreachable)
	
.LABEL $label$37
	CALL $108(($5 + [56]))
	(unreachable)
}

void .FUNC $20 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [8]) = $2
	CALL require_auth($2)
	$5 = CALL $130([8395])
	if ( ($5 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8659])
	goto $label$3 
	
.LABEL $label$4
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = (int_64)0
	
.LOOP $label$5:
	$6 = *(($5 + [8394]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$6
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$5 }
	$2 = ((int_64)$2 << (int_64)8)
	goto $label$1 
	
.LABEL $label$2
	$2 = (int_64)0
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$2), [8640])
	$7 = ($0 + [72])
	$6 = *(($0 + [100]))
	$8 = *(($0 + [96]))
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$11:
	$5 = ($6 + [-24])
	$9 = *($5)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$10 }
	$6 = $5
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$9 }
	if ( ((int_32)*($9 + [32]) == (int_32)$7) ){ goto $label$8 }
	CALL eosio_assert([0], [9153])
	goto $label$8 
	
.LABEL $label$9
	$5 = CALL db_find_i64(*($7), *(($0 + [80])), (int_64)-3922893409758478336, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$7 }
	$9 = CALL $32($7, $5)
	if ( ((int_32)*($9 + [32]) == (int_32)$7) ){ goto $label$8 }
	CALL eosio_assert([0], [9153])
	
.LABEL $label$8
	$2 = *($0)
	*($4 + [4]) = $3
	*($4) = ($4 + [8])
	CALL $39($7, $9, $2, $4)
	
.LABEL $label$7
	$global$0 = ($4 + [16])
}

void .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9144])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9144])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9144])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9144])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $77(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $22 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [320])
	$global$0 = $3
	*(($4 = $3) + [264]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $133($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [224]) + [24])) = (int_64)0
	*(($4 + [256])) = (int_64)0
	*($4 + [232]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [212]) = $2
	*($4 + [208]) = $2
	*($4 + [216]) = ($2 + $5)
	*($4 + [304]) = ($4 + [208])
	*($4 + [16]) = ($4 + [224])
	CALL $64(($4 + [16]), ($4 + [304]))
	*(($3 = ($4 + [8]))) = *($4 + [216])
	*($4) = *($4 + [208])
	$3 = *($3)
	*((($4 + [272]) + [8])) = $3
	*(($6 = (($4 + [288]) + [8]))) = $3
	$7 = *($4)
	*($4 + [288]) = $7
	*($4 + [272]) = $7
	$3 = *($6)
	*((($4 + [304]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [288])
	*($4 + [32]) = $1
	*($4 + [304]) = $1
	*(($4 + [56])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [176])) = $0
	*(($4 + [184])) = (int_64)-1
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [168]) = $0
	*(($4 + [200])) = [0]
	*(($4 + [192])) = (int_64)0
	*($4 + [308]) = ($4 + [264])
	*($4 + [304]) = ($4 + [16])
	CALL $65(($4 + [304]), ($4 + [224]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $136($2)
	
.LABEL $label$4
	CALL $25(($4 + [16]))
	if ( ((*($4 + [252]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [260])))
	
.LABEL $label$5
	if ( ((*($4 + [240]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*(($4 + [248])))
	
.LABEL $label$6
	$global$0 = ($4 + [320])
	return [1]
}

int_32 .FUNC $25 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *(($0 + [176]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [180])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL _ZdlPv($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [176]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$2 = *(($0 + [136]))
	if ( ($2 == 0) ){ goto $label$6 }
	$5 = ($0 + [140])
	$4 = *($5)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	CALL $36(($3 + [20]), *(($3 + [24])))
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$11 }
	*(($3 + [12])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$11
	CALL _ZdlPv($3)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [136]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $2
	
.LABEL $label$7
	*($5) = $2
	CALL _ZdlPv($3)
	
.LABEL $label$6
	CALL $76(($0 + [96]))
	$1 = *(($0 + [56]))
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [60])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	CALL _ZdlPv($4)
	
.LABEL $label$16
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$15 }
	$3 = *(($0 + [56]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $109(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $109(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $27 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9313])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9359])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *(*($3))
	$3 = CALL $130([8395])
	if ( ($3 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [8659])
	goto $label$5 
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$8 = (int_64)0
	
.LOOP $label$7:
	$9 = *(($3 + [8394]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$8
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$7 }
	$10 = ((int_64)$8 << (int_64)8)
	goto $label$3 
	
.LABEL $label$4
	$10 = (int_64)0
	
.LABEL $label$3
	if ( (uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$9 }
	CALL eosio_assert([0], [8816])
	
.LABEL $label$9
	$8 = (uint_64)$10 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$11 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$8 = $11
	$9 = $3
	$3 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$8 = $11
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$9 = ((int_32)$3 < (int_32)[6])
	$12 = ($3 + [1])
	$3 = $12
	if ( $9 ){ goto $label$14 }
	$3 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [8865])
	
.LABEL $label$10
	if ( ((int_64)$10 == (int_64)*(($1 + [16]))) ){ goto $label$15 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$15
	$8 = ((int_64)*($1 + [8]) + (int_64)$7)
	*($1 + [8]) = $8
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$20 }
	if ( ((int_64)$8 >= (int_64)4611686018427387904) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL eosio_assert([0], [8928])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$18 }
	
.LABEL $label$19
	CALL eosio_assert([0], [8947])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$16 }
	
.LABEL $label$17
	CALL eosio_assert([0], [9410])
	
.LABEL $label$16
	$9 = $4
	$3 = ($9 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($9 + [-8])
	CALL $85($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $3, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$21 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$21
	$global$0 = ($5 + [16])
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9204])
	
.LABEL $label$5
	$2 = CALL $133($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9144])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9144])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$9 }
	CALL eosio_assert([0], [9144])
	
.LABEL $label$9
	CALL memcpy(($3 + [24]), $7, [8])
	*(($5 + [16])) = *($3 + [24])
	*($5 + [28]) = $1
	*($3 + [16]) = $5
	$9 = *($5)
	*($3 + [24]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $29(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $136($2)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL _ZdlPv($1)
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $135 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [9780]) == 0) ){ goto $label$2 }
	$2 = *([0] + [9784])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [9780]) = [1]
	$2 = ($2 << [16])
	*([0] + [9784]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [9784])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [9784]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [9780]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [9780]) = [1]
	$3 = ($3 << [16])
	*([0] + [9784]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [9784])
	
.LABEL $label$10
	*([0] + [9784]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

int_32 .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9204])
	
.LABEL $label$5
	$2 = CALL $133($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9144])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9144])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	*($3 + [24]) = $8
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $99(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $136($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [8987])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [9092])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [9025])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [9092])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $108 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = *($1 + [8])
	$4 = *($1)
	$5 = CALL $109(($2 + [16]), ($1 + [16]))
	$1 = CALL $109($2, ($1 + [28]))
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($7) + $0))
	
.LABEL $label$1
	$8 = CALL $109(($2 + [32]), $1)
	$6 = CALL $109(($2 + [48]), $5)
	CALL void $7((int_32 $4), (int_64 $3), (int_64 $6), (int_32 $8), (int_32 $0))
	if ( (*($2 + [32]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [48]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL _ZdlPv(*($8 + [8]))
	if ( ((*($2 + [48]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*($6 + [8]))
	$0 = [1]
	if ( ((*($1) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$0 = [1]
	if ( (*($1) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($5) & $0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($1 + [8]))
	if ( ((*($5) & $0) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($5 + [8]))
	$global$0 = ($2 + [64])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [64])
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9144])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9144])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $77(*($1), ($0 + [16]))
	CALL $77(*($1), ($0 + [28]))
}

void .FUNC $67 (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	*($4 + [16]) = $2
	*($4 + [8]) = (int_64)-3838636544615976944
	$5 = CALL db_find_i64((int_64)-3838636544615976944, $2, (int_64)3607749779137757184, (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_32)$5) < (int_32)[0]) ){ goto $label$7 }
	$5 = CALL $69(($4 + [8]), $5)
	if ( ((int_32)*($5 + [16]) == (int_32)($4 + [8])) ){ goto $label$8 }
	CALL eosio_assert([0], [9153])
	
.LABEL $label$8
	*($0) = *($5)
	*(($0 + [8])) = *(($5 + [8]))
	$0 = *($4 + [32])
	if ( ($0 == 0) ){ goto $label$2 }
	$6 = ($4 + [36])
	$5 = *($6)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$6 }
	
.LOOP $label$9:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$10 }
	CALL _ZdlPv($7)
	
.LABEL $label$10
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$9 }
	$5 = *(($4 + [32]))
	goto $label$5 
	
.LABEL $label$7
	$5 = CALL $130([8509])
	if ( ($5 <= [8]) ){ goto $label$12 }
	CALL eosio_assert([0], [8659])
	goto $label$11 
	
.LABEL $label$12
	if ( ($5 == 0) ){ goto $label$4 }
	
.LABEL $label$11
	$2 = (int_64)0
	
.LOOP $label$13:
	$7 = *(($5 + [8508]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$14 }
	CALL eosio_assert([0], [8704])
	
.LABEL $label$14
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$13 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$3 
	
.LABEL $label$6
	$5 = $0
	
.LABEL $label$5
	*($6) = $0
	CALL _ZdlPv($5)
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$4
	$2 = (int_64)4
	
.LABEL $label$3
	*($0 + [8]) = $2
	*($0) = (int_64)0
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$1 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$16 }
	$2 = $3
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$15 }
	goto $label$2 
	
.LABEL $label$16
	$2 = $3
	
.LOOP $label$17:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$1 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$5 < (int_32)[6])
	$0 = ($5 + [1])
	$5 = $0
	if ( $7 ){ goto $label$17 }
	$5 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$15 }
	
.LABEL $label$2
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$1
	CALL eosio_assert([0], [8865])
	$global$0 = ($4 + [48])
}

void .FUNC $66 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = CALL $113($1, $2, [0])
	if ( ((int_32)$5 == (int_32)[-1]) ){ goto $label$1 }
	$6 = ($3 + [8])
	$7 = ($3 + [4])
	$8 = [0]
	
.LOOP $label$3:
	$9 = CALL $110($4, $1, $8, ($5 - $8), $1)
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$4 }
	*($8) = *($4)
	$8 = ($4 + [8])
	*(($8 + [8])) = *($8)
	*($8) = [0]
	*($7) = (*($7) + [12])
	*($4) = (int_64)0
	$8 = ($5 + [1])
	$5 = CALL $113($1, $2, $8)
	if ( ((int_32)$5 != (int_32)[-1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $73($3, $9)
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$5
	$8 = ($5 + [1])
	$5 = CALL $113($1, $2, $8)
	if ( ((int_32)$5 != (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$2
	$5 = *($1)
	$5 = CALL $110($4, $1, $8, ( *(($1 + [4])) ? uint_32($5 >> [1]) : ($5 & [1]) ), $1)
	$1 = ($3 + [4])
	$8 = *($1)
	if ( ((uint_32)$8 >= (uint_32)*(($3 + [8]))) ){ goto $label$6 }
	*($8) = *($4)
	$8 = ($4 + [8])
	*(($8 + [8])) = *($8)
	*($8) = [0]
	*($1) = (*($1) + [12])
	*($4) = (int_64)0
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$6
	CALL $73($3, $5)
	if ( ((*($4) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$1
	$global$0 = ($4 + [16])
}

int_32 .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9204])
	
.LABEL $label$5
	$2 = CALL $133($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([24])) + [8]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9144])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = $7
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($8) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $62(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $136($2)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL _ZdlPv($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	$3 = (*($1 + [4]) - *($1))
	if ( ($3 == 0) ){ goto $label$6 }
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL _Znwj($3)
	*(($2 + [24])) = ($4 + $3)
	*($2 + [16]) = $4
	*($2 + [20]) = $4
	$5 = *($1)
	$3 = (*(($1 + [4])) - $5)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($4, $5, $3)
	*($2 + [20]) = ($4 + $3)
	
.LABEL $label$6
	*($2 + [4 align=4]) = (int_64)0
	$6 = ($2 | [4])
	*($2) = $6
	$8 = ($1 + [16])
	$7 = *($1 + [12])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$2 }
	$5 = [0]
	$9 = ($7 + [16])
	if ( ((int_32)$6 != (int_32)$6) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	CALL $120(($2 + [16]))
	
.LABEL $label$4
	$10 = [28]
	goto $label$1 
	
.LABEL $label$3
	$10 = [3]
	goto $label$1 
	
.LABEL $label$2
	$10 = [29]
	
.LABEL $label$1
	
.LOOP $label$7:
	goto $label$44 
	
.LABEL $label$71
	$5 = *($2 + [4])
	$7 = $3
	$9 = ($7 + [16])
	if ( ((int_32)*($2) == (int_32)$6) ){ goto $label$39 }
	$10 = [3]
	goto $label$7 
	
.LABEL $label$70
	$3 = $5
	$4 = $6
	if ( ($5 == 0) ){ goto $label$22 }
	$10 = [4]
	goto $label$7 
	
.LABEL $label$69
	$1 = $3
	$3 = *($1 + [4])
	if ( $3 ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$68
	$1 = *($4 + [8])
	$3 = ((int_32)*($1) == (int_32)$4)
	$4 = $1
	if ( $3 ){ goto $label$21 }
	$10 = [5]
	goto $label$7 
	
.LABEL $label$67
	$11 = *($9)
	if ( (uint_64)(*($1 + [16]) <= $11) ){ goto $label$38 }
	$10 = [6]
	goto $label$7 
	
.LABEL $label$66
	if ( ($5 == 0) ){ goto $label$20 }
	$10 = [7]
	goto $label$7 
	
.LABEL $label$65
	$3 = $6
	$12 = *($5 + [16])
	if ( ((uint_64)$11 >= (uint_64)$12) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$64
	$3 = $5
	$5 = $1
	$12 = *($5 + [16])
	if ( ((uint_64)$11 >= (uint_64)$12) ){ goto $label$35 }
	$10 = [20]
	goto $label$7 
	
.LABEL $label$63
	$1 = *($5)
	if ( $1 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$62
	if ( ((uint_64)$12 >= (uint_64)$11) ){ goto $label$17 }
	$10 = [17]
	goto $label$7 
	
.LABEL $label$61
	$3 = ($5 + [4])
	$1 = *($5 + [4])
	if ( ($1 == 0) ){ goto $label$12 }
	$10 = [18]
	goto $label$7 
	
.LABEL $label$60
	$5 = $3
	goto $label$34 
	
.LABEL $label$59
	$1 = $6
	$10 = [24]
	goto $label$7 
	
.LABEL $label$58
	if ( ($5 == 0) ){ goto $label$9 }
	$10 = [25]
	goto $label$7 
	
.LABEL $label$57
	$5 = ($1 + [4])
	if ( (*($5) == 0) ){ goto $label$14 }
	$10 = [10]
	goto $label$7 
	
.LABEL $label$56
	$1 = *($7 + [4])
	if ( $1 ){ goto $label$31 }
	$10 = [11]
	goto $label$7 
	
.LABEL $label$55
	$3 = *($7 + [8])
	if ( ((int_32)*($3) == (int_32)$7) ){ goto $label$28 }
	$10 = [12]
	goto $label$7 
	
.LABEL $label$54
	$4 = ($7 + [8])
	$10 = [13]
	goto $label$7 
	
.LABEL $label$53
	$1 = *($4)
	$4 = ($1 + [8])
	$3 = *($1 + [8])
	if ( ((int_32)$1 != (int_32)*($3)) ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$52
	$1 = $6
	$5 = $6
	if ( *($5) ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$51
	$5 = $6
	$1 = $6
	goto $label$37 
	
.LABEL $label$50
	$1 = $5
	goto $label$36 
	
.LABEL $label$49
	$1 = $5
	$5 = $3
	if ( *($5) ){ goto $label$32 }
	goto $label$33 
	
.LABEL $label$48
	$1 = $5
	$5 = $3
	$10 = [14]
	goto $label$7 
	
.LABEL $label$47
	*((($3 = CALL _Znwj([40])) + [32])) = *(($9 + [16]))
	*(($3 + [24])) = *(($9 + [8]))
	*($3 + [16]) = *($9)
	*($3) = (int_64)0
	*($3 + [8]) = $1
	*($5) = $3
	$1 = *(*($2))
	if ( ($1 == 0) ){ goto $label$13 }
	$10 = [15]
	goto $label$7 
	
.LABEL $label$46
	*($2) = $1
	$3 = *($5)
	$10 = [16]
	goto $label$7 
	
.LABEL $label$45
	CALL $52(*($2 + [4]), $3)
	*(($1 = ($2 + [8]))) = (*($1) + [1])
	$1 = *($7 + [4])
	if ( ($1 == 0) ){ goto $label$29 }
	$10 = [0]
	goto $label$7 
	
.LABEL $label$44
	$3 = $1
	$1 = *($3)
	if ( $1 ){ goto $label$30 }
	$10 = [1]
	goto $label$7 
	
.LABEL $label$43
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$25 }
	$10 = [29]
	goto $label$7 
	
.LABEL $label$42
	CALL $84($0, ($2 + [16]), $2)
	CALL $36($2, *($2 + [4]))
	$1 = *($2 + [16])
	if ( ($1 == 0) ){ goto $label$8 }
	$10 = [30]
	goto $label$7 
	
.LABEL $label$41
	*($2 + [20]) = $1
	CALL _ZdlPv($1)
	$10 = [31]
	goto $label$7 
	
.LABEL $label$40
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$39
	$10 = [28]
	goto $label$7 
	
.LABEL $label$38
	$10 = [24]
	goto $label$7 
	
.LABEL $label$37
	$10 = [14]
	goto $label$7 
	
.LABEL $label$36
	$10 = [14]
	goto $label$7 
	
.LABEL $label$35
	$10 = [8]
	goto $label$7 
	
.LABEL $label$34
	$10 = [19]
	goto $label$7 
	
.LABEL $label$33
	$10 = [14]
	goto $label$7 
	
.LABEL $label$32
	$10 = [10]
	goto $label$7 
	
.LABEL $label$31
	$10 = [0]
	goto $label$7 
	
.LABEL $label$30
	$10 = [0]
	goto $label$7 
	
.LABEL $label$29
	$10 = [11]
	goto $label$7 
	
.LABEL $label$28
	$10 = [1]
	goto $label$7 
	
.LABEL $label$27
	$10 = [1]
	goto $label$7 
	
.LABEL $label$26
	$10 = [13]
	goto $label$7 
	
.LABEL $label$25
	$10 = [2]
	goto $label$7 
	
.LABEL $label$24
	$10 = [5]
	goto $label$7 
	
.LABEL $label$23
	$10 = [4]
	goto $label$7 
	
.LABEL $label$22
	$10 = [27]
	goto $label$7 
	
.LABEL $label$21
	$10 = [27]
	goto $label$7 
	
.LABEL $label$20
	$10 = [23]
	goto $label$7 
	
.LABEL $label$19
	$10 = [20]
	goto $label$7 
	
.LABEL $label$18
	$10 = [8]
	goto $label$7 
	
.LABEL $label$17
	$10 = [9]
	goto $label$7 
	
.LABEL $label$16
	$10 = [14]
	goto $label$7 
	
.LABEL $label$15
	$10 = [10]
	goto $label$7 
	
.LABEL $label$14
	$10 = [14]
	goto $label$7 
	
.LABEL $label$13
	$10 = [16]
	goto $label$7 
	
.LABEL $label$12
	$10 = [22]
	goto $label$7 
	
.LABEL $label$11
	$10 = [21]
	goto $label$7 
	
.LABEL $label$10
	$10 = [19]
	goto $label$7 
	
.LABEL $label$9
	$10 = [26]
	goto $label$7 
	
.LABEL $label$8
	$10 = [31]
	goto $label$7 
	(unreachable)
	$10
}

void .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9560])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9655])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $62 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $120($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $133($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [9768])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $133($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $136($0)
	
.LABEL $label$1
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $131(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [9768])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $131(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = (*($2) + [8])
	*(($2 = *($1))) = $3
	$1 = *($0 + [4])
	$4 = *($1 + [8])
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	*($2) = $3
	$6 = ($1 + [4])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$3:
	$7 = $5
	$1 = *($7 + [4])
	if ( ($1 == 0) ){ goto $label$5 }
	
.LOOP $label$6:
	$5 = $1
	$1 = *($5)
	if ( $1 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$5 = *($7 + [8])
	if ( ((int_32)*($5) == (int_32)$7) ){ goto $label$4 }
	$7 = ($7 + [8])
	
.LOOP $label$7:
	$1 = *($7)
	$7 = ($1 + [8])
	$5 = *($1 + [8])
	if ( ((int_32)$1 != (int_32)*($5)) ){ goto $label$7 }
	
.LABEL $label$4
	$3 = ($3 + [24])
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$3 }
	*($2) = $3
	
.LABEL $label$2
	$0 = *($1)
	$1 = *($0 + [8])
	$8 = *($1 + [4])
	$4 = (CASTING uint_64)(uint_32 int_32(($8 - $0) >> [4]))
	
.LOOP $label$8:
	$3 = ($3 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$8 }
	*($2) = $3
	if ( ((int_32)$0 == (int_32)$8) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($3 + [1])
	*($2) = $3
	$4 = *($0 + [12])
	
.LOOP $label$11:
	$3 = ($3 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$11 }
	*($2) = $3
	$6 = ($0 + [8])
	$5 = *($0 + [4])
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$12 }
	
.LOOP $label$13:
	$7 = $5
	$1 = *($7 + [4])
	if ( ($1 == 0) ){ goto $label$15 }
	
.LOOP $label$16:
	$5 = $1
	$1 = *($5)
	if ( $1 ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	$5 = *($7 + [8])
	if ( ((int_32)*($5) == (int_32)$7) ){ goto $label$14 }
	$7 = ($7 + [8])
	
.LOOP $label$17:
	$1 = *($7)
	$7 = ($1 + [8])
	$5 = *($1 + [8])
	if ( ((int_32)$1 != (int_32)*($5)) ){ goto $label$17 }
	
.LABEL $label$14
	$3 = ($3 + [24])
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$13 }
	*($2) = $3
	
.LABEL $label$12
	$0 = ($0 + [16])
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$10 }
	
.LABEL $label$9
}

int_32 .FUNC $88 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$3 = ($0 + [8])
	
.LOOP $label$2:
	$1 = ($1 + [-24])
	*($3) = $1
	$4 = *($1)
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$5 = *($4 + [20])
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = $5
	$7 = ($4 + [24])
	$1 = *($7)
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$5 }
	
.LOOP $label$6:
	CALL $36(($1 + [-12]), *(($1 + [-8])))
	$1 = ($1 + [-16])
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$6 }
	$6 = *(($4 + [20]))
	
.LABEL $label$5
	*($7) = $5
	CALL _ZdlPv($6)
	
.LABEL $label$4
	CALL $36(($4 + [8]), *(($4 + [12])))
	CALL _ZdlPv($4)
	
.LABEL $label$3
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$7 }
	CALL _ZdlPv($1)
	
.LABEL $label$7
	return $0
}

void .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [4]) >= (uint_32)$1) ){ goto $label$6 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [4])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$4 }
	$3 = [268435455]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$7 }
	$3 = int_32($2 >> [3])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$3 }
	
.LABEL $label$7
	$7 = CALL _Znwj(($3 << [4]))
	goto $label$2 
	
.LABEL $label$6
	$2 = ($0 + [4])
	
.LOOP $label$8:
	*($3) = [0]
	$6 = ($3 + [8])
	*($3 + [4]) = $6
	*($6) = (int_64)0
	$3 = (*($2) + [16])
	*($2) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$3 = [0]
	$7 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $120($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$8 = ($7 + ($3 << [4]))
	$9 = ($7 + ($5 << [4]))
	$3 = $9
	
.LOOP $label$9:
	*($3) = [0]
	*(($2 = ($3 + [8]))) = (int_64)0
	*(($3 + [4])) = $2
	$3 = ($3 + [16])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$10 = ($7 + ($6 << [4]))
	$1 = *($0)
	$3 = ($0 + [4])
	$11 = *($3)
	if ( ((int_32)$11 == (int_32)$1) ){ goto $label$11 }
	$12 = (($5 + [-1]) - uint_32((($11 + [-16]) - $1) >> [4]))
	$13 = ($1 - $11)
	$3 = [0]
	
.LOOP $label$13:
	$2 = ($11 + $3)
	*((($1 = ($9 + $3)) + [-16])) = *(($2 + [-16]))
	$4 = ($2 + [-12])
	*(($14 = ($1 + [-12]))) = *($4)
	$6 = ($2 + [-8])
	$15 = *($6)
	*(($5 = ($1 + [-8]))) = $15
	$2 = ($2 + [-4])
	$1 = *($2)
	*(($1 + [-4])) = $1
	if ( ($1 == 0) ){ goto $label$14 }
	*($15 + [8]) = $5
	*($2) = [0]
	*($6) = [0]
	*($4) = $6
	$3 = ($3 + [-16])
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	*($14) = $5
	$3 = ($3 + [-16])
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$13 }
	
.LABEL $label$12
	*(($0 + [8])) = $8
	$1 = *($0)
	*($0) = ($7 + ($12 << [4]))
	$2 = ($0 + [4])
	$3 = *($2)
	*($2) = $10
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$15 }
	
.LOOP $label$16:
	CALL $36(($3 + [-12]), *(($3 + [-8])))
	$3 = ($3 + [-16])
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$16 }
	
.LABEL $label$15
	if ( $1 ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$11
	*($0) = $9
	*($3) = $10
	*(($0 + [8])) = $8
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$10
	CALL _ZdlPv($1)
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9149])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$6 = *($1)
	$5 = *($1 + [4])
	$7 = int_32(($5 - $6) >> [4])
	if ( ((uint_32)$7 >= (uint_32)$2) ){ goto $label$5 }
	CALL $87($1, ($2 - $7))
	$5 = *(($1 + [4]))
	$2 = *($1)
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$7 <= (uint_32)$2) ){ goto $label$6 }
	$2 = ($6 + ($2 << [4]))
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $36(($5 + [-12]), *(($5 + [-8])))
	$5 = ($5 + [-16])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$8 }
	
.LABEL $label$7
	*(($1 + [4])) = $2
	$5 = $2
	
.LABEL $label$6
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = ($0 + [4])
	$4 = ($0 + [8])
	
.LOOP $label$9:
	$6 = *($7)
	if ( ((int_32)*($4) != (int_32)$6) ){ goto $label$10 }
	CALL eosio_assert([0], [9144])
	$6 = *($7)
	
.LABEL $label$10
	CALL memcpy($2, $6, [1])
	*($7) = (*($7) + [1])
	CALL $59($0, ($2 + [4]))
	$2 = ($2 + [16])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8981])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	$4 = ($1 + [8])
	CALL memcpy($3, $1, [8])
	$5 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $5
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8981])
	$5 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8981])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $84 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$3 = ($global$0 - [32])
	$global$0 = $3
	$0 = *($0 + [4])
	$4 = *($0 + [4])
	$5 = (*($0) + int_32($4 >> [1]))
	$6 = *($0)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$6 = *((*($5) + $6))
	
.LABEL $label$1
	*($3 + [24]) = [0]
	*($3 + [16]) = (int_64)0
	$0 = (*($1 + [4]) - *($1))
	if ( ($0 == 0) ){ goto $label$7 }
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$6 }
	$4 = CALL _Znwj($0)
	*(($3 + [24])) = ($4 + $0)
	*($3 + [16]) = $4
	*($3 + [20]) = $4
	$0 = *($1)
	$1 = (*(($1 + [4])) - $0)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($4, $0, $1)
	*($3 + [20]) = ($4 + $1)
	
.LABEL $label$7
	*($3 + [4 align=4]) = (int_64)0
	$7 = ($3 | [4])
	*($3) = $7
	$9 = ($2 + [4])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	$4 = [0]
	$10 = ($8 + [16])
	if ( ((int_32)$7 != (int_32)$7) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	CALL $120(($3 + [16]))
	
.LABEL $label$5
	$11 = [28]
	goto $label$2 
	
.LABEL $label$4
	$11 = [3]
	goto $label$2 
	
.LABEL $label$3
	$11 = [29]
	
.LABEL $label$2
	
.LOOP $label$8:
	goto $label$45 
	
.LABEL $label$72
	$4 = *($3 + [4])
	$8 = $2
	$10 = ($8 + [16])
	if ( ((int_32)*($3) == (int_32)$7) ){ goto $label$40 }
	$11 = [3]
	goto $label$8 
	
.LABEL $label$71
	$2 = $4
	$0 = $7
	if ( ($4 == 0) ){ goto $label$23 }
	$11 = [4]
	goto $label$8 
	
.LABEL $label$70
	$1 = $2
	$2 = *($1 + [4])
	if ( $2 ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$69
	$1 = *($0 + [8])
	$2 = ((int_32)*($1) == (int_32)$0)
	$0 = $1
	if ( $2 ){ goto $label$22 }
	$11 = [5]
	goto $label$8 
	
.LABEL $label$68
	$12 = *($10)
	if ( (uint_64)(*($1 + [16]) <= $12) ){ goto $label$39 }
	$11 = [6]
	goto $label$8 
	
.LABEL $label$67
	if ( ($4 == 0) ){ goto $label$21 }
	$11 = [7]
	goto $label$8 
	
.LABEL $label$66
	$2 = $7
	$13 = *($4 + [16])
	if ( ((uint_64)$12 >= (uint_64)$13) ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$65
	$2 = $4
	$4 = $1
	$13 = *($4 + [16])
	if ( ((uint_64)$12 >= (uint_64)$13) ){ goto $label$36 }
	$11 = [20]
	goto $label$8 
	
.LABEL $label$64
	$1 = *($4)
	if ( $1 ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$63
	if ( ((uint_64)$13 >= (uint_64)$12) ){ goto $label$18 }
	$11 = [17]
	goto $label$8 
	
.LABEL $label$62
	$2 = ($4 + [4])
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$13 }
	$11 = [18]
	goto $label$8 
	
.LABEL $label$61
	$4 = $2
	goto $label$35 
	
.LABEL $label$60
	$1 = $7
	$11 = [24]
	goto $label$8 
	
.LABEL $label$59
	if ( ($4 == 0) ){ goto $label$10 }
	$11 = [25]
	goto $label$8 
	
.LABEL $label$58
	$4 = ($1 + [4])
	if ( (*($4) == 0) ){ goto $label$15 }
	$11 = [10]
	goto $label$8 
	
.LABEL $label$57
	$1 = *($8 + [4])
	if ( $1 ){ goto $label$32 }
	$11 = [11]
	goto $label$8 
	
.LABEL $label$56
	$2 = *($8 + [8])
	if ( ((int_32)*($2) == (int_32)$8) ){ goto $label$29 }
	$11 = [12]
	goto $label$8 
	
.LABEL $label$55
	$0 = ($8 + [8])
	$11 = [13]
	goto $label$8 
	
.LABEL $label$54
	$1 = *($0)
	$0 = ($1 + [8])
	$2 = *($1 + [8])
	if ( ((int_32)$1 != (int_32)*($2)) ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$53
	$1 = $7
	$4 = $7
	if ( *($4) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$52
	$4 = $7
	$1 = $7
	goto $label$38 
	
.LABEL $label$51
	$1 = $4
	goto $label$37 
	
.LABEL $label$50
	$1 = $4
	$4 = $2
	if ( *($4) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$49
	$1 = $4
	$4 = $2
	$11 = [14]
	goto $label$8 
	
.LABEL $label$48
	*((($2 = CALL _Znwj([40])) + [32])) = *(($10 + [16]))
	*(($2 + [24])) = *(($10 + [8]))
	*($2 + [16]) = *($10)
	*($2) = (int_64)0
	*($2 + [8]) = $1
	*($4) = $2
	$1 = *(*($3))
	if ( ($1 == 0) ){ goto $label$14 }
	$11 = [15]
	goto $label$8 
	
.LABEL $label$47
	*($3) = $1
	$2 = *($4)
	$11 = [16]
	goto $label$8 
	
.LABEL $label$46
	CALL $52(*($3 + [4]), $2)
	*(($1 = ($3 + [8]))) = (*($1) + [1])
	$1 = *($8 + [4])
	if ( ($1 == 0) ){ goto $label$30 }
	$11 = [0]
	goto $label$8 
	
.LABEL $label$45
	$2 = $1
	$1 = *($2)
	if ( $1 ){ goto $label$31 }
	$11 = [1]
	goto $label$8 
	
.LABEL $label$44
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$26 }
	$11 = [29]
	goto $label$8 
	
.LABEL $label$43
	CALL void $5((int_32 ($3 + [16])), (int_32 $3), (int_32 $6))
	CALL $36($3, *($3 + [4]))
	$1 = *($3 + [16])
	if ( ($1 == 0) ){ goto $label$9 }
	$11 = [30]
	goto $label$8 
	
.LABEL $label$42
	*($3 + [20]) = $1
	CALL _ZdlPv($1)
	$11 = [31]
	goto $label$8 
	
.LABEL $label$41
	$global$0 = ($3 + [32])
	return 
	
.LABEL $label$40
	$11 = [28]
	goto $label$8 
	
.LABEL $label$39
	$11 = [24]
	goto $label$8 
	
.LABEL $label$38
	$11 = [14]
	goto $label$8 
	
.LABEL $label$37
	$11 = [14]
	goto $label$8 
	
.LABEL $label$36
	$11 = [8]
	goto $label$8 
	
.LABEL $label$35
	$11 = [19]
	goto $label$8 
	
.LABEL $label$34
	$11 = [14]
	goto $label$8 
	
.LABEL $label$33
	$11 = [10]
	goto $label$8 
	
.LABEL $label$32
	$11 = [0]
	goto $label$8 
	
.LABEL $label$31
	$11 = [0]
	goto $label$8 
	
.LABEL $label$30
	$11 = [11]
	goto $label$8 
	
.LABEL $label$29
	$11 = [1]
	goto $label$8 
	
.LABEL $label$28
	$11 = [1]
	goto $label$8 
	
.LABEL $label$27
	$11 = [13]
	goto $label$8 
	
.LABEL $label$26
	$11 = [2]
	goto $label$8 
	
.LABEL $label$25
	$11 = [5]
	goto $label$8 
	
.LABEL $label$24
	$11 = [4]
	goto $label$8 
	
.LABEL $label$23
	$11 = [27]
	goto $label$8 
	
.LABEL $label$22
	$11 = [27]
	goto $label$8 
	
.LABEL $label$21
	$11 = [23]
	goto $label$8 
	
.LABEL $label$20
	$11 = [20]
	goto $label$8 
	
.LABEL $label$19
	$11 = [8]
	goto $label$8 
	
.LABEL $label$18
	$11 = [9]
	goto $label$8 
	
.LABEL $label$17
	$11 = [14]
	goto $label$8 
	
.LABEL $label$16
	$11 = [10]
	goto $label$8 
	
.LABEL $label$15
	$11 = [14]
	goto $label$8 
	
.LABEL $label$14
	$11 = [16]
	goto $label$8 
	
.LABEL $label$13
	$11 = [22]
	goto $label$8 
	
.LABEL $label$12
	$11 = [21]
	goto $label$8 
	
.LABEL $label$11
	$11 = [19]
	goto $label$8 
	
.LABEL $label$10
	$11 = [26]
	goto $label$8 
	
.LABEL $label$9
	$11 = [31]
	goto $label$8 
	(unreachable)
	$11
}

void .FUNC $83 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [32])
	$global$0 = $4
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$6 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($6) + $0))
	
.LABEL $label$1
	*($4 + [24]) = [0]
	*($4 + [16]) = (int_64)0
	$5 = (*($2 + [4]) - *($2))
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = CALL _Znwj($5)
	*(($4 + [24])) = ($7 + $5)
	*($4 + [16]) = $7
	*($4 + [20]) = $7
	$5 = *($2)
	$2 = (*(($2 + [4])) - $5)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($7, $5, $2)
	*($4 + [20]) = ($7 + $2)
	
.LABEL $label$4
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	$2 = (*($3 + [4]) - *($3))
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL _Znwj($2)
	*(($4 + [8])) = ($5 + $2)
	*($4) = $5
	*($4 + [4]) = $5
	$3 = *($3)
	$2 = (*(($3 + [4])) - $3)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($5, $3, $2)
	*($4 + [4]) = ($5 + $2)
	
.LABEL $label$5
	CALL void $6((int_32 $1), (int_64 ($4 + [16])), (int_32 $4), (int_32 $0))
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$6 }
	*($4 + [4]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$6
	$2 = *($4 + [16])
	if ( ($2 == 0) ){ goto $label$7 }
	*($4 + [20]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$7
	$global$0 = ($4 + [32])
	return (unreachable)
	
.LABEL $label$3
	CALL $120(($4 + [16]))
	
.LABEL $label$2
	CALL $120($4)
	(unreachable)
}

void .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $120($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $81 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = ($global$0 - [32])
	$global$0 = $5
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($7) + $0))
	
.LABEL $label$1
	*($5 + [24]) = [0]
	*($5 + [16]) = (int_64)0
	$6 = (*($3 + [4]) - *($3))
	if ( ($6 == 0) ){ goto $label$3 }
	$8 = int_32($6 >> [4])
	if ( ((uint_32)$8 >= (uint_32)[268435456]) ){ goto $label$2 }
	$6 = CALL _Znwj($6)
	*(($5 + [24])) = ($6 + ($8 << [4]))
	*($5 + [16]) = $6
	*($5 + [20]) = $6
	$8 = *($3)
	$3 = (*(($3 + [4])) - $8)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $8, $3)
	*($5 + [20]) = ($6 + $3)
	
.LABEL $label$3
	$3 = CALL $109($5, $4)
	CALL void $7((int_32 $1), (int_64 $2), (int_64 ($5 + [16])), (int_32 $3), (int_32 $0))
	if ( ((*($3) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$4
	$3 = *($5 + [16])
	if ( ($3 == 0) ){ goto $label$5 }
	*($5 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$5
	$global$0 = ($5 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $120(($5 + [16]))
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [4])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($2 >> [3])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL _Znwj(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $120($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [4]))
	$3 = ($2 + ($3 << [4]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [4]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL _ZdlPv($6)
	
.LABEL $label$10
	(unreachable)
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $75(CALL $74($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8981])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8981])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[12])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[357913942]) ){ goto $label$2 }
	$6 = [357913941]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[12])
	if ( ((uint_32)$7 > (uint_32)[178956969]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$6 * (int_32)[12]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $120($0)
	
.LABEL $label$1
	$8 = *($1)
	*($1) = (int_64)0
	*(($4 = ($5 + ((int_32)$4 * (int_32)[12])))) = $8
	$1 = ($1 + [8])
	$7 = *($1)
	*($1) = [0]
	*(($4 + [8])) = $7
	$6 = ($5 + ((int_32)$6 * (int_32)[12]))
	$5 = ($4 + [12])
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	$1 = ($2 + [-4])
	*(($4 + [-4])) = *($1)
	$2 = ($2 + [-12])
	*(($4 = ($4 + [-12]))) = *($2)
	*($2) = (int_64)0
	*($1) = [0]
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$6 }
	$2 = *(($0 + [4]))
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $4
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$4 = ($2 + [-12])
	if ( ((*($4) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*(($2 + [-4])))
	
.LABEL $label$9
	$2 = $4
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ($3 == 0) ){ goto $label$10 }
	CALL _ZdlPv($3)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $120($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8981])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8981])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8981])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8981])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $94(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $76 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	$4 = *($3 + [20])
	if ( ($4 == 0) ){ goto $label$6 }
	$5 = $4
	$6 = ($3 + [24])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $36(($7 + [-12]), *(($7 + [-8])))
	$7 = ($7 + [-16])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$8 }
	$5 = *(($3 + [20]))
	
.LABEL $label$7
	*($6) = $4
	CALL _ZdlPv($5)
	
.LABEL $label$6
	CALL $36(($3 + [8]), *(($3 + [12])))
	CALL _ZdlPv($3)
	
.LABEL $label$5
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$4 }
	$7 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$7 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL _ZdlPv($7)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $78($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $112($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $112($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $108($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8981])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8981])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [8981])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $39 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9313])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9359])
	
.LABEL $label$2
	$6 = *($1)
	$7 = ($1 + [12])
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$3 }
	$9 = *(*($3))
	$10 = $7
	
.LOOP $label$4:
	$11 = (uint_64)(*($8 + [16]) <= $9)
	$10 = ( $10 ? $8 : $11 )
	$8 = *(($8 + ($11 << [2])))
	if ( $8 ){ goto $label$4 }
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$3 }
	if ( (uint_64)($9 <= *($10 + [16])) ){ goto $label$3 }
	$11 = *($3 + [4])
	if ( ((int_64)*($10 + [32]) == (int_64)*($11 + [8])) ){ goto $label$5 }
	CALL eosio_assert([0], [8757])
	
.LABEL $label$5
	$8 = ($10 + [24])
	CALL eosio_assert(((int_64)*($8) >= (int_64)*($11)), [9708])
	$11 = *(($3 + [4]))
	if ( ((int_64)*($11 + [8]) == (int_64)*(($10 + [32]))) ){ goto $label$6 }
	CALL eosio_assert([0], [9469])
	
.LABEL $label$6
	$9 = (int_64)
	*($8) = $9(*($8) - *($11)))
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [9517])
	$9 = *(($10 + [24]))
	
.LABEL $label$7
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [9539])
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$8 }
	CALL eosio_assert([0], [9410])
	
.LABEL $label$8
	*($5) = [0]
	*($5 + [8]) = $5
	*($5 + [16]) = $1
	$7 = ($1 + [8])
	*($5 + [20]) = $7
	$3 = ($1 + [20])
	*($5 + [24]) = $3
	CALL $89(($5 + [16]), ($5 + [8]))
	$10 = *($5)
	if ( ($10 <= [513]) ){ goto $label$10 }
	$8 = CALL $133($10)
	goto $label$9 
	
.LABEL $label$10
	$8 = ($4 - (($10 + [15]) & [-16]))
	$global$0 = $8
	
.LABEL $label$9
	*($5 + [20]) = $8
	*($5 + [16]) = $8
	*($5 + [24]) = ($8 + $10)
	$11 = $8
	if ( ((int_32)$10 > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [8981])
	$11 = *($5 + [20])
	
.LABEL $label$11
	CALL memcpy($11, $1, [8])
	*($5 + [20]) = ($11 + [8])
	CALL $90(($5 + [16]), $7)
	CALL $91(($5 + [16]), $3)
	CALL db_update_i64(*($1 + [36]), $2, $8, $10)
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$14 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $136($8)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	
.LABEL $label$13
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [32])
	return 
	
.LABEL $label$12
	$global$0 = ($5 + [32])
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $36($0, *($1))
	CALL $36($0, *($1 + [4]))
	CALL _ZdlPv($1)
	
.LABEL $label$1
}

void .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9144])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [9144])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9144])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$5 = ($4 + [24])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9144])
	$0 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($1 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $0) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9144])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $0, [8])
	*(($4 + [32])) = *($2 + [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9149])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $70($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [9144])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [9149])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$3 = (CASTING uint_32)(uint_64 $4)
	$8 = *($1)
	$5 = *($1 + [4])
	$7 = int_32(($5 - $8) >> [4])
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$5 }
	CALL $80($1, ($3 - $7))
	$5 = *(($1 + [4]))
	$8 = *($1)
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$7 <= (uint_32)$3) ){ goto $label$6 }
	$5 = ($8 + ($3 << [4]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$3 = ($0 + [4])
	$7 = *($3)
	$6 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($6) - $7) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9144])
	$7 = *($3)
	
.LABEL $label$8
	CALL memcpy($8, $7, [8])
	$7 = (*($3) + [8])
	*($3) = $7
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $7) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9144])
	$7 = *($3)
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $7, [8])
	*(($8 + [8])) = *($2 + [8])
	$7 = (*($3) + [8])
	*($3) = $7
	$8 = ($8 + [16])
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $5
	$7 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9204])
	
.LABEL $label$5
	$5 = CALL $133($6)
	$7 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $6)
	*($3 + [36]) = $5
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + $6)
	*(($4 = CALL _Znwj([48]))) = (int_64)0
	*($4 + [12 align=4]) = (int_64)0
	*($4 + [20 align=4]) = (int_64)0
	*($4 + [28]) = [0]
	*($4 + [32]) = $0
	*($4 + [8]) = ($4 + [12])
	$8 = ($4 + [20])
	$9 = ($4 + [8])
	$2 = $5
	if ( ((uint_32)$6 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9144])
	$2 = *($3 + [36])
	
.LABEL $label$7
	CALL memcpy($4, $2, [8])
	*($3 + [36]) = ($2 + [8])
	CALL $59(($3 + [32]), $9)
	CALL $86(($3 + [32]), $8)
	*($4 + [36]) = $1
	*($3 + [24]) = $4
	$10 = *($4)
	*($3 + [16]) = $10
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($6 + [8]) = $10
	*($6 + [16]) = $1
	*($3 + [24]) = [0]
	*($6) = $4
	*($2) = ($6 + [24])
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $35(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $136($5)
	
.LABEL $label$8
	$0 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	$1 = *($0 + [20])
	if ( ($1 == 0) ){ goto $label$12 }
	$6 = $1
	$2 = ($0 + [24])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	CALL $36(($5 + [-12]), *(($5 + [-8])))
	$5 = ($5 + [-16])
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$14 }
	$6 = *(($0 + [20]))
	
.LABEL $label$13
	*($2) = $1
	CALL _ZdlPv($6)
	
.LABEL $label$12
	CALL $36(($0 + [8]), *(($0 + [12])))
	CALL _ZdlPv($0)
	
.LABEL $label$11
	$global$0 = ($3 + [48])
	return $4
}

void .FUNC $33 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9313])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9359])
	
.LABEL $label$2
	$6 = ($1 + [8])
	$7 = *(($3 + [4]))
	$3 = *($3)
	$8 = *($1)
	$9 = ($1 + [12])
	$10 = *($9)
	if ( ($10 == 0) ){ goto $label$12 }
	$11 = *($3)
	$12 = $9
	$3 = $10
	
.LOOP $label$13:
	$13 = (uint_64)(*($3 + [16]) <= $11)
	$12 = ( $12 ? $3 : $13 )
	$3 = *(($3 + ($13 << [2])))
	if ( $3 ){ goto $label$13 }
	if ( ((int_32)$12 == (int_32)$9) ){ goto $label$14 }
	if ( ((uint_64)$11 >= (uint_64)*($12 + [16])) ){ goto $label$11 }
	
.LABEL $label$14
	*(($5 + [8])) = *(($7 + [8]))
	*($5) = *($7)
	$9 = ($1 + [12])
	$14 = *($10 + [16])
	if ( ((uint_64)$11 >= (uint_64)$14) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$12
	*(($5 + [8])) = *(($7 + [8]))
	*($5) = *($7)
	$11 = *($3)
	$12 = $5
	$10 = $9
	if ( *($9) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$11
	if ( ((int_64)*($7 + [8]) == (int_64)*($12 + [32])) ){ goto $label$15 }
	CALL eosio_assert([0], [8885])
	
.LABEL $label$15
	$11 = ((int_64)*($3) + (int_64)*($7))
	*(($3 = ($12 + [24]))) = $11
	if ( ((int_64)$11 > (int_64)-4611686018427387904) ){ goto $label$16 }
	CALL eosio_assert([0], [8928])
	$11 = *($3)
	
.LABEL $label$16
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [8947])
	if ( ((int_64)$8 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$10
	$15 = [20]
	goto $label$3 
	
.LABEL $label$9
	$15 = [2]
	goto $label$3 
	
.LABEL $label$8
	$15 = [4]
	goto $label$3 
	
.LABEL $label$7
	$15 = [16]
	goto $label$3 
	
.LABEL $label$6
	$15 = [4]
	goto $label$3 
	
.LABEL $label$5
	$15 = [6]
	goto $label$3 
	
.LABEL $label$4
	$15 = [5]
	
.LABEL $label$3
	
.LOOP $label$17:
	goto $label$52 
	
.LABEL $label$56
	$9 = $10
	$10 = $3
	$14 = *($10 + [16])
	if ( ((uint_64)$11 >= (uint_64)$14) ){ goto $label$34 }
	$15 = [20]
	goto $label$17 
	
.LABEL $label$55
	$3 = *($10)
	if ( $3 ){ goto $label$30 }
	goto $label$31 
	
.LABEL $label$54
	if ( ((uint_64)$14 >= (uint_64)$11) ){ goto $label$29 }
	$15 = [19]
	goto $label$17 
	
.LABEL $label$53
	$9 = ($10 + [4])
	$3 = *($10 + [4])
	if ( ($3 == 0) ){ goto $label$32 }
	$15 = [0]
	goto $label$17 
	
.LABEL $label$52
	$10 = $9
	goto $label$33 
	
.LABEL $label$51
	$12 = $5
	if ( *($9) ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$50
	$12 = $5
	$9 = $10
	if ( *($9) ){ goto $label$26 }
	$15 = [16]
	goto $label$17 
	
.LABEL $label$49
	*(($3 = CALL _Znwj([40]))) = (int_64)0
	*($3 + [8]) = $10
	*($3 + [24]) = *($12)
	*(($3 + [32])) = *(($12 + [8]))
	*($9) = $3
	*($3 + [16]) = $11
	$12 = *(*($6))
	if ( ($12 == 0) ){ goto $label$18 }
	$15 = [17]
	goto $label$17 
	
.LABEL $label$48
	*($6) = $12
	$3 = *($9)
	$15 = [18]
	goto $label$17 
	
.LABEL $label$47
	CALL $52(*(($1 + [12])), $3)
	*(($3 = ($1 + [16]))) = (*($3) + [1])
	$15 = [4]
	goto $label$17 
	
.LABEL $label$46
	if ( ((int_64)$8 == (int_64)*($1)) ){ goto $label$25 }
	$15 = [5]
	goto $label$17 
	
.LABEL $label$45
	CALL eosio_assert([0], [9410])
	$15 = [6]
	goto $label$17 
	
.LABEL $label$44
	*($5 + [16]) = [0]
	*($5 + [24]) = ($5 + [16])
	*($5 + [4]) = $6
	*($5) = $1
	$10 = ($1 + [20])
	*($5 + [8]) = $10
	CALL $89($5, ($5 + [24]))
	$12 = *($5 + [16])
	if ( ($12 <= [513]) ){ goto $label$24 }
	$15 = [15]
	goto $label$17 
	
.LABEL $label$43
	$3 = CALL $133($12)
	goto $label$23 
	
.LABEL $label$42
	$3 = ($4 - (($12 + [15]) & [-16]))
	$global$0 = $3
	$15 = [8]
	goto $label$17 
	
.LABEL $label$41
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $12)
	$13 = $3
	if ( ((int_32)$12 > (int_32)[7]) ){ goto $label$22 }
	$15 = [14]
	goto $label$17 
	
.LABEL $label$40
	CALL eosio_assert([0], [8981])
	$13 = *($5 + [4])
	$15 = [9]
	goto $label$17 
	
.LABEL $label$39
	CALL memcpy($13, $1, [8])
	*($5 + [4]) = ($13 + [8])
	CALL $90($5, $6)
	CALL $91($5, $10)
	CALL db_update_i64(*($1 + [36]), $2, $3, $12)
	if ( ((uint_32)$12 >= (uint_32)[513]) ){ goto $label$21 }
	$15 = [10]
	goto $label$17 
	
.LABEL $label$38
	if ( ((uint_64)$8 >= (uint_64)*($0 + [16])) ){ goto $label$20 }
	$15 = [12]
	goto $label$17 
	
.LABEL $label$37
	$global$0 = ($5 + [32])
	return 
	
.LABEL $label$36
	CALL $136($3)
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$19 }
	$15 = [11]
	goto $label$17 
	
.LABEL $label$35
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [32])
	return 
	
.LABEL $label$34
	$15 = [2]
	goto $label$17 
	
.LABEL $label$33
	$15 = [1]
	goto $label$17 
	
.LABEL $label$32
	$15 = [3]
	goto $label$17 
	
.LABEL $label$31
	$15 = [21]
	goto $label$17 
	
.LABEL $label$30
	$15 = [1]
	goto $label$17 
	
.LABEL $label$29
	$15 = [3]
	goto $label$17 
	
.LABEL $label$28
	$15 = [16]
	goto $label$17 
	
.LABEL $label$27
	$15 = [4]
	goto $label$17 
	
.LABEL $label$26
	$15 = [4]
	goto $label$17 
	
.LABEL $label$25
	$15 = [6]
	goto $label$17 
	
.LABEL $label$24
	$15 = [7]
	goto $label$17 
	
.LABEL $label$23
	$15 = [8]
	goto $label$17 
	
.LABEL $label$22
	$15 = [9]
	goto $label$17 
	
.LABEL $label$21
	$15 = [13]
	goto $label$17 
	
.LABEL $label$20
	$15 = [11]
	goto $label$17 
	
.LABEL $label$19
	$15 = [12]
	goto $label$17 
	
.LABEL $label$18
	$15 = [18]
	goto $label$17 
	$15
}

void .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9144])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9144])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [16])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9144])
	$4 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($1 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9144])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [24])) = *($2 + [8])
	*($4) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $31 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9313])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9359])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9469])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [8]) = $7(*($1 + [8]) - *($3)))
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [9517])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [9539])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9410])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $85($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [16])
}

int_32 .FUNC $129 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

int_64 .FUNC $127 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$17 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$17 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$18:
	$6 = *($5)
	if ( ($6 <= *($4)) ){ goto $label$20 }
	$6 = CALL $126($0)
	if ( ((uint_32)($6 + [-9]) >= (uint_32)[5]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( (($6 + [-9]) <= [5]) ){ goto $label$18 }
	
.LABEL $label$19
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$18 }
	$5 = ((int_32)$6 == (int_32)[45])
	if ( $5 ){ goto $label$21 }
	if ( ((int_32)$6 != (int_32)[43]) ){ goto $label$16 }
	
.LABEL $label$21
	$7 = ( [-1] ? [0] : $5 )
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$15 }
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$17
	*(CALL $121()) = [22]
	return (int_64)0
	
.LABEL $label$16
	$7 = [0]
	if ( ((int_32)($1 | [16]) == (int_32)[16]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$6 = CALL $126($0)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$13 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$12 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$11 
	
.LABEL $label$13
	$1 = ( $1 ? [10] : $1 )
	if ( ((uint_32)$1 > (uint_32)*(($6 + [18209]))) ){ goto $label$10 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$22 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$22
	CALL $125($0, (int_64)0)
	*(CALL $121()) = [22]
	return (int_64)0
	
.LABEL $label$12
	$6 = CALL $126($0)
	
.LABEL $label$11
	if ( ((int_32)($6 | [32]) != (int_32)[120]) ){ goto $label$23 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$9 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$8 
	
.LABEL $label$23
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$6 }
	$8 = (int_64)0
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$5 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$25:
	$6 = ((int_32)$5 * (int_32)[10])
	$1 = *($2)
	if ( ((uint_32)$1 >= (uint_32)*($9)) ){ goto $label$27 }
	*($2) = ($1 + [1])
	$5 = ($6 + $4)
	$6 = *($1)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 <= (uint_32)[9]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$27
	$5 = ($6 + $4)
	$6 = CALL $126($0)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$24 }
	
.LABEL $label$26
	if ( ($5 <= [429496729]) ){ goto $label$25 }
	
.LABEL $label$24
	$8 = (CASTING uint_64)(uint_32 $5)
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$1 = [10]
	$11 = (CASTING int_64)(int_32 $4)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$28:
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$30 }
	*($4) = ($6 + [1])
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = *($6)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 <= (uint_32)[9]) ){ goto $label$29 }
	goto $label$4 
	
.LABEL $label$30
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = CALL $126($0)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$4 }
	
.LABEL $label$29
	if ( ((uint_64)$8 >= (uint_64)(int_64)1844674407370955162) ){ goto $label$4 }
	$11 = (CASTING int_64)(int_32 $5)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 <= (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$28 }
	goto $label$3 
	
.LABEL $label$9
	$6 = CALL $126($0)
	
.LABEL $label$8
	$1 = [16]
	if ( (*(($6 + [18209])) <= [16]) ){ goto $label$6 }
	$6 = *(($0 + [104]))
	if ( ($6 == 0) ){ goto $label$31 }
	*(($5 = ($0 + [4]))) = (*($5) + [-1])
	
.LABEL $label$31
	if ( ($2 == 0) ){ goto $label$5 }
	$8 = (int_64)0
	if ( ($6 == 0) ){ goto $label$1 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	return (int_64)0
	
.LABEL $label$7
	$1 = [8]
	
.LABEL $label$6
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$32 }
	$8 = (int_64)0
	$5 = *(($6 + [18209]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$33 }
	$4 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$35:
	$4 = ($5 + ((int_32)$4 * (int_32)$1))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($9)) ){ goto $label$37 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [18209]))
	if ( ((uint_32)$4 <= (uint_32)[119304646]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$6 = CALL $126($0)
	$5 = *(($6 + [18209]))
	if ( ((uint_32)$4 > (uint_32)[119304646]) ){ goto $label$34 }
	
.LABEL $label$36
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$35 }
	
.LABEL $label$34
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$33
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$12 = (CASTING uint_64)(uint_32 $1)
	$13 = ((uint_64)(int_64)-1 / (uint_64)$12)
	if ( ((uint_64)$8 > (uint_64)$13) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$38:
	$11 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$10 = ((int_64)$8 * (int_64)$12)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$40 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$39 
	
.LABEL $label$40
	$6 = CALL $126($0)
	
.LABEL $label$39
	$8 = ((int_64)$10 + (int_64)$11)
	$5 = *(($6 + [18209]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$13) ){ goto $label$38 }
	goto $label$3 
	
.LABEL $label$32
	$9 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [8256]))
	$8 = (int_64)0
	$5 = *(($6 + [18209]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$41 }
	$4 = [0]
	$14 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$43:
	$4 = ($5 | ($4 << $9))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($14)) ){ goto $label$45 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [18209]))
	if ( ((uint_32)$4 <= (uint_32)[134217727]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$45
	$6 = CALL $126($0)
	$5 = *(($6 + [18209]))
	if ( ((uint_32)$4 > (uint_32)[134217727]) ){ goto $label$42 }
	
.LABEL $label$44
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$43 }
	
.LABEL $label$42
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$41
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$11 = (CASTING uint_64)(uint_32 $9)
	$12 = (uint_64)(int_64)-1 >> (uint_64)$11
	if ( (uint_64)($12) <= $8) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$46:
	$8 = ((int_64)$8 << (int_64)$11)
	$10 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$48 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$47 
	
.LABEL $label$48
	$6 = CALL $126($0)
	
.LABEL $label$47
	$8 = ((int_64)$8 | (int_64)$10)
	$5 = *(($6 + [18209]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$12) ){ goto $label$46 }
	goto $label$3 
	
.LABEL $label$5
	CALL $125($0, (int_64)0)
	return (int_64)0
	
.LABEL $label$4
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((uint_32)$1 <= (uint_32)*(($6 + [18209]))) ){ goto $label$2 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$50:
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*($4)) ){ goto $label$51 }
	*($5) = ($6 + [1])
	if ( ((uint_32)$1 > (uint_32)*((*($6) + [18209]))) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	if ( ((uint_32)$1 > (uint_32)*((CALL $126($0) + [18209]))) ){ goto $label$50 }
	
.LABEL $label$49
	*(CALL $121()) = [34]
	$7 = ( $7 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$8 = $3
	
.LABEL $label$2
	if ( (*(($0 + [104])) == 0) ){ goto $label$52 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$52
	if ( (uint_64)($8 <= $3) ){ goto $label$53 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$54 }
	if ( $7 ){ goto $label$54 }
	*(CALL $121()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$54
	if ( ((uint_64)$8 <= (uint_64)$3) ){ goto $label$53 }
	*(CALL $121()) = [34]
	return $3
	
.LABEL $label$53
	$10 = (CASTING int_64)(int_32 $7)
	$8 = (int_64))(((int_64)$8 ^ (int_64)$10) - $10)
	
.LABEL $label$1
	return $8
}