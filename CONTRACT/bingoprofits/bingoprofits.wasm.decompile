(data (i32.const 8192) "difference. Mismatch symbols\00")
(data (i32.const 8221) "difference. Result cant be negative\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 8343) "div. Mismatch symbols\00")
(data (i32.const 8365) "Inner exception : unknown asset symbol \00")
(data (i32.const 8405) "how did u get so big asset?\00")
(data (i32.const 8433) "onerror\00")
(data (i32.const 8441) "eosio\00")
(data (i32.const 8447) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 8511) "bingoprofits\00")
(data (i32.const 8524) "Wrong permission\00")
(data (i32.const 8541) "stake: Only BINGO tokens are allowed for staking\00%llu\00")
(data (i32.const 8595) "stake: stake cannot be 0\00")
(data (i32.const 8620) "stake: Staking is not allowed at the moment. Wait until payout processing ends\00")
(data (i32.const 8699) "userdefault\00")
(data (i32.const 8711) "stake: Your share cannot exceed \00")
(data (i32.const 8744) "%\00")
(data (i32.const 8746) "4\00")
(data (i32.const 8748) "bingobetoken\00")
(data (i32.const 8761) "stake: You have no BINGO tokens to stake\00")
(data (i32.const 8802) "stake: Incorrect record about BINGO tokens\00")
(data (i32.const 8845) "stake: You have no such amount of unstaked BINGO tokens\00")
(data (i32.const 8901) "unstake: Only BINGO tokens are allowed for unstaking\00")
(data (i32.const 8954) "unstake: stake cannot be 0\00")
(data (i32.const 8981) "unstake: Inner exception. No info about staked values\00")
(data (i32.const 9035) "unstake: You have no staked BINGO tokens\00")
(data (i32.const 9076) "unstake: You have no such amount of staked BINGO tokens\00")
(data (i32.const 9132) "unstake: Unstaking is not allowed at the moment. Wait until payout processing ends\00")
(data (i32.const 9215) "unstake: Internal error, no info about staked values\00")
(data (i32.const 9268) "unstake:Internal error, not enoung funds\00")
(data (i32.const 9309) "bingobetgame\00")
(data (i32.const 9322) "bingobetserv\00")
(data (i32.const 9335) "Permission denied. Should be server, profits or contract\00")
(data (i32.const 9392) "quantity should be in BINGO\00")
(data (i32.const 9420) "addprofits,.\00")
(data (i32.const 9433) " is nod valid account.\00")
(data (i32.const 9456) "bingobetuser\00")
(data (i32.const 9469) "permission is denied\00")
(data (i32.const 9490) "You can\'t use this action.\00")
(data (i32.const 9517) "active\00")
(data (i32.const 9524) "keepstake\00")
(data (i32.const 9534) "stake\00")
(data (i32.const 9540) "You have no staked BINGO tokens\00")
(data (i32.const 9572) "calcvrt\00")
(data (i32.const 9580) "calcpayout\00")
(data (i32.const 9591) "transfer\00")
(data (i32.const 9600) "returnfunds\00")
(data (i32.const 9612) "only bingobetgame dapp is allowed\00")
(data (i32.const 9646) "only virtualsers is allowed\00")
(data (i32.const 9674) "unstake\00")
(data (i32.const 9682) "vrtunstake: You have no such amount of staked BINGO tokens\00")
(data (i32.const 9741) "retrnfundsvt\00")
(data (i32.const 9754) "addfunds\00")
(data (i32.const 9763) "No info about specified user and account provider\00")
(data (i32.const 9813) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 9862) "invalid symbol name\00")
(data (i32.const 9882) "eosio.token\00")
(data (i32.const 9894) "EOS\00")
(data (i32.const 9898) "BINGO\00")
(data (i32.const 9904) "letitplaytkn\00")
(data (i32.const 9917) "PLAY\00")
(data (i32.const 9922) "bitpietokens\00")
(data (i32.const 9935) "EUSD\00")
(data (i32.const 9940) "EBTC\00")
(data (i32.const 9945) "EETH\00")
(data (i32.const 9950) "eosiomeetone\00")
(data (i32.const 9963) "MEETONE\00")
(data (i32.const 9971) "eosiotptoken\00")
(data (i32.const 9984) "TPT\00")
(data (i32.const 9988) "octtothemoon\00")
(data (i32.const 10001) "OCT\00")
(data (i32.const 10005) "string is too long to be a valid name\00")
(data (i32.const 10043) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 10110) "character is not in allowed character set for names\00")
(data (i32.const 10162) "attempt to add asset with different symbol\00")
(data (i32.const 10205) "addition underflow\00")
(data (i32.const 10224) "addition overflow\00")
(data (i32.const 10242) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 10301) "attempt to subtract asset with different symbol\00")
(data (i32.const 10349) "subtraction underflow\00")
(data (i32.const 10371) "subtraction overflow\00")
(data (i32.const 10392) "write\00")
(data (i32.const 10398) "read\00")
(data (i32.const 10403) "get\00")
(data (i32.const 10407) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 10458) "error reading iterator\00")
(data (i32.const 10481) "cannot create objects in table of another contract\00")
(data (i32.const 10532) "cannot pass end iterator to modify\00")
(data (i32.const 10567) "object passed to modify is not in multi_index\00")
(data (i32.const 10613) "cannot modify objects in table of another contract\00")
(data (i32.const 10664) "updater cannot change primary key when modifying an object\00")
(data (i32.const 10723) "singleton does not exist\00")
(data (i32.const 10748) "cannot pass end iterator to erase\00")
(data (i32.const 10782) "cannot increment end iterator\00")
(data (i32.const 10812) "object passed to erase is not in multi_index\00")
(data (i32.const 10857) "cannot erase objects in table of another contract\00")
(data (i32.const 10907) "attempt to remove object that was not in multi_index\00")
(data (i32.const 10960) "\d4*\00\00")
(data (i32.const 10964) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 10997) "Payout for staking BINGO tokens on bingobet.one\00")
(data (i32.const 11045) "Nothing to claim\00")
(data (i32.const 19488) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(import "env" "eosio_assert" (func $fimport$0 (param i32 i32)))
(import "env" "__multi3" (func $fimport$1 (param i32 i64 i64 i64 i64)))
(import "env" "__udivti3" (func $fimport$2 (param i32 i64 i64 i64 i64)))
(import "env" "sha256" (func $fimport$3 (param i32 i32 i32)))
(import "env" "memcpy" (func $fimport$4 (param i32 i32 i32) (result i32)))
(import "env" "sha1" (func $fimport$5 (param i32 i32 i32)))
(import "env" "memset" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "action_data_size" (func $fimport$7 (result i32)))
(import "env" "read_action_data" (func $fimport$8 (param i32 i32) (result i32)))
(import "env" "has_auth" (func $fimport$9 (param i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$10 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$11 (result i64)))
(import "env" "db_store_i64" (func $fimport$12 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "prints" (func $fimport$13 (param i32)))
(import "env" "db_lowerbound_i64" (func $fimport$14 (param i64 i64 i64 i64) (result i32)))
(import "env" "require_auth" (func $fimport$15 (param i64)))
(import "env" "db_next_i64" (func $fimport$16 (param i32 i32) (result i32)))
(import "env" "current_time" (func $fimport$17 (result i64)))
(import "env" "cancel_deferred" (func $fimport$18 (param i32) (result i32)))
(import "env" "is_account" (func $fimport$19 (param i64) (result i32)))
(import "env" "send_inline" (func $fimport$20 (param i32 i32)))
(import "env" "send_deferred" (func $fimport$21 (param i32 i64 i32 i32 i32)))
(import "env" "memmove" (func $fimport$22 (param i32 i32 i32) (result i32)))
(import "env" "abort" (func $fimport$23))
(import "env" "db_get_i64" (func $fimport$24 (param i32 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$25 (param i32 i64 i32 i32)))
(import "env" "db_remove_i64" (func $fimport$26 (param i32)))
(import "env" "prints_l" (func $fimport$27 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$28 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$29 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$30 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$31 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$32 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$33 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$34 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$35 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$36 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$37 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$38 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$39 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$40 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$41 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$42 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$43 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$44 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$45 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$46 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $7))
(export "_ZdlPv" (func $137))
(export "_Znaj" (func $136))
(export "_ZdaPv" (func $138))
(export "_Znwj" (func $135))
(export "_ZnwjSt11align_val_t" (func $139))
(export "_ZnajSt11align_val_t" (func $140))
(export "_ZdlPvSt11align_val_t" (func $141))
(export "_ZdaPvSt11align_val_t" (func $142))
(table $0 20 20 anyfunc)
(elem (i32.const 1) $8 $12 $14 $16 $17 $19 $21 $22 $24 $26 $27 $28 $29 $30 $31 $33 $34 $154 $156)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 19568))
(global $global$2 i32 (i32.const 19568))


void .FUNC $98 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10567])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10613])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10301])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [8]) = $7(*($1 + [8]) - *($3)))
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10349])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10371])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10664])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $52($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [16])
}

void .FUNC $99 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10567])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10613])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10301])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [16]) = $7(*($1 + [16]) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [10349])
	$7 = *(($1 + [16]))
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10371])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)*(($1 + [8]))) ){ goto $label$6 }
	CALL eosio_assert([0], [10664])
	
.LABEL $label$6
	$9 = *($1 + [32])
	$8 = *(($1 + [36]))
	$10 = ($8 - $9)
	$7 = (CASTING uint_64)(uint_32 ((int_32)$10 / (int_32)[48]))
	$3 = [68]
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$11 }
	$8 = (((int_32)((uint_32)($10 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $3)
	if ( ($8 <= [513]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$8 = ($3 + [-36])
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$9 }
	
.LABEL $label$10
	$3 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $3
	goto $label$8 
	
.LABEL $label$9
	$3 = CALL $161($8)
	
.LABEL $label$8
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $8)
	CALL $133($5, $1)
	CALL db_update_i64(*($1 + [48]), $2, $3, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$14 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $164($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	
.LABEL $label$13
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$12
	$global$0 = ($5 + [16])
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = [0]
	*($2 + [8]) = [0]
	*($2) = (int_64)0
	$4 = (*($1 + [4]) - *($1))
	$5 = ((int_32)$4 / (int_32)[48])
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[89478486]) ){ goto $label$2 }
	$4 = CALL _Znwj($4)
	*(($2 + [8])) = ($4 + ((int_32)$5 * (int_32)[48]))
	*($2) = $4
	*($2 + [4]) = $4
	$5 = *($1)
	$3 = (*(($1 + [4])) - $5)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($4, $5, $3)
	$3 = ($4 + ((int_32)((uint_32)$3 / (uint_32)[48]) * (int_32)[48]))
	*($2 + [4]) = $3
	goto $label$4 
	
.LABEL $label$6
	$4 = [0]
	$6 = [0]
	$7 = [0]
	goto $label$3 
	
.LABEL $label$5
	$3 = $4
	
.LABEL $label$4
	$6 = $4
	$7 = $4
	
.LABEL $label$3
	$8 = *($1 + [32])
	$9 = *($1 + [24])
	$10 = *($1 + [16])
	$1 = *($0 + [4])
	$0 = *($1 + [4])
	$5 = (*($0) + int_32($0 >> [1]))
	$1 = *($1)
	if ( (($0 & [1]) == 0) ){ goto $label$7 }
	$1 = *((*($5) + $1))
	
.LABEL $label$7
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	$0 = ($3 - $7)
	$7 = ((int_32)$0 / (int_32)[48])
	if ( ($0 == 0) ){ goto $label$8 }
	if ( ((uint_32)$7 >= (uint_32)[89478486]) ){ goto $label$1 }
	$0 = CALL _Znwj($0)
	*(($2 + [24])) = ($0 + ((int_32)$7 * (int_32)[48]))
	*($2 + [16]) = $0
	*($2 + [20]) = $0
	$3 = ($3 - $6)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($0, $4, $3)
	*($2 + [20]) = ($0 + ((int_32)((uint_32)$3 / (uint_32)[48]) * (int_32)[48]))
	
.LABEL $label$8
	CALL void $5((int_32 ($2 + [16])), (int_32 $10), (int_64 $9), (int_64 $8), (int_32 $1))
	$1 = *($2 + [16])
	if ( ($1 == 0) ){ goto $label$9 }
	*($2 + [20]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$10 }
	*($2 + [4]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $150($2)
	
.LABEL $label$1
	CALL $150(($2 + [16]))
	(unreachable)
}

void .FUNC $95 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_32 $19
	$4 = ($global$0 - [192])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10567])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10613])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$9 = *($7 + [4])
	$7 = *($3)
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	$10 = ($1 + [32])
	$11 = ($1 + [36])
	$12 = ($3 + [4])
	$13 = (($5 + [144]) + [16])
	$14 = ($1 + [40])
	
.LOOP $label$4:
	CALL __multi3(($5 + [128]), *($8 + [16]), *(($8 + [24])), (int_64)100, (int_64)0)
	CALL __udivti3(($5 + [112]), *($5 + [128]), *((($5 + [128]) + [8])), (int_64)100, (int_64)0)
	CALL __udivti3(($5 + [96]), *($5 + [112]), *((($5 + [112]) + [8])), *($8 + [32]), (int_64)0)
	$15 = *($8)
	$16 = *($5 + [96])
	if ( (uint_64)(((int_64)$16 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$5 }
	CALL eosio_assert([0], [9813])
	
.LABEL $label$5
	$17 = (uint_64)$15 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$18 = (uint_64)$17 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$17 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$17 = $18
	$7 = $3
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$17 = $18
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$17 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8)
	$7 = ((int_32)$3 < (int_32)[6])
	$19 = ($3 + [1])
	$3 = $19
	if ( $7 ){ goto $label$10 }
	$3 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [9862])
	
.LABEL $label$6
	$19 = *($12)
	$7 = *($11)
	$3 = *($10)
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$14 }
	
.LOOP $label$15:
	if ( ((int_64)*($3) == (int_64)$15) ){ goto $label$13 }
	$3 = ($3 + [48])
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$15 }
	
.LABEL $label$14
	$17 = CALL $2($15)
	CALL __multi3(($5 + [32]), $16, (int_64)$16 >> (int_64)63), *($19 + [16]), *(($19 + [24])))
	CALL __multi3(($5 + [16]), *($5 + [32]), *((($5 + [32]) + [8])), (int_64)100, (int_64)0)
	CALL __udivti3($5, *($5 + [16]), *((($5 + [16]) + [8])), (int_64)100, (int_64)0)
	*(($7 = (($5 + [144]) + [32]))) = [1000000000]
	*(($19 = (($5 + [144]) + [24]))) = *(($5 + [8]))
	*($13) = *($5)
	*($5 + [144]) = $15
	*($5 + [152]) = $17
	$3 = *($11)
	if ( ((int_32)$3 == (int_32)*($14)) ){ goto $label$12 }
	*($3) = *($5 + [144])
	*(($3 + [8])) = *($5 + [152])
	*(($3 + [40])) = *((($5 + [144]) + [40]))
	*(($3 + [32])) = *($7)
	*(($3 + [24])) = *($19)
	*(($3 + [16])) = *($13)
	*($11) = (*($11) + [48])
	$8 = ($8 + [48])
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$4 }
	goto $label$11 
	
.LABEL $label$13
	CALL __multi3(($5 + [80]), $16, (int_64)$16 >> (int_64)63), *($19 + [16]), *(($19 + [24])))
	CALL __multi3(($5 + [64]), *($5 + [80]), *((($5 + [80]) + [8])), (int_64)100, (int_64)0)
	CALL __udivti3(($5 + [48]), *($5 + [64]), *((($5 + [64]) + [8])), (int_64)100, (int_64)0)
	$15 = *($5 + [48])
	$17 = ((int_64)$15 + (int_64)*($7))
	*(($7 = ($3 + [16]))) = $17
	$15 = ((int_64)((int_64)*((($5 + [48]) + [8])) + (int_64)*($3)) + (int_64)(CASTING uint_64)(uint_32 (uint_64)($17 <= $15)))
	*(($3 = ($3 + [24]))) = $15
	if ( ( (uint_64)($17 <= (int_64)-999999999) ? (uint_64)($15 <= (int_64)249999999) : ((int_64)$15 == (int_64)249999999) ) ){ goto $label$16 }
	CALL eosio_assert([0], [8405])
	
.LABEL $label$16
	$8 = ($8 + [48])
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$4 }
	goto $label$11 
	
.LABEL $label$12
	CALL $6($10, ($5 + [144]))
	$8 = ($8 + [48])
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$4 }
	
.LABEL $label$11
	if ( ((int_64)$6 == (int_64)*(($1 + [8]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10664])
	
.LABEL $label$3
	$19 = *($1 + [32])
	$7 = *(($1 + [36]))
	$8 = ($7 - $19)
	$17 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[48]))
	$3 = [68]
	
.LOOP $label$17:
	$3 = ($3 + [1])
	$17 = (uint_64)$17 >> (uint_64)(int_64)7
	if ( ((int_64)$17) != (int_64)0) ){ goto $label$17 }
	if ( ((int_32)$19 == (int_32)$7) ){ goto $label$21 }
	$7 = (((int_32)((uint_32)($8 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $3)
	if ( ($7 <= [513]) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$7 = ($3 + [-36])
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$19 }
	
.LABEL $label$20
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	goto $label$18 
	
.LABEL $label$19
	$3 = CALL $161($7)
	
.LABEL $label$18
	*($5 + [148]) = $3
	*($5 + [144]) = $3
	*($5 + [152]) = ($3 + $7)
	CALL $133(($5 + [144]), $1)
	CALL db_update_i64(*($1 + [48]), $2, $3, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$24 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	CALL $164($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$22 }
	
.LABEL $label$23
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [192])
	return 
	
.LABEL $label$22
	$global$0 = ($5 + [192])
}

int_32 .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10398])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10398])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10398])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	return $0
}

void .FUNC $97 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_64 $16
	int_32 $17
	int_32 $18
	$4 = ($global$0 - [144])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10567])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10613])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$8 = *(($1 + [36]))
	$7 = *($1 + [32])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$4 }
	$9 = ($3 + [4])
	$10 = [0]
	
.LOOP $label$5:
	$11 = ($7 + [24])
	CALL __multi3(($5 + [80]), *($7 + [16]), *($11), (int_64)100, (int_64)0)
	CALL __udivti3(($5 + [64]), *($5 + [80]), *((($5 + [80]) + [8])), (int_64)100, (int_64)0)
	CALL __udivti3(($5 + [48]), *($5 + [64]), *((($5 + [64]) + [8])), *($7 + [32]), (int_64)0)
	$12 = *($7)
	$13 = *($5 + [48])
	if ( (uint_64)(((int_64)$13 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$6 }
	CALL eosio_assert([0], [9813])
	
.LABEL $label$6
	$14 = (uint_64)$12 >> (uint_64)(int_64)8)
	$15 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$16 = (uint_64)$14 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$14 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$14 = $16
	$17 = $15
	$15 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[6]) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$13
	$14 = $16
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$14 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8)
	$17 = ((int_32)$15 < (int_32)[6])
	$18 = ($15 + [1])
	$15 = $18
	if ( $17 ){ goto $label$14 }
	$15 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[6]) ){ goto $label$11 }
	
.LABEL $label$12
	if ( ((int_64)($13 == 0) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL eosio_assert([0], [9862])
	if ( (int_64)($13 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	*($5 + [128]) = [8511]
	*($5 + [132]) = CALL $158([8511])
	*($5 + [40]) = *($5 + [128])
	CALL $4(($5 + [136]), ($5 + [40]))
	*(($15 = (($5 + [112]) + [8]))) = $12
	*($5 + [112]) = $13
	$14 = *(*($3))
	CALL $149(($5 + [96]), *(*($9)))
	$16 = CALL $2($12)
	*((($5 + [24]) + [8])) = *($15)
	*($5 + [24]) = *($5 + [112])
	CALL $109(*($5 + [136]), $14, ($5 + [24]), ($5 + [96]), $16)
	if ( ((*($5 + [96]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*((($5 + [96]) + [8])))
	
.LABEL $label$15
	CALL eosio_assert(((int_64)*($7) == (int_64)$12), [8192])
	CALL __multi3(($5 + [8]), *(($7 + [32])), (int_64)0, $13, (int_64)$13 >> (int_64)63))
	$16 = *((($5 + [8]) + [8]))
	$13 = *($11)
	$14 = *($5 + [8])
	$15 = ($7 + [16])
	CALL eosio_assert(( ((uint_64)*($15) >= (uint_64)$14) ? ((uint_64)$13 >= (uint_64)$16) : ((int_64)$13 == (int_64)$16) ), [8221])
	$13 = *($15)
	*($15) = (int_64))($13 - $14)
	*($11) = (int_64))((int_64))(*($11) - $16) - (CASTING uint_64)(uint_32 (uint_64)($13 <= $14)))
	$10 = [1]
	$7 = ($7 + [48])
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$5 }
	goto $label$7 
	
.LABEL $label$8
	$7 = ($7 + [48])
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$5 }
	
.LABEL $label$7
	if ( ($10 & [1]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [11045])
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*(($1 + [8]))) ){ goto $label$16 }
	CALL eosio_assert([0], [10664])
	
.LABEL $label$16
	$18 = *($1 + [32])
	$17 = *(($1 + [36]))
	$7 = ($17 - $18)
	$14 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[48]))
	$15 = [68]
	
.LOOP $label$17:
	$15 = ($15 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$17 }
	if ( ((int_32)$18 == (int_32)$17) ){ goto $label$21 }
	$17 = (((int_32)((uint_32)($7 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $15)
	if ( ($17 <= [513]) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$17 = ($15 + [-36])
	if ( ((uint_32)$17 >= (uint_32)[513]) ){ goto $label$19 }
	
.LABEL $label$20
	$15 = ($4 - (($17 + [15]) & [-16]))
	$global$0 = $15
	goto $label$18 
	
.LABEL $label$19
	$15 = CALL $161($17)
	
.LABEL $label$18
	*($5 + [116]) = $15
	*($5 + [112]) = $15
	*($5 + [120]) = ($15 + $17)
	CALL $133(($5 + [112]), $1)
	CALL db_update_i64(*($1 + [48]), $2, $15, $17)
	if ( ((uint_32)$17 >= (uint_32)[513]) ){ goto $label$24 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	CALL $164($15)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$22 }
	
.LABEL $label$23
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [144])
	return 
	
.LABEL $label$22
	$global$0 = ($5 + [144])
}

void .FUNC $90 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $150($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [32])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [36])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $91 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10567])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10613])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10162])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10205])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10224])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10664])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $52($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [16])
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $134(*($1), *($0))
	$3 = *($0)
	$4 = ($3 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10392])
	$1 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $4, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($3 + [32]))
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$4 = *($1)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $116(*($1), *($0))
	$2 = *($0)
	$3 = ($2 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10398])
	$4 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($2 + [24])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10398])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($2 + [32])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $0) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [10398])
	$0 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $0, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

int_32 .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10398])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10398])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10398])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [16])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)*($6) != (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [10398])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [1])
	$4 = (*($3) + [1])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10398])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10398])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [40])) = *($2 + [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [4])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($2 >> [3])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL _Znwj(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $150($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [4]))
	$3 = ($2 + ($3 << [4]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [4]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL _ZdlPv($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $122 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $150($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $130 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $150($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$11 }
	*($1 + [4]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $131 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [32]) = $1
	$3 = ($0 + [16])
	$4 = *($1 + [4])
	$1 = CALL $72(*($2 + [4]), $0)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10398])
	$4 = *(($1 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $4, [8])
	$3 = (*($4) + [8])
	*(($4 = ($1 + [4]))) = $3
	$5 = ($0 + [24])
	if ( ((uint_32)(*(($1 + [8])) - $3) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [10398])
	$3 = *($4)
	
.LABEL $label$2
	CALL memcpy($5, $3, [4])
	*($4) = (*($4) + [4])
	*($0 + [36]) = *(*($2 + [8]))
	return $0
}

int_32 .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [10392])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10392])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10392])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$3 = (*($4) + [8])
	*(($4 = ($0 + [4]))) = $3
	*($2) = *(($1 + [24]))
	$7 = ($0 + [8])
	if ( ((int_32)(*($7) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10392])
	$3 = *($4)
	
.LABEL $label$4
	CALL memcpy($3, $2, [8])
	$3 = (*($4) + [8])
	*($4) = $3
	$8 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [36])) - *($1 + [32])) / (int_32)[48]))
	
.LOOP $label$5:
	$5 = (CASTING uint_32)(uint_64 $8)
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	$6 = ((int_64)$8) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($7) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [10392])
	$3 = *($4)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$5 }
	$4 = *(($1 + [36]))
	$3 = *(($1 + [32]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $120($0, $3)
	$3 = ($3 + [48])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$8 }
	
.LABEL $label$7
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10392])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10392])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	return $0
}

int_32 .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10392])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10392])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [10392])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [1])
	$4 = (*($3) + [1])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10392])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [40]))
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10392])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [8]), [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $164($0)
	
.LABEL $label$1
}

int_32 .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($2 + [8]) = *($1)
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10392])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[15]) ){ goto $label$3 }
	CALL eosio_assert([0], [10392])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [16])
	$4 = (*($3) + [16])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [32])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [10392])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $1, [4])
	*($3) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $38 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [36]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10567])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10613])
	
.LABEL $label$2
	$3 = *($3)
	*($1 + [8]) = *($3)
	*(($1 + [16])) = *(($3 + [8]))
	$7 = *($1 + [24])
	$6 = *(($1 + [28]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[48]))
	$10 = *($1)
	$3 = [60]
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$6 = (((int_32)((uint_32)($8 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $3)
	if ( ($6 <= [513]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$6 = ($3 + [-36])
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$5 }
	
.LABEL $label$6
	$3 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $3
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $161($6)
	
.LABEL $label$4
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $6)
	CALL $119($5, $1)
	CALL db_update_i64(*($1 + [40]), $2, $3, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)$10 >= (uint_64)*($0 + [16])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $164($3)
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$8
	$global$0 = ($5 + [16])
}

void .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[48])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[89478486]) ){ goto $label$2 }
	$6 = [89478485]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[48])
	if ( ((uint_32)$7 > (uint_32)[44739241]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$6 * (int_32)[48]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $150($0)
	
.LABEL $label$1
	*(($4 = ($5 + ((int_32)$4 * (int_32)[48])))) = *($1)
	*(($4 + [40])) = *(($1 + [40]))
	*(($4 + [32])) = *(($1 + [32]))
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 + ((int_32)((int_32)$1 / (int_32)[-48]) * (int_32)[48]))
	$6 = ($5 + ((int_32)$6 * (int_32)[48]))
	$4 = ($4 + [48])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	(unreachable)
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10458])
	
.LABEL $label$5
	$2 = CALL $161($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([40])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10398])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10398])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$9 }
	CALL eosio_assert([0], [10398])
	
.LABEL $label$9
	CALL memcpy(($3 + [24]), $7, [8])
	*(($5 + [16])) = *($3 + [24])
	*($5 + [28]) = $1
	*($3 + [16]) = $5
	$9 = *($5)
	*($3 + [24]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $53(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $164($2)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL _ZdlPv($1)
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10458])
	
.LABEL $label$5
	$5 = CALL $161($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [36]) = $5
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + $4)
	$4 = CALL _Znwj([64])
	$2 = CALL $41($4)
	*($4 + [48]) = $0
	CALL $123(($3 + [32]), $2)
	*($4 + [52]) = $1
	*($3 + [24]) = $4
	*($3 + [16]) = (int_64)-3660748222285835776
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)-3660748222285835776
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $4
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $122(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $164($5)
	
.LABEL $label$7
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	CALL _ZdlPv($5)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $4
}

void .FUNC $125 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$4 }
	$5 = [0]
	$6 = *([0] + [10960])
	
.LOOP $label$6:
	*((($3 + [16]) + ($1 = $5))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$1 == (int_32)[12]) )))))
	$5 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[11]) ){ goto $label$5 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$6 }
	
.LABEL $label$5
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$3 }
	*($3) = ($5 << [1])
	$6 = ($3 | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	*($3) = [0]
	$1 = ($3 | [1])
	goto $label$1 
	
.LABEL $label$3
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($3) = ($7 | [1])
	*($3 + [8]) = $6
	*($3 + [4]) = $5
	
.LABEL $label$2
	$7 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$7:
	*(($6 + $1)) = *((($3 + [16]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$7 }
	$1 = ($6 + $5)
	
.LABEL $label$1
	*($1) = [0]
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$1 = CALL $158($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$12 }
	*($3 + [16]) = ($1 << [1])
	$6 = (($3 + [16]) | [1])
	$5 = $6
	if ( $1 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$6 = (($1 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $1
	$6 = (($3 + [16]) | [1])
	
.LABEL $label$11
	CALL memcpy($5, $2, $1)
	
.LABEL $label$10
	*(($5 + $1)) = [0]
	$1 = *($3 + [16])
	$5 = ($1 & [1])
	$1 = CALL $148($3, ( *($3 + [24]) ? $6 : $5 ), ( *($3 + [20]) ? uint_32($1 >> [1]) : $5 ))
	$4 = *($1)
	*($1) = (int_64)0
	*($0) = $4
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( (*($3 + [16]) & [1]) ){ goto $label$14 }
	if ( (*($3) & [1]) ){ goto $label$13 }
	goto $label$8 
	
.LABEL $label$14
	CALL _ZdlPv(*((($3 + [16]) + [8])))
	if ( ((*($3) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$13
	CALL _ZdlPv(*($3 + [8]))
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$9
	CALL $143(($3 + [16]))
	
.LABEL $label$8
	$global$0 = ($3 + [32])
}

int_32 .FUNC $43 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($0 + [152])
	$4 = *(($0 + [180]))
	$3 = *(($0 + [176]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$5:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$4 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	if ( ((int_32)*($6 + [16]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [10407])
	return *($6 + [8])
	
.LABEL $label$3
	$5 = CALL db_find_i64(*($2), *(($0 + [160])), (int_64)-3020374815346262016, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $76($2, $5)
	if ( ((int_32)*($6 + [16]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$2
	return *($6 + [8])
	
.LABEL $label$1
	return [-1]
}

void .FUNC $42 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = *(($1 + [28]))
	if ( ((int_32)$5 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$5 = *(($5 + [-24]))
	if ( ((int_32)*($5 + [48]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$4
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-3660748222285835776, (int_64)-3660748222285835776)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $48($1, $5)
	if ( ((int_32)*($5 + [48]) == (int_32)$1) ){ goto $label$2 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$2
	*($0) = *($5)
	*(($0 + [40])) = *(($5 + [40]))
	*(($0 + [32])) = *(($5 + [32]))
	*(($0 + [24])) = *(($5 + [24]))
	*(($0 + [16])) = *(($5 + [16]))
	*(($0 + [8])) = *(($5 + [8]))
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$1
	*($4 + [8]) = $3
	CALL $101($4, $1, $2, ($4 + [8]))
	$5 = *($4 + [4])
	*($0) = *($5)
	*(($0 + [8])) = *(($5 + [8]))
	*(($0 + [16])) = *(($5 + [16]))
	*(($0 + [24])) = *(($5 + [24]))
	*(($0 + [32])) = *(($5 + [32]))
	*(($0 + [40])) = *(($5 + [40]))
	$global$0 = ($4 + [16])
}

int_32 .FUNC $41 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [32]) = (int_64)0
	*(($0 + [16])) = (int_64)0
	*(($0 + [40])) = (int_64)0
	*($1 + [16]) = [9309]
	*($1 + [20]) = CALL $158([9309])
	*($1 + [8]) = *($1 + [16])
	*($0) = *(CALL $4(($1 + [24]), ($1 + [8])))
	$2 = (int_64)340498729282
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$2 = $4
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$2 = $4
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$6 = ($3 + [1])
	$3 = $6
	if ( $5 ){ goto $label$5 }
	$3 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9862])
	
.LABEL $label$1
	$3 = [0]
	*($0 + [24]) = [0]
	*(($0 + [16])) = (int_64)87167674696196
	*(($0 + [8])) = (int_64)0
	$2 = (int_64)340498729282
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$2 = $4
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$2 = $4
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$6 = ($3 + [1])
	$3 = $6
	if ( $5 ){ goto $label$10 }
	$3 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [9862])
	
.LABEL $label$6
	*(($0 + [40])) = (int_64)87167674696196
	*(($0 + [32])) = (int_64)0
	$global$0 = ($1 + [32])
	return $0
}

void .FUNC $40 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $150($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [24])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [28])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$5 = *($0 + [24])
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$3:
	if ( ((int_32)*(($4 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$4 = ($4 + [-24])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$4 = *(($4 + [-24]))
	$global$0 = ($3 + [16])
	return $4
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$6 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $6
	$7 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10458])
	
.LABEL $label$5
	$6 = CALL $161($4)
	$7 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $6, $4)
	*(($8 = CALL _Znwj([32])) + [8]) = (int_64)0
	*($8) = (int_64)0
	*($8 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10398])
	
.LABEL $label$7
	CALL memcpy($8, $6, [8])
	*($3 + [8]) = (int_64)0
	$5 = ($6 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10398])
	
.LABEL $label$8
	CALL memcpy(($3 + [8]), $5, [8])
	$9 = *($3 + [8])
	*(($8 + [8])) = $9
	*($8 + [20]) = $1
	$10 = *(($0 + [32]))
	$5 = ($0 + [28])
	$4 = *($5)
	if ( ((uint_32)$4 >= (uint_32)$10) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4) = $8
	*($4 + [16]) = $1
	*($5) = ($4 + [24])
	if ( $7 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$11 = ($0 + [24])
	$2 = *($11)
	$5 = ((int_32)($4 - $2) / (int_32)[24])
	$12 = ($5 + [1])
	if ( ((uint_32)$12 >= (uint_32)[178956971]) ){ goto $label$13 }
	$11 = [178956970]
	$10 = ((int_32)($10 - $2) / (int_32)[24])
	if ( ((uint_32)$10 > (uint_32)[89478484]) ){ goto $label$15 }
	$10 = ($10 << [1])
	$11 = ( $12 ? $10 : ($10 <= $12) )
	if ( ($11 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$10 = CALL _Znwj(((int_32)$11 * (int_32)[24]))
	$4 = *(($0 + [28]))
	$2 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$14
	$11 = [0]
	$10 = [0]
	goto $label$12 
	
.LABEL $label$13
	CALL $150($11)
	
.LABEL $label$12
	*(($5 = ($10 + ($13 = ((int_32)$5 * (int_32)[24])))) + [8]) = $9
	*($5) = $8
	*($5 + [16]) = $1
	$11 = ($10 + ((int_32)$11 * (int_32)[24]))
	$12 = ($5 + [24])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$16 }
	$1 = (($10 + $13) + [-24])
	
.LOOP $label$17:
	$5 = ($4 + [-24])
	$10 = *($5)
	*($5) = [0]
	*($1) = $10
	*(($1 + [16])) = *(($4 + [-8]))
	*(($1 + [8])) = *(($4 + [-16]))
	$1 = ($1 + [-24])
	$4 = $5
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$17 }
	$5 = ($1 + [24])
	$4 = *(($0 + [28]))
	$2 = *(($0 + [24]))
	
.LABEL $label$16
	*(($0 + [28])) = $12
	*(($0 + [24])) = $5
	*(($0 + [32])) = $11
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$18 }
	
.LOOP $label$19:
	$4 = ($4 + [-24])
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$20 }
	CALL _ZdlPv($1)
	
.LABEL $label$20
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$19 }
	
.LABEL $label$18
	if ( ($2 == 0) ){ goto $label$21 }
	CALL _ZdlPv($2)
	
.LABEL $label$21
	if ( ($7 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $164($6)
	
.LABEL $label$9
	$global$0 = ($3 + [16])
	(unreachable)
	return $8
}

void .FUNC $46 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [48]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3660748222285835776, (int_64)-3660748222285835776)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $48($0, $4)
	if ( ((int_32)*($4 + [48]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$2
	*($3) = $1
	CALL $102($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $103($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $45 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $158($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$5 }
	*($4 + [16]) = ($5 << [1])
	$6 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4 + [16]) = ($7 | [1])
	*($4 + [24]) = $6
	*($4 + [20]) = $5
	
.LABEL $label$4
	CALL memcpy($6, $1, $5)
	
.LABEL $label$3
	*(($6 + $5)) = [0]
	CALL $124($4, $2, $3)
	$5 = *($4)
	$6 = ($5 & [1])
	$5 = CALL $148(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $6 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 ))
	$8 = *($5)
	*($5) = (int_64)0
	*($0) = $8
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( (*($4) & [1]) ){ goto $label$7 }
	if ( (*($4 + [16]) & [1]) ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$7
	CALL _ZdlPv(*(($4 + [8])))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$6
	CALL _ZdlPv(*($4 + [24]))
	$global$0 = ($4 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $143(($4 + [16]))
	
.LABEL $label$1
	$global$0 = ($4 + [32])
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $150($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $124 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL $149(($3 + [16]), *($1))
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$1 = CALL $158($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$5 }
	*($3) = ($1 << [1])
	$4 = ($3 | [1])
	$5 = $4
	if ( $1 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($1 + [16]) & [-16])
	$5 = CALL _Znwj($4)
	*($3) = ($4 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $1
	$4 = ($3 | [1])
	
.LABEL $label$4
	CALL memcpy($5, $2, $1)
	
.LABEL $label$3
	*(($5 + $1)) = [0]
	$1 = *($3)
	$5 = ($1 & [1])
	$1 = CALL $148(($3 + [16]), ( *($3 + [8]) ? $4 : $5 ), ( *($3 + [4]) ? uint_32($1 >> [1]) : $5 ))
	$6 = *($1)
	*($1) = (int_64)0
	*($0) = $6
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( (*($3) & [1]) ){ goto $label$7 }
	if ( (*($3 + [16]) & [1]) ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$7
	CALL _ZdlPv(*(($3 + [8])))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$6
	CALL _ZdlPv(*($3 + [24]))
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $143($3)
	
.LABEL $label$1
	$global$0 = ($3 + [32])
}

int_32 .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10392])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	*($2) = *(($7 + [8]))
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10392])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, $2, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $163 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [11076]) == 0) ){ goto $label$2 }
	$2 = *([0] + [11080])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [11076]) = [1]
	$2 = ($2 << [16])
	*([0] + [11080]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [11080])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [11080]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [11076]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [11076]) = [1]
	$3 = ($3 << [16])
	*([0] + [11080]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [11080])
	
.LABEL $label$10
	*([0] + [11080]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

int_32 .FUNC $162 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $163($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)*(($1 + [8200])) == (int_32)*($9)) ){ goto $label$10 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$10
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$11:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$12 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$13 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$14 }
	
.LABEL $label$13
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$15 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$15
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$12
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$11 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

void .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [112])
	$global$0 = $2
	if ( ((int_64)*($1) == (int_64)4298345121774150816) ){ goto $label$1 }
	CALL eosio_assert([0], [9612])
	
.LABEL $label$1
	$3 = *($1 + [8])
	if ( ((int_64)$3 == (int_64)-2616700122498420864) ){ goto $label$2 }
	CALL eosio_assert([0], [9646])
	
.LABEL $label$2
	*($2 + [104]) = $3
	$4 = *($1 + [16])
	*($2 + [96]) = $4
	CALL require_auth((int_64)4298345121781781872)
	*($2 + [40]) = [8511]
	*($2 + [44]) = CALL $158([8511])
	*($2 + [8]) = *($2 + [40])
	$5 = CALL $4(($2 + [48]), ($2 + [8]))
	$1 = [0]
	*(($2 + [88])) = [0]
	*($2 + [64]) = $3
	*($2 + [72]) = (int_64)-1
	*($2 + [80]) = (int_64)0
	$6 = *($5)
	*($2 + [56]) = $6
	$5 = CALL db_find_i64($6, $3, (int_64)-2453462778758506688, $4)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $67(($2 + [56]), $5)
	if ( ((int_32)*($1 + [44]) == (int_32)($2 + [56])) ){ goto $label$3 }
	CALL eosio_assert([0], [10407])
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [9763])
	
.LABEL $label$3
	*($2 + [24]) = [8511]
	*($2 + [28]) = CALL $158([8511])
	*($2) = *($2 + [24])
	$5 = CALL $4(($2 + [32]), $2)
	*($2 + [20]) = ($2 + [96])
	*($2 + [16]) = ($2 + [104])
	$3 = *($5)
	if ( $1 ){ goto $label$5 }
	CALL eosio_assert([0], [10532])
	
.LABEL $label$5
	CALL $97(($2 + [56]), $1, $3, ($2 + [16]))
	$7 = *($2 + [80])
	if ( ($7 == 0) ){ goto $label$6 }
	$8 = ($2 + [84])
	$1 = *($8)
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$8 }
	
.LOOP $label$9:
	$1 = ($1 + [-24])
	$5 = *($1)
	*($1) = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	$9 = *($5 + [32])
	if ( ($9 == 0) ){ goto $label$11 }
	*(($5 + [36])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$11
	CALL _ZdlPv($5)
	
.LABEL $label$10
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$9 }
	$1 = *(($2 + [80]))
	goto $label$7 
	
.LABEL $label$8
	$1 = $7
	
.LABEL $label$7
	*($8) = $7
	CALL _ZdlPv($1)
	
.LABEL $label$6
	$global$0 = ($2 + [112])
}

int_32 .FUNC $9 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [448])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $161($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [360]) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [368]) = (int_64)0
	*($4 + [340]) = $2
	*($4 + [336]) = $2
	*($4 + [344]) = ($2 + $7)
	CALL $96(($4 + [336]), ($4 + [352]))
	$3 = *($4 + [344])
	*((($4 + [48]) + [8])) = $3
	*((($4 + [32]) + [8])) = $3
	$8 = *($4 + [336])
	*($4 + [32]) = $8
	*($4 + [48]) = $8
	$9 = CALL $10(($4 + [64]), $0, $1, ($4 + [32]))
	*(($3 = (($4 + [376]) + [16]))) = *($4 + [368])
	*(($10 = (($4 + [376]) + [8]))) = *($4 + [360])
	*($4 + [376]) = *($4 + [352])
	*((($4 + [400]) + [16])) = *($3)
	*((($4 + [400]) + [8])) = *($10)
	*($4 + [400]) = *($4 + [376])
	$3 = (($4 + [64]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$0 = *((($4 + [400]) + [16]))
	*((($4 + [424]) + [16])) = $0
	$1 = *((($4 + [400]) + [8]))
	*((($4 + [424]) + [8])) = $1
	*((($4 + [8]) + [8])) = $1
	*((($4 + [8]) + [16])) = $0
	$0 = *($4 + [400])
	*($4 + [8]) = $0
	*($4 + [424]) = $0
	CALL void $3((int_32 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $164($2)
	
.LABEL $label$6
	CALL $11($9)
	$global$0 = ($4 + [448])
	return [1]
}

void .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[48])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[89478486]) ){ goto $label$2 }
	$6 = [89478485]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[48])
	if ( ((uint_32)$7 > (uint_32)[44739241]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$6 * (int_32)[48]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $150($0)
	
.LABEL $label$1
	*(($4 = ($5 + ((int_32)$4 * (int_32)[48])))) = *($1)
	*(($4 + [40])) = *(($1 + [40]))
	*(($4 + [32])) = *(($1 + [32]))
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 + ((int_32)((int_32)$1 / (int_32)[-48]) * (int_32)[48]))
	$6 = ($5 + ((int_32)$6 * (int_32)[48]))
	$4 = ($4 + [48])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [624])
	$global$0 = $3
	CALL memory()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$18 }
	if ( ((int_64)$2 <= (int_64)-4157660906811031553) ){ goto $label$17 }
	if ( ((int_64)$2 <= (int_64)3626343080028667903) ){ goto $label$16 }
	if ( ((int_64)$2 <= (int_64)4729498548146536447) ){ goto $label$14 }
	if ( ((int_64)$2 == (int_64)4729498548146536448) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)4921564679018381312) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)4921565155642310656) ){ goto $label$1 }
	*($3 + [500]) = [0]
	*($3 + [496]) = [1]
	*($3 + [128]) = *($3 + [496])
	CALL $9($1, $1, ($3 + [128]))
	goto $label$1 
	
.LABEL $label$18
	*(($3 + [168])) = [0]
	*($3 + [208]) = [0]
	*($3 + [160]) = (int_64)0
	*($3 + [200]) = (int_64)0
	$4 = CALL $10(($3 + [216]), $0, $1, ($3 + [160]))
	*($3 + [184]) = [8433]
	*($3 + [188]) = CALL $158([8433])
	*($3 + [152]) = *($3 + [184])
	if ( ((int_64)*(CALL $4(($3 + [192]), ($3 + [152]))) != (int_64)$2) ){ goto $label$19 }
	*($3 + [176]) = [8441]
	*($3 + [180]) = CALL $158([8441])
	*($3 + [144]) = *($3 + [176])
	if ( ((int_64)*(CALL $4(($3 + [192]), ($3 + [144]))) == (int_64)$1) ){ goto $label$19 }
	CALL eosio_assert([0], [8447])
	
.LABEL $label$19
	CALL $11($4)
	goto $label$1 
	
.LABEL $label$17
	if ( ((int_64)$2 > (int_64)-4993458662810161153) ){ goto $label$15 }
	if ( ((int_64)$2 > (int_64)-5920963277709377537) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)-9037215489187643392) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)-7811085199994781696) ){ goto $label$1 }
	*($3 + [548]) = [0]
	*($3 + [544]) = [2]
	*($3 + [80]) = *($3 + [544])
	CALL $13($1, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$16
	if ( ((int_64)$2 > (int_64)-3102536759825661953) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)-4157660906811031552) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)-4157529711369804096) ){ goto $label$1 }
	*($3 + [532]) = [0]
	*($3 + [528]) = [3]
	*($3 + [96]) = *($3 + [528])
	CALL $15($1, $1, ($3 + [96]))
	goto $label$1 
	
.LABEL $label$15
	if ( ((int_64)$2 > (int_64)-4416997509068013569) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)-4993458662810161152) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)-4848305518775762944) ){ goto $label$1 }
	*($3 + [564]) = [0]
	*($3 + [560]) = [4]
	*($3 + [64]) = *($3 + [560])
	CALL $15($1, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$14
	if ( ((int_64)$2 == (int_64)3626343080028667904) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)4729494960587816960) ){ goto $label$1 }
	*($3 + [596]) = [0]
	*($3 + [592]) = [5]
	*($3 + [32]) = *($3 + [592])
	CALL $18($1, $1, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$13
	if ( ((int_64)$2 == (int_64)-5920963277709377536) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)-4993513767899875440) ){ goto $label$1 }
	*($3 + [492]) = [0]
	*($3 + [488]) = [6]
	*($3 + [136]) = *($3 + [488])
	CALL $20($1, $1, ($3 + [136]))
	goto $label$1 
	
.LABEL $label$12
	if ( ((int_64)$2 == (int_64)-3102536759825661952) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-3102536759360208896) ){ goto $label$1 }
	*($3 + [516]) = [0]
	*($3 + [512]) = [7]
	*($3 + [112]) = *($3 + [512])
	CALL $20($1, $1, ($3 + [112]))
	goto $label$1 
	
.LABEL $label$11
	if ( ((int_64)$2 == (int_64)-4416997509068013568) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)-4157661383434960896) ){ goto $label$1 }
	*($3 + [620]) = [0]
	*($3 + [616]) = [8]
	*($3 + [8]) = *($3 + [616])
	CALL $23($1, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$10
	*($3 + [508]) = [0]
	*($3 + [504]) = [9]
	*($3 + [120]) = *($3 + [504])
	CALL $25($1, $1, ($3 + [120]))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [604]) = [0]
	*($3 + [600]) = [10]
	*($3 + [24]) = *($3 + [600])
	CALL $15($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [540]) = [0]
	*($3 + [536]) = [11]
	*($3 + [88]) = *($3 + [536])
	CALL $15($1, $1, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [524]) = [0]
	*($3 + [520]) = [12]
	*($3 + [104]) = *($3 + [520])
	CALL $20($1, $1, ($3 + [104]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [580]) = [0]
	*($3 + [576]) = [13]
	*($3 + [48]) = *($3 + [576])
	CALL $23($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [572]) = [0]
	*($3 + [568]) = [14]
	*($3 + [56]) = *($3 + [568])
	CALL $23($1, $1, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [588]) = [0]
	*($3 + [584]) = [15]
	*($3 + [40]) = *($3 + [584])
	CALL $32($1, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [612]) = [0]
	*($3 + [608]) = [16]
	*($3 + [16]) = *($3 + [608])
	CALL $23($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*($3 + [556]) = [0]
	*($3 + [552]) = [17]
	*($3 + [72]) = *($3 + [552])
	CALL $35($1, $1, ($3 + [72]))
	
.LABEL $label$1
	CALL $152([0])
	$global$0 = ($3 + [624])
}

int_32 .FUNC $4 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [10005])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [10110])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [10043])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [10110])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $5 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [144])
	$global$0 = $4
	$5 = *($1 + [8])
	$7 = *($0 + [4])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	if ( ((int_64)*($6) == (int_64)$5) ){ goto $label$2 }
	$6 = ($6 + [48])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$5 = CALL $2($5)
	$8 = *($1)
	CALL __multi3(($4 + [32]), $8, (int_64)$8 >> (int_64)63), (CASTING uint_64)(uint_32 $3), (int_64)0)
	CALL __multi3(($4 + [16]), *($4 + [32]), *((($4 + [32]) + [8])), *($2 + [16]), *(($2 + [24])))
	CALL __udivti3($4, *($4 + [16]), *((($4 + [16]) + [8])), (int_64)100, (int_64)0)
	*(($2 = (($4 + [96]) + [24]))) = *(($4 + [8]))
	*($4 + [104]) = $5
	*($4 + [128]) = [1000000000]
	*($4 + [96]) = *(($1 + [8]))
	*($4 + [112]) = *($4)
	$7 = ($0 + [4])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)*($0 + [8])) ){ goto $label$1 }
	*($6) = *($4 + [96])
	*(($6 + [8])) = *($4 + [104])
	*(($6 + [40])) = *((($4 + [96]) + [40]))
	*(($6 + [32])) = *((($4 + [96]) + [32]))
	*(($6 + [24])) = *($2)
	*(($6 + [16])) = *((($4 + [96]) + [16]))
	*($7) = (*($7) + [48])
	$global$0 = ($4 + [144])
	return 
	
.LABEL $label$2
	$5 = *($1)
	CALL __multi3(($4 + [80]), $5, (int_64)$5 >> (int_64)63), (CASTING uint_64)(uint_32 $3), (int_64)0)
	CALL __multi3(($4 + [64]), *($4 + [80]), *((($4 + [80]) + [8])), *($2 + [16]), *(($2 + [24])))
	CALL __udivti3(($4 + [48]), *($4 + [64]), *((($4 + [64]) + [8])), (int_64)100, (int_64)0)
	$8 = *($4 + [48])
	$5 = ((int_64)$8 + (int_64)*($7))
	*(($7 = ($6 + [16]))) = $5
	$8 = ((int_64)((int_64)*((($4 + [48]) + [8])) + (int_64)*($6)) + (int_64)(CASTING uint_64)(uint_32 (uint_64)($5 <= $8)))
	*(($6 = ($6 + [24]))) = $8
	if ( ( (uint_64)($5 <= (int_64)-999999999) ? (uint_64)($8 <= (int_64)249999999) : ((int_64)$8 == (int_64)249999999) ) ){ goto $label$5 }
	CALL eosio_assert([0], [8405])
	
.LABEL $label$5
	$global$0 = ($4 + [144])
	return 
	
.LABEL $label$1
	CALL $6($0, ($4 + [96]))
	$global$0 = ($4 + [144])
}

int_64 .FUNC $2 (int_64 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [240])
	$global$0 = $1
	CALL $1(($1 + [8]))
	$2 = ($1 + [8])
	if ( ((int_64)*($1 + [16]) == (int_64)$0) ){ goto $label$2 }
	if ( ((int_64)*(($1 + [40])) != (int_64)$0) ){ goto $label$1 }
	$2 = ($1 + [32])
	
.LABEL $label$2
	$0 = *($2)
	$global$0 = ($1 + [240])
	return $0
	
.LABEL $label$1
	if ( ((int_64)*(($1 + [64])) != (int_64)$0) ){ goto $label$3 }
	$0 = *(($1 + [56]))
	$global$0 = ($1 + [240])
	return $0
	
.LABEL $label$3
	if ( ((int_64)*(($1 + [88])) != (int_64)$0) ){ goto $label$4 }
	$0 = *(($1 + [80]))
	$global$0 = ($1 + [240])
	return $0
	
.LABEL $label$4
	if ( ((int_64)*(($1 + [112])) != (int_64)$0) ){ goto $label$5 }
	$0 = *(($1 + [104]))
	$global$0 = ($1 + [240])
	return $0
	
.LABEL $label$5
	if ( ((int_64)*(($1 + [136])) != (int_64)$0) ){ goto $label$6 }
	$0 = *(($1 + [128]))
	$global$0 = ($1 + [240])
	return $0
	
.LABEL $label$6
	if ( ((int_64)*(($1 + [160])) != (int_64)$0) ){ goto $label$7 }
	$0 = *(($1 + [152]))
	$global$0 = ($1 + [240])
	return $0
	
.LABEL $label$7
	if ( ((int_64)*(($1 + [184])) != (int_64)$0) ){ goto $label$8 }
	$0 = *(($1 + [176]))
	$global$0 = ($1 + [240])
	return $0
	
.LABEL $label$8
	if ( ((int_64)*(($1 + [208])) != (int_64)$0) ){ goto $label$9 }
	$0 = *(($1 + [200]))
	$global$0 = ($1 + [240])
	return $0
	
.LABEL $label$9
	*($1) = $0
	CALL $3(($1 + [224]), [8365], $1)
	if ( (*($1 + [224]) & [1]) ){ goto $label$11 }
	$2 = (($1 + [224]) | [1])
	goto $label$10 
	
.LABEL $label$11
	$2 = *($1 + [232])
	CALL _ZdlPv($2)
	
.LABEL $label$10
	CALL eosio_assert([0], $2)
	$global$0 = ($1 + [240])
	return (int_64)-1
}

void .FUNC $3 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $158($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$5 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$4
	CALL memcpy($5, $1, $4)
	
.LABEL $label$3
	*(($5 + $4)) = [0]
	CALL $149($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $148(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( (*($3) & [1]) ){ goto $label$7 }
	if ( (*($3 + [16]) & [1]) ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$7
	CALL _ZdlPv(*(($3 + [8])))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$6
	CALL _ZdlPv(*($3 + [24]))
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $143(($3 + [16]))
	
.LABEL $label$1
	$global$0 = ($3 + [32])
}

void .FUNC memory ()
{
}

void .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [224])
	$global$0 = $1
	*($1 + [208]) = [9882]
	*($1 + [212]) = CALL $158([9882])
	*($1 + [72]) = *($1 + [208])
	$2 = CALL $4(($1 + [216]), ($1 + [72]))
	*($0 + [8]) = (int_64)1397703940
	*($0 + [16]) = [9894]
	*($0 + [20]) = [0]
	*($0) = *($2)
	*($1 + [192]) = [8748]
	*($1 + [196]) = CALL $158([8748])
	*($1 + [64]) = *($1 + [192])
	$2 = CALL $4(($1 + [200]), ($1 + [64]))
	*(($0 + [32])) = (int_64)87167674696196
	*(($0 + [40])) = [9898]
	*(($0 + [44])) = [1]
	*($0 + [24]) = *($2)
	*($1 + [176]) = [9904]
	*($1 + [180]) = CALL $158([9904])
	*($1 + [56]) = *($1 + [176])
	$2 = CALL $4(($1 + [184]), ($1 + [56]))
	*(($0 + [56])) = (int_64)383347609608
	*(($0 + [64])) = [9917]
	*(($0 + [68])) = [2]
	*($0 + [48]) = *($2)
	*($1 + [160]) = [9922]
	*($1 + [164]) = CALL $158([9922])
	*($1 + [48]) = *($1 + [160])
	$2 = CALL $4(($1 + [168]), ($1 + [48]))
	*(($0 + [80])) = (int_64)293455873288
	*(($0 + [88])) = [9935]
	*(($0 + [92])) = [3]
	*($0 + [72]) = *($2)
	*($1 + [144]) = [9922]
	*($1 + [148]) = CALL $158([9922])
	*($1 + [40]) = *($1 + [144])
	$2 = CALL $4(($1 + [152]), ($1 + [40]))
	*(($0 + [104])) = (int_64)289176438024
	*(($0 + [112])) = [9940]
	*(($0 + [116])) = [4]
	*($0 + [96]) = *($2)
	*($1 + [128]) = [9922]
	*($1 + [132]) = CALL $158([9922])
	*($1 + [32]) = *($1 + [128])
	$2 = CALL $4(($1 + [136]), ($1 + [32]))
	*(($0 + [128])) = (int_64)310651471112
	*(($0 + [136])) = [9945]
	*(($0 + [140])) = [5]
	*($0 + [120]) = *($2)
	*($1 + [112]) = [9950]
	*($1 + [116]) = CALL $158([9950])
	*($1 + [24]) = *($1 + [112])
	$2 = CALL $4(($1 + [120]), ($1 + [24]))
	*(($0 + [152])) = (int_64)4994016260158475524
	*(($0 + [160])) = [9963]
	*(($0 + [164])) = [6]
	*($0 + [144]) = *($2)
	*($1 + [96]) = [9971]
	*($1 + [100]) = CALL $158([9971])
	*($1 + [16]) = *($1 + [96])
	$2 = CALL $4(($1 + [104]), ($1 + [16]))
	*(($0 + [176])) = (int_64)1414550532
	*(($0 + [184])) = [9984]
	*(($0 + [188])) = [7]
	*($0 + [168]) = *($2)
	*($1 + [80]) = [9988]
	*($1 + [84]) = CALL $158([9988])
	*($1 + [8]) = *($1 + [80])
	$2 = CALL $4(($1 + [88]), ($1 + [8]))
	*(($0 + [200])) = (int_64)1413697284
	*(($0 + [208])) = [10001]
	*(($0 + [212])) = [8]
	*($0 + [192]) = *($2)
	$global$0 = ($1 + [224])
}

void .FUNC $14 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [176])
	$global$0 = $2
	*($2 + [160]) = [8511]
	*($2 + [164]) = CALL $158([8511])
	*($2 + [40]) = *($2 + [160])
	if ( CALL has_auth(*(CALL $4(($2 + [168]), ($2 + [40])))) ){ goto $label$1 }
	if ( CALL has_auth($1) ){ goto $label$1 }
	CALL eosio_assert([0], [9469])
	
.LABEL $label$1
	$3 = ($0 + [152])
	$5 = *(($0 + [180]))
	$4 = *(($0 + [176]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$4 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [16]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [10407])
	goto $label$2 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($3), *(($0 + [160])), (int_64)-3020374815346262016, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	if ( ((int_32)*(CALL $76($3, $6) + [16]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [10407])
	goto $label$2 
	
.LABEL $label$6
	CALL eosio_assert([0], [9490])
	
.LABEL $label$2
	*($2 + [104]) = [8511]
	*($2 + [108]) = CALL $158([8511])
	*($2 + [32]) = *($2 + [104])
	$6 = CALL $4(($2 + [112]), ($2 + [32]))
	*($2 + [88]) = [9517]
	*($2 + [92]) = CALL $158([9517])
	*($2 + [24]) = *($2 + [88])
	$5 = CALL $4(($2 + [96]), ($2 + [24]))
	*($2 + [72]) = [8511]
	$8 = *($5)
	$9 = *($6)
	*($2 + [76]) = CALL $158([8511])
	*($2 + [16]) = *($2 + [72])
	$6 = CALL $4(($2 + [80]), ($2 + [16]))
	*($2 + [56]) = [9524]
	*($2 + [60]) = CALL $158([9524])
	*($2 + [8]) = *($2 + [56])
	$5 = CALL $4(($2 + [64]), ($2 + [8]))
	*($2 + [48]) = $1
	*($2 + [120]) = *($6)
	*($2 + [128]) = *($5)
	*(($6 = CALL _Znwj([16]))) = $9
	*($6 + [8]) = $8
	*(($2 + [156])) = [0]
	$5 = ($6 + [16])
	*(($2 + [144])) = $5
	*(($2 + [140])) = $5
	*($2 + [136]) = $6
	*($2 + [148 align=4]) = (int_64)0
	CALL $60(($2 + [148]), [8])
	$6 = *($2 + [148])
	if ( ((int_32)(*(($2 + [152])) - $6) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10392])
	
.LABEL $label$7
	CALL memcpy($6, ($2 + [48]), [8])
	CALL $69(($2 + [120]))
	$6 = *($2 + [148])
	if ( ($6 == 0) ){ goto $label$8 }
	*(($2 + [152])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$8
	$6 = *($2 + [136])
	if ( ($6 == 0) ){ goto $label$9 }
	*(($2 + [140])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$9
	$global$0 = ($2 + [176])
}

int_32 .FUNC $15 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [320])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $161($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [312]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10398])
	
.LABEL $label$5
	CALL memcpy(($4 + [312]), $2, [8])
	*((($4 + [8]) + [8])) = $3
	*($4 + [28]) = ($2 + [8])
	*($4 + [24]) = $2
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$8 = CALL $10(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *($4 + [312])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $164($2)
	
.LABEL $label$7
	CALL $11($8)
	$global$0 = ($4 + [320])
	return [1]
}

void .FUNC $16 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [80])
	$global$0 = $2
	*($2 + [56]) = [9309]
	*($2 + [60]) = CALL $158([9309])
	*($2 + [16]) = *($2 + [56])
	if ( CALL has_auth(*(CALL $4(($2 + [64]), ($2 + [16])))) ){ goto $label$1 }
	*($2 + [40]) = [9322]
	*($2 + [44]) = CALL $158([9322])
	*($2 + [8]) = *($2 + [40])
	if ( CALL has_auth(*(CALL $4(($2 + [48]), ($2 + [8])))) ){ goto $label$1 }
	*($2 + [24]) = [8511]
	*($2 + [28]) = CALL $158([8511])
	*($2) = *($2 + [24])
	if ( CALL has_auth(*(CALL $4(($2 + [32]), $2))) ){ goto $label$1 }
	CALL eosio_assert([0], [9335])
	
.LABEL $label$1
	$3 = ($0 + [112])
	$5 = *(($0 + [140]))
	$4 = *(($0 + [136]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$4 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [36]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [10407])
	goto $label$2 
	
.LABEL $label$3
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [120])), (int_64)-4157661132521209856, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$7 = CALL $37($3, $6)
	if ( ((int_32)*($7 + [36]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [10407])
	goto $label$2 
	
.LABEL $label$6
	CALL eosio_assert([0], [10748])
	CALL eosio_assert([0], [10782])
	
.LABEL $label$2
	$6 = CALL db_next_i64(*($7 + [40]), ($2 + [72]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$7 }
	CALL $37($3, $6)
	
.LABEL $label$7
	CALL $81($3, $7)
	$global$0 = ($2 + [80])
}

void .FUNC $17 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_64 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_64 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	$4 = ($global$0 - [752])
	$global$0 = $4
	*($4 + [704]) = [8511]
	*($4 + [708]) = CALL $158([8511])
	*($4 + [248]) = *($4 + [704])
	CALL require_auth(*(CALL $4(($4 + [712]), ($4 + [248]))))
	$5 = ($0 + [112])
	$7 = *(($0 + [140]))
	$6 = *(($0 + [136]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$4 }
	
.LOOP $label$6:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$2) ){ goto $label$5 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$4 }
	if ( ((int_32)*($9 + [36]) == (int_32)$5) ){ goto $label$7 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$7
	if ( $9 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = CALL db_find_i64(*($5), *(($0 + [120])), (int_64)-4157661132521209856, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	$9 = CALL $37($5, $8)
	if ( ((int_32)*($9 + [36]) == (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$3
	$10 = ($0 + [232])
	$11 = ($0 + [32])
	$12 = (($4 + [400]) + [28])
	$13 = (($4 + [656]) + [24])
	$14 = ($0 + [260])
	$15 = ($0 + [256])
	$16 = ($0 + [240])
	$17 = ($1 + [4])
	$18 = (($4 + [400]) + [36])
	$19 = (($4 + [400]) + [20])
	$20 = [1]
	
.LOOP $label$8:
	if ( ((uint_32)$20 > (uint_32)$3) ){ goto $label$15 }
	if ( ((int_64)*($9 + [8]) == (int_64)0) ){ goto $label$21 }
	*($4 + [656]) = (int_64)0
	$8 = ($9 + [16])
	$2 = CALL $2(*($8))
	*($4 + [656]) = *($8)
	$21 = *($9 + [8])
	CALL __multi3(($4 + [232]), $21, (int_64)$21 >> (int_64)63), (int_64)1000000000, (int_64)0)
	*((($4 + [656]) + [32])) = [1000000000]
	*($13) = *((($4 + [232]) + [8]))
	*(($22 = (($4 + [656]) + [16]))) = *($4 + [232])
	*($4 + [664]) = $2
	CALL $50(($4 + [400]), $11)
	$23 = (($4 + [400]) + [16])
	CALL eosio_assert(((int_64)*($4 + [656]) == (int_64)*($23)), [8343])
	$24 = (($4 + [400]) + [8])
	$2 = *($24)
	CALL __udivti3(($4 + [216]), *($22), *($13), $2, (int_64)$2 >> (int_64)63))
	*($13) = *((($4 + [216]) + [8]))
	*($22) = *($4 + [216])
	$25 = *($9)
	$7 = *($14)
	$6 = *($15)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$19 }
	
.LOOP $label$22:
	$8 = ($7 + [-24])
	$26 = *($8)
	if ( ((int_64)*($26) == (int_64)$25) ){ goto $label$20 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$22 }
	goto $label$19 
	
.LABEL $label$21
	$8 = *($9 + [40])
	$9 = [0]
	$8 = CALL db_next_i64($8, ($4 + [400]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	$20 = ($20 + [1])
	$9 = CALL $37($5, $8)
	if ( $9 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$20
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$19 }
	if ( ((int_32)*(($26 + [12])) != (int_32)$10) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$8 = CALL db_find_i64(*($10), *($16), (int_64)-2453788745476866048, $25)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$16 }
	if ( ((int_32)*(CALL $58($10, $8) + [12]) == (int_32)$10) ){ goto $label$17 }
	
.LABEL $label$18
	CALL eosio_assert([0], [10407])
	
.LABEL $label$17
	*($4 + [600]) = [8511]
	*($4 + [604]) = CALL $158([8511])
	*($4 + [208]) = *($4 + [600])
	CALL $4(($4 + [608]), ($4 + [208]))
	*(($27 = (($4 + [616]) + [8]))) = $25
	*((($4 + [616]) + [16])) = (int_64)-1
	*(($28 = (($4 + [616]) + [24]))) = (int_64)0
	*((($4 + [616]) + [32])) = [0]
	*($4 + [616]) = *($4 + [608])
	*(($29 = (($4 + [584]) + [8]))) = [0]
	*($4 + [584]) = (int_64)0
	$26 = *($17)
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$26) ){ goto $label$12 }
	$7 = [0]
	$8 = [0]
	$2 = *($6 + [8])
	if ( ((int_32)[0] != (int_32)[0]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$16
	*($4 + [464]) = [8511]
	*($4 + [468]) = CALL $158([8511])
	*($4 + [72]) = *($4 + [464])
	CALL $4(($4 + [472]), ($4 + [72]))
	*($4 + [400]) = $1
	*($4 + [404]) = ($4 + [656])
	CALL $59($5, $9, *($4 + [472]), ($4 + [400]))
	goto $label$11 
	
.LABEL $label$15
	$2 = CALL current_time()
	*((($4 + [400]) + [28])) = (int_64)0
	*(($4 + [444])) = (int_64)0
	*(($4 + [452])) = (int_64)0
	$8 = [0]
	*($4 + [412]) = [0]
	*($4 + [416]) = [0]
	*($4 + [420 align=4]) = (int_64)0
	*($4 + [436 align=4]) = (int_64)0
	*($4 + [400]) = ((CASTING uint_32)(uint_64 ((uint_64)$2 / (uint_64)(int_64)1000000)) + [60])
	*($4 + [384]) = [8511]
	*($4 + [388]) = CALL $158([8511])
	*($4 + [64]) = *($4 + [384])
	$7 = CALL $4(($4 + [392]), ($4 + [64]))
	*($4 + [368]) = [9517]
	*($4 + [372]) = CALL $158([9517])
	*($4 + [56]) = *($4 + [368])
	$6 = CALL $4(($4 + [376]), ($4 + [56]))
	*($4 + [352]) = [8511]
	$2 = *($6)
	$21 = *($7)
	*($4 + [356]) = CALL $158([8511])
	*($4 + [48]) = *($4 + [352])
	$6 = CALL $4(($4 + [360]), ($4 + [48]))
	*($4 + [336]) = [9580]
	*($4 + [340]) = CALL $158([9580])
	*($4 + [40]) = *($4 + [336])
	$23 = CALL $4(($4 + [344]), ($4 + [40]))
	*($4 + [624]) = [0]
	*($4 + [616]) = (int_64)0
	$7 = (*(($1 + [4])) - *($1))
	if ( ($7 == 0) ){ goto $label$25 }
	$13 = int_32($7 >> [4])
	if ( ((uint_32)$13 >= (uint_32)[268435456]) ){ goto $label$24 }
	$7 = CALL _Znwj($7)
	*(($4 + [624])) = ($7 + ($13 << [4]))
	*($4 + [616]) = $7
	*($4 + [620]) = $7
	$22 = *($1)
	$13 = (*(($1 + [4])) - $22)
	if ( ((int_32)$13 < (int_32)[1]) ){ goto $label$25 }
	CALL memcpy($7, $22, $13)
	*($4 + [620]) = (*($4 + [620]) + $13)
	
.LABEL $label$25
	$22 = (($4 + [400]) + [36])
	*($4 + [640]) = [80]
	*($4 + [632]) = *($9)
	*($4 + [656]) = *($6)
	*($4 + [664]) = *($23)
	*(($7 = CALL _Znwj([16]))) = $21
	*($7 + [8]) = $2
	*((($4 + [656]) + [36])) = [0]
	$6 = ($7 + [16])
	*(($4 + [680])) = $6
	*(($4 + [676])) = $6
	*($4 + [672]) = $7
	*($4 + [684 align=4]) = (int_64)0
	$6 = *($4 + [616])
	$7 = *($4 + [620])
	$23 = ($7 - $6)
	$2 = (CASTING uint_64)(uint_32 int_32($23 >> [4]))
	$13 = (($4 + [656]) + [28])
	
.LOOP $label$26:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$26 }
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$27 }
	$8 = (($23 & [-16]) + $8)
	
.LABEL $label$27
	$8 = ($8 + [12])
	if ( ($8 == 0) ){ goto $label$29 }
	CALL $60($13, $8)
	$7 = *(($4 + [688]))
	$8 = *(($4 + [684]))
	goto $label$28 
	
.LABEL $label$29
	$7 = [0]
	$8 = [0]
	
.LABEL $label$28
	*($4 + [484]) = $8
	*($4 + [480]) = $8
	*($4 + [488]) = $7
	*($4 + [584]) = ($4 + [480])
	*($4 + [720]) = ($4 + [616])
	CALL $61(($4 + [720]), ($4 + [584]))
	$7 = (($4 + [400]) + [40])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($4 + [444]))) ){ goto $label$32 }
	*($8) = *($4 + [656])
	*($8 + [16]) = [0]
	*(($8 + [8])) = *((($4 + [656]) + [8]))
	*(($6 = ($8 + [20]))) = (int_64)0
	$23 = ($4 + [672])
	*($8 + [16]) = *($23)
	$13 = (($4 + [656]) + [20])
	*($6) = *($13)
	$6 = (($4 + [656]) + [24])
	*(($8 + [24])) = *($6)
	*($6) = [0]
	*($8 + [28 align=4]) = (int_64)0
	*($13) = [0]
	*($23) = [0]
	*(($6 = ($8 + [36]))) = [0]
	$23 = ($4 + [684])
	*($8 + [28]) = *($23)
	$8 = (($4 + [656]) + [32])
	*(($8 + [32])) = *($8)
	$13 = (($4 + [656]) + [36])
	*($6) = *($13)
	*($8) = [0]
	*($23) = [0]
	*($13) = [0]
	*($7) = (*($7) + [40])
	$8 = *($4 + [672])
	if ( $8 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	CALL $62($22, ($4 + [656]))
	$8 = *($4 + [684])
	if ( ($8 == 0) ){ goto $label$33 }
	*(($4 + [688])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$33
	$8 = *($4 + [672])
	if ( ($8 == 0) ){ goto $label$30 }
	
.LABEL $label$31
	*(($4 + [676])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$30
	$8 = *($4 + [616])
	if ( ($8 == 0) ){ goto $label$34 }
	*($4 + [620]) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$34
	*($4 + [328]) = [0]
	*($4 + [320]) = (int_64)0
	$8 = [0]
	$7 = [0]
	$6 = (*(($1 + [4])) - *($1))
	if ( ($6 == 0) ){ goto $label$35 }
	$7 = int_32($6 >> [4])
	if ( ((uint_32)$7 >= (uint_32)[268435456]) ){ goto $label$23 }
	$8 = CALL _Znwj($6)
	*(($4 + [328])) = ($8 + ($7 << [4]))
	*($4 + [320]) = $8
	*($4 + [324]) = $8
	$6 = *($1)
	$7 = (*(($1 + [4])) - $6)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$36 }
	CALL memcpy($8, $6, $7)
	$8 = (*($4 + [324]) + $7)
	*($4 + [324]) = $8
	$7 = *($4 + [320])
	goto $label$35 
	
.LABEL $label$36
	$7 = $8
	
.LABEL $label$35
	$2 = *($9)
	*($4 + [664]) = [0]
	*($4 + [656]) = (int_64)0
	*($4 + [672]) = (int_64)0
	CALL $63(($4 + [656]), $7, $8)
	*($4 + [680]) = [80]
	*($4 + [672]) = $2
	*($4 + [304]) = [8511]
	*($4 + [308]) = CALL $158([8511])
	*($4 + [32]) = *($4 + [304])
	CALL $64(($0 + [72]), ($4 + [656]), *(CALL $4(($4 + [312]), ($4 + [32]))))
	$8 = *($4 + [656])
	if ( ($8 == 0) ){ goto $label$37 }
	*($4 + [660]) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$37
	$8 = *($4 + [320])
	if ( ($8 == 0) ){ goto $label$38 }
	*($4 + [324]) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$38
	*(($4 + [420])) = [0]
	*($4 + [296]) = [8511]
	*($4 + [300]) = CALL $158([8511])
	*($4 + [24]) = *($4 + [296])
	CALL $4(($4 + [656]), ($4 + [24]))
	*($4 + [288]) = [9580]
	*($4 + [292]) = CALL $158([9580])
	*($4 + [16]) = *($4 + [288])
	CALL $4(($4 + [616]), ($4 + [16]))
	$2 = *($9)
	*($4 + [664]) = (int_64)0
	$2 = ((int_64)$2 + (int_64)9027840329775182720)
	*($4 + [656]) = $2
	CALL cancel_deferred(($4 + [656]))
	*($4 + [664]) = (int_64)0
	*($4 + [656]) = $2
	*($4 + [272]) = [8511]
	*($4 + [276]) = CALL $158([8511])
	*($4 + [8]) = *($4 + [272])
	CALL $65(($4 + [400]), ($4 + [656]), *(CALL $4(($4 + [280]), ($4 + [8]))), [0])
	CALL $66(($4 + [400]))
	$global$0 = ($4 + [752])
	return (unreachable)
	
.LABEL $label$24
	CALL $150(($4 + [616]))
	
.LABEL $label$23
	CALL $150(($4 + [320]))
	
.LABEL $label$14
	$30 = [2]
	goto $label$9 
	
.LABEL $label$13
	$30 = [0]
	goto $label$9 
	
.LABEL $label$12
	$30 = [5]
	goto $label$9 
	
.LABEL $label$11
	$30 = [33]
	goto $label$9 
	
.LABEL $label$10
	$30 = [35]
	
.LABEL $label$9
	
.LOOP $label$39:
	goto $label$110 
	
.LABEL $label$111
	$2 = *($6 + [8])
	$7 = *($4 + [588])
	$8 = *($4 + [584])
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$67 }
	$30 = [0]
	goto $label$39 
	
.LABEL $label$110
	if ( ((int_64)*($8) == (int_64)$2) ){ goto $label$64 }
	$30 = [1]
	goto $label$39 
	
.LABEL $label$109
	$8 = ($8 + [48])
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$63 }
	$30 = [2]
	goto $label$39 
	
.LABEL $label$108
	*($4 + [408]) = CALL $2($2)
	*($4 + [400]) = *(($6 + [8]))
	$2 = *($6)
	CALL __multi3(($4 + [144]), $2, (int_64)$2 >> (int_64)63), *($22), *($13))
	CALL __multi3(($4 + [128]), *($4 + [144]), *((($4 + [144]) + [8])), (int_64)100, (int_64)0)
	CALL __udivti3(($4 + [112]), *($4 + [128]), *((($4 + [128]) + [8])), (int_64)100, (int_64)0)
	*(($7 = (($4 + [400]) + [32]))) = [1000000000]
	*(($31 = (($4 + [400]) + [24]))) = *((($4 + [112]) + [8]))
	*($23) = *($4 + [112])
	$8 = *($4 + [588])
	if ( ((int_32)$8 == (int_32)*($29)) ){ goto $label$62 }
	$30 = [3]
	goto $label$39 
	
.LABEL $label$107
	*($8) = *($4 + [400])
	*(($8 + [8])) = *($4 + [408])
	*(($8 + [40])) = *((($4 + [400]) + [40]))
	*(($8 + [32])) = *($7)
	*(($8 + [24])) = *($31)
	*(($8 + [16])) = *($23)
	*($4 + [588]) = ($8 + [48])
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$26) ){ goto $label$59 }
	goto $label$60 
	
.LABEL $label$106
	$2 = *($6)
	CALL __multi3(($4 + [192]), $2, (int_64)$2 >> (int_64)63), *($22), *($13))
	CALL __multi3(($4 + [176]), *($4 + [192]), *((($4 + [192]) + [8])), (int_64)100, (int_64)0)
	CALL __udivti3(($4 + [160]), *($4 + [176]), *((($4 + [176]) + [8])), (int_64)100, (int_64)0)
	$21 = *($4 + [160])
	$2 = ((int_64)$21 + (int_64)*($7))
	*(($7 = ($8 + [16]))) = $2
	$21 = ((int_64)((int_64)*((($4 + [160]) + [8])) + (int_64)*($8)) + (int_64)(CASTING uint_64)(uint_32 (uint_64)($2 <= $21)))
	*(($8 = ($8 + [24]))) = $21
	if ( ( (uint_64)($2 <= (int_64)-999999999) ? (uint_64)($21 <= (int_64)249999999) : ((int_64)$21 == (int_64)249999999) ) ){ goto $label$40 }
	$30 = [41]
	goto $label$39 
	
.LABEL $label$105
	CALL eosio_assert([0], [8405])
	$30 = [42]
	goto $label$39 
	
.LABEL $label$104
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$26) ){ goto $label$65 }
	goto $label$66 
	
.LABEL $label$103
	CALL $6(($4 + [584]), ($4 + [400]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$26) ){ goto $label$61 }
	$30 = [5]
	goto $label$39 
	
.LABEL $label$102
	*($4 + [568]) = [8511]
	*($4 + [572]) = CALL $158([8511])
	*($4 + [104]) = *($4 + [568])
	CALL $4(($4 + [576]), ($4 + [104]))
	*($4 + [552]) = [9517]
	*($4 + [556]) = CALL $158([9517])
	*($4 + [96]) = *($4 + [552])
	CALL $4(($4 + [560]), ($4 + [96]))
	*($4 + [536]) = [8511]
	$2 = *($4 + [560])
	$21 = *($4 + [576])
	*($4 + [540]) = CALL $158([8511])
	*($4 + [88]) = *($4 + [536])
	CALL $4(($4 + [544]), ($4 + [88]))
	*($4 + [520]) = [9572]
	*($4 + [524]) = CALL $158([9572])
	*($4 + [80]) = *($4 + [520])
	CALL $4(($4 + [528]), ($4 + [80]))
	$7 = [0]
	$8 = CALL db_lowerbound_i64(*($4 + [616]), *($27), (int_64)-2453462778758506688, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$58 }
	$30 = [6]
	goto $label$39 
	
.LABEL $label$101
	$7 = CALL $67(($4 + [616]), $8)
	$30 = [7]
	goto $label$39 
	
.LABEL $label$100
	*(($22 = (($4 + [480]) + [8]))) = [0]
	*($4 + [480]) = (int_64)0
	$8 = (*($4 + [588]) - *($4 + [584]))
	$6 = ((int_32)$8 / (int_32)[48])
	if ( ($8 == 0) ){ goto $label$57 }
	$30 = [8]
	goto $label$39 
	
.LABEL $label$99
	if ( ((uint_32)$6 >= (uint_32)[89478486]) ){ goto $label$68 }
	$30 = [9]
	goto $label$39 
	
.LABEL $label$98
	$8 = CALL _Znwj($8)
	*($22) = ($8 + ((int_32)$6 * (int_32)[48]))
	*($4 + [480]) = $8
	*($4 + [484]) = $8
	$22 = *($4 + [584])
	$6 = (*($4 + [588]) - $22)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$56 }
	$30 = [38]
	goto $label$39 
	
.LABEL $label$97
	CALL memcpy($8, $22, $6)
	*($4 + [484]) = (*($4 + [484]) + ((int_32)((uint_32)$6 / (uint_32)[48]) * (int_32)[48]))
	$30 = [10]
	goto $label$39 
	
.LABEL $label$96
	*((($4 + [480]) + [16])) = $25
	*((($4 + [480]) + [32])) = [80]
	*($23) = (int_64)0
	$8 = [0]
	*(($6 = (($4 + [400]) + [24]))) = [0]
	$25 = *(($7 + [8]))
	*($24) = *($4 + [528])
	*((($4 + [480]) + [24])) = $25
	*($4 + [400]) = *($4 + [544])
	$7 = CALL _Znwj([16])
	*($23) = $7
	*($7) = $21
	*($7 + [8]) = $2
	*($12) = (int_64)0
	*($18) = [0]
	$7 = ($7 + [16])
	*($6) = $7
	*($19) = $7
	$6 = *($4 + [480])
	$7 = *($4 + [484])
	$22 = ($7 - $6)
	$2 = (CASTING uint_64)(uint_32 ((int_32)$22 / (int_32)[48]))
	$30 = [11]
	goto $label$39 
	
.LABEL $label$95
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$55 }
	$30 = [12]
	goto $label$39 
	
.LABEL $label$94
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$54 }
	$30 = [13]
	goto $label$39 
	
.LABEL $label$93
	$8 = ((((int_32)((uint_32)($22 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $8) + [36])
	$30 = [14]
	goto $label$39 
	
.LABEL $label$92
	$8 = ($8 + [20])
	if ( ($8 == 0) ){ goto $label$53 }
	$30 = [15]
	goto $label$39 
	
.LABEL $label$91
	CALL $60($12, $8)
	$7 = *((($4 + [400]) + [32]))
	$8 = *($12)
	goto $label$52 
	
.LABEL $label$90
	$7 = [0]
	$8 = [0]
	$30 = [16]
	goto $label$39 
	
.LABEL $label$89
	*((($4 + [720]) + [8])) = $7
	*($4 + [724]) = $8
	*($4 + [720]) = $8
	*($4 + [736]) = ($4 + [720])
	*($4 + [744]) = ($4 + [480])
	CALL $68(($4 + [744]), ($4 + [736]))
	CALL $69(($4 + [400]))
	$8 = *($12)
	if ( ($8 == 0) ){ goto $label$51 }
	$30 = [17]
	goto $label$39 
	
.LABEL $label$88
	*((($4 + [400]) + [32])) = $8
	CALL _ZdlPv($8)
	$30 = [18]
	goto $label$39 
	
.LABEL $label$87
	$8 = *($23)
	if ( ($8 == 0) ){ goto $label$50 }
	$30 = [19]
	goto $label$39 
	
.LABEL $label$86
	*($19) = $8
	CALL _ZdlPv($8)
	$30 = [20]
	goto $label$39 
	
.LABEL $label$85
	$8 = *($4 + [480])
	if ( ($8 == 0) ){ goto $label$49 }
	$30 = [21]
	goto $label$39 
	
.LABEL $label$84
	*($4 + [484]) = $8
	CALL _ZdlPv($8)
	$30 = [22]
	goto $label$39 
	
.LABEL $label$83
	$8 = *($4 + [584])
	if ( ($8 == 0) ){ goto $label$48 }
	$30 = [23]
	goto $label$39 
	
.LABEL $label$82
	*($4 + [588]) = $8
	CALL _ZdlPv($8)
	$30 = [24]
	goto $label$39 
	
.LABEL $label$81
	$23 = *($28)
	if ( ($23 == 0) ){ goto $label$47 }
	$30 = [25]
	goto $label$39 
	
.LABEL $label$80
	$22 = (($4 + [616]) + [28])
	$8 = *($22)
	if ( ((int_32)$8 == (int_32)$23) ){ goto $label$45 }
	$30 = [26]
	goto $label$39 
	
.LABEL $label$79
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$44 }
	$30 = [27]
	goto $label$39 
	
.LABEL $label$78
	$6 = *($7 + [32])
	if ( ($6 == 0) ){ goto $label$43 }
	$30 = [28]
	goto $label$39 
	
.LABEL $label$77
	*(($7 + [36])) = $6
	CALL _ZdlPv($6)
	$30 = [29]
	goto $label$39 
	
.LABEL $label$76
	CALL _ZdlPv($7)
	$30 = [30]
	goto $label$39 
	
.LABEL $label$75
	if ( ((int_32)$23 != (int_32)$8) ){ goto $label$46 }
	$30 = [31]
	goto $label$39 
	
.LABEL $label$74
	$8 = *($28)
	goto $label$42 
	
.LABEL $label$73
	$8 = $23
	$30 = [32]
	goto $label$39 
	
.LABEL $label$72
	*($22) = $23
	CALL _ZdlPv($8)
	$30 = [33]
	goto $label$39 
	
.LABEL $label$71
	$8 = *($9 + [40])
	$9 = [0]
	$8 = CALL db_next_i64($8, ($4 + [400]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$41 }
	$30 = [34]
	goto $label$39 
	
.LABEL $label$70
	$9 = CALL $37($5, $8)
	$30 = [35]
	goto $label$39 
	
.LABEL $label$69
	$20 = ($20 + [1])
	if ( $9 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$68
	CALL $150(($4 + [480]))
	
.LABEL $label$67
	$30 = [2]
	goto $label$39 
	
.LABEL $label$66
	$30 = [5]
	goto $label$39 
	
.LABEL $label$65
	$30 = [4]
	goto $label$39 
	
.LABEL $label$64
	$30 = [40]
	goto $label$39 
	
.LABEL $label$63
	$30 = [0]
	goto $label$39 
	
.LABEL $label$62
	$30 = [39]
	goto $label$39 
	
.LABEL $label$61
	$30 = [4]
	goto $label$39 
	
.LABEL $label$60
	$30 = [5]
	goto $label$39 
	
.LABEL $label$59
	$30 = [4]
	goto $label$39 
	
.LABEL $label$58
	$30 = [7]
	goto $label$39 
	
.LABEL $label$57
	$30 = [10]
	goto $label$39 
	
.LABEL $label$56
	$30 = [10]
	goto $label$39 
	
.LABEL $label$55
	$30 = [11]
	goto $label$39 
	
.LABEL $label$54
	$30 = [14]
	goto $label$39 
	
.LABEL $label$53
	$30 = [37]
	goto $label$39 
	
.LABEL $label$52
	$30 = [16]
	goto $label$39 
	
.LABEL $label$51
	$30 = [18]
	goto $label$39 
	
.LABEL $label$50
	$30 = [20]
	goto $label$39 
	
.LABEL $label$49
	$30 = [22]
	goto $label$39 
	
.LABEL $label$48
	$30 = [24]
	goto $label$39 
	
.LABEL $label$47
	$30 = [33]
	goto $label$39 
	
.LABEL $label$46
	$30 = [26]
	goto $label$39 
	
.LABEL $label$45
	$30 = [36]
	goto $label$39 
	
.LABEL $label$44
	$30 = [30]
	goto $label$39 
	
.LABEL $label$43
	$30 = [29]
	goto $label$39 
	
.LABEL $label$42
	$30 = [32]
	goto $label$39 
	
.LABEL $label$41
	$30 = [35]
	goto $label$39 
	
.LABEL $label$40
	$30 = [42]
	goto $label$39 
	
.LABEL $label$2
	$11 = ($0 + [32])
	
.LABEL $label$1
	CALL $50(($4 + [400]), $11)
	*($4 + [424]) = [0]
	*($4 + [256]) = [8511]
	*($4 + [260]) = CALL $158([8511])
	*($4) = *($4 + [256])
	CALL $46($11, ($4 + [400]), *(CALL $4(($4 + [264]), $4)))
	$8 = ($0 + [72])
	$7 = *(($0 + [100]))
	if ( ((int_32)$7 == (int_32)*(($0 + [96]))) ){ goto $label$114 }
	$7 = *(($7 + [-24]))
	if ( ((int_32)*($7 + [32]) == (int_32)$8) ){ goto $label$115 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$115
	if ( $7 ){ goto $label$113 }
	goto $label$112 
	
.LABEL $label$114
	$7 = CALL db_find_i64(*($8), *(($0 + [80])), (int_64)-8524869779563368672, (int_64)-8524869779563368672)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$112 }
	$7 = CALL $70($8, $7)
	if ( ((int_32)*($7 + [32]) == (int_32)$8) ){ goto $label$113 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$113
	$6 = CALL db_next_i64(*($7 + [36]), ($4 + [656]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$116 }
	CALL $70($8, $6)
	
.LABEL $label$116
	CALL $71($8, $7)
	
.LABEL $label$112
	$global$0 = ($4 + [752])
	(unreachable)
	$30
	(unreachable)
}

int_32 .FUNC $10 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [272])
	$global$0 = $4
	*(($5 = (($4 + [240]) + [8]))) = *(($3 + [8]))
	*($4 + [240]) = *($3)
	*($0) = $1
	*($0 + [8]) = $2
	$3 = *($5)
	*((($4 + [256]) + [8])) = $3
	$2 = *($4 + [240])
	*($0 + [16]) = $2
	*(($0 + [24])) = $3
	*($4 + [256]) = $2
	*($4 + [224]) = [8511]
	*($4 + [228]) = CALL $158([8511])
	*($4 + [88]) = *($4 + [224])
	$3 = CALL $4(($4 + [232]), ($4 + [88]))
	*($4 + [216]) = [8511]
	*($4 + [220]) = CALL $158([8511])
	*($4 + [80]) = *($4 + [216])
	CALL $4(($4 + [256]), ($4 + [80]))
	*(($0 + [40])) = (int_64)4298345369187365760
	*(($0 + [48])) = (int_64)-1
	*(($0 + [56])) = (int_64)0
	*(($0 + [64])) = [0]
	*($0 + [32]) = *($3)
	*($4 + [200]) = [8511]
	*($4 + [204]) = CALL $158([8511])
	*($4 + [72]) = *($4 + [200])
	$3 = CALL $4(($4 + [208]), ($4 + [72]))
	*($4 + [192]) = [8511]
	*($4 + [196]) = CALL $158([8511])
	*($4 + [64]) = *($4 + [192])
	CALL $4(($4 + [256]), ($4 + [64]))
	*(($0 + [80])) = (int_64)4298345369187365760
	*(($0 + [88])) = (int_64)-1
	*(($0 + [96])) = (int_64)0
	*(($0 + [104])) = [0]
	*($0 + [72]) = *($3)
	*($4 + [176]) = [8511]
	*($4 + [180]) = CALL $158([8511])
	*($4 + [56]) = *($4 + [176])
	$3 = CALL $4(($4 + [184]), ($4 + [56]))
	*($4 + [168]) = [8511]
	*($4 + [172]) = CALL $158([8511])
	*($4 + [48]) = *($4 + [168])
	CALL $4(($4 + [256]), ($4 + [48]))
	*(($0 + [120])) = (int_64)4298345369187365760
	*(($0 + [128])) = (int_64)-1
	*(($0 + [136])) = (int_64)0
	*(($0 + [144])) = [0]
	*($0 + [112]) = *($3)
	*($4 + [152]) = [8511]
	*($4 + [156]) = CALL $158([8511])
	*($4 + [40]) = *($4 + [152])
	$3 = CALL $4(($4 + [160]), ($4 + [40]))
	*($4 + [144]) = [8511]
	*($4 + [148]) = CALL $158([8511])
	*($4 + [32]) = *($4 + [144])
	CALL $4(($4 + [256]), ($4 + [32]))
	*(($0 + [160])) = (int_64)4298345369187365760
	*(($0 + [168])) = (int_64)-1
	*(($0 + [176])) = (int_64)0
	*(($0 + [184])) = [0]
	*($0 + [152]) = *($3)
	*($4 + [128]) = [8511]
	*($4 + [132]) = CALL $158([8511])
	*($4 + [24]) = *($4 + [128])
	$3 = CALL $4(($4 + [136]), ($4 + [24]))
	*($4 + [120]) = [8511]
	*($4 + [124]) = CALL $158([8511])
	*($4 + [16]) = *($4 + [120])
	CALL $4(($4 + [256]), ($4 + [16]))
	*(($0 + [200])) = (int_64)4298345369187365760
	*(($0 + [208])) = (int_64)-1
	*(($0 + [216])) = (int_64)0
	*(($0 + [224])) = [0]
	*($0 + [192]) = *($3)
	*($4 + [104]) = [8511]
	*($4 + [108]) = CALL $158([8511])
	*($4 + [8]) = *($4 + [104])
	$3 = CALL $4(($4 + [112]), ($4 + [8]))
	*($4 + [96]) = [8511]
	*($4 + [100]) = CALL $158([8511])
	*($4) = *($4 + [96])
	CALL $4(($4 + [256]), $4)
	*(($0 + [240])) = (int_64)4298345369187365760
	*(($0 + [248])) = (int_64)-1
	*(($0 + [256])) = (int_64)0
	*(($0 + [264])) = [0]
	*($0 + [232]) = *($3)
	$global$0 = ($4 + [272])
	return $0
}

int_32 .FUNC $11 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *(($0 + [256]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [260])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL _ZdlPv($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [256]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *(($0 + [216]))
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [220])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL _ZdlPv($4)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($0 + [216]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$1 = *(($0 + [176]))
	if ( ($1 == 0) ){ goto $label$11 }
	$2 = ($0 + [180])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	CALL _ZdlPv($4)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$14 }
	$3 = *(($0 + [176]))
	goto $label$12 
	
.LABEL $label$13
	$3 = $1
	
.LABEL $label$12
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$11
	$2 = *(($0 + [136]))
	if ( ($2 == 0) ){ goto $label$16 }
	$5 = ($0 + [140])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$18 }
	
.LOOP $label$19:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$20 }
	$1 = *($4 + [24])
	if ( ($1 == 0) ){ goto $label$21 }
	*(($4 + [28])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$21
	CALL _ZdlPv($4)
	
.LABEL $label$20
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$19 }
	$3 = *(($0 + [136]))
	goto $label$17 
	
.LABEL $label$18
	$3 = $2
	
.LABEL $label$17
	*($5) = $2
	CALL _ZdlPv($3)
	
.LABEL $label$16
	$2 = *(($0 + [96]))
	if ( ($2 == 0) ){ goto $label$22 }
	$5 = ($0 + [100])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$24 }
	
.LOOP $label$25:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$26 }
	$1 = *($4)
	if ( ($1 == 0) ){ goto $label$27 }
	*($4 + [4]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$27
	CALL _ZdlPv($4)
	
.LABEL $label$26
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$25 }
	$3 = *(($0 + [96]))
	goto $label$23 
	
.LABEL $label$24
	$3 = $2
	
.LABEL $label$23
	*($5) = $2
	CALL _ZdlPv($3)
	
.LABEL $label$22
	$1 = *(($0 + [56]))
	if ( ($1 == 0) ){ goto $label$28 }
	$2 = ($0 + [60])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$30 }
	
.LOOP $label$31:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$32 }
	CALL _ZdlPv($4)
	
.LABEL $label$32
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$31 }
	$3 = *(($0 + [56]))
	goto $label$29 
	
.LABEL $label$30
	$3 = $1
	
.LABEL $label$29
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$28
	return $0
}

void .FUNC $12 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [112])
	$global$0 = $1
	*($1 + [88]) = [9309]
	*($1 + [92]) = CALL $158([9309])
	*($1 + [32]) = *($1 + [88])
	if ( CALL has_auth(*(CALL $4(($1 + [96]), ($1 + [32])))) ){ goto $label$1 }
	*($1 + [72]) = [9322]
	*($1 + [76]) = CALL $158([9322])
	*($1 + [24]) = *($1 + [72])
	if ( CALL has_auth(*(CALL $4(($1 + [80]), ($1 + [24])))) ){ goto $label$1 }
	*($1 + [56]) = [8511]
	*($1 + [60]) = CALL $158([8511])
	*($1 + [16]) = *($1 + [56])
	if ( CALL has_auth(*(CALL $4(($1 + [64]), ($1 + [16])))) ){ goto $label$1 }
	CALL eosio_assert([0], [9335])
	
.LABEL $label$1
	*($1 + [40]) = [9456]
	*($1 + [44]) = CALL $158([9456])
	*($1 + [8]) = *($1 + [40])
	CALL $4(($1 + [48]), ($1 + [8]))
	$2 = ($0 + [112])
	$4 = *(($0 + [140]))
	$3 = *(($0 + [136]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$5:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)4298345121781781872) ){ goto $label$4 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	if ( ((int_32)*($6 + [36]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [10407])
	goto $label$2 
	
.LABEL $label$3
	$6 = [0]
	$5 = CALL db_find_i64(*($2), *(($0 + [120])), (int_64)-4157661132521209856, (int_64)4298345121781781872)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$6 }
	$6 = CALL $37($2, $5)
	if ( ((int_32)*($6 + [36]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [10407])
	goto $label$2 
	
.LABEL $label$6
	CALL eosio_assert([0], [10748])
	CALL eosio_assert([0], [10782])
	
.LABEL $label$2
	$5 = CALL db_next_i64(*($6 + [40]), ($1 + [104]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$7 }
	CALL $37($2, $5)
	
.LABEL $label$7
	CALL $81($2, $6)
	$global$0 = ($1 + [112])
}

int_32 .FUNC $13 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [304])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $161($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	$3 = ($2 + $7)
	*(($4 + [8])) = $3
	*($4 + [20]) = $2
	*($4 + [16]) = $2
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $10(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $164($2)
	
.LABEL $label$6
	CALL $11($8)
	$global$0 = ($4 + [304])
	return [1]
}

void .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10812])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10857])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10907])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

int_32 .FUNC $18 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [368])
	$global$0 = $3
	*(($4 = $3) + [360]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $161($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*($4 + [336]) = [0]
	*($4 + [328]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [352]) = [0]
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $5)
	*($4 + [16]) = ($4 + [312])
	*($4 + [40]) = ($4 + [328])
	CALL $56(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [320])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [312])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $10(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [360])
	CALL $57(($4 + [16]), ($4 + [328]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $164($2)
	
.LABEL $label$4
	CALL $11($3)
	$2 = *($4 + [328])
	if ( ($2 == 0) ){ goto $label$5 }
	*($4 + [332]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$5
	$global$0 = ($4 + [368])
	return [1]
}

void .FUNC $19 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$3 = ($global$0 - [416])
	$global$0 = $3
	*($3 + [368]) = [8511]
	*($3 + [372]) = CALL $158([8511])
	*($3 + [72]) = *($3 + [368])
	CALL require_auth(*(CALL $4(($3 + [376]), ($3 + [72]))))
	$4 = *($1 + [16])
	$5 = *($1 + [8])
	*($3 + [312]) = [8511]
	*($3 + [316]) = CALL $158([8511])
	*($3 + [64]) = *($3 + [312])
	$6 = CALL $4(($3 + [320]), ($3 + [64]))
	$7 = [0]
	*(($3 + [360])) = [0]
	*($3 + [336]) = $5
	*($3 + [344]) = (int_64)-1
	*($3 + [352]) = (int_64)0
	$8 = *($6)
	*($3 + [328]) = $8
	$6 = CALL db_find_i64($8, $5, (int_64)-3102536757353119744, $4)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $49(($3 + [328]), $6)
	if ( ((int_32)*($7 + [24]) == (int_32)($3 + [328])) ){ goto $label$2 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$2
	*($3 + [296]) = [8511]
	*($3 + [300]) = CALL $158([8511])
	*($3 + [56]) = *($3 + [296])
	$6 = CALL $4(($3 + [304]), ($3 + [56]))
	*($3 + [256]) = $2
	CALL $98(($3 + [328]), $7, *($6), ($3 + [256]))
	
.LABEL $label$1
	if ( ((int_64)*($7 + [8]) != (int_64)0) ){ goto $label$3 }
	if ( $7 ){ goto $label$4 }
	CALL eosio_assert([0], [10748])
	CALL eosio_assert([0], [10782])
	
.LABEL $label$4
	$6 = CALL db_next_i64(*($7 + [28]), ($3 + [256]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	CALL $49(($3 + [328]), $6)
	
.LABEL $label$5
	CALL $75(($3 + [328]), $7)
	
.LABEL $label$3
	*($3 + [240]) = [8511]
	*($3 + [244]) = CALL $158([8511])
	*($3 + [48]) = *($3 + [240])
	$6 = CALL $4(($3 + [248]), ($3 + [48]))
	$7 = [0]
	*(($3 + [288])) = [0]
	*($3 + [272]) = (int_64)-1
	*($3 + [280]) = (int_64)0
	$8 = *($6)
	*($3 + [256]) = $8
	*($3 + [264]) = $5
	$6 = CALL db_find_i64($8, $5, (int_64)-2453462778758506688, $4)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$7 = CALL $67(($3 + [256]), $6)
	if ( ((int_32)*($7 + [44]) == (int_32)($3 + [256])) ){ goto $label$6 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$6
	*($3 + [224]) = [8511]
	*($3 + [228]) = CALL $158([8511])
	*($3 + [40]) = *($3 + [224])
	$6 = CALL $4(($3 + [232]), ($3 + [40]))
	*($3 + [184]) = $2
	$5 = *($6)
	if ( $7 ){ goto $label$7 }
	CALL eosio_assert([0], [10532])
	
.LABEL $label$7
	CALL $99(($3 + [256]), $7, $5, ($3 + [184]))
	if ( ((int_64)*($7 + [16]) != (int_64)0) ){ goto $label$8 }
	if ( $7 ){ goto $label$9 }
	CALL eosio_assert([0], [10748])
	CALL eosio_assert([0], [10782])
	
.LABEL $label$9
	$6 = CALL db_next_i64(*($7 + [48]), ($3 + [184]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$10 }
	CALL $67(($3 + [256]), $6)
	
.LABEL $label$10
	CALL $100(($3 + [256]), $7)
	
.LABEL $label$8
	*($3 + [168]) = [8511]
	*($3 + [172]) = CALL $158([8511])
	*($3 + [32]) = *($3 + [168])
	$7 = CALL $4(($3 + [176]), ($3 + [32]))
	*($3 + [152]) = [9517]
	*($3 + [156]) = CALL $158([9517])
	*($3 + [24]) = *($3 + [152])
	$5 = *(CALL $4(($3 + [160]), ($3 + [24])))
	$4 = *($7)
	*($3 + [136]) = [9456]
	*($3 + [140]) = CALL $158([9456])
	*($3 + [16]) = *($3 + [136])
	$7 = CALL $4(($3 + [144]), ($3 + [16]))
	*($3 + [120]) = [9600]
	*($3 + [124]) = CALL $158([9600])
	*($3 + [8]) = *($3 + [120])
	$6 = CALL $4(($3 + [128]), ($3 + [8]))
	*((($3 + [80]) + [16])) = *(($1 + [16]))
	*((($3 + [80]) + [8])) = *(($1 + [8]))
	*((($3 + [80]) + [32])) = *(($2 + [8]))
	*($3 + [80]) = *($1)
	*($3 + [104]) = *($2)
	*($3 + [184]) = *($7)
	*($3 + [192]) = *($6)
	*(($1 = CALL _Znwj([16]))) = $4
	*($1 + [8]) = $5
	*(($3 + [220])) = [0]
	$7 = ($1 + [16])
	*(($3 + [208])) = $7
	*(($3 + [204])) = $7
	*($3 + [200]) = $1
	*($3 + [212 align=4]) = (int_64)0
	CALL $60(($3 + [212]), [40])
	$2 = (($3 + [184]) + [32])
	$1 = *($2)
	$7 = *($3 + [212])
	*($3 + [388]) = $7
	*($3 + [384]) = $7
	*($3 + [392]) = $1
	*($3 + [400]) = ($3 + [384])
	*($3 + [408]) = ($3 + [80])
	CALL $92(($3 + [408]), ($3 + [400]))
	CALL $69(($3 + [184]))
	$1 = *($3 + [212])
	if ( ($1 == 0) ){ goto $label$11 }
	*($2) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$11
	$1 = *($3 + [200])
	if ( ($1 == 0) ){ goto $label$12 }
	*(($3 + [204])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$6 = *($3 + [280])
	if ( ($6 == 0) ){ goto $label$13 }
	$9 = ($3 + [284])
	$1 = *($9)
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$1 = ($1 + [-24])
	$7 = *($1)
	*($1) = [0]
	if ( ($7 == 0) ){ goto $label$17 }
	$2 = *($7 + [32])
	if ( ($2 == 0) ){ goto $label$18 }
	*(($7 + [36])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$18
	CALL _ZdlPv($7)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$16 }
	$1 = *(($3 + [280]))
	goto $label$14 
	
.LABEL $label$15
	$1 = $6
	
.LABEL $label$14
	*($9) = $6
	CALL _ZdlPv($1)
	
.LABEL $label$13
	$2 = *($3 + [352])
	if ( ($2 == 0) ){ goto $label$19 }
	$6 = ($3 + [356])
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$21 }
	
.LOOP $label$22:
	$1 = ($1 + [-24])
	$7 = *($1)
	*($1) = [0]
	if ( ($7 == 0) ){ goto $label$23 }
	CALL _ZdlPv($7)
	
.LABEL $label$23
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$22 }
	$1 = *(($3 + [352]))
	goto $label$20 
	
.LABEL $label$21
	$1 = $2
	
.LABEL $label$20
	*($6) = $2
	CALL _ZdlPv($1)
	
.LABEL $label$19
	$global$0 = ($3 + [416])
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10458])
	
.LABEL $label$5
	$2 = CALL $161($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([24])) + [12]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10398])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	$7 = ($5 + [8])
	$8 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10398])
	
.LABEL $label$8
	CALL memcpy($7, $8, [1])
	*($5 + [16]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $87(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $164($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $59 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [36]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10567])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10613])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *($7 + [4])
	$7 = *($3)
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$3 }
	$9 = ($1 + [24])
	$3 = ($3 + [4])
	
.LOOP $label$4:
	CALL $5($9, $8, *($3), [100])
	$8 = ($8 + [16])
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$4 }
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [10664])
	
.LABEL $label$3
	$9 = *($1 + [24])
	$7 = *(($1 + [28]))
	$3 = ($7 - $9)
	$10 = (CASTING uint_64)(uint_32 ((int_32)$3 / (int_32)[48]))
	$8 = [60]
	
.LOOP $label$5:
	$8 = ($8 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$9 }
	$7 = (((int_32)((uint_32)($3 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $8)
	if ( ($7 <= [513]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$7 = ($8 + [-36])
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$7 }
	
.LABEL $label$8
	$8 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $8
	goto $label$6 
	
.LABEL $label$7
	$8 = CALL $161($7)
	
.LABEL $label$6
	*($5 + [4]) = $8
	*($5) = $8
	*($5 + [8]) = ($8 + $7)
	CALL $119($5, $1)
	CALL db_update_i64(*($1 + [40]), $2, $8, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $164($8)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [16])
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [48]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$4
	if ( $2 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-3660748222285835776, (int_64)-3660748222285835776)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$2 = CALL $48($1, $2)
	if ( ((int_32)*($2 + [48]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [10407])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	CALL eosio_assert([0], [10723])
	
.LABEL $label$1
	*($0) = *($2)
	*(($0 + [40])) = *(($2 + [40]))
	*(($0 + [32])) = *(($2 + [32]))
	*(($0 + [24])) = *(($2 + [24]))
	*(($0 + [16])) = *(($2 + [16]))
	*(($0 + [8])) = *(($2 + [8]))
}

void .FUNC $51 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10567])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10613])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10162])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10205])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10224])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10664])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $52($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [16])
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10392])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10392])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $150($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $54 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$4 = ($global$0 - [320])
	$global$0 = $4
	$5 = CALL current_time()
	*((($4 + [224]) + [28])) = (int_64)0
	*(($6 = ($4 + [268]))) = (int_64)0
	*(($4 + [276])) = (int_64)0
	*($4 + [236]) = [0]
	*($4 + [240]) = [0]
	*($4 + [244 align=4]) = (int_64)0
	*($4 + [260 align=4]) = (int_64)0
	*($4 + [224]) = ((CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000)) + [60])
	*($4 + [160]) = [8511]
	*($4 + [164]) = CALL $158([8511])
	*($4 + [48]) = *($4 + [160])
	$7 = CALL $4(($4 + [168]), ($4 + [48]))
	*($4 + [144]) = [9517]
	*($4 + [148]) = CALL $158([9517])
	*($4 + [40]) = *($4 + [144])
	$8 = CALL $4(($4 + [152]), ($4 + [40]))
	*($4 + [128]) = [8511]
	$5 = *($8)
	$9 = *($7)
	*($4 + [132]) = CALL $158([8511])
	*($4 + [32]) = *($4 + [128])
	$7 = CALL $4(($4 + [136]), ($4 + [32]))
	*($4 + [112]) = [9600]
	*($4 + [116]) = CALL $158([9600])
	*($4 + [24]) = *($4 + [112])
	$8 = CALL $4(($4 + [120]), ($4 + [24]))
	*((($4 + [88]) + [16])) = *(($2 + [8]))
	*($4 + [88]) = $1
	*($4 + [96]) = *($2)
	*($4 + [176]) = *($7)
	*($4 + [184]) = *($8)
	*(($2 = CALL _Znwj([16]))) = $9
	*($2 + [8]) = $5
	*(($8 = (($4 + [176]) + [36]))) = [0]
	$7 = ($2 + [16])
	*(($10 = (($4 + [176]) + [24]))) = $7
	*(($11 = (($4 + [176]) + [20]))) = $7
	*($4 + [192]) = $2
	*($4 + [204 align=4]) = (int_64)0
	$12 = (($4 + [176]) + [28])
	CALL $60($12, [24])
	$13 = (($4 + [176]) + [32])
	$2 = *($13)
	$7 = *($4 + [204])
	*($4 + [292]) = $7
	*($4 + [288]) = $7
	*($4 + [296]) = $2
	*($4 + [304]) = ($4 + [288])
	*($4 + [312]) = ($4 + [88])
	CALL $85(($4 + [312]), ($4 + [304]))
	$7 = (($4 + [224]) + [40])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*($6)) ){ goto $label$3 }
	*($2) = *($4 + [176])
	*($2 + [16]) = [0]
	*(($2 + [8])) = *((($4 + [176]) + [8]))
	*(($6 = ($2 + [20]))) = (int_64)0
	$14 = (($4 + [176]) + [16])
	*($2 + [16]) = *($14)
	*($6) = *($11)
	*(($2 + [24])) = *($10)
	*($10) = [0]
	*($2 + [28 align=4]) = (int_64)0
	*($11) = [0]
	*($14) = [0]
	*(($6 = ($2 + [36]))) = [0]
	*($2 + [28]) = *($12)
	*(($2 + [32])) = *($13)
	*($6) = *($8)
	*($13) = [0]
	*($12) = [0]
	*($8) = [0]
	*($7) = (*($7) + [40])
	$2 = *($4 + [192])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $62((($4 + [224]) + [36]), ($4 + [176]))
	$2 = *($4 + [204])
	if ( ($2 == 0) ){ goto $label$4 }
	*(($4 + [208])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$4
	$2 = *($4 + [192])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*(($4 + [196])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$1
	*(($4 + [244])) = $3
	*($4 + [80]) = [8511]
	*($4 + [84]) = CALL $158([8511])
	*($4 + [16]) = *($4 + [80])
	CALL $4(($4 + [176]), ($4 + [16]))
	*($4 + [72]) = [9580]
	*($4 + [76]) = CALL $158([9580])
	*($4 + [8]) = *($4 + [72])
	CALL $4(($4 + [88]), ($4 + [8]))
	$5 = CALL current_time()
	*($4 + [184]) = (int_64)0
	$1 = ((int_64)((int_64)$1 + (int_64)((int_64)((uint_64)$5 / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)9027840329775182720)
	*($4 + [176]) = $1
	CALL cancel_deferred(($4 + [176]))
	*($4 + [184]) = (int_64)0
	*($4 + [176]) = $1
	*($4 + [56]) = [8511]
	*($4 + [60]) = CALL $158([8511])
	*($4) = *($4 + [56])
	CALL $65(($4 + [224]), ($4 + [176]), *(CALL $4(($4 + [64]), $4)), [0])
	CALL $66(($4 + [224]))
	$global$0 = ($4 + [320])
}

void .FUNC $34 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [288])
	$global$0 = $3
	*($3 + [272]) = $2
	*($3 + [256]) = [9309]
	*($3 + [260]) = CALL $158([9309])
	*($3 + [56]) = *($3 + [256])
	if ( CALL has_auth(*(CALL $4(($3 + [264]), ($3 + [56])))) ){ goto $label$1 }
	*($3 + [240]) = [9322]
	*($3 + [244]) = CALL $158([9322])
	*($3 + [48]) = *($3 + [240])
	if ( CALL has_auth(*(CALL $4(($3 + [248]), ($3 + [48])))) ){ goto $label$1 }
	*($3 + [224]) = [8511]
	*($3 + [228]) = CALL $158([8511])
	*($3 + [40]) = *($3 + [224])
	if ( CALL has_auth(*(CALL $4(($3 + [232]), ($3 + [40])))) ){ goto $label$1 }
	CALL eosio_assert([0], [9335])
	
.LABEL $label$1
	$4 = ($0 + [152])
	$5 = *(($0 + [176]))
	$6 = *(($0 + [180]))
	if ( ((int_64)*($3 + [272]) == (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$10 }
	
.LOOP $label$13:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$11 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$13 }
	goto $label$10 
	
.LABEL $label$12
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$14:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$7 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$14 }
	goto $label$6 
	
.LABEL $label$11
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$10 }
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$9 }
	CALL eosio_assert([0], [10407])
	goto $label$9 
	
.LABEL $label$10
	$6 = CALL db_find_i64(*(($0 + [152])), *(($0 + [160])), (int_64)-3020374815346262016, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$8 }
	$8 = CALL $76($4, $6)
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$9 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$9
	*($3 + [208]) = [8511]
	*($3 + [212]) = CALL $158([8511])
	*($3 + [32]) = *($3 + [208])
	$6 = CALL $4(($3 + [216]), ($3 + [32]))
	*($3 + [144]) = ($3 + [272])
	CALL $82($4, $8, *($6), ($3 + [144]))
	$global$0 = ($3 + [288])
	return 
	
.LABEL $label$8
	*($3 + [192]) = [8511]
	*($3 + [196]) = CALL $158([8511])
	*($3 + [24]) = *($3 + [192])
	$9 = *(CALL $4(($3 + [200]), ($3 + [24])))
	if ( ((int_64)*($4) == (int_64)CALL current_receiver()) ){ goto $label$15 }
	CALL eosio_assert([0], [10481])
	
.LABEL $label$15
	*(($6 = CALL _Znwj([32])) + [16]) = $4
	*($6) = $1
	*($6 + [8]) = *($3 + [272])
	CALL memcpy(($3 + [144]), $6, [8])
	CALL memcpy((($3 + [144]) | [8]), ($6 + [8]), [8])
	$2 = *($6)
	$5 = CALL db_store_i64(*(($0 + [160])), (int_64)-3020374815346262016, $9, $2, ($3 + [144]), [16])
	*($6 + [20]) = $5
	$7 = ($0 + [168])
	if ( (uint_64)($2 <= *($7)) ){ goto $label$16 }
	*($7) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	*($3 + [80]) = $6
	$2 = *($6)
	*($3 + [144]) = $2
	*($3 + [284]) = $5
	$8 = ($0 + [180])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [184]))) ){ goto $label$4 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($3 + [80]) = [0]
	*($7) = $6
	*($8) = ($7 + [24])
	$6 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$6 }
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [10407])
	goto $label$5 
	
.LABEL $label$6
	$8 = [0]
	$6 = CALL db_find_i64(*(($0 + [152])), *(($0 + [160])), (int_64)-3020374815346262016, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$17 }
	$8 = CALL $76($4, $6)
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [10407])
	goto $label$5 
	
.LABEL $label$17
	CALL eosio_assert([0], [10748])
	CALL eosio_assert([0], [10782])
	
.LABEL $label$5
	$6 = CALL db_next_i64(*($8 + [20]), ($3 + [144]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$18 }
	CALL $76($4, $6)
	
.LABEL $label$18
	CALL $83($4, $8)
	$global$0 = ($3 + [288])
	return 
	
.LABEL $label$4
	CALL $44(($0 + [176]), ($3 + [80]), ($3 + [144]), ($3 + [284]))
	$6 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($6 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv($6)
	
.LABEL $label$2
	$4 = ($0 + [112])
	$7 = *(($0 + [140]))
	$8 = *(($0 + [136]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$21 }
	
.LOOP $label$23:
	$6 = ($7 + [-24])
	$5 = *($6)
	if ( ((int_64)*($5) == (int_64)$1) ){ goto $label$22 }
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$21 }
	if ( ((int_32)*($5 + [36]) == (int_32)$4) ){ goto $label$20 }
	CALL eosio_assert([0], [10407])
	goto $label$20 
	
.LABEL $label$21
	$6 = CALL db_find_i64(*($4), *(($0 + [120])), (int_64)-4157661132521209856, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$19 }
	$5 = CALL $37($4, $6)
	if ( ((int_32)*($5 + [36]) == (int_32)$4) ){ goto $label$20 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$20
	*($3 + [128]) = [8511]
	*($3 + [132]) = CALL $158([8511])
	*($3 + [16]) = *($3 + [128])
	$6 = CALL $4(($3 + [136]), ($3 + [16]))
	$7 = CALL $41(($3 + [80]))
	$0 = ($0 + [32])
	CALL $42(($3 + [144]), $0, *($6), $7)
	if ( ((int_64)*(($5 + [16])) == (int_64)*(($3 + [184]))) ){ goto $label$24 }
	CALL eosio_assert([0], [10301])
	
.LABEL $label$24
	$1 = (int_64)
	*($3 + [176]) = $1(*($3 + [176]) - *($5 + [8])))
	if ( ((int_64)$1 > (int_64)-4611686018427387904) ){ goto $label$25 }
	CALL eosio_assert([0], [10349])
	$1 = *(($3 + [176]))
	
.LABEL $label$25
	if ( ((int_64)$1 < (int_64)4611686018427387904) ){ goto $label$26 }
	CALL eosio_assert([0], [10371])
	
.LABEL $label$26
	*($3 + [64]) = [8511]
	*($3 + [68]) = CALL $158([8511])
	*($3 + [8]) = *($3 + [64])
	CALL $46($0, ($3 + [144]), *(CALL $4(($3 + [72]), ($3 + [8]))))
	
.LABEL $label$19
	$global$0 = ($3 + [288])
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $72(*($1), *($0))
	$2 = *($0)
	$3 = ($2 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10398])
	$4 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$4 = ($2 + [24])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $0) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [10398])
	$0 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $0, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = [0]
	*($2 + [8]) = [0]
	*($2) = (int_64)0
	$4 = (*($1 + [4]) - *($1))
	if ( ($4 == 0) ){ goto $label$6 }
	$3 = int_32($4 >> [4])
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$2 }
	$4 = CALL _Znwj($4)
	*(($2 + [8])) = ($4 + ($3 << [4]))
	*($2) = $4
	*($2 + [4]) = $4
	$5 = *($1)
	$3 = (*(($1 + [4])) - $5)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($4, $5, $3)
	$3 = ($4 + $3)
	*($2 + [4]) = $3
	goto $label$4 
	
.LABEL $label$6
	$4 = [0]
	$6 = [0]
	$7 = [0]
	goto $label$3 
	
.LABEL $label$5
	$3 = $4
	
.LABEL $label$4
	$6 = $4
	$7 = $4
	
.LABEL $label$3
	$8 = *($1 + [24])
	$9 = *($1 + [16])
	$1 = *($0 + [4])
	$0 = *($1 + [4])
	$5 = (*($0) + int_32($0 >> [1]))
	$1 = *($1)
	if ( (($0 & [1]) == 0) ){ goto $label$7 }
	$1 = *((*($5) + $1))
	
.LABEL $label$7
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	$0 = ($3 - $7)
	if ( ($0 == 0) ){ goto $label$8 }
	$7 = int_32($0 >> [4])
	if ( ((uint_32)$7 >= (uint_32)[268435456]) ){ goto $label$1 }
	$0 = CALL _Znwj($0)
	*(($2 + [24])) = ($0 + ($7 << [4]))
	*($2 + [16]) = $0
	*($2 + [20]) = $0
	$3 = ($3 - $6)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($0, $4, $3)
	*($2 + [20]) = ($0 + $3)
	
.LABEL $label$8
	CALL void $5((int_32 ($2 + [16])), (int_32 $9), (int_64 $8), (int_32 $1))
	$1 = *($2 + [16])
	if ( ($1 == 0) ){ goto $label$9 }
	*($2 + [20]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$10 }
	*($2 + [4]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $150($2)
	
.LABEL $label$1
	CALL $150(($2 + [16]))
	(unreachable)
}

int_32 .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10403])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ((int_32)($7 - $2) / (int_32)[48])
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$5 }
	CALL $117($1, ($6 - $5))
	$7 = *(($1 + [4]))
	$2 = *($1)
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$6 }
	$7 = ($2 + ((int_32)$6 * (int_32)[48]))
	*(($1 + [4])) = $7
	
.LABEL $label$6
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	CALL $118($0, $2)
	$2 = ($2 + [48])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[48]) >= (uint_32)$1) ){ goto $label$4 }
	$4 = *($0)
	$3 = ((int_32)($3 - $4) / (int_32)[48])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[89478486]) ){ goto $label$2 }
	$6 = [89478485]
	$2 = ((int_32)($2 - $4) / (int_32)[48])
	if ( ((uint_32)$2 > (uint_32)[44739241]) ){ goto $label$5 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$5
	$2 = CALL _Znwj(((int_32)$6 * (int_32)[48]))
	goto $label$1 
	
.LABEL $label$4
	$6 = $3
	$2 = $1
	
.LOOP $label$6:
	*($6) = (int_64)1398362884
	*(($6 + [24])) = (int_64)0
	*(($6 + [16])) = (int_64)0
	*(($6 + [32])) = [1000000000]
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [48])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$6 }
	*(($0 + [4])) = ($3 + ((int_32)$1 * (int_32)[48]))
	return (unreachable)
	
.LABEL $label$3
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $150($0)
	
.LABEL $label$1
	$4 = ($2 + ((int_32)$6 * (int_32)[48]))
	$3 = ($2 + ((int_32)$3 * (int_32)[48]))
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)1398362884
	*(($6 + [24])) = (int_64)0
	*(($6 + [16])) = (int_64)0
	*(($6 + [32])) = [1000000000]
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [48])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	$5 = ($3 + ((int_32)$1 * (int_32)[48]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 + ((int_32)((int_32)$2 / (int_32)[-48]) * (int_32)[48]))
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$8
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$9 }
	CALL _ZdlPv($6)
	
.LABEL $label$9
}

int_32 .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [10392])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $112($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

int_32 .FUNC $35 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [320])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $161($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [312]) = (int_64)0
	*($4 + [304]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10398])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [304]) + [8])
	CALL memcpy(($4 + [304]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10398])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [8])) = $3
	*($4 + [16]) = $2
	*($4 + [20]) = ($2 + [16])
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $10(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *((($4 + [304]) + [8]))
	$1 = *($4 + [304])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $164($2)
	
.LABEL $label$8
	CALL $11($8)
	$global$0 = ($4 + [320])
	return [1]
}

int_32 .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [10392])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [10392])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [10392])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [10392])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [10392])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [10392])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10392])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10392])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10392])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $132(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $111 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10392])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10392])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $159(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [11064])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $159(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($2 + [8]) = (int_64)0
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10398])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy(($2 + [8]), $3, [8])
	*($1) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10398])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[15]) ){ goto $label$3 }
	CALL eosio_assert([0], [10398])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [16])
	$4 = (*($3) + [16])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [32])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [10398])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($1, $4, [4])
	*($3) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10392])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2) = *(($1 + [16]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10392])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	$3 = (*($4) + [8])
	*(($4 = ($0 + [4]))) = $3
	$7 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[48]))
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [10392])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = *(($1 + [28]))
	$3 = *(($1 + [24]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	CALL $120($0, $3)
	$3 = ($3 + [48])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$7 }
	
.LABEL $label$6
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $152 (int_32 $0)
{
}

int_32 .FUNC $153 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [18] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $155($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $155($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $155($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $155($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [19488]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $155($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $155($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $155($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

void .FUNC $150 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $151 ()
{
	return [11068]
}

void .FUNC $156 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

int_32 .FUNC $157 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $153([19], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

void .FUNC $154 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

int_32 .FUNC $155 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

int_32 .FUNC $158 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $159 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $151())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $160($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $161($1)
	
.LABEL $label$2
	*(CALL $151()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $161(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $164($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $29 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$3 = ($global$0 - [192])
	$global$0 = $3
	*($3 + [168]) = [8511]
	*($3 + [172]) = CALL $158([8511])
	*($3 + [48]) = *($3 + [168])
	CALL require_auth(*(CALL $4(($3 + [176]), ($3 + [48]))))
	$4 = ($0 + [32])
	$5 = *(($0 + [60]))
	if ( ((int_32)$5 == (int_32)*(($0 + [56]))) ){ goto $label$3 }
	$5 = *(($5 + [-24]))
	if ( ((int_32)*($5 + [48]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$4
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$5 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)-3660748222285835776, (int_64)-3660748222285835776)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)*(CALL $48($4, $5) + [48]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [10407])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9215])
	
.LABEL $label$1
	CALL $50(($3 + [120]), $4)
	$6 = ($0 + [192])
	$8 = *(($0 + [220]))
	$7 = *(($0 + [216]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$7 }
	
.LOOP $label$9:
	$5 = ($8 + [-24])
	$9 = *($5)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$8 }
	$8 = $5
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$7 }
	if ( ((int_32)*($9 + [24]) == (int_32)$6) ){ goto $label$6 }
	CALL eosio_assert([0], [10407])
	goto $label$6 
	
.LABEL $label$7
	$9 = [0]
	$5 = CALL db_find_i64(*($6), *(($0 + [200])), (int_64)-3102536757353119744, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$9 = CALL $49($6, $5)
	if ( ((int_32)*($9 + [24]) == (int_32)$6) ){ goto $label$6 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$6
	*($3 + [104]) = [8511]
	*($3 + [108]) = CALL $158([8511])
	*($3 + [40]) = *($3 + [104])
	$5 = CALL $4(($3 + [112]), ($3 + [40]))
	*($3 + [184]) = $2
	CALL $74($6, $9, *($5), ($3 + [184]))
	
.LABEL $label$5
	if ( ((int_64)*($9 + [8]) == (int_64)0) ){ goto $label$12 }
	if ( ((int_32)*($3 + [144]) != (int_32)[1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	if ( $9 ){ goto $label$13 }
	CALL eosio_assert([0], [10748])
	CALL eosio_assert([0], [10782])
	
.LABEL $label$13
	$5 = CALL db_next_i64(*($9 + [28]), ($3 + [184]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$14 }
	CALL $49($6, $5)
	
.LABEL $label$14
	CALL $75($6, $9)
	if ( ((int_32)*($3 + [144]) == (int_32)[1]) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_64)*($2 + [8]) == (int_64)*(($3 + [136]))) ){ goto $label$15 }
	CALL eosio_assert([0], [10301])
	
.LABEL $label$15
	$11 = (int_64)
	*($3 + [128]) = $11(*($3 + [128]) - *($2)))
	if ( ((int_64)$11 > (int_64)-4611686018427387904) ){ goto $label$16 }
	CALL eosio_assert([0], [10349])
	$11 = *(($3 + [128]))
	
.LABEL $label$16
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$17 }
	CALL eosio_assert([0], [10371])
	
.LABEL $label$17
	$6 = ($0 + [152])
	$8 = *(($0 + [180]))
	$9 = *(($0 + [176]))
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$19 }
	
.LOOP $label$21:
	$5 = ($8 + [-24])
	$7 = *($5)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$20 }
	$8 = $5
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$19 }
	if ( ((int_32)*($7 + [16]) == (int_32)$6) ){ goto $label$18 }
	CALL eosio_assert([0], [10407])
	goto $label$18 
	
.LABEL $label$19
	$5 = CALL db_find_i64(*($6), *(($0 + [160])), (int_64)-3020374815346262016, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$22 }
	if ( ((int_32)*(CALL $76($6, $5) + [16]) == (int_32)$6) ){ goto $label$18 }
	CALL eosio_assert([0], [10407])
	goto $label$18 
	
.LABEL $label$22
	if ( ((int_64)*(($2 + [8])) == (int_64)*(($3 + [160]))) ){ goto $label$23 }
	CALL eosio_assert([0], [10301])
	
.LABEL $label$23
	$11 = (int_64)
	*($3 + [152]) = $11(*($3 + [152]) - *($2)))
	if ( ((int_64)$11 > (int_64)-4611686018427387904) ){ goto $label$24 }
	CALL eosio_assert([0], [10349])
	$11 = *(($3 + [152]))
	
.LABEL $label$24
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$18 }
	CALL eosio_assert([0], [10371])
	
.LABEL $label$18
	*($3 + [72]) = [8511]
	*($3 + [76]) = CALL $158([8511])
	*($3 + [32]) = *($3 + [72])
	CALL $46($4, ($3 + [120]), *(CALL $4(($3 + [80]), ($3 + [32]))))
	$6 = ($0 + [112])
	$8 = *(($0 + [140]))
	$7 = *(($0 + [136]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$26 }
	
.LOOP $label$28:
	$5 = ($8 + [-24])
	$9 = *($5)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$27 }
	$8 = $5
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$26 }
	if ( ((int_32)*($9 + [36]) == (int_32)$6) ){ goto $label$25 }
	CALL eosio_assert([0], [10407])
	goto $label$25 
	
.LABEL $label$26
	$9 = [0]
	$5 = CALL db_find_i64(*($6), *(($0 + [120])), (int_64)-4157661132521209856, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$25 }
	$9 = CALL $37($6, $5)
	if ( ((int_32)*($9 + [36]) == (int_32)$6) ){ goto $label$25 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$25
	if ( ((int_64)*(($2 + [8])) == (int_64)*(($9 + [16]))) ){ goto $label$29 }
	CALL eosio_assert([0], [10242])
	
.LABEL $label$29
	if ( ((int_64)*($2) <= (int_64)*($9 + [8])) ){ goto $label$30 }
	CALL eosio_assert([0], [9268])
	
.LABEL $label$30
	*($3 + [56]) = [8511]
	*($3 + [60]) = CALL $158([8511])
	*($3 + [24]) = *($3 + [56])
	$5 = CALL $4(($3 + [64]), ($3 + [24]))
	*($3 + [184]) = $2
	$1 = *($5)
	if ( $9 ){ goto $label$31 }
	CALL eosio_assert([0], [10532])
	
.LABEL $label$31
	CALL $77($6, $9, $1, ($3 + [184]))
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$10
	$10 = *(($2 + [8]))
	*((($3 + [88]) + [8])) = $10
	$11 = *($2)
	*((($3 + [8]) + [8])) = $10
	*($3 + [88]) = $11
	*($3 + [8]) = $11
	CALL $54($5, $1, ($3 + [8]), [300])
	$global$0 = ($3 + [192])
}

void .FUNC $28 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [496])
	$global$0 = $3
	if ( ((int_64)*($1) == (int_64)4298345121774150816) ){ goto $label$1 }
	CALL eosio_assert([0], [9612])
	
.LABEL $label$1
	$4 = *($1 + [8])
	*($3 + [456]) = $4
	*($3 + [448]) = *($1 + [16])
	if ( ((int_64)$4 == (int_64)-2616700122498420864) ){ goto $label$2 }
	CALL eosio_assert([0], [9646])
	
.LABEL $label$2
	CALL require_auth((int_64)4298345121781781872)
	*($3 + [384]) = [8511]
	*($3 + [388]) = CALL $158([8511])
	*($3 + [104]) = *($3 + [384])
	$1 = CALL $4(($3 + [392]), ($3 + [104]))
	$5 = CALL $41(($3 + [336]))
	$6 = ($0 + [32])
	CALL $42(($3 + [400]), $6, *($1), $5)
	$7 = CALL $43($0, *($3 + [448]))
	*($3 + [320]) = [8511]
	*($3 + [324]) = CALL $158([8511])
	*($3 + [96]) = *($3 + [320])
	$1 = CALL $4(($3 + [328]), ($3 + [96]))
	*($3 + [304]) = [9517]
	*($3 + [308]) = CALL $158([9517])
	*($3 + [88]) = *($3 + [304])
	$5 = CALL $4(($3 + [312]), ($3 + [88]))
	*($3 + [288]) = [8511]
	$4 = *($5)
	$8 = *($1)
	*($3 + [292]) = CALL $158([8511])
	*($3 + [80]) = *($3 + [288])
	$1 = CALL $4(($3 + [296]), ($3 + [80]))
	*($3 + [272]) = [9534]
	*($3 + [276]) = CALL $158([9534])
	*($3 + [72]) = *($3 + [272])
	$5 = CALL $4(($3 + [280]), ($3 + [72]))
	*(($9 = (($3 + [336]) + [24]))) = [0]
	*((($3 + [240]) + [16])) = *(($2 + [8]))
	*($3 + [352]) = (int_64)0
	*($3 + [240]) = *($3 + [456])
	*($3 + [248]) = *($2)
	*($3 + [336]) = *($1)
	*($3 + [344]) = *($5)
	*(($1 = CALL _Znwj([16]))) = $8
	*($1 + [8]) = $4
	*(($3 + [372])) = [0]
	$5 = ($1 + [16])
	*($9) = $5
	*(($3 + [356])) = $5
	*($3 + [352]) = $1
	*($3 + [364 align=4]) = (int_64)0
	CALL $60(($3 + [364]), [24])
	$9 = (($3 + [336]) + [32])
	$1 = *($9)
	$5 = *($3 + [364])
	*($3 + [468]) = $5
	*($3 + [464]) = $5
	*($3 + [472]) = $1
	*($3 + [480]) = ($3 + [464])
	*($3 + [488]) = ($3 + [240])
	CALL $85(($3 + [488]), ($3 + [480]))
	CALL $69(($3 + [336]))
	$1 = *($3 + [364])
	if ( ($1 == 0) ){ goto $label$3 }
	*($9) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$1 = *($3 + [352])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 + [356])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$4
	$10 = ($0 + [232])
	$4 = *($3 + [456])
	$5 = *(($0 + [260]))
	$9 = *(($0 + [256]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$11 = *($1)
	if ( ((int_64)*($11) == (int_64)$4) ){ goto $label$7 }
	$5 = $1
	if ( ((int_32)$9 != (int_32)$1) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$6 }
	if ( ((int_32)*(($11 + [12])) == (int_32)$10) ){ goto $label$5 }
	CALL eosio_assert([0], [10407])
	goto $label$5 
	
.LABEL $label$6
	$1 = CALL db_find_i64(*($10), *(($0 + [240])), (int_64)-2453788745476866048, $4)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$9 }
	if ( ((int_32)*(CALL $58($10, $1) + [12]) == (int_32)$10) ){ goto $label$5 }
	CALL eosio_assert([0], [10407])
	goto $label$5 
	
.LABEL $label$9
	*($3 + [224]) = [8511]
	*($3 + [228]) = CALL $158([8511])
	*($3 + [64]) = *($3 + [224])
	$8 = *(CALL $4(($3 + [232]), ($3 + [64])))
	if ( ((int_64)*($10) == (int_64)CALL current_receiver()) ){ goto $label$10 }
	CALL eosio_assert([0], [10481])
	
.LABEL $label$10
	*(($1 = CALL _Znwj([24])) + [12]) = $10
	*($1 + [8]) = [0]
	*($1) = *($3 + [456])
	CALL memcpy(($3 + [336]), $1, [8])
	CALL memcpy((($3 + [336]) | [8]), ($1 + [8]), [1])
	$4 = *($1)
	$9 = CALL db_store_i64(*(($0 + [240])), (int_64)-2453788745476866048, $8, $4, ($3 + [336]), [9])
	*($1 + [16]) = $9
	$5 = ($0 + [248])
	if ( (uint_64)($4 <= *($5)) ){ goto $label$11 }
	*($5) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*($3 + [240]) = $1
	$4 = *($1)
	*($3 + [336]) = $4
	*($3 + [464]) = $9
	$11 = ($0 + [260])
	$5 = *($11)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [264]))) ){ goto $label$13 }
	*($5 + [8]) = $4
	*($5 + [16]) = $9
	*($3 + [240]) = [0]
	*($5) = $1
	*($11) = ($5 + [24])
	$1 = *($3 + [240])
	*($3 + [240]) = [0]
	if ( $1 ){ goto $label$12 }
	goto $label$5 
	
.LABEL $label$13
	CALL $87(($0 + [256]), ($3 + [240]), ($3 + [336]), ($3 + [464]))
	$1 = *($3 + [240])
	*($3 + [240]) = [0]
	if ( ($1 == 0) ){ goto $label$5 }
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$5
	*($3 + [208]) = [8511]
	*($3 + [212]) = CALL $158([8511])
	*($3 + [56]) = *($3 + [208])
	$1 = CALL $4(($3 + [216]), ($3 + [56]))
	*(($3 + [368])) = [0]
	*($3 + [352]) = (int_64)-1
	*($3 + [360]) = (int_64)0
	$4 = *($1)
	*($3 + [336]) = $4
	$8 = *($3 + [456])
	*($3 + [344]) = $8
	$1 = CALL db_find_i64($4, $8, (int_64)-2453462778758506688, *($3 + [448]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$17 }
	$1 = CALL $67(($3 + [336]), $1)
	if ( ((int_32)*($1 + [44]) == (int_32)($3 + [336])) ){ goto $label$18 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$18
	*($3 + [176]) = [8511]
	*($3 + [180]) = CALL $158([8511])
	*($3 + [48]) = *($3 + [176])
	$5 = CALL $4(($3 + [184]), ($3 + [48]))
	*($3 + [240]) = $2
	CALL $88(($3 + [336]), $1, *($5), ($3 + [240]))
	$5 = [-1]
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	*($3 + [192]) = [8511]
	*($3 + [196]) = CALL $158([8511])
	*($3 + [40]) = *($3 + [192])
	$1 = CALL $4(($3 + [200]), ($3 + [40]))
	*($3 + [472]) = $2
	*($3 + [468]) = ($3 + [448])
	*($3 + [464]) = ($3 + [456])
	*($3 + [488]) = *($1)
	if ( ((int_64)*($3 + [336]) == (int_64)CALL current_receiver()) ){ goto $label$19 }
	CALL eosio_assert([0], [10481])
	
.LABEL $label$19
	*($3 + [244]) = ($3 + [464])
	*($3 + [240]) = ($3 + [336])
	*($3 + [248]) = ($3 + [488])
	*(($1 = CALL _Znwj([56])) + [16]) = (int_64)0
	*($1) = (int_64)0
	*($1 + [24]) = (int_64)0
	*($1 + [32 align=4]) = (int_64)0
	*($1 + [40]) = [0]
	*($1 + [44]) = ($3 + [336])
	CALL $89(($3 + [240]), $1)
	*($3 + [480]) = $1
	$4 = *($1 + [8])
	*($3 + [240]) = $4
	$9 = *($1 + [48])
	*($3 + [476]) = $9
	$11 = ($3 + [364])
	$5 = *($11)
	if ( ((uint_32)$5 >= (uint_32)*(($3 + [368]))) ){ goto $label$22 }
	*($5 + [8]) = $4
	*($5 + [16]) = $9
	*($3 + [480]) = [0]
	*($5) = $1
	*($11) = ($5 + [24])
	$5 = *($3 + [480])
	$1 = [0]
	*($3 + [480]) = [0]
	if ( ($5 == 0) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	CALL $90(($3 + [360]), ($3 + [480]), ($3 + [240]), ($3 + [476]))
	$5 = *($3 + [480])
	$1 = [0]
	*($3 + [480]) = [0]
	if ( $5 ){ goto $label$20 }
	
.LABEL $label$21
	$5 = [-1]
	if ( ((int_32)$7 == (int_32)[-1]) ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$20
	$9 = *($5 + [32])
	if ( ($9 == 0) ){ goto $label$23 }
	*(($5 + [36])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$23
	CALL _ZdlPv($5)
	$5 = [-1]
	if ( ((int_32)$7 == (int_32)[-1]) ){ goto $label$15 }
	
.LABEL $label$16
	$4 = (CASTING int_64)(int_32 $7)
	goto $label$14 
	
.LABEL $label$15
	*($3 + [160]) = [8699]
	*($3 + [164]) = CALL $158([8699])
	*($3 + [32]) = *($3 + [160])
	$9 = CALL $43($0, *(CALL $4(($3 + [168]), ($3 + [32]))))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$24 }
	$4 = (CASTING int_64)(int_32 $9)
	goto $label$14 
	
.LABEL $label$24
	*($3 + [144]) = [8511]
	*($3 + [148]) = CALL $158([8511])
	*($3 + [24]) = *($3 + [144])
	$9 = ($0 + [152])
	$8 = *(CALL $4(($3 + [152]), ($3 + [24])))
	if ( ((int_64)*($0 + [152]) == (int_64)CALL current_receiver()) ){ goto $label$25 }
	CALL eosio_assert([0], [10481])
	
.LABEL $label$25
	*(($5 = CALL _Znwj([32])) + [16]) = $9
	*($3 + [464]) = [8699]
	*($3 + [468]) = CALL $158([8699])
	*($3 + [16]) = *($3 + [464])
	*($5) = *(CALL $4(($3 + [240]), ($3 + [16])))
	*($5 + [8]) = (int_64)1000
	CALL memcpy(($3 + [240]), $5, [8])
	CALL memcpy((($3 + [240]) | [8]), ($5 + [8]), [8])
	$4 = *($5)
	$11 = CALL db_store_i64(*(($0 + [160])), (int_64)-3020374815346262016, $8, $4, ($3 + [240]), [16])
	*($5 + [20]) = $11
	$9 = ($0 + [168])
	if ( (uint_64)($4 <= *($9)) ){ goto $label$26 }
	*($9) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$26
	*($3 + [464]) = $5
	$4 = *($5)
	*($3 + [240]) = $4
	*($3 + [488]) = $11
	$2 = ($0 + [180])
	$9 = *($2)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [184]))) ){ goto $label$29 }
	*($9 + [8]) = $4
	*($9 + [16]) = $11
	*($3 + [464]) = [0]
	*($9) = $5
	*($2) = ($9 + [24])
	$5 = *($3 + [464])
	*($3 + [464]) = [0]
	if ( $5 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	CALL $44(($0 + [176]), ($3 + [464]), ($3 + [240]), ($3 + [488]))
	$5 = *($3 + [464])
	*($3 + [464]) = [0]
	if ( ($5 == 0) ){ goto $label$27 }
	
.LABEL $label$28
	CALL _ZdlPv($5)
	
.LABEL $label$27
	$4 = (int_64)1000
	
.LABEL $label$14
	*($3 + [128]) = [8511]
	*($3 + [132]) = CALL $158([8511])
	*($3 + [8]) = *($3 + [128])
	if ( CALL has_auth(*(CALL $4(($3 + [136]), ($3 + [8])))) ){ goto $label$30 }
	if ( (uint_64)(*($3 + [408]) <= (int_64)10000000000) ){ goto $label$30 }
	if ( ((uint_64)((int_64)$4 * (int_64)1000) >= (uint_64)((int_64)((int_64)*($1 + [16]) * (int_64)10000000) / (int_64)*($3 + [432]))) ){ goto $label$30 }
	*($3 + [464]) = ((uint_64)$4 / (uint_64)(int_64)100)
	CALL $45(($3 + [240]), [8711], ($3 + [464]), [8744])
	if ( (*($3 + [240]) & [1]) ){ goto $label$32 }
	$1 = (($3 + [240]) | [1])
	goto $label$31 
	
.LABEL $label$32
	$1 = *($3 + [248])
	CALL _ZdlPv($1)
	
.LABEL $label$31
	CALL eosio_assert([0], $1)
	
.LABEL $label$30
	*($3 + [112]) = [8511]
	*($3 + [116]) = CALL $158([8511])
	*($3) = *($3 + [112])
	CALL $46($6, ($3 + [400]), *(CALL $4(($3 + [120]), $3)))
	$11 = *($3 + [360])
	if ( ($11 == 0) ){ goto $label$33 }
	$0 = ($3 + [364])
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)$11) ){ goto $label$35 }
	
.LOOP $label$36:
	$1 = ($1 + [-24])
	$5 = *($1)
	*($1) = [0]
	if ( ($5 == 0) ){ goto $label$37 }
	$9 = *($5 + [32])
	if ( ($9 == 0) ){ goto $label$38 }
	*(($5 + [36])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$38
	CALL _ZdlPv($5)
	
.LABEL $label$37
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$36 }
	$1 = *(($3 + [360]))
	goto $label$34 
	
.LABEL $label$35
	$1 = $11
	
.LABEL $label$34
	*($0) = $11
	CALL _ZdlPv($1)
	
.LABEL $label$33
	$global$0 = ($3 + [496])
}

void .FUNC $55 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$4 = ($global$0 - [144])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [36]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10567])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10613])
	
.LABEL $label$2
	$6 = *($1)
	$8 = *(($1 + [28]))
	$7 = *($1 + [24])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$4 }
	$9 = (($5 + [96]) | [1])
	$10 = [0]
	
.LOOP $label$5:
	$11 = ($7 + [24])
	CALL __multi3(($5 + [80]), *($7 + [16]), *($11), (int_64)100, (int_64)0)
	CALL __udivti3(($5 + [64]), *($5 + [80]), *((($5 + [80]) + [8])), (int_64)100, (int_64)0)
	CALL __udivti3(($5 + [48]), *($5 + [64]), *((($5 + [64]) + [8])), *($7 + [32]), (int_64)0)
	$12 = *($7)
	$13 = *($5 + [48])
	if ( (uint_64)(((int_64)$13 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$6 }
	CALL eosio_assert([0], [9813])
	
.LABEL $label$6
	$14 = (uint_64)$12 >> (uint_64)(int_64)8)
	$15 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$16 = (uint_64)$14 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$14 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$14 = $16
	$17 = $15
	$15 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[6]) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$13
	$14 = $16
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$14 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8)
	$17 = ((int_32)$15 < (int_32)[6])
	$18 = ($15 + [1])
	$15 = $18
	if ( $17 ){ goto $label$14 }
	$15 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[6]) ){ goto $label$11 }
	
.LABEL $label$12
	if ( ((int_64)($13 == 0) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL eosio_assert([0], [9862])
	if ( (int_64)($13 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	*($5 + [128]) = [8511]
	*($5 + [132]) = CALL $158([8511])
	*($5 + [40]) = *($5 + [128])
	CALL $4(($5 + [136]), ($5 + [40]))
	*(($18 = (($5 + [112]) + [8]))) = $12
	$14 = *(*($3))
	*(($10 = (($5 + [96]) + [8]))) = [0]
	*($5 + [112]) = $13
	*($5 + [96]) = (int_64)0
	$15 = CALL $158([10997])
	if ( ((uint_32)$15 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$15 >= (uint_32)[11]) ){ goto $label$18 }
	*($5 + [96]) = ($15 << [1])
	$17 = $9
	if ( $15 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$19 = (($15 + [16]) & [-16])
	$17 = CALL _Znwj($19)
	*($10) = $17
	*($5 + [96]) = ($19 | [1])
	*($5 + [100]) = $15
	
.LABEL $label$17
	CALL memcpy($17, [10997], $15)
	
.LABEL $label$16
	*(($17 + $15)) = [0]
	$16 = CALL $2($12)
	*((($5 + [24]) + [8])) = *($18)
	*($5 + [24]) = *($5 + [112])
	CALL $109(*($5 + [136]), $14, ($5 + [24]), ($5 + [96]), $16)
	if ( ((*($5 + [96]) & [1]) == 0) ){ goto $label$19 }
	CALL _ZdlPv(*($10))
	
.LABEL $label$19
	CALL eosio_assert(((int_64)*($7) == (int_64)$12), [8192])
	CALL __multi3(($5 + [8]), *(($7 + [32])), (int_64)0, $13, (int_64)$13 >> (int_64)63))
	$16 = *((($5 + [8]) + [8]))
	$12 = *($11)
	$14 = *($5 + [8])
	$15 = ($7 + [16])
	CALL eosio_assert(( ((uint_64)*($15) >= (uint_64)$14) ? ((uint_64)$12 >= (uint_64)$16) : ((int_64)$12 == (int_64)$16) ), [8221])
	$12 = *($15)
	*($15) = (int_64))($12 - $14)
	*($11) = (int_64))((int_64))(*($11) - $16) - (CASTING uint_64)(uint_32 (uint_64)($12 <= $14)))
	$10 = [1]
	$7 = ($7 + [48])
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$5 }
	goto $label$7 
	
.LABEL $label$15
	CALL $143(($5 + [96]))
	
.LABEL $label$8
	$7 = ($7 + [48])
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$5 }
	
.LABEL $label$7
	if ( ($10 & [1]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [11045])
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$20 }
	CALL eosio_assert([0], [10664])
	
.LABEL $label$20
	$18 = *($1 + [24])
	$17 = *(($1 + [28]))
	$7 = ($17 - $18)
	$14 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[48]))
	$15 = [60]
	
.LOOP $label$21:
	$15 = ($15 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$21 }
	if ( ((int_32)$18 == (int_32)$17) ){ goto $label$25 }
	$17 = (((int_32)((uint_32)($7 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $15)
	if ( ($17 <= [513]) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$17 = ($15 + [-36])
	if ( ((uint_32)$17 >= (uint_32)[513]) ){ goto $label$23 }
	
.LABEL $label$24
	$15 = ($4 - (($17 + [15]) & [-16]))
	$global$0 = $15
	goto $label$22 
	
.LABEL $label$23
	$15 = CALL $161($17)
	
.LABEL $label$22
	*($5 + [116]) = $15
	*($5 + [112]) = $15
	*($5 + [120]) = ($15 + $17)
	CALL $119(($5 + [112]), $1)
	CALL db_update_i64(*($1 + [40]), $2, $15, $17)
	if ( ((uint_32)$17 >= (uint_32)[513]) ){ goto $label$28 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	CALL $164($15)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$26 }
	
.LABEL $label$27
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [144])
	return 
	
.LABEL $label$26
	$global$0 = ($5 + [144])
	(unreachable)
}

void .FUNC $107 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10567])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10613])
	
.LABEL $label$2
	$3 = *($3)
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$3 }
	CALL $63($1, *($3), *($3 + [4]))
	
.LABEL $label$3
	*($1 + [16]) = *($3 + [16])
	*(($1 + [24])) = *(($3 + [24]))
	$6 = ($1 + [16])
	$8 = *($1)
	$7 = *($1 + [4])
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [4]))
	$3 = [0]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$5 }
	$3 = (($9 & [-16]) + $3)
	
.LABEL $label$5
	$7 = ($3 + [12])
	if ( ($7 <= [513]) ){ goto $label$7 }
	$3 = CALL $161($7)
	goto $label$6 
	
.LABEL $label$7
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$6
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $7)
	$8 = *($4 + [4])
	$4 = CALL $128($5, $1)
	if ( ((int_32)(*($4 + [8]) - $8) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10392])
	$8 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($8, $6, [8])
	$6 = (*($8) + [8])
	*(($8 = ($4 + [4]))) = $6
	$9 = ($1 + [24])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [10392])
	$6 = *($8)
	
.LABEL $label$9
	CALL memcpy($6, $9, [4])
	*($8) = (*($8) + [4])
	CALL db_update_i64(*(($1 + [36])), $2, $3, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)(int_64)-8524869779563368672) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $164($3)
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-8524869779563368672) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = (int_64)-8524869779563368671
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [16])
}

int_32 .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $113($0, $1)
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $104($0, $6)
	$6 = ($6 + [40])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [40])) - *($1 + [36])) / (int_32)[40]))
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [10392])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$6 = *(($1 + [40]))
	$4 = *(($1 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $104($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = CALL $114($0, ($1 + [48]))
	$global$0 = ($2 + [16])
	return $4
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$3 = ($global$0 - [608])
	$global$0 = $3
	if ( ((int_64)*($1) == (int_64)4298345121774150816) ){ goto $label$1 }
	CALL eosio_assert([0], [9612])
	
.LABEL $label$1
	$4 = *($1 + [8])
	if ( ((int_64)$4 == (int_64)-2616700122498420864) ){ goto $label$2 }
	CALL eosio_assert([0], [9646])
	
.LABEL $label$2
	$5 = *($1 + [16])
	CALL require_auth((int_64)4298345121781781872)
	*($3 + [560]) = [8511]
	*($3 + [564]) = CALL $158([8511])
	*($3 + [112]) = *($3 + [560])
	$6 = CALL $4(($3 + [568]), ($3 + [112]))
	*($3 + [544]) = [9517]
	*($3 + [548]) = CALL $158([9517])
	*($3 + [104]) = *($3 + [544])
	$7 = CALL $4(($3 + [552]), ($3 + [104]))
	*($3 + [528]) = [8511]
	$8 = *($7)
	$9 = *($6)
	*($3 + [532]) = CALL $158([8511])
	*($3 + [96]) = *($3 + [528])
	$6 = CALL $4(($3 + [536]), ($3 + [96]))
	*($3 + [512]) = [9674]
	*($3 + [516]) = CALL $158([9674])
	*($3 + [88]) = *($3 + [512])
	$7 = CALL $4(($3 + [520]), ($3 + [88]))
	*(($10 = (($3 + [304]) + [24]))) = [0]
	*((($3 + [472]) + [16])) = *(($2 + [8]))
	*($3 + [472]) = $4
	*($3 + [320]) = (int_64)0
	*($3 + [480]) = *($2)
	*($3 + [304]) = *($6)
	*($3 + [312]) = *($7)
	*(($6 = CALL _Znwj([16]))) = $9
	*($6 + [8]) = $8
	*(($3 + [340])) = [0]
	$7 = ($6 + [16])
	*($10) = $7
	*(($3 + [324])) = $7
	*($3 + [320]) = $6
	*($3 + [332 align=4]) = (int_64)0
	CALL $60(($3 + [332]), [24])
	$10 = ($3 + [336])
	$6 = *($10)
	$7 = *($3 + [332])
	*($3 + [420]) = $7
	*($3 + [416]) = $7
	*($3 + [424]) = $6
	*($3 + [152]) = ($3 + [416])
	*($3 + [256]) = ($3 + [472])
	CALL $85(($3 + [256]), ($3 + [152]))
	CALL $69(($3 + [304]))
	$6 = *($3 + [332])
	if ( ($6 == 0) ){ goto $label$3 }
	*($10) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$3
	$6 = *($3 + [320])
	if ( ($6 == 0) ){ goto $label$4 }
	*(($3 + [324])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$4
	*($3 + [456]) = [8511]
	*($3 + [460]) = CALL $158([8511])
	*($3 + [80]) = *($3 + [456])
	$7 = CALL $4(($3 + [464]), ($3 + [80]))
	$6 = [0]
	*((($3 + [472]) + [32])) = [0]
	*($3 + [488]) = (int_64)-1
	$8 = (int_64)0
	*($3 + [496]) = (int_64)0
	$9 = *($7)
	*($3 + [472]) = $9
	*($3 + [480]) = $4
	$7 = [0]
	$10 = CALL db_find_i64($9, $4, (int_64)-2453462778758506688, $5)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $67(($3 + [472]), $10)
	if ( ((int_32)*($7 + [44]) == (int_32)($3 + [472])) ){ goto $label$5 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$5
	*($3 + [400]) = [8511]
	*($3 + [404]) = CALL $158([8511])
	*($3 + [72]) = *($3 + [400])
	$10 = CALL $4(($3 + [408]), ($3 + [72]))
	*((($3 + [416]) + [32])) = [0]
	*($3 + [432]) = (int_64)-1
	*($3 + [440]) = (int_64)0
	$9 = *($10)
	*($3 + [416]) = $9
	*($3 + [424]) = $4
	$10 = CALL db_find_i64($9, $4, (int_64)-3102536757353119744, $5)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$6 }
	$6 = CALL $49(($3 + [416]), $10)
	if ( ((int_32)*($6 + [24]) == (int_32)($3 + [416])) ){ goto $label$7 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$7
	$8 = *($6 + [8])
	
.LABEL $label$6
	if ( $7 ){ goto $label$8 }
	CALL eosio_assert([0], [9035])
	
.LABEL $label$8
	if ( ((int_64)*($7 + [16]) >= (int_64)((int_64)*($2) + (int_64)$8)) ){ goto $label$9 }
	CALL eosio_assert([0], [9682])
	
.LABEL $label$9
	if ( ($6 == 0) ){ goto $label$11 }
	*($3 + [368]) = [8511]
	*($3 + [372]) = CALL $158([8511])
	*($3 + [64]) = *($3 + [368])
	$7 = CALL $4(($3 + [376]), ($3 + [64]))
	*($3 + [304]) = $2
	CALL $91(($3 + [416]), $6, *($7), ($3 + [304]))
	goto $label$10 
	
.LABEL $label$11
	*($3 + [384]) = [8511]
	*($3 + [388]) = CALL $158([8511])
	*($3 + [56]) = *($3 + [384])
	$8 = *(CALL $4(($3 + [392]), ($3 + [56])))
	if ( ((int_64)*($3 + [416]) == (int_64)CALL current_receiver()) ){ goto $label$12 }
	CALL eosio_assert([0], [10481])
	
.LABEL $label$12
	*(($6 = CALL _Znwj([40])) + [24]) = ($3 + [416])
	*($6) = $5
	*($6 + [8]) = *($2)
	*(($6 + [16])) = *(($2 + [8]))
	*($3 + [264]) = (($3 + [304]) + [24])
	*($3 + [260]) = ($3 + [304])
	*($3 + [256]) = ($3 + [304])
	CALL $52(($3 + [256]), $6)
	$4 = *($6)
	$10 = CALL db_store_i64(*((($3 + [416]) + [8])), (int_64)-3102536757353119744, $8, $4, ($3 + [304]), [24])
	*($6 + [28]) = $10
	$7 = (($3 + [416]) + [16])
	if ( (uint_64)($4 <= *($7)) ){ goto $label$13 }
	*($7) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*($3 + [256]) = $6
	$4 = *($6)
	*($3 + [304]) = $4
	*($3 + [152]) = $10
	$11 = ($3 + [444])
	$7 = *($11)
	if ( ((uint_32)$7 >= (uint_32)*(($3 + [448]))) ){ goto $label$15 }
	*($7 + [8]) = $4
	*($7 + [16]) = $10
	*($3 + [256]) = [0]
	*($7) = $6
	*($11) = ($7 + [24])
	$6 = *($3 + [256])
	*($3 + [256]) = [0]
	if ( $6 ){ goto $label$14 }
	goto $label$10 
	
.LABEL $label$15
	CALL $53(($3 + [440]), ($3 + [256]), ($3 + [304]), ($3 + [152]))
	$6 = *($3 + [256])
	*($3 + [256]) = [0]
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$14
	CALL _ZdlPv($6)
	
.LABEL $label$10
	$4 = CALL current_time()
	*((($3 + [304]) + [28])) = (int_64)0
	*(($6 = ($3 + [348]))) = (int_64)0
	*(($3 + [356])) = (int_64)0
	*($3 + [316]) = [0]
	*($3 + [320]) = [0]
	*($3 + [324 align=4]) = (int_64)0
	*($3 + [340 align=4]) = (int_64)0
	*($3 + [304]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($3 + [240]) = [8511]
	*($3 + [244]) = CALL $158([8511])
	*($3 + [48]) = *($3 + [240])
	$7 = CALL $4(($3 + [248]), ($3 + [48]))
	*($3 + [224]) = [9517]
	*($3 + [228]) = CALL $158([9517])
	*($3 + [40]) = *($3 + [224])
	$10 = CALL $4(($3 + [232]), ($3 + [40]))
	*($3 + [208]) = [8511]
	$4 = *($10)
	$8 = *($7)
	*($3 + [212]) = CALL $158([8511])
	*($3 + [32]) = *($3 + [208])
	$7 = CALL $4(($3 + [216]), ($3 + [32]))
	*($3 + [192]) = [9741]
	*($3 + [196]) = CALL $158([9741])
	*($3 + [24]) = *($3 + [192])
	$10 = CALL $4(($3 + [200]), ($3 + [24]))
	*((($3 + [152]) + [16])) = *(($1 + [16]))
	*((($3 + [152]) + [8])) = *(($1 + [8]))
	*((($3 + [152]) + [32])) = *(($2 + [8]))
	*($3 + [152]) = *($1)
	*($3 + [176]) = *($2)
	*($3 + [256]) = *($7)
	*($3 + [264]) = *($10)
	*(($2 = CALL _Znwj([16]))) = $8
	*($2 + [8]) = $4
	*(($1 = (($3 + [256]) + [36]))) = [0]
	$10 = ($2 + [16])
	*(($7 = (($3 + [256]) + [24]))) = $10
	*(($11 = (($3 + [256]) + [20]))) = $10
	*($3 + [272]) = $2
	*($3 + [284 align=4]) = (int_64)0
	$10 = (($3 + [256]) + [28])
	CALL $60($10, [40])
	$12 = (($3 + [256]) + [32])
	$2 = *($12)
	$13 = *($3 + [284])
	*($3 + [580]) = $13
	*($3 + [576]) = $13
	*($3 + [584]) = $2
	*($3 + [592]) = ($3 + [576])
	*($3 + [600]) = ($3 + [152])
	CALL $92(($3 + [600]), ($3 + [592]))
	$13 = (($3 + [304]) + [40])
	$2 = *($13)
	if ( ((uint_32)$2 >= (uint_32)*($6)) ){ goto $label$18 }
	*($2) = *($3 + [256])
	*($2 + [16]) = [0]
	*(($2 + [8])) = *((($3 + [256]) + [8]))
	*(($6 = ($2 + [20]))) = (int_64)0
	$14 = (($3 + [256]) + [16])
	*($2 + [16]) = *($14)
	*($6) = *($11)
	*(($2 + [24])) = *($7)
	*($7) = [0]
	*($2 + [28 align=4]) = (int_64)0
	*($11) = [0]
	*($14) = [0]
	*(($6 = ($2 + [36]))) = [0]
	*($2 + [28]) = *($10)
	*(($2 + [32])) = *($12)
	*($6) = *($1)
	*($12) = [0]
	*($10) = [0]
	*($1) = [0]
	*($13) = (*($13) + [40])
	$2 = *($3 + [272])
	if ( $2 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $62((($3 + [304]) + [36]), ($3 + [256]))
	$2 = *($3 + [284])
	if ( ($2 == 0) ){ goto $label$19 }
	*(($3 + [288])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$19
	$2 = *($3 + [272])
	if ( ($2 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	*(($3 + [276])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$16
	*(($3 + [324])) = [86400]
	*($3 + [144]) = [8511]
	*($3 + [148]) = CALL $158([8511])
	*($3 + [16]) = *($3 + [144])
	CALL $4(($3 + [256]), ($3 + [16]))
	*($3 + [136]) = [9754]
	*($3 + [140]) = CALL $158([9754])
	*($3 + [8]) = *($3 + [136])
	CALL $4(($3 + [152]), ($3 + [8]))
	$4 = CALL current_time()
	*($3 + [264]) = (int_64)0
	$4 = ((int_64)((int_64)$5 + (int_64)((int_64)((uint_64)$4 / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)7924514158523691904)
	*($3 + [256]) = $4
	CALL cancel_deferred(($3 + [256]))
	*($3 + [264]) = (int_64)0
	*($3 + [256]) = $4
	*($3 + [120]) = [8511]
	*($3 + [124]) = CALL $158([8511])
	*($3) = *($3 + [120])
	CALL $65(($3 + [304]), ($3 + [256]), *(CALL $4(($3 + [128]), $3)), [0])
	CALL $66(($3 + [304]))
	$6 = *($3 + [440])
	if ( ($6 == 0) ){ goto $label$20 }
	$7 = ($3 + [444])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$22 }
	
.LOOP $label$23:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$24 }
	CALL _ZdlPv($1)
	
.LABEL $label$24
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$23 }
	$2 = *(($3 + [440]))
	goto $label$21 
	
.LABEL $label$22
	$2 = $6
	
.LABEL $label$21
	*($7) = $6
	CALL _ZdlPv($2)
	
.LABEL $label$20
	$7 = *($3 + [496])
	if ( ($7 == 0) ){ goto $label$25 }
	$10 = ($3 + [500])
	$2 = *($10)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$27 }
	
.LOOP $label$28:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$29 }
	$6 = *($1 + [32])
	if ( ($6 == 0) ){ goto $label$30 }
	*(($1 + [36])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$30
	CALL _ZdlPv($1)
	
.LABEL $label$29
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$28 }
	$2 = *(($3 + [496]))
	goto $label$26 
	
.LABEL $label$27
	$2 = $7
	
.LABEL $label$26
	*($10) = $7
	CALL _ZdlPv($2)
	
.LABEL $label$25
	$global$0 = ($3 + [608])
}

int_32 .FUNC $20 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [528])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $161($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [400]))) = (int_64)0
	*($4 + [376]) = (int_64)0
	*($4 + [368]) = (int_64)0
	*($4 + [384]) = (int_64)0
	*($4 + [392]) = (int_64)0
	*($4 + [356]) = $2
	*($4 + [352]) = $2
	*($4 + [360]) = ($2 + $7)
	*($4 + [504]) = ($4 + [352])
	*($4 + [80]) = ($4 + [368])
	CALL $86(($4 + [80]), ($4 + [504]))
	$8 = *($4 + [360])
	*((($4 + [64]) + [8])) = $8
	*((($4 + [48]) + [8])) = $8
	$9 = *($4 + [352])
	*($4 + [48]) = $9
	*($4 + [64]) = $9
	$8 = CALL $10(($4 + [80]), $0, $1, ($4 + [48]))
	*(($10 = (($4 + [424]) + [16]))) = *($4 + [384])
	*(($11 = (($4 + [424]) + [8]))) = *($4 + [376])
	*(($12 = (($4 + [408]) + [8]))) = *($3)
	*($4 + [424]) = *($4 + [368])
	*($4 + [408]) = *($4 + [392])
	*((($4 + [472]) + [8])) = *($12)
	*((($4 + [448]) + [8])) = *($11)
	*((($4 + [448]) + [16])) = *($10)
	*($4 + [472]) = *($4 + [408])
	*($4 + [448]) = *($4 + [424])
	$3 = (($4 + [80]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$0 = *((($4 + [448]) + [16]))
	*((($4 + [504]) + [16])) = $0
	$1 = *((($4 + [448]) + [8]))
	*((($4 + [504]) + [8])) = $1
	$9 = *((($4 + [472]) + [8]))
	*((($4 + [488]) + [8])) = $9
	*((($4 + [24]) + [8])) = $1
	*((($4 + [24]) + [16])) = $0
	*((($4 + [8]) + [8])) = $9
	$0 = *($4 + [448])
	*($4 + [504]) = $0
	$1 = *($4 + [472])
	*($4 + [488]) = $1
	*($4 + [24]) = $0
	*($4 + [8]) = $1
	CALL void $3((int_32 ($4 + [24])), (int_32 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $164($2)
	
.LABEL $label$6
	CALL $11($8)
	$global$0 = ($4 + [528])
	return [1]
}

int_32 .FUNC $23 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [416])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $161($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [360]))) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [332]) = $2
	*($4 + [328]) = $2
	*($4 + [336]) = ($2 + $7)
	*($4 + [400]) = ($4 + [328])
	*($4 + [56]) = ($4 + [344])
	CALL $36(($4 + [56]), ($4 + [400]))
	$8 = *($4 + [336])
	*((($4 + [40]) + [8])) = $8
	*((($4 + [24]) + [8])) = $8
	$9 = *($4 + [328])
	*($4 + [24]) = $9
	*($4 + [40]) = $9
	$8 = CALL $10(($4 + [56]), $0, $1, ($4 + [24]))
	*(($10 = (($4 + [368]) + [8]))) = *($3)
	*($4 + [368]) = *($4 + [352])
	$0 = *($4 + [344])
	*((($4 + [384]) + [8])) = *($10)
	*($4 + [384]) = *($4 + [368])
	$3 = (($4 + [56]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$1 = *((($4 + [384]) + [8]))
	*((($4 + [400]) + [8])) = $1
	*((($4 + [8]) + [8])) = $1
	$1 = *($4 + [384])
	*($4 + [8]) = $1
	*($4 + [400]) = $1
	CALL void $3((int_32 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $164($2)
	
.LABEL $label$6
	CALL $11($8)
	$global$0 = ($4 + [416])
	return [1]
}

void .FUNC $22 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [368])
	$global$0 = $3
	*($3 + [336]) = $1
	if ( CALL has_auth($1) ){ goto $label$1 }
	*($3 + [320]) = [8511]
	*($3 + [324]) = CALL $158([8511])
	*($3 + [72]) = *($3 + [320])
	if ( CALL has_auth(*(CALL $4(($3 + [328]), ($3 + [72])))) ){ goto $label$1 }
	CALL eosio_assert([0], [8524])
	
.LABEL $label$1
	if ( ((int_64)*($2 + [8]) == (int_64)87167674696196) ){ goto $label$2 }
	CALL eosio_assert([0], [8541])
	
.LABEL $label$2
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$3 }
	CALL eosio_assert([0], [8595])
	
.LABEL $label$3
	$4 = ($0 + [112])
	$1 = *($3 + [336])
	$6 = *(($0 + [140]))
	$5 = *(($0 + [136]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$10:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$9 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$8 }
	if ( ((int_32)*($8 + [36]) == (int_32)$4) ){ goto $label$11 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$11
	*((($3 + [304]) + [8])) = *(($2 + [8]))
	*($3 + [304]) = *($2)
	if ( $8 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$8
	$7 = CALL db_find_i64(*($4), *(($0 + [120])), (int_64)-4157661132521209856, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$6 }
	$8 = CALL $37($4, $7)
	if ( ((int_32)*($8 + [36]) == (int_32)$4) ){ goto $label$12 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$12
	*((($3 + [304]) + [8])) = *(($2 + [8]))
	*($3 + [304]) = *($2)
	
.LABEL $label$7
	if ( ((int_64)*(($8 + [16])) == (int_64)*($3 + [312])) ){ goto $label$13 }
	CALL eosio_assert([0], [10162])
	
.LABEL $label$13
	$1 = ((int_64)*($3 + [304]) + (int_64)*($8 + [8]))
	*($3 + [304]) = $1
	if ( ((int_64)$1 > (int_64)-4611686018427387904) ){ goto $label$14 }
	CALL eosio_assert([0], [10205])
	$1 = *($3 + [304])
	
.LABEL $label$14
	if ( ((int_64)$1 < (int_64)4611686018427387904) ){ goto $label$15 }
	CALL eosio_assert([0], [10224])
	
.LABEL $label$15
	*($3 + [272]) = [8511]
	*($3 + [276]) = CALL $158([8511])
	*($3 + [64]) = *($3 + [272])
	$7 = CALL $4(($3 + [280]), ($3 + [64]))
	*($3 + [224]) = ($3 + [304])
	CALL $38($4, $8, *($7), ($3 + [224]))
	goto $label$4 
	
.LABEL $label$6
	*((($3 + [304]) + [8])) = *(($2 + [8]))
	*($3 + [304]) = *($2)
	
.LABEL $label$5
	*($3 + [288]) = [8511]
	*($3 + [292]) = CALL $158([8511])
	*($3 + [56]) = *($3 + [288])
	$7 = CALL $4(($3 + [296]), ($3 + [56]))
	*($3 + [364]) = $2
	*($3 + [360]) = ($3 + [336])
	*($3 + [160]) = *($7)
	if ( ((int_64)*($4) == (int_64)CALL current_receiver()) ){ goto $label$16 }
	CALL eosio_assert([0], [10481])
	
.LABEL $label$16
	*($3 + [224]) = $4
	*($3 + [228]) = ($3 + [360])
	*($3 + [232]) = ($3 + [160])
	*(($7 = CALL _Znwj([48])) + [8]) = (int_64)0
	*($7) = (int_64)0
	*($7 + [16]) = (int_64)0
	*($7 + [24 align=4]) = (int_64)0
	*($7 + [32]) = [0]
	*($7 + [36]) = $4
	CALL $39(($3 + [224]), $7)
	*($3 + [352]) = $7
	$1 = *($7)
	*($3 + [224]) = $1
	$8 = *($7 + [40])
	*($3 + [348]) = $8
	$5 = ($0 + [140])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [144]))) ){ goto $label$18 }
	*($6 + [8]) = $1
	*($6 + [16]) = $8
	*($3 + [352]) = [0]
	*($6) = $7
	*($5) = ($6 + [24])
	$7 = *($3 + [352])
	*($3 + [352]) = [0]
	if ( ($7 == 0) ){ goto $label$4 }
	goto $label$17 
	
.LABEL $label$18
	CALL $40(($0 + [136]), ($3 + [352]), ($3 + [224]), ($3 + [348]))
	$7 = *($3 + [352])
	*($3 + [352]) = [0]
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$17
	$6 = *($7 + [24])
	if ( ($6 == 0) ){ goto $label$19 }
	*(($7 + [28])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$19
	CALL _ZdlPv($7)
	
.LABEL $label$4
	*($3 + [208]) = [8511]
	*($3 + [212]) = CALL $158([8511])
	*($3 + [48]) = *($3 + [208])
	$7 = CALL $4(($3 + [216]), ($3 + [48]))
	$6 = CALL $41(($3 + [160]))
	$8 = ($0 + [32])
	CALL $42(($3 + [224]), $8, *($7), $6)
	if ( (*($3 + [248]) == 0) ){ goto $label$20 }
	CALL eosio_assert([0], [8620])
	
.LABEL $label$20
	if ( ((int_64)*(($2 + [8])) == (int_64)*(($3 + [240]))) ){ goto $label$21 }
	CALL eosio_assert([0], [10162])
	
.LABEL $label$21
	$1 = ((int_64)*($3 + [232]) + (int_64)*($2))
	*($3 + [232]) = $1
	if ( ((int_64)$1 > (int_64)-4611686018427387904) ){ goto $label$22 }
	CALL eosio_assert([0], [10205])
	$1 = *(($3 + [232]))
	
.LABEL $label$22
	if ( ((int_64)$1 < (int_64)4611686018427387904) ){ goto $label$23 }
	CALL eosio_assert([0], [10224])
	
.LABEL $label$23
	$7 = CALL $43($0, *($3 + [336]))
	if ( ((int_32)$7 == (int_32)[-1]) ){ goto $label$25 }
	$1 = (CASTING int_64)(int_32 $7)
	goto $label$24 
	
.LABEL $label$25
	*($3 + [144]) = [8699]
	*($3 + [148]) = CALL $158([8699])
	*($3 + [40]) = *($3 + [144])
	$7 = CALL $43($0, *(CALL $4(($3 + [152]), ($3 + [40]))))
	if ( ((int_64)*(($2 + [8])) == (int_64)*(($3 + [264]))) ){ goto $label$26 }
	CALL eosio_assert([0], [10162])
	
.LABEL $label$26
	$1 = ((int_64)*($3 + [256]) + (int_64)*($2))
	*($3 + [256]) = $1
	if ( ((int_64)$1 <= (int_64)-4611686018427387904) ){ goto $label$31 }
	if ( ((int_64)$1 >= (int_64)4611686018427387904) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	CALL eosio_assert([0], [10205])
	if ( ((int_64)*(($3 + [256])) < (int_64)4611686018427387904) ){ goto $label$29 }
	
.LABEL $label$30
	CALL eosio_assert([0], [10224])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	if ( ((int_32)$7 == (int_32)[-1]) ){ goto $label$27 }
	
.LABEL $label$28
	$1 = (CASTING int_64)(int_32 $7)
	goto $label$24 
	
.LABEL $label$27
	*($3 + [128]) = [8511]
	*($3 + [132]) = CALL $158([8511])
	*($3 + [32]) = *($3 + [128])
	$6 = ($0 + [152])
	$9 = *(CALL $4(($3 + [136]), ($3 + [32])))
	if ( ((int_64)*($0 + [152]) == (int_64)CALL current_receiver()) ){ goto $label$32 }
	CALL eosio_assert([0], [10481])
	
.LABEL $label$32
	*(($7 = CALL _Znwj([32])) + [16]) = $6
	*($3 + [360]) = [8699]
	*($3 + [364]) = CALL $158([8699])
	*($3 + [24]) = *($3 + [360])
	*($7) = *(CALL $4(($3 + [160]), ($3 + [24])))
	*($7 + [8]) = (int_64)1000
	CALL memcpy(($3 + [160]), $7, [8])
	CALL memcpy((($3 + [160]) | [8]), ($7 + [8]), [8])
	$1 = *($7)
	$5 = CALL db_store_i64(*(($0 + [160])), (int_64)-3020374815346262016, $9, $1, ($3 + [160]), [16])
	*($7 + [20]) = $5
	$6 = ($0 + [168])
	if ( (uint_64)($1 <= *($6)) ){ goto $label$33 }
	*($6) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$33
	*($3 + [360]) = $7
	$1 = *($7)
	*($3 + [160]) = $1
	*($3 + [352]) = $5
	$4 = ($0 + [180])
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [184]))) ){ goto $label$36 }
	*($6 + [8]) = $1
	*($6 + [16]) = $5
	*($3 + [360]) = [0]
	*($6) = $7
	*($4) = ($6 + [24])
	$7 = *($3 + [360])
	*($3 + [360]) = [0]
	if ( $7 ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	CALL $44(($0 + [176]), ($3 + [360]), ($3 + [160]), ($3 + [352]))
	$7 = *($3 + [360])
	*($3 + [360]) = [0]
	if ( ($7 == 0) ){ goto $label$34 }
	
.LABEL $label$35
	CALL _ZdlPv($7)
	
.LABEL $label$34
	if ( ((int_64)*(($2 + [8])) == (int_64)*(($3 + [264]))) ){ goto $label$37 }
	CALL eosio_assert([0], [10162])
	
.LABEL $label$37
	$9 = ((int_64)*($7) + (int_64)*($2))
	*(($7 = ($3 + [256]))) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$38 }
	CALL eosio_assert([0], [10205])
	$9 = *($7)
	
.LABEL $label$38
	$1 = (int_64)1000
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$24 }
	CALL eosio_assert([0], [10224])
	
.LABEL $label$24
	*($3 + [112]) = [8511]
	*($3 + [116]) = CALL $158([8511])
	*($3 + [16]) = *($3 + [112])
	$7 = CALL has_auth(*(CALL $4(($3 + [120]), ($3 + [16]))))
	if ( (uint_64)(*(($3 + [232])) <= (int_64)10000000000) ){ goto $label$39 }
	if ( $7 ){ goto $label$39 }
	if ( ((uint_64)((int_64)$1 * (int_64)1000) >= (uint_64)((int_64)((int_64)*($3 + [304]) * (int_64)10000000) / (int_64)*($3 + [256]))) ){ goto $label$39 }
	*($3 + [360]) = ((uint_64)$1 / (uint_64)(int_64)100)
	CALL $45(($3 + [160]), [8711], ($3 + [360]), [8744])
	if ( (*($3 + [160]) & [1]) ){ goto $label$41 }
	$7 = (($3 + [160]) | [1])
	goto $label$40 
	
.LABEL $label$41
	$7 = *($3 + [168])
	CALL _ZdlPv($7)
	
.LABEL $label$40
	CALL eosio_assert([0], $7)
	
.LABEL $label$39
	*($3 + [96]) = [8511]
	*($3 + [100]) = CALL $158([8511])
	*($3 + [8]) = *($3 + [96])
	CALL $46($8, ($3 + [224]), *(CALL $4(($3 + [104]), ($3 + [8]))))
	CALL prints([8746])
	*($3 + [80]) = [8748]
	*($3 + [84]) = CALL $158([8748])
	*($3) = *($3 + [80])
	$6 = CALL $4(($3 + [88]), $3)
	$7 = [0]
	*(($3 + [192])) = [0]
	*($3 + [176]) = (int_64)-1
	$1 = *($6)
	*($3 + [160]) = $1
	$9 = *($3 + [336])
	*($3 + [168]) = $9
	*($3 + [184]) = (int_64)0
	$6 = CALL db_lowerbound_i64($1, $9, (int_64)3607749779137757184, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$44 }
	$1 = (int_64)87167674696196
	$7 = CALL $47(($3 + [160]), $6)
	if ( ((int_64)*($7 + [8]) == (int_64)87167674696196) ){ goto $label$42 }
	goto $label$43 
	
.LABEL $label$44
	CALL eosio_assert([0], [8761])
	$1 = (int_64)87167674696196
	if ( ((int_64)*([0] + [8]) == (int_64)87167674696196) ){ goto $label$42 }
	
.LABEL $label$43
	CALL eosio_assert([0], [8802])
	$1 = *(($7 + [8]))
	
.LABEL $label$42
	if ( ((int_64)$1 != (int_64)*($3 + [312])) ){ goto $label$49 }
	if ( ((int_64)*($7) < (int_64)*($3 + [304])) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$49
	CALL eosio_assert([0], [10242])
	if ( ((int_64)*($7) >= (int_64)*($3 + [304])) ){ goto $label$47 }
	
.LABEL $label$48
	CALL eosio_assert([0], [8845])
	$8 = *($3 + [184])
	if ( ($8 == 0) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$47
	$8 = *($3 + [184])
	if ( $8 ){ goto $label$45 }
	
.LABEL $label$46
	$global$0 = ($3 + [368])
	return 
	
.LABEL $label$45
	$5 = ($3 + [188])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$51 }
	
.LOOP $label$52:
	$7 = ($7 + [-24])
	$6 = *($7)
	*($7) = [0]
	if ( ($6 == 0) ){ goto $label$53 }
	CALL _ZdlPv($6)
	
.LABEL $label$53
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$52 }
	$7 = *(($3 + [184]))
	goto $label$50 
	
.LABEL $label$51
	$7 = $8
	
.LABEL $label$50
	*($5) = $8
	CALL _ZdlPv($7)
	$global$0 = ($3 + [368])
}

int_32 .FUNC $25 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [384])
	$global$0 = $3
	*(($4 = $3) + [376]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $161($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*($4 + [344]) = [0]
	*($4 + [336]) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [368]) = [0]
	*($4 + [324]) = $2
	*($4 + [320]) = $2
	*($4 + [328]) = ($2 + $5)
	*($4 + [24]) = ($4 + [320])
	*($4 + [48]) = ($4 + [336])
	CALL $93(($4 + [48]), ($4 + [24]))
	$3 = *($4 + [328])
	*((($4 + [32]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$6 = *($4 + [320])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$3 = CALL $10(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $3
	*($4 + [28]) = ($4 + [376])
	CALL $94(($4 + [24]), ($4 + [336]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $164($2)
	
.LABEL $label$4
	CALL $11($3)
	$2 = *($4 + [336])
	if ( ($2 == 0) ){ goto $label$5 }
	*($4 + [340]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$5
	$global$0 = ($4 + [384])
	return [1]
}

void .FUNC $24 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	$5 = ($global$0 - [512])
	$global$0 = $5
	*($5 + [464]) = [8511]
	*($5 + [468]) = CALL $158([8511])
	*($5 + [120]) = *($5 + [464])
	CALL require_auth(*(CALL $4(($5 + [472]), ($5 + [120]))))
	*($5 + [408]) = [8511]
	*($5 + [412]) = CALL $158([8511])
	*($5 + [112]) = *($5 + [408])
	$6 = CALL $4(($5 + [416]), ($5 + [112]))
	*(($5 + [456])) = [0]
	*($5 + [432]) = $2
	*($5 + [440]) = (int_64)-1
	*($5 + [448]) = (int_64)0
	*($5 + [424]) = *($6)
	$7 = ($0 + [112])
	$9 = *(($0 + [140]))
	$8 = *(($0 + [136]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($9 + [-24])
	$10 = *($6)
	if ( ((int_64)*($10) == (int_64)$2) ){ goto $label$3 }
	$9 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$2 }
	if ( ((int_32)*($10 + [36]) == (int_32)$7) ){ goto $label$1 }
	CALL eosio_assert([0], [10407])
	goto $label$1 
	
.LABEL $label$2
	$10 = CALL $37($7, CALL $fimport$10(*($7), *(($0 + [120])), (int_64)-4157661132521209856, $2))
	if ( ((int_32)*($10 + [36]) == (int_32)$7) ){ goto $label$1 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$1
	$11 = *(($10 + [16]))
	$12 = *($10 + [8])
	$10 = *(($5 + [452]))
	$8 = *(($5 + [448]))
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$11 }
	
.LOOP $label$13:
	$9 = ($10 + [-24])
	$6 = *($9)
	if ( ((int_64)*($6 + [8]) == (int_64)$3) ){ goto $label$12 }
	$10 = $9
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$11 }
	if ( ((int_32)*($6 + [44]) == (int_32)($5 + [424])) ){ goto $label$14 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$14
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$6 = CALL db_find_i64(*($5 + [424]), *(($5 + [432])), (int_64)-2453462778758506688, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	$6 = CALL $67(($5 + [424]), $6)
	if ( ((int_32)*($6 + [44]) == (int_32)($5 + [424])) ){ goto $label$10 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$10
	$9 = [-1]
	$0 = ($5 + [352])
	$8 = ($5 + [336])
	
.LOOP $label$15:
	$9 = ($9 + [1])
	if ( ((uint_32)$9 >= (uint_32)$4) ){ goto $label$8 }
	if ( ((int_64)*($6) != (int_64)$2) ){ goto $label$17 }
	if ( ((int_64)*($6 + [16]) == (int_64)0) ){ goto $label$17 }
	*($5 + [320]) = (int_64)0
	$10 = ($6 + [24])
	$3 = CALL $2(*($10))
	$13 = *($10)
	*($5 + [320]) = $13
	$14 = *($6 + [16])
	CALL __multi3(($5 + [24]), $14, (int_64)$14 >> (int_64)63), (int_64)1000000000, (int_64)0)
	*($0) = [1000000000]
	*(($10 = (($5 + [320]) + [24]))) = *((($5 + [24]) + [8]))
	*($8) = *($5 + [24])
	*($5 + [328]) = $3
	CALL eosio_assert(((int_64)$13 == (int_64)$11), [8343])
	CALL __udivti3(($5 + [8]), *($8), *($10), $12, (int_64)$12 >> (int_64)63))
	*($10) = *((($5 + [8]) + [8]))
	*($8) = *($5 + [8])
	*($5 + [392]) = [8511]
	*($5 + [396]) = CALL $158([8511])
	*($5 + [40]) = *($5 + [392])
	CALL $4(($5 + [400]), ($5 + [40]))
	*($5 + [272]) = $1
	*($5 + [276]) = ($5 + [320])
	CALL $95(($5 + [424]), $6, *($5 + [400]), ($5 + [272]))
	$10 = *($6 + [48])
	$6 = [0]
	$10 = CALL db_next_i64($10, ($5 + [272]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$16 }
	$6 = CALL $67(($5 + [424]), $10)
	if ( $6 ){ goto $label$15 }
	goto $label$9 
	
.LABEL $label$17
	$10 = *($6 + [48])
	$6 = [0]
	$10 = CALL db_next_i64($10, ($5 + [320]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$16 }
	$6 = CALL $67(($5 + [424]), $10)
	
.LABEL $label$16
	if ( $6 ){ goto $label$15 }
	
.LABEL $label$9
	$4 = *($5 + [448])
	if ( $4 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$8
	$3 = CALL current_time()
	*((($5 + [320]) + [28])) = (int_64)0
	*(($5 + [364])) = (int_64)0
	*(($5 + [372])) = (int_64)0
	$9 = [0]
	*($5 + [332]) = [0]
	*($5 + [336]) = [0]
	*($5 + [340 align=4]) = (int_64)0
	*($5 + [356 align=4]) = (int_64)0
	*($5 + [320]) = ((CASTING uint_32)(uint_64 ((uint_64)$3 / (uint_64)(int_64)1000000)) + [60])
	*($5 + [256]) = [8511]
	*($5 + [260]) = CALL $158([8511])
	*($5 + [104]) = *($5 + [256])
	$10 = CALL $4(($5 + [264]), ($5 + [104]))
	*($5 + [240]) = [9517]
	*($5 + [244]) = CALL $158([9517])
	*($5 + [96]) = *($5 + [240])
	$4 = CALL $4(($5 + [248]), ($5 + [96]))
	*($5 + [224]) = [8511]
	$3 = *($4)
	$12 = *($10)
	*($5 + [228]) = CALL $158([8511])
	*($5 + [88]) = *($5 + [224])
	$8 = CALL $4(($5 + [232]), ($5 + [88]))
	*($5 + [208]) = [9572]
	*($5 + [212]) = CALL $158([9572])
	*($5 + [80]) = *($5 + [208])
	$0 = CALL $4(($5 + [216]), ($5 + [80]))
	*($5 + [176]) = [0]
	*($5 + [168]) = (int_64)0
	$10 = (*($1 + [4]) - *($1))
	$4 = ((int_32)$10 / (int_32)[48])
	if ( ($10 == 0) ){ goto $label$18 }
	if ( ((uint_32)$4 >= (uint_32)[89478486]) ){ goto $label$6 }
	$10 = CALL _Znwj($10)
	*(($5 + [176])) = ($10 + ((int_32)$4 * (int_32)[48]))
	*($5 + [168]) = $10
	*($5 + [172]) = $10
	$1 = *($1)
	$4 = (*(($1 + [4])) - $1)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$18 }
	CALL memcpy($10, $1, $4)
	*($5 + [172]) = (*($5 + [172]) + ((int_32)((uint_32)$4 / (uint_32)[48]) * (int_32)[48]))
	
.LABEL $label$18
	$7 = (($5 + [320]) + [36])
	*($5 + [184]) = $2
	*($5 + [200]) = [80]
	$2 = *(($6 + [8]))
	*($5 + [272]) = *($8)
	*($5 + [280]) = *($0)
	*($5 + [192]) = $2
	*(($10 = CALL _Znwj([16]))) = $12
	*($10 + [8]) = $3
	*((($5 + [272]) + [36])) = [0]
	$4 = ($10 + [16])
	*(($5 + [296])) = $4
	*(($5 + [292])) = $4
	*($5 + [288]) = $10
	*($5 + [300 align=4]) = (int_64)0
	$4 = *($5 + [168])
	$10 = *($5 + [172])
	$8 = ($10 - $4)
	$2 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[48]))
	$1 = (($5 + [272]) + [28])
	
.LOOP $label$19:
	$9 = ($9 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$19 }
	if ( ((int_32)$4 == (int_32)$10) ){ goto $label$20 }
	$9 = ((((int_32)((uint_32)($8 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $9) + [36])
	
.LABEL $label$20
	$9 = ($9 + [20])
	if ( ($9 == 0) ){ goto $label$22 }
	CALL $60($1, $9)
	$10 = *(($5 + [304]))
	$9 = *(($5 + [300]))
	goto $label$21 
	
.LABEL $label$22
	$10 = [0]
	$9 = [0]
	
.LABEL $label$21
	*($5 + [484]) = $9
	*($5 + [480]) = $9
	*($5 + [488]) = $10
	*($5 + [496]) = ($5 + [480])
	*($5 + [504]) = ($5 + [168])
	CALL $68(($5 + [504]), ($5 + [496]))
	$10 = (($5 + [320]) + [40])
	$9 = *($10)
	if ( ((uint_32)$9 >= (uint_32)*(($5 + [364]))) ){ goto $label$25 }
	*($9) = *($5 + [272])
	*($9 + [16]) = [0]
	*(($9 + [8])) = *((($5 + [272]) + [8]))
	*(($4 = ($9 + [20]))) = (int_64)0
	$8 = ($5 + [288])
	*($9 + [16]) = *($8)
	$1 = (($5 + [272]) + [20])
	*($4) = *($1)
	$4 = (($5 + [272]) + [24])
	*(($9 + [24])) = *($4)
	*($4) = [0]
	*($9 + [28 align=4]) = (int_64)0
	*($1) = [0]
	*($8) = [0]
	*(($4 = ($9 + [36]))) = [0]
	$8 = ($5 + [300])
	*($9 + [28]) = *($8)
	$9 = (($5 + [272]) + [32])
	*(($9 + [32])) = *($9)
	$1 = (($5 + [272]) + [36])
	*($4) = *($1)
	*($9) = [0]
	*($8) = [0]
	*($1) = [0]
	*($10) = (*($10) + [40])
	$9 = *($5 + [288])
	if ( $9 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL $62($7, ($5 + [272]))
	$9 = *($5 + [300])
	if ( ($9 == 0) ){ goto $label$26 }
	*(($5 + [304])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$26
	$9 = *($5 + [288])
	if ( ($9 == 0) ){ goto $label$23 }
	
.LABEL $label$24
	*(($5 + [292])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$23
	$9 = *($5 + [168])
	if ( ($9 == 0) ){ goto $label$27 }
	*($5 + [172]) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$27
	*(($5 + [340])) = [0]
	*($5 + [160]) = [8511]
	*($5 + [164]) = CALL $158([8511])
	*($5 + [72]) = *($5 + [160])
	CALL $4(($5 + [272]), ($5 + [72]))
	*($5 + [152]) = [9580]
	*($5 + [156]) = CALL $158([9580])
	*($5 + [64]) = *($5 + [152])
	CALL $4(($5 + [168]), ($5 + [64]))
	*($5 + [144]) = [9572]
	*($5 + [148]) = CALL $158([9572])
	*($5 + [56]) = *($5 + [144])
	CALL $4(($5 + [480]), ($5 + [56]))
	$2 = *(($6 + [8]))
	$3 = CALL current_time()
	*($5 + [280]) = (int_64)0
	$2 = ((int_64)((int_64)$2 + (int_64)((int_64)((uint_64)$3 / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)-4689405195787832448)
	*($5 + [272]) = $2
	CALL cancel_deferred(($5 + [272]))
	*($5 + [280]) = (int_64)0
	*($5 + [272]) = $2
	*($5 + [128]) = [8511]
	*($5 + [132]) = CALL $158([8511])
	*($5 + [48]) = *($5 + [128])
	CALL $65(($5 + [320]), ($5 + [272]), *(CALL $4(($5 + [136]), ($5 + [48]))), [0])
	CALL $66(($5 + [320]))
	$4 = *($5 + [448])
	if ( ($4 == 0) ){ goto $label$5 }
	
.LABEL $label$7
	$8 = ($5 + [452])
	$6 = *($8)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$29 }
	
.LOOP $label$30:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$31 }
	$10 = *($9 + [32])
	if ( ($10 == 0) ){ goto $label$32 }
	*(($9 + [36])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$32
	CALL _ZdlPv($9)
	
.LABEL $label$31
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$30 }
	$6 = *(($5 + [448]))
	goto $label$28 
	
.LABEL $label$29
	$6 = $4
	
.LABEL $label$28
	*($8) = $4
	CALL _ZdlPv($6)
	$global$0 = ($5 + [512])
	return (unreachable)
	
.LABEL $label$6
	CALL $150(($5 + [168]))
	
.LABEL $label$5
	$global$0 = ($5 + [512])
}

void .FUNC $27 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	$2 = ($global$0 - [544])
	$global$0 = $2
	*($2 + [496]) = [8511]
	*($2 + [500]) = CALL $158([8511])
	*($2 + [112]) = *($2 + [496])
	CALL require_auth(*(CALL $4(($2 + [504]), ($2 + [112]))))
	$3 = ($0 + [152])
	$5 = *(($0 + [180]))
	$4 = *(($0 + [176]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [16]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [10407])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [160])), (int_64)-3020374815346262016, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $76($3, $6)
	if ( ((int_32)*($7 + [16]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$1
	$5 = *(($0 + [180]))
	$4 = *(($0 + [176]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$8:
	$6 = ($5 + [-24])
	$8 = *($6)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$7 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	if ( ((int_32)*($8 + [16]) == (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [10407])
	goto $label$5 
	
.LABEL $label$6
	$6 = CALL db_find_i64(*(($0 + [152])), *(($0 + [160])), (int_64)-3020374815346262016, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	if ( ((int_32)*(CALL $76($3, $6) + [16]) == (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [10407])
	goto $label$5 
	
.LABEL $label$9
	CALL eosio_assert([0], [9490])
	
.LABEL $label$5
	$3 = ($0 + [112])
	$5 = *(($0 + [140]))
	$8 = *(($0 + [136]))
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$13 }
	
.LOOP $label$15:
	$6 = ($5 + [-24])
	$4 = *($6)
	if ( ((int_64)*($4) == (int_64)$1) ){ goto $label$14 }
	$5 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$13 }
	if ( ((int_32)*($4 + [36]) == (int_32)$3) ){ goto $label$12 }
	CALL eosio_assert([0], [10407])
	goto $label$12 
	
.LABEL $label$13
	$4 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [120])), (int_64)-4157661132521209856, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$11 }
	$4 = CALL $37($3, $6)
	if ( ((int_32)*($4 + [36]) == (int_32)$3) ){ goto $label$12 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$12
	$9 = *($4 + [8])
	goto $label$10 
	
.LABEL $label$11
	$9 = (int_64)0
	
.LABEL $label$10
	*($2 + [432]) = [8511]
	*($2 + [436]) = CALL $158([8511])
	*($2 + [104]) = *($2 + [432])
	$6 = CALL $4(($2 + [440]), ($2 + [104]))
	$5 = CALL $41(($2 + [216]))
	CALL $42(($2 + [448]), ($0 + [32]), *($6), $5)
	$10 = ((uint_64)((int_64)*($2 + [480]) * (int_64)*($7 + [8])) / (uint_64)(int_64)10000)
	if ( ((uint_64)$10 <= (uint_64)$9) ){ goto $label$16 }
	*($2 + [416]) = [8748]
	*($2 + [420]) = CALL $158([8748])
	*($2 + [96]) = *($2 + [416])
	$6 = CALL $4(($2 + [424]), ($2 + [96]))
	*((($2 + [216]) + [32])) = [0]
	*($2 + [232]) = (int_64)-1
	$11 = *($6)
	*($2 + [216]) = $11
	*($2 + [224]) = $1
	*($2 + [240]) = (int_64)0
	$6 = [0]
	$5 = CALL db_lowerbound_i64($11, $1, (int_64)3607749779137757184, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$17 }
	$6 = CALL $84(($2 + [216]), $5)
	
.LABEL $label$17
	$5 = CALL db_lowerbound_i64(*($2 + [216]), *(($2 + [224])), (int_64)3607749779137757184, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$18 }
	CALL $84(($2 + [216]), $5)
	$9 = (int_64)
	$11 = (int_64)
	$11 = ( $11(*($6) - *($4 + [8]))) ? $9($10 - $9)
	if ( ((int_64)$11 : ((int_64)$11 < (int_64)$9) )) < (int_64)1) ){ goto $label$18 }
	*($2 + [352]) = [8511]
	*($2 + [356]) = CALL $158([8511])
	*($2 + [88]) = *($2 + [352])
	$6 = CALL $4(($2 + [360]), ($2 + [88]))
	*($2 + [336]) = [9517]
	*($2 + [340]) = CALL $158([9517])
	*($2 + [80]) = *($2 + [336])
	$5 = CALL $4(($2 + [344]), ($2 + [80]))
	*($2 + [320]) = [8511]
	$12 = *($5)
	$13 = *($6)
	*($2 + [324]) = CALL $158([8511])
	*($2 + [72]) = *($2 + [320])
	$4 = CALL $4(($2 + [328]), ($2 + [72]))
	*($2 + [304]) = [9534]
	*($2 + [308]) = CALL $158([9534])
	*($2 + [64]) = *($2 + [304])
	$7 = CALL $4(($2 + [312]), ($2 + [64]))
	if ( (uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$19 }
	CALL eosio_assert([0], [9813])
	
.LABEL $label$19
	$9 = (int_64)340498729282
	$6 = [0]
	
.LOOP $label$22:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$23 }
	$9 = $10
	$5 = $6
	$6 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$23
	$9 = $10
	
.LOOP $label$24:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$21 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = ((int_32)$6 < (int_32)[6])
	$0 = ($6 + [1])
	$6 = $0
	if ( $5 ){ goto $label$24 }
	$6 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	CALL eosio_assert([0], [9862])
	
.LABEL $label$20
	*((($2 + [280]) + [16])) = (int_64)87167674696196
	*($2 + [288]) = $11
	*($2 + [280]) = $1
	*($2 + [368]) = *($4)
	*($2 + [376]) = *($7)
	*(($6 = CALL _Znwj([16]))) = $13
	*($6 + [8]) = $12
	*(($2 + [404])) = [0]
	$5 = ($6 + [16])
	*((($2 + [368]) + [24])) = $5
	*(($2 + [388])) = $5
	*($2 + [384]) = $6
	*($2 + [396 align=4]) = (int_64)0
	CALL $60(($2 + [396]), [24])
	$0 = ($2 + [400])
	$6 = *($0)
	$5 = *($2 + [396])
	*($2 + [516]) = $5
	*($2 + [512]) = $5
	*($2 + [520]) = $6
	*($2 + [528]) = ($2 + [512])
	*($2 + [536]) = ($2 + [280])
	CALL $85(($2 + [536]), ($2 + [528]))
	CALL $69(($2 + [368]))
	$6 = *($2 + [396])
	if ( ($6 == 0) ){ goto $label$25 }
	*($0) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$25
	$6 = *($2 + [384])
	if ( ($6 == 0) ){ goto $label$18 }
	*(($2 + [388])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$18
	$0 = *($2 + [240])
	if ( ($0 == 0) ){ goto $label$16 }
	$4 = ($2 + [244])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$27 }
	
.LOOP $label$28:
	$6 = ($6 + [-24])
	$5 = *($6)
	*($6) = [0]
	if ( ($5 == 0) ){ goto $label$29 }
	CALL _ZdlPv($5)
	
.LABEL $label$29
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$28 }
	$6 = *(($2 + [240]))
	goto $label$26 
	
.LABEL $label$27
	$6 = $0
	
.LABEL $label$26
	*($4) = $0
	CALL _ZdlPv($6)
	
.LABEL $label$16
	$9 = CALL current_time()
	*((($2 + [216]) + [28])) = (int_64)0
	*(($0 = ($2 + [260]))) = (int_64)0
	*(($2 + [268])) = (int_64)0
	*($2 + [228]) = [0]
	*($2 + [232]) = [0]
	*($2 + [236 align=4]) = (int_64)0
	*($2 + [252 align=4]) = (int_64)0
	*($2 + [216]) = ((CASTING uint_32)(uint_64 ((uint_64)$9 / (uint_64)(int_64)1000000)) + [60])
	*($2 + [200]) = [8511]
	*($2 + [204]) = CALL $158([8511])
	*($2 + [56]) = *($2 + [200])
	$6 = CALL $4(($2 + [208]), ($2 + [56]))
	*($2 + [184]) = [9517]
	*($2 + [188]) = CALL $158([9517])
	*($2 + [48]) = *($2 + [184])
	$5 = CALL $4(($2 + [192]), ($2 + [48]))
	*($2 + [168]) = [8511]
	$9 = *($5)
	$10 = *($6)
	*($2 + [172]) = CALL $158([8511])
	*($2 + [40]) = *($2 + [168])
	$6 = CALL $4(($2 + [176]), ($2 + [40]))
	*($2 + [152]) = [9524]
	*($2 + [156]) = CALL $158([9524])
	*($2 + [32]) = *($2 + [152])
	$5 = CALL $4(($2 + [160]), ($2 + [32]))
	*($2 + [280]) = $1
	*($2 + [368]) = *($6)
	*($2 + [376]) = *($5)
	*(($6 = CALL _Znwj([16]))) = $10
	*($6 + [8]) = $9
	*((($2 + [368]) + [36])) = [0]
	$5 = ($6 + [16])
	*(($2 + [392])) = $5
	*(($2 + [388])) = $5
	*($2 + [384]) = $6
	*($2 + [396 align=4]) = (int_64)0
	CALL $60((($2 + [368]) + [28]), [8])
	$5 = *($2 + [396])
	if ( ((int_32)(*((($2 + [368]) + [32])) - $5) >= (int_32)[8]) ){ goto $label$33 }
	CALL eosio_assert([0], [10392])
	$0 = *($0)
	$4 = (($2 + [216]) + [40])
	$6 = *($4)
	CALL memcpy($5, ($2 + [280]), [8])
	if ( ((uint_32)$6 >= (uint_32)$0) ){ goto $label$32 }
	*($6) = *($2 + [368])
	*($6 + [16]) = [0]
	*(($6 + [8])) = *((($2 + [368]) + [8]))
	*(($5 = ($6 + [20]))) = (int_64)0
	$0 = ($2 + [384])
	*($6 + [16]) = *($0)
	$7 = (($2 + [368]) + [20])
	*($5) = *($7)
	$5 = (($2 + [368]) + [24])
	*(($6 + [24])) = *($5)
	*($5) = [0]
	*($6 + [28 align=4]) = (int_64)0
	*($7) = [0]
	*($0) = [0]
	*(($5 = ($6 + [36]))) = [0]
	$0 = ($2 + [396])
	*($6 + [28]) = *($0)
	$6 = (($2 + [368]) + [32])
	*(($6 + [32])) = *($6)
	$7 = (($2 + [368]) + [36])
	*($5) = *($7)
	*($6) = [0]
	*($0) = [0]
	*($7) = [0]
	*($4) = (*($4) + [40])
	$6 = *($2 + [384])
	if ( $6 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$33
	CALL memcpy($5, ($2 + [280]), [8])
	
.LABEL $label$32
	CALL $62((($2 + [216]) + [36]), ($2 + [368]))
	$6 = *($2 + [396])
	if ( ($6 == 0) ){ goto $label$34 }
	*(($2 + [400])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$34
	$6 = *($2 + [384])
	if ( ($6 == 0) ){ goto $label$30 }
	
.LABEL $label$31
	*(($2 + [388])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$30
	*(($2 + [236])) = [86400]
	*($2 + [144]) = [8511]
	*($2 + [148]) = CALL $158([8511])
	*($2 + [24]) = *($2 + [144])
	CALL $4(($2 + [368]), ($2 + [24]))
	*($2 + [136]) = [9524]
	*($2 + [140]) = CALL $158([9524])
	*($2 + [16]) = *($2 + [136])
	CALL $4(($2 + [280]), ($2 + [16]))
	*($2 + [376]) = (int_64)0
	$1 = ((int_64)$1 + (int_64)-4738870120000277632)
	*($2 + [368]) = $1
	CALL cancel_deferred(($2 + [368]))
	*($2 + [376]) = (int_64)0
	*($2 + [368]) = $1
	*($2 + [120]) = [8511]
	*($2 + [124]) = CALL $158([8511])
	*($2 + [8]) = *($2 + [120])
	CALL $65(($2 + [216]), ($2 + [368]), *(CALL $4(($2 + [128]), ($2 + [8]))), [1])
	CALL $66(($2 + [216]))
	$global$0 = ($2 + [544])
}

void .FUNC $26 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	*($2 + [40]) = $1
	CALL require_auth($1)
	$3 = ($0 + [112])
	$5 = *(($0 + [140]))
	$4 = *(($0 + [136]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$4 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [36]) == (int_32)$3) ){ goto $label$6 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$6
	if ( $7 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($3), *(($0 + [120])), (int_64)-4157661132521209856, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$7 = CALL $37($3, $6)
	if ( ((int_32)*($7 + [36]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [10407])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	CALL eosio_assert([0], [9540])
	
.LABEL $label$1
	*($2 + [24]) = [8511]
	*($2 + [28]) = CALL $158([8511])
	*($2 + [8]) = *($2 + [24])
	$6 = CALL $4(($2 + [32]), ($2 + [8]))
	*($2 + [16]) = ($2 + [40])
	$1 = *($6)
	if ( $7 ){ goto $label$7 }
	CALL eosio_assert([0], [10532])
	
.LABEL $label$7
	CALL $55($3, $7, $1, ($2 + [16]))
	$global$0 = ($2 + [48])
}

void .FUNC $109 (int_64 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = ($global$0 - [176])
	$global$0 = $5
	*($5 + [88]) = [9517]
	*($5 + [92]) = CALL $158([9517])
	*($5 + [16]) = *($5 + [88])
	$6 = *(CALL $4(($5 + [96]), ($5 + [16])))
	*($5 + [72]) = [9591]
	*($5 + [76]) = CALL $158([9591])
	*($5 + [8]) = *($5 + [72])
	$7 = CALL $4(($5 + [80]), ($5 + [8]))
	*((($5 + [24]) + [24])) = *(($2 + [8]))
	*($5 + [32]) = $1
	*($5 + [24]) = $0
	*($5 + [40]) = *($2)
	$3 = CALL $144((($5 + [24]) + [32]), $3)
	*($5 + [104]) = $4
	*($5 + [112]) = *($7)
	*(($2 = CALL _Znwj([16]))) = $0
	*($2 + [8]) = $6
	*((($5 + [104]) + [36])) = [0]
	$7 = ($2 + [16])
	*((($5 + [104]) + [24])) = $7
	*(($5 + [124])) = $7
	*($5 + [120]) = $2
	*($5 + [132 align=4]) = (int_64)0
	$2 = *($3)
	$3 = ( *((($5 + [24]) + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($3 + [32])
	$0 = (CASTING uint_64)(uint_32 $3)
	$3 = ($5 + [132])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$1 }
	if ( ($2 == 0) ){ goto $label$3 }
	CALL $60($3, $2)
	$3 = *(($5 + [136]))
	$2 = *(($5 + [132]))
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	$2 = [0]
	
.LABEL $label$2
	*($5 + [148]) = $2
	*($5 + [144]) = $2
	*($5 + [152]) = $3
	*($5 + [160]) = ($5 + [144])
	*($5 + [168]) = ($5 + [24])
	CALL $110(($5 + [168]), ($5 + [160]))
	CALL $69(($5 + [104]))
	$2 = *($5 + [132])
	if ( ($2 == 0) ){ goto $label$4 }
	*(($5 + [136])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$4
	$2 = *($5 + [120])
	if ( ($2 == 0) ){ goto $label$5 }
	*(($5 + [124])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$5
	if ( ((*($5 + [56]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*(($5 + [64])))
	
.LABEL $label$6
	$global$0 = ($5 + [176])
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $161($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [11064])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $161($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $69 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $60($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $104(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = (CASTING uint_64)(uint_32 ((int_32)(*($3 + [4]) - *($3)) / (int_32)[48]))
	$5 = *($1)
	$6 = *($5 + [4])
	$7 = ($5 + [8])
	$8 = ($5 + [4])
	
.LOOP $label$1:
	$9 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$10 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($10) << [7]) | ($9 & [127]))
	if ( ((int_32)(*($7) - $6) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$6 = *($8)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [15]), [1])
	$6 = (*($8) + [1])
	*($8) = $6
	if ( $10 ){ goto $label$1 }
	$8 = *(($3 + [4]))
	$6 = *($3)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $120($5, $6)
	$6 = ($6 + [48])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$8 = *($0)
	$10 = ($8 + [16])
	$9 = *($6 + [4])
	$6 = *($1)
	if ( ((int_32)(*($6 + [8]) - $9) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10392])
	$9 = *(($6 + [4]))
	
.LABEL $label$5
	CALL memcpy($9, $10, [8])
	*(($6 = ($6 + [4]))) = (*($6) + [8])
	$10 = ($8 + [24])
	$9 = *($6 + [4])
	$6 = *($1)
	if ( ((int_32)(*($6 + [8]) - $9) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10392])
	$9 = *(($6 + [4]))
	
.LABEL $label$6
	CALL memcpy($9, $10, [8])
	*(($6 = ($6 + [4]))) = (*($6) + [8])
	$9 = ($8 + [32])
	$8 = *($6 + [4])
	$6 = *($1)
	if ( ((int_32)(*($6 + [8]) - $8) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [10392])
	$8 = *(($6 + [4]))
	
.LABEL $label$7
	CALL memcpy($8, $9, [4])
	*(($6 = ($6 + [4]))) = (*($6) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $108 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [10481])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([48])) + [8]) = [0]
	*($3) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [32]) = $1
	CALL $129(($4 + [16]), $3)
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)-8524869779563368672
	$5 = *($3 + [36])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)-8524869779563368672
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $130(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = *($3)
	if ( ($1 == 0) ){ goto $label$5 }
	*($3 + [4]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	CALL _ZdlPv($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $65 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [16]) = [0]
	CALL $105(($4 + [16]), $0)
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL $60($4, $6)
	$5 = *($4 + [4])
	$6 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	*($4 + [20]) = $6
	*($4 + [16]) = $6
	*($4 + [24]) = $5
	CALL $106(($4 + [16]), $0)
	$0 = *($4)
	CALL send_deferred($1, $2, $0, (*($4 + [4]) - $0), $3)
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$3 }
	*($4 + [4]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$3
	$global$0 = ($4 + [32])
}

void .FUNC $64 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [32]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-8524869779563368672, (int_64)-8524869779563368672)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $70($0, $4)
	if ( ((int_32)*($4 + [32]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$2
	*($3) = $1
	CALL $107($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $108($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

int_32 .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10458])
	
.LABEL $label$5
	$4 = CALL $161($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([56])) + [16]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [40]) = [0]
	*($5 + [44]) = $0
	CALL $127(($3 + [32]), $5)
	*($5 + [48]) = $1
	*($3 + [24]) = $5
	$7 = *($5 + [8])
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $90(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $164($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$4 = *($1 + [32])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [36])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $66 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $128(*($1), *($0))
	$2 = *($0)
	$3 = ($2 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10392])
	$4 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$4 = ($2 + [24])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$0 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $4, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $150($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $63 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [4])
	if ( ((uint_32)$4 <= (uint_32)int_32(($5 - $6) >> [4])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL _ZdlPv($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$1 }
	$6 = [268435455]
	if ( ((uint_32)int_32($5 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = $4
	$2 = int_32($5 >> [3])
	if ( ($2 <= $4) ){ goto $label$6 }
	$6 = $2
	if ( ((uint_32)$2 >= (uint_32)[268435456]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($6 << [4])
	$6 = CALL _Znwj($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	goto $label$3 
	
.LABEL $label$4
	$5 = int_32($3 >> [4])
	$3 = (*($0 + [4]) - $6)
	$7 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$5) )
	$3 = ($7 - $1)
	if ( ($3 == 0) ){ goto $label$7 }
	CALL memmove($6, $1, $3)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + (int_32($3 >> [4]) << [4]))
	return (unreachable)
	
.LABEL $label$1
	CALL $150($0)
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$2 = *($0)
	$3 = ((int_32)(*($0 + [4]) - $2) / (int_32)[40])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[107374183]) ){ goto $label$2 }
	$5 = [107374182]
	$2 = ((int_32)(*($0 + [8]) - $2) / (int_32)[40])
	if ( ((uint_32)$2 > (uint_32)[53687090]) ){ goto $label$4 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = CALL _Znwj(((int_32)$5 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $150($0)
	
.LABEL $label$1
	$6 = *($1 + [16 align=4])
	*($1 + [16 align=4]) = (int_64)0
	$4 = ($1 + [24])
	$7 = *($4)
	*($4) = (int_64)0
	$4 = ($1 + [32])
	$8 = *($4)
	*($4) = (int_64)0
	*(($9 = ($2 + ((int_32)$3 * (int_32)[40])))) = *($1)
	*($9 + [16 align=4]) = $6
	*(($9 + [8])) = *(($1 + [8]))
	*(($9 + [24])) = $7
	*(($9 + [32])) = $8
	$10 = ($2 + ((int_32)$5 * (int_32)[40]))
	$11 = ($9 + [40])
	$1 = *($0)
	$12 = *(($0 + [4]))
	if ( ((int_32)$12 == (int_32)$1) ){ goto $label$6 }
	$13 = ($1 - $12)
	$2 = [0]
	
.LOOP $label$7:
	$5 = ($12 + $2)
	*((($1 = ($9 + $2)) + [-32])) = *(($5 + [-32]))
	*(($1 + [-40])) = *(($5 + [-40]))
	*(($3 = ($1 + [-24]))) = (int_64)0
	*(($4 = ($1 + [-16]))) = [0]
	$14 = ($5 + [-24])
	*($3) = *($14)
	$3 = ($5 + [-16])
	*($4) = *($3)
	*($3) = [0]
	*(($3 = ($1 + [-12]))) = (int_64)0
	*(($1 = ($1 + [-4]))) = [0]
	$4 = ($5 + [-12])
	*($3) = *($4)
	*($14) = (int_64)0
	$5 = ($5 + [-4])
	*($1) = *($5)
	*($5) = [0]
	*($4) = (int_64)0
	$2 = ($2 + [-40])
	if ( ((int_32)$13 != (int_32)$2) ){ goto $label$7 }
	$9 = ($9 + $2)
	$1 = *(($0 + [4]))
	$3 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$3 = $1
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $11
	*(($0 + [8])) = $10
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = *(($1 + [-12]))
	if ( ($5 == 0) ){ goto $label$10 }
	*(($1 + [-8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$10
	$5 = ($1 + [-40])
	$2 = *(($1 + [-24]))
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [-20])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	$1 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$12 }
	CALL _ZdlPv($3)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $101 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [80])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [10481])
	
.LABEL $label$1
	$5 = CALL _Znwj([64])
	$6 = CALL $41($5)
	*($5 + [48]) = $1
	$3 = *($3)
	*($5) = *($3)
	*(($5 + [8])) = *(($3 + [8]))
	*(($5 + [16])) = *(($3 + [16]))
	*(($5 + [24])) = *(($3 + [24]))
	*(($5 + [32])) = *(($3 + [32]))
	*(($5 + [40])) = *(($3 + [40]))
	*($4 + [72]) = (($4 + [16]) + [41])
	*($4 + [68]) = ($4 + [16])
	*($4 + [64]) = ($4 + [16])
	CALL $121(($4 + [64]), $6)
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)-3660748222285835776, $2, (int_64)-3660748222285835776, ($4 + [16]), [41])
	*($5 + [52]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-3660748222285835776) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)-3660748222285835775
	
.LABEL $label$2
	*($4 + [64]) = $5
	*($4 + [16]) = (int_64)-3660748222285835776
	*($4 + [12]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)-3660748222285835776
	*($3 + [16]) = $6
	*($4 + [64]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $122(($1 + [24]), ($4 + [64]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [64])
	*($4 + [64]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL _ZdlPv($5)
	
.LABEL $label$5
	$global$0 = ($4 + [80])
}

void .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10812])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10857])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( ((int_64)*(*(($4 + [-24])) + [8]) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9) + [8]) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10907])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	$7 = *($5 + [32])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($5 + [36])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$13
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$2 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	$7 = *($8 + [32])
	if ( ($7 == 0) ){ goto $label$16 }
	*(($8 + [36])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$16
	CALL _ZdlPv($8)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $2
	CALL db_remove_i64(*($1 + [48]))
}

void .FUNC $103 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [80])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [10481])
	
.LABEL $label$1
	$5 = CALL _Znwj([64])
	$6 = CALL $41($5)
	*($5 + [48]) = $1
	$3 = *($3)
	*($5) = *($3)
	*(($5 + [8])) = *(($3 + [8]))
	*(($5 + [16])) = *(($3 + [16]))
	*(($5 + [24])) = *(($3 + [24]))
	*(($5 + [32])) = *(($3 + [32]))
	*(($5 + [40])) = *(($3 + [40]))
	*($4 + [72]) = (($4 + [16]) + [41])
	*($4 + [68]) = ($4 + [16])
	*($4 + [64]) = ($4 + [16])
	CALL $121(($4 + [64]), $6)
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)-3660748222285835776, $2, (int_64)-3660748222285835776, ($4 + [16]), [41])
	*($5 + [52]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-3660748222285835776) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)-3660748222285835775
	
.LABEL $label$2
	*($4 + [64]) = $5
	*($4 + [16]) = (int_64)-3660748222285835776
	*($4 + [12]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)-3660748222285835776
	*($3 + [16]) = $6
	*($4 + [64]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $122(($1 + [24]), ($4 + [64]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [64])
	*($4 + [64]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL _ZdlPv($5)
	
.LABEL $label$5
	$global$0 = ($4 + [80])
}

void .FUNC $102 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10567])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10613])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($1 + [40])) = *(($3 + [40]))
	*(($1 + [32])) = *(($3 + [32]))
	*(($1 + [24])) = *(($3 + [24]))
	*(($1 + [16])) = *(($3 + [16]))
	*(($1 + [8])) = *(($3 + [8]))
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-7])
	CALL $121($5, $1)
	CALL db_update_i64(*($1 + [52]), $2, $3, [41])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-3660748222285835776) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)-3660748222285835775
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

int_32 .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $112(CALL $111($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10392])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$5 = *($0)
	$4 = *($4 + [8])
	*(($1 + [24])) = *(($4 + [8]))
	*($1 + [16]) = *($4)
	$7 = *($1 + [32])
	$6 = *(($1 + [36]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[48]))
	$4 = [68]
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$5 }
	$6 = (((int_32)((uint_32)($8 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $4)
	if ( ($6 <= [513]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$6 = ($4 + [-36])
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $161($6)
	
.LABEL $label$2
	*($3 + [4]) = $4
	*($3) = $4
	*($3 + [8]) = ($4 + $6)
	CALL $133($3, $1)
	$9 = *(($1 + [8]))
	*($1 + [48]) = CALL db_store_i64(*($5 + [8]), (int_64)-2453462778758506688, *(*($0 + [8])), $9, $4, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$9 >= (uint_64)*($5 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $164($4)
	if ( (uint_64)($9 <= *($5 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [16])
}

void .FUNC $88 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10567])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10613])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10162])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [16]) + (int_64)*($3))
	*($1 + [16]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [10205])
	$7 = *(($1 + [16]))
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10224])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)*(($1 + [8]))) ){ goto $label$6 }
	CALL eosio_assert([0], [10664])
	
.LABEL $label$6
	$9 = *($1 + [32])
	$8 = *(($1 + [36]))
	$10 = ($8 - $9)
	$7 = (CASTING uint_64)(uint_32 ((int_32)$10 / (int_32)[48]))
	$3 = [68]
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$11 }
	$8 = (((int_32)((uint_32)($10 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $3)
	if ( ($8 <= [513]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$8 = ($3 + [-36])
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$9 }
	
.LABEL $label$10
	$3 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $3
	goto $label$8 
	
.LABEL $label$9
	$3 = CALL $161($8)
	
.LABEL $label$8
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $8)
	CALL $133($5, $1)
	CALL db_update_i64(*($1 + [48]), $2, $3, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$14 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $164($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	
.LABEL $label$13
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$12
	$global$0 = ($5 + [16])
}

void .FUNC $87 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $150($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $96(*($1), *($0))
	$3 = *($0)
	$4 = ($3 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10398])
	$1 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $1, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10398])
	$4 = *($1)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*(($3 + [32])) = *($2 + [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10392])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = *(($5 + [16]))
	if ( ((int_32)(*(($4 + [8])) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10392])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$5 = *($0 + [24])
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$3:
	if ( ((int_32)*(($4 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$4 = ($4 + [-24])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$4 = *(($4 + [-24]))
	$global$0 = ($3 + [16])
	return $4
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$6 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $6
	$7 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10458])
	
.LABEL $label$5
	$6 = CALL $161($4)
	$7 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $6, $4)
	*(($8 = CALL _Znwj([32])) + [8]) = (int_64)0
	*($8) = (int_64)0
	*($8 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10398])
	
.LABEL $label$7
	CALL memcpy($8, $6, [8])
	*($3 + [8]) = (int_64)0
	$5 = ($6 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10398])
	
.LABEL $label$8
	CALL memcpy(($3 + [8]), $5, [8])
	$9 = *($3 + [8])
	*(($8 + [8])) = $9
	*($8 + [20]) = $1
	$10 = *(($0 + [32]))
	$5 = ($0 + [28])
	$4 = *($5)
	if ( ((uint_32)$4 >= (uint_32)$10) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4) = $8
	*($4 + [16]) = $1
	*($5) = ($4 + [24])
	if ( $7 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$11 = ($0 + [24])
	$2 = *($11)
	$5 = ((int_32)($4 - $2) / (int_32)[24])
	$12 = ($5 + [1])
	if ( ((uint_32)$12 >= (uint_32)[178956971]) ){ goto $label$13 }
	$11 = [178956970]
	$10 = ((int_32)($10 - $2) / (int_32)[24])
	if ( ((uint_32)$10 > (uint_32)[89478484]) ){ goto $label$15 }
	$10 = ($10 << [1])
	$11 = ( $12 ? $10 : ($10 <= $12) )
	if ( ($11 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$10 = CALL _Znwj(((int_32)$11 * (int_32)[24]))
	$4 = *(($0 + [28]))
	$2 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$14
	$11 = [0]
	$10 = [0]
	goto $label$12 
	
.LABEL $label$13
	CALL $150($11)
	
.LABEL $label$12
	*(($5 = ($10 + ($13 = ((int_32)$5 * (int_32)[24])))) + [8]) = $9
	*($5) = $8
	*($5 + [16]) = $1
	$11 = ($10 + ((int_32)$11 * (int_32)[24]))
	$12 = ($5 + [24])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$16 }
	$1 = (($10 + $13) + [-24])
	
.LOOP $label$17:
	$5 = ($4 + [-24])
	$10 = *($5)
	*($5) = [0]
	*($1) = $10
	*(($1 + [16])) = *(($4 + [-8]))
	*(($1 + [8])) = *(($4 + [-16]))
	$1 = ($1 + [-24])
	$4 = $5
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$17 }
	$5 = ($1 + [24])
	$4 = *(($0 + [28]))
	$2 = *(($0 + [24]))
	
.LABEL $label$16
	*(($0 + [28])) = $12
	*(($0 + [24])) = $5
	*(($0 + [32])) = $11
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$18 }
	
.LOOP $label$19:
	$4 = ($4 + [-24])
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$20 }
	CALL _ZdlPv($1)
	
.LABEL $label$20
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$19 }
	
.LABEL $label$18
	if ( ($2 == 0) ){ goto $label$21 }
	CALL _ZdlPv($2)
	
.LABEL $label$21
	if ( ($7 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $164($6)
	
.LABEL $label$9
	$global$0 = ($3 + [16])
	(unreachable)
	return $8
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10812])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10857])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10907])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $82 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10567])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10613])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL memcpy(($4 + [-8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $3, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [36]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10812])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10857])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10907])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	$7 = *($5 + [24])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($5 + [28])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$13
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$2 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	$7 = *($8 + [24])
	if ( ($7 == 0) ){ goto $label$16 }
	*(($8 + [28])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$16
	CALL _ZdlPv($8)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $2
	CALL db_remove_i64(*($1 + [40]))
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = (int_64)340498729282
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $8
	$9 = $7
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$10 = ($7 + [1])
	$7 = $10
	if ( $9 ){ goto $label$5 }
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9862])
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	*(($1 + [16])) = (int_64)87167674696196
	$7 = *($4 + [4])
	*($3 + [24]) = CALL $2(*($7 + [8]))
	*($3 + [16]) = *($7 + [8])
	$6 = *($7)
	CALL __multi3($3, $6, (int_64)$6 >> (int_64)63), (int_64)1000000000, (int_64)0)
	*(($9 = (($3 + [16]) + [24]))) = *(($3 + [8]))
	*($3 + [48]) = [1000000000]
	*($3 + [32]) = *($3)
	$10 = ($1 + [28])
	$7 = *($10)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($7) = *($3 + [16])
	*(($7 + [8])) = *($3 + [24])
	*(($7 + [40])) = *((($3 + [16]) + [40]))
	*(($7 + [32])) = *((($3 + [16]) + [32]))
	*(($7 + [24])) = *($9)
	*(($7 + [16])) = *((($3 + [16]) + [16]))
	$9 = (*($10) + [48])
	*($10) = $9
	$7 = ($1 + [24])
	goto $label$6 
	
.LABEL $label$7
	$7 = ($1 + [24])
	CALL $126($7, ($3 + [16]))
	$9 = *($10)
	
.LABEL $label$6
	$10 = *($7)
	$4 = ($9 - $10)
	$6 = (CASTING uint_64)(uint_32 ((int_32)$4 / (int_32)[48]))
	$7 = [60]
	
.LOOP $label$8:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$8 }
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$12 }
	$9 = (((int_32)((uint_32)($4 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $7)
	if ( ($9 <= [513]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$9 = ($7 + [-36])
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$10 }
	
.LABEL $label$11
	$7 = ($2 - (($9 + [15]) & [-16]))
	$global$0 = $7
	goto $label$9 
	
.LABEL $label$10
	$7 = CALL $161($9)
	
.LABEL $label$9
	*($3 + [20]) = $7
	*($3 + [16]) = $7
	*($3 + [24]) = ($7 + $9)
	CALL $119(($3 + [16]), $1)
	$6 = *($1)
	*($1 + [40]) = CALL db_store_i64(*($5 + [8]), (int_64)-4157661132521209856, *(*($0 + [8])), $6, $7, $9)
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$6 >= (uint_64)*($5 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $164($7)
	if ( (uint_64)($6 <= *($5 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$13
	$global$0 = ($3 + [64])
}

void .FUNC $149 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $146(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $157(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8590], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $146(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $146(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

int_32 .FUNC $148 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $145($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $145 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL _ZdlPv($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $147 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL _ZdlPv($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $146 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$5 }
	$5 = uint_32($3 >> [1])
	if ( ($5 <= $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$3 }
	
.LABEL $label$4
	$1 = ($1 - $5)
	if ( ($1 == 0) ){ goto $label$2 }
	if ( $4 ){ goto $label$8 }
	$5 = [10]
	$4 = uint_32($3 >> [1])
	if ( (([10] - $4) <= $1) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = *($0 + [4])
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	if ( ((uint_32)($5 - $4) >= (uint_32)$1) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $147($0, $5, (($4 + $1) - $5), $4, $4, [0], [0])
	$3 = *($0)
	
.LABEL $label$6
	if ( ($3 & [1]) ){ goto $label$10 }
	$3 = ($0 + [1])
	goto $label$9 
	
.LABEL $label$10
	$3 = *($0 + [8])
	
.LABEL $label$9
	CALL memset(($3 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$11
	*($0 + [4]) = $1
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$3
	if ( $4 ){ goto $label$1 }
	*((($0 + $1) + [1])) = [0]
	*($0) = ($1 << [1])
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*((*($0 + [8]) + $1)) = [0]
	*($0 + [4]) = $1
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $164($0)
	
.LABEL $label$1
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

void .FUNC $143 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [10403])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$3 = (CASTING uint_32)(uint_64 $4)
	$8 = *($1)
	$5 = *($1 + [4])
	$7 = int_32(($5 - $8) >> [4])
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$5 }
	CALL $115($1, ($3 - $7))
	$5 = *(($1 + [4]))
	$8 = *($1)
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$7 <= (uint_32)$3) ){ goto $label$6 }
	$5 = ($8 + ($3 << [4]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$3 = ($0 + [4])
	$7 = *($3)
	$6 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($6) - $7) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10398])
	$7 = *($3)
	
.LABEL $label$8
	CALL memcpy($8, $7, [8])
	$7 = (*($3) + [8])
	*($3) = $7
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $7) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10398])
	$7 = *($3)
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $7, [8])
	*(($8 + [8])) = *($2 + [8])
	$7 = (*($3) + [8])
	*($3) = $7
	$8 = ($8 + [16])
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $128(*($1), *($0))
	$2 = *($0)
	$3 = ($2 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10392])
	$4 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$4 = ($2 + [24])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [10392])
	$0 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $4, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($3 = $2) + [44]) = $1
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$2 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10458])
	
.LABEL $label$5
	$5 = CALL $161($4)
	$2 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [36]) = $5
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + $4)
	*($3 + [12]) = ($3 + [32])
	*($3 + [16]) = ($3 + [44])
	*($3 + [8]) = $0
	$1 = CALL _Znwj([48])
	$6 = CALL $131($1, $0, ($3 + [8]))
	*($3 + [24]) = $1
	*($3 + [8]) = (int_64)-8524869779563368672
	$7 = *($1 + [36])
	*($3 + [4]) = $7
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)-8524869779563368672
	*($4 + [16]) = $7
	*($3 + [24]) = [0]
	*($4) = $1
	*($8) = ($4 + [24])
	if ( $2 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $130(($0 + [24]), ($3 + [24]), ($3 + [8]), ($3 + [4]))
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $164($5)
	
.LABEL $label$7
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	$1 = *($5)
	if ( ($1 == 0) ){ goto $label$11 }
	*($5 + [4]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$11
	CALL _ZdlPv($5)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $6
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10812])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10857])
	
.LABEL $label$2
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$5 }
	$4 = ($3 + [-24])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [10907])
	$6 = *($2)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$6 }
	$2 = $3
	
.LOOP $label$7:
	$5 = *($2)
	*($2) = [0]
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = $5
	if ( ($3 == 0) ){ goto $label$8 }
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$9 }
	*($3 + [4]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$9
	CALL _ZdlPv($3)
	
.LABEL $label$8
	*(($2 + [-8])) = *(($2 + [16]))
	*(($2 + [-16])) = *(($2 + [8]))
	$2 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$7 }
	$4 = ($2 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$2) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$4 = ($3 + [-24])
	
.LABEL $label$4
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$11 }
	$5 = *($2)
	if ( ($5 == 0) ){ goto $label$12 }
	*($2 + [4]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$12
	CALL _ZdlPv($2)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$10 }
	
.LABEL $label$3
	*(($0 + [28])) = $4
	CALL db_remove_i64(*(($1 + [36])))
}

int_32 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10458])
	
.LABEL $label$5
	$2 = CALL $161($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10398])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	$7 = ($5 + [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10398])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $44(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $164($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $77 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [36]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10567])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10613])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10301])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [8]) = $7(*($1 + [8]) - *($3)))
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10349])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10371])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10664])
	
.LABEL $label$4
	$9 = *($1 + [24])
	$8 = *(($1 + [28]))
	$10 = ($8 - $9)
	$7 = (CASTING uint_64)(uint_32 ((int_32)$10 / (int_32)[48]))
	$3 = [60]
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$13 }
	$8 = (((int_32)((uint_32)($10 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $3)
	if ( ($8 <= [513]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$8 = ($3 + [-36])
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$11 }
	
.LABEL $label$12
	$3 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $3
	goto $label$10 
	
.LABEL $label$11
	$3 = CALL $161($8)
	
.LABEL $label$10
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $8)
	CALL $119($5, $1)
	CALL db_update_i64(*($1 + [40]), $2, $3, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$16 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $164($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$14 }
	
.LABEL $label$15
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$14
	$global$0 = ($5 + [16])
}

void .FUNC $74 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10567])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10613])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10301])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [8]) = $7(*($1 + [8]) - *($3)))
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10349])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10371])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10664])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $52($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [16])
}

void .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$4 = *($4 + [4])
	*(($1 + [16])) = *(($4 + [8]))
	*($1 + [8]) = *($4)
	$7 = *($1 + [24])
	$6 = *(($1 + [28]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[48]))
	$4 = [60]
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$5 }
	$6 = (((int_32)((uint_32)($8 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $4)
	if ( ($6 <= [513]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$6 = ($4 + [-36])
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $161($6)
	
.LABEL $label$2
	*($3 + [4]) = $4
	*($3) = $4
	*($3 + [8]) = ($4 + $6)
	CALL $119($3, $1)
	$9 = *($1)
	*($1 + [40]) = CALL db_store_i64(*($5 + [8]), (int_64)-4157661132521209856, *(*($0 + [8])), $9, $4, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$9 >= (uint_64)*($5 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $164($4)
	if ( (uint_64)($9 <= *($5 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [16])
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10398])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10398])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10398])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	$7 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10458])
	
.LABEL $label$5
	$4 = CALL $161($6)
	$7 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $6)
	*($3 + [28]) = $4
	*($3 + [24]) = $4
	$2 = ($4 + $6)
	*($3 + [32]) = $2
	*(($5 = CALL _Znwj([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32]) = [0]
	*($5 + [36]) = $0
	$8 = $4
	if ( ((uint_32)$6 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10398])
	$2 = *((($3 + [24]) + [8]))
	$8 = *($3 + [28])
	
.LABEL $label$7
	$9 = ($5 + [8])
	CALL memcpy($5, $8, [8])
	$6 = ($8 + [8])
	*($3 + [28]) = $6
	if ( ((uint_32)($2 - $6) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10398])
	$2 = *(($3 + [32]))
	$6 = *($3 + [28])
	
.LABEL $label$8
	$8 = ($5 + [24])
	CALL memcpy($9, $6, [8])
	$6 = ($6 + [8])
	*($3 + [28]) = $6
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)($2 - $6) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10398])
	$6 = *($3 + [28])
	
.LABEL $label$9
	CALL memcpy(($3 + [40]), $6, [8])
	*(($5 + [16])) = *($3 + [40])
	*($3 + [28]) = ($6 + [8])
	CALL $116(($3 + [24]), $8)
	*($5 + [40]) = $1
	*($3 + [16]) = $5
	$10 = *($5)
	*($3 + [40]) = $10
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($6 + [8]) = $10
	*($6 + [16]) = $1
	*($3 + [16]) = [0]
	*($6) = $5
	*($2) = ($6 + [24])
	if ( $7 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $40(($0 + [24]), ($3 + [16]), ($3 + [40]), ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $164($4)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	$4 = *($1 + [24])
	if ( ($4 == 0) ){ goto $label$14 }
	*(($1 + [28])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$14
	CALL _ZdlPv($1)
	
.LABEL $label$13
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $78 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $158($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$5 }
	*($4 + [16]) = ($5 << [1])
	$6 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4 + [16]) = ($7 | [1])
	*($4 + [24]) = $6
	*($4 + [20]) = $5
	
.LABEL $label$4
	CALL memcpy($6, $1, $5)
	
.LABEL $label$3
	*(($6 + $5)) = [0]
	CALL $125($4, $2, $3)
	$5 = *($4)
	$6 = ($5 & [1])
	$5 = CALL $148(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $6 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 ))
	$8 = *($5)
	*($5) = (int_64)0
	*($0) = $8
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( (*($4) & [1]) ){ goto $label$7 }
	if ( (*($4 + [16]) & [1]) ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$7
	CALL _ZdlPv(*(($4 + [8])))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$6
	CALL _ZdlPv(*($4 + [24]))
	$global$0 = ($4 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $143(($4 + [16]))
	
.LABEL $label$1
	$global$0 = ($4 + [32])
}

void .FUNC $79 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [36]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10567])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10613])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *($3)
	$8 = *($7 + [8])
	$9 = ($1 + [28])
	$10 = *($9)
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$7 }
	
.LOOP $label$8:
	if ( ((int_64)*($3) == (int_64)$8) ){ goto $label$6 }
	$3 = ($3 + [48])
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$8 }
	
.LABEL $label$7
	*($5 + [40]) = CALL $2($8)
	*($5 + [32]) = *(($7 + [8]))
	$8 = *($7)
	CALL __multi3($5, $8, (int_64)$8 >> (int_64)63), (int_64)1000000000, (int_64)0)
	*((($5 + [32]) + [24])) = *(($5 + [8]))
	*($5 + [64]) = [1000000000]
	*($5 + [48]) = *($5)
	$3 = *($9)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$5 }
	*($3) = *($5 + [32])
	*(($3 + [8])) = *($5 + [40])
	*(($3 + [40])) = *((($5 + [32]) + [40]))
	*(($3 + [32])) = *((($5 + [32]) + [32]))
	*(($3 + [24])) = *((($5 + [32]) + [24]))
	*(($3 + [16])) = *((($5 + [32]) + [16]))
	*(($3 = ($1 + [28]))) = (*($3) + [48])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	CALL $2($8)
	$8 = *($7)
	CALL __multi3(($5 + [16]), $8, (int_64)$8 >> (int_64)63), (int_64)1000000000, (int_64)0)
	$8 = *($5 + [16])
	$11 = ((int_64)$8 + (int_64)*($10))
	*(($10 = ($3 + [16]))) = $11
	*(($3 = ($3 + [24]))) = ((int_64)((int_64)*(($5 + [24])) + (int_64)*($3)) + (int_64)(CASTING uint_64)(uint_32 (uint_64)($11 <= $8)))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	CALL $126(($1 + [24]), ($5 + [32]))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [10664])
	
.LABEL $label$3
	$7 = *(($1 + [24]))
	$10 = *(($1 + [28]))
	$9 = ($10 - $7)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$9 / (int_32)[48]))
	$3 = [60]
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$7 == (int_32)$10) ){ goto $label$13 }
	$10 = (((int_32)((uint_32)($9 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $3)
	if ( ($10 <= [513]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$10 = ($3 + [-36])
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$11 }
	
.LABEL $label$12
	$3 = ($4 - (($10 + [15]) & [-16]))
	$global$0 = $3
	goto $label$10 
	
.LABEL $label$11
	$3 = CALL $161($10)
	
.LABEL $label$10
	*($5 + [36]) = $3
	*($5 + [32]) = $3
	*($5 + [40]) = ($3 + $10)
	CALL $119(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [40]), $2, $3, $10)
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$16 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $164($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$14 }
	
.LABEL $label$15
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$14
	$global$0 = ($5 + [80])
}

int_32 .FUNC $32 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [368])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = [0]
	$2 = [0]
	$8 = CALL action_data_size()
	if ( ($8 == 0) ){ goto $label$1 }
	if ( ($8 <= [513]) ){ goto $label$3 }
	$2 = CALL $161($8)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($8 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $8)
	
.LABEL $label$1
	*($4 + [328]) = [0]
	*($4 + [320]) = (int_64)0
	*($4 + [308]) = $2
	*($4 + [304]) = $2
	*($4 + [312]) = ($2 + $8)
	CALL $72(($4 + [304]), ($4 + [320]))
	$3 = *($4 + [312])
	*((($4 + [16]) + [8])) = $3
	*(($4 + [8])) = $3
	$9 = *($4 + [304])
	*($4) = $9
	*($4 + [16]) = $9
	$10 = CALL $10(($4 + [32]), $0, $1, $4)
	*($4 + [344]) = [0]
	*($4 + [336]) = (int_64)0
	$3 = (*($4 + [324]) - *($4 + [320]))
	if ( ($3 == 0) ){ goto $label$6 }
	$11 = int_32($3 >> [4])
	if ( ((uint_32)$11 >= (uint_32)[268435456]) ){ goto $label$5 }
	$7 = CALL _Znwj($3)
	*(($4 + [344])) = ($7 + ($11 << [4]))
	*($4 + [336]) = $7
	*($4 + [340]) = $7
	$11 = *($4 + [320])
	$3 = (*($4 + [324]) - $11)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($7, $11, $3)
	$7 = (*($4 + [340]) + $3)
	*($4 + [340]) = $7
	
.LABEL $label$6
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	*($4 + [360]) = [0]
	*($4 + [352]) = (int_64)0
	$7 = ($7 - *($4 + [336]))
	if ( ($7 == 0) ){ goto $label$8 }
	$5 = int_32($7 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$4 }
	$7 = CALL _Znwj($7)
	*(($4 + [360])) = ($7 + ($5 << [4]))
	*($4 + [352]) = $7
	*($4 + [356]) = $7
	$11 = *($4 + [336])
	$5 = (*($4 + [340]) - $11)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($7, $11, $5)
	*($4 + [356]) = ($7 + $5)
	
.LABEL $label$8
	CALL void $3((int_32 ($4 + [352])), (int_32 $6))
	$7 = *($4 + [352])
	if ( ($7 == 0) ){ goto $label$9 }
	*($4 + [356]) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$9
	$7 = *($4 + [336])
	if ( ($7 == 0) ){ goto $label$10 }
	*($4 + [340]) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$10
	if ( ($8 <= [513]) ){ goto $label$11 }
	CALL $164($2)
	
.LABEL $label$11
	CALL $11($10)
	$2 = *($4 + [320])
	if ( ($2 == 0) ){ goto $label$12 }
	*($4 + [324]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$12
	$global$0 = ($4 + [368])
	return [1]
	
.LABEL $label$5
	CALL $150(($4 + [336]))
	
.LABEL $label$4
	CALL $150(($4 + [352]))
	(unreachable)
	return (unreachable)
}

void .FUNC $33 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$3 = ($global$0 - [192])
	$global$0 = $3
	if ( CALL has_auth($1) ){ goto $label$1 }
	*($3 + [152]) = [8511]
	*($3 + [156]) = CALL $158([8511])
	*($3 + [40]) = *($3 + [152])
	if ( CALL has_auth(*(CALL $4(($3 + [160]), ($3 + [40])))) ){ goto $label$1 }
	CALL eosio_assert([0], [8524])
	
.LABEL $label$1
	if ( ((int_64)*($2 + [8]) == (int_64)87167674696196) ){ goto $label$2 }
	CALL eosio_assert([0], [8901])
	
.LABEL $label$2
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$3 }
	CALL eosio_assert([0], [8954])
	
.LABEL $label$3
	$4 = ($0 + [32])
	$5 = *(($0 + [60]))
	if ( ((int_32)$5 == (int_32)*(($0 + [56]))) ){ goto $label$6 }
	$5 = *(($5 + [-24]))
	if ( ((int_32)*($5 + [48]) == (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$7
	if ( $5 ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$5 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)-3660748222285835776, (int_64)-3660748222285835776)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)*(CALL $48($4, $5) + [48]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [10407])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [8981])
	
.LABEL $label$4
	$6 = ($0 + [112])
	$8 = *(($0 + [140]))
	$7 = *(($0 + [136]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$9 }
	
.LOOP $label$11:
	$5 = ($8 + [-24])
	$9 = *($5)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$10 }
	$8 = $5
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$9 }
	if ( ((int_32)*($9 + [36]) == (int_32)$6) ){ goto $label$8 }
	CALL eosio_assert([0], [10407])
	goto $label$8 
	
.LABEL $label$9
	$9 = [0]
	$5 = CALL db_find_i64(*($6), *(($0 + [120])), (int_64)-4157661132521209856, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$8 }
	$9 = CALL $37($6, $5)
	if ( ((int_32)*($9 + [36]) == (int_32)$6) ){ goto $label$8 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$8
	$10 = ($0 + [192])
	$8 = *(($0 + [220]))
	$6 = *(($0 + [216]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$18:
	$5 = ($8 + [-24])
	$7 = *($5)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$17 }
	$8 = $5
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$16 }
	if ( ((int_32)*($7 + [24]) == (int_32)$10) ){ goto $label$15 }
	CALL eosio_assert([0], [10407])
	$11 = *($7 + [8])
	if ( $9 ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$16
	$7 = [0]
	$5 = CALL db_find_i64(*($10), *(($0 + [200])), (int_64)-3102536757353119744, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$14 }
	$7 = CALL $49($10, $5)
	if ( ((int_32)*($7 + [24]) == (int_32)$10) ){ goto $label$15 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$15
	$11 = *($7 + [8])
	if ( $9 ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	$11 = (int_64)0
	if ( $9 ){ goto $label$12 }
	
.LABEL $label$13
	CALL eosio_assert([0], [9035])
	
.LABEL $label$12
	if ( ((int_64)*($2) <= (int_64))(*($9 + [8]) - $11)) ){ goto $label$19 }
	CALL eosio_assert([0], [9076])
	
.LABEL $label$19
	CALL $50(($3 + [96]), $4)
	if ( (*($3 + [120]) == 0) ){ goto $label$20 }
	CALL eosio_assert([0], [9132])
	
.LABEL $label$20
	if ( ($7 == 0) ){ goto $label$22 }
	*($3 + [64]) = [8511]
	*($3 + [68]) = CALL $158([8511])
	*($3 + [32]) = *($3 + [64])
	$5 = CALL $4(($3 + [72]), ($3 + [32]))
	*($3 + [96]) = $2
	CALL $51($10, $7, *($5), ($3 + [96]))
	goto $label$21 
	
.LABEL $label$22
	*($3 + [80]) = [8511]
	*($3 + [84]) = CALL $158([8511])
	*($3 + [24]) = *($3 + [80])
	$12 = *(CALL $4(($3 + [88]), ($3 + [24])))
	if ( ((int_64)*($10) == (int_64)CALL current_receiver()) ){ goto $label$23 }
	CALL eosio_assert([0], [10481])
	
.LABEL $label$23
	*(($5 = CALL _Znwj([40])) + [24]) = $10
	*($5) = $1
	*($5 + [8]) = *($2)
	*(($5 + [16])) = *(($2 + [8]))
	*($3 + [184]) = (($3 + [96]) + [24])
	*($3 + [180]) = ($3 + [96])
	*($3 + [176]) = ($3 + [96])
	CALL $52(($3 + [176]), $5)
	$11 = *($5)
	$7 = CALL db_store_i64(*(($0 + [200])), (int_64)-3102536757353119744, $12, $11, ($3 + [96]), [24])
	*($5 + [28]) = $7
	$8 = ($0 + [208])
	if ( (uint_64)($11 <= *($8)) ){ goto $label$24 }
	*($8) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$24
	*($3 + [176]) = $5
	$11 = *($5)
	*($3 + [96]) = $11
	*($3 + [172]) = $7
	$9 = ($0 + [220])
	$8 = *($9)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [224]))) ){ goto $label$26 }
	*($8 + [8]) = $11
	*($8 + [16]) = $7
	*($3 + [176]) = [0]
	*($8) = $5
	*($9) = ($8 + [24])
	$5 = *($3 + [176])
	*($3 + [176]) = [0]
	if ( $5 ){ goto $label$25 }
	goto $label$21 
	
.LABEL $label$26
	CALL $53(($0 + [216]), ($3 + [176]), ($3 + [96]), ($3 + [172]))
	$5 = *($3 + [176])
	*($3 + [176]) = [0]
	if ( ($5 == 0) ){ goto $label$21 }
	
.LABEL $label$25
	CALL _ZdlPv($5)
	
.LABEL $label$21
	$12 = *(($2 + [8]))
	*((($3 + [48]) + [8])) = $12
	$11 = *($2)
	*((($3 + [8]) + [8])) = $12
	*($3 + [48]) = $11
	*($3 + [8]) = $11
	CALL $54($5, $1, ($3 + [8]), [86400])
	$global$0 = ($3 + [192])
}

void .FUNC $30 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [176])
	$global$0 = $3
	*($3 + [128]) = $1
	*($3 + [112]) = [9309]
	*($3 + [116]) = CALL $158([9309])
	*($3 + [32]) = *($3 + [112])
	if ( CALL has_auth(*(CALL $4(($3 + [120]), ($3 + [32])))) ){ goto $label$1 }
	*($3 + [96]) = [9322]
	*($3 + [100]) = CALL $158([9322])
	*($3 + [24]) = *($3 + [96])
	if ( CALL has_auth(*(CALL $4(($3 + [104]), ($3 + [24])))) ){ goto $label$1 }
	*($3 + [80]) = [8511]
	*($3 + [84]) = CALL $158([8511])
	*($3 + [16]) = *($3 + [80])
	if ( CALL has_auth(*(CALL $4(($3 + [88]), ($3 + [16])))) ){ goto $label$1 }
	CALL eosio_assert([0], [9335])
	
.LABEL $label$1
	if ( ((int_64)*($2 + [8]) == (int_64)87167674696196) ){ goto $label$2 }
	CALL eosio_assert([0], [9392])
	
.LABEL $label$2
	$1 = *($3 + [128])
	if ( CALL is_account($1) ){ goto $label$3 }
	*($3 + [168]) = $1
	CALL $78(($3 + [144]), [9420], ($3 + [168]), [9433])
	if ( (*($3 + [144]) & [1]) ){ goto $label$5 }
	$4 = (($3 + [144]) | [1])
	goto $label$4 
	
.LABEL $label$5
	$4 = *($3 + [152])
	CALL _ZdlPv($4)
	
.LABEL $label$4
	CALL eosio_assert([0], $4)
	$1 = *($3 + [128])
	
.LABEL $label$3
	$5 = ($0 + [112])
	$7 = *(($0 + [140]))
	$6 = *(($0 + [136]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$8 }
	
.LOOP $label$10:
	$4 = ($7 + [-24])
	$8 = *($4)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$9 }
	$7 = $4
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$8 }
	if ( ((int_32)*($8 + [36]) == (int_32)$5) ){ goto $label$11 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$11
	if ( $8 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = CALL db_find_i64(*($5), *(($0 + [120])), (int_64)-4157661132521209856, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	$8 = CALL $37($5, $4)
	if ( ((int_32)*($8 + [36]) == (int_32)$5) ){ goto $label$7 }
	CALL eosio_assert([0], [10407])
	
.LABEL $label$7
	*($3 + [40]) = [8511]
	*($3 + [44]) = CALL $158([8511])
	*($3 + [8]) = *($3 + [40])
	$4 = CALL $4(($3 + [48]), ($3 + [8]))
	*($3 + [144]) = $2
	CALL $79($5, $8, *($4), ($3 + [144]))
	$global$0 = ($3 + [176])
	return 
	
.LABEL $label$6
	*($3 + [64]) = [8511]
	*($3 + [68]) = CALL $158([8511])
	*($3) = *($3 + [64])
	$4 = CALL $4(($3 + [72]), $3)
	*($3 + [60]) = $2
	*($3 + [56]) = ($3 + [128])
	*($3 + [168]) = *($4)
	if ( ((int_64)*($5) == (int_64)CALL current_receiver()) ){ goto $label$12 }
	CALL eosio_assert([0], [10481])
	
.LABEL $label$12
	*($3 + [144]) = $5
	*($3 + [148]) = ($3 + [56])
	*($3 + [152]) = ($3 + [168])
	*(($4 = CALL _Znwj([48])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16]) = (int_64)0
	*($4 + [24 align=4]) = (int_64)0
	*($4 + [32]) = [0]
	*($4 + [36]) = $5
	CALL $80(($3 + [144]), $4)
	*($3 + [160]) = $4
	$1 = *($4)
	*($3 + [144]) = $1
	$8 = *($4 + [40])
	*($3 + [140]) = $8
	$6 = ($0 + [140])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [144]))) ){ goto $label$15 }
	*($7 + [8]) = $1
	*($7 + [16]) = $8
	*($3 + [160]) = [0]
	*($7) = $4
	*($6) = ($7 + [24])
	$4 = *($3 + [160])
	*($3 + [160]) = [0]
	if ( ($4 == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $40(($0 + [136]), ($3 + [160]), ($3 + [144]), ($3 + [140]))
	$4 = *($3 + [160])
	*($3 + [160]) = [0]
	if ( $4 ){ goto $label$13 }
	
.LABEL $label$14
	$global$0 = ($3 + [176])
	return 
	
.LABEL $label$13
	$7 = *($4 + [24])
	if ( ($7 == 0) ){ goto $label$16 }
	*(($4 + [28])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$16
	CALL _ZdlPv($4)
	$global$0 = ($3 + [176])
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$2 = ($global$0 - [352])
	$global$0 = $2
	*($2 + [304]) = [9309]
	*($2 + [308]) = CALL $158([9309])
	*($2 + [56]) = *($2 + [304])
	CALL require_auth(*(CALL $4(($2 + [312]), ($2 + [56]))))
	*($2 + [240]) = [8511]
	*($2 + [244]) = CALL $158([8511])
	*($2 + [48]) = *($2 + [240])
	$3 = CALL $4(($2 + [248]), ($2 + [48]))
	$4 = CALL $41(($2 + [192]))
	$5 = ($0 + [32])
	CALL $42(($2 + [256]), $5, *($3), $4)
	*($2 + [280]) = [1]
	$3 = CALL db_lowerbound_i64(*($0 + [112]), *(($0 + [120])), (int_64)-4157661132521209856, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$6 = ($0 + [112])
	CALL $37($6, $3)
	*($2 + [176]) = [8511]
	*($2 + [180]) = CALL $158([8511])
	*($2 + [40]) = *($2 + [176])
	CALL $46($5, ($2 + [256]), *(CALL $4(($2 + [184]), ($2 + [40]))))
	*($2 + [160]) = [8511]
	*($2 + [164]) = CALL $158([8511])
	*($2 + [32]) = *($2 + [160])
	$3 = CALL $4(($2 + [168]), ($2 + [32]))
	*($2 + [144]) = [9517]
	*($2 + [148]) = CALL $158([9517])
	*($2 + [24]) = *($2 + [144])
	$4 = CALL $4(($2 + [152]), ($2 + [24]))
	*($2 + [128]) = [8511]
	$7 = *($4)
	$8 = *($3)
	*($2 + [132]) = CALL $158([8511])
	*($2 + [16]) = *($2 + [128])
	$9 = CALL $4(($2 + [136]), ($2 + [16]))
	*($2 + [112]) = [9580]
	*($2 + [116]) = CALL $158([9580])
	*($2 + [8]) = *($2 + [112])
	$10 = CALL $4(($2 + [120]), ($2 + [8]))
	*($2 + [72]) = [0]
	*($2 + [64]) = (int_64)0
	$3 = (*($1 + [4]) - *($1))
	if ( ($3 == 0) ){ goto $label$3 }
	$4 = int_32($3 >> [4])
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$1 }
	$3 = CALL _Znwj($3)
	*(($2 + [72])) = ($3 + ($4 << [4]))
	*($2 + [64]) = $3
	*($2 + [68]) = $3
	$4 = *($1)
	$1 = (*(($1 + [4])) - $4)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($3, $4, $1)
	*($2 + [68]) = (*($2 + [68]) + $1)
	
.LABEL $label$3
	$1 = [0]
	$5 = [0]
	$0 = CALL db_lowerbound_i64(*(($0 + [112])), *(($0 + [120])), (int_64)-4157661132521209856, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $37($6, $0)
	
.LABEL $label$4
	$0 = ($2 + [72])
	$6 = *($0)
	*($0) = [0]
	$3 = *($2 + [64])
	*($2 + [80]) = $3
	$4 = *($2 + [68])
	*($2 + [84]) = $4
	*($2 + [64]) = (int_64)0
	*($2 + [104]) = [80]
	$11 = *($5)
	*($2 + [192]) = *($9)
	*($2 + [200]) = *($10)
	*($2 + [96]) = $11
	*($2 + [88]) = $6
	*(($0 = CALL _Znwj([16]))) = $8
	*($0 + [8]) = $7
	*(($2 + [228])) = [0]
	$5 = ($0 + [16])
	*(($2 + [216])) = $5
	*(($2 + [212])) = $5
	*($2 + [208]) = $0
	*($2 + [220 align=4]) = (int_64)0
	$0 = ($4 - $3)
	$7 = (CASTING uint_64)(uint_32 int_32($0 >> [4]))
	$5 = ($2 + [220])
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$6 }
	$1 = (($0 & [-16]) + $1)
	
.LABEL $label$6
	$1 = ($1 + [12])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL $60($5, $1)
	$0 = *(($2 + [224]))
	$1 = *(($2 + [220]))
	goto $label$7 
	
.LABEL $label$8
	$0 = [0]
	$1 = [0]
	
.LABEL $label$7
	*($2 + [324]) = $1
	*($2 + [320]) = $1
	*($2 + [328]) = $0
	*($2 + [336]) = ($2 + [320])
	*($2 + [344]) = ($2 + [80])
	CALL $73(($2 + [344]), ($2 + [336]))
	CALL $69(($2 + [192]))
	$1 = *($2 + [220])
	if ( ($1 == 0) ){ goto $label$9 }
	*(($2 + [224])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$1 = *($2 + [208])
	if ( ($1 == 0) ){ goto $label$10 }
	*(($2 + [212])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$1 = *($2 + [80])
	if ( ($1 == 0) ){ goto $label$11 }
	*($2 + [84]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$11
	$1 = *($2 + [64])
	if ( ($1 == 0) ){ goto $label$2 }
	*($2 + [68]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$2
	$global$0 = ($2 + [352])
	return (unreachable)
	
.LABEL $label$1
	CALL $150(($2 + [64]))
}

void .FUNC $164 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [19468])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [19276]
	$3 = (((int_32)$1 * (int_32)[12]) + [19276])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

void .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$1 }
	CALL $63($1, *($5), *($5 + [4]))
	
.LABEL $label$1
	*($1 + [16]) = *($5 + [16])
	*(($1 + [24])) = *(($5 + [24]))
	$6 = ($1 + [16])
	$8 = *($1)
	$7 = *($1 + [4])
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [4]))
	$5 = [0]
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$3 }
	$5 = (($9 & [-16]) + $5)
	
.LABEL $label$3
	$7 = ($5 + [12])
	if ( ($7 <= [513]) ){ goto $label$5 }
	$5 = CALL $161($7)
	goto $label$4 
	
.LABEL $label$5
	$5 = ($2 - (($7 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$4
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($5 + $7)
	$8 = *($2 + [4])
	$2 = CALL $128($3, $1)
	if ( ((int_32)(*($2 + [8]) - $8) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10392])
	$8 = *(($2 + [4]))
	
.LABEL $label$6
	CALL memcpy($8, $6, [8])
	$6 = (*($8) + [8])
	*(($8 = ($2 + [4]))) = $6
	$9 = ($1 + [24])
	if ( ((int_32)(*(($2 + [8])) - $6) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [10392])
	$6 = *($8)
	
.LABEL $label$7
	CALL memcpy($6, $9, [4])
	*($8) = (*($8) + [4])
	*($1 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)-8524869779563368672, *(*($0 + [8])), (int_64)-8524869779563368672, $5, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)*($4 + [16]) <= (uint_64)(int_64)-8524869779563368672) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $164($5)
	if ( ((uint_64)*($4 + [16]) > (uint_64)(int_64)-8524869779563368672) ){ goto $label$8 }
	
.LABEL $label$9
	*(($4 + [16])) = (int_64)-8524869779563368671
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [16])
}

int_32 .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10398])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10398])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10398])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10398])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [24])) = *($2 + [8])
	*($3) = (*($3) + [8])
	$0 = CALL $116($0, ($1 + [32]))
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $161 (int_32 $0)
{
	return CALL $162([11084], $0)
}