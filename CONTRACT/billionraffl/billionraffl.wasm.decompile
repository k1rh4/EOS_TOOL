(data (i32.const 8193) "Raffle is disabled.\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 8299) "Reset the raffle.\00")
(data (i32.const 8317) "Invalid action for this stage of the game.\00")
(data (i32.const 8360) "XBL\00")
(data (i32.const 8364) "Raffle doesn\'t need to be reset.\00")
(data (i32.const 8397) "Player not found. Wait for next raffle.\00")
(data (i32.const 8437) "Player hash doesn\'t match.\00")
(data (i32.const 8464) "Player not found.\00")
(data (i32.const 8482) "write\00")
(data (i32.const 8488) "string is too long to be a valid symbol_code\00")
(data (i32.const 8533) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 8586) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 8635) "invalid symbol name\00")
(data (i32.const 8655) "attempt to add asset with different symbol\00")
(data (i32.const 8698) "addition underflow\00")
(data (i32.const 8717) "addition overflow\00")
(data (i32.const 8735) "attempt to subtract asset with different symbol\00")
(data (i32.const 8783) "subtraction underflow\00")
(data (i32.const 8805) "subtraction overflow\00")
(data (i32.const 8826) "error reading iterator\00")
(data (i32.const 8849) "read\00")
(data (i32.const 8854) "cannot increment end iterator\00")
(data (i32.const 8884) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 8935) "cannot pass end iterator to erase\00")
(data (i32.const 8969) "object passed to erase is not in multi_index\00")
(data (i32.const 9014) "cannot erase objects in table of another contract\00")
(data (i32.const 9064) "attempt to remove object that was not in multi_index\00")
(data (i32.const 9117) "singleton does not exist\00")
(data (i32.const 9142) "cannot pass end iterator to modify\00")
(data (i32.const 9177) "object passed to modify is not in multi_index\00")
(data (i32.const 9223) "cannot modify objects in table of another contract\00")
(data (i32.const 9274) "updater cannot change primary key when modifying an object\00")
(data (i32.const 9333) "cannot create objects in table of another contract\00")
(import "env" "memcpy" (func $fimport$0 (param i32 i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$1 (param i32 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$2 (param i64 i64 i64 i64) (result i32)))
(import "env" "eosio_assert" (func $fimport$3 (param i32 i32)))
(import "env" "db_next_i64" (func $fimport$4 (param i32 i32) (result i32)))
(import "env" "db_find_i64" (func $fimport$5 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_time" (func $fimport$6 (result i64)))
(import "env" "require_auth" (func $fimport$7 (param i64)))
(import "env" "sha256" (func $fimport$8 (param i32 i32 i32)))
(import "env" "current_receiver" (func $fimport$9 (result i64)))
(import "env" "db_store_i64" (func $fimport$10 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$11 (param i32 i64 i32 i32)))
(import "env" "assert_sha256" (func $fimport$12 (param i32 i32 i32)))
(import "env" "action_data_size" (func $fimport$13 (result i32)))
(import "env" "read_action_data" (func $fimport$14 (param i32 i32) (result i32)))
(import "env" "db_get_i64" (func $fimport$15 (param i32 i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$16 (param i32)))
(import "env" "abort" (func $fimport$17))
(import "env" "memset" (func $fimport$18 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$19 (param i32 i32 i32) (result i32)))
(import "env" "prints_l" (func $fimport$20 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$21 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$22 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$23 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$24 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$25 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$26 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$27 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$28 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$29 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$30 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$31 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$32 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$33 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$34 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$35 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$36 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$37 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$38 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$39 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $33))
(export "_Znwj" (func $49))
(export "_ZdlPv" (func $51))
(export "_Znaj" (func $50))
(export "_ZdaPv" (func $52))
(export "_ZnwjSt11align_val_t" (func $53))
(export "_ZnajSt11align_val_t" (func $54))
(export "_ZdlPvSt11align_val_t" (func $55))
(export "_ZdaPvSt11align_val_t" (func $56))
(table $0 6 6 anyfunc)
(elem (i32.const 1) $32 $11 $31 $28 $15)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 17800))
(global $global$2 i32 (i32.const 17800))


int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8826])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $65($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	*(($5 = CALL _Znwj([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [28]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [24])
	CALL $47(($3 + [32]), ($3 + [24]))
	*($5 + [32]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [32]) = $6
	*($3 + [4]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $22(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $68($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $62 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

void .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [5])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[134217728]) ){ goto $label$3 }
	$6 = [134217727]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [5]) > (uint_32)[67108862]) ){ goto $label$5 }
	$6 = int_32($7 >> [4])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL _Znwj(($6 << [5]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $58($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [5])))) = *($1)
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 - $1)
	$6 = ($5 + ($6 << [5]))
	$4 = ($4 + [32])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL _ZdlPv($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $67($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($9)), [8213])
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$10:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$12 }
	
.LOOP $label$13:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$12 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$13 }
	
.LABEL $label$12
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$14 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$11
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$10 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $65 (int_32 $0)
{
	return CALL $66([9404], $0)
}

int_32 .FUNC $39 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [176]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [180])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL _ZdlPv($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [176]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *(($0 + [136]))
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [140])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL _ZdlPv($4)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($0 + [136]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$1 = *(($0 + [96]))
	if ( ($1 == 0) ){ goto $label$11 }
	$2 = ($0 + [100])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	CALL _ZdlPv($4)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$14 }
	$3 = *(($0 + [96]))
	goto $label$12 
	
.LABEL $label$13
	$3 = $1
	
.LABEL $label$12
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$11
	$1 = *(($0 + [56]))
	if ( ($1 == 0) ){ goto $label$16 }
	$2 = ($0 + [60])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$20 }
	CALL _ZdlPv($4)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$19 }
	$3 = *(($0 + [56]))
	goto $label$17 
	
.LABEL $label$18
	$3 = $1
	
.LABEL $label$17
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $67 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [9396]) == 0) ){ goto $label$2 }
	$2 = *([0] + [9400])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [9396]) = [1]
	$2 = ($2 << [16])
	*([0] + [9400]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [9400])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [9400]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [9396]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [9396]) = [1]
	$3 = ($3 << [16])
	*([0] + [9400]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [9400])
	
.LABEL $label$10
	*([0] + [9400]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

void .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[31]), [8482])
	CALL memcpy(*($4 + [4]), $3, [32])
	*($4 + [4]) = (*($4 + [4]) + [32])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[31]), [8482])
	CALL memcpy(*($4 + [4]), $3, [32])
	*($4 + [4]) = (*($4 + [4]) + [32])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[0]), [8482])
	CALL memcpy(*($4 + [4]), $0, [1])
	*($4 + [4]) = (*($4 + [4]) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $28 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	$4 = ($global$0 - [176])
	$global$0 = $4
	CALL require_auth((int_64)4297304112115340688)
	CALL $10($0, [1])
	$5 = ($0 + [72])
	$7 = *(($0 + [100]))
	$6 = *(($0 + [96]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$3 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(($9 + [100])) == (int_32)$5), [8884])
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [80])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $6($5, $8)
	CALL eosio_assert(((int_32)*($9 + [100]) == (int_32)$5), [8884])
	
.LABEL $label$1
	$7 = ($0 + [32])
	$8 = *(($0 + [60]))
	if ( ((int_32)$8 == (int_32)*(($0 + [56]))) ){ goto $label$6 }
	$8 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [48]) == (int_32)$7), [8884])
	goto $label$5 
	
.LABEL $label$6
	$8 = [0]
	$6 = CALL db_find_i64(*($7), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $9($7, $6)
	CALL eosio_assert(((int_32)*($8 + [48]) == (int_32)$7), [8884])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [9117])
	$10 = *($0)
	$11 = *($8 + [40])
	if ( ($9 == 0) ){ goto $label$8 }
	CALL eosio_assert([1], [9142])
	CALL eosio_assert(((int_32)*($9 + [100]) == (int_32)$5), [9177])
	CALL eosio_assert(((int_64)*(($0 + [72])) == (int_64)CALL $fimport$9()), [9223])
	*(($9 + [24])) = *(($3 + [8]))
	*($9 + [16]) = *($3)
	*(($9 + [32])) = *(($3 + [16]))
	*(($9 + [40])) = *(($3 + [24]))
	$1 = *($9)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($9 + [88]))), [8655])
	$12 = ((int_64)*($9 + [80]) + (int_64)*($2))
	*($9 + [80]) = $12
	CALL eosio_assert(((int_64)$12 > (int_64)-4611686018427387904), [8698])
	CALL eosio_assert(((int_64)*($9 + [80]) < (int_64)4611686018427387904), [8717])
	CALL eosio_assert(((int_64)$1 == (int_64)*($9)), [9274])
	*($4 + [160]) = (($4 + [48]) + [89])
	*($4 + [156]) = ($4 + [48])
	*($4 + [152]) = ($4 + [48])
	*($4 + [168]) = ($4 + [152])
	*($4 + [4]) = ($9 + [16])
	*($4) = $9
	*($4 + [8]) = ($9 + [48])
	*($4 + [12]) = ($9 + [80])
	*($4 + [16]) = ($9 + [96])
	CALL $29($4, ($4 + [168]))
	CALL db_update_i64(*($9 + [104]), $10, ($4 + [48]), [89])
	$8 = ($0 + [88])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$7 }
	*($8) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert(((int_64)*(($0 + [72])) == (int_64)CALL $fimport$9()), [9333])
	*(($8 = CALL _Znwj([112])) + [100]) = $5
	*($8) = $1
	*($8 + [96]) = [0]
	*($8 + [16]) = *($3)
	*(($8 + [24])) = *(($3 + [8]))
	*(($8 + [32])) = *(($3 + [16]))
	*(($8 + [40])) = *(($3 + [24]))
	*($8 + [80]) = *($2)
	*(($8 + [88])) = *(($2 + [8]))
	*($4 + [160]) = (($4 + [48]) + [89])
	*($4 + [156]) = ($4 + [48])
	*($4 + [152]) = ($4 + [48])
	*($4 + [168]) = ($4 + [152])
	*($4 + [4]) = ($8 + [16])
	*($4) = $8
	*($4 + [8]) = ($8 + [48])
	*($4 + [12]) = ($8 + [80])
	*($4 + [16]) = ($8 + [96])
	CALL $29($4, ($4 + [168]))
	$1 = *($8)
	$6 = CALL db_store_i64(*(($0 + [80])), (int_64)-6030912142679474176, $10, $1, ($4 + [48]), [89])
	*($8 + [104]) = $6
	$9 = ($0 + [88])
	if ( (uint_64)($1 <= *($9)) ){ goto $label$9 }
	*($9) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($4) = $8
	$1 = *($8)
	*($4 + [48]) = $1
	*($4 + [152]) = $6
	$3 = ($0 + [100])
	$9 = *($3)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [104]))) ){ goto $label$12 }
	*($9 + [8]) = $1
	*($9 + [16]) = $6
	*($4) = [0]
	*($9) = $8
	*($3) = ($9 + [24])
	$8 = *($4)
	*($4) = [0]
	if ( $8 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $30(($0 + [96]), $4, ($4 + [48]), ($4 + [152]))
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL _ZdlPv($8)
	
.LABEL $label$10
	$11 = ((int_64)$11 + (int_64)1)
	
.LABEL $label$7
	$8 = *(($0 + [60]))
	if ( ((int_32)$8 == (int_32)*(($0 + [56]))) ){ goto $label$14 }
	$9 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [48]) == (int_32)$7), [8884])
	goto $label$13 
	
.LABEL $label$14
	$9 = [0]
	$8 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$13 }
	$9 = CALL $9($7, $8)
	CALL eosio_assert(((int_32)*($9 + [48]) == (int_32)$7), [8884])
	
.LABEL $label$13
	$8 = [0]
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [9117])
	*($4 + [48]) = *($9)
	$9 = *(($0 + [60]))
	if ( ((int_32)$9 == (int_32)*(($0 + [56]))) ){ goto $label$16 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [48]) == (int_32)$7), [8884])
	goto $label$15 
	
.LABEL $label$16
	$9 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	$8 = CALL $9($7, $9)
	CALL eosio_assert(((int_32)*($8 + [48]) == (int_32)$7), [8884])
	
.LABEL $label$15
	$9 = [0]
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [9117])
	*($4 + [52]) = *($8 + [4])
	$8 = *(($0 + [60]))
	if ( ((int_32)$8 == (int_32)*(($0 + [56]))) ){ goto $label$18 }
	$9 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [48]) == (int_32)$7), [8884])
	goto $label$17 
	
.LABEL $label$18
	$8 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$17 }
	$9 = CALL $9($7, $8)
	CALL eosio_assert(((int_32)*($9 + [48]) == (int_32)$7), [8884])
	
.LABEL $label$17
	$8 = [0]
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [9117])
	*(($4 + [56])) = *($9 + [8])
	$6 = ($4 + [64])
	$9 = *(($0 + [60]))
	if ( ((int_32)$9 == (int_32)*(($0 + [56]))) ){ goto $label$20 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [48]) == (int_32)$7), [8884])
	goto $label$19 
	
.LABEL $label$20
	$9 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$19 }
	$8 = CALL $9($7, $9)
	CALL eosio_assert(((int_32)*($8 + [48]) == (int_32)$7), [8884])
	
.LABEL $label$19
	$9 = [0]
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [9117])
	$1 = *(($8 + [16]))
	$10 = *(($8 + [8]))
	$12 = *(($8 + [32]))
	$13 = *(($8 + [40]))
	$14 = *($8)
	$15 = *(($8 + [24]))
	*(($6 + [8])) = $15
	*(($4 + [40])) = $13
	*(($4 + [32])) = $12
	*(($4 + [24])) = $15
	*(($4 + [8])) = $10
	*($6) = $1
	*(($4 + [16])) = $1
	*($4) = $14
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*((($4 + [48]) + [24]))), [8655])
	$1 = ((int_64)*($4 + [64]) + (int_64)*($2))
	*($4 + [64]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [8698])
	CALL eosio_assert(((int_64)$1 < (int_64)4611686018427387904), [8717])
	$8 = *(($0 + [60]))
	if ( ((int_32)$8 == (int_32)*(($0 + [56]))) ){ goto $label$22 }
	$9 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [48]) == (int_32)$7), [8884])
	goto $label$21 
	
.LABEL $label$22
	$8 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$21 }
	$9 = CALL $9($7, $8)
	CALL eosio_assert(((int_32)*($9 + [48]) == (int_32)$7), [8884])
	
.LABEL $label$21
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [9117])
	*(($4 + [80])) = *($9 + [32])
	*($4 + [88]) = $11
	CALL $12($7, ($4 + [48]), *($0))
	$global$0 = ($4 + [176])
}

void .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[0]), [8482])
	CALL memcpy(*($4 + [4]), $0, [1])
	*($4 + [4]) = (*($4 + [4]) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*(($1 + [28])) == (int_32)$0), [8969])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$9()), [9014])
	$2 = *($0 + [24])
	$3 = $2
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$1 }
	$6 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) != (int_64)$6) ){ goto $label$2 }
	$3 = $5
	goto $label$1 
	
.LABEL $label$2
	$7 = ($2 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($5 + [-48])
	$3 = ($5 + [-24])
	$5 = $3
	if ( ((int_64)*(*($8)) != (int_64)$6) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$3 = $2
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)$2), [9064])
	$2 = *($4)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$7 }
	$5 = $3
	
.LOOP $label$8:
	$8 = *($5)
	*($5) = [0]
	$7 = ($5 + [-24])
	$3 = *($7)
	*($7) = $8
	if ( ($3 == 0) ){ goto $label$9 }
	CALL _ZdlPv($3)
	
.LABEL $label$9
	*(($5 + [-8])) = *(($5 + [16]))
	*(($5 + [-16])) = *(($5 + [8]))
	$5 = ($5 + [24])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = ($3 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL _ZdlPv($5)
	
.LABEL $label$11
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [32]))
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8826])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $65($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	*(($5 = CALL _Znwj([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [24])
	CALL $48(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [32]) = $6
	*($3 + [4]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $27(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $68($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $58($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [8969])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$9()), [9014])
	$2 = *($0 + [24])
	$3 = $2
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$1 }
	$6 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) != (int_64)$6) ){ goto $label$2 }
	$3 = $5
	goto $label$1 
	
.LABEL $label$2
	$7 = ($2 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($5 + [-48])
	$3 = ($5 + [-24])
	$5 = $3
	if ( ((int_64)*(*($8)) != (int_64)$6) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$3 = $2
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)$2), [9064])
	$2 = *($4)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$7 }
	$5 = $3
	
.LOOP $label$8:
	$8 = *($5)
	*($5) = [0]
	$7 = ($5 + [-24])
	$3 = *($7)
	*($7) = $8
	if ( ($3 == 0) ){ goto $label$9 }
	CALL _ZdlPv($3)
	
.LABEL $label$9
	*(($5 + [-8])) = *(($5 + [16]))
	*(($5 + [-16])) = *(($5 + [8]))
	$5 = ($5 + [24])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = ($3 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL _ZdlPv($5)
	
.LABEL $label$11
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[40])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[40])
	if ( ((uint_32)$7 > (uint_32)[53687090]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$6 * (int_32)[40]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $58($0)
	
.LABEL $label$1
	*(($4 = ($5 + ((int_32)$4 * (int_32)[40])))) = *($1)
	*(($4 + [32])) = *(($1 + [32]))
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 + ((int_32)((int_32)$1 / (int_32)[-40]) * (int_32)[40]))
	$6 = ($5 + ((int_32)$6 * (int_32)[40]))
	$4 = ($4 + [40])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $27 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $58($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), $0, [8])
	$1 = (*($4 + [4]) + [8])
	*($4 + [4]) = $1
	*($2 + [8]) = *($0 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $1) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $65($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [9384])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $65($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8849])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8849])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [8849])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8849])
	CALL memcpy($0, *($4 + [4]), [8])
	$1 = (*($4 + [4]) + [8])
	*($4 + [4]) = $1
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $1) > (uint_32)[7]), [8849])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($0 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $68 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [17788])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [17596]
	$3 = (((int_32)$1 * (int_32)[12]) + [17596])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8849])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[31]), [8849])
	CALL memcpy($3, *($4 + [4]), [32])
	*($4 + [4]) = (*($4 + [4]) + [32])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[31]), [8849])
	CALL memcpy($3, *($4 + [4]), [32])
	*($4 + [4]) = (*($4 + [4]) + [32])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8849])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [8849])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((int_32)*($4 + [8]) != (int_32)*($4 + [4])), [8849])
	CALL memcpy($0, *($4 + [4]), [1])
	*($4 + [4]) = (*($4 + [4]) + [1])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [8482])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $4) >= (int_32)$6), [8482])
	$4 = ($0 + [4])
	CALL memcpy(*($4), $7, $6)
	*($4) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [8482])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$2 }
	$6 = ($0 + [4])
	
.LOOP $label$3:
	$5 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[7]), [8482])
	CALL memcpy(*($6), $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[7]), [8482])
	CALL memcpy(*($6), ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8849])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8849])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $3) > (uint_32)[7]), [8849])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*(($0 + [16])) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[31]), [8849])
	CALL memcpy(($0 + [32]), *($4 + [4]), [32])
	*($4 + [4]) = (*($4 + [4]) + [32])
	$global$0 = ($2 + [16])
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8849])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8849])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [8849])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)*($4 + [8]) != (int_32)*($4 + [4])), [8849])
	CALL memcpy($0, *($4 + [4]), [1])
	*($4 + [4]) = (*($4 + [4]) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[3]), [8482])
	CALL memcpy(*($4 + [4]), $3, [4])
	*($4 + [4]) = (*($4 + [4]) + [4])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[3]), [8482])
	CALL memcpy(*($4 + [4]), $3, [4])
	*($4 + [4]) = (*($4 + [4]) + [4])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[0]), [8482])
	CALL memcpy(*($4 + [4]), $3, [1])
	*($4 + [4]) = (*($4 + [4]) + [1])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0 + [20])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), $0, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $45 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $58($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[3]), [8849])
	CALL memcpy($3, *($4 + [4]), [4])
	*($4 + [4]) = (*($4 + [4]) + [4])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[3]), [8849])
	CALL memcpy($3, *($4 + [4]), [4])
	*($4 + [4]) = (*($4 + [4]) + [4])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)*($4 + [8]) != (int_32)*($4 + [4])), [8849])
	CALL memcpy($3, *($4 + [4]), [1])
	*($4 + [4]) = (*($4 + [4]) + [1])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8849])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [8849])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8849])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0 + [20])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8849])
	CALL memcpy($0, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $68($0)
	
.LABEL $label$1
}

void .FUNC $60 (int_32 $0)
{
}

void .FUNC $8 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($0 + [32])
	$2 = *(($0 + [60]))
	if ( ((int_32)$2 == (int_32)*(($0 + [56]))) ){ goto $label$2 }
	$3 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [48]) == (int_32)$1), [8884])
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	$2 = CALL db_find_i64(*($1), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $9($1, $2)
	CALL eosio_assert(((int_32)*($3 + [48]) == (int_32)$1), [8884])
	
.LABEL $label$1
	$2 = [0]
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [8193])
	$3 = *(($0 + [60]))
	if ( ((int_32)$3 == (int_32)*(($0 + [56]))) ){ goto $label$4 }
	$2 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$1), [8884])
	goto $label$3 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $9($1, $3)
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$1), [8884])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [9117])
	if ( ((int_32)*($2 + [8]) != (int_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([1], [8193])
	return 
	
.LABEL $label$5
	$2 = *(($0 + [60]))
	if ( ((int_32)$2 == (int_32)*(($0 + [56]))) ){ goto $label$7 }
	$2 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$1), [8884])
	goto $label$6 
	
.LABEL $label$7
	$2 = [0]
	$0 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	$2 = CALL $9($1, $0)
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$1), [8884])
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [9117])
	CALL eosio_assert(((int_32)*($2 + [8]) == (int_32)[2]), [8193])
}

int_32 .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8826])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $65($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $4)
	*(($5 = CALL _Znwj([64])) + [16]) = (int_64)0
	*($5) = [0]
	*($5 + [24]) = (int_64)0
	*($5 + [48]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [4])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [8])
	*($3 + [52]) = ($5 + [16])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [40])
	CALL $44(($3 + [40]), ($3 + [32]))
	*($5 + [52]) = $1
	*($3 + [32]) = $5
	*($3 + [40]) = (int_64)7035939317486714880
	*($3 + [12]) = $1
	$6 = ($0 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($7 + [8]) = (int_64)7035939317486714880
	*($7 + [16]) = $1
	*($3 + [32]) = [0]
	*($7) = $5
	*($6) = ($7 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $45(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $68($2)
	
.LABEL $label$6
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [64])
	return $5
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8826])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $65($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $4)
	*(($5 = CALL _Znwj([112])) + [80]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [100]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [16])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [48])
	*($3 + [52]) = ($5 + [80])
	*($3 + [56]) = ($5 + [96])
	CALL $43(($3 + [40]), ($3 + [32]))
	*($5 + [104]) = $1
	*($3 + [32]) = $5
	$6 = *($5)
	*($3 + [40]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [32]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $30(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $68($2)
	
.LABEL $label$6
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*(($1 + [100])) == (int_32)$0), [8969])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$9()), [9014])
	$2 = *($0 + [24])
	$3 = $2
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$1 }
	$6 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) != (int_64)$6) ){ goto $label$2 }
	$3 = $5
	goto $label$1 
	
.LABEL $label$2
	$7 = ($2 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($5 + [-48])
	$3 = ($5 + [-24])
	$5 = $3
	if ( ((int_64)*(*($8)) != (int_64)$6) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$3 = $2
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)$2), [9064])
	$2 = *($4)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$7 }
	$5 = $3
	
.LOOP $label$8:
	$8 = *($5)
	*($5) = [0]
	$7 = ($5 + [-24])
	$3 = *($7)
	*($7) = $8
	if ( ($3 == 0) ){ goto $label$9 }
	CALL _ZdlPv($3)
	
.LABEL $label$9
	*(($5 + [-8])) = *(($5 + [16]))
	*(($5 + [-16])) = *(($5 + [8]))
	$5 = ($5 + [24])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = ($3 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL _ZdlPv($5)
	
.LABEL $label$11
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $8
	CALL db_remove_i64(*(($1 + [104])))
}

void .FUNC $4 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = [16]
	$4 = ($1 + [16])
	$6 = *($1 + [16])
	$5 = *(($1 + [20]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [4]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = (($7 & [-16]) + $3)
	
.LABEL $label$2
	$6 = *(($1 + [32]))
	$5 = *($1 + [28])
	$3 = (($5 - $3) - $6)
	$7 = ($1 + [28])
	$8 = (CASTING uint_64)(uint_32 ($6 - $5))
	
.LOOP $label$3:
	$3 = ($3 + [-1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	$5 = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $2($0, ([0] - $3))
	$5 = *(($0 + [4]))
	$3 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$3 = [0]
	
.LABEL $label$4
	*($2) = $3
	*($2 + [8]) = $5
	$0 = ($5 - $3)
	CALL eosio_assert(((int_32)$0 > (int_32)[7]), [8482])
	CALL memcpy($3, $1, [8])
	CALL eosio_assert(((int_32)($0 + [-8]) > (int_32)[7]), [8482])
	CALL memcpy(($3 + [8]), ($1 + [8]), [8])
	*($2 + [4]) = ($3 + [16])
	CALL $42(CALL $41($2, $4), $7)
	$global$0 = ($2 + [16])
}

void .FUNC $5 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = (int_64)0
	*($0 + [80]) = (int_64)0
	*($0) = (int_64)0
	*(($0 + [88])) = (int_64)0
	$6 = ($1 + [72])
	$7 = CALL db_lowerbound_i64(*($1 + [72]), *(($1 + [80])), (int_64)-6030912142679474176, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $6($6, $7)
	$8 = CALL memcpy($0, $7, [97])
	$5 = *($7 + [80])
	if ( (uint_64)(((int_64)$3 + (int_64)-1) <= $5) ){ goto $label$2 }
	
.LOOP $label$3:
	CALL eosio_assert([1], [8854])
	$7 = CALL db_next_i64(*($7 + [104]), ($4 + [8]))
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$2 }
	$7 = CALL $6($6, $7)
	CALL memcpy($8, $7, [97])
	$0 = ((uint_64)$5 >= (uint_64)$3)
	$9 = ((int_64)*($7 + [80]) + (int_64)$5)
	$5 = $9
	if ( $0 ){ goto $label$3 }
	$5 = $9
	if ( (uint_64)($9 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	$5 = *($8)
	
.LABEL $label$1
	$0 = *(($1 + [100]))
	$10 = *(($1 + [96]))
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$6 }
	
.LOOP $label$8:
	$7 = ($0 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$7 }
	$0 = $7
	if ( ((int_32)$10 != (int_32)$7) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$6 }
	CALL eosio_assert(((int_32)*(($8 + [100])) == (int_32)$6), [8884])
	if ( $8 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$7 = CALL db_find_i64(*(($1 + [72])), *(($1 + [80])), (int_64)-6030912142679474176, $5)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $6($6, $7)
	CALL eosio_assert(((int_32)*($8 + [100]) == (int_32)$6), [8884])
	
.LABEL $label$5
	CALL eosio_assert([1], [8935])
	CALL eosio_assert([1], [8854])
	$7 = CALL db_next_i64(*($8 + [104]), ($4 + [8]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	CALL $6($6, $7)
	
.LABEL $label$9
	CALL $7($6, $8)
	
.LABEL $label$4
	$global$0 = ($4 + [16])
}

void .FUNC $2 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $58($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $3 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), ($0 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), ($0 + [16]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	*($2 + [8]) = *(($0 + [24]))
	CALL eosio_assert(((int_32)(*($4 + [8]) - $3) > (int_32)[7]), [8482])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $17(*($1), ($0 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC memory ()
{
}

void .FUNC $1 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [144])
	$global$0 = $3
	$4 = *($0)
	*(($3 + [16])) = [0]
	*($3 + [8]) = (int_64)0
	$5 = CALL $62([8192])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$5 }
	*($3 + [8]) = ($5 << [1])
	$6 = (($3 + [8]) | [1])
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($3 + [8]) = ($7 | [1])
	*($3 + [16]) = $6
	*($3 + [12]) = $5
	
.LABEL $label$4
	CALL memcpy($6, [8192], $5)
	
.LABEL $label$3
	*(($6 + $5)) = [0]
	*((($3 + [24]) + [24])) = *(($2 + [8]))
	$5 = (($3 + [8]) + [8])
	*(($3 + [64])) = *($5)
	*($5) = [0]
	*($3 + [32]) = $1
	*($3 + [72]) = (int_64)4297304112115340688
	*($3 + [80]) = (int_64)-3617168760277827584
	*($3 + [24]) = *($0)
	*($3 + [40]) = *($2)
	*($3 + [56]) = *($3 + [8])
	*($3 + [8]) = (int_64)0
	*(($5 = CALL _Znwj([16]))) = $4
	*($5 + [8]) = (int_64)3617214756542218240
	*((($3 + [72]) + [36])) = [0]
	$6 = ($5 + [16])
	*((($3 + [72]) + [24])) = $6
	*(($3 + [92])) = $6
	*($3 + [88]) = $5
	*($3 + [100 align=4]) = (int_64)0
	$5 = *($3 + [56])
	$6 = ( *((($3 + [24]) + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [32])
	$1 = (CASTING uint_64)(uint_32 $6)
	$6 = ($3 + [100])
	
.LOOP $label$6:
	$5 = ($5 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$8 }
	CALL $2($6, $5)
	$6 = *(($3 + [104]))
	$5 = *(($3 + [100]))
	goto $label$7 
	
.LABEL $label$8
	$6 = [0]
	$5 = [0]
	
.LABEL $label$7
	*($3 + [132]) = $5
	*($3 + [128]) = $5
	*($3 + [136]) = $6
	*($3 + [112]) = ($3 + [128])
	*($3 + [120]) = ($3 + [24])
	CALL $3(($3 + [120]), ($3 + [112]))
	CALL $4(($3 + [128]), ($3 + [72]))
	$5 = *($3 + [128])
	CALL send_inline($5, (*($3 + [132]) - $5))
	$5 = *($3 + [128])
	if ( ($5 == 0) ){ goto $label$9 }
	*($3 + [132]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$9
	$5 = *($3 + [100])
	if ( ($5 == 0) ){ goto $label$10 }
	*(($3 + [104])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$10
	$5 = *($3 + [88])
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [92])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$11
	if ( (*(($3 + [56])) & [1]) ){ goto $label$13 }
	if ( (*($3 + [8]) & [1]) ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$13
	CALL _ZdlPv(*(($3 + [64])))
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$12
	CALL _ZdlPv(*(($3 + [16])))
	$global$0 = ($3 + [144])
	return (unreachable)
	
.LABEL $label$2
	CALL $57(($3 + [8]))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
}

void .FUNC $14 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$9()), [9333])
	*(($5 = CALL _Znwj([64])) + [16]) = (int_64)0
	*($5) = [0]
	*($5 + [24]) = (int_64)0
	*($5 + [48]) = $1
	$3 = *($3)
	*($5) = *($3)
	*(($6 = ($5 + [8]))) = *(($3 + [8]))
	*($5 + [16]) = *(($3 + [16]))
	*($5 + [24]) = *(($3 + [24]))
	*(($7 = ($5 + [32]))) = *(($3 + [32]))
	*(($8 = ($5 + [40]))) = *(($3 + [40]))
	*($4 + [56]) = ($4 + [41])
	*($4 + [52]) = $4
	*($4 + [48]) = $4
	*($4 + [64]) = ($4 + [48])
	*($4 + [76]) = ($5 + [4])
	*($4 + [72]) = $5
	*($4 + [80]) = $6
	*($4 + [84]) = ($5 + [16])
	*($4 + [88]) = $7
	*($4 + [92]) = $8
	CALL $46(($4 + [72]), ($4 + [64]))
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)7035939317486714880, $2, (int_64)7035939317486714880, $4, [41])
	*($5 + [52]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)7035939317486714880) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)7035939317486714881
	
.LABEL $label$1
	*($4 + [72]) = $5
	*($4) = (int_64)7035939317486714880
	*($4 + [48]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)7035939317486714880
	*($3 + [16]) = $6
	*($4 + [72]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $45(($1 + [24]), ($4 + [72]), $4, ($4 + [48]))
	
.LABEL $label$2
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( ($5 == 0) ){ goto $label$4 }
	CALL _ZdlPv($5)
	
.LABEL $label$4
	$global$0 = ($4 + [96])
}

void .FUNC $15 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_64 $24
	int_64 $25
	int_64 $26
	int_64 $27
	int_64 $28
	int_64 $29
	int_64 $30
	int_64 $31
	int_64 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	int_32 $41
	int_32 $42
	int_32 $43
	$2 = ($global$0 - [1088])
	$global$0 = $2
	CALL $8($0)
	$3 = ($0 + [32])
	$4 = *(($0 + [60]))
	if ( ((int_32)$4 == (int_32)*(($0 + [56]))) ){ goto $label$2 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$3), [8884])
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	$5 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $9($3, $5)
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$3), [8884])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [9117])
	CALL eosio_assert(((uint_32)*($4) <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$6() / (uint_64)(int_64)1000000))), [8364])
	$4 = CALL $62([8360])
	if ( ($4 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [8488])
	goto $label$5 
	
.LABEL $label$6
	if ( ($4 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$6 = (int_64)0
	
.LOOP $label$7:
	$5 = *(($4 + [8359]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [8533])
	
.LABEL $label$8
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$6 = (int_64)0
	
.LABEL $label$3
	CALL eosio_assert([1], [8586])
	$7 = ((int_64)$6 & (int_64)72057594037927935)
	$8 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$4 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$7 = $6
	$5 = [1]
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$7 = $6
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$5 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $5 ){ goto $label$13 }
	$5 = [1]
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$5 = [0]
	
.LABEL $label$9
	CALL eosio_assert($5, [8635])
	*($2 + [1000]) = [0]
	*($2 + [992]) = (int_64)0
	*($2 + [984]) = [0]
	*($2 + [976]) = (int_64)0
	$10 = ($0 + [72])
	$4 = CALL db_lowerbound_i64(*($0 + [72]), *(($0 + [80])), (int_64)-6030912142679474176, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$15 }
	$4 = CALL $6($10, $4)
	$9 = (($2 + [992]) + [8])
	$5 = [0]
	if ( ((int_32)[0] != (int_32)[0]) ){ goto $label$16 }
	$11 = [6]
	goto $label$14 
	
.LABEL $label$16
	$11 = [3]
	goto $label$14 
	
.LABEL $label$15
	$11 = [7]
	
.LABEL $label$14
	
.LOOP $label$17:
	goto $label$496 
	
.LABEL $label$500
	$4 = CALL $6($10, $4)
	$5 = *($2 + [996])
	if ( ((int_32)$5 == (int_32)*($9)) ){ goto $label$226 }
	$11 = [3]
	goto $label$17 
	
.LABEL $label$499
	*($2 + [996]) = (CALL memcpy($5, $4, [112]) + [112])
	if ( *($4 + [96]) ){ goto $label$224 }
	goto $label$225 
	
.LABEL $label$498
	CALL $16(($2 + [992]), $4)
	if ( (*($4 + [96]) == 0) ){ goto $label$221 }
	$11 = [4]
	goto $label$17 
	
.LABEL $label$497
	$5 = *($2 + [980])
	if ( ((int_32)$5 == (int_32)*((($2 + [976]) + [8]))) ){ goto $label$222 }
	$11 = [0]
	goto $label$17 
	
.LABEL $label$496
	*($2 + [980]) = (CALL memcpy($5, $4, [112]) + [112])
	goto $label$223 
	
.LABEL $label$495
	CALL $16(($2 + [976]), $4)
	$11 = [1]
	goto $label$17 
	
.LABEL $label$494
	CALL eosio_assert([1], [8854])
	$4 = CALL db_next_i64(*($4 + [104]), ($2 + [784]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$220 }
	$11 = [7]
	goto $label$17 
	
.LABEL $label$493
	$4 = *(($0 + [60]))
	if ( ((int_32)$4 == (int_32)*(($0 + [56]))) ){ goto $label$219 }
	$11 = [8]
	goto $label$17 
	
.LABEL $label$492
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$3), [8884])
	goto $label$218 
	
.LABEL $label$491
	$4 = [0]
	$5 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$217 }
	$11 = [269]
	goto $label$17 
	
.LABEL $label$490
	$4 = CALL $9($3, $5)
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$3), [8884])
	$11 = [9]
	goto $label$17 
	
.LABEL $label$489
	$5 = [0]
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [9117])
	$7 = *(($4 + [24]))
	$6 = *($4 + [16])
	$4 = *(($0 + [60]))
	if ( ((int_32)$4 == (int_32)*(($0 + [56]))) ){ goto $label$216 }
	$11 = [10]
	goto $label$17 
	
.LABEL $label$488
	$5 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$3), [8884])
	goto $label$215 
	
.LABEL $label$487
	$4 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$214 }
	$11 = [267]
	goto $label$17 
	
.LABEL $label$486
	$5 = CALL $9($3, $4)
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$3), [8884])
	$11 = [11]
	goto $label$17 
	
.LABEL $label$485
	$4 = [0]
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [9117])
	$5 = *(($0 + [60]))
	if ( ((int_32)$5 == (int_32)*(($0 + [56]))) ){ goto $label$213 }
	$11 = [12]
	goto $label$17 
	
.LABEL $label$484
	$4 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$3), [8884])
	goto $label$212 
	
.LABEL $label$483
	$5 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$211 }
	$11 = [265]
	goto $label$17 
	
.LABEL $label$482
	$4 = CALL $9($3, $5)
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$3), [8884])
	$11 = [13]
	goto $label$17 
	
.LABEL $label$481
	$5 = [0]
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [9117])
	$12 = *($4 + [4])
	$13 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$4 = *(($0 + [60]))
	if ( ((int_32)$4 == (int_32)*(($0 + [56]))) ){ goto $label$210 }
	$11 = [14]
	goto $label$17 
	
.LABEL $label$480
	$5 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$3), [8884])
	goto $label$209 
	
.LABEL $label$479
	$4 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$208 }
	$11 = [263]
	goto $label$17 
	
.LABEL $label$478
	$5 = CALL $9($3, $4)
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$3), [8884])
	$11 = [15]
	goto $label$17 
	
.LABEL $label$477
	$4 = [0]
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [9117])
	$14 = *($5 + [40])
	$5 = *(($0 + [60]))
	if ( ((int_32)$5 == (int_32)*(($0 + [56]))) ){ goto $label$207 }
	$11 = [16]
	goto $label$17 
	
.LABEL $label$476
	$4 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$3), [8884])
	goto $label$206 
	
.LABEL $label$475
	$5 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$205 }
	$11 = [261]
	goto $label$17 
	
.LABEL $label$474
	$4 = CALL $9($3, $5)
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$3), [8884])
	$11 = [17]
	goto $label$17 
	
.LABEL $label$473
	$9 = (CASTING uint_32)(uint_64 $13)
	$5 = [0]
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [9117])
	$15 = *($4 + [32])
	$4 = *(($0 + [60]))
	if ( ((int_32)$4 == (int_32)*(($0 + [56]))) ){ goto $label$204 }
	$11 = [18]
	goto $label$17 
	
.LABEL $label$472
	$5 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$3), [8884])
	goto $label$203 
	
.LABEL $label$471
	$4 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$202 }
	$11 = [259]
	goto $label$17 
	
.LABEL $label$470
	$5 = CALL $9($3, $4)
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$3), [8884])
	$11 = [19]
	goto $label$17 
	
.LABEL $label$469
	$16 = ($12 + $9)
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [9117])
	if ( ((int_32)*($5 + [8]) != (int_32)[1]) ){ goto $label$201 }
	$11 = [255]
	goto $label$17 
	
.LABEL $label$468
	if ( ((uint_32)((int_32)(*($2 + [996]) - *($2 + [992])) / (int_32)[112]) > (uint_32)[3]) ){ goto $label$18 }
	$11 = [257]
	goto $label$17 
	
.LABEL $label$467
	*(($2 + [808])) = $7
	*($2 + [788]) = $12
	*($2 + [784]) = $16
	*($2 + [792]) = [1]
	*($2 + [800]) = $6
	*($2 + [816]) = $15
	*($2 + [824]) = $14
	CALL $12($3, ($2 + [784]), *($0))
	$4 = *($2 + [976])
	if ( $4 ){ goto $label$41 }
	goto $label$42 
	
.LABEL $label$466
	$4 = *(($0 + [60]))
	if ( ((int_32)$4 == (int_32)*(($0 + [56]))) ){ goto $label$200 }
	$11 = [21]
	goto $label$17 
	
.LABEL $label$465
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$3), [8884])
	goto $label$199 
	
.LABEL $label$464
	*(($2 + [808])) = $7
	*($2 + [788]) = $12
	*($2 + [784]) = $16
	*($2 + [792]) = [2]
	*($2 + [800]) = $6
	*($2 + [816]) = $15
	*($2 + [824]) = $14
	CALL $12($3, ($2 + [784]), *($0))
	$4 = *($2 + [976])
	if ( $4 ){ goto $label$43 }
	goto $label$44 
	
.LABEL $label$463
	$4 = [0]
	$5 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$198 }
	$11 = [254]
	goto $label$17 
	
.LABEL $label$462
	$4 = CALL $9($3, $5)
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$3), [8884])
	$11 = [22]
	goto $label$17 
	
.LABEL $label$461
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [9117])
	if ( ((int_32)*($4 + [8]) != (int_32)[2]) ){ goto $label$197 }
	$11 = [238]
	goto $label$17 
	
.LABEL $label$460
	if ( ((uint_32)((int_32)(*($2 + [980]) - *($2 + [976])) / (int_32)[112]) > (uint_32)[3]) ){ goto $label$196 }
	$11 = [239]
	goto $label$17 
	
.LABEL $label$459
	$18 = *($2 + [996])
	$17 = *($2 + [992])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$29 }
	$11 = [240]
	goto $label$17 
	
.LABEL $label$458
	$19 = (($2 + [784]) + [72])
	$20 = ($0 + [100])
	$21 = ($0 + [96])
	$22 = ($0 + [80])
	$11 = [241]
	goto $label$17 
	
.LABEL $label$457
	$7 = *($17)
	CALL memcpy(($2 + [784]), ($17 + [8]), [88])
	$13 = *(($19 + [8]))
	*((($2 + [960]) + [8])) = $13
	$6 = *($19)
	*(($2 + [8])) = $13
	*($2) = $6
	*($2 + [960]) = $6
	CALL $1($0, $7, $2)
	$5 = *($20)
	$23 = *($21)
	if ( ((int_32)$23 == (int_32)$5) ){ goto $label$25 }
	$11 = [242]
	goto $label$17 
	
.LABEL $label$456
	$4 = ($5 + [-24])
	$9 = *($4)
	if ( ((int_64)*($9) == (int_64)$7) ){ goto $label$24 }
	$11 = [243]
	goto $label$17 
	
.LABEL $label$455
	$5 = $4
	if ( ((int_32)$23 != (int_32)$4) ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$454
	if ( ((int_32)$23 == (int_32)$5) ){ goto $label$23 }
	$11 = [252]
	goto $label$17 
	
.LABEL $label$453
	CALL eosio_assert(((int_32)*(($9 + [100])) == (int_32)$10), [8884])
	if ( $9 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$452
	$4 = CALL db_find_i64(*(($0 + [72])), *($22), (int_64)-6030912142679474176, $7)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$22 }
	$11 = [245]
	goto $label$17 
	
.LABEL $label$451
	$9 = CALL $6($10, $4)
	CALL eosio_assert(((int_32)*($9 + [100]) == (int_32)$10), [8884])
	$11 = [246]
	goto $label$17 
	
.LABEL $label$450
	CALL eosio_assert([1], [8935])
	CALL eosio_assert([1], [8854])
	$4 = CALL db_next_i64(*($9 + [104]), ($2 + [672]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$19 }
	$11 = [247]
	goto $label$17 
	
.LABEL $label$449
	CALL $6($10, $4)
	$11 = [248]
	goto $label$17 
	
.LABEL $label$448
	CALL $7($10, $9)
	$11 = [249]
	goto $label$17 
	
.LABEL $label$447
	$17 = ($17 + [112])
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$28 }
	$11 = [250]
	goto $label$17 
	
.LABEL $label$446
	*(($2 + [808])) = $8
	*($2 + [788]) = $12
	*($2 + [784]) = $16
	*($2 + [792]) = [1]
	*($2 + [800]) = (int_64)0
	*($2 + [816]) = $15
	*($2 + [824]) = (int_64)0
	CALL $12($3, ($2 + [784]), *($0))
	$4 = *($2 + [976])
	if ( $4 ){ goto $label$45 }
	goto $label$46 
	
.LABEL $label$445
	CALL sha256([0], [0], ($2 + [928]))
	*((($2 + [784]) + [24])) = *((($2 + [928]) + [24]))
	*((($2 + [784]) + [16])) = *((($2 + [928]) + [16]))
	*($2 + [792]) = *($2 + [936])
	*($2 + [784]) = *($2 + [928])
	$4 = *($2 + [976])
	$9 = CALL memcpy(($2 + [816]), $4, [97])
	$5 = *($2 + [980])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$195 }
	$11 = [24]
	goto $label$17 
	
.LABEL $label$444
	$11 = [25]
	goto $label$17 
	
.LABEL $label$443
	CALL memcpy(($2 + [672]), $4, [112])
	CALL memcpy($9, ($2 + [672]), [97])
	CALL sha256(($2 + [784]), [144], ($2 + [784]))
	$4 = ($4 + [112])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$194 }
	$11 = [26]
	goto $label$17 
	
.LABEL $label$442
	$4 = *($2 + [976])
	$5 = *($2 + [980])
	$11 = [27]
	goto $label$17 
	
.LABEL $label$441
	$13 = *((($2 + [784]) + [24]))
	*((($2 + [640]) + [24])) = $13
	$14 = *((($2 + [784]) + [16]))
	*((($2 + [640]) + [16])) = $14
	*((($2 + [608]) + [16])) = $14
	*((($2 + [608]) + [24])) = $13
	$13 = *($2 + [792])
	*($2 + [616]) = $13
	$14 = *($2 + [784])
	*($2 + [608]) = $14
	*($2 + [648]) = $13
	*($2 + [640]) = $14
	$13 = *($2 + [617])
	$14 = *($2 + [616])
	$24 = *($2 + [615])
	$25 = *($2 + [614])
	$26 = *($2 + [613])
	$27 = *($2 + [612])
	$28 = *($2 + [611])
	$29 = *($2 + [610])
	$30 = *($2 + [609])
	$31 = *($2 + [608])
	*($2 + [600]) = [0]
	*($2 + [592]) = (int_64)0
	$4 = ($5 - $4)
	$5 = ((int_32)$4 / (int_32)[112])
	$13 = ((uint_64)((int_64)((int_64)$13 + (int_64)((int_64)((int_64)$14 + (int_64)((int_64)((int_64)$24 + (int_64)((int_64)((int_64)$25 + (int_64)((int_64)((int_64)$26 + (int_64)((int_64)((int_64)$27 + (int_64)((int_64)((int_64)$28 + (int_64)((int_64)((int_64)$29 + (int_64)((int_64)((int_64)$30 + (int_64)((int_64)$31 * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) + (int_64)8888888) % (uint_64)$6)
	if ( ($4 == 0) ){ goto $label$193 }
	$11 = [28]
	goto $label$17 
	
.LABEL $label$440
	if ( ((uint_32)$5 >= (uint_32)[38347923]) ){ goto $label$192 }
	$11 = [29]
	goto $label$17 
	
.LABEL $label$439
	$4 = CALL _Znwj($4)
	*(($2 + [600])) = ($4 + ((int_32)$5 * (int_32)[112]))
	*($2 + [592]) = $4
	*($2 + [596]) = $4
	$9 = *($2 + [976])
	$5 = (*($2 + [980]) - $9)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$191 }
	$11 = [236]
	goto $label$17 
	
.LABEL $label$438
	CALL memcpy($4, $9, $5)
	*($2 + [596]) = (*($2 + [596]) + ((int_32)((uint_32)$5 / (uint_32)[112]) * (int_32)[112]))
	$11 = [30]
	goto $label$17 
	
.LABEL $label$437
	CALL $5(($2 + [672]), $0, $2, $13)
	$4 = *($2 + [592])
	if ( ($4 == 0) ){ goto $label$190 }
	$11 = [31]
	goto $label$17 
	
.LABEL $label$436
	*($2 + [596]) = $4
	CALL _ZdlPv($4)
	$11 = [32]
	goto $label$17 
	
.LABEL $label$435
	$25 = *(($2 + [760]))
	CALL eosio_assert(((int_64)$25 == (int_64)$7), [8735])
	$26 = *($2 + [752])
	$6 = (int_64)
	CALL eosio_assert(((int_64)$6($6 - $26)) > (int_64)-4611686018427387904), [8783])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [8805])
	*(($4 = (($2 + [560]) + [16]))) = *((($2 + [640]) + [16]))
	*((($2 + [560]) + [24])) = *((($2 + [640]) + [24]))
	*($2 + [568]) = *($2 + [648])
	*($2 + [560]) = *($2 + [640])
	$13 = *($4)
	$14 = *($2 + [579])
	$24 = *($2 + [578])
	$27 = *($2 + [577])
	$28 = *($2 + [575])
	$29 = *($2 + [574])
	$30 = *($2 + [573])
	$31 = *($2 + [572])
	$32 = *($2 + [571])
	$33 = *($2 + [570])
	*($2 + [440]) = [0]
	*($2 + [432]) = (int_64)0
	$13 = ((uint_64)((int_64)((int_64)$14 + (int_64)((int_64)((int_64)$24 + (int_64)((int_64)((int_64)$27 + (int_64)((int_64)((int_64)$13 + (int_64)((int_64)((int_64)$28 + (int_64)((int_64)((int_64)$29 + (int_64)((int_64)((int_64)$30 + (int_64)((int_64)((int_64)$31 + (int_64)((int_64)((int_64)$32 + (int_64)((int_64)$33 * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) + (int_64)8888888) % (uint_64)$6)
	$4 = (*($2 + [980]) - *($2 + [976]))
	$5 = ((int_32)$4 / (int_32)[112])
	if ( ($4 == 0) ){ goto $label$189 }
	$11 = [33]
	goto $label$17 
	
.LABEL $label$434
	if ( ((uint_32)$5 >= (uint_32)[38347923]) ){ goto $label$188 }
	$11 = [34]
	goto $label$17 
	
.LABEL $label$433
	$4 = CALL _Znwj($4)
	*(($2 + [440])) = ($4 + ((int_32)$5 * (int_32)[112]))
	*($2 + [432]) = $4
	*($2 + [436]) = $4
	$9 = *($2 + [976])
	$5 = (*($2 + [980]) - $9)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$187 }
	$11 = [234]
	goto $label$17 
	
.LABEL $label$432
	CALL memcpy($4, $9, $5)
	*($2 + [436]) = (*($2 + [436]) + ((int_32)((uint_32)$5 / (uint_32)[112]) * (int_32)[112]))
	$11 = [35]
	goto $label$17 
	
.LABEL $label$431
	CALL $5(($2 + [448]), $0, $2, $13)
	$4 = *($2 + [432])
	if ( ($4 == 0) ){ goto $label$186 }
	$11 = [36]
	goto $label$17 
	
.LABEL $label$430
	*($2 + [436]) = $4
	CALL _ZdlPv($4)
	$11 = [37]
	goto $label$17 
	
.LABEL $label$429
	$27 = *(($2 + [536]))
	CALL eosio_assert(((int_64)$27 == (int_64)$7), [8735])
	$28 = *($2 + [528])
	$6 = (int_64)
	CALL eosio_assert(((int_64)$6($6 - $28)) > (int_64)-4611686018427387904), [8783])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [8805])
	*(($4 = (($2 + [400]) + [24]))) = *((($2 + [640]) + [24]))
	*((($2 + [400]) + [16])) = *((($2 + [640]) + [16]))
	*($2 + [408]) = *($2 + [648])
	*($2 + [400]) = *($2 + [640])
	$13 = *($4)
	$14 = *($2 + [429])
	$24 = *($2 + [428])
	$29 = *($2 + [427])
	$30 = *($2 + [426])
	$31 = *($2 + [425])
	$32 = *($2 + [423])
	$33 = *($2 + [422])
	$34 = *($2 + [421])
	$35 = *($2 + [420])
	*($2 + [280]) = [0]
	*($2 + [272]) = (int_64)0
	$13 = ((uint_64)((int_64)((int_64)$14 + (int_64)((int_64)((int_64)$24 + (int_64)((int_64)((int_64)$29 + (int_64)((int_64)((int_64)$30 + (int_64)((int_64)((int_64)$31 + (int_64)((int_64)((int_64)$13 + (int_64)((int_64)((int_64)$32 + (int_64)((int_64)((int_64)$33 + (int_64)((int_64)((int_64)$34 + (int_64)((int_64)$35 * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) * (int_64)10)) + (int_64)8888888) % (uint_64)$6)
	$4 = (*($2 + [980]) - *($2 + [976]))
	$5 = ((int_32)$4 / (int_32)[112])
	if ( ($4 == 0) ){ goto $label$185 }
	$11 = [38]
	goto $label$17 
	
.LABEL $label$428
	if ( ((uint_32)$5 >= (uint_32)[38347923]) ){ goto $label$184 }
	$11 = [39]
	goto $label$17 
	
.LABEL $label$427
	$4 = CALL _Znwj($4)
	*(($2 + [280])) = ($4 + ((int_32)$5 * (int_32)[112]))
	*($2 + [272]) = $4
	*($2 + [276]) = $4
	$9 = *($2 + [976])
	$5 = (*($2 + [980]) - $9)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$183 }
	$11 = [232]
	goto $label$17 
	
.LABEL $label$426
	CALL memcpy($4, $9, $5)
	*($2 + [276]) = (*($2 + [276]) + ((int_32)((uint_32)$5 / (uint_32)[112]) * (int_32)[112]))
	$11 = [40]
	goto $label$17 
	
.LABEL $label$425
	CALL $5(($2 + [288]), $0, $2, $13)
	$4 = *($2 + [272])
	if ( ($4 == 0) ){ goto $label$182 }
	$11 = [41]
	goto $label$17 
	
.LABEL $label$424
	*($2 + [276]) = $4
	CALL _ZdlPv($4)
	$11 = [42]
	goto $label$17 
	
.LABEL $label$423
	$30 = *(($2 + [376]))
	CALL eosio_assert(((int_64)$30 == (int_64)$7), [8735])
	$31 = *($2 + [368])
	$13 = (int_64)
	CALL eosio_assert(((int_64)$13($6 - $31)) > (int_64)-4611686018427387904), [8783])
	CALL eosio_assert(((int_64)$13 < (int_64)4611686018427387904), [8805])
	$24 = ((int_64)((int_64)$13 * (int_64)40) / (int_64)100)
	$4 = CALL $62([8360])
	if ( ($4 <= [8]) ){ goto $label$181 }
	$11 = [231]
	goto $label$17 
	
.LABEL $label$422
	CALL eosio_assert([0], [8488])
	goto $label$179 
	
.LABEL $label$421
	if ( ($4 == 0) ){ goto $label$180 }
	$11 = [44]
	goto $label$17 
	
.LABEL $label$420
	$6 = (int_64)0
	$11 = [45]
	goto $label$17 
	
.LABEL $label$419
	$5 = *(($4 + [8359]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$177 }
	$11 = [229]
	goto $label$17 
	
.LABEL $label$418
	CALL eosio_assert([0], [8533])
	$11 = [46]
	goto $label$17 
	
.LABEL $label$417
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$178 }
	$11 = [47]
	goto $label$17 
	
.LABEL $label$416
	CALL eosio_assert((uint_64)(((int_64)$24 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8586])
	$7 = ((int_64)$6 & (int_64)72057594037927935)
	$14 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$4 = [0]
	$11 = [48]
	goto $label$17 
	
.LABEL $label$415
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$170 }
	$11 = [223]
	goto $label$17 
	
.LABEL $label$414
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$31 }
	$11 = [224]
	goto $label$17 
	
.LABEL $label$413
	$7 = $6
	$5 = [1]
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$173 }
	goto $label$172 
	
.LABEL $label$412
	$7 = $6
	$11 = [226]
	goto $label$17 
	
.LABEL $label$411
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$171 }
	$11 = [227]
	goto $label$17 
	
.LABEL $label$410
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$5 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $5 ){ goto $label$30 }
	$11 = [228]
	goto $label$17 
	
.LABEL $label$409
	$5 = [1]
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$175 }
	goto $label$174 
	
.LABEL $label$408
	$5 = [0]
	$11 = [50]
	goto $label$17 
	
.LABEL $label$407
	CALL eosio_assert($5, [8635])
	CALL eosio_assert(((int_64)$25 == (int_64)$14), [8655])
	$24 = ((int_64)$24 + (int_64)$26)
	CALL eosio_assert(((int_64)$24 > (int_64)-4611686018427387904), [8698])
	CALL eosio_assert(((int_64)$24 < (int_64)4611686018427387904), [8717])
	$25 = ((int_64)$13 / (int_64)5)
	$4 = CALL $62([8360])
	if ( ($4 <= [8]) ){ goto $label$169 }
	$11 = [222]
	goto $label$17 
	
.LABEL $label$406
	CALL eosio_assert([0], [8488])
	goto $label$167 
	
.LABEL $label$405
	if ( ($4 == 0) ){ goto $label$168 }
	$11 = [52]
	goto $label$17 
	
.LABEL $label$404
	$6 = (int_64)0
	$11 = [53]
	goto $label$17 
	
.LABEL $label$403
	$5 = *(($4 + [8359]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$165 }
	$11 = [220]
	goto $label$17 
	
.LABEL $label$402
	CALL eosio_assert([0], [8533])
	$11 = [54]
	goto $label$17 
	
.LABEL $label$401
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$166 }
	$11 = [55]
	goto $label$17 
	
.LABEL $label$400
	$23 = (uint_64)(((int_64)$25 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)
	CALL eosio_assert($23, [8586])
	$7 = ((int_64)$6 & (int_64)72057594037927935)
	$26 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$4 = [0]
	$11 = [56]
	goto $label$17 
	
.LABEL $label$399
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$158 }
	$11 = [214]
	goto $label$17 
	
.LABEL $label$398
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$33 }
	$11 = [215]
	goto $label$17 
	
.LABEL $label$397
	$7 = $6
	$5 = [1]
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$161 }
	goto $label$160 
	
.LABEL $label$396
	$7 = $6
	$11 = [217]
	goto $label$17 
	
.LABEL $label$395
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$159 }
	$11 = [218]
	goto $label$17 
	
.LABEL $label$394
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$5 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $5 ){ goto $label$32 }
	$11 = [219]
	goto $label$17 
	
.LABEL $label$393
	$5 = [1]
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$163 }
	goto $label$162 
	
.LABEL $label$392
	$5 = [0]
	$11 = [58]
	goto $label$17 
	
.LABEL $label$391
	CALL eosio_assert($5, [8635])
	CALL eosio_assert(((int_64)$27 == (int_64)$26), [8655])
	$27 = ((int_64)$25 + (int_64)$28)
	CALL eosio_assert(((int_64)$27 > (int_64)-4611686018427387904), [8698])
	CALL eosio_assert(((int_64)$27 < (int_64)4611686018427387904), [8717])
	$29 = ((int_64)$13 / (int_64)10)
	$4 = CALL $62([8360])
	if ( ($4 <= [8]) ){ goto $label$157 }
	$11 = [213]
	goto $label$17 
	
.LABEL $label$390
	CALL eosio_assert([0], [8488])
	goto $label$155 
	
.LABEL $label$389
	if ( ($4 == 0) ){ goto $label$156 }
	$11 = [60]
	goto $label$17 
	
.LABEL $label$388
	$6 = (int_64)0
	$11 = [61]
	goto $label$17 
	
.LABEL $label$387
	$5 = *(($4 + [8359]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$153 }
	$11 = [211]
	goto $label$17 
	
.LABEL $label$386
	CALL eosio_assert([0], [8533])
	$11 = [62]
	goto $label$17 
	
.LABEL $label$385
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$154 }
	$11 = [63]
	goto $label$17 
	
.LABEL $label$384
	$17 = (uint_64)(((int_64)$29 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)
	CALL eosio_assert($17, [8586])
	$7 = ((int_64)$6 & (int_64)72057594037927935)
	$13 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$4 = [0]
	$11 = [64]
	goto $label$17 
	
.LABEL $label$383
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$146 }
	$11 = [205]
	goto $label$17 
	
.LABEL $label$382
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$35 }
	$11 = [206]
	goto $label$17 
	
.LABEL $label$381
	$7 = $6
	$5 = [1]
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$149 }
	goto $label$148 
	
.LABEL $label$380
	$7 = $6
	$11 = [208]
	goto $label$17 
	
.LABEL $label$379
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$147 }
	$11 = [209]
	goto $label$17 
	
.LABEL $label$378
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$5 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $5 ){ goto $label$34 }
	$11 = [210]
	goto $label$17 
	
.LABEL $label$377
	$5 = [1]
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$151 }
	goto $label$150 
	
.LABEL $label$376
	$5 = [0]
	$11 = [66]
	goto $label$17 
	
.LABEL $label$375
	CALL eosio_assert($5, [8635])
	CALL eosio_assert(((int_64)$30 == (int_64)$13), [8655])
	$28 = ((int_64)$29 + (int_64)$31)
	CALL eosio_assert(((int_64)$28 > (int_64)-4611686018427387904), [8698])
	CALL eosio_assert(((int_64)$28 < (int_64)4611686018427387904), [8717])
	$4 = CALL $62([8360])
	if ( ($4 <= [8]) ){ goto $label$145 }
	$11 = [204]
	goto $label$17 
	
.LABEL $label$374
	CALL eosio_assert([0], [8488])
	goto $label$143 
	
.LABEL $label$373
	if ( ($4 == 0) ){ goto $label$144 }
	$11 = [68]
	goto $label$17 
	
.LABEL $label$372
	$6 = (int_64)0
	$11 = [69]
	goto $label$17 
	
.LABEL $label$371
	$5 = *(($4 + [8359]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$141 }
	$11 = [202]
	goto $label$17 
	
.LABEL $label$370
	CALL eosio_assert([0], [8533])
	$11 = [70]
	goto $label$17 
	
.LABEL $label$369
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$142 }
	$11 = [71]
	goto $label$17 
	
.LABEL $label$368
	CALL eosio_assert($23, [8586])
	$7 = ((int_64)$6 & (int_64)72057594037927935)
	$30 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$4 = [0]
	$11 = [72]
	goto $label$17 
	
.LABEL $label$367
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$134 }
	$11 = [196]
	goto $label$17 
	
.LABEL $label$366
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$37 }
	$11 = [197]
	goto $label$17 
	
.LABEL $label$365
	$7 = $6
	$5 = [1]
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$137 }
	goto $label$136 
	
.LABEL $label$364
	$7 = $6
	$11 = [199]
	goto $label$17 
	
.LABEL $label$363
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$135 }
	$11 = [200]
	goto $label$17 
	
.LABEL $label$362
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$5 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $5 ){ goto $label$36 }
	$11 = [201]
	goto $label$17 
	
.LABEL $label$361
	$5 = [1]
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$139 }
	goto $label$138 
	
.LABEL $label$360
	$5 = [0]
	$11 = [74]
	goto $label$17 
	
.LABEL $label$359
	CALL eosio_assert($5, [8635])
	$4 = CALL $62([8360])
	if ( ($4 <= [8]) ){ goto $label$133 }
	$11 = [195]
	goto $label$17 
	
.LABEL $label$358
	CALL eosio_assert([0], [8488])
	goto $label$131 
	
.LABEL $label$357
	if ( ($4 == 0) ){ goto $label$132 }
	$11 = [76]
	goto $label$17 
	
.LABEL $label$356
	$6 = (int_64)0
	$11 = [77]
	goto $label$17 
	
.LABEL $label$355
	$5 = *(($4 + [8359]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$129 }
	$11 = [193]
	goto $label$17 
	
.LABEL $label$354
	CALL eosio_assert([0], [8533])
	$11 = [78]
	goto $label$17 
	
.LABEL $label$353
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$130 }
	$11 = [79]
	goto $label$17 
	
.LABEL $label$352
	CALL eosio_assert($17, [8586])
	$7 = ((int_64)$6 & (int_64)72057594037927935)
	$31 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$4 = [0]
	$11 = [80]
	goto $label$17 
	
.LABEL $label$351
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$122 }
	$11 = [187]
	goto $label$17 
	
.LABEL $label$350
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$39 }
	$11 = [188]
	goto $label$17 
	
.LABEL $label$349
	$7 = $6
	$5 = [1]
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$125 }
	goto $label$124 
	
.LABEL $label$348
	$7 = $6
	$11 = [190]
	goto $label$17 
	
.LABEL $label$347
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$123 }
	$11 = [191]
	goto $label$17 
	
.LABEL $label$346
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$5 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $5 ){ goto $label$38 }
	$11 = [192]
	goto $label$17 
	
.LABEL $label$345
	$5 = [1]
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$127 }
	goto $label$126 
	
.LABEL $label$344
	$5 = [0]
	$11 = [82]
	goto $label$17 
	
.LABEL $label$343
	CALL eosio_assert($5, [8635])
	*((($2 + [64]) + [8])) = $14
	*($2 + [256]) = $24
	*($2 + [264]) = $14
	*($2 + [64]) = $24
	CALL $1($0, *($2 + [672]), ($2 + [64]))
	*((($2 + [48]) + [8])) = $26
	*($2 + [240]) = $27
	*($2 + [248]) = $26
	*($2 + [48]) = $27
	CALL $1($0, *($2 + [448]), ($2 + [48]))
	*((($2 + [32]) + [8])) = $13
	*($2 + [224]) = $28
	*($2 + [232]) = $13
	*($2 + [32]) = $28
	CALL $1($0, *($2 + [288]), ($2 + [32]))
	*((($2 + [16]) + [8])) = $30
	*($2 + [216]) = $30
	*($2 + [16]) = $25
	*($2 + [208]) = $25
	CALL $1($0, (int_64)4297304112138413936, ($2 + [16]))
	$7 = *($0)
	*((($2 + [1048]) + [8])) = [0]
	*($2 + [1048]) = (int_64)0
	$4 = CALL $62([8192])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$121 }
	$11 = [83]
	goto $label$17 
	
.LABEL $label$342
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$120 }
	$11 = [185]
	goto $label$17 
	
.LABEL $label$341
	*($2 + [1048]) = ($4 << [1])
	$5 = (($2 + [1048]) | [1])
	if ( $4 ){ goto $label$118 }
	goto $label$119 
	
.LABEL $label$340
	$9 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($9)
	*($2 + [1048]) = ($9 | [1])
	*($2 + [1056]) = $5
	*($2 + [1052]) = $4
	$11 = [85]
	goto $label$17 
	
.LABEL $label$339
	CALL memcpy($5, [8192], $4)
	$11 = [86]
	goto $label$17 
	
.LABEL $label$338
	*(($5 + $4)) = [0]
	*((($2 + [1008]) + [16])) = $31
	*(($5 = (($2 + [80]) + [24]))) = [0]
	$4 = ($2 + [1056])
	*(($2 + [1040])) = *($4)
	*($4) = [0]
	*($2 + [1016]) = $29
	*($2 + [80]) = (int_64)4297304112115340688
	*($2 + [88]) = (int_64)4516881727834030080
	*($2 + [96]) = (int_64)0
	*($2 + [1008]) = *($0)
	*($2 + [1032]) = *($2 + [1048])
	*($2 + [1048]) = (int_64)0
	*(($4 = CALL _Znwj([16]))) = $7
	*($4 + [8]) = (int_64)3617214756542218240
	*(($2 + [116])) = [0]
	$9 = ($4 + [16])
	*($5) = $9
	*(($2 + [100])) = $9
	*($2 + [96]) = $4
	*($2 + [108 align=4]) = (int_64)0
	$4 = *($2 + [1032])
	$5 = ( *((($2 + [1008]) + [28])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($5 + [24])
	$7 = (CASTING uint_64)(uint_32 $5)
	$9 = (($2 + [1008]) + [24])
	$5 = (($2 + [80]) + [28])
	$11 = [87]
	goto $label$17 
	
.LABEL $label$337
	$4 = ($4 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$117 }
	$11 = [88]
	goto $label$17 
	
.LABEL $label$336
	if ( ($4 == 0) ){ goto $label$116 }
	$11 = [89]
	goto $label$17 
	
.LABEL $label$335
	CALL $2($5, $4)
	$5 = *(($2 + [112]))
	$4 = *(($2 + [108]))
	goto $label$115 
	
.LABEL $label$334
	$5 = [0]
	$4 = [0]
	$11 = [90]
	goto $label$17 
	
.LABEL $label$333
	*($2 + [1076]) = $4
	*($2 + [1072]) = $4
	*($2 + [1080]) = $5
	CALL eosio_assert(((int_32)($5 - $4) > (int_32)[7]), [8482])
	CALL memcpy(*($2 + [1076]), ($2 + [1008]), [8])
	$4 = (*($2 + [1076]) + [8])
	*($2 + [1076]) = $4
	CALL eosio_assert(((int_32)(*($2 + [1080]) - $4) > (int_32)[7]), [8482])
	CALL memcpy(*($2 + [1076]), (($2 + [1008]) + [8]), [8])
	$4 = (*($2 + [1076]) + [8])
	*($2 + [1076]) = $4
	*($2 + [192]) = *(($2 + [1024]))
	CALL eosio_assert(((int_32)(*($2 + [1080]) - $4) > (int_32)[7]), [8482])
	CALL memcpy(*($2 + [1076]), ($2 + [192]), [8])
	*($2 + [1076]) = (*($2 + [1076]) + [8])
	CALL $17(($2 + [1072]), $9)
	CALL $4(($2 + [1072]), ($2 + [80]))
	$4 = *($2 + [1072])
	CALL send_inline($4, (*($2 + [1076]) - $4))
	$4 = *($2 + [1072])
	if ( ($4 == 0) ){ goto $label$114 }
	$11 = [91]
	goto $label$17 
	
.LABEL $label$332
	*($2 + [1076]) = $4
	CALL _ZdlPv($4)
	$11 = [92]
	goto $label$17 
	
.LABEL $label$331
	$4 = *($2 + [108])
	if ( ($4 == 0) ){ goto $label$113 }
	$11 = [93]
	goto $label$17 
	
.LABEL $label$330
	*(($2 + [112])) = $4
	CALL _ZdlPv($4)
	$11 = [94]
	goto $label$17 
	
.LABEL $label$329
	$4 = *($2 + [96])
	if ( ($4 == 0) ){ goto $label$112 }
	$11 = [95]
	goto $label$17 
	
.LABEL $label$328
	*(($2 + [100])) = $4
	CALL _ZdlPv($4)
	$11 = [96]
	goto $label$17 
	
.LABEL $label$327
	if ( ((*(($2 + [1032])) & [1]) == 0) ){ goto $label$111 }
	$11 = [97]
	goto $label$17 
	
.LABEL $label$326
	CALL _ZdlPv(*(($2 + [1040])))
	$11 = [98]
	goto $label$17 
	
.LABEL $label$325
	if ( ((*($2 + [1048]) & [1]) == 0) ){ goto $label$110 }
	$11 = [99]
	goto $label$17 
	
.LABEL $label$324
	CALL _ZdlPv(*(($2 + [1056])))
	$11 = [100]
	goto $label$17 
	
.LABEL $label$323
	$17 = ($0 + [152])
	$7 = *(($0 + [160]))
	*($2 + [200]) = [0]
	*($2 + [192]) = (int_64)0
	$4 = CALL db_lowerbound_i64(*($0 + [152]), $7, (int_64)-8524858645755333088, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$109 }
	$11 = [101]
	goto $label$17 
	
.LABEL $label$322
	$4 = CALL $18($17, $4)
	$9 = (($2 + [192]) + [8])
	$5 = *($2 + [196])
	if ( ((int_32)$5 != (int_32)*($9)) ){ goto $label$107 }
	goto $label$108 
	
.LABEL $label$321
	$4 = CALL $18($17, $4)
	$5 = *($2 + [196])
	if ( ((int_32)$5 == (int_32)*($9)) ){ goto $label$228 }
	$11 = [102]
	goto $label$17 
	
.LABEL $label$320
	*($5) = *($4)
	*(($5 + [24])) = *(($4 + [24]))
	*(($5 + [16])) = *(($4 + [16]))
	*(($5 + [8])) = *(($4 + [8]))
	*($2 + [196]) = ($5 + [32])
	goto $label$227 
	
.LABEL $label$319
	CALL $19(($2 + [192]), $4)
	$11 = [103]
	goto $label$17 
	
.LABEL $label$318
	CALL eosio_assert([1], [8854])
	$4 = CALL db_next_i64(*($4 + [32]), ($2 + [80]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$106 }
	$11 = [106]
	goto $label$17 
	
.LABEL $label$317
	$18 = *($2 + [196])
	$19 = *($2 + [192])
	if ( ((int_32)$19 == (int_32)$18) ){ goto $label$105 }
	$11 = [107]
	goto $label$17 
	
.LABEL $label$316
	$20 = ($0 + [180])
	$21 = ($0 + [176])
	$22 = ($0 + [160])
	$36 = ($0 + [152])
	$11 = [108]
	goto $label$17 
	
.LABEL $label$315
	$7 = *($19)
	$5 = *($20)
	$23 = *($21)
	if ( ((int_32)$23 == (int_32)$5) ){ goto $label$101 }
	$11 = [109]
	goto $label$17 
	
.LABEL $label$314
	$4 = ($5 + [-24])
	$9 = *($4)
	if ( ((int_64)*($9) == (int_64)$7) ){ goto $label$100 }
	$11 = [110]
	goto $label$17 
	
.LABEL $label$313
	$5 = $4
	if ( ((int_32)$23 != (int_32)$4) ){ goto $label$102 }
	goto $label$103 
	
.LABEL $label$312
	if ( ((int_32)$23 == (int_32)$5) ){ goto $label$99 }
	$11 = [183]
	goto $label$17 
	
.LABEL $label$311
	CALL eosio_assert(((int_32)*(($9 + [28])) == (int_32)$17), [8884])
	if ( $9 ){ goto $label$96 }
	goto $label$97 
	
.LABEL $label$310
	$4 = CALL db_find_i64(*($36), *($22), (int_64)-8524858645755333088, $7)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$98 }
	$11 = [112]
	goto $label$17 
	
.LABEL $label$309
	$9 = CALL $18($17, $4)
	CALL eosio_assert(((int_32)*($9 + [28]) == (int_32)$17), [8884])
	$11 = [113]
	goto $label$17 
	
.LABEL $label$308
	CALL eosio_assert([1], [8935])
	CALL eosio_assert([1], [8854])
	$4 = CALL db_next_i64(*($9 + [32]), ($2 + [80]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$95 }
	$11 = [114]
	goto $label$17 
	
.LABEL $label$307
	CALL $18($17, $4)
	$11 = [115]
	goto $label$17 
	
.LABEL $label$306
	CALL $20($17, $9)
	$11 = [116]
	goto $label$17 
	
.LABEL $label$305
	$19 = ($19 + [32])
	if ( ((int_32)$19 != (int_32)$18) ){ goto $label$104 }
	$11 = [117]
	goto $label$17 
	
.LABEL $label$304
	$6 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [152])) == (int_64)CALL $fimport$9()), [9333])
	*(($4 = CALL _Znwj([40])) + [28]) = $17
	*($4 + [8]) = $24
	*($4 + [16]) = $14
	*($4 + [24]) = [1]
	*($4) = *($2 + [672])
	$5 = (($2 + [80]) + [25])
	*($2 + [1080]) = $5
	*($2 + [1076]) = ($2 + [80])
	*($2 + [1072]) = ($2 + [80])
	*($2 + [1048]) = ($2 + [1072])
	*($2 + [1012]) = ($4 + [8])
	*($2 + [1008]) = $4
	*($2 + [1016]) = ($4 + [24])
	CALL $21(($2 + [1008]), ($2 + [1048]))
	$7 = *($4)
	$23 = CALL db_store_i64(*(($0 + [160])), (int_64)-8524858645755333088, $6, $7, ($2 + [80]), [25])
	*($4 + [32]) = $23
	$9 = ($0 + [168])
	if ( (uint_64)($7 <= *($9)) ){ goto $label$94 }
	$11 = [118]
	goto $label$17 
	
.LABEL $label$303
	*($9) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$11 = [119]
	goto $label$17 
	
.LABEL $label$302
	*($2 + [1008]) = $4
	$7 = *($4)
	*($2 + [80]) = $7
	*($2 + [1072]) = $23
	$19 = ($0 + [180])
	$9 = *($19)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [184]))) ){ goto $label$93 }
	$11 = [181]
	goto $label$17 
	
.LABEL $label$301
	*($9 + [8]) = $7
	*($9 + [16]) = $23
	*($2 + [1008]) = [0]
	*($9) = $4
	*($19) = ($9 + [24])
	$4 = *($2 + [1008])
	*($2 + [1008]) = [0]
	if ( $4 ){ goto $label$90 }
	goto $label$91 
	
.LABEL $label$300
	CALL $22(($0 + [176]), ($2 + [1008]), ($2 + [80]), ($2 + [1072]))
	$4 = *($2 + [1008])
	*($2 + [1008]) = [0]
	if ( ($4 == 0) ){ goto $label$92 }
	$11 = [121]
	goto $label$17 
	
.LABEL $label$299
	CALL _ZdlPv($4)
	$11 = [122]
	goto $label$17 
	
.LABEL $label$298
	$6 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [152])) == (int_64)CALL $fimport$9()), [9333])
	*(($4 = CALL _Znwj([40])) + [28]) = $17
	*($4 + [8]) = $27
	*($4 + [16]) = $26
	*($4 + [24]) = [2]
	*($4) = *($2 + [448])
	*($2 + [1080]) = $5
	*($2 + [1076]) = ($2 + [80])
	*($2 + [1072]) = ($2 + [80])
	*($2 + [1048]) = ($2 + [1072])
	*($2 + [1012]) = ($4 + [8])
	*($2 + [1008]) = $4
	*($2 + [1016]) = ($4 + [24])
	CALL $21(($2 + [1008]), ($2 + [1048]))
	$7 = *($4)
	$23 = CALL db_store_i64(*(($0 + [160])), (int_64)-8524858645755333088, $6, $7, ($2 + [80]), [25])
	*($4 + [32]) = $23
	$9 = ($0 + [168])
	if ( (uint_64)($7 <= *($9)) ){ goto $label$89 }
	$11 = [123]
	goto $label$17 
	
.LABEL $label$297
	*($9) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$11 = [124]
	goto $label$17 
	
.LABEL $label$296
	*($2 + [1008]) = $4
	$7 = *($4)
	*($2 + [80]) = $7
	*($2 + [1072]) = $23
	$19 = ($0 + [180])
	$9 = *($19)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [184]))) ){ goto $label$88 }
	$11 = [180]
	goto $label$17 
	
.LABEL $label$295
	*($9 + [8]) = $7
	*($9 + [16]) = $23
	*($2 + [1008]) = [0]
	*($9) = $4
	*($19) = ($9 + [24])
	$4 = *($2 + [1008])
	*($2 + [1008]) = [0]
	if ( $4 ){ goto $label$85 }
	goto $label$86 
	
.LABEL $label$294
	CALL $22(($0 + [176]), ($2 + [1008]), ($2 + [80]), ($2 + [1072]))
	$4 = *($2 + [1008])
	*($2 + [1008]) = [0]
	if ( ($4 == 0) ){ goto $label$87 }
	$11 = [126]
	goto $label$17 
	
.LABEL $label$293
	CALL _ZdlPv($4)
	$11 = [127]
	goto $label$17 
	
.LABEL $label$292
	$6 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [152])) == (int_64)CALL $fimport$9()), [9333])
	*(($4 = CALL _Znwj([40])) + [28]) = $17
	*($4 + [8]) = $28
	*($4 + [16]) = $13
	*($4 + [24]) = [3]
	*($4) = *($2 + [288])
	*($2 + [1080]) = $5
	*($2 + [1076]) = ($2 + [80])
	*($2 + [1072]) = ($2 + [80])
	*($2 + [1048]) = ($2 + [1072])
	*($2 + [1012]) = ($4 + [8])
	*($2 + [1008]) = $4
	*($2 + [1016]) = ($4 + [24])
	CALL $21(($2 + [1008]), ($2 + [1048]))
	$7 = *($4)
	$9 = CALL db_store_i64(*(($0 + [160])), (int_64)-8524858645755333088, $6, $7, ($2 + [80]), [25])
	*($4 + [32]) = $9
	$5 = ($0 + [168])
	if ( (uint_64)($7 <= *($5)) ){ goto $label$84 }
	$11 = [128]
	goto $label$17 
	
.LABEL $label$291
	*($5) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$11 = [129]
	goto $label$17 
	
.LABEL $label$290
	*($2 + [1008]) = $4
	$7 = *($4)
	*($2 + [80]) = $7
	*($2 + [1072]) = $9
	$23 = ($0 + [180])
	$5 = *($23)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [184]))) ){ goto $label$83 }
	$11 = [179]
	goto $label$17 
	
.LABEL $label$289
	*($5 + [8]) = $7
	*($5 + [16]) = $9
	*($2 + [1008]) = [0]
	*($5) = $4
	*($23) = ($5 + [24])
	$5 = *($2 + [1008])
	$4 = [0]
	*($2 + [1008]) = [0]
	if ( $5 ){ goto $label$80 }
	goto $label$81 
	
.LABEL $label$288
	CALL $22(($0 + [176]), ($2 + [1008]), ($2 + [80]), ($2 + [1072]))
	$5 = *($2 + [1008])
	$4 = [0]
	*($2 + [1008]) = [0]
	if ( ($5 == 0) ){ goto $label$82 }
	$11 = [131]
	goto $label$17 
	
.LABEL $label$287
	CALL _ZdlPv($5)
	$11 = [132]
	goto $label$17 
	
.LABEL $label$286
	$17 = ($0 + [112])
	$7 = *(($0 + [120]))
	*($2 + [184]) = $4
	*($2 + [176]) = (int_64)0
	$5 = CALL db_lowerbound_i64(*($0 + [112]), $7, (int_64)-8524862449301195232, (int_64)0)
	if ( ((int_32)$5 < (int_32)$4) ){ goto $label$79 }
	$11 = [133]
	goto $label$17 
	
.LABEL $label$285
	$4 = CALL $23($17, $5)
	$9 = (($2 + [176]) + [8])
	$5 = *($2 + [180])
	if ( ((int_32)$5 != (int_32)*($9)) ){ goto $label$77 }
	goto $label$78 
	
.LABEL $label$284
	$4 = CALL $23($17, $4)
	$5 = *($2 + [180])
	if ( ((int_32)$5 == (int_32)*($9)) ){ goto $label$230 }
	$11 = [134]
	goto $label$17 
	
.LABEL $label$283
	*($5) = *($4)
	*(($5 + [32])) = *(($4 + [32]))
	*(($5 + [24])) = *(($4 + [24]))
	*(($5 + [16])) = *(($4 + [16]))
	*(($5 + [8])) = *(($4 + [8]))
	*($2 + [180]) = ($5 + [40])
	goto $label$229 
	
.LABEL $label$282
	CALL $24(($2 + [176]), $4)
	$11 = [135]
	goto $label$17 
	
.LABEL $label$281
	CALL eosio_assert([1], [8854])
	$4 = CALL db_next_i64(*($4 + [44]), ($2 + [80]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$76 }
	$11 = [138]
	goto $label$17 
	
.LABEL $label$280
	$18 = *($2 + [180])
	$19 = *($2 + [176])
	if ( ((int_32)$19 == (int_32)$18) ){ goto $label$75 }
	$11 = [139]
	goto $label$17 
	
.LABEL $label$279
	$20 = ($0 + [140])
	$21 = ($0 + [136])
	$22 = ($0 + [120])
	$36 = ($0 + [112])
	$11 = [140]
	goto $label$17 
	
.LABEL $label$278
	$7 = *($19)
	$5 = *($20)
	$23 = *($21)
	if ( ((int_32)$23 == (int_32)$5) ){ goto $label$71 }
	$11 = [141]
	goto $label$17 
	
.LABEL $label$277
	$4 = ($5 + [-24])
	$9 = *($4)
	if ( ((int_64)*($9) == (int_64)$7) ){ goto $label$70 }
	$11 = [142]
	goto $label$17 
	
.LABEL $label$276
	$5 = $4
	if ( ((int_32)$23 != (int_32)$4) ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$275
	if ( ((int_32)$23 == (int_32)$5) ){ goto $label$69 }
	$11 = [178]
	goto $label$17 
	
.LABEL $label$274
	CALL eosio_assert(((int_32)*($9 + [40]) == (int_32)$17), [8884])
	goto $label$67 
	
.LABEL $label$273
	$4 = CALL db_find_i64(*($36), *($22), (int_64)-8524862449301195232, $7)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$68 }
	$11 = [144]
	goto $label$17 
	
.LABEL $label$272
	$9 = CALL $23($17, $4)
	CALL eosio_assert(((int_32)*($9 + [40]) == (int_32)$17), [8884])
	$11 = [145]
	goto $label$17 
	
.LABEL $label$271
	CALL eosio_assert([1], [8935])
	CALL eosio_assert([1], [8854])
	$4 = CALL db_next_i64(*($9 + [44]), ($2 + [80]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$66 }
	$11 = [146]
	goto $label$17 
	
.LABEL $label$270
	CALL $23($17, $4)
	$11 = [147]
	goto $label$17 
	
.LABEL $label$269
	CALL $25($17, $9)
	$11 = [148]
	goto $label$17 
	
.LABEL $label$268
	$19 = ($19 + [40])
	if ( ((int_32)$19 != (int_32)$18) ){ goto $label$74 }
	$11 = [149]
	goto $label$17 
	
.LABEL $label$267
	$22 = *($2 + [980])
	$19 = *($2 + [976])
	if ( ((int_32)$19 == (int_32)$22) ){ goto $label$65 }
	$11 = [150]
	goto $label$17 
	
.LABEL $label$266
	$37 = ($0 + [136])
	$36 = (($2 + [1008]) + [40])
	$18 = (($2 + [80]) + [72])
	$38 = ($0 + [100])
	$39 = ($0 + [96])
	$40 = ($0 + [80])
	$41 = ($0 + [112])
	$42 = ($0 + [120])
	$20 = ($0 + [128])
	$43 = ($0 + [144])
	$21 = ($0 + [140])
	$11 = [151]
	goto $label$17 
	
.LABEL $label$265
	$7 = *($19)
	CALL memcpy(($2 + [80]), ($19 + [8]), [88])
	$5 = *($38)
	$23 = *($39)
	if ( ((int_32)$23 == (int_32)$5) ){ goto $label$61 }
	$11 = [152]
	goto $label$17 
	
.LABEL $label$264
	$4 = ($5 + [-24])
	$9 = *($4)
	if ( ((int_64)*($9) == (int_64)$7) ){ goto $label$60 }
	$11 = [153]
	goto $label$17 
	
.LABEL $label$263
	$5 = $4
	if ( ((int_32)$23 != (int_32)$4) ){ goto $label$62 }
	goto $label$63 
	
.LABEL $label$262
	if ( ((int_32)$23 == (int_32)$5) ){ goto $label$59 }
	$11 = [176]
	goto $label$17 
	
.LABEL $label$261
	CALL eosio_assert(((int_32)*(($9 + [100])) == (int_32)$10), [8884])
	if ( $9 ){ goto $label$56 }
	goto $label$57 
	
.LABEL $label$260
	$4 = CALL db_find_i64(*(($0 + [72])), *($40), (int_64)-6030912142679474176, $7)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$58 }
	$11 = [155]
	goto $label$17 
	
.LABEL $label$259
	$9 = CALL $6($10, $4)
	CALL eosio_assert(((int_32)*($9 + [100]) == (int_32)$10), [8884])
	$11 = [156]
	goto $label$17 
	
.LABEL $label$258
	CALL eosio_assert([1], [8935])
	CALL eosio_assert([1], [8854])
	$4 = CALL db_next_i64(*($9 + [104]), ($2 + [1008]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$55 }
	$11 = [157]
	goto $label$17 
	
.LABEL $label$257
	CALL $6($10, $4)
	$11 = [158]
	goto $label$17 
	
.LABEL $label$256
	CALL $7($10, $9)
	$11 = [159]
	goto $label$17 
	
.LABEL $label$255
	$6 = *($0)
	CALL eosio_assert(((int_64)*($41) == (int_64)CALL $fimport$9()), [9333])
	*(($4 = CALL _Znwj([56])) + [40]) = $17
	*($4) = $7
	*($4 + [24]) = (int_64)0
	*($4 + [32]) = $8
	*($4 + [8]) = *($18)
	*(($4 + [16])) = *(($18 + [8]))
	*((($2 + [1048]) + [8])) = $36
	*($2 + [1052]) = ($2 + [1008])
	*($2 + [1048]) = ($2 + [1008])
	*($2 + [1064]) = ($2 + [1048])
	*((($2 + [1072]) + [8])) = ($4 + [24])
	*($2 + [1076]) = ($4 + [8])
	*($2 + [1072]) = $4
	CALL $26(($2 + [1072]), ($2 + [1064]))
	$7 = *($4)
	$9 = CALL db_store_i64(*($42), (int_64)-8524862449301195232, $6, $7, ($2 + [1008]), [40])
	*($4 + [44]) = $9
	if ( (uint_64)($7 <= *($20)) ){ goto $label$54 }
	$11 = [160]
	goto $label$17 
	
.LABEL $label$254
	*($20) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$11 = [161]
	goto $label$17 
	
.LABEL $label$253
	*($2 + [1072]) = $4
	$7 = *($4)
	*($2 + [1008]) = $7
	*($2 + [1048]) = $9
	$5 = *($21)
	if ( ((uint_32)$5 >= (uint_32)*($43)) ){ goto $label$53 }
	$11 = [174]
	goto $label$17 
	
.LABEL $label$252
	*($5 + [8]) = $7
	*($5 + [16]) = $9
	*($2 + [1072]) = [0]
	*($5) = $4
	*($21) = ($5 + [24])
	$4 = *($2 + [1072])
	*($2 + [1072]) = [0]
	if ( $4 ){ goto $label$50 }
	goto $label$51 
	
.LABEL $label$251
	CALL $27($37, ($2 + [1072]), ($2 + [1008]), ($2 + [1048]))
	$4 = *($2 + [1072])
	*($2 + [1072]) = [0]
	if ( ($4 == 0) ){ goto $label$52 }
	$11 = [163]
	goto $label$17 
	
.LABEL $label$250
	CALL _ZdlPv($4)
	$11 = [164]
	goto $label$17 
	
.LABEL $label$249
	$19 = ($19 + [112])
	if ( ((int_32)$19 != (int_32)$22) ){ goto $label$64 }
	$11 = [165]
	goto $label$17 
	
.LABEL $label$248
	*(($2 + [104])) = $8
	*($2 + [84]) = $12
	*($2 + [80]) = $16
	*($2 + [88]) = [1]
	*($2 + [96]) = (int_64)0
	*($2 + [112]) = $15
	*($2 + [120]) = (int_64)0
	CALL $12($3, ($2 + [80]), *($0))
	$4 = *($2 + [176])
	if ( ($4 == 0) ){ goto $label$49 }
	$11 = [166]
	goto $label$17 
	
.LABEL $label$247
	*($2 + [180]) = $4
	CALL _ZdlPv($4)
	$11 = [167]
	goto $label$17 
	
.LABEL $label$246
	$4 = *($2 + [192])
	if ( ($4 == 0) ){ goto $label$48 }
	$11 = [168]
	goto $label$17 
	
.LABEL $label$245
	*($2 + [196]) = $4
	CALL _ZdlPv($4)
	$11 = [169]
	goto $label$17 
	
.LABEL $label$244
	$4 = *($2 + [976])
	if ( ($4 == 0) ){ goto $label$47 }
	$11 = [170]
	goto $label$17 
	
.LABEL $label$243
	*($2 + [980]) = $4
	CALL _ZdlPv($4)
	$11 = [171]
	goto $label$17 
	
.LABEL $label$242
	$4 = *($2 + [992])
	if ( ($4 == 0) ){ goto $label$40 }
	$11 = [172]
	goto $label$17 
	
.LABEL $label$241
	*($2 + [996]) = $4
	CALL _ZdlPv($4)
	$11 = [173]
	goto $label$17 
	
.LABEL $label$240
	$global$0 = ($2 + [1088])
	return (unreachable)
	
.LABEL $label$239
	$6 = (int_64)0
	goto $label$176 
	
.LABEL $label$238
	$6 = (int_64)0
	goto $label$164 
	
.LABEL $label$237
	$6 = (int_64)0
	goto $label$152 
	
.LABEL $label$236
	$6 = (int_64)0
	goto $label$140 
	
.LABEL $label$235
	$6 = (int_64)0
	goto $label$128 
	
.LABEL $label$234
	CALL $57(($2 + [1048]))
	
.LABEL $label$233
	CALL $58(($2 + [592]))
	
.LABEL $label$232
	CALL $58(($2 + [432]))
	
.LABEL $label$231
	CALL $58(($2 + [272]))
	
.LABEL $label$230
	$11 = [137]
	goto $label$17 
	
.LABEL $label$229
	$11 = [135]
	goto $label$17 
	
.LABEL $label$228
	$11 = [105]
	goto $label$17 
	
.LABEL $label$227
	$11 = [103]
	goto $label$17 
	
.LABEL $label$226
	$11 = [6]
	goto $label$17 
	
.LABEL $label$225
	$11 = [1]
	goto $label$17 
	
.LABEL $label$224
	$11 = [4]
	goto $label$17 
	
.LABEL $label$223
	$11 = [1]
	goto $label$17 
	
.LABEL $label$222
	$11 = [5]
	goto $label$17 
	
.LABEL $label$221
	$11 = [1]
	goto $label$17 
	
.LABEL $label$220
	$11 = [2]
	goto $label$17 
	
.LABEL $label$219
	$11 = [268]
	goto $label$17 
	
.LABEL $label$218
	$11 = [9]
	goto $label$17 
	
.LABEL $label$217
	$11 = [9]
	goto $label$17 
	
.LABEL $label$216
	$11 = [266]
	goto $label$17 
	
.LABEL $label$215
	$11 = [11]
	goto $label$17 
	
.LABEL $label$214
	$11 = [11]
	goto $label$17 
	
.LABEL $label$213
	$11 = [264]
	goto $label$17 
	
.LABEL $label$212
	$11 = [13]
	goto $label$17 
	
.LABEL $label$211
	$11 = [13]
	goto $label$17 
	
.LABEL $label$210
	$11 = [262]
	goto $label$17 
	
.LABEL $label$209
	$11 = [15]
	goto $label$17 
	
.LABEL $label$208
	$11 = [15]
	goto $label$17 
	
.LABEL $label$207
	$11 = [260]
	goto $label$17 
	
.LABEL $label$206
	$11 = [17]
	goto $label$17 
	
.LABEL $label$205
	$11 = [17]
	goto $label$17 
	
.LABEL $label$204
	$11 = [258]
	goto $label$17 
	
.LABEL $label$203
	$11 = [19]
	goto $label$17 
	
.LABEL $label$202
	$11 = [19]
	goto $label$17 
	
.LABEL $label$201
	$11 = [20]
	goto $label$17 
	
.LABEL $label$200
	$11 = [253]
	goto $label$17 
	
.LABEL $label$199
	$11 = [22]
	goto $label$17 
	
.LABEL $label$198
	$11 = [22]
	goto $label$17 
	
.LABEL $label$197
	$11 = [23]
	goto $label$17 
	
.LABEL $label$196
	$11 = [23]
	goto $label$17 
	
.LABEL $label$195
	$11 = [27]
	goto $label$17 
	
.LABEL $label$194
	$11 = [25]
	goto $label$17 
	
.LABEL $label$193
	$11 = [30]
	goto $label$17 
	
.LABEL $label$192
	$11 = [237]
	goto $label$17 
	
.LABEL $label$191
	$11 = [30]
	goto $label$17 
	
.LABEL $label$190
	$11 = [32]
	goto $label$17 
	
.LABEL $label$189
	$11 = [35]
	goto $label$17 
	
.LABEL $label$188
	$11 = [235]
	goto $label$17 
	
.LABEL $label$187
	$11 = [35]
	goto $label$17 
	
.LABEL $label$186
	$11 = [37]
	goto $label$17 
	
.LABEL $label$185
	$11 = [40]
	goto $label$17 
	
.LABEL $label$184
	$11 = [233]
	goto $label$17 
	
.LABEL $label$183
	$11 = [40]
	goto $label$17 
	
.LABEL $label$182
	$11 = [42]
	goto $label$17 
	
.LABEL $label$181
	$11 = [43]
	goto $label$17 
	
.LABEL $label$180
	$11 = [230]
	goto $label$17 
	
.LABEL $label$179
	$11 = [44]
	goto $label$17 
	
.LABEL $label$178
	$11 = [45]
	goto $label$17 
	
.LABEL $label$177
	$11 = [46]
	goto $label$17 
	
.LABEL $label$176
	$11 = [47]
	goto $label$17 
	
.LABEL $label$175
	$11 = [48]
	goto $label$17 
	
.LABEL $label$174
	$11 = [50]
	goto $label$17 
	
.LABEL $label$173
	$11 = [48]
	goto $label$17 
	
.LABEL $label$172
	$11 = [50]
	goto $label$17 
	
.LABEL $label$171
	$11 = [49]
	goto $label$17 
	
.LABEL $label$170
	$11 = [49]
	goto $label$17 
	
.LABEL $label$169
	$11 = [51]
	goto $label$17 
	
.LABEL $label$168
	$11 = [221]
	goto $label$17 
	
.LABEL $label$167
	$11 = [52]
	goto $label$17 
	
.LABEL $label$166
	$11 = [53]
	goto $label$17 
	
.LABEL $label$165
	$11 = [54]
	goto $label$17 
	
.LABEL $label$164
	$11 = [55]
	goto $label$17 
	
.LABEL $label$163
	$11 = [56]
	goto $label$17 
	
.LABEL $label$162
	$11 = [58]
	goto $label$17 
	
.LABEL $label$161
	$11 = [56]
	goto $label$17 
	
.LABEL $label$160
	$11 = [58]
	goto $label$17 
	
.LABEL $label$159
	$11 = [57]
	goto $label$17 
	
.LABEL $label$158
	$11 = [57]
	goto $label$17 
	
.LABEL $label$157
	$11 = [59]
	goto $label$17 
	
.LABEL $label$156
	$11 = [212]
	goto $label$17 
	
.LABEL $label$155
	$11 = [60]
	goto $label$17 
	
.LABEL $label$154
	$11 = [61]
	goto $label$17 
	
.LABEL $label$153
	$11 = [62]
	goto $label$17 
	
.LABEL $label$152
	$11 = [63]
	goto $label$17 
	
.LABEL $label$151
	$11 = [64]
	goto $label$17 
	
.LABEL $label$150
	$11 = [66]
	goto $label$17 
	
.LABEL $label$149
	$11 = [64]
	goto $label$17 
	
.LABEL $label$148
	$11 = [66]
	goto $label$17 
	
.LABEL $label$147
	$11 = [65]
	goto $label$17 
	
.LABEL $label$146
	$11 = [65]
	goto $label$17 
	
.LABEL $label$145
	$11 = [67]
	goto $label$17 
	
.LABEL $label$144
	$11 = [203]
	goto $label$17 
	
.LABEL $label$143
	$11 = [68]
	goto $label$17 
	
.LABEL $label$142
	$11 = [69]
	goto $label$17 
	
.LABEL $label$141
	$11 = [70]
	goto $label$17 
	
.LABEL $label$140
	$11 = [71]
	goto $label$17 
	
.LABEL $label$139
	$11 = [72]
	goto $label$17 
	
.LABEL $label$138
	$11 = [74]
	goto $label$17 
	
.LABEL $label$137
	$11 = [72]
	goto $label$17 
	
.LABEL $label$136
	$11 = [74]
	goto $label$17 
	
.LABEL $label$135
	$11 = [73]
	goto $label$17 
	
.LABEL $label$134
	$11 = [73]
	goto $label$17 
	
.LABEL $label$133
	$11 = [75]
	goto $label$17 
	
.LABEL $label$132
	$11 = [194]
	goto $label$17 
	
.LABEL $label$131
	$11 = [76]
	goto $label$17 
	
.LABEL $label$130
	$11 = [77]
	goto $label$17 
	
.LABEL $label$129
	$11 = [78]
	goto $label$17 
	
.LABEL $label$128
	$11 = [79]
	goto $label$17 
	
.LABEL $label$127
	$11 = [80]
	goto $label$17 
	
.LABEL $label$126
	$11 = [82]
	goto $label$17 
	
.LABEL $label$125
	$11 = [80]
	goto $label$17 
	
.LABEL $label$124
	$11 = [82]
	goto $label$17 
	
.LABEL $label$123
	$11 = [81]
	goto $label$17 
	
.LABEL $label$122
	$11 = [81]
	goto $label$17 
	
.LABEL $label$121
	$11 = [186]
	goto $label$17 
	
.LABEL $label$120
	$11 = [84]
	goto $label$17 
	
.LABEL $label$119
	$11 = [86]
	goto $label$17 
	
.LABEL $label$118
	$11 = [85]
	goto $label$17 
	
.LABEL $label$117
	$11 = [87]
	goto $label$17 
	
.LABEL $label$116
	$11 = [184]
	goto $label$17 
	
.LABEL $label$115
	$11 = [90]
	goto $label$17 
	
.LABEL $label$114
	$11 = [92]
	goto $label$17 
	
.LABEL $label$113
	$11 = [94]
	goto $label$17 
	
.LABEL $label$112
	$11 = [96]
	goto $label$17 
	
.LABEL $label$111
	$11 = [98]
	goto $label$17 
	
.LABEL $label$110
	$11 = [100]
	goto $label$17 
	
.LABEL $label$109
	$11 = [106]
	goto $label$17 
	
.LABEL $label$108
	$11 = [105]
	goto $label$17 
	
.LABEL $label$107
	$11 = [102]
	goto $label$17 
	
.LABEL $label$106
	$11 = [104]
	goto $label$17 
	
.LABEL $label$105
	$11 = [117]
	goto $label$17 
	
.LABEL $label$104
	$11 = [108]
	goto $label$17 
	
.LABEL $label$103
	$11 = [111]
	goto $label$17 
	
.LABEL $label$102
	$11 = [109]
	goto $label$17 
	
.LABEL $label$101
	$11 = [111]
	goto $label$17 
	
.LABEL $label$100
	$11 = [182]
	goto $label$17 
	
.LABEL $label$99
	$11 = [111]
	goto $label$17 
	
.LABEL $label$98
	$11 = [116]
	goto $label$17 
	
.LABEL $label$97
	$11 = [116]
	goto $label$17 
	
.LABEL $label$96
	$11 = [113]
	goto $label$17 
	
.LABEL $label$95
	$11 = [115]
	goto $label$17 
	
.LABEL $label$94
	$11 = [119]
	goto $label$17 
	
.LABEL $label$93
	$11 = [120]
	goto $label$17 
	
.LABEL $label$92
	$11 = [122]
	goto $label$17 
	
.LABEL $label$91
	$11 = [122]
	goto $label$17 
	
.LABEL $label$90
	$11 = [121]
	goto $label$17 
	
.LABEL $label$89
	$11 = [124]
	goto $label$17 
	
.LABEL $label$88
	$11 = [125]
	goto $label$17 
	
.LABEL $label$87
	$11 = [127]
	goto $label$17 
	
.LABEL $label$86
	$11 = [127]
	goto $label$17 
	
.LABEL $label$85
	$11 = [126]
	goto $label$17 
	
.LABEL $label$84
	$11 = [129]
	goto $label$17 
	
.LABEL $label$83
	$11 = [130]
	goto $label$17 
	
.LABEL $label$82
	$11 = [132]
	goto $label$17 
	
.LABEL $label$81
	$11 = [132]
	goto $label$17 
	
.LABEL $label$80
	$11 = [131]
	goto $label$17 
	
.LABEL $label$79
	$11 = [138]
	goto $label$17 
	
.LABEL $label$78
	$11 = [137]
	goto $label$17 
	
.LABEL $label$77
	$11 = [134]
	goto $label$17 
	
.LABEL $label$76
	$11 = [136]
	goto $label$17 
	
.LABEL $label$75
	$11 = [149]
	goto $label$17 
	
.LABEL $label$74
	$11 = [140]
	goto $label$17 
	
.LABEL $label$73
	$11 = [143]
	goto $label$17 
	
.LABEL $label$72
	$11 = [141]
	goto $label$17 
	
.LABEL $label$71
	$11 = [143]
	goto $label$17 
	
.LABEL $label$70
	$11 = [177]
	goto $label$17 
	
.LABEL $label$69
	$11 = [143]
	goto $label$17 
	
.LABEL $label$68
	$11 = [148]
	goto $label$17 
	
.LABEL $label$67
	$11 = [145]
	goto $label$17 
	
.LABEL $label$66
	$11 = [147]
	goto $label$17 
	
.LABEL $label$65
	$11 = [165]
	goto $label$17 
	
.LABEL $label$64
	$11 = [151]
	goto $label$17 
	
.LABEL $label$63
	$11 = [154]
	goto $label$17 
	
.LABEL $label$62
	$11 = [152]
	goto $label$17 
	
.LABEL $label$61
	$11 = [154]
	goto $label$17 
	
.LABEL $label$60
	$11 = [175]
	goto $label$17 
	
.LABEL $label$59
	$11 = [154]
	goto $label$17 
	
.LABEL $label$58
	$11 = [159]
	goto $label$17 
	
.LABEL $label$57
	$11 = [159]
	goto $label$17 
	
.LABEL $label$56
	$11 = [156]
	goto $label$17 
	
.LABEL $label$55
	$11 = [158]
	goto $label$17 
	
.LABEL $label$54
	$11 = [161]
	goto $label$17 
	
.LABEL $label$53
	$11 = [162]
	goto $label$17 
	
.LABEL $label$52
	$11 = [164]
	goto $label$17 
	
.LABEL $label$51
	$11 = [164]
	goto $label$17 
	
.LABEL $label$50
	$11 = [163]
	goto $label$17 
	
.LABEL $label$49
	$11 = [167]
	goto $label$17 
	
.LABEL $label$48
	$11 = [169]
	goto $label$17 
	
.LABEL $label$47
	$11 = [171]
	goto $label$17 
	
.LABEL $label$46
	$11 = [171]
	goto $label$17 
	
.LABEL $label$45
	$11 = [170]
	goto $label$17 
	
.LABEL $label$44
	$11 = [171]
	goto $label$17 
	
.LABEL $label$43
	$11 = [170]
	goto $label$17 
	
.LABEL $label$42
	$11 = [171]
	goto $label$17 
	
.LABEL $label$41
	$11 = [170]
	goto $label$17 
	
.LABEL $label$40
	$11 = [173]
	goto $label$17 
	
.LABEL $label$39
	$11 = [189]
	goto $label$17 
	
.LABEL $label$38
	$11 = [190]
	goto $label$17 
	
.LABEL $label$37
	$11 = [198]
	goto $label$17 
	
.LABEL $label$36
	$11 = [199]
	goto $label$17 
	
.LABEL $label$35
	$11 = [207]
	goto $label$17 
	
.LABEL $label$34
	$11 = [208]
	goto $label$17 
	
.LABEL $label$33
	$11 = [216]
	goto $label$17 
	
.LABEL $label$32
	$11 = [217]
	goto $label$17 
	
.LABEL $label$31
	$11 = [225]
	goto $label$17 
	
.LABEL $label$30
	$11 = [226]
	goto $label$17 
	
.LABEL $label$29
	$11 = [250]
	goto $label$17 
	
.LABEL $label$28
	$11 = [241]
	goto $label$17 
	
.LABEL $label$27
	$11 = [244]
	goto $label$17 
	
.LABEL $label$26
	$11 = [242]
	goto $label$17 
	
.LABEL $label$25
	$11 = [244]
	goto $label$17 
	
.LABEL $label$24
	$11 = [251]
	goto $label$17 
	
.LABEL $label$23
	$11 = [244]
	goto $label$17 
	
.LABEL $label$22
	$11 = [249]
	goto $label$17 
	
.LABEL $label$21
	$11 = [249]
	goto $label$17 
	
.LABEL $label$20
	$11 = [246]
	goto $label$17 
	
.LABEL $label$19
	$11 = [248]
	goto $label$17 
	
.LABEL $label$18
	$11 = [256]
	goto $label$17 
	$11
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[112])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[38347923]) ){ goto $label$2 }
	$6 = [38347922]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[112])
	if ( ((uint_32)$7 > (uint_32)[19173960]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$6 * (int_32)[112]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $58($0)
	
.LABEL $label$1
	$2 = ($2 - $3)
	$4 = CALL memcpy(($5 + ((int_32)$4 * (int_32)[112])), $1, [112])
	$1 = ($4 + ((int_32)((int_32)$2 / (int_32)[-112]) * (int_32)[112]))
	$6 = ($5 + ((int_32)$6 * (int_32)[112]))
	$5 = ($4 + [112])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	(unreachable)
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($6) - $5) > (int_32)[0]), [8482])
	CALL memcpy(*($3), ($2 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $8 ){ goto $label$1 }
	$7 = ($3 & [1])
	$3 = *($1)
	$3 = ( *(($1 + [4])) ? uint_32($3 >> [1]) : $7 )
	if ( ($3 == 0) ){ goto $label$2 }
	$8 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) >= (int_32)$3), [8482])
	$5 = ($0 + [4])
	CALL memcpy(*($5), ( $8 ? ($1 + [1]) : $7 ), $3)
	*($5) = (*($5) + $3)
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $8($0)
	$2 = ($0 + [32])
	$3 = *(($0 + [60]))
	if ( ((int_32)$3 == (int_32)*(($0 + [56]))) ){ goto $label$2 }
	$4 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$2), [8884])
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	$3 = CALL db_find_i64(*($2), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $9($2, $3)
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$2), [8884])
	
.LABEL $label$1
	$3 = [0]
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [9117])
	CALL eosio_assert(((uint_32)*($4) > (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$6() / (uint_64)(int_64)1000000))), [8299])
	$4 = *(($0 + [60]))
	if ( ((int_32)$4 == (int_32)*(($0 + [56]))) ){ goto $label$4 }
	$3 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [48]) == (int_32)$2), [8884])
	goto $label$3 
	
.LABEL $label$4
	$0 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$3 = CALL $9($2, $0)
	CALL eosio_assert(((int_32)*($3 + [48]) == (int_32)$2), [8884])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [9117])
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$1), [8317])
}

void .FUNC $11 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$4 = ($global$0 - [48])
	$global$0 = $4
	CALL require_auth(*($0))
	$5 = ($0 + [32])
	$6 = *(($0 + [60]))
	if ( ((int_32)$6 == (int_32)*(($0 + [56]))) ){ goto $label$6 }
	$6 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)$5), [8884])
	if ( $6 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = CALL db_find_i64(*($5), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert(((int_32)*(CALL $9($5, $6) + [48]) == (int_32)$5), [8884])
	
.LABEL $label$5
	$6 = *(($0 + [60]))
	if ( ((int_32)$6 == (int_32)*(($0 + [56]))) ){ goto $label$3 }
	$7 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)$5), [8884])
	goto $label$2 
	
.LABEL $label$4
	$8 = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + $1)
	$9 = (int_64)0
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$7 = CALL $9($5, $6)
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)$5), [8884])
	
.LABEL $label$2
	$6 = [0]
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9117])
	$8 = *($7)
	$7 = *(($0 + [60]))
	if ( ((int_32)$7 == (int_32)*(($0 + [56]))) ){ goto $label$8 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)$5), [8884])
	goto $label$7 
	
.LABEL $label$8
	$7 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	$6 = CALL $9($5, $7)
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)$5), [8884])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [9117])
	$9 = *($6 + [40])
	
.LABEL $label$1
	$6 = CALL $62([8360])
	if ( ($6 <= [8]) ){ goto $label$12 }
	CALL eosio_assert([0], [8488])
	goto $label$11 
	
.LABEL $label$12
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$10 = (int_64)0
	
.LOOP $label$13:
	$7 = *(($6 + [8359]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$14 }
	CALL eosio_assert([0], [8533])
	
.LABEL $label$14
	$10 = ((int_64)((int_64)$10 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$13 }
	goto $label$9 
	
.LABEL $label$10
	$10 = (int_64)0
	
.LABEL $label$9
	CALL eosio_assert([1], [8586])
	$11 = ((int_64)$10 & (int_64)72057594037927935)
	$10 = ((int_64)((int_64)$10 << (int_64)8) | (int_64)4)
	$6 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$12 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$18 }
	$11 = $12
	$7 = [1]
	$13 = $6
	$6 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$18
	$11 = $12
	
.LOOP $label$19:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$16 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$13 = ($6 + [1])
	$6 = $13
	if ( $7 ){ goto $label$19 }
	$7 = [1]
	$6 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$7 = [0]
	
.LABEL $label$15
	CALL eosio_assert($7, [8635])
	$11 = (int_64)0
	$6 = CALL db_lowerbound_i64(*($0 + [72]), *(($0 + [80])), (int_64)-6030912142679474176, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$20 }
	$7 = ($0 + [72])
	$6 = CALL $6($7, $6)
	$11 = (int_64)0
	
.LOOP $label$21:
	CALL eosio_assert(((int_64)*(($6 + [88])) == (int_64)$10), [8655])
	$11 = ((int_64)*($6 + [80]) + (int_64)$11)
	CALL eosio_assert(((int_64)$11 > (int_64)-4611686018427387904), [8698])
	CALL eosio_assert(((int_64)$11 < (int_64)4611686018427387904), [8717])
	CALL eosio_assert([1], [8854])
	$6 = CALL db_next_i64(*($6 + [104]), $4)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$20 }
	$6 = CALL $6($7, $6)
	goto $label$21 
	
.LABEL $label$20
	*(($4 + [24])) = $10
	*($4 + [4]) = $1
	*($4) = $8
	*($4 + [8]) = $2
	*($4 + [16]) = $11
	*($4 + [32]) = $3
	*($4 + [40]) = $9
	CALL $12($5, $4, *($0))
	$global$0 = ($4 + [48])
}

void .FUNC $12 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$0), [8884])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7035939317486714880, (int_64)7035939317486714880)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $9($0, $4)
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$0), [8884])
	
.LABEL $label$2
	*($3) = $1
	CALL eosio_assert([1], [9142])
	CALL $13($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $14($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $13 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [9177])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$9()), [9223])
	$3 = *($3)
	*($1) = *($3)
	*(($5 = ($1 + [40]))) = *(($3 + [40]))
	*(($6 = ($1 + [32]))) = *(($3 + [32]))
	*(($1 + [24])) = *(($3 + [24]))
	*(($7 = ($1 + [16]))) = *(($3 + [16]))
	*(($8 = ($1 + [8]))) = *(($3 + [8]))
	CALL eosio_assert([1], [9274])
	*($4 + [56]) = ($4 + [41])
	*($4 + [52]) = $4
	*($4 + [48]) = $4
	*($4 + [64]) = ($4 + [48])
	*($4 + [76]) = ($1 + [4])
	*($4 + [72]) = $1
	*($4 + [80]) = $8
	*($4 + [84]) = $7
	*($4 + [88]) = $6
	*($4 + [92]) = $5
	CALL $46(($4 + [72]), ($4 + [64]))
	CALL db_update_i64(*(($1 + [52])), $2, $4, [41])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)7035939317486714880) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)7035939317486714881
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

int_32 .FUNC $36 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$3 = ($global$0 - [528])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $65($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = (($4 + [256]) + [40]))) = (int_64)0
	*(($8 = (($4 + [256]) + [32]))) = (int_64)0
	*(($9 = (($4 + [256]) + [24]))) = (int_64)0
	*(($10 = (($4 + [256]) + [72]))) = (int_64)0
	*(($11 = (($4 + [256]) + [64]))) = (int_64)0
	*(($12 = (($4 + [256]) + [56]))) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [256]) = (int_64)0
	*($4 + [304]) = (int_64)0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [8849])
	CALL memcpy(($4 + [256]), $2, [8])
	CALL eosio_assert(((uint_32)($7 + [-8]) > (uint_32)[31]), [8849])
	CALL memcpy((($4 + [256]) + [16]), ($2 + [8]), [32])
	CALL eosio_assert(((uint_32)($7 + [-40]) > (uint_32)[31]), [8849])
	CALL memcpy((($4 + [256]) + [48]), ($2 + [40]), [32])
	*(($4 + [84])) = ($2 + [72])
	*((($4 + [64]) + [24])) = ($2 + $7)
	*((($4 + [64]) + [40])) = $0
	*((($4 + [64]) + [48])) = (int_64)-1
	*((($4 + [64]) + [56])) = (int_64)0
	*((($4 + [64]) + [64])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [184])) = $0
	*($4 + [72]) = $1
	*($4 + [64]) = $0
	*($4 + [80]) = $2
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*($4 + [216]) = $0
	*(($13 = (($4 + [368]) + [16]))) = *($8)
	*(($8 = (($4 + [368]) + [24]))) = *($3)
	*(($3 = (($4 + [336]) + [16]))) = *($11)
	*(($11 = (($4 + [336]) + [24]))) = *($10)
	*($4 + [368]) = *($4 + [272])
	*($4 + [376]) = *($9)
	*($4 + [336]) = *($4 + [304])
	*($4 + [344]) = *($12)
	$0 = *($4 + [256])
	*((($4 + [432]) + [24])) = *($11)
	*((($4 + [432]) + [16])) = *($3)
	*((($4 + [400]) + [16])) = *($13)
	*((($4 + [400]) + [24])) = *($8)
	*($4 + [440]) = *($4 + [344])
	*($4 + [432]) = *($4 + [336])
	*($4 + [400]) = *($4 + [368])
	*($4 + [408]) = *($4 + [376])
	$3 = (($4 + [64]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$1 = *((($4 + [400]) + [24]))
	*((($4 + [496]) + [24])) = $1
	$14 = *((($4 + [400]) + [16]))
	*((($4 + [496]) + [16])) = $14
	*(($5 = (($4 + [464]) + [16]))) = *((($4 + [432]) + [16]))
	*(($8 = (($4 + [464]) + [24]))) = *((($4 + [432]) + [24]))
	*((($4 + [32]) + [16])) = $14
	*((($4 + [32]) + [24])) = $1
	$1 = *($4 + [408])
	*($4 + [504]) = $1
	$14 = *($4 + [400])
	*($4 + [496]) = $14
	*($4 + [464]) = *($4 + [432])
	*($4 + [472]) = *($4 + [440])
	*($4 + [32]) = $14
	*($4 + [40]) = $1
	*(($4 + [24])) = *($8)
	*(($4 + [16])) = *($5)
	*($4 + [8]) = *($4 + [472])
	*($4) = *($4 + [464])
	CALL void $3((int_32 $0), (int_64 ($4 + [32])), (int_32 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $68($2)
	
.LABEL $label$5
	CALL $39(($4 + [64]))
	$global$0 = ($4 + [528])
	return [1]
}

int_32 .FUNC $37 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	$3 = ($global$0 - [480])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $65($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = (($4 + [272]) + [16]))) = (int_64)0
	*(($8 = (($4 + [272]) + [56]))) = (int_64)0
	*(($9 = (($4 + [272]) + [48]))) = (int_64)0
	*(($10 = (($4 + [272]) + [40]))) = (int_64)0
	*($4 + [280]) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [260]) = $2
	*($4 + [256]) = $2
	*($4 + [264]) = ($2 + $7)
	*($4 + [432]) = ($4 + [256])
	*($4 + [64]) = ($4 + [272])
	CALL $40(($4 + [64]), ($4 + [432]))
	*(($11 = (($4 + [48]) + [8]))) = *($4 + [264])
	*($4 + [48]) = *($4 + [256])
	$11 = *($11)
	*((($4 + [336]) + [8])) = $11
	*(($12 = (($4 + [400]) + [8]))) = $11
	$13 = *($4 + [48])
	*($4 + [400]) = $13
	*($4 + [336]) = $13
	$11 = *($12)
	*((($4 + [432]) + [8])) = $11
	*((($4 + [64]) + [24])) = $11
	*($4 + [64]) = $0
	*($4 + [72]) = $1
	$1 = *($4 + [400])
	*($4 + [80]) = $1
	*($4 + [432]) = $1
	*((($4 + [64]) + [40])) = $0
	*((($4 + [64]) + [48])) = (int_64)-1
	*((($4 + [64]) + [56])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [184])) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*($4 + [216]) = $0
	*(($4 + [248])) = [0]
	*(($4 + [240])) = (int_64)0
	*(($11 = (($4 + [368]) + [8]))) = *($3)
	*(($3 = (($4 + [336]) + [16]))) = *($9)
	*(($9 = (($4 + [336]) + [24]))) = *($8)
	*($4 + [368]) = *($4 + [280])
	*($4 + [336]) = *($4 + [304])
	*($4 + [344]) = *($10)
	$0 = *($4 + [272])
	*((($4 + [400]) + [24])) = *($9)
	*((($4 + [400]) + [16])) = *($3)
	*((($4 + [384]) + [8])) = *($11)
	*($4 + [408]) = *($4 + [344])
	*($4 + [400]) = *($4 + [336])
	*($4 + [384]) = *($4 + [368])
	$3 = (($4 + [64]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$1 = *((($4 + [384]) + [8]))
	*((($4 + [464]) + [8])) = $1
	$13 = *((($4 + [400]) + [16]))
	*((($4 + [432]) + [16])) = $13
	$14 = *((($4 + [400]) + [24]))
	*((($4 + [432]) + [24])) = $14
	*((($4 + [32]) + [8])) = $1
	*(($4 + [24])) = $14
	*(($4 + [16])) = $13
	$1 = *($4 + [384])
	*($4 + [464]) = $1
	$13 = *($4 + [400])
	*($4 + [432]) = $13
	$14 = *($4 + [408])
	*($4 + [440]) = $14
	*($4 + [32]) = $1
	*($4 + [8]) = $14
	*($4) = $13
	CALL void $3((int_32 $0), (int_64 ($4 + [32])), (int_32 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $68($2)
	
.LABEL $label$5
	CALL $39(($4 + [64]))
	$global$0 = ($4 + [480])
	return [1]
}

int_32 .FUNC $34 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [288])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $65($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = (($4 + [216]) + [16]))) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [216]) = (int_64)0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [8849])
	CALL memcpy(($4 + [216]), $2, [8])
	$8 = ($7 & [-8])
	CALL eosio_assert(((int_32)$8 != (int_32)[8]), [8849])
	CALL memcpy((($4 + [216]) + [8]), ($2 + [8]), [8])
	*($4 + [24]) = (int_64)0
	CALL eosio_assert(((int_32)$8 != (int_32)[16]), [8849])
	CALL memcpy(($4 + [24]), ($2 + [16]), [8])
	*($3) = *($4 + [24])
	*(($4 + [44])) = ($2 + [24])
	*((($4 + [24]) + [24])) = ($2 + $7)
	*(($4 + [64])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $2
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [184])) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*($4 + [176]) = $0
	*(($8 = (($4 + [240]) + [8]))) = *($3)
	*($4 + [240]) = *($4 + [224])
	$0 = *($4 + [216])
	*((($4 + [256]) + [8])) = *($8)
	*($4 + [256]) = *($4 + [240])
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$1 = *((($4 + [256]) + [8]))
	*((($4 + [272]) + [8])) = $1
	*((($4 + [8]) + [8])) = $1
	$1 = *($4 + [256])
	*($4 + [8]) = $1
	*($4 + [272]) = $1
	CALL void $3((int_32 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $68($2)
	
.LABEL $label$5
	CALL $39(($4 + [24]))
	$global$0 = ($4 + [288])
	return [1]
}

int_32 .FUNC $35 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [208])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $65($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [196]) = [0]
	*($4 + [192]) = [0]
	*($4 + [200]) = (int_64)0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[3]), [8849])
	CALL memcpy(($4 + [192]), $2, [4])
	CALL eosio_assert(((int_32)$7 != (int_32)[4]), [8849])
	CALL memcpy((($4 + [192]) | [4]), ($2 + [4]), [1])
	CALL eosio_assert(((uint_32)($7 + [-5]) > (uint_32)[7]), [8849])
	CALL memcpy((($4 + [192]) + [8]), ($2 + [5]), [8])
	*(($4 + [20])) = ($2 + [13])
	*(($4 + [24])) = ($2 + $7)
	*(($4 + [40])) = $0
	*(($4 + [48])) = (int_64)-1
	*(($4 + [56])) = (int_64)0
	*(($4 + [64])) = [0]
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [32]) = $0
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*($4 + [152]) = $0
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *($4 + [200])
	$8 = *($4 + [196])
	$9 = *($4 + [192])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $9), (int_32 ($8 & [255])), (int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $68($2)
	
.LABEL $label$5
	CALL $39($4)
	$global$0 = ($4 + [208])
	return [1]
}

void .FUNC $32 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [80])
	$global$0 = $3
	CALL require_auth((int_64)4297304112138413936)
	$4 = ($0 + [112])
	$6 = *(($0 + [140]))
	$5 = *(($0 + [136]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($8 + [40]) == (int_32)$4), [8884])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [120])), (int_64)-8524862449301195232, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $23($4, $7)
	CALL eosio_assert(((int_32)*($8 + [40]) == (int_32)$4), [8884])
	
.LABEL $label$1
	$7 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($7, [8464])
	$9 = *($0)
	CALL eosio_assert($7, [9142])
	CALL eosio_assert(((int_32)*($8 + [40]) == (int_32)$4), [9177])
	CALL eosio_assert(((int_64)*(($0 + [112])) == (int_64)CALL $fimport$9()), [9223])
	$1 = *($8)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($8 + [32]))), [8655])
	$10 = ((int_64)*($8 + [24]) + (int_64)*($2))
	*($8 + [24]) = $10
	CALL eosio_assert(((int_64)$10 > (int_64)-4611686018427387904), [8698])
	CALL eosio_assert(((int_64)*($8 + [24]) < (int_64)4611686018427387904), [8717])
	CALL eosio_assert(((int_64)$1 == (int_64)*($8)), [9274])
	*($3 + [48]) = ($3 + [40])
	*($3 + [44]) = $3
	*($3 + [40]) = $3
	*($3 + [56]) = ($3 + [40])
	*($3 + [68]) = ($8 + [8])
	*($3 + [64]) = $8
	*($3 + [72]) = ($8 + [24])
	CALL $26(($3 + [64]), ($3 + [56]))
	CALL db_update_i64(*($8 + [44]), $9, $3, [40])
	$7 = ($0 + [128])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$5 }
	*($7) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [80])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [80])
	$global$0 = $3
	CALL memory()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$1 }
	if ( ((int_64)$2 <= (int_64)-4139046217973022721) ){ goto $label$5 }
	if ( ((int_64)$2 == (int_64)-4139046217973022720) ){ goto $label$4 }
	if ( ((int_64)$2 == (int_64)-4139046214987202560) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-3075276115167177360) ){ goto $label$1 }
	*($3 + [44]) = [0]
	*($3 + [40]) = [1]
	*($3 + [32]) = *($3 + [40])
	CALL $34($1, $1, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$5
	if ( ((int_64)$2 == (int_64)-4994302320998088704) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)-4417253565123264512) ){ goto $label$1 }
	*($3 + [76]) = [0]
	*($3 + [72]) = [2]
	*($3) = *($3 + [72])
	CALL $35($1, $1, $3)
	goto $label$1 
	
.LABEL $label$4
	*($3 + [52]) = [0]
	*($3 + [48]) = [3]
	*($3 + [24]) = *($3 + [48])
	CALL $36($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [60]) = [0]
	*($3 + [56]) = [4]
	*($3 + [16]) = *($3 + [56])
	CALL $37($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*($3 + [68]) = [0]
	*($3 + [64]) = [5]
	*($3 + [8]) = *($3 + [64])
	CALL $38($1, $1, ($3 + [8]))
	
.LABEL $label$1
	CALL $60([0])
	$global$0 = ($3 + [80])
}

void .FUNC $30 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $58($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $31 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [176])
	$global$0 = $4
	CALL require_auth($1)
	CALL $10($0, [2])
	$5 = ($0 + [72])
	$7 = *(($0 + [100]))
	$6 = *(($0 + [96]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$3 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(($9 + [100])) == (int_32)$5), [8884])
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [80])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $6($5, $8)
	CALL eosio_assert(((int_32)*($9 + [100]) == (int_32)$5), [8884])
	
.LABEL $label$1
	$8 = ((int_32)$9 != (int_32)[0])
	CALL eosio_assert($8, [8397])
	*(($4 + [24])) = *(($9 + [40]))
	*(($4 + [16])) = *(($9 + [32]))
	*($4 + [8]) = *(($9 + [24]))
	*($4) = *($9 + [16])
	CALL eosio_assert((CALL $61($4, $2, [32]) == 0), [8437])
	CALL assert_sha256($3, [32], $2)
	$10 = *($0)
	CALL eosio_assert($8, [9142])
	CALL eosio_assert(((int_32)*($9 + [100]) == (int_32)$5), [9177])
	CALL eosio_assert(((int_64)*(($0 + [72])) == (int_64)CALL $fimport$9()), [9223])
	*(($9 + [72])) = *(($3 + [24]))
	*(($9 + [64])) = *(($3 + [16]))
	*(($9 + [56])) = *(($3 + [8]))
	*($9 + [48]) = *($3)
	*($9 + [96]) = [1]
	$1 = *($9)
	CALL eosio_assert([1], [9274])
	*($4 + [136]) = (($4 + [32]) + [89])
	*($4 + [132]) = ($4 + [32])
	*($4 + [128]) = ($4 + [32])
	*($4 + [144]) = ($4 + [128])
	*($4 + [156]) = ($9 + [16])
	*($4 + [152]) = $9
	*($4 + [160]) = ($9 + [48])
	*($4 + [164]) = ($9 + [80])
	*($4 + [168]) = ($9 + [96])
	CALL $29(($4 + [152]), ($4 + [144]))
	CALL db_update_i64(*($9 + [104]), $10, ($4 + [32]), [89])
	$8 = ($0 + [88])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$5 }
	*($8) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($4 + [176])
}

void .FUNC $58 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $59 ()
{
	return [9388]
}

int_32 .FUNC $61 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_32 .FUNC $63 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $59())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $64($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $65($1)
	
.LABEL $label$2
	*(CALL $59()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $65(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $68($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

int_32 .FUNC $38 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [208])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $65($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [200]) = (int_64)0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [8849])
	CALL memcpy(($4 + [200]), $2, [8])
	*(($4 + [28])) = ($2 + [8])
	*(($4 + [32])) = ($2 + $7)
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*($4 + [160]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($4 + [200])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $68($2)
	
.LABEL $label$5
	CALL $39(($4 + [8]))
	$global$0 = ($4 + [208])
	return [1]
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $63(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [9384])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $63(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $68($0)
	
.LABEL $label$1
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

void .FUNC $57 (int_32 $0)
{
	CALL abort()
	(unreachable)
}