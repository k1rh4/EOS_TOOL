(data (i32.const 8220) "failed to allocate pages\00ERR::DAC_NOT_FOUND::DAC not found in directory\00")
(data (i32.const 8292) "\ndac_for_symbol: \00")
(data (i32.const 8310) "\n\00")
(data (i32.const 8312) "ERR::DAC_NOT_FOUND_SYMBOL::DAC not found in directory for the given symbol\00")
(data (i32.const 8387) "ERR::CREATE_INVALID_SYMBOL::invalid symbol name\00")
(data (i32.const 8435) "ERR::CREATE_INVALID_SUPPLY::invalid supply\00")
(data (i32.const 8478) "ERR::CREATE_MAX_SUPPLY_MUST_BE_POSITIVE::max-supply must be positive\00")
(data (i32.const 8547) "ERR::CREATE_EXISITNG_SYMBOL::token with symbol already exists\00")
(data (i32.const 8609) "ERR::ISSUE_INVALID_SYMBOL::invalid symbol name\00")
(data (i32.const 8656) "ERR::ISSUE_NON_EXISTING_SYMBOL::token with symbol does not exist, create token before issue\00")
(data (i32.const 8748) "ERR::ISSUE_INVALID_QUANTITY::invalid quantity\00")
(data (i32.const 8794) "ERR::ISSUE_NON_POSITIVE::must issue positive quantity\00")
(data (i32.const 8848) "ERR::ISSUE_INVALID_PRECISION::symbol precision mismatch\00")
(data (i32.const 8904) "ERR::ISSUE_QTY_EXCEED_SUPPLY::quantity exceeds available supply\00")
(data (i32.const 8968) "burn\00")
(data (i32.const 8973) "ERR::BURN_UNKNOWN_SYMBOL::Attempting to burn a token unknown to this contract\00")
(data (i32.const 9051) "ERR::BURN_LOCKED_TOKEN::Burn tokens on transferLocked token. The issuer must `unlock` first.\00")
(data (i32.const 9144) "ERR::BURN_INVALID_QTY_::invalid quantity\00")
(data (i32.const 9185) "ERR::BURN_NON_POSITIVE_QTY_::must burn positive quantity\00")
(data (i32.const 9242) "ERR::BURN_SYMBOL_MISMATCH::symbol precision mismatch\00")
(data (i32.const 9295) "ERR::UNLOCK_INVALID_SYMBOL::invalid symbol name\00")
(data (i32.const 9343) "ERR::UNLOCK_NON_EXISTING_SYMBOL::token with symbol does not exist, create token before unlock\00")
(data (i32.const 9437) "ERR::TRANSFER_TO_SELF::cannot transfer to self\00")
(data (i32.const 9484) "ERR::TRANSFER_NONEXISTING_DESTN::to account does not exist\00")
(data (i32.const 9543) "unable to find key\00")
(data (i32.const 9562) "Transfer is locked, need issuer permission\00")
(data (i32.const 9605) "notifying staking transaction.\00")
(data (i32.const 9636) "notifying transfer transaction.\00")
(data (i32.const 9668) "ERR::TRANSFER_INVALID_QTY::invalid quantity\00")
(data (i32.const 9712) "ERR::TRANSFER_NON_POSITIVE_QTY::must transfer positive quantity\00")
(data (i32.const 9776) "ERR::TRANSFER_SYMBOL_MISMATCH::symbol precision mismatch\00")
(data (i32.const 9833) "ERR::TRANSFER_MEMO_TOO_LONG::memo has more than 256 bytes\00")
(data (i32.const 9891) "ERR::TRANSFER_OVERDRAWN::overdrawn balance\00")
(data (i32.const 9934) "This action is deprecated. Call `newmemtermse` instead.\00")
(data (i32.const 9990) "ERR::NEWMEMTERMS_EMPTY_TERMS::Member terms cannot be empty.\00")
(data (i32.const 10050) "ERR::NEWMEMTERMS_TERMS_TOO_LONG::Member terms document url should be less than 256 characters long.\00")
(data (i32.const 10150) "ERR::NEWMEMTERMS_EMPTY_HASH::Member terms document hash cannot be empty.\00")
(data (i32.const 10223) "ERR::NEWMEMTERMS_HASH_TOO_LONG::Member terms document hash should be less than 32 characters long.\00")
(data (i32.const 10322) "ERR::NEWMEMTERMS_DUPLICATE_TERMS::Next member terms cannot be duplicate of the latest.\00")
(data (i32.const 10409) "This action is deprecated. Call `memberrege` instead.\00")
(data (i32.const 10463) "ERR::MEMBERREG_NO_VALID_TERMS::No valid member terms found.\00")
(data (i32.const 10523) "ERR::MEMBERREG_NOT_LATEST_TERMS::Agreed terms isn\'t the latest.\00")
(data (i32.const 10587) "This action is deprecated. Call `updatetermse` instead.\00")
(data (i32.const 10643) "ERR::UPDATEMEMTERMS_TERMS_TOO_LONG::Member terms document url should be less than 256 characters long.\00")
(data (i32.const 10746) "ERR::UPDATETERMS_NO_EXISTING_TERMS::Existing terms not found for the given ID\00")
(data (i32.const 10824) "This action is deprecated. Call `memberunrege` instead.\00")
(data (i32.const 10880) "checking for sender account\00")
(data (i32.const 10908) "ERR::MEMBERUNREG_ACTIVE_CANDIDATE::An active candidate must resign their nomination as candidate before being able to unregister from the members.\00")
(data (i32.const 11055) "ERR::MEMBERUNREG_MEMBER_NOT_REGISTERED::Member is not registered.\00")
(data (i32.const 11121) "ERR::CLOSE_NON_EXISTING_BALANCE::Balance row already deleted or never existed. Action won\'t have any effect.\00")
(data (i32.const 11230) "ERR::CLOSE_NON_ZERO_BALANCE::Cannot close because the balance is not zero.\00")
(data (i32.const 11305) "\ngetting account for type: \00")
(data (i32.const 11333) "write\00")
(data (i32.const 11339) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 11390) "error reading iterator\00")
(data (i32.const 11413) "get\00")
(data (i32.const 11417) "read\00")
(data (i32.const 11422) "@\00")
(data (i32.const 11424) ",\00")
(data (i32.const 11426) "cannot create objects in table of another contract\00")
(data (i32.const 11477) "object passed to modify is not in multi_index\00")
(data (i32.const 11523) "cannot modify objects in table of another contract\00")
(data (i32.const 11574) "updater cannot change primary key when modifying an object\00")
(data (i32.const 11633) "attempt to add asset with different symbol\00")
(data (i32.const 11676) "addition underflow\00")
(data (i32.const 11695) "addition overflow\00")
(data (i32.const 11713) "attempt to subtract asset with different symbol\00")
(data (i32.const 11761) "subtraction underflow\00")
(data (i32.const 11783) "subtraction overflow\00")
(data (i32.const 11804) "cannot pass end iterator to modify\00")
(data (i32.const 11840) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 11894) "cannot decrement iterator at beginning of table\00")
(data (i32.const 11942) "cannot pass end iterator to erase\00")
(data (i32.const 11976) "cannot increment end iterator\00")
(data (i32.const 12006) "object passed to erase is not in multi_index\00")
(data (i32.const 12051) "cannot erase objects in table of another contract\00")
(data (i32.const 12101) "attempt to remove object that was not in multi_index\00")
(data (i32.const 0) "\80/\00\00")
(import "env" "db_find_i64" (func $fimport$0 (param i64 i64 i64 i64) (result i32)))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "abort" (func $fimport$2))
(import "env" "memset" (func $fimport$3 (param i32 i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$4 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$6 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$7 (param i32 i32)))
(import "env" "__multf3" (func $fimport$8 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$9 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$11 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$12 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$13 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$14 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$15 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$16 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$17 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$18 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$19 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$20 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$21 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$22 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$23 (param i64 i64) (result i32)))
(import "env" "prints" (func $fimport$24 (param i32)))
(import "env" "require_auth" (func $fimport$25 (param i64)))
(import "env" "current_receiver" (func $fimport$26 (result i64)))
(import "env" "db_store_i64" (func $fimport$27 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$28 (param i32 i64 i32 i32)))
(import "env" "require_recipient" (func $fimport$29 (param i64)))
(import "env" "is_account" (func $fimport$30 (param i64) (result i32)))
(import "env" "has_auth" (func $fimport$31 (param i64) (result i32)))
(import "env" "printui" (func $fimport$32 (param i64)))
(import "env" "send_inline" (func $fimport$33 (param i32 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$34 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_previous_i64" (func $fimport$35 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$36 (param i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$37 (param i32 i32) (result i32)))
(import "env" "action_data_size" (func $fimport$38 (result i32)))
(import "env" "read_action_data" (func $fimport$39 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$40 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$41 (param i32 i32 i32) (result i32)))
(import "env" "db_idx128_lowerbound" (func $fimport$42 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "printi" (func $fimport$43 (param i64)))
(import "env" "printn" (func $fimport$44 (param i64)))
(import "env" "db_idx64_store" (func $fimport$45 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$46 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_update" (func $fimport$47 (param i32 i64 i32)))
(import "env" "db_remove_i64" (func $fimport$48 (param i32)))
(import "env" "db_idx64_remove" (func $fimport$49 (param i32)))
(export "apply" (func $1))
(table $0 1 1 anyfunc)

(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 12154))
(global $global$2 i32 (i32.const 12154))


void .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11417])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11417])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $80(*($1), *($0 + [8]))
	$6 = *($0 + [12])
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11417])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($6) = *($2 + [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	$6 = ($6 + [8])
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11417])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, $3, [8])
	*($5) = (*($5) + [8])
	CALL $100(*($1), *($0 + [16]))
	CALL $101(*($1), *($0 + [20]))
	$4 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$5 }
	CALL eosio_assert([0], [11417])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $99 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $24($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $28(($1 + [60]), *(($1 + [64])))
	CALL $29(($1 + [48]), *(($1 + [52])))
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [24])))
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $10($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $94 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [14])
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$5 = ($3 + [14])
	if ( ((uint_32)$4 > (uint_32)[1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [11417])
	
.LABEL $label$1
	CALL memcpy($5, $2, [2])
	$global$0 = ($3 + [16])
}

void .FUNC $95 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [14])
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$5 = ($3 + [14])
	if ( ((uint_32)$4 > (uint_32)[1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [11417])
	
.LABEL $label$1
	CALL memcpy($5, $2, [2])
	$4 = *($3 + [14])
	CALL require_auth($0)
	CALL $75($0, $0, $4)
	CALL $76($0, $0, $4)
	$global$0 = ($3 + [16])
}

int_32 .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [11333])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11333])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11333])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [11333])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [11333])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $90 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	*($3 + [8]) = (int_64)0
	$2 = [0]
	$5 = ($3 + [8])
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	*($3 + [8]) = (int_64)0
	$5 = ($3 + [8])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [11417])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	CALL eosio_assert([0], [10824])
	$global$0 = ($3 + [16])
}

void .FUNC $91 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [100]) = $2
	*($3 + [96]) = $2
	*($3 + [104]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11417])
	$2 = *($3 + [100])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [100]) = ($2 + [8])
	*($3 + [80]) = [0]
	*($3 + [72]) = (int_64)0
	CALL $80(($3 + [96]), ($3 + [72]))
	*($3 + [64]) = (int_64)0
	$2 = *($3 + [100])
	$4 = (($3 + [96]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11417])
	$2 = *($3 + [100])
	
.LABEL $label$6
	CALL memcpy(($3 + [64]), $2, [8])
	*($3 + [100]) = (*($3 + [100]) + [8])
	*(($2 = (($3 + [16]) + [8]))) = *($4)
	*($3 + [16]) = *($3 + [96])
	$2 = *($2)
	*((($3 + [112]) + [8])) = $2
	*(($4 = (($3 + [128]) + [8]))) = $2
	$5 = *($3 + [16])
	*($3 + [128]) = $5
	*($3 + [112]) = $5
	$2 = *($4)
	*((($3 + [144]) + [8])) = $2
	*(($3 + [56])) = $2
	*($3 + [32]) = $0
	*($3 + [40]) = $1
	$0 = *($3 + [128])
	*($3 + [48]) = $0
	*($3 + [144]) = $0
	$2 = CALL $19($3, ($3 + [72]))
	CALL $68(($3 + [32]), *($3 + [88]), $2, *($3 + [64]))
	if ( (*($2) & [1]) ){ goto $label$9 }
	if ( (*($3 + [72]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [72]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $10(*(($3 + [80])))
	$global$0 = ($3 + [160])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [160])
}

void .FUNC $92 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [52]) = $2
	*($3 + [48]) = $2
	*($3 + [56]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11417])
	$2 = *($3 + [52])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [52]) = ($2 + [8])
	*($3 + [32]) = [0]
	*($3 + [24]) = (int_64)0
	CALL $80(($3 + [48]), ($3 + [24]))
	$2 = CALL $19(($3 + [8]), ($3 + [24]))
	CALL eosio_assert([0], [10587])
	if ( (*($2) & [1]) ){ goto $label$8 }
	if ( (*($3 + [24]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $10(*(($3 + [32])))
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [64])
}

void .FUNC $93 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [32]) = (int_64)0
	*($3) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$6
	CALL memcpy($3, $6, [8])
	*($3 + [32]) = *($3)
	*(($3 + [24])) = $5
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $73($3, *($3 + [40]), ($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $38 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [192])
	$global$0 = $4
	$5 = [0]
	$6 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$5 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8609])
	
.LABEL $label$1
	$11 = [0]
	*(($4 + [120])) = [0]
	*($4 + [104]) = (int_64)-1
	*($4 + [112]) = (int_64)0
	$7 = *($0)
	*($4 + [88]) = $7
	*($4 + [96]) = $6
	$5 = CALL db_find_i64($7, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$7 }
	$11 = CALL $35(($4 + [88]), $5)
	if ( ((int_32)*($11 + [44]) == (int_32)($4 + [88])) ){ goto $label$6 }
	CALL eosio_assert([0], [11339])
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8656])
	
.LABEL $label$6
	CALL require_auth(*($11 + [32]))
	$6 = *($2)
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$7 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$7 = $8
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$12 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8748])
	$6 = *($2)
	
.LABEL $label$8
	if ( ((int_64)$6 > (int_64)0) ){ goto $label$13 }
	CALL eosio_assert([0], [8794])
	
.LABEL $label$13
	if ( ((int_64)*(($2 + [8])) == (int_64)*($11 + [8])) ){ goto $label$14 }
	CALL eosio_assert([0], [8848])
	
.LABEL $label$14
	if ( ((int_64)*($2) <= (int_64))(*($11 + [16]) - *($11))) ){ goto $label$15 }
	CALL eosio_assert([0], [8904])
	
.LABEL $label$15
	*($4 + [128]) = $2
	CALL $39(($4 + [88]), $11, ($4 + [128]))
	$5 = ($11 + [32])
	$7 = *($5)
	$10 = ($2 + [8])
	*(($9 = (($4 + [72]) + [8]))) = *($10)
	$8 = *($2)
	*((($4 + [8]) + [8])) = *($9)
	*($4 + [72]) = $8
	*($4 + [8]) = *($4 + [72])
	CALL $40($0, $7, ($4 + [8]), $7)
	$7 = *($5)
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$16 }
	*(($9 = (($4 + [24]) + [24]))) = *($10)
	*($4 + [24]) = $7
	*($4 + [32]) = $1
	*($4 + [40]) = *($2)
	$8 = *($0)
	CALL $19((($4 + [24]) + [32]), $3)
	*(($5 = CALL $8([16]))) = $7
	*($5 + [8]) = (int_64)3617214756542218240
	*((($4 + [128]) + [24])) = *($9)
	$9 = (($4 + [24]) + [40])
	*(($10 = (($4 + [128]) + [40]))) = *($9)
	*($9) = [0]
	*($4 + [176]) = $5
	$5 = ($5 + [16])
	*($4 + [184]) = $5
	*($4 + [180]) = $5
	*($4 + [128]) = *($4 + [24])
	*($4 + [136]) = *($4 + [32])
	*($4 + [144]) = *($4 + [40])
	*($4 + [160]) = *($4 + [56])
	*($4 + [56]) = (int_64)0
	CALL $41($8, (int_64)-3617168760277827584, ($4 + [176]), ($4 + [128]))
	if ( ((*($4 + [160]) & [1]) == 0) ){ goto $label$17 }
	CALL $10(*($10))
	
.LABEL $label$17
	$5 = *($4 + [176])
	if ( ($5 == 0) ){ goto $label$18 }
	*($4 + [180]) = $5
	CALL $10($5)
	
.LABEL $label$18
	if ( ((*(($4 + [56])) & [1]) == 0) ){ goto $label$16 }
	CALL $10(*(($4 + [64])))
	
.LABEL $label$16
	$10 = *($4 + [112])
	if ( ($10 == 0) ){ goto $label$19 }
	$2 = ($4 + [116])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$10) ){ goto $label$21 }
	
.LOOP $label$22:
	$5 = ($5 + [-24])
	$9 = *($5)
	*($5) = [0]
	if ( ($9 == 0) ){ goto $label$23 }
	CALL $10($9)
	
.LABEL $label$23
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$22 }
	$5 = *(($4 + [112]))
	goto $label$20 
	
.LABEL $label$21
	$5 = $10
	
.LABEL $label$20
	*($2) = $10
	CALL $10($5)
	
.LABEL $label$19
	$global$0 = ($4 + [192])
}

void .FUNC $49 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11477])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [11523])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [11713])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [11761])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [11783])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [11574])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $48 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [44])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11477])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [11523])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [11713])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [11761])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [11783])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [11574])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-7])
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [40])
	CALL $36(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [48]), $2, $4, [41])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

void .FUNC $43 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11477])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [11523])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [11633])
	
.LABEL $label$3
	$6 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [11676])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [11695])
	
.LABEL $label$5
	$2 = ($1 + [8])
	if ( ((int_64)$5 == (int_64)(uint_64)*($2) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [11574])
	
.LABEL $label$6
	$7 = $3
	$3 = ($7 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	*($4 + [8]) = *($2)
	CALL memcpy(($7 + [-8]), ($4 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $3, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [16])
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11390])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $8([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $44(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $3($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $10($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $41 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [16]) = [0]
	*($4 + [8]) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $8($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [16])) = $5
	*($4 + [8]) = $7
	*($4 + [12]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [12]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [44])) = $6
	*(($4 + [48])) = $5
	*(($4 + [16])) = [0]
	*((($4 + [24]) + [36])) = [0]
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $7
	*($4 + [8]) = (int_64)0
	*($4 + [52 align=4]) = (int_64)0
	$7 = *($3 + [32])
	$2 = ( *(($3 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($4 + [52])
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($7 == 0) ){ goto $label$6 }
	CALL $53($2, $7)
	$2 = *(($4 + [56]))
	$7 = *(($4 + [52]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$7 = [0]
	
.LABEL $label$5
	*($4 + [68]) = $7
	*($4 + [64]) = $7
	*($4 + [72]) = $2
	*($4 + [80]) = ($4 + [64])
	*($4 + [88]) = $3
	CALL $103(($4 + [88]), ($4 + [80]))
	CALL $55(($4 + [24]))
	$7 = *($4 + [52])
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [56])) = $7
	CALL $10($7)
	
.LABEL $label$7
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$8 }
	*(($4 + [44])) = $7
	CALL $10($7)
	
.LABEL $label$8
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$9 }
	*($4 + [12]) = $7
	CALL $10($7)
	
.LABEL $label$9
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $24(($4 + [8]))
}

void .FUNC $40 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($4 + [32])) = [0]
	*($4 + [16]) = (int_64)-1
	*($4 + [24]) = (int_64)0
	$5 = *($0)
	*($4) = $5
	$6 = *($2 + [8])
	*($4 + [8]) = $1
	$0 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $42($4, $0)
	if ( ((int_32)*($0 + [16]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [11339])
	
.LABEL $label$4
	*($4 + [48]) = $2
	CALL $43($4, $0, ($4 + [48]))
	$7 = *($4 + [24])
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_64)CALL current_receiver() == (int_64)*($4)) ){ goto $label$5 }
	CALL eosio_assert([0], [11426])
	
.LABEL $label$5
	*(($0 = CALL $8([32])) + [16]) = $4
	*($0 + [8]) = *(($2 + [8]))
	*($0) = *($2)
	CALL memcpy(($4 + [48]), $0, [8])
	*($4 + [72]) = *($0 + [8])
	CALL memcpy((($4 + [48]) | [8]), ($4 + [72]), [8])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8
	$7 = CALL db_store_i64(*(($4 + [8])), (int_64)3607749779137757184, $3, $1), ($4 + [48]), [16]
	*($0 + [20]) = $7)
	$2 = ($4 + [16])
	if ( (uint_64)($1 <= *($2)) ){ goto $label$6 }
	*($2) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$6
	*($4 + [72]) = $0
	$1 = (uint_64)*(($0 + [8])) >> (uint_64)(int_64)8
	*($4 + [48]) = $1)
	*($4 + [44]) = $7
	$8 = ($4 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($4 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $1
	*($2 + [16]) = $7
	*($4 + [72]) = [0]
	*($2) = $0
	*($8) = ($2 + [24])
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( $0 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $44(($4 + [24]), ($4 + [72]), ($4 + [48]), ($4 + [44]))
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $10($0)
	
.LABEL $label$7
	$7 = *($4 + [24])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($4 + [28])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $10($2)
	
.LABEL $label$13
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($4 + [24]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $7
	
.LABEL $label$10
	*($8) = $7
	CALL $10($0)
	
.LABEL $label$1
	$global$0 = ($4 + [80])
}

void .FUNC $47 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	$4 = [0]
	*(($3 + [40])) = [0]
	*($3 + [16]) = $1
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$5 = *($0)
	*($3 + [8]) = $5
	$0 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $42(($3 + [8]), $0)
	if ( ((int_32)*($4 + [16]) == (int_32)($3 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [11339])
	
.LABEL $label$4
	if ( ((int_64)*($4) >= (int_64)*($2)) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [9543])
	if ( ((int_64)*([0]) >= (int_64)*($2)) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9891])
	
.LABEL $label$1
	*($3) = $2
	CALL $49(($3 + [8]), $4, $1, $3)
	$0 = *($3 + [32])
	if ( ($0 == 0) ){ goto $label$5 }
	$6 = ($3 + [36])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	CALL $10($4)
	
.LABEL $label$9
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$8 }
	$2 = *(($3 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$2 = $0
	
.LABEL $label$6
	*($6) = $0
	CALL $10($2)
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

int_32 .FUNC $46 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*(($6 + [44])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11339])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $35($0, $5)
	if ( ((int_32)*($6 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11339])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $45 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [80])
	$global$0 = $3
	CALL prints([8968])
	CALL require_auth($1)
	$4 = *($2 + [8])
	*(($3 + [72])) = [0]
	*($3 + [56]) = (int_64)-1
	*($3 + [64]) = (int_64)0
	*($3 + [40]) = *($0)
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	*($3 + [48]) = $4)
	$5 = CALL $46(($3 + [40]), $4, [8973])
	if ( (*($5 + [40]) == 0) ){ goto $label$1 }
	CALL eosio_assert([0], [9051])
	
.LABEL $label$1
	CALL require_recipient($1)
	$6 = *($2)
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$3 }
	$4 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$8 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$5 }
	$4 = $8
	$9 = $7
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$5
	$4 = $8
	
.LOOP $label$6:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$10 = ($7 + [1])
	$7 = $10
	if ( $9 ){ goto $label$6 }
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [9144])
	$6 = *($2)
	
.LABEL $label$2
	if ( ((int_64)$6 > (int_64)0) ){ goto $label$7 }
	CALL eosio_assert([0], [9185])
	
.LABEL $label$7
	$7 = ($2 + [8])
	if ( ((int_64)*($7) == (int_64)*($5 + [8])) ){ goto $label$8 }
	CALL eosio_assert([0], [9242])
	
.LABEL $label$8
	$8 = *($7)
	*((($3 + [24]) + [8])) = $8
	$4 = *($2)
	*(($3 + [8])) = $8
	*($3 + [24]) = $4
	*($3) = $4
	CALL $47($0, $1, $3)
	*($3 + [16]) = $2
	CALL $48(($3 + [40]), $5, (int_64)0, ($3 + [16]))
	$10 = *($3 + [64])
	if ( ($10 == 0) ){ goto $label$9 }
	$2 = ($3 + [68])
	$7 = *($2)
	if ( ((int_32)$7 == (int_32)$10) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$13 }
	CALL $10($9)
	
.LABEL $label$13
	if ( ((int_32)$10 != (int_32)$7) ){ goto $label$12 }
	$7 = *(($3 + [64]))
	goto $label$10 
	
.LABEL $label$11
	$7 = $10
	
.LABEL $label$10
	*($2) = $10
	CALL $10($7)
	
.LABEL $label$9
	$global$0 = ($3 + [80])
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $24($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $8 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $2($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $2($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $9 (int_32 $0)
{
	return CALL $8($0)
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $2($1)
	
.LABEL $label$2
	*(CALL $5()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $2(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $3($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $7 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $5())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $6($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

void .FUNC $4 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

int_32 .FUNC $5 ()
{
	return [8208]
}

int_32 .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8220])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $3 (int_32 $0)
{
}

void .FUNC $0 ()
{
	CALL $4()
}

void .FUNC apply (int_64 $0, int_64 apply, int_64 $2)
{
	CALL $0()
	CALL $78($0, $1)
	CALL $79($0, $1)
	CALL $82($0, $1)
	CALL $83($0, $1)
	CALL $84($0, $1)
	CALL $85($0, $1)
	CALL $86($0, $1)
	CALL $87($0, $1)
	CALL $88($0, $1)
	CALL $89($0, $1)
	CALL $90($0, $1)
	CALL $91($0, $1)
	CALL $92($0, $1)
	CALL $93($0, $1)
	CALL $94($0, $1)
	CALL $95($0, $1)
	CALL eosio_assert_code([0], (int_64)8000000000000000000)
	CALL eosio_assert_code([0], (int_64)8000000000000000001)
	CALL $23([0])
	((int_64)$0 == (int_64)$1)
	((int_64)5031766152489992192 == (int_64)$2)
	((int_64)8516769789752901632 == (int_64)$2)
	((int_64)-3106564276286914560 == (int_64)$2)
	((int_64)4516881727834030080 == (int_64)$2)
	((int_64)-3617168760277827584 == (int_64)$2)
	((int_64)-7297760716407394144 == (int_64)$2)
	((int_64)-7297760716407394304 == (int_64)$2)
	((int_64)-7880044397471825920 == (int_64)$2)
	((int_64)-7880044397471989760 == (int_64)$2)
	((int_64)-7880044395704444768 == (int_64)$2)
	((int_64)-7880044395704444928 == (int_64)$2)
	((int_64)-3075276113128410976 == (int_64)$2)
	((int_64)-3075276113128411136 == (int_64)$2)
	((int_64)4929617502180212736 == (int_64)$2)
	((int_64)-7811085199994781696 == (int_64)$2)
	((int_64)4923678842997964800 == (int_64)$2)
	((int_64)$0 != (int_64)6138663577826885632)
	((int_64)6138663577826885632 == (int_64)$1)
	((int_64)-6569208335818555392 == (int_64)$2)
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	CALL $14($0, $1)
}

int_32 .FUNC $16 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $17 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $10 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $11 (int_32 $0)
{
	CALL $10($0)
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $7(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $7(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	return CALL $12($0, $1)
}

void .FUNC $75 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [32])) = [0]
	*($3 + [16]) = (int_64)-1
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($0, $1, (int_64)-7880044397109182464, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $65($3, $4)
	if ( ($2 == 0) ){ goto $label$1 }
	$6 = [1]
	
.LOOP $label$2:
	$4 = [0]
	$7 = CALL db_next_i64(*($5 + [20]), ($3 + [40]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $65($3, $7)
	
.LABEL $label$3
	CALL $72($3, $5)
	if ( ($4 == 0) ){ goto $label$1 }
	$7 = ($6 <= $2)
	$6 = ($6 + [1])
	$5 = $4
	if ( $7 ){ goto $label$2 }
	
.LABEL $label$1
	$6 = *($3 + [24])
	if ( ($6 == 0) ){ goto $label$4 }
	$7 = ($3 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$7:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$8 }
	CALL $10($5)
	
.LABEL $label$8
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$7 }
	$4 = *(($3 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$4 = $6
	
.LABEL $label$5
	*($7) = $6
	CALL $10($4)
	
.LABEL $label$4
	$global$0 = ($3 + [48])
}

void .FUNC $18 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $8($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $58 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [208])
	$global$0 = $4
	CALL $25(($4 + [88]), $3)
	CALL prints([11305])
	CALL printui((int_64)0)
	CALL prints([8310])
	$5 = ($4 + [152])
	$6 = *($5)
	if ( ($6 == 0) ){ goto $label$1 }
	if ( (*($6 + [16]) == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	$5 = $6
	$6 = *($5)
	if ( ($6 == 0) ){ goto $label$1 }
	if ( *($6 + [16]) ){ goto $label$2 }
	
.LABEL $label$1
	$7 = *((*($5) + [24]))
	CALL require_auth($7)
	$5 = *($1)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	if ( uint_32($5 >> [1]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	if ( *($1 + [4]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [9990])
	$6 = (*($1) & [1])
	
.LABEL $label$3
	if ( ($6 == 0) ){ goto $label$6 }
	if ( (*($1 + [4]) <= [257]) ){ goto $label$6 }
	CALL eosio_assert([0], [10050])
	
.LABEL $label$6
	$6 = *($2)
	if ( ($6 & [1]) ){ goto $label$13 }
	if ( uint_32($6 >> [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	if ( (*($2 + [4]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$5 = [1]
	if ( ($6 & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert([0], [10150])
	$5 = [1]
	$6 = *($2)
	if ( (($6 & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	if ( (*($2 + [4]) <= [33]) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	if ( (uint_32(($6 & [254]) >> $5) <= [33]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [10223])
	
.LABEL $label$7
	*(($4 + [80])) = [0]
	*($4 + [64]) = (int_64)-1
	*($4 + [84]) = [0]
	$8 = *($0)
	*($4 + [48]) = $8
	*($4 + [56]) = $3
	*($4 + [72]) = (int_64)0
	$6 = CALL db_lowerbound_i64($8, $3, (int_64)-7880044396392173568, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$14 }
	CALL $59(($4 + [48]), $6)
	*($4 + [44]) = [0]
	*($4 + [40]) = ($4 + [48])
	$6 = CALL $60(($4 + [40]))
	$6 = ($6 & [1])
	$6 = *($11)
	$11 = *($6 + [4])
	$0 = ($5 & [1])
	$5 = *($1)
	$9 = uint_32($5 >> [1])
	$10 = ( *($1 + [4]) ? $9 : $0 )
	if ( ((int_32)$10 != (int_32)( *($11 + [4]) ? uint_32($6 >> [1]) : $6 )) ){ goto $label$14 }
	$6 = ( *($11 + [8]) ? ($11 + [1]) : $6 )
	$5 = ($1 + [1])
	if ( $0 ){ goto $label$16 }
	if ( ($10 == 0) ){ goto $label$15 }
	$0 = ([0] - $9)
	
.LOOP $label$17:
	if ( ((int_32)*($5) != (int_32)*($6)) ){ goto $label$14 }
	$6 = ($6 + [1])
	$5 = ($5 + [1])
	$0 = ($0 + [1])
	if ( $0 ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ($10 == 0) ){ goto $label$15 }
	if ( CALL $17(( *($1 + [8]) ? $5 : $0 ), $6, $10) ){ goto $label$14 }
	
.LABEL $label$15
	$6 = ($6 & [1])
	$6 = *($11 + [12])
	$0 = ($6 & [1])
	$6 = *($2)
	$9 = uint_32($6 >> [1])
	$10 = ( *($2 + [4]) ? $9 : $0 )
	if ( ((int_32)$10 != (int_32)( *(($11 + [16])) ? uint_32($6 >> [1]) : $6 )) ){ goto $label$14 }
	$6 = ( *(($11 + [20])) ? (($11 + [12]) + [1]) : $6 )
	$5 = ($2 + [1])
	if ( $0 ){ goto $label$19 }
	if ( ($10 == 0) ){ goto $label$18 }
	$0 = ([0] - $9)
	
.LOOP $label$20:
	if ( ((int_32)*($5) != (int_32)*($6)) ){ goto $label$14 }
	$6 = ($6 + [1])
	$5 = ($5 + [1])
	$0 = ($0 + [1])
	if ( $0 ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	if ( ($10 == 0) ){ goto $label$18 }
	if ( CALL $17(( *($2 + [8]) ? $5 : $0 ), $6, $10) ){ goto $label$14 }
	
.LABEL $label$18
	CALL eosio_assert([0], [10322])
	
.LABEL $label$14
	$6 = CALL db_lowerbound_i64(*($4 + [48]), *(($4 + [56])), (int_64)-7880044396392173568, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$22 }
	CALL $59(($4 + [48]), $6)
	*($4 + [28]) = [0]
	*($4 + [24]) = ($4 + [48])
	$3 = ((int_64)*(*(CALL $60(($4 + [24])) + [4]) + [24]) + (int_64)1)
	goto $label$21 
	
.LABEL $label$22
	$3 = (int_64)1
	
.LABEL $label$21
	*($4 + [32]) = $3
	*($4 + [12]) = $2
	*($4 + [8]) = $1
	*($4 + [16]) = ($4 + [32])
	*($4 + [200]) = $7
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [48])) ){ goto $label$23 }
	CALL eosio_assert([0], [11426])
	
.LABEL $label$23
	*($4 + [180]) = ($4 + [8])
	*($4 + [176]) = ($4 + [48])
	*($4 + [184]) = ($4 + [200])
	$6 = CALL $8([48])
	CALL $61($6)
	*($6 + [32]) = ($4 + [48])
	CALL $62(($4 + [176]), $6)
	*($4 + [192]) = $6
	$3 = *($6 + [24])
	*($4 + [176]) = $3
	$1 = *($6 + [36])
	*($4 + [172]) = $1
	$2 = ($4 + [76])
	$5 = *($2)
	if ( ((uint_32)$5 >= (uint_32)*(($4 + [80]))) ){ goto $label$28 }
	*($5 + [8]) = $3
	*($5 + [16]) = $1
	*($4 + [192]) = [0]
	*($5) = $6
	*($2) = ($5 + [24])
	$6 = *($4 + [192])
	*($4 + [192]) = [0]
	if ( ($6 == 0) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	CALL $63(($4 + [72]), ($4 + [192]), ($4 + [176]), ($4 + [172]))
	$6 = *($4 + [192])
	*($4 + [192]) = [0]
	if ( $6 ){ goto $label$26 }
	
.LABEL $label$27
	$1 = *($4 + [72])
	if ( ($1 == 0) ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$26
	if ( ((*($6 + [12]) & [1]) == 0) ){ goto $label$29 }
	CALL $10(*(($6 + [20])))
	
.LABEL $label$29
	if ( ((*($6) & [1]) == 0) ){ goto $label$30 }
	CALL $10(*($6 + [8]))
	
.LABEL $label$30
	CALL $10($6)
	$1 = *($4 + [72])
	if ( ($1 == 0) ){ goto $label$24 }
	
.LABEL $label$25
	$2 = ($4 + [76])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$32 }
	
.LOOP $label$33:
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$34 }
	if ( ((*($6 + [12]) & [1]) == 0) ){ goto $label$35 }
	CALL $10(*(($6 + [20])))
	
.LABEL $label$35
	if ( ((*($6) & [1]) == 0) ){ goto $label$36 }
	CALL $10(*($6 + [8]))
	
.LABEL $label$36
	CALL $10($6)
	
.LABEL $label$34
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$33 }
	$6 = *(($4 + [72]))
	goto $label$31 
	
.LABEL $label$32
	$6 = $1
	
.LABEL $label$31
	*($2) = $1
	CALL $10($6)
	
.LABEL $label$24
	CALL $28(($4 + [148]), *(($4 + [152])))
	CALL $29(($4 + [136]), *(($4 + [140])))
	if ( ((*($4 + [104]) & [1]) == 0) ){ goto $label$37 }
	CALL $10(*(($4 + [112])))
	
.LABEL $label$37
	$global$0 = ($4 + [208])
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11390])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	$5 = CALL $8([48])
	CALL $61($5)
	*($5 + [32]) = $0
	$7 = ($5 + [24])
	$8 = *($2 + [4])
	$2 = CALL $80(CALL $80(($3 + [32]), $5), ($5 + [12]))
	if ( ((uint_32)(*($2 + [8]) - $8) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11417])
	$8 = *(($2 + [4]))
	
.LABEL $label$7
	CALL memcpy($7, $8, [8])
	*($5 + [36]) = $1
	*($5 + [40]) = [-1]
	*(($2 = ($2 + [4]))) = (*($2) + [8])
	*($3 + [24]) = $5
	$9 = *($7)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = $9
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $63(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $3($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	if ( ((*($1 + [12]) & [1]) == 0) ){ goto $label$12 }
	CALL $10(*(($1 + [20])))
	
.LABEL $label$12
	if ( ((*($1) & [1]) == 0) ){ goto $label$13 }
	CALL $10(*($1 + [8]))
	
.LABEL $label$13
	CALL $10($1)
	
.LABEL $label$11
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = [0]
	$4 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	$5 = $4)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$5 = $6
	$1 = $3
	$3 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = $6
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$1 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $1 ){ goto $label$5 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9295])
	
.LABEL $label$1
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$5 = *($0)
	*($2 + [8]) = $5
	*($2 + [16]) = $4
	$3 = CALL db_find_i64($5, $4, (int_64)-4157508551318700032, $4)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	$3 = CALL $35(($2 + [8]), $3)
	if ( ((int_32)*($3 + [44]) == (int_32)($2 + [8])) ){ goto $label$7 }
	CALL eosio_assert([0], [11339])
	
.LABEL $label$7
	CALL require_auth(*($3 + [32]))
	CALL $51(($2 + [8]), $3, (int_64)0)
	$7 = *($2 + [32])
	if ( ($7 == 0) ){ goto $label$8 }
	$0 = ($2 + [36])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$10 }
	
.LOOP $label$11:
	$3 = ($3 + [-24])
	$1 = *($3)
	*($3) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $10($1)
	
.LABEL $label$12
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$11 }
	$3 = *(($2 + [32]))
	goto $label$9 
	
.LABEL $label$10
	$3 = $7
	
.LABEL $label$9
	*($0) = $7
	CALL $10($3)
	
.LABEL $label$8
	$global$0 = ($2 + [48])
	return (unreachable)
	
.LABEL $label$6
	CALL eosio_assert([0], [9343])
}

void .FUNC $51 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*(($1 + [44])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11477])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [11523])
	
.LABEL $label$2
	*($1 + [40]) = [0]
	$5 = *($1 + [8])
	$6 = $3
	$3 = ($6 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($6 + [-7])
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = ($1 + [16])
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [32])
	*($4 + [44]) = ($1 + [40])
	CALL $36(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [48]), $2, $3, [41])
	$2 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( (uint_64)($2) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $52 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$5 = ($global$0 - [336])
	$global$0 = $5
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [9437])
	
.LABEL $label$1
	CALL require_auth($1)
	if ( CALL is_account($2) ){ goto $label$2 }
	CALL eosio_assert([0], [9484])
	
.LABEL $label$2
	$6 = *($3 + [8])
	*(($5 + [296])) = [0]
	$7 = (uint_64)$6 >> (uint_64)(int_64)8
	*($5 + [272]) = $7)
	*($5 + [280]) = (int_64)-1
	*($5 + [288]) = (int_64)0
	*($5 + [264]) = *($0)
	$8 = CALL $46(($5 + [264]), $7, [9543])
	if ( (*($8 + [40]) == 0) ){ goto $label$3 }
	if ( CALL has_auth(*($8 + [32])) ){ goto $label$3 }
	CALL eosio_assert([0], [9562])
	
.LABEL $label$3
	CALL require_recipient($1)
	CALL require_recipient($2)
	$9 = *($0)
	*(($5 + [48])) = $9
	*($5 + [168]) = $6
	*($5 + [176]) = $9
	*($5 + [40]) = $6
	CALL $31(($5 + [184]), ($5 + [40]))
	CALL prints([11305])
	CALL printui((int_64)2)
	CALL prints([8310])
	$10 = ($5 + [248])
	$11 = *($10)
	if ( ($11 == 0) ){ goto $label$5 }
	$12 = *($11 + [16])
	if ( ($12 <= [3]) ){ goto $label$6 }
	$13 = [44]
	goto $label$4 
	
.LABEL $label$6
	$13 = [2]
	goto $label$4 
	
.LABEL $label$5
	$13 = [3]
	
.LABEL $label$4
	
.LOOP $label$7:
	goto $label$83 
	
.LABEL $label$86
	$10 = $11
	$11 = $12
	$12 = *($11 + [16])
	if ( ($12 <= [3]) ){ goto $label$41 }
	$13 = [44]
	goto $label$7 
	
.LABEL $label$85
	$10 = $11
	$12 = *($11)
	if ( $12 ){ goto $label$37 }
	goto $label$38 
	
.LABEL $label$84
	if ( ((int_32)$12 == (int_32)[2]) ){ goto $label$39 }
	$13 = [0]
	goto $label$7 
	
.LABEL $label$83
	$12 = *($11 + [4])
	$10 = ($11 + [4])
	$11 = $10
	if ( $12 ){ goto $label$40 }
	$13 = [3]
	goto $label$7 
	
.LABEL $label$82
	$9 = *((*($10) + [24]))
	if ( (CALL is_account($9) == 0) ){ goto $label$36 }
	$13 = [33]
	goto $label$7 
	
.LABEL $label$81
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$12 }
	$13 = [39]
	goto $label$7 
	
.LABEL $label$80
	$9 = *($0)
	*((($5 + [88]) + [16])) = *(($3 + [8]))
	*($5 + [88]) = $1
	*($5 + [128]) = $2
	*($5 + [136]) = (int_64)4732048857729966240
	*($5 + [96]) = *($3)
	*($5 + [112]) = *($5 + [192])
	*(($11 = CALL $8([16]))) = $9
	*($11 + [8]) = (int_64)-7119375207604682752
	*(($5 + [164])) = [0]
	$12 = ($11 + [16])
	*(($5 + [152])) = $12
	*(($5 + [148])) = $12
	*($5 + [144]) = $11
	*($5 + [156 align=4]) = (int_64)0
	CALL $53(($5 + [156]), [32])
	$10 = (($5 + [128]) + [32])
	$11 = *($10)
	$12 = *($5 + [156])
	*($5 + [308]) = $12
	*($5 + [304]) = $12
	*($5 + [312]) = $11
	*($5 + [320]) = ($5 + [304])
	*($5 + [328]) = ($5 + [88])
	CALL $54(($5 + [328]), ($5 + [320]))
	CALL $55(($5 + [128]))
	$11 = *($5 + [156])
	if ( ($11 == 0) ){ goto $label$9 }
	$13 = [40]
	goto $label$7 
	
.LABEL $label$79
	*($10) = $11
	CALL $10($11)
	$13 = [41]
	goto $label$7 
	
.LABEL $label$78
	$11 = *($5 + [144])
	if ( ($11 == 0) ){ goto $label$8 }
	$13 = [42]
	goto $label$7 
	
.LABEL $label$77
	*(($5 + [148])) = $11
	CALL $10($11)
	$13 = [43]
	goto $label$7 
	
.LABEL $label$76
	CALL prints([9605])
	goto $label$35 
	
.LABEL $label$75
	$14 = *($0)
	*((($5 + [88]) + [24])) = *(($3 + [8]))
	*($5 + [96]) = $2
	*($5 + [88]) = $1
	*($5 + [128]) = $9
	*($5 + [136]) = (int_64)-3617168760267214416
	*($5 + [104]) = *($3)
	*($5 + [120]) = *($5 + [192])
	*(($11 = CALL $8([16]))) = $14
	*($11 + [8]) = (int_64)-7119375207604682752
	*(($5 + [164])) = [0]
	$12 = ($11 + [16])
	*((($5 + [128]) + [24])) = $12
	*(($5 + [148])) = $12
	*($5 + [144]) = $11
	*($5 + [156 align=4]) = (int_64)0
	CALL $53(($5 + [156]), [40])
	$10 = ($5 + [160])
	$11 = *($10)
	$12 = *($5 + [156])
	*($5 + [308]) = $12
	*($5 + [304]) = $12
	*($5 + [312]) = $11
	*($5 + [320]) = ($5 + [304])
	*($5 + [328]) = ($5 + [88])
	CALL $56(($5 + [328]), ($5 + [320]))
	CALL $55(($5 + [128]))
	$11 = *($5 + [156])
	if ( ($11 == 0) ){ goto $label$11 }
	$13 = [35]
	goto $label$7 
	
.LABEL $label$74
	*($10) = $11
	CALL $10($11)
	$13 = [36]
	goto $label$7 
	
.LABEL $label$73
	$11 = *($5 + [144])
	if ( ($11 == 0) ){ goto $label$10 }
	$13 = [37]
	goto $label$7 
	
.LABEL $label$72
	*(($5 + [148])) = $11
	CALL $10($11)
	$13 = [38]
	goto $label$7 
	
.LABEL $label$71
	CALL prints([9636])
	$13 = [4]
	goto $label$7 
	
.LABEL $label$70
	$14 = *($3)
	if ( ((uint_64)((int_64)$14 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$34 }
	$13 = [25]
	goto $label$7 
	
.LABEL $label$69
	$11 = [0]
	$13 = [26]
	goto $label$7 
	
.LABEL $label$68
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$33 }
	$13 = [27]
	goto $label$7 
	
.LABEL $label$67
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$13 = [28]
	goto $label$7 
	
.LABEL $label$66
	$7 = $9
	$12 = $11
	$11 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$65
	$7 = $9
	$13 = [30]
	goto $label$7 
	
.LABEL $label$64
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$32 }
	$13 = [31]
	goto $label$7 
	
.LABEL $label$63
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$12 = ((int_32)$11 < (int_32)[6])
	$10 = ($11 + [1])
	$11 = $10
	if ( $12 ){ goto $label$13 }
	$13 = [32]
	goto $label$7 
	
.LABEL $label$62
	$11 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$61
	CALL eosio_assert([0], [9668])
	$13 = [6]
	goto $label$7 
	
.LABEL $label$60
	if ( ((int_64)$14 <= (int_64)0) ){ goto $label$27 }
	$13 = [24]
	goto $label$7 
	
.LABEL $label$59
	if ( ((int_64)$6 != (int_64)*($8 + [8])) ){ goto $label$26 }
	$13 = [23]
	goto $label$7 
	
.LABEL $label$58
	$10 = [1]
	if ( ((*($4) & [1]) == 0) ){ goto $label$24 }
	$13 = [9]
	goto $label$7 
	
.LABEL $label$57
	if ( (*($4 + [4]) <= [257]) ){ goto $label$22 }
	$13 = [10]
	goto $label$7 
	
.LABEL $label$56
	CALL eosio_assert([0], [9833])
	goto $label$21 
	
.LABEL $label$55
	CALL eosio_assert([0], [9712])
	if ( ((int_64)$6 == (int_64)*($8 + [8])) ){ goto $label$25 }
	$13 = [8]
	goto $label$7 
	
.LABEL $label$54
	CALL eosio_assert([0], [9776])
	$10 = [1]
	if ( (*($4) & [1]) ){ goto $label$23 }
	$13 = [11]
	goto $label$7 
	
.LABEL $label$53
	$11 = CALL has_auth($2)
	$12 = ($3 + [8])
	$6 = *($12)
	*((($5 + [72]) + [8])) = $6
	$7 = *($3)
	*((($5 + [24]) + [8])) = $6
	*($5 + [24]) = $7
	*($5 + [72]) = $7
	CALL $47($0, $1, ($5 + [24]))
	$6 = *($12)
	*((($5 + [56]) + [8])) = $6
	$7 = *($3)
	*((($5 + [8]) + [8])) = $6
	*($5 + [8]) = $7
	*($5 + [56]) = $7
	CALL $40($0, $2, ($5 + [8]), ( $2 ? $1 : $11 ))
	CALL $28(($5 + [244]), *(($5 + [248])))
	CALL $29(($5 + [232]), *(($5 + [236])))
	if ( ((*($5 + [200]) & $10) == 0) ){ goto $label$20 }
	$13 = [12]
	goto $label$7 
	
.LABEL $label$52
	CALL $10(*(($5 + [208])))
	$13 = [13]
	goto $label$7 
	
.LABEL $label$51
	$10 = *($5 + [288])
	if ( ($10 == 0) ){ goto $label$19 }
	$13 = [14]
	goto $label$7 
	
.LABEL $label$50
	$3 = ($5 + [292])
	$11 = *($3)
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$18 }
	$13 = [15]
	goto $label$7 
	
.LABEL $label$49
	$13 = [16]
	goto $label$7 
	
.LABEL $label$48
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$16 }
	$13 = [17]
	goto $label$7 
	
.LABEL $label$47
	CALL $10($12)
	$13 = [18]
	goto $label$7 
	
.LABEL $label$46
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$17 }
	$13 = [19]
	goto $label$7 
	
.LABEL $label$45
	$11 = *(($5 + [288]))
	goto $label$15 
	
.LABEL $label$44
	$11 = $10
	$13 = [20]
	goto $label$7 
	
.LABEL $label$43
	*($3) = $10
	CALL $10($11)
	$13 = [21]
	goto $label$7 
	
.LABEL $label$42
	$global$0 = ($5 + [336])
	return 
	
.LABEL $label$41
	$13 = [2]
	goto $label$7 
	
.LABEL $label$40
	$13 = [1]
	goto $label$7 
	
.LABEL $label$39
	$13 = [3]
	goto $label$7 
	
.LABEL $label$38
	$13 = [3]
	goto $label$7 
	
.LABEL $label$37
	$13 = [1]
	goto $label$7 
	
.LABEL $label$36
	$13 = [4]
	goto $label$7 
	
.LABEL $label$35
	$13 = [4]
	goto $label$7 
	
.LABEL $label$34
	$13 = [5]
	goto $label$7 
	
.LABEL $label$33
	$13 = [5]
	goto $label$7 
	
.LABEL $label$32
	$13 = [5]
	goto $label$7 
	
.LABEL $label$31
	$13 = [26]
	goto $label$7 
	
.LABEL $label$30
	$13 = [6]
	goto $label$7 
	
.LABEL $label$29
	$13 = [26]
	goto $label$7 
	
.LABEL $label$28
	$13 = [6]
	goto $label$7 
	
.LABEL $label$27
	$13 = [7]
	goto $label$7 
	
.LABEL $label$26
	$13 = [8]
	goto $label$7 
	
.LABEL $label$25
	$13 = [23]
	goto $label$7 
	
.LABEL $label$24
	$13 = [11]
	goto $label$7 
	
.LABEL $label$23
	$13 = [9]
	goto $label$7 
	
.LABEL $label$22
	$13 = [11]
	goto $label$7 
	
.LABEL $label$21
	$13 = [11]
	goto $label$7 
	
.LABEL $label$20
	$13 = [13]
	goto $label$7 
	
.LABEL $label$19
	$13 = [21]
	goto $label$7 
	
.LABEL $label$18
	$13 = [22]
	goto $label$7 
	
.LABEL $label$17
	$13 = [16]
	goto $label$7 
	
.LABEL $label$16
	$13 = [18]
	goto $label$7 
	
.LABEL $label$15
	$13 = [20]
	goto $label$7 
	
.LABEL $label$14
	$13 = [29]
	goto $label$7 
	
.LABEL $label$13
	$13 = [30]
	goto $label$7 
	
.LABEL $label$12
	$13 = [34]
	goto $label$7 
	
.LABEL $label$11
	$13 = [36]
	goto $label$7 
	
.LABEL $label$10
	$13 = [38]
	goto $label$7 
	
.LABEL $label$9
	$13 = [41]
	goto $label$7 
	
.LABEL $label$8
	$13 = [43]
	goto $label$7 
	$13
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $8($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $24($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $10($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11333])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11333])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = *(($5 + [16]))
	if ( ((int_32)(*(($4 + [8])) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11333])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [24])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $1) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11333])
	$1 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $34 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$4 = ($global$0 - [144])
	$global$0 = $4
	CALL require_auth(*($0))
	$5 = [0]
	$6 = *($2 + [8])
	$7 = (uint_64)$6 >> (uint_64)(int_64)8
	$8 = $7)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$8 = $9
	$10 = $5
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$8 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$11 = ($5 + [1])
	$5 = $11
	if ( $10 ){ goto $label$5 }
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8387])
	
.LABEL $label$1
	$12 = *($2)
	if ( ((uint_64)((int_64)$12 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$5 = [0]
	$8 = $7
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$8 = $9
	$10 = $5
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$8 = $9
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$11 = ($5 + [1])
	$5 = $11
	if ( $10 ){ goto $label$10 }
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8435])
	
.LABEL $label$6
	if ( ((int_64)$12 > (int_64)0) ){ goto $label$11 }
	CALL eosio_assert([0], [8478])
	
.LABEL $label$11
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	$8 = *($0)
	*($4 + [8]) = $8
	*($4 + [16]) = $7
	$5 = CALL db_find_i64($8, $7, (int_64)-4157508551318700032, $7)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$12 }
	if ( ((int_32)*(CALL $35(($4 + [8]), $5) + [44]) == (int_32)($4 + [8])) ){ goto $label$13 }
	CALL eosio_assert([0], [11339])
	
.LABEL $label$13
	CALL eosio_assert([0], [8547])
	
.LABEL $label$12
	$9 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [8])) ){ goto $label$14 }
	CALL eosio_assert([0], [11426])
	
.LABEL $label$14
	*(($5 = CALL $8([56]))) = (int_64)0
	*($5 + [44]) = ($4 + [8])
	*($5 + [8]) = $6
	*($5 + [32]) = $1
	*($5 + [40]) = $3
	*($5 + [16]) = *($2)
	*(($5 + [24])) = *(($2 + [8]))
	*($4 + [112]) = (($4 + [48]) + [41])
	*($4 + [108]) = ($4 + [48])
	*($4 + [104]) = ($4 + [48])
	*($4 + [120]) = ($4 + [104])
	*($4 + [132]) = ($5 + [16])
	*($4 + [128]) = $5
	*($4 + [136]) = ($5 + [32])
	*($4 + [140]) = ($5 + [40])
	CALL $36(($4 + [128]), ($4 + [120]))
	$8 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	$11 = CALL db_store_i64(*((($4 + [8]) + [8])), (int_64)-4157508551318700032, $9, $8), ($4 + [48]), [41]
	*($5 + [48]) = $11)
	$10 = (($4 + [8]) + [16])
	if ( (uint_64)($8 <= *($10)) ){ goto $label$15 }
	*($10) = ((int_64)$8 + (int_64)1)
	
.LABEL $label$15
	*($4 + [128]) = $5
	$8 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($4 + [48]) = $8)
	*($4 + [104]) = $11
	$2 = ($4 + [36])
	$10 = *($2)
	if ( ((uint_32)$10 >= (uint_32)*((($4 + [8]) + [32]))) ){ goto $label$18 }
	*($10 + [8]) = $8
	*($10 + [16]) = $11
	*($4 + [128]) = [0]
	*($10) = $5
	*($2) = ($10 + [24])
	$5 = *($4 + [128])
	*($4 + [128]) = [0]
	if ( $5 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $37(($4 + [32]), ($4 + [128]), ($4 + [48]), ($4 + [104]))
	$5 = *($4 + [128])
	*($4 + [128]) = [0]
	if ( ($5 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $10($5)
	
.LABEL $label$16
	$11 = *($4 + [32])
	if ( ($11 == 0) ){ goto $label$19 }
	$2 = ($4 + [36])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$21 }
	
.LOOP $label$22:
	$5 = ($5 + [-24])
	$10 = *($5)
	*($5) = [0]
	if ( ($10 == 0) ){ goto $label$23 }
	CALL $10($10)
	
.LABEL $label$23
	if ( ((int_32)$11 != (int_32)$5) ){ goto $label$22 }
	$5 = *(($4 + [32]))
	goto $label$20 
	
.LABEL $label$21
	$5 = $11
	
.LABEL $label$20
	*($2) = $11
	CALL $10($5)
	
.LABEL $label$19
	$global$0 = ($4 + [144])
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11333])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11333])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11333])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11333])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	$0 = ($5 + [32])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11333])
	$4 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $0, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $97(CALL $96($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11333])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11333])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11390])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = [0]
	*($5 + [44]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [32])
	*($3 + [44]) = ($5 + [40])
	CALL $102(($3 + [32]), ($3 + [24]))
	*($5 + [48]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $37(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $29 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $29($0, *($1))
	CALL $29($0, *($1 + [4]))
	if ( ((*(($1 + [20])) & [1]) == 0) ){ goto $label$2 }
	CALL $10(*(($1 + [28])))
	
.LABEL $label$2
	CALL $10($1)
	
.LABEL $label$1
}

void .FUNC $28 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $28($0, *($1))
	CALL $28($0, *($1 + [4]))
	CALL $10($1)
	
.LABEL $label$1
}

void .FUNC $55 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $53($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $57(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $10($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $106 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $24($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $8($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $10($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $21($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $23 (int_32 $0)
{
}

void .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $8(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $10($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $25 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($2 + [40])) = [0]
	*($2 + [16]) = (int_64)5300903188324233184
	*($2 + [8]) = (int_64)5300903188324233184
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	*($2 + [44]) = [0]
	$3 = CALL db_find_i64((int_64)5300903188324233184, (int_64)5300903188324233184, (int_64)5301158973880139776, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$3 = CALL $26(($2 + [8]), $3)
	if ( ((int_32)*($3 + [76]) == (int_32)($2 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [11339])
	
.LABEL $label$4
	CALL $27($0, $3)
	$4 = *($2 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [8245])
	CALL $27($0, [0])
	$4 = *($2 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($2 + [36])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $28(($0 + [60]), *(($0 + [64])))
	CALL $29(($0 + [48]), *(($0 + [52])))
	if ( ((*($0 + [16]) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*(($0 + [24])))
	
.LABEL $label$9
	CALL $10($0)
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$7 }
	$0 = *(($2 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $4
	
.LABEL $label$5
	*($5) = $4
	CALL $10($0)
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$1
	$global$0 = ($2 + [48])
}

void .FUNC $24 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	*($0) = *($1)
	*(($0 + [8])) = *(($1 + [8]))
	CALL $19(($0 + [16]), ($1 + [16]))
	*(($0 + [40])) = *(($1 + [40]))
	*($0 + [32]) = *($1 + [32])
	*(($2 = ($0 + [52]))) = (int_64)0
	*($0 + [48]) = $2
	$4 = ($1 + [52])
	$3 = *($1 + [48])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	$5 = [0]
	$6 = ($0 + [48])
	$7 = ($0 + [52])
	$8 = ($0 + [56])
	if ( ((int_32)$2 != (int_32)$2) ){ goto $label$3 }
	$10 = [28]
	goto $label$1 
	
.LABEL $label$3
	$10 = [3]
	goto $label$1 
	
.LABEL $label$2
	$10 = [29]
	
.LABEL $label$1
	
.LOOP $label$4:
	goto $label$103 
	
.LABEL $label$130
	$5 = *($7)
	$3 = $9
	if ( ((int_32)*($6) == (int_32)$2) ){ goto $label$59 }
	$10 = [3]
	goto $label$4 
	
.LABEL $label$129
	$9 = $5
	$11 = $2
	if ( ($5 == 0) ){ goto $label$42 }
	$10 = [4]
	goto $label$4 
	
.LABEL $label$128
	$12 = $9
	$9 = *($12 + [4])
	if ( $9 ){ goto $label$43 }
	goto $label$44 
	
.LABEL $label$127
	$12 = *($11 + [8])
	$9 = ((int_32)*($12) == (int_32)$11)
	$11 = $12
	if ( $9 ){ goto $label$41 }
	$10 = [5]
	goto $label$4 
	
.LABEL $label$126
	$9 = *(($3 + [16]))
	if ( (*($12 + [16]) <= $9) ){ goto $label$58 }
	$10 = [6]
	goto $label$4 
	
.LABEL $label$125
	if ( ($5 == 0) ){ goto $label$40 }
	$10 = [7]
	goto $label$4 
	
.LABEL $label$124
	$11 = $2
	$12 = *($5 + [16])
	if ( ((uint_32)$9 >= (uint_32)$12) ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$123
	$11 = $5
	$5 = $12
	$12 = *($5 + [16])
	if ( ((uint_32)$9 >= (uint_32)$12) ){ goto $label$55 }
	$10 = [20]
	goto $label$4 
	
.LABEL $label$122
	$12 = *($5)
	if ( $12 ){ goto $label$30 }
	goto $label$31 
	
.LABEL $label$121
	if ( ((uint_32)$12 >= (uint_32)$9) ){ goto $label$37 }
	$10 = [17]
	goto $label$4 
	
.LABEL $label$120
	$11 = ($5 + [4])
	$12 = *($5 + [4])
	if ( ($12 == 0) ){ goto $label$32 }
	$10 = [18]
	goto $label$4 
	
.LABEL $label$119
	$5 = $11
	goto $label$54 
	
.LABEL $label$118
	$12 = $2
	$10 = [24]
	goto $label$4 
	
.LABEL $label$117
	if ( ($5 == 0) ){ goto $label$29 }
	$10 = [25]
	goto $label$4 
	
.LABEL $label$116
	$5 = ($12 + [4])
	if ( (*($5) == 0) ){ goto $label$34 }
	$10 = [10]
	goto $label$4 
	
.LABEL $label$115
	$12 = *($3 + [4])
	if ( $12 ){ goto $label$51 }
	$10 = [11]
	goto $label$4 
	
.LABEL $label$114
	$9 = *($3 + [8])
	if ( ((int_32)*($9) == (int_32)$3) ){ goto $label$48 }
	$10 = [12]
	goto $label$4 
	
.LABEL $label$113
	$11 = ($3 + [8])
	$10 = [13]
	goto $label$4 
	
.LABEL $label$112
	$12 = *($11)
	$11 = ($12 + [8])
	$9 = *($12 + [8])
	if ( ((int_32)$12 != (int_32)*($9)) ){ goto $label$46 }
	goto $label$47 
	
.LABEL $label$111
	$12 = $2
	$5 = $2
	if ( *($5) ){ goto $label$35 }
	goto $label$36 
	
.LABEL $label$110
	$5 = $2
	$12 = $2
	goto $label$57 
	
.LABEL $label$109
	$12 = $5
	goto $label$56 
	
.LABEL $label$108
	$12 = $5
	$5 = $11
	if ( *($5) ){ goto $label$52 }
	goto $label$53 
	
.LABEL $label$107
	$12 = $5
	$5 = $11
	$10 = [14]
	goto $label$4 
	
.LABEL $label$106
	*(($9 = CALL $8([32])) + [16]) = *(($3 + [16]))
	CALL $19(($9 + [20]), ($3 + [20]))
	*($9 + [8]) = $12
	*($9) = (int_64)0
	*($5) = $9
	$12 = *(*($6))
	if ( ($12 == 0) ){ goto $label$33 }
	$10 = [15]
	goto $label$4 
	
.LABEL $label$105
	*($6) = $12
	$9 = *($5)
	$10 = [16]
	goto $label$4 
	
.LABEL $label$104
	CALL $30(*($7), $9)
	*($8) = (*($8) + [1])
	$12 = *($3 + [4])
	if ( ($12 == 0) ){ goto $label$49 }
	$10 = [0]
	goto $label$4 
	
.LABEL $label$103
	$9 = $12
	$12 = *($9)
	if ( $12 ){ goto $label$50 }
	$10 = [1]
	goto $label$4 
	
.LABEL $label$102
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$45 }
	$10 = [29]
	goto $label$4 
	
.LABEL $label$101
	$2 = ($0 + [64])
	*($0 + [60]) = $2
	*($2) = (int_64)0
	$8 = ($1 + [64])
	$3 = *($1 + [60])
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$28 }
	$10 = [30]
	goto $label$4 
	
.LABEL $label$100
	$5 = [0]
	$4 = ($0 + [60])
	$13 = ($0 + [64])
	$7 = ($0 + [68])
	$6 = ($3 + [16])
	if ( ((int_32)$2 != (int_32)$2) ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$99
	$5 = *($13)
	$3 = $9
	$6 = ($3 + [16])
	if ( ((int_32)*($4) == (int_32)$2) ){ goto $label$69 }
	$10 = [31]
	goto $label$4 
	
.LABEL $label$98
	$9 = $5
	$11 = $2
	if ( ($5 == 0) ){ goto $label$23 }
	$10 = [32]
	goto $label$4 
	
.LABEL $label$97
	$12 = $9
	$9 = *($12 + [4])
	if ( $9 ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$96
	$12 = *($11 + [8])
	$9 = ((int_32)*($12) == (int_32)$11)
	$11 = $12
	if ( $9 ){ goto $label$22 }
	$10 = [33]
	goto $label$4 
	
.LABEL $label$95
	$9 = *($6)
	if ( (*($12 + [16]) <= $9) ){ goto $label$68 }
	$10 = [34]
	goto $label$4 
	
.LABEL $label$94
	if ( ($5 == 0) ){ goto $label$21 }
	$10 = [35]
	goto $label$4 
	
.LABEL $label$93
	$11 = $2
	$12 = *($5 + [16])
	if ( ((uint_32)$9 >= (uint_32)$12) ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$92
	$11 = $5
	$5 = $12
	$12 = *($5 + [16])
	if ( ((uint_32)$9 >= (uint_32)$12) ){ goto $label$65 }
	$10 = [56]
	goto $label$4 
	
.LABEL $label$91
	$12 = *($5)
	if ( $12 ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$90
	if ( ((uint_32)$12 >= (uint_32)$9) ){ goto $label$18 }
	$10 = [53]
	goto $label$4 
	
.LABEL $label$89
	$11 = ($5 + [4])
	$12 = *($5 + [4])
	if ( ($12 == 0) ){ goto $label$7 }
	$10 = [54]
	goto $label$4 
	
.LABEL $label$88
	$5 = $11
	goto $label$64 
	
.LABEL $label$87
	$12 = $2
	$10 = [43]
	goto $label$4 
	
.LABEL $label$86
	if ( ($5 == 0) ){ goto $label$9 }
	$10 = [44]
	goto $label$4 
	
.LABEL $label$85
	$5 = ($12 + [4])
	if ( (*($5) == 0) ){ goto $label$15 }
	$10 = [38]
	goto $label$4 
	
.LABEL $label$84
	$12 = *($3 + [4])
	if ( $12 ){ goto $label$61 }
	$10 = [48]
	goto $label$4 
	
.LABEL $label$83
	$9 = *($3 + [8])
	if ( ((int_32)*($9) == (int_32)$3) ){ goto $label$13 }
	$10 = [49]
	goto $label$4 
	
.LABEL $label$82
	$11 = ($3 + [8])
	$10 = [50]
	goto $label$4 
	
.LABEL $label$81
	$12 = *($11)
	$11 = ($12 + [8])
	$9 = *($12 + [8])
	if ( ((int_32)$12 != (int_32)*($9)) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$80
	$12 = $2
	$5 = $2
	if ( *($5) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$79
	$5 = $2
	$12 = $2
	goto $label$67 
	
.LABEL $label$78
	$12 = $5
	goto $label$66 
	
.LABEL $label$77
	$12 = $5
	$5 = $11
	if ( *($5) ){ goto $label$62 }
	goto $label$63 
	
.LABEL $label$76
	$12 = $5
	$5 = $11
	$10 = [45]
	goto $label$4 
	
.LABEL $label$75
	*((($9 = CALL $8([32])) + [24])) = *(($6 + [8]))
	*($9 + [16]) = *($6)
	*($9) = (int_64)0
	*($9 + [8]) = $12
	*($5) = $9
	$12 = *(*($4))
	if ( ($12 == 0) ){ goto $label$8 }
	$10 = [46]
	goto $label$4 
	
.LABEL $label$74
	*($4) = $12
	$9 = *($5)
	$10 = [47]
	goto $label$4 
	
.LABEL $label$73
	CALL $30(*($13), $9)
	*($7) = (*($7) + [1])
	$12 = *($3 + [4])
	if ( ($12 == 0) ){ goto $label$14 }
	$10 = [39]
	goto $label$4 
	
.LABEL $label$72
	$9 = $12
	$12 = *($9)
	if ( $12 ){ goto $label$60 }
	$10 = [40]
	goto $label$4 
	
.LABEL $label$71
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$10 }
	$10 = [52]
	goto $label$4 
	
.LABEL $label$70
	*($0 + [72]) = *($1 + [72])
	return $0
	
.LABEL $label$69
	$10 = [42]
	goto $label$4 
	
.LABEL $label$68
	$10 = [43]
	goto $label$4 
	
.LABEL $label$67
	$10 = [45]
	goto $label$4 
	
.LABEL $label$66
	$10 = [45]
	goto $label$4 
	
.LABEL $label$65
	$10 = [36]
	goto $label$4 
	
.LABEL $label$64
	$10 = [55]
	goto $label$4 
	
.LABEL $label$63
	$10 = [45]
	goto $label$4 
	
.LABEL $label$62
	$10 = [38]
	goto $label$4 
	
.LABEL $label$61
	$10 = [39]
	goto $label$4 
	
.LABEL $label$60
	$10 = [39]
	goto $label$4 
	
.LABEL $label$59
	$10 = [28]
	goto $label$4 
	
.LABEL $label$58
	$10 = [24]
	goto $label$4 
	
.LABEL $label$57
	$10 = [14]
	goto $label$4 
	
.LABEL $label$56
	$10 = [14]
	goto $label$4 
	
.LABEL $label$55
	$10 = [8]
	goto $label$4 
	
.LABEL $label$54
	$10 = [19]
	goto $label$4 
	
.LABEL $label$53
	$10 = [14]
	goto $label$4 
	
.LABEL $label$52
	$10 = [10]
	goto $label$4 
	
.LABEL $label$51
	$10 = [0]
	goto $label$4 
	
.LABEL $label$50
	$10 = [0]
	goto $label$4 
	
.LABEL $label$49
	$10 = [11]
	goto $label$4 
	
.LABEL $label$48
	$10 = [1]
	goto $label$4 
	
.LABEL $label$47
	$10 = [1]
	goto $label$4 
	
.LABEL $label$46
	$10 = [13]
	goto $label$4 
	
.LABEL $label$45
	$10 = [2]
	goto $label$4 
	
.LABEL $label$44
	$10 = [5]
	goto $label$4 
	
.LABEL $label$43
	$10 = [4]
	goto $label$4 
	
.LABEL $label$42
	$10 = [27]
	goto $label$4 
	
.LABEL $label$41
	$10 = [27]
	goto $label$4 
	
.LABEL $label$40
	$10 = [23]
	goto $label$4 
	
.LABEL $label$39
	$10 = [20]
	goto $label$4 
	
.LABEL $label$38
	$10 = [8]
	goto $label$4 
	
.LABEL $label$37
	$10 = [9]
	goto $label$4 
	
.LABEL $label$36
	$10 = [14]
	goto $label$4 
	
.LABEL $label$35
	$10 = [10]
	goto $label$4 
	
.LABEL $label$34
	$10 = [14]
	goto $label$4 
	
.LABEL $label$33
	$10 = [16]
	goto $label$4 
	
.LABEL $label$32
	$10 = [22]
	goto $label$4 
	
.LABEL $label$31
	$10 = [21]
	goto $label$4 
	
.LABEL $label$30
	$10 = [19]
	goto $label$4 
	
.LABEL $label$29
	$10 = [26]
	goto $label$4 
	
.LABEL $label$28
	$10 = [52]
	goto $label$4 
	
.LABEL $label$27
	$10 = [42]
	goto $label$4 
	
.LABEL $label$26
	$10 = [31]
	goto $label$4 
	
.LABEL $label$25
	$10 = [33]
	goto $label$4 
	
.LABEL $label$24
	$10 = [32]
	goto $label$4 
	
.LABEL $label$23
	$10 = [60]
	goto $label$4 
	
.LABEL $label$22
	$10 = [60]
	goto $label$4 
	
.LABEL $label$21
	$10 = [59]
	goto $label$4 
	
.LABEL $label$20
	$10 = [56]
	goto $label$4 
	
.LABEL $label$19
	$10 = [36]
	goto $label$4 
	
.LABEL $label$18
	$10 = [37]
	goto $label$4 
	
.LABEL $label$17
	$10 = [45]
	goto $label$4 
	
.LABEL $label$16
	$10 = [38]
	goto $label$4 
	
.LABEL $label$15
	$10 = [45]
	goto $label$4 
	
.LABEL $label$14
	$10 = [48]
	goto $label$4 
	
.LABEL $label$13
	$10 = [40]
	goto $label$4 
	
.LABEL $label$12
	$10 = [40]
	goto $label$4 
	
.LABEL $label$11
	$10 = [50]
	goto $label$4 
	
.LABEL $label$10
	$10 = [41]
	goto $label$4 
	
.LABEL $label$9
	$10 = [51]
	goto $label$4 
	
.LABEL $label$8
	$10 = [47]
	goto $label$4 
	
.LABEL $label$7
	$10 = [58]
	goto $label$4 
	
.LABEL $label$6
	$10 = [57]
	goto $label$4 
	
.LABEL $label$5
	$10 = [55]
	goto $label$4 
	return $10
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11390])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([96])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24]) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [52 align=4]) = (int_64)0
	*($5 + [64 align=4]) = (int_64)0
	*($5 + [76]) = $0
	*($5 + [48]) = ($5 + [52])
	*($5 + [60]) = ($5 + [64])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [32])
	*($3 + [48]) = ($5 + [48])
	*($3 + [52]) = ($5 + [60])
	*($3 + [56]) = ($5 + [72])
	CALL $98(($3 + [32]), ($3 + [24]))
	*($5 + [80]) = $1
	*($5 + [84 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5 + [8])
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $99(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $28(($1 + [60]), *(($1 + [64])))
	CALL $29(($1 + [48]), *(($1 + [52])))
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [24])))
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $69 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11477])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [11523])
	
.LABEL $label$2
	$5 = ($1 + [24])
	$6 = *($5)
	*($4 + [24]) = ((int_64)$6 ^ (int_64)-1)
	CALL $20($1, *($2))
	if ( ((int_64)$6 == (int_64)*($5)) ){ goto $label$3 }
	CALL eosio_assert([0], [11574])
	
.LABEL $label$3
	$2 = *($1)
	$7 = ( *($1 + [4]) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($7 + [8])
	$8 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$4:
	$2 = ($2 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$4 }
	$7 = *($1 + [12])
	$7 = ( *(($1 + [16])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$2 = ($7 + $2)
	$8 = (CASTING uint_64)(uint_32 $7)
	$7 = ($1 + [12])
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	if ( ($2 <= [513]) ){ goto $label$7 }
	$3 = CALL $2($2)
	goto $label$6 
	
.LABEL $label$7
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$6
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($3 + $2)
	$9 = *($7 + [4])
	$7 = CALL $104(CALL $104(($4 + [8]), $1), $7)
	if ( ((int_32)(*($7 + [8]) - $9) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [11333])
	$9 = *(($7 + [4]))
	
.LABEL $label$8
	CALL memcpy($9, $5, [8])
	*(($7 = ($7 + [4]))) = (*($7) + [8])
	CALL db_update_i64(*(($1 + [36])), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL $3($3)
	
.LABEL $label$9
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*($4 + [40]) = ((int_64)*($5) ^ (int_64)-1)
	if ( (CALL $17(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$11 }
	$1 = ($1 + [40])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$12 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-7880044396392173568, ($4 + [32]), $6)
	*($1) = $2
	
.LABEL $label$12
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$11
	$global$0 = ($4 + [48])
}

void .FUNC $68 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [128])
	$global$0 = $4
	CALL $25(($4 + [48]), $3)
	CALL prints([11305])
	CALL printui((int_64)0)
	CALL prints([8310])
	$5 = ($4 + [112])
	$6 = *($5)
	if ( ($6 == 0) ){ goto $label$1 }
	if ( (*($6 + [16]) == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	$5 = $6
	$6 = *($5)
	if ( ($6 == 0) ){ goto $label$1 }
	if ( *($6 + [16]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL require_auth(*((*($5) + [24])))
	if ( ((*($2) & [1]) == 0) ){ goto $label$3 }
	if ( (*($2 + [4]) <= [257]) ){ goto $label$3 }
	CALL eosio_assert([0], [10643])
	
.LABEL $label$3
	$6 = [0]
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	*($4 + [44]) = [0]
	$7 = *($0)
	*($4 + [8]) = $7
	*($4 + [16]) = $3
	$5 = CALL db_find_i64($7, $3, (int_64)-7880044396392173568, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $59(($4 + [8]), $5)
	if ( ((int_32)*($6 + [32]) == (int_32)($4 + [8])) ){ goto $label$6 }
	CALL eosio_assert([0], [11339])
	
.LABEL $label$6
	*($4) = $2
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [10746])
	*($4) = $2
	CALL eosio_assert([0], [11804])
	
.LABEL $label$4
	CALL $69(($4 + [8]), $6, $4)
	$2 = *($4 + [32])
	if ( ($2 == 0) ){ goto $label$7 }
	$0 = ($4 + [36])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	if ( ((*($6 + [12]) & [1]) == 0) ){ goto $label$12 }
	CALL $10(*(($6 + [20])))
	
.LABEL $label$12
	if ( ((*($6) & [1]) == 0) ){ goto $label$13 }
	CALL $10(*($6 + [8]))
	
.LABEL $label$13
	CALL $10($6)
	
.LABEL $label$11
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$10 }
	$6 = *(($4 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$6 = $2
	
.LABEL $label$8
	*($0) = $2
	CALL $10($6)
	
.LABEL $label$7
	CALL $28(($4 + [108]), *(($4 + [112])))
	CALL $29(($4 + [96]), *(($4 + [100])))
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$14 }
	CALL $10(*(($4 + [72])))
	
.LABEL $label$14
	$global$0 = ($4 + [128])
}

int_32 .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11390])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $8([32])) + [16]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $67(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $3($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $10($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $64 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [128])
	$global$0 = $4
	CALL require_auth($1)
	*(($4 + [88])) = [0]
	*($4 + [64]) = $3
	*($4 + [72]) = (int_64)-1
	*($4 + [92]) = [0]
	$5 = *($0)
	*($4 + [56]) = $5
	*($4 + [80]) = (int_64)0
	$6 = CALL db_lowerbound_i64($5, $3, (int_64)-7880044396392173568, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $59(($4 + [56]), $6)
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [10463])
	
.LABEL $label$1
	*($4 + [44]) = [0]
	*($4 + [40]) = ($4 + [56])
	$5 = *(CALL $60(($4 + [40])))
	*($4 + [48]) = $5
	$11 = ($6 & [1])
	$6 = *($2)
	$9 = ($6 & [1])
	$6 = *($7 + [12])
	$8 = uint_32($6 >> [1])
	$7 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32)
	$10 = ( *(($7) + [16])) ? $8 : $9 
	if ( ((int_32)$10) != (int_32)( *($2 + [4]) ? uint_32($6 >> [1]) : $11 )) ){ goto $label$4 }
	$6 = (($7 + [12]) + [1])
	$2 = ( *($2 + [8]) ? ($2 + [1]) : $11 )
	if ( $9 ){ goto $label$5 }
	if ( ($10 == 0) ){ goto $label$3 }
	$7 = ([0] - $8)
	
.LOOP $label$6:
	if ( ((int_32)*($6) != (int_32)*($2)) ){ goto $label$4 }
	$2 = ($2 + [1])
	$6 = ($6 + [1])
	$7 = ($7 + [1])
	if ( $7 ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$5
	if ( ($10 == 0) ){ goto $label$3 }
	if ( (CALL $17(( *(($7 + [20])) ? $6 : $9 ), $2, $10) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [10523])
	
.LABEL $label$3
	*(($4 + [32])) = [0]
	*($4 + [16]) = (int_64)-1
	*($4 + [24]) = (int_64)0
	$5 = *($0)
	*($4) = $5
	*($4 + [8]) = $3
	$6 = CALL db_find_i64($5, $3, (int_64)-7880044397109182464, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	$6 = CALL $65($4, $6)
	if ( ((int_32)*($6 + [16]) == (int_32)$4) ){ goto $label$10 }
	CALL eosio_assert([0], [11339])
	
.LABEL $label$10
	*($4 + [112]) = ($4 + [48])
	CALL $66($4, $6, $1, ($4 + [112]))
	$7 = *($4 + [24])
	if ( $7 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((int_64)CALL current_receiver() == (int_64)*($4)) ){ goto $label$11 }
	CALL eosio_assert([0], [11426])
	
.LABEL $label$11
	*(($6 = CALL $8([32])) + [16]) = $4
	*($6) = $1
	*($6 + [8]) = *(*($4 + [52]) + [24])
	CALL memcpy(($4 + [112]), $6, [8])
	CALL memcpy((($4 + [112]) | [8]), ($6 + [8]), [8])
	$3 = *($6)
	$7 = CALL db_store_i64(*(($4 + [8])), (int_64)-7880044397109182464, $1, $3, ($4 + [112]), [16])
	*($6 + [20]) = $7
	$2 = ($4 + [16])
	if ( (uint_64)($3 <= *($2)) ){ goto $label$12 }
	*($2) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*($4 + [104]) = $6
	$3 = *($6)
	*($4 + [112]) = $3
	*($4 + [100]) = $7
	$0 = ($4 + [28])
	$2 = *($0)
	if ( ((uint_32)$2 >= (uint_32)*(($4 + [32]))) ){ goto $label$15 }
	*($2 + [8]) = $3
	*($2 + [16]) = $7
	*($4 + [104]) = [0]
	*($2) = $6
	*($0) = ($2 + [24])
	$6 = *($4 + [104])
	*($4 + [104]) = [0]
	if ( $6 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $67(($4 + [24]), ($4 + [104]), ($4 + [112]), ($4 + [100]))
	$6 = *($4 + [104])
	*($4 + [104]) = [0]
	if ( ($6 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $10($6)
	
.LABEL $label$13
	$7 = *($4 + [24])
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$0 = ($4 + [28])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$17 }
	
.LOOP $label$18:
	$6 = ($6 + [-24])
	$2 = *($6)
	*($6) = [0]
	if ( ($2 == 0) ){ goto $label$19 }
	CALL $10($2)
	
.LABEL $label$19
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$18 }
	$6 = *(($4 + [24]))
	goto $label$16 
	
.LABEL $label$17
	$6 = $7
	
.LABEL $label$16
	*($0) = $7
	CALL $10($6)
	
.LABEL $label$7
	$7 = *($4 + [80])
	if ( ($7 == 0) ){ goto $label$20 }
	$0 = ($4 + [84])
	$2 = *($0)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$22 }
	
.LOOP $label$23:
	$2 = ($2 + [-24])
	$6 = *($2)
	*($2) = [0]
	if ( ($6 == 0) ){ goto $label$24 }
	if ( ((*($6 + [12]) & [1]) == 0) ){ goto $label$25 }
	CALL $10(*(($6 + [20])))
	
.LABEL $label$25
	if ( ((*($6) & [1]) == 0) ){ goto $label$26 }
	CALL $10(*($6 + [8]))
	
.LABEL $label$26
	CALL $10($6)
	
.LABEL $label$24
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$23 }
	$6 = *(($4 + [80]))
	goto $label$21 
	
.LABEL $label$22
	$6 = $7
	
.LABEL $label$21
	*($0) = $7
	CALL $10($6)
	
.LABEL $label$20
	$global$0 = ($4 + [128])
}

void .FUNC $67 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $24($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $66 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11477])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [11523])
	
.LABEL $label$2
	*($1 + [8]) = *(*(*($3) + [4]) + [24])
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL memcpy(($4 + [-8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $3, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $5
}

int_32 .FUNC $61 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL $16([11839])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($1 << [1])
	$2 = ($0 + [1])
	if ( $1 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$3 = (($1 + [16]) & [-16])
	$2 = CALL $8($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $2
	*($0 + [4]) = $1
	
.LABEL $label$4
	CALL memcpy($2, [11839], $1)
	
.LABEL $label$3
	*(($2 + $1)) = [0]
	*(($0 + [20])) = [0]
	*($0 + [12 align=4]) = (int_64)0
	$2 = ($0 + [12])
	$1 = CALL $16([11839])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$8 }
	*($2) = ($1 << [1])
	$2 = ($2 + [1])
	if ( $1 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$3 = (($1 + [16]) & [-16])
	$2 = CALL $8($3)
	*($0 + [12]) = ($3 | [1])
	*(($0 + [20])) = $2
	*(($0 + [16])) = $1
	
.LABEL $label$7
	CALL memcpy($2, [11839], $1)
	
.LABEL $label$6
	*(($2 + $1)) = [0]
	*($0 + [24]) = (int_64)0
	return $0
	
.LABEL $label$2
	CALL $18($0)
	
.LABEL $label$1
	CALL $18($2)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $60 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [36]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11894])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-7880044396392173568)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [11840])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11840])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $59(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $63 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $24($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [12]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [20])))
	
.LABEL $label$11
	if ( ((*($1) & [1]) == 0) ){ goto $label$12 }
	CALL $10(*($1 + [8]))
	
.LABEL $label$12
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $10($2)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	CALL $20($1, *($5))
	$6 = ($1 + [12])
	CALL $20($6, *($5 + [4]))
	*($1 + [24]) = *(*($5 + [8]))
	$5 = *($1)
	$7 = ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($7 + [8])
	$8 = (CASTING uint_64)(uint_32 $7)
	$9 = ($1 + [24])
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	$7 = *(($1 + [12]))
	$7 = ( *(($1 + [16])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$5 = ($7 + $5)
	$8 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	if ( ($5 <= [513]) ){ goto $label$4 }
	$2 = CALL $2($5)
	goto $label$3 
	
.LABEL $label$4
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $5)
	$7 = *($6 + [4])
	$6 = CALL $104(CALL $104(($3 + [8]), $1), $6)
	if ( ((int_32)(*($6 + [8]) - $7) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11333])
	$7 = *(($6 + [4]))
	
.LABEL $label$5
	CALL memcpy($7, $9, [8])
	*(($6 = ($6 + [4]))) = (*($6) + [8])
	$8 = *(($1 + [24]))
	*($1 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)-7880044396392173568, *(*($0 + [8])), $8, $2, $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$7 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$8 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$11 = *(($1 + [24]))
	*($3 + [24]) = ((int_64)$11 ^ (int_64)-1)
	*($1 + [40]) = CALL db_idx64_store($8, (int_64)-7880044396392173568, $10, $11, ($3 + [24]))
	$global$0 = ($3 + [32])
}

int_32 .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $28($1, *($1 + [4]))
	$3 = ($1 + [4])
	*($1) = $3
	$4 = (int_64)0
	*($1 + [4 align=4]) = (int_64)0
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($5 <= *($6)) ){ goto $label$2 }
	CALL eosio_assert([0], [11413])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	$8 = *($5)
	$9 = ($5 + [1])
	*(($0 + [4])) = $9
	$5 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $5)))
	$7 = ($5 + [7])
	$5 = $9
	if ( ($8 & [128]) ){ goto $label$1 }
	$10 = (CASTING uint_32)(uint_64 $4)
	if ( ($10 == 0) ){ goto $label$4 }
	$11 = ($1 + [4])
	$12 = [0]
	*($2) = (int_64)0
	$13 = ($0 + [8])
	if ( ((int_32)*($13) != (int_32)$9) ){ goto $label$5 }
	$15 = [7]
	goto $label$3 
	
.LABEL $label$5
	$15 = [0]
	goto $label$3 
	
.LABEL $label$4
	$15 = [8]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$40 
	
.LABEL $label$42
	$9 = *($14)
	*($2) = (int_64)0
	if ( ((int_32)$9 != (int_32)*($13)) ){ goto $label$22 }
	$15 = [7]
	goto $label$6 
	
.LABEL $label$41
	CALL eosio_assert([0], [11417])
	$9 = *(($0 + [4]))
	$15 = [0]
	goto $label$6 
	
.LABEL $label$40
	CALL memcpy(($2 + [15]), $9, [1])
	$5 = (*($14) + [1])
	*(($14 = ($0 + [4]))) = $5
	if ( ((uint_32)(*($13) - $5) > (uint_32)[7]) ){ goto $label$23 }
	$15 = [18]
	goto $label$6 
	
.LABEL $label$39
	CALL eosio_assert([0], [11417])
	$5 = *($14)
	$15 = [1]
	goto $label$6 
	
.LABEL $label$38
	CALL memcpy($2, $5, [8])
	*($14) = (*($14) + [8])
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$21 }
	$15 = [2]
	goto $label$6 
	
.LABEL $label$37
	$9 = $11
	$8 = *($5 + [16])
	$6 = *($2 + [15])
	$7 = ($6 & [255])
	if ( ((uint_32)$7 >= (uint_32)$8) ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$36
	$9 = $5
	$5 = $8
	$8 = *($5 + [16])
	$7 = ($6 & [255])
	if ( ((uint_32)$7 >= (uint_32)$8) ){ goto $label$18 }
	$15 = [15]
	goto $label$6 
	
.LABEL $label$35
	$8 = *($5)
	if ( $8 ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$34
	if ( ((uint_32)$8 >= (uint_32)$7) ){ goto $label$16 }
	$15 = [12]
	goto $label$6 
	
.LABEL $label$33
	$9 = ($5 + [4])
	$8 = *($5 + [4])
	if ( ($8 == 0) ){ goto $label$17 }
	$15 = [13]
	goto $label$6 
	
.LABEL $label$32
	$5 = $9
	goto $label$7 
	
.LABEL $label$31
	$5 = $3
	$9 = $3
	$15 = [4]
	goto $label$6 
	
.LABEL $label$30
	if ( (*($9) == 0) ){ goto $label$15 }
	$15 = [5]
	goto $label$6 
	
.LABEL $label$29
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$28
	$9 = $5
	if ( *($9) ){ goto $label$14 }
	$15 = [9]
	goto $label$6 
	
.LABEL $label$27
	*(($8 = CALL $8([32]))) = (int_64)0
	*($8 + [8]) = $5
	*($9) = $8
	*($8 + [16]) = *($2 + [15])
	*($8 + [24]) = *($2)
	$5 = *(*($1))
	if ( ($5 == 0) ){ goto $label$10 }
	$15 = [10]
	goto $label$6 
	
.LABEL $label$26
	*($1) = $5
	$8 = *($9)
	$15 = [11]
	goto $label$6 
	
.LABEL $label$25
	CALL $30(*(($1 + [4])), $8)
	*(($5 = ($1 + [8]))) = (*($5) + [1])
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$11 }
	$15 = [8]
	goto $label$6 
	
.LABEL $label$24
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$23
	$15 = [1]
	goto $label$6 
	
.LABEL $label$22
	$15 = [0]
	goto $label$6 
	
.LABEL $label$21
	$15 = [17]
	goto $label$6 
	
.LABEL $label$20
	$15 = [15]
	goto $label$6 
	
.LABEL $label$19
	$15 = [3]
	goto $label$6 
	
.LABEL $label$18
	$15 = [3]
	goto $label$6 
	
.LABEL $label$17
	$15 = [4]
	goto $label$6 
	
.LABEL $label$16
	$15 = [4]
	goto $label$6 
	
.LABEL $label$15
	$15 = [9]
	goto $label$6 
	
.LABEL $label$14
	$15 = [5]
	goto $label$6 
	
.LABEL $label$13
	$15 = [8]
	goto $label$6 
	
.LABEL $label$12
	$15 = [6]
	goto $label$6 
	
.LABEL $label$11
	$15 = [6]
	goto $label$6 
	
.LABEL $label$10
	$15 = [11]
	goto $label$6 
	
.LABEL $label$9
	$15 = [16]
	goto $label$6 
	
.LABEL $label$8
	$15 = [14]
	goto $label$6 
	
.LABEL $label$7
	$15 = [14]
	goto $label$6 
	return $15
}

int_32 .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $29($1, *($1 + [4]))
	$3 = ($1 + [4])
	*($1) = $3
	$4 = (int_64)0
	*($1 + [4 align=4]) = (int_64)0
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($5 <= *($6)) ){ goto $label$2 }
	CALL eosio_assert([0], [11413])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	$8 = *($5)
	$9 = ($5 + [1])
	*(($0 + [4])) = $9
	$5 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $5)))
	$7 = ($5 + [7])
	$5 = $9
	if ( ($8 & [128]) ){ goto $label$1 }
	$10 = (CASTING uint_32)(uint_64 $4)
	if ( ($10 == 0) ){ goto $label$3 }
	$11 = ($1 + [4])
	$12 = [0]
	
.LOOP $label$4:
	*(($14 = ($2 + [8]))) = [0]
	*($2) = (int_64)0
	if ( ((int_32)*(($0 + [8])) != (int_32)$9) ){ goto $label$5 }
	CALL eosio_assert([0], [11417])
	$9 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [15]), $9, [1])
	*(($13 = ($0 + [4]))) = (*($13) + [1])
	CALL $80($0, $2)
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$9 }
	$9 = $11
	$8 = *($5 + [16])
	$6 = *($2 + [15])
	$7 = ($6 & [255])
	if ( ((uint_32)$7 >= (uint_32)$8) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	$5 = $3
	$9 = $3
	$15 = [3]
	goto $label$6 
	
.LABEL $label$8
	$15 = [12]
	goto $label$6 
	
.LABEL $label$7
	$15 = [2]
	
.LABEL $label$6
	
.LOOP $label$11:
	goto $label$33 
	
.LABEL $label$37
	$9 = $5
	$5 = $8
	$8 = *($5 + [16])
	$7 = ($6 & [255])
	if ( ((uint_32)$7 >= (uint_32)$8) ){ goto $label$24 }
	$15 = [12]
	goto $label$11 
	
.LABEL $label$36
	$8 = *($5)
	if ( $8 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$35
	if ( ((uint_32)$8 >= (uint_32)$7) ){ goto $label$19 }
	$15 = [11]
	goto $label$11 
	
.LABEL $label$34
	$9 = ($5 + [4])
	$8 = *($5 + [4])
	if ( ($8 == 0) ){ goto $label$22 }
	$15 = [0]
	goto $label$11 
	
.LABEL $label$33
	$5 = $9
	goto $label$23 
	
.LABEL $label$32
	if ( (*($9) == 0) ){ goto $label$18 }
	$15 = [4]
	goto $label$11 
	
.LABEL $label$31
	if ( (*($2) & [1]) ){ goto $label$16 }
	$15 = [7]
	goto $label$11 
	
.LABEL $label$30
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$14 }
	goto $label$3 
	
.LABEL $label$29
	$9 = $5
	if ( *($9) ){ goto $label$17 }
	$15 = [8]
	goto $label$11 
	
.LABEL $label$28
	*(($8 = CALL $8([32]))) = (int_64)0
	*($8 + [8]) = $5
	*($8 + [20 align=4]) = *($2)
	*(($8 + [28])) = *($14)
	*($9) = $8
	*($8 + [16]) = *($2 + [15])
	*($14) = [0]
	*($2) = (int_64)0
	$5 = *(*($1))
	if ( ($5 == 0) ){ goto $label$12 }
	$15 = [9]
	goto $label$11 
	
.LABEL $label$27
	*($1) = $5
	$8 = *($9)
	$15 = [10]
	goto $label$11 
	
.LABEL $label$26
	CALL $30(*(($1 + [4])), $8)
	*(($5 = ($1 + [8]))) = (*($5) + [1])
	if ( ((*($2) & [1]) == 0) ){ goto $label$15 }
	$15 = [5]
	goto $label$11 
	
.LABEL $label$25
	CALL $10(*($14))
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$13 }
	goto $label$3 
	
.LABEL $label$24
	$15 = [2]
	goto $label$11 
	
.LABEL $label$23
	$15 = [1]
	goto $label$11 
	
.LABEL $label$22
	$15 = [3]
	goto $label$11 
	
.LABEL $label$21
	$15 = [13]
	goto $label$11 
	
.LABEL $label$20
	$15 = [1]
	goto $label$11 
	
.LABEL $label$19
	$15 = [3]
	goto $label$11 
	
.LABEL $label$18
	$15 = [8]
	goto $label$11 
	
.LABEL $label$17
	$15 = [4]
	goto $label$11 
	
.LABEL $label$16
	$15 = [5]
	goto $label$11 
	
.LABEL $label$15
	$15 = [7]
	goto $label$11 
	
.LABEL $label$14
	$15 = [6]
	goto $label$11 
	
.LABEL $label$13
	$15 = [6]
	goto $label$11 
	
.LABEL $label$12
	$15 = [10]
	goto $label$11 
	
.LABEL $label$10
	$9 = *($13)
	goto $label$4 
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	$15
	return $0
}

void .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11333])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11333])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11333])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11333])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $104(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11417])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11417])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11417])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11417])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11417])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [11417])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($4) = ((int_32)*($2 + [8]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11417])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11417])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11417])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11417])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11417])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11417])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$7 }
	CALL eosio_assert([0], [11417])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [11417])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [11333])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [11333])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $89 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [32]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$6
	CALL memcpy(($3 + [32]), $6, [8])
	*(($3 + [24])) = $5
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $70($3, *($3 + [40]), *($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $88 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [52]) = $2
	*($3 + [48]) = $2
	*($3 + [56]) = ($2 + $4)
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11417])
	$2 = *($3 + [52])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [52]) = ($2 + [8])
	*($3 + [32]) = [0]
	*($3 + [24]) = (int_64)0
	CALL $80(($3 + [48]), ($3 + [24]))
	$2 = CALL $19(($3 + [8]), ($3 + [24]))
	CALL eosio_assert([0], [10409])
	if ( (*($2) & [1]) ){ goto $label$8 }
	if ( (*($3 + [24]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $10(*(($3 + [32])))
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [64])
}

void .FUNC $87 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [100]) = $2
	*($3 + [96]) = $2
	*($3 + [104]) = ($2 + $4)
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11417])
	$2 = *($3 + [100])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [100]) = ($2 + [8])
	*($3 + [80]) = [0]
	*($3 + [72]) = (int_64)0
	CALL $80(($3 + [96]), ($3 + [72]))
	*($3 + [64]) = (int_64)0
	$2 = *($3 + [100])
	$4 = (($3 + [96]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11417])
	$2 = *($3 + [100])
	
.LABEL $label$6
	CALL memcpy(($3 + [64]), $2, [8])
	*($3 + [100]) = (*($3 + [100]) + [8])
	*(($2 = (($3 + [16]) + [8]))) = *($4)
	*($3 + [16]) = *($3 + [96])
	$2 = *($2)
	*((($3 + [112]) + [8])) = $2
	*(($4 = (($3 + [128]) + [8]))) = $2
	$5 = *($3 + [16])
	*($3 + [128]) = $5
	*($3 + [112]) = $5
	$2 = *($4)
	*((($3 + [144]) + [8])) = $2
	*(($3 + [56])) = $2
	*($3 + [32]) = $0
	*($3 + [40]) = $1
	$0 = *($3 + [128])
	*($3 + [48]) = $0
	*($3 + [144]) = $0
	$2 = CALL $19($3, ($3 + [72]))
	CALL $64(($3 + [32]), *($3 + [88]), $2, *($3 + [64]))
	if ( (*($2) & [1]) ){ goto $label$9 }
	if ( (*($3 + [72]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [72]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $10(*(($3 + [80])))
	$global$0 = ($3 + [160])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [160])
}

void .FUNC $86 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [68]) = $4
	*($3 + [64]) = $4
	*($3 + [72]) = ($4 + $5)
	*($3 + [56]) = [0]
	*($3 + [48]) = (int_64)0
	CALL $80(($3 + [64]), ($3 + [48]))
	*($3 + [40]) = [0]
	*($3 + [32]) = (int_64)0
	CALL $80(($3 + [64]), ($3 + [32]))
	$5 = CALL $19(($3 + [16]), ($3 + [48]))
	$4 = CALL $19($3, ($3 + [32]))
	CALL eosio_assert([0], [9934])
	if ( (*($4) & [1]) ){ goto $label$10 }
	if ( (*($5) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $10(*($4 + [8]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $10(*($5 + [8]))
	$4 = [1]
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = [1]
	if ( (*($3 + [32]) & [1]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( (*($3 + [48]) & $4) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $10(*(($3 + [40])))
	if ( ((*($3 + [48]) & $4) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $10(*(($3 + [56])))
	$global$0 = ($3 + [80])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [80])
}

void .FUNC $85 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [132]) = $4
	*($3 + [128]) = $4
	*($3 + [136]) = ($4 + $5)
	*($3 + [120]) = [0]
	*($3 + [112]) = (int_64)0
	CALL $80(($3 + [128]), ($3 + [112]))
	*($3 + [104]) = [0]
	*($3 + [96]) = (int_64)0
	CALL $80(($3 + [128]), ($3 + [96]))
	*($3 + [88]) = (int_64)0
	$4 = *($3 + [132])
	if ( ((uint_32)(*($3 + [136]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11417])
	$4 = *($3 + [132])
	
.LABEL $label$4
	CALL memcpy(($3 + [88]), $4, [8])
	*($3 + [132]) = (*($3 + [132]) + [8])
	*(($4 = (($3 + [40]) + [8]))) = *((($3 + [128]) + [8]))
	*($3 + [40]) = *($3 + [128])
	$4 = *($4)
	*((($3 + [144]) + [8])) = $4
	*(($5 = (($3 + [160]) + [8]))) = $4
	$6 = *($3 + [40])
	*($3 + [160]) = $6
	*($3 + [144]) = $6
	$4 = *($5)
	*((($3 + [176]) + [8])) = $4
	*(($3 + [80])) = $4
	*($3 + [56]) = $0
	*($3 + [64]) = $1
	$0 = *($3 + [160])
	*($3 + [72]) = $0
	*($3 + [176]) = $0
	$4 = CALL $19(($3 + [8]), ($3 + [96]))
	$5 = CALL $19(($3 + [24]), ($3 + [112]))
	CALL $58(($3 + [56]), $5, $4, *($3 + [88]))
	if ( (*($4) & [1]) ){ goto $label$11 }
	if ( (*($5) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $10(*($4 + [8]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $10(*($5 + [8]))
	$4 = [1]
	if ( ((*($3 + [96]) & [1]) == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$4 = [1]
	if ( (*($3 + [96]) & [1]) ){ goto $label$7 }
	
.LABEL $label$8
	if ( (*($3 + [112]) & $4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $10(*(($3 + [104])))
	if ( ((*($3 + [112]) & $4) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $10(*(($3 + [120])))
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [192])
}

void .FUNC $84 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [208])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [148]) = $2
	*($3 + [144]) = $2
	$5 = ($2 + $4)
	*($3 + [152]) = $5
	*($3 + [136]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11417])
	$5 = *(($3 + [152]))
	$2 = *($3 + [148])
	
.LABEL $label$5
	CALL memcpy(($3 + [136]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [128]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11417])
	$5 = *((($3 + [144]) + [8]))
	$2 = *($3 + [148])
	
.LABEL $label$6
	CALL memcpy(($3 + [128]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [120]) = (int_64)0
	*($3 + [112]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11417])
	$5 = *(($3 + [152]))
	$2 = *($3 + [148])
	
.LABEL $label$7
	CALL memcpy(($3 + [112]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [11417])
	$2 = *($3 + [148])
	
.LABEL $label$8
	CALL memcpy(($3 + [64]), $2, [8])
	*(($5 = (($3 + [112]) + [8]))) = *($3 + [64])
	*($3 + [148]) = ($2 + [8])
	*($3 + [104]) = [0]
	*($3 + [96]) = (int_64)0
	CALL $80(($3 + [144]), ($3 + [96]))
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [144]) + [8]))
	*($3 + [48]) = *($3 + [144])
	$2 = *($2)
	*((($3 + [160]) + [8])) = $2
	*(($4 = (($3 + [176]) + [8]))) = $2
	$6 = *($3 + [48])
	*($3 + [176]) = $6
	*($3 + [160]) = $6
	$2 = *($4)
	*((($3 + [192]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$0 = *($3 + [176])
	*($3 + [80]) = $0
	*($3 + [192]) = $0
	*(($4 = (($3 + [32]) + [8]))) = *($5)
	*($3 + [32]) = *($3 + [112])
	$0 = *($3 + [128])
	$1 = *($3 + [136])
	$2 = CALL $19(($3 + [16]), ($3 + [96]))
	*(($3 + [8])) = *($4)
	*($3) = *($3 + [32])
	CALL $52(($3 + [64]), $1, $0, $3, $2)
	if ( (*($2) & [1]) ){ goto $label$11 }
	if ( (*($3 + [96]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [96]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $10(*(($3 + [104])))
	$global$0 = ($3 + [208])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [208])
}

void .FUNC $83 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [72]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$7
	CALL memcpy(($3 + [40]), $5, [8])
	*(($5 = (($3 + [72]) + [8]))) = *($3 + [40])
	*((($3 + [40]) + [24])) = $4
	$7 = *($5)
	*((($3 + [24]) + [8])) = $7
	*((($3 + [8]) + [8])) = $7
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [24])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	$0 = *($3 + [72])
	*($3 + [24]) = $0
	*($3 + [8]) = $0
	CALL $45(($3 + [40]), *($3 + [88]), ($3 + [8]))
	$global$0 = ($3 + [96])
}

void .FUNC $82 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [72]) = (int_64)0
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [64]), $2, [8])
	*($3 + [32]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$6
	CALL memcpy(($3 + [32]), $6, [8])
	*(($4 = (($3 + [64]) + [8]))) = *($3 + [32])
	*(($3 + [56])) = $5
	$7 = *($4)
	*((($3 + [16]) + [8])) = $7
	*(($3 + [8])) = $7
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [16])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	$0 = *($3 + [64])
	*($3 + [16]) = $0
	*($3) = $0
	CALL $50(($3 + [32]), $3)
	$global$0 = ($3 + [80])
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [11413])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $53($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [11417])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

int_32 .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $81($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $8($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $22($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $22($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $18($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $10($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12006])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12051])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12101])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $10($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $73 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth($1)
	$4 = [0]
	*(($3 + [32])) = [0]
	*($3 + [8]) = $1
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	$5 = *($0)
	*($3) = $5
	$2 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)*($2) >> (uint_64)(int_64)8)
	if ( ((int_32)$2) <= (int_32)[-1]) ){ goto $label$3 }
	$4 = CALL $42($3, $2)
	if ( ((int_32)*($4 + [16]) == (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [11339])
	
.LABEL $label$4
	if ( (int_64)(*($4) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [11121])
	if ( (int_64)(*([0]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [11230])
	
.LABEL $label$1
	if ( $4 ){ goto $label$5 }
	CALL eosio_assert([0], [11942])
	CALL eosio_assert([0], [11976])
	
.LABEL $label$5
	$2 = CALL db_next_i64(*($4 + [20]), ($3 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$6 }
	CALL $42($3, $2)
	
.LABEL $label$6
	CALL $74($3, $4)
	$0 = *($3 + [24])
	if ( ($0 == 0) ){ goto $label$7 }
	$6 = ($3 + [28])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($3 + [24]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $0
	
.LABEL $label$8
	*($6) = $0
	CALL $10($4)
	
.LABEL $label$7
	$global$0 = ($3 + [48])
}

void .FUNC $70 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [176])
	$global$0 = $3
	CALL require_auth($1)
	CALL $25(($3 + [88]), $2)
	CALL prints([11305])
	CALL printui((int_64)2)
	CALL prints([8310])
	$4 = ($3 + [152])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$2 }
	$6 = *($5 + [16])
	if ( ($6 <= [3]) ){ goto $label$3 }
	$7 = [35]
	goto $label$1 
	
.LABEL $label$3
	$7 = [2]
	goto $label$1 
	
.LABEL $label$2
	$7 = [3]
	
.LABEL $label$1
	
.LOOP $label$4:
	goto $label$60 
	
.LABEL $label$63
	$4 = $5
	$5 = $6
	$6 = *($5 + [16])
	if ( ($6 <= [3]) ){ goto $label$27 }
	$7 = [35]
	goto $label$4 
	
.LABEL $label$62
	$4 = $5
	$6 = *($5)
	if ( $6 ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$61
	if ( ((int_32)$6 == (int_32)[2]) ){ goto $label$25 }
	$7 = [0]
	goto $label$4 
	
.LABEL $label$60
	$6 = *($5 + [4])
	$4 = ($5 + [4])
	$5 = $4
	if ( $6 ){ goto $label$26 }
	$7 = [3]
	goto $label$4 
	
.LABEL $label$59
	$8 = *((*($4) + [24]))
	*((($3 + [48]) + [32])) = (int_64)0
	*($3 + [48]) = $8
	*($3 + [64]) = (int_64)-1
	*($3 + [72]) = (int_64)0
	*($3 + [56]) = $2
	$5 = CALL db_find_i64($8, $2, (int_64)4730634643120193536, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$22 }
	$7 = [4]
	goto $label$4 
	
.LABEL $label$58
	$5 = CALL $71(($3 + [48]), $5)
	if ( ((int_32)*($5 + [56]) == (int_32)($3 + [48])) ){ goto $label$21 }
	$7 = [5]
	goto $label$4 
	
.LABEL $label$57
	CALL eosio_assert([0], [11339])
	$7 = [6]
	goto $label$4 
	
.LABEL $label$56
	CALL prints([10880])
	if ( ((int_32)*($5 + [48]) != (int_32)[1]) ){ goto $label$20 }
	$7 = [34]
	goto $label$4 
	
.LABEL $label$55
	CALL eosio_assert([0], [10908])
	$7 = [7]
	goto $label$4 
	
.LABEL $label$54
	*((($3 + [8]) + [32])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$8 = *($0)
	*($3 + [8]) = $8
	*($3 + [16]) = $2
	$5 = CALL db_find_i64($8, $2, (int_64)-7880044397109182464, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$19 }
	$7 = [8]
	goto $label$4 
	
.LABEL $label$53
	$5 = CALL $65(($3 + [8]), $5)
	if ( ((int_32)*($5 + [16]) == (int_32)($3 + [8])) ){ goto $label$18 }
	$7 = [9]
	goto $label$4 
	
.LABEL $label$52
	CALL eosio_assert([0], [11339])
	goto $label$17 
	
.LABEL $label$51
	$5 = [0]
	CALL eosio_assert([0], [11055])
	CALL eosio_assert([0], [11942])
	CALL eosio_assert([0], [11976])
	$7 = [10]
	goto $label$4 
	
.LABEL $label$50
	$6 = CALL db_next_i64(*($5 + [20]), ($3 + [168]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$16 }
	$7 = [11]
	goto $label$4 
	
.LABEL $label$49
	CALL $65(($3 + [8]), $6)
	$7 = [12]
	goto $label$4 
	
.LABEL $label$48
	CALL $72(($3 + [8]), $5)
	$4 = *($3 + [32])
	if ( ($4 == 0) ){ goto $label$15 }
	$7 = [13]
	goto $label$4 
	
.LABEL $label$47
	$0 = ($3 + [36])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$14 }
	$7 = [14]
	goto $label$4 
	
.LABEL $label$46
	$7 = [15]
	goto $label$4 
	
.LABEL $label$45
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$12 }
	$7 = [16]
	goto $label$4 
	
.LABEL $label$44
	CALL $10($6)
	$7 = [17]
	goto $label$4 
	
.LABEL $label$43
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$13 }
	$7 = [18]
	goto $label$4 
	
.LABEL $label$42
	$5 = *(($3 + [32]))
	goto $label$11 
	
.LABEL $label$41
	$5 = $4
	$7 = [19]
	goto $label$4 
	
.LABEL $label$40
	*($0) = $4
	CALL $10($5)
	$7 = [20]
	goto $label$4 
	
.LABEL $label$39
	$4 = *($3 + [72])
	if ( ($4 == 0) ){ goto $label$10 }
	$7 = [21]
	goto $label$4 
	
.LABEL $label$38
	$0 = ($3 + [76])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$9 }
	$7 = [22]
	goto $label$4 
	
.LABEL $label$37
	$7 = [23]
	goto $label$4 
	
.LABEL $label$36
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$7 }
	$7 = [24]
	goto $label$4 
	
.LABEL $label$35
	CALL $10($6)
	$7 = [25]
	goto $label$4 
	
.LABEL $label$34
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$8 }
	$7 = [26]
	goto $label$4 
	
.LABEL $label$33
	$5 = *(($3 + [72]))
	goto $label$6 
	
.LABEL $label$32
	$5 = $4
	$7 = [27]
	goto $label$4 
	
.LABEL $label$31
	*($0) = $4
	CALL $10($5)
	$7 = [28]
	goto $label$4 
	
.LABEL $label$30
	CALL $28(($3 + [148]), *(($3 + [152])))
	CALL $29(($3 + [136]), *(($3 + [140])))
	if ( ((*($3 + [104]) & [1]) == 0) ){ goto $label$5 }
	$7 = [29]
	goto $label$4 
	
.LABEL $label$29
	CALL $10(*(($3 + [112])))
	$7 = [30]
	goto $label$4 
	
.LABEL $label$28
	$global$0 = ($3 + [176])
	return 
	
.LABEL $label$27
	$7 = [2]
	goto $label$4 
	
.LABEL $label$26
	$7 = [1]
	goto $label$4 
	
.LABEL $label$25
	$7 = [3]
	goto $label$4 
	
.LABEL $label$24
	$7 = [3]
	goto $label$4 
	
.LABEL $label$23
	$7 = [1]
	goto $label$4 
	
.LABEL $label$22
	$7 = [7]
	goto $label$4 
	
.LABEL $label$21
	$7 = [6]
	goto $label$4 
	
.LABEL $label$20
	$7 = [7]
	goto $label$4 
	
.LABEL $label$19
	$7 = [33]
	goto $label$4 
	
.LABEL $label$18
	$7 = [10]
	goto $label$4 
	
.LABEL $label$17
	$7 = [10]
	goto $label$4 
	
.LABEL $label$16
	$7 = [12]
	goto $label$4 
	
.LABEL $label$15
	$7 = [20]
	goto $label$4 
	
.LABEL $label$14
	$7 = [32]
	goto $label$4 
	
.LABEL $label$13
	$7 = [15]
	goto $label$4 
	
.LABEL $label$12
	$7 = [17]
	goto $label$4 
	
.LABEL $label$11
	$7 = [19]
	goto $label$4 
	
.LABEL $label$10
	$7 = [28]
	goto $label$4 
	
.LABEL $label$9
	$7 = [31]
	goto $label$4 
	
.LABEL $label$8
	$7 = [23]
	goto $label$4 
	
.LABEL $label$7
	$7 = [25]
	goto $label$4 
	
.LABEL $label$6
	$7 = [27]
	goto $label$4 
	
.LABEL $label$5
	$7 = [30]
	goto $label$4 
	$7
}

int_32 .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11390])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $8([80])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [52]) = [0]
	*($5 + [56]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [24])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [48])
	*($3 + [60]) = ($5 + [52])
	CALL $105(($3 + [40]), ($3 + [32]))
	*($5 + [60]) = $1
	*($5 + [64 align=4]) = (int_64)-1
	*($5 + [72 align=4]) = (int_64)-1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $106(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $76 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [32])) = [0]
	*($3 + [16]) = (int_64)-1
	*($3 + [36]) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($0, $1, (int_64)-7880044396392173568, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $59($3, $4)
	if ( ($2 == 0) ){ goto $label$1 }
	$6 = [1]
	
.LOOP $label$2:
	$4 = [0]
	$7 = CALL db_next_i64(*($5 + [36]), ($3 + [40]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $59($3, $7)
	
.LABEL $label$3
	CALL $77($3, $5)
	if ( ($4 == 0) ){ goto $label$1 }
	$7 = ($6 <= $2)
	$6 = ($6 + [1])
	$5 = $4
	if ( $7 ){ goto $label$2 }
	
.LABEL $label$1
	$6 = *($3 + [24])
	if ( ($6 == 0) ){ goto $label$4 }
	$7 = ($3 + [28])
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	if ( ((*($4 + [12]) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*(($4 + [20])))
	
.LABEL $label$9
	if ( ((*($4) & [1]) == 0) ){ goto $label$10 }
	CALL $10(*($4 + [8]))
	
.LABEL $label$10
	CALL $10($4)
	
.LABEL $label$8
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$7 }
	$4 = *(($3 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$4 = $6
	
.LABEL $label$5
	*($7) = $6
	CALL $10($4)
	
.LABEL $label$4
	$global$0 = ($3 + [48])
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12006])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12051])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1 + [24])
	if ( ((int_64)*(*(($5 + [-24])) + [24]) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10) + [24]) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12101])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [12]) & [1]) == 0) ){ goto $label$13 }
	CALL $10(*(($6 + [20])))
	
.LABEL $label$13
	if ( ((*($6) & [1]) == 0) ){ goto $label$14 }
	CALL $10(*($6 + [8]))
	
.LABEL $label$14
	CALL $10($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$15:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$16 }
	if ( ((*($9 + [12]) & [1]) == 0) ){ goto $label$17 }
	CALL $10(*(($9 + [20])))
	
.LABEL $label$17
	if ( ((*($9) & [1]) == 0) ){ goto $label$18 }
	CALL $10(*($9 + [8]))
	
.LABEL $label$18
	CALL $10($9)
	
.LABEL $label$16
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$15 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*(($1 + [36])))
	$9 = *(($1 + [40]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$20 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-7880044396392173568, ($2 + [8]), *(($1 + [24])))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$19 }
	
.LABEL $label$20
	CALL db_idx64_remove($9)
	
.LABEL $label$19
	$global$0 = ($2 + [16])
}

void .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12006])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12051])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12101])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $10($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $39 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*(($1 + [44])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11477])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [11523])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [11633])
	
.LABEL $label$3
	$6 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [11676])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [11695])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [11574])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-7])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [32])
	*($4 + [44]) = ($1 + [40])
	CALL $36(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [48]), (int_64)0, $3, [41])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11333])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11333])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11333])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11333])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11333])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$1 = *($1)
	*($2 + [8]) = *(*($0 + [12]))
	$0 = *($1 + [4])
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [11333])
	$0 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, ($2 + [8]), [1])
	*(($0 = ($1 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $37 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $24($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $78 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$6
	CALL memcpy(($3 + [72]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$7
	$6 = ($2 + $4)
	CALL memcpy(($3 + [40]), $5, [8])
	*(($5 = (($3 + [72]) + [8]))) = *($3 + [40])
	$7 = ($2 + [24])
	if ( ((int_32)$4 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [11417])
	
.LABEL $label$8
	CALL memcpy(($3 + [40]), $7, [1])
	$4 = *($3 + [40])
	*((($3 + [40]) + [24])) = $6
	$8 = *($5)
	*((($3 + [24]) + [8])) = $8
	*((($3 + [8]) + [8])) = $8
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [25])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	$0 = *($3 + [72])
	*($3 + [24]) = $0
	*($3 + [8]) = $0
	CALL $34(($3 + [40]), *($3 + [88]), ($3 + [8]), ((int_32)$4 != (int_32)[0]))
	$global$0 = ($3 + [96])
}

void .FUNC $79 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [208])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [148]) = $2
	*($3 + [144]) = $2
	$5 = ($2 + $4)
	*($3 + [152]) = $5
	*($3 + [136]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11417])
	$5 = *(($3 + [152]))
	$2 = *($3 + [148])
	
.LABEL $label$5
	CALL memcpy(($3 + [136]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [128]) = (int_64)0
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11417])
	$5 = *((($3 + [144]) + [8]))
	$2 = *($3 + [148])
	
.LABEL $label$6
	CALL memcpy(($3 + [120]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11417])
	$2 = *($3 + [148])
	
.LABEL $label$7
	CALL memcpy(($3 + [72]), $2, [8])
	*(($4 = (($3 + [120]) + [8]))) = *($3 + [72])
	*($3 + [148]) = ($2 + [8])
	*($3 + [112]) = [0]
	*($3 + [104]) = (int_64)0
	CALL $80(($3 + [144]), ($3 + [104]))
	*(($2 = (($3 + [56]) + [8]))) = *((($3 + [144]) + [8]))
	*($3 + [56]) = *($3 + [144])
	$2 = *($2)
	*((($3 + [160]) + [8])) = $2
	*(($5 = (($3 + [176]) + [8]))) = $2
	$6 = *($3 + [56])
	*($3 + [176]) = $6
	*($3 + [160]) = $6
	$2 = *($5)
	*((($3 + [192]) + [8])) = $2
	*(($3 + [96])) = $2
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$0 = *($3 + [176])
	*($3 + [88]) = $0
	*($3 + [192]) = $0
	*(($5 = (($3 + [40]) + [8]))) = *($4)
	*($3 + [40]) = *($3 + [120])
	$0 = *($3 + [136])
	$2 = CALL $19(($3 + [24]), ($3 + [104]))
	*((($3 + [8]) + [8])) = *($5)
	*($3 + [8]) = *($3 + [40])
	CALL $38(($3 + [72]), $0, ($3 + [8]), $2)
	if ( (*($2) & [1]) ){ goto $label$10 }
	if ( (*($3 + [104]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [104]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $10(*(($3 + [112])))
	$global$0 = ($3 + [208])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [208])
}

void .FUNC $32 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [24]) = (int_64)0
	*($3 + [8]) = *(($2 + [8]))
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx128_lowerbound(*($2), *($2 + [8]), (int_64)5301158973880139777, $3, ($3 + [24]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [24])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4 + [8]) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*(($4 + [76])) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11339])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $26($7, CALL $fimport$0(*($7), *($7 + [8]), (int_64)5301158973880139776, $6))
	if ( ((int_32)*($4 + [76]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11339])
	
.LABEL $label$2
	*(($4 + [88])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [32])
}

void .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ($1 == 0) ){ goto $label$1 }
	CALL printui(*($0))
	CALL prints([11424])
	
.LABEL $label$1
	$3 = (uint_64)*($0) >> (uint_64)(int_64)8
	if ( (int_64)($3) == 0) ){ goto $label$2 }
	$1 = [0]
	$4 = (int_64)0
	
.LOOP $label$4:
	*((($2 + [9]) + $1)) = $3
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((uint_32)$1 > (uint_32)[5]) ){ goto $label$3 }
	$1 = ($1 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$4 }
	
.LABEL $label$3
	CALL prints(($2 + [9]))
	CALL printi($4)
	
.LABEL $label$2
	CALL prints([11422])
	CALL printn(*($0 + [8]))
	$global$0 = ($2 + [16])
}

void .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $2
	if ( $2 ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($1 + [8])
	if ( *($3 + [12]) ){ goto $label$3 }
	$4 = ($3 + [12])
	$2 = *($3 + [8])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$2 }
	if ( *($5 + [12]) ){ goto $label$2 }
	$3 = ($5 + [12])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [12]) ){ goto $label$1 }
	$3 = ($5 + [12])
	
.LABEL $label$5
	*($4) = [1]
	*($2 + [12]) = ((int_32)$2 == (int_32)$0)
	*($3) = [1]
	$1 = $2
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	if ( ((int_32)*($3) != (int_32)$1) ){ goto $label$7 }
	$5 = *($1 + [4])
	*($3) = $5
	if ( ($5 == 0) ){ goto $label$8 }
	*($5 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$8
	*(($5 = ($1 + [8]))) = $2
	*((($0 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$3) ))) = $1
	*($2) = $1
	*(($1 + [4])) = $3
	$4 = ($1 + [12])
	$2 = *($5)
	
.LABEL $label$7
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2 + [4])
	$5 = *($3)
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$9 }
	*($5 + [8]) = $2
	
.LABEL $label$9
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*($3) = $2
	return 
	
.LABEL $label$1
	if ( ((int_32)*($3) == (int_32)$1) ){ goto $label$10 }
	$5 = *($3 + [4])
	$1 = *($5)
	*($3 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$11
	*($5 + [8]) = $2
	*((($1 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($1) == (int_32)$3) ))) = $5
	*($2) = $5
	*($5) = $3
	$4 = ($5 + [12])
	$2 = *($5 + [8])
	
.LABEL $label$10
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2)
	$5 = *($3 + [4])
	*($2) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*(($3 + [4])) = $2
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = [0]
	*((($2 + [32]) + [32])) = [0]
	*($2 + [40]) = (int_64)5300903188324233184
	*($2 + [32]) = (int_64)5300903188324233184
	*($2 + [48]) = (int_64)-1
	*($2 + [56]) = (int_64)0
	*($2 + [68]) = [0]
	*($2 + [24]) = ($2 + [32])
	*($2 + [8]) = *(($1 + [8]))
	*($2) = (uint_64)*($1) >> (uint_64)(int_64)8)
	CALL $32(($2 + [72]), ($2 + [24]), $2)
	$4 = *($2 + [76])
	if ( ($4 == 0) ){ goto $label$1 }
	$3 = ( $4 ? [0] : (int_64)(((int_64)((int_64)*($2) ^ (int_64)(uint_64)*(($4 + [32])) >> (uint_64)(int_64)8)) | (int_64)((int_64)*($2 + [8]) ^ (int_64)*(($4 + [40])))) == 0) )
	
.LABEL $label$1
	CALL prints([8292])
	CALL $33($1, [1])
	CALL prints([8310])
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((int_64)*($3 + [32]) != (int_64)*($1)) ){ goto $label$3 }
	if ( ((int_64)*(($3 + [40])) == (int_64)*(($1 + [8]))) ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [8312])
	
.LABEL $label$2
	CALL $27($0, $3)
	$4 = *($2 + [56])
	if ( ($4 == 0) ){ goto $label$4 }
	$0 = ($2 + [60])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = ($3 + [-24])
	$1 = *($3)
	*($3) = [0]
	if ( ($1 == 0) ){ goto $label$8 }
	CALL $28(($1 + [60]), *(($1 + [64])))
	CALL $29(($1 + [48]), *(($1 + [52])))
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*(($1 + [24])))
	
.LABEL $label$9
	CALL $10($1)
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$7 }
	$1 = *(($2 + [56]))
	goto $label$5 
	
.LABEL $label$6
	$1 = $4
	
.LABEL $label$5
	*($0) = $4
	CALL $10($1)
	
.LABEL $label$4
	$global$0 = ($2 + [80])
}