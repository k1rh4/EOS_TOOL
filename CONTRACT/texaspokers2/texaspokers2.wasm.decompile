(data (i32.const 4) " h\00\00")
(data (i32.const 16) "onerror\00")
(data (i32.const 32) "eosio\00")
(data (i32.const 48) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 112) "transfer\00")
(data (i32.const 128) "texastokens1\00")
(data (i32.const 144) "read\00")
(data (i32.const 160) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 224) "active\00")
(data (i32.const 240) "invalid symbol name\00")
(data (i32.const 272) "withdraw\00")
(data (i32.const 288) "cannot pass end iterator to erase\00")
(data (i32.const 336) "cannot increment end iterator\00")
(data (i32.const 368) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 432) "object passed to erase is not in multi_index\00")
(data (i32.const 480) "cannot erase objects in table of another contract\00")
(data (i32.const 544) "attempt to remove object that was not in multi_index\00")
(data (i32.const 608) "write\00")
(data (i32.const 624) "error reading iterator\00")
(data (i32.const 656) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 720) "\e7\ad\b9\e7\a0\81\e4\b8\8d\e5\a4\9f\00")
(data (i32.const 736) "cannot pass end iterator to modify\00")
(data (i32.const 784) "object passed to modify is not in multi_index\00")
(data (i32.const 832) "cannot modify objects in table of another contract\00")
(data (i32.const 896) "attempt to add asset with different symbol\00")
(data (i32.const 944) "addition underflow\00")
(data (i32.const 976) "addition overflow\00")
(data (i32.const 1008) "attempt to subtract asset with different symbol\00")
(data (i32.const 1056) "subtraction underflow\00")
(data (i32.const 1088) "subtraction overflow\00")
(data (i32.const 1120) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1184) "get\00")
(data (i32.const 1200) "bet money on err\00")
(data (i32.const 1232) "---clearstart---\00")
(data (i32.const 1264) "chip on err\00")
(data (i32.const 1280) "Not enough chips\00")
(data (i32.const 1312) "cannot create objects in table of another contract\00")
(data (i32.const 1376) "only accept CHIP\00")
(data (i32.const 1424) "texasdeal\00")
(data (i32.const 1440) "no enough chip\00")
(data (i32.const 1456) "----chips---name:--\00")
(data (i32.const 1488) "---money----\00")
(data (i32.const 1504) "player is not on table\00")
(data (i32.const 1536) "no winer\00")
(data (i32.const 1552) "------\00")
(data (i32.const 1568) "divide by zero\00")
(data (i32.const 1584) "signed division overflow\00")
(data (i32.const 1616) "Invalid type\00")
(data (i32.const 1632) ".\00")
(data (i32.const 1648) " \00")
(data (i32.const 1664) ",\00")
(data (i32.const 1680) "autochip:\00")
(data (i32.const 1696) "-----2:\00")
(data (i32.const 1712) "----3:\00")
(data (i32.const 1728) "only accept EPC\00")
(data (i32.const 1744) "must more than 0.1 EOS\00")
(data (i32.const 10176) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "current_time" (func $fimport$3 (result i64)))
(import "env" "db_find_i64" (func $fimport$4 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "db_next_i64" (func $fimport$6 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$7 (param i32)))
(import "env" "db_store_i64" (func $fimport$8 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$9 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$10 (param i32 i32)))
(import "env" "memcpy" (func $fimport$11 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$12 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$13 (param i32 i32 i32) (result i32)))
(import "env" "printi" (func $fimport$14 (param i64)))
(import "env" "printn" (func $fimport$15 (param i64)))
(import "env" "prints" (func $fimport$16 (param i32)))
(import "env" "prints_l" (func $fimport$17 (param i32 i32)))
(import "env" "printui" (func $fimport$18 (param i64)))
(import "env" "read_action_data" (func $fimport$19 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$20 (param i64)))
(import "env" "require_auth2" (func $fimport$21 (param i64 i64)))
(import "env" "send_inline" (func $fimport$22 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "apply" (func $5))
(export "_ZN5eosio14egc_texas_game8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $6))
(export "_ZN5eosio14egc_texas_game8texasbetENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEyNS_5assetE" (func $8))
(export "_ZN5eosio14egc_texas_game9texasoverENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_6vectorIyNS5_IyEEEENS8_INS0_12player_pokerENS5_ISB_EEEE" (func $10))
(export "_ZN5eosio14egc_texas_game11texasrewardENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEyNS_5assetE" (func $12))
(export "_ZN5eosio14egc_texas_game9texasdealENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_" (func $13))
(export "_ZN5eosio14egc_texas_game9texasexitENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy" (func $15))
(export "_ZN5eosio14egc_texas_game9texasjoinEyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_5assetE" (func $17))
(export "_ZN5eosio14egc_texas_game10texasallinENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy" (func $19))
(export "_ZN5eosio14egc_texas_game10texasclearENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $20))
(export "_ZN5eosio14egc_texas_game10texasblindENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEyNS_5assetE" (func $22))
(export "_ZN5eosio14egc_texas_game11texasredeemEy" (func $23))
(export "_ZN5eosio4cmp1ERKNS_11player_chipES2_" (func $72))
(export "_ZN5eosio14egc_texas_game7chippotERNSt3__16vectorINS_11player_chipENS1_9allocatorIS3_EEEEy" (func $74))
(export "_ZN5eosio14egc_texas_game13compare_cardsERNSt3__16vectorINS0_12player_pokerENS1_9allocatorIS3_EEEE" (func $77))
(export "_ZN5eosio14egc_texas_game7compareERKNS0_12player_pokerES3_" (func $85))
(export "_ZN5eosio14egc_texas_game9sortcardsENSt3__16vectorIyNS1_9allocatorIyEEEE" (func $88))
(export "_ZN5eosio14egc_texas_gameC2Ey" (func $107))
(export "malloc" (func $108))
(export "free" (func $111))
(export "memcmp" (func $118))
(export "strlen" (func $119))
(table $0 14 14 anyfunc)
(elem (i32.const 0) $120 $10 $13 $6 $8 $15 $17 $22 $20 $23 $12 $19 $72 $85)



void .FUNC $98 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [5])
	if ( ((uint_32)$4 <= (uint_32)int_32(($8 - $5) >> [5])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $113($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[134217728]) ){ goto $label$1 }
	$5 = [134217727]
	if ( ((uint_32)int_32($8 >> [5]) > (uint_32)[67108862]) ){ goto $label$6 }
	$5 = $4
	$2 = int_32($8 >> [4])
	if ( ($2 <= $4) ){ goto $label$6 }
	$5 = $2
	if ( ((uint_32)$2 >= (uint_32)[134217728]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($5 << [5])
	$5 = CALL $112($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	return 
	
.LABEL $label$4
	$3 = int_32($3 >> [5])
	$3 = (*($0 + [4]) - $5)
	$8 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$6 = ($8 - $1)
	$7 = int_32($6 >> [5])
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $8)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $8, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ($7 << [5]))
	return (unreachable)
	
.LABEL $label$1
	CALL $116($0)
}

int_32 .FUNC $99 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [32])
	*([0] + [4]) = $15
	$14 = CALL int_32 $1((int_32 $0), (int_32 *($4)))
	$5 = CALL int_32 $2((int_32 $1), (int_32 *($4)))
	if ( ($14 == 0) ){ goto $label$4 }
	$6 = ($0 + [24])
	*(($14 = ($15 + [24]))) = *($6)
	$7 = ($0 + [16])
	*(($8 = ($15 + [16]))) = *($7)
	$9 = ($0 + [8])
	*(($10 = ($15 + [8]))) = *($9)
	*($15) = *($0)
	if ( ($5 == 0) ){ goto $label$3 }
	*($0) = *($2)
	$5 = ($2 + [24])
	*($6) = *($5)
	$6 = ($2 + [16])
	*($7) = *($6)
	$7 = ($2 + [8])
	*($9) = *($7)
	*($5) = *($14)
	*($2) = *($15)
	*($6) = *($8)
	*($7) = *($10)
	$14 = [1]
	goto $label$1 
	
.LABEL $label$4
	$14 = [0]
	if ( ($5 == 0) ){ goto $label$1 }
	$6 = ($1 + [24])
	*(($5 = ($15 + [24]))) = *($6)
	$7 = ($1 + [16])
	*(($8 = ($15 + [16]))) = *($7)
	$9 = ($1 + [8])
	*(($10 = ($15 + [8]))) = *($9)
	*($15) = *($1)
	$14 = ($2 + [24])
	*($6) = *($14)
	$11 = ($2 + [16])
	*($7) = *($11)
	$12 = ($2 + [8])
	*($9) = *($12)
	*($1) = *($2)
	*($14) = *($5)
	*($11) = *($8)
	*($12) = *($10)
	*($2) = *($15)
	$14 = [1]
	if ( (CALL int_32 $1((int_32 $0), (int_32 *($4))) == 0) ){ goto $label$1 }
	$14 = ($0 + [24])
	*($5) = *($14)
	$11 = ($0 + [16])
	*($8) = *($11)
	$12 = ($0 + [8])
	*($10) = *($12)
	*($15) = *($0)
	*($14) = *($6)
	*($11) = *($7)
	*($12) = *($9)
	*($0) = *($1)
	*($6) = *($5)
	*($7) = *($8)
	*($9) = *($10)
	*($1) = *($15)
	goto $label$2 
	
.LABEL $label$3
	*($0) = *($1)
	$5 = ($1 + [24])
	*($6) = *($5)
	$6 = ($1 + [16])
	*($7) = *($6)
	$7 = ($1 + [8])
	*($9) = *($7)
	*($5) = *($14)
	*($1) = *($15)
	*($6) = *($8)
	*($7) = *($10)
	$14 = [1]
	if ( (CALL int_32 $2((int_32 $1), (int_32 *($4))) == 0) ){ goto $label$1 }
	$5 = ($1 + [24])
	*(($14 = ($15 + [24]))) = *($5)
	$8 = ($1 + [16])
	*(($6 = ($15 + [16]))) = *($8)
	$10 = ($1 + [8])
	*(($7 = ($15 + [8]))) = *($10)
	*($15) = *($1)
	$9 = ($2 + [24])
	*($5) = *($9)
	$5 = ($2 + [16])
	*($8) = *($5)
	$8 = ($2 + [8])
	*($10) = *($8)
	*($1) = *($2)
	*($9) = *($14)
	*($5) = *($6)
	*($8) = *($7)
	*($2) = *($15)
	
.LABEL $label$2
	$14 = [2]
	
.LABEL $label$1
	if ( (CALL int_32 $3((int_32 $2), (int_32 *($4))) == 0) ){ goto $label$5 }
	$6 = ($2 + [24])
	*(($5 = ($15 + [24]))) = *($6)
	$7 = ($2 + [16])
	*(($8 = ($15 + [16]))) = *($7)
	$9 = ($2 + [8])
	*(($10 = ($15 + [8]))) = *($9)
	*($15) = *($2)
	$11 = ($3 + [24])
	*($6) = *($11)
	$12 = ($3 + [16])
	*($7) = *($12)
	$13 = ($3 + [8])
	*($9) = *($13)
	*($2) = *($3)
	*($11) = *($5)
	*($12) = *($8)
	*($13) = *($10)
	*($3) = *($15)
	if ( (CALL int_32 $2((int_32 $1), (int_32 *($4))) == 0) ){ goto $label$7 }
	$3 = ($1 + [24])
	*($5) = *($3)
	$11 = ($1 + [16])
	*($8) = *($11)
	$12 = ($1 + [8])
	*($10) = *($12)
	*($15) = *($1)
	*($3) = *($6)
	*($11) = *($7)
	*($12) = *($9)
	*($1) = *($2)
	*($6) = *($5)
	*($7) = *($8)
	*($9) = *($10)
	*($2) = *($15)
	if ( (CALL int_32 $1((int_32 $0), (int_32 *($4))) == 0) ){ goto $label$6 }
	$4 = ($0 + [24])
	*(($2 = ($15 + [24]))) = *($4)
	$5 = ($0 + [16])
	*(($3 = ($15 + [16]))) = *($5)
	$8 = ($0 + [8])
	*(($6 = ($15 + [8]))) = *($8)
	*($15) = *($0)
	$7 = ($1 + [24])
	*($4) = *($7)
	$4 = ($1 + [16])
	*($5) = *($4)
	$5 = ($1 + [8])
	*($8) = *($5)
	*($0) = *($1)
	*($7) = *($2)
	*($4) = *($3)
	*($5) = *($6)
	*($1) = *($15)
	$14 = ($14 + [3])
	goto $label$5 
	
.LABEL $label$7
	$14 = ($14 + [1])
	goto $label$5 
	
.LABEL $label$6
	$14 = ($14 + [2])
	
.LABEL $label$5
	*([0] + [4]) = ($15 + [32])
	return $14
}

void .FUNC $94 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	$24 = (*([0] + [4]) - [48])
	*([0] + [4]) = $24
	$22 = ($0 + [80])
	CALL $91($0, ($0 + [40]), $22, $2)
	$4 = ($0 + [120])
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$1 }
	$7 = ($24 + [16])
	$10 = ($24 + [28])
	$12 = ($24 + [40])
	$19 = [0]
	
.LOOP $label$2:
	$3 = $4
	if ( (CALL int_32 $3((int_32 $22), (int_32 *($2))) == 0) ){ goto $label$3 }
	*(($6 = (($24 + [8]) + [16]))) = [0]
	*($7) = *($3 + [8])
	*($24 + [8]) = *($3)
	$4 = ($3 + [12])
	*(($8 = (($24 + [8]) + [12]))) = *($4)
	$20 = ($3 + [16])
	*($6) = *($20)
	*($20) = [0]
	*($4) = [0]
	*($3 + [8]) = [0]
	*(($9 = (($24 + [8]) + [28]))) = [0]
	*($10) = *($3 + [20])
	$4 = ($3 + [24])
	*(($11 = (($24 + [8]) + [24]))) = *($4)
	$20 = ($3 + [28])
	*($9) = *($20)
	*($4) = [0]
	*($20) = [0]
	*($3 + [20]) = [0]
	*($12) = *($3 + [32])
	$20 = $19
	$21 = $3
	
.LOOP $label$4:
	$13 = ($4 + [80])
	*((($4 = ($0 + $20)) + [120])) = *($13)
	$14 = ($4 + [128])
	$5 = *($14)
	if ( ($5 == 0) ){ goto $label$6 }
	*(($16 = ($4 + [132]))) = $5
	CALL $113($5)
	*($14) = [0]
	*($16) = (int_64)0
	$5 = ($21 + [16])
	$16 = ($21 + [12])
	goto $label$5 
	
.LABEL $label$6
	$5 = ($4 + [136])
	$16 = ($4 + [132])
	
.LABEL $label$5
	$15 = ($4 + [92])
	*($16) = *($15)
	$16 = ($4 + [88])
	*($14) = *($16)
	$17 = ($4 + [96])
	*($5) = *($17)
	*($17) = [0]
	*($16) = (int_64)0
	$14 = ($4 + [140])
	$5 = *($14)
	if ( ($5 == 0) ){ goto $label$8 }
	*(($23 = ($4 + [144]))) = $5
	CALL $113($5)
	*($14) = [0]
	*($23) = (int_64)0
	$23 = ($21 + [28])
	$21 = ($21 + [24])
	goto $label$7 
	
.LABEL $label$8
	$23 = ($4 + [148])
	$21 = ($4 + [144])
	
.LABEL $label$7
	$18 = ($4 + [104])
	*($21) = *($18)
	$5 = ($4 + [100])
	*($14) = *($5)
	$14 = ($4 + [108])
	*($23) = *($14)
	*($14) = [0]
	*($5) = (int_64)0
	$23 = ($4 + [112])
	*(($4 + [152])) = *($23)
	if ( ((int_32)$20 == (int_32)[-80]) ){ goto $label$9 }
	$20 = ($20 + [-40])
	$21 = $22
	$22 = ($22 + [-40])
	if ( CALL int_32 ($24 + [8])((int_32 ($4 + [40])), (int_32 *($2))) ){ goto $label$4 }
	
.LABEL $label$9
	*($13) = *($24 + [8])
	$4 = *($16)
	if ( ($4 == 0) ){ goto $label$10 }
	*($15) = $4
	CALL $113($4)
	*($17) = [0]
	*($16) = (int_64)0
	
.LABEL $label$10
	*($16) = *($7)
	*($8) = [0]
	$4 = *($6)
	*($6) = [0]
	*($17) = $4
	*($7) = [0]
	$4 = *($5)
	if ( ($4 == 0) ){ goto $label$11 }
	*($18) = $4
	CALL $113($4)
	*($14) = [0]
	*($5) = (int_64)0
	
.LABEL $label$11
	*($5) = *($10)
	*($11) = [0]
	$4 = *($9)
	*($9) = [0]
	*($14) = $4
	*($10) = [0]
	*($23) = *($12)
	$4 = *($7)
	if ( ($4 == 0) ){ goto $label$3 }
	*($8) = $4
	CALL $113($4)
	
.LABEL $label$3
	$19 = ($19 + [40])
	$22 = $3
	$4 = ($3 + [40])
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($24 + [48])
}

int_32 .FUNC $95 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	$27 = (*([0] + [4]) - [48])
	*([0] + [4]) = $27
	$24 = ((int_32)($1 - $0) / (int_32)[40])
	if ( ((uint_32)$24 > (uint_32)[5]) ){ goto $label$9 }
	$6 = [1]
	goto $label$1 
	
.LABEL $label$10
	$25 = ($1 + [-40])
	if ( (CALL int_32 $25((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$1 }
	$2 = *($0 + [8])
	*($0 + [8]) = [0]
	$24 = ($0 + [16])
	$15 = *($24)
	*($24) = [0]
	$16 = ($0 + [12])
	$5 = *($16)
	*($16) = [0]
	$3 = *($0)
	$7 = ($0 + [28])
	$17 = *($7)
	$18 = ($0 + [24])
	$20 = *($18)
	$21 = *($0 + [20])
	*($7) = [0]
	*($18) = [0]
	*($0 + [20]) = [0]
	$4 = *($0 + [32])
	*($0) = *($25)
	$26 = ($1 + [-28])
	$19 = *($26)
	$23 = ($1 + [-32])
	*($0 + [8]) = *($23)
	*($16) = $19
	$19 = ($1 + [-24])
	*($24) = *($19)
	*($19) = [0]
	*($23) = (int_64)0
	$24 = ($1 + [-20])
	$16 = *($0 + [20])
	if ( ($16 == 0) ){ goto $label$11 }
	*($18) = $16
	CALL $113($16)
	*($7) = [0]
	*(($0 + [20])) = (int_64)0
	
.LABEL $label$11
	*(($0 + [20])) = *($24)
	$16 = ($1 + [-16])
	*($18) = *($16)
	$18 = ($1 + [-12])
	*($7) = *($18)
	*($24) = [0]
	*($16) = (int_64)0
	$7 = ($1 + [-8])
	*(($0 + [32])) = *($7)
	*($25) = $3
	$25 = *($23)
	if ( ($25 == 0) ){ goto $label$5 }
	*($26) = $25
	CALL $113($25)
	*($23) = $2
	*($26) = $5
	*($19) = $15
	$25 = *($24)
	if ( ($25 == 0) ){ goto $label$4 }
	*($16) = $25
	CALL $113($25)
	*($16) = [0]
	*($18) = [0]
	*($24) = [0]
	goto $label$4 
	
.LABEL $label$9
	$23 = ($0 + [80])
	CALL $91($0, ($0 + [40]), $23, $2)
	$6 = ($0 + [120])
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$12 }
	$9 = (($27 + [8]) + [8])
	$12 = ($27 + [28])
	$14 = ($27 + [40])
	$21 = [0]
	$22 = [0]
	
.LOOP $label$13:
	$5 = $6
	if ( (CALL int_32 $5((int_32 $23), (int_32 *($2))) == 0) ){ goto $label$14 }
	*(($8 = (($27 + [8]) + [16]))) = [0]
	*($9) = *($5 + [8])
	*($27 + [8]) = *($5)
	$6 = ($5 + [12])
	*(($10 = (($27 + [8]) + [12]))) = *($6)
	$24 = ($5 + [16])
	*($8) = *($24)
	*($24) = [0]
	*($6) = [0]
	*($5 + [8]) = [0]
	*(($11 = (($27 + [8]) + [28]))) = [0]
	*($12) = *($5 + [20])
	$6 = ($5 + [24])
	*(($13 = (($27 + [8]) + [24]))) = *($6)
	$24 = ($5 + [28])
	*($11) = *($24)
	*($6) = [0]
	*($24) = [0]
	*($5 + [20]) = [0]
	*($14) = *($5 + [32])
	$24 = $21
	$25 = $5
	
.LOOP $label$15:
	$15 = ($6 + [80])
	*((($6 = ($0 + $24)) + [120])) = *($15)
	$16 = ($6 + [128])
	$7 = *($16)
	if ( ($7 == 0) ){ goto $label$17 }
	*(($18 = ($6 + [132]))) = $7
	CALL $113($7)
	*($16) = [0]
	*($18) = (int_64)0
	$7 = ($25 + [16])
	$18 = ($25 + [12])
	goto $label$16 
	
.LABEL $label$17
	$7 = ($6 + [136])
	$18 = ($6 + [132])
	
.LABEL $label$16
	$17 = ($6 + [92])
	*($18) = *($17)
	$18 = ($6 + [88])
	*($16) = *($18)
	$19 = ($6 + [96])
	*($7) = *($19)
	*($19) = [0]
	*($18) = (int_64)0
	$16 = ($6 + [140])
	$7 = *($16)
	if ( ($7 == 0) ){ goto $label$19 }
	*(($26 = ($6 + [144]))) = $7
	CALL $113($7)
	*($16) = [0]
	*($26) = (int_64)0
	$26 = ($25 + [28])
	$25 = ($25 + [24])
	goto $label$18 
	
.LABEL $label$19
	$26 = ($6 + [148])
	$25 = ($6 + [144])
	
.LABEL $label$18
	$20 = ($6 + [104])
	*($25) = *($20)
	$7 = ($6 + [100])
	*($16) = *($7)
	$16 = ($6 + [108])
	*($26) = *($16)
	*($16) = [0]
	*($7) = (int_64)0
	$26 = ($6 + [112])
	*(($6 + [152])) = *($26)
	if ( ((int_32)$24 == (int_32)[-80]) ){ goto $label$20 }
	$24 = ($24 + [-40])
	$25 = $23
	$23 = ($23 + [-40])
	if ( CALL int_32 ($27 + [8])((int_32 ($6 + [40])), (int_32 *($2))) ){ goto $label$15 }
	
.LABEL $label$20
	*($15) = *($27 + [8])
	$6 = *($18)
	if ( ($6 == 0) ){ goto $label$21 }
	*($17) = $6
	CALL $113($6)
	*($19) = [0]
	*($18) = (int_64)0
	
.LABEL $label$21
	*($18) = *($9)
	*($10) = [0]
	$6 = *($8)
	*($8) = [0]
	*($19) = $6
	*($9) = [0]
	$6 = *($7)
	if ( ($6 == 0) ){ goto $label$22 }
	*($20) = $6
	CALL $113($6)
	*($16) = [0]
	*($7) = (int_64)0
	
.LABEL $label$22
	*($7) = *($12)
	*($13) = [0]
	$6 = *($11)
	*($11) = [0]
	*($16) = $6
	*($12) = [0]
	*($26) = *($14)
	$22 = ($22 + [1])
	$6 = *($9)
	if ( ($6 == 0) ){ goto $label$23 }
	*($10) = $6
	CALL $113($6)
	
.LABEL $label$23
	if ( ((int_32)$22 == (int_32)[8]) ){ goto $label$3 }
	
.LABEL $label$14
	$21 = ($21 + [40])
	$23 = $5
	$6 = ($5 + [40])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$13 }
	
.LABEL $label$12
	$6 = [1]
	goto $label$2 
	
.LABEL $label$8
	CALL $91($0, ($0 + [40]), ($1 + [-40]), $2)
	goto $label$1 
	
.LABEL $label$7
	CALL $92($0, ($0 + [40]), ($0 + [80]), ($1 + [-40]), $2)
	goto $label$1 
	
.LABEL $label$6
	CALL $93($0, ($0 + [40]), ($0 + [80]), ($0 + [120]), ($1 + [-40]), $2)
	goto $label$1 
	
.LABEL $label$5
	*($26) = $5
	*($23) = $2
	*($19) = $15
	
.LABEL $label$4
	*($16) = $20
	*($24) = $21
	*($18) = $17
	*($7) = $4
	goto $label$1 
	
.LABEL $label$3
	$24 = ((int_32)($5 + [40]) == (int_32)$1)
	$6 = [0]
	
.LABEL $label$2
	$6 = ($24 | $6)
	
.LABEL $label$1
	*([0] + [4]) = ($27 + [48])
	$24
	return ($6 & [1])
}

void .FUNC $96 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	if ( ($1 == 0) ){ goto $label$1 }
	CALL printui(*($0))
	CALL prints([1664])
	
.LABEL $label$1
	$2 = *($0)
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)8)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)16)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)24)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)40)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)56)
	*($3 + [15]) = $0)
	if ( ($0 == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	
.LABEL $label$2
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $3
	if ( $3 ){ goto $label$3 }
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( *($2 + [12]) ){ goto $label$3 }
	$3 = *($2 + [8])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	if ( ($4 == 0) ){ goto $label$8 }
	if ( *($4 + [12]) ){ goto $label$8 }
	$4 = ($4 + [12])
	goto $label$9 
	
.LABEL $label$10
	$4 = *($3 + [4])
	if ( ($4 == 0) ){ goto $label$6 }
	if ( *($4 + [12]) ){ goto $label$6 }
	$4 = ($4 + [12])
	
.LABEL $label$9
	*(($2 + [12])) = [1]
	$2 = ((int_32)$3 == (int_32)$0)
	*($3 + [12]) = $2
	*($4) = [1]
	$1 = $3
	if ( ($2 == 0) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$8
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$5 }
	$4 = $2
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$2 }
	$4 = *($2 + [4])
	$1 = *($4)
	*($2 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$11
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*($4) = $2
	$3 = *($4 + [8])
	goto $label$1 
	
.LABEL $label$5
	$4 = *($2)
	$1 = *($4 + [4])
	*($2) = $1
	if ( ($1 == 0) ){ goto $label$12 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$12
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*(($4 + [4])) = $2
	$3 = *($4 + [8])
	
.LABEL $label$4
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3 + [4])
	$4 = *($2)
	*($3 + [4]) = $4
	if ( ($4 == 0) ){ goto $label$13 }
	*($4 + [8]) = $3
	
.LABEL $label$13
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*($2) = $3
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	$4 = $2
	
.LABEL $label$1
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3)
	$4 = *($2 + [4])
	*($3) = $4
	if ( ($4 == 0) ){ goto $label$14 }
	*($4 + [8]) = $3
	
.LABEL $label$14
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*(($2 + [4])) = $3
}

void .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$2 = int_32(($6 - $5) >> [4])
	$3 = ($2 + [1])
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$3 }
	$4 = [268435455]
	$7 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($7 >> [4]) > (uint_32)[134217726]) ){ goto $label$5 }
	$4 = int_32($7 >> [3])
	$4 = ( $3 ? $4 : ($4 <= $3) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $112(($4 << [4]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $116($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($2 << [4])))) = *($1)
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($6 - $5)
	$6 = ($3 - $1)
	$4 = ($7 + ($4 << [4]))
	$3 = ($3 + [16])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($6, $5, $1)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $113($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $91 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$13 = CALL int_32 $1((int_32 $0), (int_32 *($3)))
	$4 = CALL int_32 $2((int_32 $1), (int_32 *($3)))
	if ( ($13 == 0) ){ goto $label$14 }
	$6 = *($0 + [8])
	*($0 + [8]) = [0]
	$13 = ($0 + [16])
	$8 = *($13)
	*($13) = [0]
	$14 = ($0 + [12])
	$7 = *($14)
	*($14) = [0]
	$5 = *($0)
	$15 = ($0 + [28])
	$11 = *($15)
	$16 = ($0 + [24])
	$10 = *($16)
	$9 = *($0 + [20])
	*($15) = [0]
	*($16) = [0]
	*($0 + [20]) = [0]
	$12 = *($0 + [32])
	if ( ($4 == 0) ){ goto $label$13 }
	*($0) = *($2)
	*(($0 + [8])) = *($2 + [8])
	*($14) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($13) = *($1)
	*($1) = [0]
	*($2 + [8 align=4]) = (int_64)0
	$1 = ($0 + [20])
	$3 = *($1)
	if ( ($3 == 0) ){ goto $label$15 }
	*(($0 + [24])) = $3
	CALL $113($3)
	*(($0 + [28])) = [0]
	*($1) = (int_64)0
	
.LABEL $label$15
	$3 = ($2 + [20])
	*($1) = *($3)
	*(($0 + [24])) = *(($2 + [24]))
	$1 = ($2 + [28])
	*(($0 + [28])) = *($1)
	*($1) = [0]
	*($3) = (int_64)0
	*(($0 + [32])) = *($2 + [32])
	*($2) = $5
	$1 = *(($2 + [8]))
	if ( ($1 == 0) ){ goto $label$12 }
	*(($0 = ($2 + [12]))) = $1
	CALL $113($1)
	*(($2 + [8])) = $6
	*($0) = $7
	*(($2 + [16])) = $8
	$0 = ($2 + [20])
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [24])) = $1
	CALL $113($1)
	*(($2 + [28])) = [0]
	*($0) = (int_64)0
	goto $label$11 
	
.LABEL $label$14
	$13 = [0]
	if ( ($4 == 0) ){ goto $label$1 }
	$6 = *($1 + [8])
	*($1 + [8]) = [0]
	$14 = ($1 + [16])
	$8 = *($14)
	*($14) = [0]
	$15 = ($1 + [12])
	$7 = *($15)
	*($15) = [0]
	$5 = *($1)
	$13 = ($1 + [28])
	$16 = *($13)
	$4 = ($1 + [24])
	$11 = *($4)
	$10 = *($1 + [20])
	*($13) = [0]
	*($4) = [0]
	*($1 + [20]) = [0]
	$12 = *($1 + [32])
	*($1) = *($2)
	$9 = *(($2 + [12]))
	*($1 + [8]) = *($2 + [8])
	*($15) = $9
	$15 = ($2 + [16])
	*($14) = *($15)
	*($15) = [0]
	*($2 + [8 align=4]) = (int_64)0
	$14 = *($1 + [20])
	if ( ($14 == 0) ){ goto $label$16 }
	*($4) = $14
	CALL $113($14)
	*($13) = [0]
	*(($1 + [20])) = (int_64)0
	
.LABEL $label$16
	$14 = ($2 + [20])
	*(($1 + [20])) = *($14)
	*($4) = *(($2 + [24]))
	$4 = ($2 + [28])
	*($13) = *($4)
	*($4) = [0]
	*($14) = (int_64)0
	*(($1 + [32])) = *($2 + [32])
	*($2) = $5
	$4 = ($2 + [8])
	$13 = *($4)
	if ( ($13 == 0) ){ goto $label$10 }
	*(($15 = ($2 + [12]))) = $13
	CALL $113($13)
	*($4) = $6
	*($15) = $7
	*(($2 + [16])) = $8
	$13 = *($14)
	if ( ($13 == 0) ){ goto $label$9 }
	*(($2 + [24])) = $13
	CALL $113($13)
	*(($2 + [28])) = [0]
	*(($2 + [20])) = (int_64)0
	goto $label$9 
	
.LABEL $label$13
	*($0) = *($1)
	*(($0 + [8])) = *($1 + [8])
	*($14) = *(($1 + [12]))
	$4 = ($1 + [16])
	*($13) = *($4)
	*($4) = [0]
	*($1 + [8 align=4]) = (int_64)0
	$13 = ($0 + [20])
	$4 = *($13)
	if ( ($4 == 0) ){ goto $label$17 }
	*(($0 + [24])) = $4
	CALL $113($4)
	*(($0 + [28])) = [0]
	*($13) = (int_64)0
	
.LABEL $label$17
	$4 = ($1 + [20])
	*($13) = *($4)
	*(($0 + [24])) = *(($1 + [24]))
	$13 = ($1 + [28])
	*(($0 + [28])) = *($13)
	*($13) = [0]
	*($4) = (int_64)0
	*(($0 + [32])) = *($1 + [32])
	*($1) = $5
	$0 = *(($1 + [8]))
	if ( ($0 == 0) ){ goto $label$8 }
	*(($13 = ($1 + [12]))) = $0
	CALL $113($0)
	*(($1 + [8])) = $6
	*($13) = $7
	*(($1 + [16])) = $8
	$13 = ($1 + [20])
	$0 = *($13)
	if ( ($0 == 0) ){ goto $label$7 }
	*(($1 + [24])) = $0
	CALL $113($0)
	*(($1 + [28])) = [0]
	*($13) = (int_64)0
	goto $label$7 
	
.LABEL $label$12
	*(($2 + [12])) = $7
	*(($2 + [8])) = $6
	*(($2 + [16])) = $8
	
.LABEL $label$11
	*(($2 + [24])) = $10
	*(($2 + [20])) = $9
	*(($2 + [28])) = $11
	*(($2 + [32])) = $12
	return [1]
	
.LABEL $label$10
	*(($2 + [12])) = $7
	*($4) = $6
	*(($2 + [16])) = $8
	
.LABEL $label$9
	*(($2 + [24])) = $11
	*(($2 + [20])) = $10
	*(($2 + [28])) = $16
	*(($2 + [32])) = $12
	$13 = [1]
	if ( (CALL int_32 $1((int_32 $0), (int_32 *($3))) == 0) ){ goto $label$1 }
	$11 = *($0 + [8])
	*($0 + [8]) = [0]
	$2 = ($0 + [16])
	$10 = *($2)
	*($2) = [0]
	$3 = ($0 + [12])
	$9 = *($3)
	*($3) = [0]
	$5 = *($0)
	$13 = ($0 + [28])
	$4 = *($13)
	$14 = ($0 + [24])
	$15 = *($14)
	$16 = *($0 + [20])
	*($13) = [0]
	*($14) = [0]
	*($0 + [20]) = [0]
	$12 = *($0 + [32])
	*($0) = *($1)
	$14 = *(($1 + [12]))
	$13 = ($1 + [8])
	*($0 + [8]) = *($13)
	*($3) = $14
	$3 = ($1 + [16])
	*($2) = *($3)
	*($3) = [0]
	*($13) = (int_64)0
	$2 = *($0 + [20])
	if ( ($2 == 0) ){ goto $label$18 }
	*(($0 + [24])) = $2
	CALL $113($2)
	*(($0 + [28])) = [0]
	*(($0 + [20])) = (int_64)0
	
.LABEL $label$18
	$2 = ($1 + [20])
	*(($0 + [20])) = *($2)
	*(($0 + [24])) = *(($1 + [24]))
	$3 = ($1 + [28])
	*(($0 + [28])) = *($3)
	*($3) = [0]
	*($2) = (int_64)0
	*(($0 + [32])) = *(($1 + [32]))
	*($1) = $5
	$0 = *($13)
	if ( ($0 == 0) ){ goto $label$6 }
	*(($3 = ($1 + [12]))) = $0
	CALL $113($0)
	*(($1 + [8])) = $11
	*($3) = $9
	*(($1 + [16])) = $10
	$2 = *($2)
	if ( ($2 == 0) ){ goto $label$5 }
	*(($1 + [24])) = $2
	CALL $113($2)
	*(($1 + [28])) = [0]
	*(($1 + [20])) = (int_64)0
	goto $label$5 
	
.LABEL $label$8
	*(($1 + [12])) = $7
	*(($1 + [8])) = $6
	*(($1 + [16])) = $8
	
.LABEL $label$7
	*(($4 = ($1 + [24]))) = $10
	*(($0 = ($1 + [20]))) = $9
	*(($14 = ($1 + [28]))) = $11
	*(($15 = ($1 + [32]))) = $12
	$13 = [1]
	if ( (CALL int_32 $2((int_32 $1), (int_32 *($3))) == 0) ){ goto $label$1 }
	$3 = ($1 + [16])
	$6 = *($3)
	*($3) = [0]
	$13 = ($1 + [12])
	$8 = *($13)
	*($13) = [0]
	$16 = ($1 + [8])
	$7 = *($16)
	*($16) = [0]
	$5 = *($1)
	$11 = *($14)
	$10 = *($4)
	$9 = *($0)
	*($14) = [0]
	*($4) = [0]
	*($0) = [0]
	$12 = *($15)
	*($1) = *($2)
	$4 = *(($2 + [12]))
	*($16) = *($2 + [8])
	*($13) = $4
	$13 = ($2 + [16])
	*($3) = *($13)
	*($13) = [0]
	*($2 + [8 align=4]) = (int_64)0
	$0 = *($0)
	if ( ($0 == 0) ){ goto $label$19 }
	*(($1 + [24])) = $0
	CALL $113($0)
	*(($1 + [28])) = [0]
	*(($1 + [20])) = (int_64)0
	
.LABEL $label$19
	$0 = ($2 + [20])
	*(($1 + [20])) = *($0)
	*(($1 + [24])) = *(($2 + [24]))
	$3 = ($2 + [28])
	*(($1 + [28])) = *($3)
	*($3) = [0]
	*($0) = (int_64)0
	*(($1 + [32])) = *($2 + [32])
	*($2) = $5
	$1 = *(($2 + [8]))
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 = ($2 + [12]))) = $1
	CALL $113($1)
	*(($2 + [8])) = $7
	*($3) = $8
	*(($2 + [16])) = $6
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$3 }
	*(($2 + [24])) = $1
	CALL $113($1)
	*(($2 + [28])) = [0]
	*(($2 + [20])) = (int_64)0
	goto $label$3 
	
.LABEL $label$6
	*(($1 + [12])) = $9
	*(($1 + [8])) = $11
	*(($1 + [16])) = $10
	
.LABEL $label$5
	*(($1 + [24])) = $15
	*(($1 + [20])) = $16
	*(($1 + [28])) = $4
	*(($1 + [32])) = $12
	goto $label$2 
	
.LABEL $label$4
	*(($2 + [12])) = $8
	*(($2 + [8])) = $7
	*(($2 + [16])) = $6
	
.LABEL $label$3
	*(($2 + [24])) = $10
	*(($2 + [20])) = $9
	*(($2 + [28])) = $11
	*(($2 + [32])) = $12
	
.LABEL $label$2
	$13 = [2]
	
.LABEL $label$1
	return $13
}

int_32 .FUNC $92 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$18 = CALL $91($0, $1, $2, $4)
	if ( (CALL int_32 $3((int_32 $2), (int_32 *($4))) == 0) ){ goto $label$1 }
	$6 = *($2 + [8])
	*($2 + [8]) = [0]
	$13 = ($2 + [16])
	$8 = *($13)
	*($13) = [0]
	$14 = ($2 + [12])
	$7 = *($14)
	*($14) = [0]
	$5 = *($2)
	$15 = ($2 + [28])
	$11 = *($15)
	$16 = ($2 + [24])
	$10 = *($16)
	$9 = *($2 + [20])
	*($15) = [0]
	*($16) = [0]
	*($2 + [20]) = [0]
	$12 = *($2 + [32])
	*($2) = *($3)
	$17 = *(($3 + [12]))
	*($2 + [8]) = *($3 + [8])
	*($14) = $17
	$14 = ($3 + [16])
	*($13) = *($14)
	*($14) = [0]
	*($3 + [8 align=4]) = (int_64)0
	$13 = *($2 + [20])
	if ( ($13 == 0) ){ goto $label$2 }
	*($16) = $13
	CALL $113($13)
	*($15) = [0]
	*(($2 + [20])) = (int_64)0
	
.LABEL $label$2
	$13 = ($3 + [20])
	*(($2 + [20])) = *($13)
	*($16) = *(($3 + [24]))
	$16 = ($3 + [28])
	*($15) = *($16)
	*($16) = [0]
	*($13) = (int_64)0
	*(($2 + [32])) = *($3 + [32])
	*($3) = $5
	$16 = ($3 + [8])
	$15 = *($16)
	if ( ($15 == 0) ){ goto $label$4 }
	*(($14 = ($3 + [12]))) = $15
	CALL $113($15)
	*($16) = $6
	*($14) = $7
	*(($3 + [16])) = $8
	$15 = *($13)
	if ( ($15 == 0) ){ goto $label$3 }
	*(($3 + [24])) = $15
	CALL $113($15)
	*(($3 + [28])) = [0]
	*(($3 + [20])) = (int_64)0
	goto $label$3 
	
.LABEL $label$4
	*(($3 + [12])) = $7
	*($16) = $6
	*(($3 + [16])) = $8
	
.LABEL $label$3
	*(($3 + [24])) = $10
	*(($3 + [20])) = $9
	*(($3 + [28])) = $11
	*(($3 + [32])) = $12
	if ( (CALL int_32 $2((int_32 $1), (int_32 *($4))) == 0) ){ goto $label$7 }
	$9 = *($1 + [8])
	*($1 + [8]) = [0]
	$3 = ($1 + [16])
	$17 = *($3)
	*($3) = [0]
	$15 = ($1 + [12])
	$6 = *($15)
	*($15) = [0]
	$5 = *($1)
	$16 = ($1 + [28])
	$13 = *($16)
	$14 = ($1 + [24])
	$11 = *($14)
	$10 = *($1 + [20])
	*($16) = [0]
	*($14) = [0]
	*($1 + [20]) = [0]
	$12 = *($1 + [32])
	*($1) = *($2)
	$14 = *(($2 + [12]))
	$16 = ($2 + [8])
	*($1 + [8]) = *($16)
	*($15) = $14
	$15 = ($2 + [16])
	*($3) = *($15)
	*($15) = [0]
	*($16) = (int_64)0
	$3 = *($1 + [20])
	if ( ($3 == 0) ){ goto $label$8 }
	*(($1 + [24])) = $3
	CALL $113($3)
	*(($1 + [28])) = [0]
	*(($1 + [20])) = (int_64)0
	
.LABEL $label$8
	$3 = ($2 + [20])
	*(($1 + [20])) = *($3)
	*(($1 + [24])) = *(($2 + [24]))
	$15 = ($2 + [28])
	*(($1 + [28])) = *($15)
	*($15) = [0]
	*($3) = (int_64)0
	*(($1 + [32])) = *(($2 + [32]))
	*($2) = $5
	$15 = *($16)
	if ( ($15 == 0) ){ goto $label$6 }
	*(($16 = ($2 + [12]))) = $15
	CALL $113($15)
	*(($2 + [8])) = $9
	*($16) = $6
	*(($2 + [16])) = $17
	$3 = *($3)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($2 + [24])) = $3
	CALL $113($3)
	*(($2 + [28])) = [0]
	*(($2 + [20])) = (int_64)0
	goto $label$5 
	
.LABEL $label$7
	return ($18 + [1])
	
.LABEL $label$6
	*(($2 + [12])) = $6
	*(($2 + [8])) = $9
	*(($2 + [16])) = $17
	
.LABEL $label$5
	*(($2 + [24])) = $11
	*(($2 + [20])) = $10
	*(($2 + [28])) = $13
	*(($2 + [32])) = $12
	if ( (CALL int_32 $1((int_32 $0), (int_32 *($4))) == 0) ){ goto $label$11 }
	$11 = *($0 + [8])
	*($0 + [8]) = [0]
	$2 = ($0 + [16])
	$10 = *($2)
	*($2) = [0]
	$3 = ($0 + [12])
	$9 = *($3)
	*($3) = [0]
	$5 = *($0)
	$4 = ($0 + [28])
	$15 = *($4)
	$16 = ($0 + [24])
	$13 = *($16)
	$14 = *($0 + [20])
	*($4) = [0]
	*($16) = [0]
	*($0 + [20]) = [0]
	$12 = *($0 + [32])
	*($0) = *($1)
	$16 = *(($1 + [12]))
	$4 = ($1 + [8])
	*($0 + [8]) = *($4)
	*($3) = $16
	$3 = ($1 + [16])
	*($2) = *($3)
	*($3) = [0]
	*($4) = (int_64)0
	$2 = *($0 + [20])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($0 + [24])) = $2
	CALL $113($2)
	*(($0 + [28])) = [0]
	*(($0 + [20])) = (int_64)0
	
.LABEL $label$12
	$2 = ($1 + [20])
	*(($0 + [20])) = *($2)
	*(($0 + [24])) = *(($1 + [24]))
	$3 = ($1 + [28])
	*(($0 + [28])) = *($3)
	*($3) = [0]
	*($2) = (int_64)0
	*(($0 + [32])) = *(($1 + [32]))
	*($1) = $5
	$3 = *($4)
	if ( ($3 == 0) ){ goto $label$10 }
	*(($0 = ($1 + [12]))) = $3
	CALL $113($3)
	*(($1 + [8])) = $11
	*($0) = $9
	*(($1 + [16])) = $10
	$2 = *($2)
	if ( ($2 == 0) ){ goto $label$9 }
	*(($1 + [24])) = $2
	CALL $113($2)
	*(($1 + [28])) = [0]
	*(($1 + [20])) = (int_64)0
	goto $label$9 
	
.LABEL $label$11
	return ($18 + [2])
	
.LABEL $label$10
	*(($1 + [12])) = $9
	*(($1 + [8])) = $11
	*(($1 + [16])) = $10
	
.LABEL $label$9
	*(($1 + [24])) = $13
	*(($1 + [20])) = $14
	*(($1 + [28])) = $15
	*(($1 + [32])) = $12
	$18 = ($18 + [3])
	
.LABEL $label$1
	return $18
}

int_32 .FUNC $93 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$19 = CALL $92($0, $1, $2, $3, $5)
	if ( (CALL int_32 $4((int_32 $3), (int_32 *($5))) == 0) ){ goto $label$1 }
	$7 = *($3 + [8])
	*($3 + [8]) = [0]
	$14 = ($3 + [16])
	$9 = *($14)
	*($14) = [0]
	$15 = ($3 + [12])
	$8 = *($15)
	*($15) = [0]
	$6 = *($3)
	$16 = ($3 + [28])
	$12 = *($16)
	$17 = ($3 + [24])
	$11 = *($17)
	$10 = *($3 + [20])
	*($16) = [0]
	*($17) = [0]
	*($3 + [20]) = [0]
	$13 = *($3 + [32])
	*($3) = *($4)
	$18 = *(($4 + [12]))
	*($3 + [8]) = *($4 + [8])
	*($15) = $18
	$15 = ($4 + [16])
	*($14) = *($15)
	*($15) = [0]
	*($4 + [8 align=4]) = (int_64)0
	$14 = *($3 + [20])
	if ( ($14 == 0) ){ goto $label$2 }
	*($17) = $14
	CALL $113($14)
	*($16) = [0]
	*(($3 + [20])) = (int_64)0
	
.LABEL $label$2
	$14 = ($4 + [20])
	*(($3 + [20])) = *($14)
	*($17) = *(($4 + [24]))
	$17 = ($4 + [28])
	*($16) = *($17)
	*($17) = [0]
	*($14) = (int_64)0
	*(($3 + [32])) = *($4 + [32])
	*($4) = $6
	$17 = ($4 + [8])
	$16 = *($17)
	if ( ($16 == 0) ){ goto $label$4 }
	*(($15 = ($4 + [12]))) = $16
	CALL $113($16)
	*($17) = $7
	*($15) = $8
	*(($4 + [16])) = $9
	$16 = *($14)
	if ( ($16 == 0) ){ goto $label$3 }
	*(($4 + [24])) = $16
	CALL $113($16)
	*(($4 + [28])) = [0]
	*(($4 + [20])) = (int_64)0
	goto $label$3 
	
.LABEL $label$4
	*(($4 + [12])) = $8
	*($17) = $7
	*(($4 + [16])) = $9
	
.LABEL $label$3
	*(($4 + [24])) = $11
	*(($4 + [20])) = $10
	*(($4 + [28])) = $12
	*(($4 + [32])) = $13
	if ( (CALL int_32 $3((int_32 $2), (int_32 *($5))) == 0) ){ goto $label$7 }
	$10 = *($2 + [8])
	*($2 + [8]) = [0]
	$4 = ($2 + [16])
	$18 = *($4)
	*($4) = [0]
	$16 = ($2 + [12])
	$7 = *($16)
	*($16) = [0]
	$6 = *($2)
	$17 = ($2 + [28])
	$14 = *($17)
	$15 = ($2 + [24])
	$12 = *($15)
	$11 = *($2 + [20])
	*($17) = [0]
	*($15) = [0]
	*($2 + [20]) = [0]
	$13 = *($2 + [32])
	*($2) = *($3)
	$15 = *(($3 + [12]))
	$17 = ($3 + [8])
	*($2 + [8]) = *($17)
	*($16) = $15
	$16 = ($3 + [16])
	*($4) = *($16)
	*($16) = [0]
	*($17) = (int_64)0
	$4 = *($2 + [20])
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [24])) = $4
	CALL $113($4)
	*(($2 + [28])) = [0]
	*(($2 + [20])) = (int_64)0
	
.LABEL $label$8
	$4 = ($3 + [20])
	*(($2 + [20])) = *($4)
	*(($2 + [24])) = *(($3 + [24]))
	$16 = ($3 + [28])
	*(($2 + [28])) = *($16)
	*($16) = [0]
	*($4) = (int_64)0
	*(($2 + [32])) = *(($3 + [32]))
	*($3) = $6
	$16 = *($17)
	if ( ($16 == 0) ){ goto $label$6 }
	*(($17 = ($3 + [12]))) = $16
	CALL $113($16)
	*(($3 + [8])) = $10
	*($17) = $7
	*(($3 + [16])) = $18
	$4 = *($4)
	if ( ($4 == 0) ){ goto $label$5 }
	*(($3 + [24])) = $4
	CALL $113($4)
	*(($3 + [28])) = [0]
	*(($3 + [20])) = (int_64)0
	goto $label$5 
	
.LABEL $label$7
	return ($19 + [1])
	
.LABEL $label$6
	*(($3 + [12])) = $7
	*(($3 + [8])) = $10
	*(($3 + [16])) = $18
	
.LABEL $label$5
	*(($3 + [24])) = $12
	*(($3 + [20])) = $11
	*(($3 + [28])) = $14
	*(($3 + [32])) = $13
	if ( (CALL int_32 $2((int_32 $1), (int_32 *($5))) == 0) ){ goto $label$11 }
	$11 = *($1 + [8])
	*($1 + [8]) = [0]
	$3 = ($1 + [16])
	$10 = *($3)
	*($3) = [0]
	$4 = ($1 + [12])
	$18 = *($4)
	*($4) = [0]
	$6 = *($1)
	$16 = ($1 + [28])
	$17 = *($16)
	$14 = ($1 + [24])
	$15 = *($14)
	$12 = *($1 + [20])
	*($16) = [0]
	*($14) = [0]
	*($1 + [20]) = [0]
	$13 = *($1 + [32])
	*($1) = *($2)
	$14 = *(($2 + [12]))
	$16 = ($2 + [8])
	*($1 + [8]) = *($16)
	*($4) = $14
	$4 = ($2 + [16])
	*($3) = *($4)
	*($4) = [0]
	*($16) = (int_64)0
	$3 = *($1 + [20])
	if ( ($3 == 0) ){ goto $label$12 }
	*(($1 + [24])) = $3
	CALL $113($3)
	*(($1 + [28])) = [0]
	*(($1 + [20])) = (int_64)0
	
.LABEL $label$12
	$3 = ($2 + [20])
	*(($1 + [20])) = *($3)
	*(($1 + [24])) = *(($2 + [24]))
	$4 = ($2 + [28])
	*(($1 + [28])) = *($4)
	*($4) = [0]
	*($3) = (int_64)0
	*(($1 + [32])) = *(($2 + [32]))
	*($2) = $6
	$4 = *($16)
	if ( ($4 == 0) ){ goto $label$10 }
	*(($16 = ($2 + [12]))) = $4
	CALL $113($4)
	*(($2 + [8])) = $11
	*($16) = $18
	*(($2 + [16])) = $10
	$3 = *($3)
	if ( ($3 == 0) ){ goto $label$9 }
	*(($2 + [24])) = $3
	CALL $113($3)
	*(($2 + [28])) = [0]
	*(($2 + [20])) = (int_64)0
	goto $label$9 
	
.LABEL $label$11
	return ($19 + [2])
	
.LABEL $label$10
	*(($2 + [12])) = $18
	*(($2 + [8])) = $11
	*(($2 + [16])) = $10
	
.LABEL $label$9
	*(($2 + [24])) = $15
	*(($2 + [20])) = $12
	*(($2 + [28])) = $17
	*(($2 + [32])) = $13
	if ( (CALL int_32 $1((int_32 $0), (int_32 *($5))) == 0) ){ goto $label$15 }
	$5 = *($0 + [8])
	*($0 + [8]) = [0]
	$3 = ($0 + [16])
	$16 = *($3)
	*($3) = [0]
	$4 = ($0 + [12])
	$17 = *($4)
	*($4) = [0]
	$6 = *($0)
	$2 = ($0 + [28])
	$14 = *($2)
	$15 = ($0 + [24])
	$12 = *($15)
	$11 = *($0 + [20])
	*($2) = [0]
	*($15) = [0]
	*($0 + [20]) = [0]
	$13 = *($0 + [32])
	*($0) = *($1)
	$15 = *(($1 + [12]))
	$2 = ($1 + [8])
	*($0 + [8]) = *($2)
	*($4) = $15
	$4 = ($1 + [16])
	*($3) = *($4)
	*($4) = [0]
	*($2) = (int_64)0
	$3 = *($0 + [20])
	if ( ($3 == 0) ){ goto $label$16 }
	*(($0 + [24])) = $3
	CALL $113($3)
	*(($0 + [28])) = [0]
	*(($0 + [20])) = (int_64)0
	
.LABEL $label$16
	$3 = ($1 + [20])
	*(($0 + [20])) = *($3)
	*(($0 + [24])) = *(($1 + [24]))
	$4 = ($1 + [28])
	*(($0 + [28])) = *($4)
	*($4) = [0]
	*($3) = (int_64)0
	*(($0 + [32])) = *(($1 + [32]))
	*($1) = $6
	$4 = *($2)
	if ( ($4 == 0) ){ goto $label$14 }
	*(($2 = ($1 + [12]))) = $4
	CALL $113($4)
	*(($1 + [8])) = $5
	*($2) = $17
	*(($1 + [16])) = $16
	$3 = *($3)
	if ( ($3 == 0) ){ goto $label$13 }
	*(($1 + [24])) = $3
	CALL $113($3)
	*(($1 + [28])) = [0]
	*(($1 + [20])) = (int_64)0
	goto $label$13 
	
.LABEL $label$15
	return ($19 + [3])
	
.LABEL $label$14
	*(($1 + [12])) = $17
	*(($1 + [8])) = $5
	*(($1 + [16])) = $16
	
.LABEL $label$13
	*(($1 + [24])) = $12
	*(($1 + [20])) = $11
	*(($1 + [28])) = $14
	*(($1 + [32])) = $13
	$19 = ($19 + [4])
	
.LABEL $label$1
	return $19
}

void .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $112(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $113($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $120 ()
{
	(unreachable)
}

void .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$2 = int_32(($6 - $5) >> [5])
	$3 = ($2 + [1])
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$3 }
	$4 = [134217727]
	$7 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($7 >> [5]) > (uint_32)[67108862]) ){ goto $label$5 }
	$4 = int_32($7 >> [4])
	$4 = ( $3 ? $4 : ($4 <= $3) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[134217728]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $112(($4 << [5]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $116($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($2 << [5])))) = *($1)
	*(($3 + [24])) = *(($1 + [24]))
	*(($3 + [16])) = *(($1 + [16]))
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($6 - $5)
	$6 = ($3 - $1)
	$4 = ($7 + ($4 << [5]))
	$3 = ($3 + [32])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($6, $5, $1)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $113($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1184])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $29($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [144])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $49($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $115($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $112($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $115($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $113($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $114($7)
	return (unreachable)
}

void .FUNC $43 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $112(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $116($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [20])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [24])) = $6
	CALL $113($6)
	
.LABEL $label$11
	$6 = *($1 + [8])
	if ( ($6 == 0) ){ goto $label$12 }
	*(($1 + [12])) = $6
	CALL $113($6)
	
.LABEL $label$12
	CALL $113($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $113($2)
	
.LABEL $label$13
	(unreachable)
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *($2)), [1184])
	$4 = *($3)
	$7 = *($4)
	$4 = ($4 + [1])
	*($3) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($7 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$4 = *($1 + [4])
	$3 = int_32(($4 - $7) >> [5])
	$6 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$4 }
	CALL $44($1, ($6 - $3))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$6 >= (uint_32)$3) ){ goto $label$5 }
	$4 = ($7 + ($6 << [5]))
	*(($1 + [4])) = $4
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	
.LABEL $label$3
	
.LOOP $label$6:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [24])
	*($8 + [20]) = ($7 + [8])
	CALL $45(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [32])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [32])
	return $0
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *($2)), [1184])
	$4 = *($3)
	$7 = *($4)
	$4 = ($4 + [1])
	*($3) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($7 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$4 = *($1 + [4])
	$3 = int_32(($4 - $7) >> [5])
	$6 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$4 }
	CALL $46($1, ($6 - $3))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$6 >= (uint_32)$3) ){ goto $label$5 }
	$4 = ($7 + ($6 << [5]))
	*(($1 + [4])) = $4
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	
.LABEL $label$3
	
.LOOP $label$6:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [24])
	*($8 + [20]) = ($7 + [8])
	CALL $47(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [32])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [32])
	return $0
}

void .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [608])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	*($5 + [15]) = *(*($0 + [8]))
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [608])
	CALL memcpy(*($2 + [4]), ($5 + [15]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [144])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [144])
	CALL memcpy($0, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $8) >> [5]) >= (uint_32)$1) ){ goto $label$6 }
	$2 = *($0)
	$3 = int_32(($8 - $2) >> [5])
	$8 = ($3 + $1)
	if ( ((uint_32)$8 >= (uint_32)[134217728]) ){ goto $label$4 }
	$6 = [134217727]
	$7 = ($7 - $2)
	if ( ((uint_32)int_32($7 >> [5]) > (uint_32)[67108862]) ){ goto $label$7 }
	$6 = int_32($7 >> [4])
	$6 = ( $8 ? $6 : ($6 <= $8) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$3 }
	
.LABEL $label$7
	$7 = CALL $112(($6 << [5]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*(($6 = ($8 + [16]))) = (int_64)0
	*($8) = (int_64)0
	*(($8 + [8])) = (int_64)0
	*(($8 + [24])) = (int_64)0
	*($6) = (int_64)344826856192
	CALL eosio_assert([1], [368])
	$5 = (uint_64)*($6) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$10:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	CALL eosio_assert($7, [240])
	*($8 + [24]) = [0]
	$8 = (*($0) + [32])
	*($0) = $8
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$7 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $116($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$2 = ($7 + ($6 << [5]))
	$3 = ($7 + ($3 << [5]))
	$8 = $3
	
.LOOP $label$13:
	*(($6 = ($8 + [16]))) = (int_64)0
	*($8) = (int_64)0
	*(($8 + [8])) = (int_64)0
	*(($8 + [24])) = (int_64)0
	*($6) = (int_64)344826856192
	CALL eosio_assert([1], [368])
	$5 = (uint_64)*($6) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$15:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	CALL eosio_assert($7, [240])
	*($8 + [24]) = [0]
	$8 = ($8 + [32])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$13 }
	$6 = *($0)
	$4 = ($0 + [4])
	$7 = (*($4) - $6)
	$1 = ($3 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$18 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$18
	*($0) = $1
	*($4) = $8
	*(($0 + [8])) = $2
	if ( ($6 == 0) ){ goto $label$1 }
	CALL $113($6)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [144])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [144])
	CALL memcpy(($5 + [15]), *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	*($0) = ((int_32)*($5 + [15]) != (int_32)[0])
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $8) >> [5]) >= (uint_32)$1) ){ goto $label$6 }
	$2 = *($0)
	$3 = int_32(($8 - $2) >> [5])
	$8 = ($3 + $1)
	if ( ((uint_32)$8 >= (uint_32)[134217728]) ){ goto $label$4 }
	$6 = [134217727]
	$7 = ($7 - $2)
	if ( ((uint_32)int_32($7 >> [5]) > (uint_32)[67108862]) ){ goto $label$7 }
	$6 = int_32($7 >> [4])
	$6 = ( $8 ? $6 : ($6 <= $8) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$3 }
	
.LABEL $label$7
	$7 = CALL $112(($6 << [5]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*(($6 = ($8 + [16]))) = (int_64)0
	*($8) = (int_64)0
	*(($8 + [8])) = (int_64)0
	*(($8 + [24])) = (int_64)0
	*($6) = (int_64)344826856192
	CALL eosio_assert([1], [368])
	$5 = (uint_64)*($6) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$10:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	CALL eosio_assert($7, [240])
	*($8 + [24]) = [0]
	$8 = (*($0) + [32])
	*($0) = $8
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$7 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $116($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$2 = ($7 + ($6 << [5]))
	$3 = ($7 + ($3 << [5]))
	$8 = $3
	
.LOOP $label$13:
	*(($6 = ($8 + [16]))) = (int_64)0
	*($8) = (int_64)0
	*(($8 + [8])) = (int_64)0
	*(($8 + [24])) = (int_64)0
	*($6) = (int_64)344826856192
	CALL eosio_assert([1], [368])
	$5 = (uint_64)*($6) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$15:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	CALL eosio_assert($7, [240])
	*($8 + [24]) = [0]
	$8 = ($8 + [32])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$13 }
	$6 = *($0)
	$4 = ($0 + [4])
	$7 = (*($4) - $6)
	$1 = ($3 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$18 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$18
	*($0) = $1
	*($4) = $8
	*(($0 + [8])) = $2
	if ( ($6 == 0) ){ goto $label$1 }
	CALL $113($6)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC _ZN5eosio14egc_texas_game8texasbetENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEyNS_5assetE (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [16])
	*([0] + [4]) = $14
	*($14 + [8]) = $2
	CALL require_auth($2)
	if ( (*($1) & [1]) ){ goto $label$2 }
	$1 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($1 + [8])
	
.LABEL $label$1
	$4 = ($0 + [8])
	$9 = [-1]
	
.LOOP $label$3:
	$8 = ($1 + $9)
	$5 = ($9 + [1])
	$9 = $5
	if ( *(($8 + [1])) ){ goto $label$3 }
	$6 = (CASTING uint_64)(uint_32 $5)
	$11 = (int_64)0
	$10 = (int_64)59
	$12 = (int_64)0
	
.LOOP $label$4:
	$13 = (int_64)0
	if ( ((uint_64)$11 >= (uint_64)$6) ){ goto $label$5 }
	$9 = *($1)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$9 = ($9 + [165])
	goto $label$6 
	
.LABEL $label$7
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$9 }
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	goto $label$8 
	
.LABEL $label$9
	$13 = ((int_64)$13 & (int_64)15)
	
.LABEL $label$8
	$1 = ($1 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$4 }
	$7 = *(($0 + [32]))
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	$1 = ($8 + [-24])
	$5 = ([0] - $7)
	
.LOOP $label$11:
	if ( ((int_64)*(*($1)) == (int_64)$12) ){ goto $label$10 }
	$8 = $1
	$9 = ($1 + [-24])
	$1 = $9
	if ( ((int_32)($9 + $5) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$14 }
	$8 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)$4), [160])
	if ( $8 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$1 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-3838636552279642112, $12)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$12 }
	$8 = CALL $36($4, $1)
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)$4), [160])
	
.LABEL $label$13
	CALL eosio_assert([1], [368])
	$11 = (int_64)1346979907
	$1 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$9 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$9 = [0]
	
.LABEL $label$15
	CALL eosio_assert($9, [240])
	$9 = *(($8 + [12]))
	$1 = *($8 + [8])
	if ( ((int_32)$1 == (int_32)$9) ){ goto $label$20 }
	
.LOOP $label$21:
	if ( ((int_64)*($1) == (int_64)$2) ){ goto $label$20 }
	$1 = ($1 + [32])
	if ( ((int_32)$9 != (int_32)$1) ){ goto $label$21 }
	goto $label$12 
	
.LABEL $label$20
	if ( ((int_32)$1 == (int_32)$9) ){ goto $label$12 }
	$11 = *($1 + [8])
	CALL eosio_assert(((int_64)*(($1 + [16])) == (int_64)*($3 + [8])), [656])
	CALL eosio_assert(((int_64)$11 >= (int_64)*($3)), [720])
	$11 = *($0)
	*($14 + [4]) = $3
	*($14) = ($14 + [8])
	CALL eosio_assert([1], [736])
	CALL $102($4, $8, $11, $14)
	
.LABEL $label$12
	*([0] + [4]) = ($14 + [16])
}

int_32 .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	*(($6 = $5) + [60]) = $0
	*($6 + [48]) = *($1)
	*($6 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($5 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($6 + [40])) = (int_64)1398362884
	*($6 + [16]) = [0]
	*($6 + [8]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [32]) = (int_64)0
	CALL eosio_assert([1], [368])
	$3 = ($6 + [24])
	$4 = (int_64)5462355
	
.LOOP $label$5:
	$5 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($5, [240])
	*($6 + [68]) = $0
	*($6 + [64]) = $0
	*($6 + [72]) = ($0 + $2)
	CALL $48(($6 + [64]), ($6 + [8]))
	CALL eosio_assert(((uint_32)(*($6 + [72]) - *($6 + [68])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($6 + [68]), [8])
	$1 = (*($6 + [68]) + [8])
	*($6 + [68]) = $1
	CALL eosio_assert(((uint_32)(*($6 + [72]) - $1) > (uint_32)[7]), [144])
	CALL memcpy(($6 + [32]), *($6 + [68]), [8])
	$1 = (*($6 + [68]) + [8])
	*($6 + [68]) = $1
	CALL eosio_assert(((uint_32)(*($6 + [72]) - $1) > (uint_32)[7]), [144])
	CALL memcpy(($6 + [40]), *($6 + [68]), [8])
	if ( ($2 <= [513]) ){ goto $label$8 }
	CALL free($0)
	
.LABEL $label$8
	*($6 + [68]) = ($6 + [48])
	*($6 + [64]) = ($6 + [60])
	CALL $101(($6 + [64]), ($6 + [8]))
	if ( ((*($6 + [8]) & [1]) == 0) ){ goto $label$9 }
	CALL $113(*(($6 + [16])))
	
.LABEL $label$9
	*([0] + [4]) = ($6 + [80])
	return [1]
}

void .FUNC _ZN5eosio14egc_texas_game8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [64])
	*([0] + [4]) = $11
	*($11 + [16]) = $1
	$8 = *($0)
	if ( ((int_64)$8 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$8 != (int_64)$2) ){ goto $label$1 }
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)1129334020), [1728])
	CALL eosio_assert(((int_64)*($3) > (int_64)999), [1744])
	$7 = *(($0 + [80]))
	$10 = *(($0 + [84]))
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$2 }
	$9 = ($10 + [-24])
	$5 = ([0] - $7)
	
.LOOP $label$3:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$2 }
	$10 = $9
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$6 = ($0 + [56])
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$7 }
	$9 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [28]) == (int_32)$6), [160])
	$1 = *($0)
	if ( $9 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$9 = CALL db_find_i64(*(($0 + [56])), *(($0 + [64])), (int_64)-3838636559280373760, $1)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$5 }
	$9 = CALL $25($6, $9)
	CALL eosio_assert(((int_32)*($9 + [28]) == (int_32)$6), [160])
	$1 = *($0)
	
.LABEL $label$6
	*($11 + [32]) = $3
	CALL eosio_assert([1], [736])
	CALL $106($6, $9, $1, ($11 + [32]))
	goto $label$1 
	
.LABEL $label$5
	$1 = *($0)
	
.LABEL $label$4
	*($11 + [12]) = $3
	*($11 + [8]) = ($11 + [16])
	*($11 + [56]) = $1
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$2()), [1312])
	*($11 + [32]) = $6
	*($11 + [36]) = ($11 + [8])
	*($11 + [40]) = ($11 + [56])
	*(($10 = CALL $112([40])) + [16]) = (int_64)344826856192
	*($10 + [8]) = (int_64)0
	CALL eosio_assert([1], [368])
	$1 = (int_64)1346979907
	$9 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$5 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$5 = [0]
	
.LABEL $label$8
	CALL eosio_assert($5, [240])
	*($10 + [28]) = $6
	*($10 + [24]) = [0]
	CALL $105(($11 + [32]), $10)
	*($11 + [48]) = $10
	$1 = *($10)
	*($11 + [32]) = $1
	$6 = *($10 + [32])
	*($11 + [28]) = $6
	$5 = ($0 + [84])
	$9 = *($5)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [88]))) ){ goto $label$14 }
	*($9 + [8]) = $1
	*($9 + [16]) = $6
	*($11 + [48]) = [0]
	*($9) = $10
	*($5) = ($9 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $35(($0 + [80]), ($11 + [48]), ($11 + [32]), ($11 + [28]))
	
.LABEL $label$13
	$9 = *($11 + [48])
	*($11 + [48]) = [0]
	if ( ($9 == 0) ){ goto $label$1 }
	CALL $113($9)
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [64])
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [368])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [240])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $103(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $104(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $113(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [272])
	*([0] + [4]) = $12
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [16]
	$10 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$9 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$10 != (int_64)$2) ){ goto $label$7 }
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [32]
	$10 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$9 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$9
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$10 == (int_64)$1), [48])
	
.LABEL $label$7
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$16 }
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [112]
	$10 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$22 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$3 = ($3 + [165])
	goto $label$20 
	
.LABEL $label$22
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$18
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$17 }
	if ( ((int_64)$10 != (int_64)$2) ){ goto $label$15 }
	
.LABEL $label$16
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [16]
	$10 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$9 > (uint_64)(int_64)6) ){ goto $label$28 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$3 = ($3 + [165])
	goto $label$26 
	
.LABEL $label$28
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$24
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$23 }
	if ( ((int_64)$10 == (int_64)$2) ){ goto $label$15 }
	$9 = (int_64)0
	$11 = (int_64)59
	$7 = [128]
	$10 = (int_64)0
	
.LOOP $label$29:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$30 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$3 = ($3 + [165])
	goto $label$31 
	
.LABEL $label$32
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$30
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$8 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$29 }
	if ( ((int_64)$10 != (int_64)$1) ){ goto $label$14 }
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [112]
	$10 = (int_64)0
	
.LOOP $label$33:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$38 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$3 = ($3 + [165])
	goto $label$36 
	
.LABEL $label$38
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$37
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$35
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$34
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$33 }
	if ( ((int_64)$10 != (int_64)$2) ){ goto $label$14 }
	
.LABEL $label$15
	*(($12 + [192])) = $0
	*(($12 + [200])) = (int_64)-1
	*(($12 + [208])) = (int_64)0
	*(($12 + [216])) = [0]
	*($12 + [184]) = $0
	*($12 + [176]) = $0
	*($12 + [232]) = $0
	*(($12 + [240])) = $0
	*(($12 + [248])) = (int_64)-1
	*(($12 + [256])) = [0]
	*(($12 + [260])) = [0]
	*(($12 + [264])) = [0]
	if ( ((int_64)$2 <= (int_64)-3838636797508190209) ){ goto $label$49 }
	if ( ((int_64)$2 > (int_64)-3838636584462015489) ){ goto $label$48 }
	if ( ((int_64)$2 == (int_64)-3838636797508190208) ){ goto $label$46 }
	if ( ((int_64)$2 == (int_64)-3838636716443828224) ){ goto $label$45 }
	if ( ((int_64)$2 != (int_64)-3838636626851397632) ){ goto $label$39 }
	*($12 + [156]) = [0]
	*($12 + [152]) = [1]
	*($12 + [16 align=4]) = *($12 + [152])
	CALL $11(($12 + [176]), ($12 + [16]))
	goto $label$39 
	
.LABEL $label$49
	if ( ((int_64)$2 <= (int_64)-3838636855493246977) ){ goto $label$47 }
	if ( ((int_64)$2 == (int_64)-3838636855493246976) ){ goto $label$44 }
	if ( ((int_64)$2 == (int_64)-3838636838387073024) ){ goto $label$43 }
	if ( ((int_64)$2 != (int_64)-3838636825027018752) ){ goto $label$39 }
	*($12 + [140]) = [0]
	*($12 + [136]) = [2]
	*($12 + [32 align=4]) = *($12 + [136])
	CALL $14(($12 + [176]), ($12 + [32]))
	goto $label$39 
	
.LABEL $label$48
	if ( ((int_64)$2 == (int_64)-3838636584462015488) ){ goto $label$42 }
	if ( ((int_64)$2 == (int_64)-3838636584145137152) ){ goto $label$41 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$39 }
	*($12 + [172]) = [0]
	*($12 + [168]) = [3]
	*($12) = *($12 + [168])
	CALL $7(($12 + [176]), $12)
	goto $label$39 
	
.LABEL $label$47
	if ( ((int_64)$2 == (int_64)-3838636872625242112) ){ goto $label$40 }
	if ( ((int_64)$2 != (int_64)-3838636859076902912) ){ goto $label$39 }
	*($12 + [164]) = [0]
	*($12 + [160]) = [4]
	*($12 + [8 align=4]) = *($12 + [160])
	CALL $9(($12 + [176]), ($12 + [8]))
	goto $label$39 
	
.LABEL $label$46
	*($12 + [132]) = [0]
	*($12 + [128]) = [5]
	*($12 + [40 align=4]) = *($12 + [128])
	CALL $16(($12 + [176]), ($12 + [40]))
	goto $label$39 
	
.LABEL $label$45
	*($12 + [124]) = [0]
	*($12 + [120]) = [6]
	*($12 + [48 align=4]) = *($12 + [120])
	CALL $18(($12 + [176]), ($12 + [48]))
	goto $label$39 
	
.LABEL $label$44
	*($12 + [100]) = [0]
	*($12 + [96]) = [7]
	*($12 + [72 align=4]) = *($12 + [96])
	CALL $9(($12 + [176]), ($12 + [72]))
	goto $label$39 
	
.LABEL $label$43
	*($12 + [108]) = [0]
	*($12 + [104]) = [8]
	*($12 + [64 align=4]) = *($12 + [104])
	CALL $21(($12 + [176]), ($12 + [64]))
	goto $label$39 
	
.LABEL $label$42
	*($12 + [92]) = [0]
	*($12 + [88]) = [9]
	*($12 + [80 align=4]) = *($12 + [88])
	CALL $24(($12 + [176]), ($12 + [80]))
	goto $label$39 
	
.LABEL $label$41
	*($12 + [148]) = [0]
	*($12 + [144]) = [10]
	*($12 + [24 align=4]) = *($12 + [144])
	CALL $9(($12 + [176]), ($12 + [24]))
	goto $label$39 
	
.LABEL $label$40
	*($12 + [116]) = [0]
	*($12 + [112]) = [11]
	*($12 + [56 align=4]) = *($12 + [112])
	CALL $16(($12 + [176]), ($12 + [56]))
	
.LABEL $label$39
	$5 = *(($12 + [256]))
	if ( ($5 == 0) ){ goto $label$50 }
	$4 = ($12 + [260])
	$7 = *($4)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$52 }
	
.LOOP $label$53:
	$7 = ($7 + [-24])
	$3 = *($7)
	*($7) = [0]
	if ( ($3 == 0) ){ goto $label$54 }
	CALL $113($3)
	
.LABEL $label$54
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$53 }
	$7 = *(($12 + [256]))
	goto $label$51 
	
.LABEL $label$52
	$7 = $5
	
.LABEL $label$51
	*($4) = $5
	CALL $113($7)
	
.LABEL $label$50
	$4 = *(($12 + [208]))
	if ( ($4 == 0) ){ goto $label$14 }
	$6 = ($12 + [212])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$56 }
	
.LOOP $label$57:
	$3 = ($3 + [-24])
	$7 = *($3)
	*($3) = [0]
	if ( ($7 == 0) ){ goto $label$58 }
	$5 = *($7 + [20])
	if ( ($5 == 0) ){ goto $label$59 }
	*(($7 + [24])) = $5
	CALL $113($5)
	
.LABEL $label$59
	$5 = *($7 + [8])
	if ( ($5 == 0) ){ goto $label$60 }
	*(($7 + [12])) = $5
	CALL $113($5)
	
.LABEL $label$60
	CALL $113($7)
	
.LABEL $label$58
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$57 }
	$7 = *(($12 + [208]))
	goto $label$55 
	
.LABEL $label$56
	$7 = $4
	
.LABEL $label$55
	*($6) = $4
	CALL $113($7)
	
.LABEL $label$14
	*([0] + [4]) = ($12 + [272])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	*(($2 = $3) + [44]) = $0
	*($2 + [32]) = *($1)
	*($2 + [36]) = *($1 + [4])
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$4 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [24])) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [52]) = $1
	*($2 + [48]) = $1
	*($2 + [56]) = ($1 + $0)
	CALL $48(($2 + [48]), ($2 + [8]))
	CALL $48(($2 + [48]), ($2 + [20]))
	if ( ($0 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	*($2 + [52]) = ($2 + [32])
	*($2 + [48]) = ($2 + [44])
	CALL $59(($2 + [48]), ($2 + [8]))
	if ( ((*($2 + [20]) & [1]) == 0) ){ goto $label$6 }
	CALL $113(*(($2 + [28])))
	
.LABEL $label$6
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$7 }
	CALL $113(*(($2 + [16])))
	
.LABEL $label$7
	*([0] + [4]) = ($2 + [64])
	return [1]
}

void .FUNC _ZN5eosio14egc_texas_game9texasexitENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [144])
	*([0] + [4]) = $16
	CALL require_auth(*($0))
	if ( (*($1) & [1]) ){ goto $label$2 }
	$1 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($1 + [8])
	
.LABEL $label$1
	$3 = ($0 + [8])
	$11 = [-1]
	
.LOOP $label$3:
	$10 = ($1 + $11)
	$4 = ($11 + [1])
	$11 = $4
	if ( *(($10 + [1])) ){ goto $label$3 }
	$5 = (CASTING uint_64)(uint_32 $4)
	$13 = (int_64)0
	$12 = (int_64)59
	$14 = (int_64)0
	
.LOOP $label$4:
	$15 = (int_64)0
	if ( ((uint_64)$13 >= (uint_64)$5) ){ goto $label$5 }
	$11 = *($1)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$11 = ($11 + [165])
	goto $label$6 
	
.LABEL $label$7
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$9 }
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	goto $label$8 
	
.LABEL $label$9
	$15 = ((int_64)$15 & (int_64)15)
	
.LABEL $label$8
	$1 = ($1 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$4 }
	$8 = *(($0 + [32]))
	$10 = *(($0 + [36]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$10 }
	$1 = ($10 + [-24])
	$4 = ([0] - $8)
	
.LOOP $label$11:
	if ( ((int_64)*(*($1)) == (int_64)$14) ){ goto $label$10 }
	$10 = $1
	$11 = ($1 + [-24])
	$1 = $11
	if ( ((int_32)($11 + $4) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$15 }
	$6 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$3), [160])
	if ( $6 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$1 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-3838636552279642112, $14)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$13 }
	$6 = CALL $36($3, $1)
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$3), [160])
	
.LABEL $label$14
	$1 = *(($6 + [12]))
	$11 = *($6 + [8])
	if ( ((int_32)$11 == (int_32)$1) ){ goto $label$16 }
	
.LOOP $label$17:
	if ( ((int_64)*($11) == (int_64)$2) ){ goto $label$16 }
	$11 = ($11 + [32])
	if ( ((int_32)$1 != (int_32)$11) ){ goto $label$17 }
	$11 = $1
	
.LABEL $label$16
	*($16 + [120]) = $11
	$7 = *(($0 + [80]))
	$4 = *(($0 + [84]))
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$18 }
	$1 = ($4 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$19:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$18 }
	$4 = $1
	$10 = ($1 + [-24])
	$1 = $10
	if ( ((int_32)($10 + $8) != (int_32)[-24]) ){ goto $label$19 }
	
.LABEL $label$18
	$8 = ($0 + [56])
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$21 }
	$10 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [28]) == (int_32)$8), [160])
	goto $label$20 
	
.LABEL $label$21
	$10 = [0]
	$1 = CALL db_find_i64(*(($0 + [56])), *(($0 + [64])), (int_64)-3838636559280373760, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$20 }
	$10 = CALL $25($8, $1)
	CALL eosio_assert(((int_32)*($10 + [28]) == (int_32)$8), [160])
	
.LABEL $label$20
	if ( ((int_32)$11 == (int_32)*(($6 + [12]))) ){ goto $label$13 }
	CALL eosio_assert([1], [368])
	$13 = (int_64)1346979907
	$1 = [0]
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	
.LOOP $label$26:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$26 }
	
.LABEL $label$25
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	$4 = [0]
	
.LABEL $label$22
	CALL eosio_assert($4, [240])
	if ( ($10 == 0) ){ goto $label$28 }
	$13 = *($10 + [8])
	CALL eosio_assert(((int_64)*(($11 + [16])) == (int_64)*(($10 + [16]))), [896])
	$5 = ((int_64)$13 + (int_64)*($11 + [8]))
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)$5 < (int_64)4611686018427387904), [976])
	$1 = $10
	goto $label$27 
	
.LABEL $label$28
	$5 = *($11 + [8])
	$1 = [0]
	
.LABEL $label$27
	$11 = ((int_32)$10 != (int_32)[0])
	CALL eosio_assert($11, [288])
	CALL eosio_assert($11, [336])
	$11 = CALL db_next_i64(*($10 + [32]), ($16 + [16]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$29 }
	CALL $25($8, $11)
	
.LABEL $label$29
	CALL $28($8, $1)
	if ( ((int_64)$5 < (int_64)1) ){ goto $label$30 }
	$9 = *($0)
	$13 = (int_64)0
	$15 = (int_64)59
	$1 = [224]
	$14 = (int_64)0
	
.LOOP $label$31:
	if ( ((uint_64)$13 > (uint_64)(int_64)5) ){ goto $label$36 }
	$11 = *($1)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$35 }
	$11 = ($11 + [165])
	goto $label$34 
	
.LABEL $label$36
	$12 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$35
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$34
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56)
	
.LABEL $label$33
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$32
	$1 = ($1 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$12 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$31 }
	*($16 + [72]) = $14
	*($16 + [64]) = $9
	$13 = (int_64)0
	$15 = (int_64)59
	$1 = [112]
	$14 = (int_64)0
	
.LOOP $label$37:
	if ( ((uint_64)$13 > (uint_64)(int_64)7) ){ goto $label$42 }
	$11 = *($1)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$41 }
	$11 = ($11 + [165])
	goto $label$40 
	
.LABEL $label$42
	$12 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$41
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$40
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56)
	
.LABEL $label$39
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$38
	$1 = ($1 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$12 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$37 }
	$12 = ((int_64)$5 * (int_64)10000)
	CALL eosio_assert((uint_64)(((int_64)$12 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [368])
	$13 = (int_64)4411461
	$1 = [0]
	
.LOOP $label$45:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$44 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$46 }
	
.LOOP $label$47:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$44 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$47 }
	
.LABEL $label$46
	$11 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	$11 = [0]
	
.LABEL $label$43
	CALL eosio_assert($11, [240])
	*(($16 + [8])) = [0]
	*($16) = (int_64)0
	$1 = CALL strlen([1408])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$50 }
	*($16) = ($1 << [1])
	$11 = ($16 | [1])
	if ( $1 ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$50
	$10 = (($1 + [16]) & [-16])
	$11 = CALL $112($10)
	*($16) = ($10 | [1])
	*($16 + [8]) = $11
	*($16 + [4]) = $1
	
.LABEL $label$49
	CALL memcpy($11, [1408], $1)
	
.LABEL $label$48
	*(($11 + $1)) = [0]
	*(($16 + [40])) = (int_64)1129334020
	*(($16 + [52])) = *($16 + [4])
	*($16 + [24]) = $2
	$1 = ($16 + [8])
	*(($16 + [56])) = *($1)
	*($16 + [16]) = *($0)
	*($16 + [32]) = $12
	*($16 + [48]) = *($16)
	*($16) = [0]
	*($16 + [4]) = [0]
	*($1) = [0]
	$1 = CALL $26(($16 + [80]), ($16 + [64]), (int_64)-3838636544615976944, $14, ($16 + [16]))
	CALL $27(($16 + [128]), $1)
	$11 = *($16 + [128])
	CALL send_inline($11, (*($16 + [132]) - $11))
	$11 = *($16 + [128])
	if ( ($11 == 0) ){ goto $label$51 }
	*($16 + [132]) = $11
	CALL $113($11)
	
.LABEL $label$51
	$11 = *($1 + [28])
	if ( ($11 == 0) ){ goto $label$52 }
	*(($1 + [32])) = $11
	CALL $113($11)
	
.LABEL $label$52
	$11 = *($1 + [16])
	if ( ($11 == 0) ){ goto $label$53 }
	*(($1 + [20])) = $11
	CALL $113($11)
	
.LABEL $label$53
	if ( ((*(($16 + [48])) & [1]) == 0) ){ goto $label$54 }
	CALL $113(*(($16 + [56])))
	
.LABEL $label$54
	if ( ((*($16) & [1]) == 0) ){ goto $label$30 }
	CALL $113(*(($16 + [8])))
	
.LABEL $label$30
	$13 = *($0)
	*($16 + [16]) = ($16 + [120])
	CALL eosio_assert([1], [736])
	CALL $58($3, $6, $13, ($16 + [16]))
	if ( ((int_32)*(($6 + [12])) != (int_32)*(($6 + [8]))) ){ goto $label$13 }
	CALL eosio_assert([1], [288])
	CALL eosio_assert([1], [336])
	$1 = CALL db_next_i64(*($6 + [36]), ($16 + [16]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$55 }
	CALL $36($3, $1)
	
.LABEL $label$55
	CALL $50($3, $6)
	
.LABEL $label$13
	*([0] + [4]) = ($16 + [144])
	return (unreachable)
	
.LABEL $label$12
	CALL $114($16)
}

int_32 .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	*(($2 = $3) + [44]) = $0
	*($2 + [32]) = *($1)
	*($2 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*($2 + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [52]) = $1
	*($2 + [48]) = $1
	*($2 + [56]) = ($1 + $0)
	CALL $48(($2 + [48]), ($2 + [8]))
	CALL eosio_assert(((uint_32)(*($2 + [56]) - *($2 + [52])) > (uint_32)[7]), [144])
	CALL memcpy(($2 + [24]), *($2 + [52]), [8])
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [52]) = ($2 + [32])
	*($2 + [48]) = ($2 + [44])
	CALL $57(($2 + [48]), ($2 + [8]))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $113(*(($2 + [16])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [64])
	return [1]
}

void .FUNC _ZN5eosio14egc_texas_game9texasjoinEyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_5assetE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [128])
	*([0] + [4]) = $15
	*($15 + [40]) = $1
	CALL require_auth(*($0))
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)344826856192), [1376])
	$8 = *(($0 + [80]))
	$7 = *(($0 + [84]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$1 }
	$10 = ($7 + [-24])
	$5 = ([0] - $8)
	
.LOOP $label$2:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$1 }
	$7 = $10
	$9 = ($10 + [-24])
	$10 = $9
	if ( ((int_32)($9 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [56])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$5 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [28]) == (int_32)$4), [160])
	if ( $8 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$10 = CALL db_find_i64(*(($0 + [56])), *(($0 + [64])), (int_64)-3838636559280373760, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $25($4, $10)
	CALL eosio_assert(((int_32)*($8 + [28]) == (int_32)$4), [160])
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*(($3 + [8])) == (int_64)*(($8 + [16]))), [656])
	CALL eosio_assert(((int_64)*($3) <= (int_64)*($8 + [8])), [1280])
	if ( (*($2) & [1]) ){ goto $label$7 }
	$10 = ($2 + [1])
	goto $label$6 
	
.LABEL $label$7
	$10 = *($2 + [8])
	
.LABEL $label$6
	$9 = [-1]
	
.LOOP $label$8:
	$7 = ($10 + $9)
	$5 = ($9 + [1])
	$9 = $5
	if ( *(($7 + [1])) ){ goto $label$8 }
	$6 = (CASTING uint_64)(uint_32 $5)
	$12 = (int_64)0
	$11 = (int_64)59
	$13 = (int_64)0
	
.LOOP $label$9:
	$14 = (int_64)0
	if ( ((uint_64)$12 >= (uint_64)$6) ){ goto $label$10 }
	$9 = *($10)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$9 = ($9 + [165])
	goto $label$11 
	
.LABEL $label$12
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$14 }
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	goto $label$13 
	
.LABEL $label$14
	$14 = ((int_64)$14 & (int_64)15)
	
.LABEL $label$13
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$9 }
	*($15 + [32]) = $13
	$2 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$15 }
	$10 = ($7 + [-24])
	$5 = ([0] - $2)
	
.LOOP $label$16:
	if ( ((int_64)*(*($10)) == (int_64)$13) ){ goto $label$15 }
	$7 = $10
	$9 = ($10 + [-24])
	$10 = $9
	if ( ((int_32)($9 + $5) != (int_32)[-24]) ){ goto $label$16 }
	
.LABEL $label$15
	$5 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$18 }
	$7 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$5), [160])
	goto $label$17 
	
.LABEL $label$18
	$7 = [0]
	$10 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-3838636552279642112, $13)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$17 }
	$7 = CALL $36($5, $10)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$5), [160])
	
.LABEL $label$17
	*(($15 + [16])) = (int_64)344826856192
	*($15 + [8]) = (int_64)0
	CALL eosio_assert([1], [368])
	$12 = (int_64)1346979907
	$10 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	
.LOOP $label$23:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$23 }
	
.LABEL $label$22
	$9 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	$9 = [0]
	
.LABEL $label$19
	CALL eosio_assert($9, [240])
	*(($15 + [20])) = *(($3 + [12]))
	*(($15 + [16])) = *(($3 + [8]))
	*(($15 + [12])) = *(($3 + [4]))
	*($15) = $1
	*($15 + [8]) = *($3)
	*($15 + [24]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$12 = *($0)
	if ( ($7 == 0) ){ goto $label$25 }
	*($15 + [52]) = $3
	*($15 + [48]) = ($15 + [40])
	*($15 + [56]) = $15
	CALL eosio_assert([1], [736])
	CALL $54($5, $7, $12, ($15 + [48]))
	goto $label$24 
	
.LABEL $label$25
	*($15 + [92]) = $15
	*($15 + [88]) = ($15 + [32])
	*($15 + [104]) = $12
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$2()), [1312])
	*($15 + [48]) = $5
	*($15 + [52]) = ($15 + [88])
	*($15 + [56]) = ($15 + [104])
	*(($10 = CALL $112([48])) + [8 align=4]) = (int_64)0
	*($10 + [16 align=4]) = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = $5
	CALL $53(($15 + [48]), $10)
	*($15 + [120]) = $10
	$12 = *($10)
	*($15 + [48]) = $12
	$7 = *($10 + [36])
	*($15 + [116]) = $7
	$5 = ($0 + [36])
	$9 = *($5)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [40]))) ){ goto $label$27 }
	*($9 + [8]) = $12
	*($9 + [16]) = $7
	*($15 + [120]) = [0]
	*($9) = $10
	*($5) = ($9 + [24])
	goto $label$26 
	
.LABEL $label$27
	CALL $43(($0 + [32]), ($15 + [120]), ($15 + [48]), ($15 + [116]))
	
.LABEL $label$26
	$10 = *($15 + [120])
	*($15 + [120]) = [0]
	if ( ($10 == 0) ){ goto $label$24 }
	$9 = *($10 + [20])
	if ( ($9 == 0) ){ goto $label$28 }
	*(($10 + [24])) = $9
	CALL $113($9)
	
.LABEL $label$28
	$9 = *($10 + [8])
	if ( ($9 == 0) ){ goto $label$29 }
	*(($10 + [12])) = $9
	CALL $113($9)
	
.LABEL $label$29
	CALL $113($10)
	
.LABEL $label$24
	$11 = *($0)
	CALL eosio_assert([1], [736])
	CALL eosio_assert(((int_32)*($8 + [28]) == (int_32)$4), [784])
	CALL eosio_assert(((int_64)*(($0 + [56])) == (int_64)CALL $fimport$2()), [832])
	$12 = *($8)
	CALL eosio_assert(((int_64)*(($3 + [8])) == (int_64)*(($8 + [16]))), [1008])
	$14 = (int_64)
	*($8 + [8]) = $14(*($8 + [8]) - *($3)))
	CALL eosio_assert(((int_64)$14 > (int_64)-4611686018427387904), [1056])
	CALL eosio_assert(((int_64)*($8 + [8]) < (int_64)4611686018427387904), [1088])
	CALL eosio_assert(((int_64)$12 == (int_64)*($8)), [1120])
	*($15 + [96]) = (($15 + [48]) + [28])
	*($15 + [92]) = ($15 + [48])
	*($15 + [88]) = ($15 + [48])
	*($15 + [120]) = ($15 + [88])
	*($15 + [108]) = ($8 + [8])
	*($15 + [104]) = $8
	*($15 + [112]) = ($8 + [24])
	CALL $55(($15 + [104]), ($15 + [120]))
	CALL db_update_i64(*($8 + [32]), $11, ($15 + [48]), [28])
	$10 = ($0 + [72])
	if ( (uint_64)($12 <= *($10)) ){ goto $label$3 }
	*($10) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($15 + [128])
}

void .FUNC _ZN5eosio14egc_texas_game9texasoverENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_6vectorIyNS5_IyEEEENS8_INS0_12player_pokerENS5_ISB_EEEE (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_32 $21
	int_32 $22
	$22 = (*([0] + [4]) - [176])
	*([0] + [4]) = $22
	CALL require_auth(*($0))
	if ( (*($1) & [1]) ){ goto $label$2 }
	$1 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($1 + [8])
	
.LABEL $label$1
	$10 = [-1]
	
.LOOP $label$3:
	$21 = ($1 + $10)
	$13 = ($10 + [1])
	$10 = $13
	if ( *(($21 + [1])) ){ goto $label$3 }
	$4 = (CASTING uint_64)(uint_32 $13)
	$11 = (int_64)0
	$18 = (int_64)59
	$19 = (int_64)0
	
.LOOP $label$4:
	$20 = (int_64)0
	if ( ((uint_64)$11 >= (uint_64)$4) ){ goto $label$5 }
	$10 = *($1)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$10 = ($10 + [165])
	goto $label$6 
	
.LABEL $label$7
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$20 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$9 }
	$20 = ((int_64)((int_64)$20 & (int_64)31) << (int_64)((int_64)$18 & (int_64)4294967295))
	goto $label$8 
	
.LABEL $label$9
	$20 = ((int_64)$20 & (int_64)15)
	
.LABEL $label$8
	$1 = ($1 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$19 = ((int_64)$20 | (int_64)$19)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$4 }
	*($22 + [168]) = $19
	$14 = *(($0 + [32]))
	$21 = *(($0 + [36]))
	if ( ((int_32)$21 == (int_32)$14) ){ goto $label$10 }
	$1 = ($21 + [-24])
	$13 = ([0] - $14)
	
.LOOP $label$11:
	if ( ((int_64)*(*($1)) == (int_64)$19) ){ goto $label$10 }
	$21 = $1
	$10 = ($1 + [-24])
	$1 = $10
	if ( ((int_32)($10 + $13) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	$5 = ($0 + [8])
	if ( ((int_32)$21 == (int_32)$14) ){ goto $label$15 }
	$6 = *(($21 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$5), [160])
	if ( $6 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$1 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-3838636552279642112, $19)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$13 }
	$6 = CALL $36($5, $1)
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$5), [160])
	
.LABEL $label$14
	if ( ((int_32)*($3 + [4]) == (int_32)*($3)) ){ goto $label$13 }
	if ( ((int_32)*(($6 + [24])) == (int_32)*($6 + [20])) ){ goto $label$13 }
	*(($10 = (($22 + [128]) + [32]))) = [0]
	*($22 + [144]) = (int_64)-1
	*($22 + [152]) = (int_64)0
	$11 = *($0)
	*($22 + [128]) = $11
	*($22 + [136]) = $11
	$1 = CALL db_find_i64($11, $11, (int_64)-2042756381877293056, $19)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$17 }
	$7 = CALL $69(($22 + [128]), $1)
	CALL eosio_assert(((int_32)*($7 + [20]) == (int_32)($22 + [128])), [160])
	$11 = *($0)
	CALL eosio_assert([1], [736])
	CALL $70(($22 + [128]), $7, $11)
	goto $label$16 
	
.LABEL $label$17
	$11 = *($0)
	*($22 + [80]) = ($22 + [168])
	*($22 + [8]) = $11
	CALL eosio_assert(((int_64)*($22 + [128]) == (int_64)CALL $fimport$2()), [1312])
	*($22 + [60]) = ($22 + [80])
	*($22 + [56]) = ($22 + [128])
	*($22 + [64]) = ($22 + [8])
	*(($1 = CALL $112([32])) + [16]) = [0]
	*($1 + [8 align=4]) = (int_64)0
	*($1 + [20]) = ($22 + [128])
	CALL $68(($22 + [56]), $1)
	*($22 + [112]) = $1
	$11 = *($1)
	*($22 + [56]) = $11
	$13 = *($1 + [24])
	*($22 + [96]) = $13
	$14 = ($22 + [156])
	$21 = *($14)
	if ( ((uint_32)$21 >= (uint_32)*($10)) ){ goto $label$19 }
	*($21 + [8]) = $11
	*($21 + [16]) = $13
	*($22 + [112]) = [0]
	*($21) = $1
	*($14) = ($21 + [24])
	goto $label$18 
	
.LABEL $label$19
	CALL $71(($22 + [152]), ($22 + [112]), ($22 + [56]), ($22 + [96]))
	
.LABEL $label$18
	$1 = *($22 + [112])
	*($22 + [112]) = [0]
	if ( ($1 == 0) ){ goto $label$20 }
	$10 = *($1 + [8])
	if ( ($10 == 0) ){ goto $label$21 }
	*(($1 + [12])) = $10
	CALL $113($10)
	
.LABEL $label$21
	CALL $113($1)
	
.LABEL $label$20
	$11 = *($22 + [168])
	$14 = *(($22 + [152]))
	$21 = *(($22 + [156]))
	if ( ((int_32)$21 == (int_32)$14) ){ goto $label$22 }
	$1 = ($21 + [-24])
	$13 = ([0] - $14)
	
.LOOP $label$23:
	if ( ((int_64)*(*($1)) == (int_64)$11) ){ goto $label$22 }
	$21 = $1
	$10 = ($1 + [-24])
	$1 = $10
	if ( ((int_32)($10 + $13) != (int_32)[-24]) ){ goto $label$23 }
	
.LABEL $label$22
	if ( ((int_32)$21 == (int_32)$14) ){ goto $label$24 }
	$7 = *(($21 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [20]) == (int_32)($22 + [128])), [160])
	goto $label$16 
	
.LABEL $label$24
	$7 = [0]
	$1 = CALL db_find_i64(*($22 + [128]), *(($22 + [136])), (int_64)-2042756381877293056, $11)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$16 }
	$7 = CALL $69(($22 + [128]), $1)
	CALL eosio_assert(((int_32)*($7 + [20]) == (int_32)($22 + [128])), [160])
	
.LABEL $label$16
	$11 = (int_64)0
	$10 = *(($6 + [24]))
	$21 = *(($6 + [20]))
	if ( ((int_32)$21 == (int_32)$10) ){ goto $label$25 }
	$11 = (int_64)0
	$1 = $21
	
.LOOP $label$26:
	$11 = ((int_64)*(($1 + [24])) + (int_64)$11)
	$1 = ($1 + [32])
	if ( ((int_32)$10 != (int_32)$1) ){ goto $label$26 }
	
.LABEL $label$25
	*($22 + [120]) = [0]
	*($22 + [112]) = (int_64)0
	$1 = [0]
	$13 = [0]
	$21 = ($10 - $21)
	$10 = int_32($21 >> [5])
	if ( ($10 == 0) ){ goto $label$27 }
	if ( ((uint_32)$10 >= (uint_32)[134217728]) ){ goto $label$12 }
	$1 = CALL $112($21)
	*(($22 + [120])) = ($1 + ($10 << [5]))
	*($22 + [112]) = $1
	*($22 + [116]) = $1
	$21 = *(($6 + [20]))
	$10 = (*(($6 + [24])) - $21)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$28 }
	CALL memcpy($1, $21, $10)
	$1 = (*($22 + [116]) + $10)
	*($22 + [116]) = $1
	$13 = *($22 + [112])
	goto $label$27 
	
.LABEL $label$28
	$13 = $1
	
.LABEL $label$27
	*($22 + [56]) = [12]
	CALL $73($13, $1, ($22 + [56]))
	CALL _ZN5eosio14egc_texas_game7chippotERNSt3__16vectorINS_11player_chipENS1_9allocatorIS3_EEEEy(($22 + [96]), $1, ($22 + [112]), $11)
	*($22 + [88]) = [0]
	*($22 + [80]) = (int_64)0
	$10 = *($22 + [96])
	*($22 + [76]) = $10
	$8 = (($22 + [96]) | [4])
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$29 }
	$9 = ((int_32)$7 != (int_32)[0])
	$12 = (($22 + [56]) + [8])
	$15 = ($3 + [4])
	$16 = ($6 + [12])
	
.LOOP $label$30:
	*($12) = (int_64)344826856192
	*($22 + [56]) = (int_64)0
	CALL eosio_assert([1], [368])
	$11 = (uint_64)*($12) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$32:
	$21 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$31 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$33 }
	
.LOOP $label$34:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$31 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$34 }
	
.LABEL $label$33
	$21 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$32 }
	
.LABEL $label$31
	CALL eosio_assert($21, [240])
	$13 = ($10 + [24])
	$14 = ($10 + [20])
	$21 = *($14)
	if ( ((int_32)$21 == (int_32)*($13)) ){ goto $label$35 }
	
.LOOP $label$36:
	$10 = *($15)
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$10) ){ goto $label$37 }
	$11 = *($21)
	
.LOOP $label$38:
	if ( ((int_64)$11 == (int_64)*($1)) ){ goto $label$37 }
	$1 = ($1 + [40])
	if ( ((int_32)$10 != (int_32)$1) ){ goto $label$38 }
	$1 = $10
	
.LABEL $label$37
	if ( ((int_32)*(($1 + [24])) == (int_32)*($1 + [20])) ){ goto $label$39 }
	if ( ((int_32)$1 == (int_32)$10) ){ goto $label$39 }
	if ( (int_64)(*($21 + [8]) == 0) ){ goto $label$39 }
	$10 = *($22 + [84])
	if ( ((int_32)$10 == (int_32)*((($22 + [80]) + [8]))) ){ goto $label$40 }
	CALL $64($10, $1)
	*($22 + [84]) = (*($22 + [84]) + [40])
	goto $label$39 
	
.LABEL $label$40
	CALL $75(($22 + [80]), $1)
	
.LABEL $label$39
	CALL prints([1456])
	CALL printn(*($21))
	CALL prints([1488])
	CALL $76(($21 + [8]))
	CALL eosio_assert(((int_64)*(($21 + [16])) == (int_64)*($12)), [896])
	$11 = ((int_64)*($22 + [56]) + (int_64)*($21 + [8]))
	*($22 + [56]) = $11
	CALL eosio_assert(((int_64)$11 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($22 + [56]) < (int_64)4611686018427387904), [976])
	$21 = ($21 + [32])
	if ( ((int_32)$21 != (int_32)*($13)) ){ goto $label$36 }
	
.LABEL $label$35
	$21 = *($3)
	if ( ((int_32)(*($15) - $21) != (int_32)[40]) ){ goto $label$41 }
	if ( ((int_32)*($22 + [84]) != (int_32)*($22 + [80])) ){ goto $label$41 }
	$10 = *($16)
	$1 = *(($6 + [8]))
	if ( ((int_32)$1 == (int_32)$10) ){ goto $label$42 }
	$11 = *($21)
	
.LOOP $label$43:
	if ( ((int_64)$11 == (int_64)*($1)) ){ goto $label$42 }
	$1 = ($1 + [32])
	if ( ((int_32)$10 != (int_32)$1) ){ goto $label$43 }
	$1 = $10
	
.LABEL $label$42
	CALL eosio_assert(((int_32)$1 != (int_32)$10), [1504])
	$1 = *($3)
	$10 = *($22 + [84])
	if ( ((int_32)$10 == (int_32)*((($22 + [80]) + [8]))) ){ goto $label$44 }
	CALL $64($10, $1)
	*($22 + [84]) = (*($22 + [84]) + [40])
	goto $label$41 
	
.LABEL $label$44
	CALL $75(($22 + [80]), $1)
	
.LABEL $label$41
	if ( ((int_32)*($22 + [84]) == (int_32)*($22 + [80])) ){ goto $label$29 }
	CALL _ZN5eosio14egc_texas_game13compare_cardsERNSt3__16vectorINS0_12player_pokerENS1_9allocatorIS3_EEEE(($22 + [40]), $0, ($22 + [80]))
	$1 = int_32((*($22 + [44]) - *($22 + [40])) >> [3])
	*($22 + [36]) = $1
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [1536])
	if ( (*($22 + [36]) == 0) ){ goto $label$45 }
	$21 = [0]
	
.LOOP $label$46:
	CALL prints([1552])
	$17 = ($21 << [3])
	CALL printn(*((*($22 + [40]) + $17)))
	$10 = *($13)
	$1 = *($14)
	if ( ((int_32)$1 == (int_32)$10) ){ goto $label$48 }
	$11 = *((*($22 + [40]) + $17))
	
.LOOP $label$49:
	if ( ((int_64)$11 == (int_64)*($1)) ){ goto $label$48 }
	$1 = ($1 + [32])
	if ( ((int_32)$10 != (int_32)$1) ){ goto $label$49 }
	goto $label$47 
	
.LABEL $label$48
	if ( ((int_32)$1 == (int_32)$10) ){ goto $label$47 }
	CALL eosio_assert(((int_64)*(($1 + [16])) == (int_64)*($12)), [1008])
	$11 = (int_64)
	*($22 + [56]) = $11(*($22 + [56]) - *($1 + [8])))
	CALL eosio_assert(((int_64)$11 > (int_64)-4611686018427387904), [1056])
	CALL eosio_assert(((int_64)*($22 + [56]) < (int_64)4611686018427387904), [1088])
	
.LABEL $label$47
	$21 = ($21 + [1])
	if ( ($21 <= *($22 + [36])) ){ goto $label$46 }
	
.LABEL $label$45
	$21 = *($22 + [40])
	*($22 + [32]) = $21
	if ( ((int_32)$21 == (int_32)*($22 + [44])) ){ goto $label$50 }
	
.LOOP $label$51:
	$10 = *($13)
	$1 = *($14)
	if ( ((int_32)$1 == (int_32)$10) ){ goto $label$54 }
	$11 = *($21)
	
.LOOP $label$55:
	if ( ((int_64)$11 == (int_64)*($1)) ){ goto $label$54 }
	$1 = ($1 + [32])
	if ( ((int_32)$10 != (int_32)$1) ){ goto $label$55 }
	*($22 + [24]) = $10
	$11 = *($0)
	goto $label$53 
	
.LABEL $label$54
	*($22 + [24]) = $1
	$11 = *($0)
	if ( ((int_32)$1 == (int_32)$10) ){ goto $label$53 }
	*(($1 = (($22 + [8]) + [8]))) = ($22 + [36])
	*(($10 = (($22 + [8]) + [12]))) = ($22 + [24])
	*($22 + [12]) = ($22 + [56])
	*($22 + [8]) = ($22 + [32])
	CALL eosio_assert([1], [736])
	CALL $80($5, $6, $11, ($22 + [8]))
	$11 = *($0)
	*($1) = ($22 + [36])
	*($10) = ($22 + [24])
	*($22 + [12]) = ($22 + [56])
	*($22 + [8]) = ($22 + [32])
	CALL eosio_assert($9, [736])
	CALL $81(($22 + [128]), $7, $11, ($22 + [8]))
	goto $label$52 
	
.LABEL $label$53
	*(($1 = (($22 + [8]) + [8]))) = ($22 + [36])
	*($22 + [12]) = ($22 + [56])
	*($22 + [8]) = ($22 + [32])
	CALL eosio_assert([1], [736])
	CALL $78($5, $6, $11, ($22 + [8]))
	$11 = *($0)
	*($1) = ($22 + [36])
	*($22 + [12]) = ($22 + [56])
	*($22 + [8]) = ($22 + [32])
	CALL eosio_assert($9, [736])
	CALL $79(($22 + [128]), $7, $11, ($22 + [8]))
	
.LABEL $label$52
	$21 = (*($22 + [32]) + [8])
	*($22 + [32]) = $21
	if ( ((int_32)$21 != (int_32)*($22 + [44])) ){ goto $label$51 }
	
.LABEL $label$50
	$13 = *($22 + [80])
	$1 = *($22 + [84])
	if ( ((int_32)$1 == (int_32)$13) ){ goto $label$56 }
	$21 = ([0] - $13)
	$1 = ($1 + [-32])
	
.LOOP $label$57:
	$10 = *(($1 + [12]))
	if ( ($10 == 0) ){ goto $label$58 }
	*(($1 + [16])) = $10
	CALL $113($10)
	
.LABEL $label$58
	$10 = *($1)
	if ( ($10 == 0) ){ goto $label$59 }
	*(($1 + [4])) = $10
	CALL $113($10)
	
.LABEL $label$59
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $21) != (int_32)[-32]) ){ goto $label$57 }
	
.LABEL $label$56
	*($22 + [84]) = $13
	$1 = *($22 + [40])
	if ( ($1 == 0) ){ goto $label$60 }
	*($22 + [44]) = $1
	CALL $113($1)
	
.LABEL $label$60
	$21 = *($22 + [76])
	$1 = *($21 + [4])
	if ( ($1 == 0) ){ goto $label$62 }
	
.LOOP $label$63:
	$10 = $1
	$1 = *($10)
	if ( $1 ){ goto $label$63 }
	goto $label$61 
	
.LABEL $label$62
	$10 = *($21 + [8])
	if ( ((int_32)*($10) == (int_32)$21) ){ goto $label$61 }
	$21 = ($21 + [8])
	
.LOOP $label$64:
	$1 = *($21)
	$21 = ($1 + [8])
	$10 = *($1 + [8])
	if ( ((int_32)$1 != (int_32)*($10)) ){ goto $label$64 }
	
.LABEL $label$61
	*($22 + [76]) = $10
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$30 }
	
.LABEL $label$29
	$11 = *($0)
	CALL eosio_assert([1], [736])
	CALL $82($5, $6, $11)
	$13 = *($22 + [80])
	if ( ($13 == 0) ){ goto $label$65 }
	$1 = *($22 + [84])
	if ( ((int_32)$1 == (int_32)$13) ){ goto $label$67 }
	$21 = ([0] - $13)
	$1 = ($1 + [-32])
	
.LOOP $label$68:
	$10 = *(($1 + [12]))
	if ( ($10 == 0) ){ goto $label$69 }
	*(($1 + [16])) = $10
	CALL $113($10)
	
.LABEL $label$69
	$10 = *($1)
	if ( ($10 == 0) ){ goto $label$70 }
	*(($1 + [4])) = $10
	CALL $113($10)
	
.LABEL $label$70
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $21) != (int_32)[-32]) ){ goto $label$68 }
	$1 = *($22 + [80])
	goto $label$66 
	
.LABEL $label$67
	$1 = $13
	
.LABEL $label$66
	*($22 + [84]) = $13
	CALL $113($1)
	
.LABEL $label$65
	CALL $83(($22 + [96]), *($22 + [100]))
	$1 = *($22 + [112])
	if ( ($1 == 0) ){ goto $label$71 }
	*($22 + [116]) = $1
	CALL $113($1)
	
.LABEL $label$71
	$13 = *($22 + [152])
	if ( ($13 == 0) ){ goto $label$13 }
	$0 = ($22 + [156])
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)$13) ){ goto $label$73 }
	
.LOOP $label$74:
	$1 = ($1 + [-24])
	$10 = *($1)
	*($1) = [0]
	if ( ($10 == 0) ){ goto $label$75 }
	$21 = *($10 + [8])
	if ( ($21 == 0) ){ goto $label$76 }
	*(($10 + [12])) = $21
	CALL $113($21)
	
.LABEL $label$76
	CALL $113($10)
	
.LABEL $label$75
	if ( ((int_32)$13 != (int_32)$1) ){ goto $label$74 }
	$1 = *(($22 + [152]))
	goto $label$72 
	
.LABEL $label$73
	$1 = $13
	
.LABEL $label$72
	*($0) = $13
	CALL $113($1)
	
.LABEL $label$13
	*([0] + [4]) = ($22 + [176])
	return (unreachable)
	
.LABEL $label$12
	CALL $116(($22 + [112]))
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = (*([0] + [4]) - [80])
	*([0] + [4]) = $3
	*(($5 = $3) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)0
	*(($5 + [40])) = [0]
	*($5 + [8]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $1
	*($5 + [64]) = $1
	*($5 + [72]) = ($1 + $0)
	CALL $48(($5 + [64]), ($5 + [8]))
	CALL $61(($5 + [64]), ($5 + [20]))
	CALL $62(($5 + [64]), ($5 + [32]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $63(($5 + [64]), ($5 + [8]))
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$5 }
	$4 = ($5 + [36])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$7 }
	$3 = ([0] - $2)
	$1 = ($1 + [-32])
	
.LOOP $label$8:
	$0 = *(($1 + [12]))
	if ( ($0 == 0) ){ goto $label$9 }
	*(($1 + [16])) = $0
	CALL $113($0)
	
.LABEL $label$9
	$0 = *($1)
	if ( ($0 == 0) ){ goto $label$10 }
	*(($1 + [4])) = $0
	CALL $113($0)
	
.LABEL $label$10
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $3) != (int_32)[-32]) ){ goto $label$8 }
	$1 = *(($5 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$1 = $2
	
.LABEL $label$6
	*($4) = $2
	CALL $113($1)
	
.LABEL $label$5
	$1 = *(($5 + [20]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($5 + [24])) = $1
	CALL $113($1)
	
.LABEL $label$11
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$12 }
	CALL $113(*(($5 + [16])))
	
.LABEL $label$12
	*([0] + [4]) = ($5 + [80])
	return [1]
}

void .FUNC _ZN5eosio14egc_texas_game11texasrewardENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEyNS_5assetE (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [16])
	*([0] + [4]) = $14
	*($14 + [8]) = $2
	CALL require_auth($2)
	if ( (*($1) & [1]) ){ goto $label$2 }
	$1 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($1 + [8])
	
.LABEL $label$1
	$4 = ($0 + [8])
	$9 = [-1]
	
.LOOP $label$3:
	$8 = ($1 + $9)
	$5 = ($9 + [1])
	$9 = $5
	if ( *(($8 + [1])) ){ goto $label$3 }
	$6 = (CASTING uint_64)(uint_32 $5)
	$11 = (int_64)0
	$10 = (int_64)59
	$12 = (int_64)0
	
.LOOP $label$4:
	$13 = (int_64)0
	if ( ((uint_64)$11 >= (uint_64)$6) ){ goto $label$5 }
	$9 = *($1)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$9 = ($9 + [165])
	goto $label$6 
	
.LABEL $label$7
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$9 }
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	goto $label$8 
	
.LABEL $label$9
	$13 = ((int_64)$13 & (int_64)15)
	
.LABEL $label$8
	$1 = ($1 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$4 }
	$7 = *(($0 + [32]))
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	$1 = ($8 + [-24])
	$5 = ([0] - $7)
	
.LOOP $label$11:
	if ( ((int_64)*(*($1)) == (int_64)$12) ){ goto $label$10 }
	$8 = $1
	$9 = ($1 + [-24])
	$1 = $9
	if ( ((int_32)($9 + $5) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$14 }
	$8 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)$4), [160])
	if ( $8 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$1 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-3838636552279642112, $12)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$12 }
	$8 = CALL $36($4, $1)
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)$4), [160])
	
.LABEL $label$13
	$9 = *(($8 + [12]))
	$1 = *($8 + [8])
	if ( ((int_32)$1 == (int_32)$9) ){ goto $label$15 }
	
.LOOP $label$16:
	if ( ((int_64)*($1) == (int_64)$2) ){ goto $label$15 }
	$1 = ($1 + [32])
	if ( ((int_32)$9 != (int_32)$1) ){ goto $label$16 }
	goto $label$12 
	
.LABEL $label$15
	if ( ((int_32)$1 == (int_32)$9) ){ goto $label$12 }
	CALL eosio_assert(((int_64)*(($1 + [16])) == (int_64)*($3 + [8])), [656])
	CALL eosio_assert(((int_64)*($1 + [8]) >= (int_64)*($3)), [1440])
	$11 = *($0)
	*($14 + [4]) = $3
	*($14) = ($14 + [8])
	CALL eosio_assert([1], [736])
	CALL $60($4, $8, $11, $14)
	
.LABEL $label$12
	*([0] + [4]) = ($14 + [16])
}

void .FUNC _ZN5eosio14egc_texas_game9texasdealENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_ (int_32 $0, int_32 $1, int_32 $2)
{
	CALL prints([1424])
}

void .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = *($0)
	$9 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $112(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $116($0)
	
.LABEL $label$1
	$2 = ($8 + ((int_32)$7 * (int_32)[40]))
	$9 = ($8 + ((int_32)$9 * (int_32)[40]))
	$8 = CALL $64($9, $1)
	$3 = ($8 + [40])
	$7 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$6 }
	$4 = ([0] - $7)
	$7 = ($1 + [-20])
	
.LOOP $label$7:
	*(($1 = ($8 + [-32]))) = (int_64)0
	*(($5 = ($8 + [-24]))) = [0]
	$6 = ($7 + [-12])
	*($1) = *($6)
	*(($8 + [-28])) = *(($7 + [-8]))
	*(($8 + [-40])) = *(($7 + [-20]))
	$1 = ($7 + [-4])
	*($5) = *($1)
	*($6) = (int_64)0
	*($1) = [0]
	*(($1 = ($8 + [-20]))) = (int_64)0
	*(($5 = ($8 + [-12]))) = [0]
	*($1) = *($7)
	*(($8 + [-16])) = *(($7 + [4]))
	$1 = ($7 + [8])
	*($5) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	*(($8 + [-8])) = *(($7 + [12]))
	$9 = ($9 + [-40])
	$8 = $9
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $4) != (int_32)[-20]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $7
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	$9 = ([0] - $1)
	$7 = ($7 + [-32])
	
.LOOP $label$9:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $113($8)
	
.LABEL $label$10
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$11 }
	*(($7 + [4])) = $8
	CALL $113($8)
	
.LABEL $label$11
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $9) != (int_32)[-32]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $113($1)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = [0]
	*(($5 + [40])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	CALL eosio_assert([1], [368])
	$3 = (int_64)5462355
	
.LOOP $label$5:
	$4 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($4, [240])
	*($5 + [72]) = ($0 + $2)
	*($5 + [64]) = $0
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [144])
	CALL memcpy(($5 + [8]), $0, [8])
	*($5 + [68]) = ($0 + [8])
	CALL $48(($5 + [64]), (($5 + [8]) + [8]))
	CALL eosio_assert(((uint_32)(*($5 + [72]) - *($5 + [68])) > (uint_32)[7]), [144])
	CALL memcpy(($5 + [32]), *($5 + [68]), [8])
	$1 = (*($5 + [68]) + [8])
	*($5 + [68]) = $1
	CALL eosio_assert(((uint_32)(*($5 + [72]) - $1) > (uint_32)[7]), [144])
	CALL memcpy(($5 + [40]), *($5 + [68]), [8])
	if ( ($2 <= [513]) ){ goto $label$8 }
	CALL free($0)
	
.LABEL $label$8
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $52(($5 + [64]), ($5 + [8]))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$9 }
	CALL $113(*(($5 + [24])))
	
.LABEL $label$9
	*([0] + [4]) = ($5 + [80])
	return [1]
}

void .FUNC _ZN5eosio14egc_texas_game10texasallinENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	*($13 + [24]) = $2
	CALL require_auth($2)
	if ( (*($1) & [1]) ){ goto $label$2 }
	$1 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($1 + [8])
	
.LABEL $label$1
	$3 = ($0 + [8])
	$8 = [-1]
	
.LOOP $label$3:
	$7 = ($1 + $8)
	$4 = ($8 + [1])
	$8 = $4
	if ( *(($7 + [1])) ){ goto $label$3 }
	$5 = (CASTING uint_64)(uint_32 $4)
	$10 = (int_64)0
	$9 = (int_64)59
	$11 = (int_64)0
	
.LOOP $label$4:
	$12 = (int_64)0
	if ( ((uint_64)$10 >= (uint_64)$5) ){ goto $label$5 }
	$8 = *($1)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$8 = ($8 + [165])
	goto $label$6 
	
.LABEL $label$7
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$9 }
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	goto $label$8 
	
.LABEL $label$9
	$12 = ((int_64)$12 & (int_64)15)
	
.LABEL $label$8
	$1 = ($1 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$4 }
	$6 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$10 }
	$1 = ($7 + [-24])
	$4 = ([0] - $6)
	
.LOOP $label$11:
	if ( ((int_64)*(*($1)) == (int_64)$11) ){ goto $label$10 }
	$7 = $1
	$8 = ($1 + [-24])
	$1 = $8
	if ( ((int_32)($8 + $4) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$14 }
	$7 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$3), [160])
	if ( $7 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$1 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-3838636552279642112, $11)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$12 }
	$7 = CALL $36($3, $1)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$3), [160])
	
.LABEL $label$13
	$8 = *(($7 + [12]))
	$1 = *($7 + [8])
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$15 }
	
.LOOP $label$16:
	if ( ((int_64)*($1) == (int_64)$2) ){ goto $label$15 }
	$1 = ($1 + [32])
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$16 }
	goto $label$12 
	
.LABEL $label$15
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$12 }
	CALL eosio_assert(((int_64)*($1 + [8]) > (int_64)0), [720])
	*(($13 + [16])) = *(($1 + [16]))
	*($13 + [8]) = *($1 + [8])
	$10 = *($0)
	*($13 + [4]) = ($13 + [8])
	*($13) = ($13 + [24])
	CALL eosio_assert([1], [736])
	CALL $51($3, $7, $10, $13)
	
.LABEL $label$12
	*([0] + [4]) = ($13 + [32])
}

void .FUNC $58 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$9 = (*([0] + [4]) - [48])
	$12 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [832])
	$4 = *($1)
	$10 = $4
	$3 = *(*($3))
	$6 = ($3 + [32])
	$11 = ($1 + [12])
	$5 = (*($11) - $6)
	$7 = int_32($5 >> [5])
	if ( ($7 == 0) ){ goto $label$1 }
	CALL memmove($3, $6, $5)
	$10 = *($1)
	
.LABEL $label$1
	*($11) = ($3 + ($7 << [5]))
	CALL eosio_assert(((int_64)$4 == (int_64)$10), [1120])
	$7 = *($1 + [8])
	$3 = *($11)
	$6 = ($3 - $7)
	$10 = (CASTING uint_64)(uint_32 int_32($6 >> [5]))
	$11 = [36]
	
.LOOP $label$2:
	$11 = ($11 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$7 = (((int_32)uint_32(($6 + [-32]) >> [5]) * (int_32)[28]) + $11)
	goto $label$3 
	
.LABEL $label$4
	$7 = ($11 + [-28])
	
.LABEL $label$3
	$3 = *(($1 + [20]))
	$11 = *(($1 + [24]))
	$6 = ($11 - $3)
	$10 = (CASTING uint_64)(uint_32 int_32($6 >> [5]))
	
.LOOP $label$5:
	$7 = ($7 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)$11) ){ goto $label$6 }
	$7 = ((((int_32)uint_32(($6 + [-32]) >> [5]) * (int_32)[25]) + $7) + [25])
	
.LABEL $label$6
	if ( ($7 <= [513]) ){ goto $label$8 }
	$8 = CALL malloc($7)
	goto $label$7 
	
.LABEL $label$8
	$8 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$7
	*($12 + [8]) = $8
	$5 = ($8 + $7)
	*($12 + [16]) = $5
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [608])
	CALL memcpy($8, $1, [8])
	$3 = ($8 + [8])
	*($12 + [12]) = $3
	$10 = (CASTING uint_64)(uint_32 int_32((*(($1 + [12])) - *(($1 + [8]))) >> [5]))
	$9 = ($8 + [9])
	
.LOOP $label$9:
	$11 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$6 = ((int_64)$10) != (int_64)0
	*($12 + [32]) = (($6) << [7]) | ($11 & [127]))
	CALL eosio_assert(((int_32)($5 - $3) > (int_32)[0]), [608])
	$11 = $9
	CALL memcpy(($11 + [-1]), ($12 + [32]), [1])
	*($12 + [12]) = $11
	$9 = ($11 + [1])
	$3 = $11
	if ( $6 ){ goto $label$9 }
	$9 = *(($1 + [12]))
	$3 = *(($1 + [8]))
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$10 }
	
.LOOP $label$11:
	*($12 + [24]) = ($12 + [8])
	*($12 + [32]) = $3
	*((($12 + [32]) + [8])) = ($3 + [24])
	*($12 + [36]) = ($3 + [8])
	CALL $39(($12 + [32]), ($12 + [24]))
	$3 = ($3 + [32])
	if ( ((int_32)$3 != (int_32)$9) ){ goto $label$11 }
	$11 = *($12 + [12])
	
.LABEL $label$10
	$10 = (CASTING uint_64)(uint_32 int_32((*(($1 + [24])) - *(($1 + [20]))) >> [5]))
	$6 = (($12 + [8]) + [8])
	
.LOOP $label$12:
	$3 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$9 = ((int_64)$10) != (int_64)0
	*($12 + [32]) = (($9) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($6) - $11) > (int_32)[0]), [608])
	CALL memcpy(*($12 + [12]), ($12 + [32]), [1])
	$11 = (*($12 + [12]) + [1])
	*($12 + [12]) = $11
	if ( $9 ){ goto $label$12 }
	$3 = *(($1 + [24]))
	$11 = *(($1 + [20]))
	if ( ((int_32)$11 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	*($12 + [24]) = ($12 + [8])
	*($12 + [32]) = $11
	*((($12 + [32]) + [8])) = ($11 + [24])
	*($12 + [36]) = ($11 + [8])
	CALL $40(($12 + [32]), ($12 + [24]))
	$11 = ($11 + [32])
	if ( ((int_32)$11 != (int_32)$3) ){ goto $label$14 }
	
.LABEL $label$13
	CALL db_update_i64(*($1 + [36]), $2, $8, $7)
	if ( ($7 <= [513]) ){ goto $label$15 }
	CALL free($8)
	
.LABEL $label$15
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$16 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	*([0] + [4]) = ($12 + [48])
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	CALL $117(($3 + [16]), $1)
	CALL $117($3, ($1 + [12]))
	$0 = *($0 + [4])
	$2 = *($0 + [4])
	$1 = (*(*($0)) + int_32($2 >> [1]))
	$0 = *($0)
	if ( (($2 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	CALL $117(($3 + [48]), ($3 + [16]))
	CALL $117(($3 + [32]), $3)
	CALL void $1((int_32 ($3 + [48])), (int_32 ($3 + [32])), (int_32 $0))
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$2 }
	CALL $113(*($3 + [40]))
	
.LABEL $label$2
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$3 }
	CALL $113(*($3 + [56]))
	
.LABEL $label$3
	if ( ((*($3) & [1]) == 0) ){ goto $label$4 }
	CALL $113(*($3 + [8]))
	
.LABEL $label$4
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $113(*($3 + [24]))
	
.LABEL $label$5
	*([0] + [4]) = ($3 + [64])
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [432])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [480])
	$3 = *($0 + [24])
	$4 = ($0 + [28])
	$7 = *($4)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$5 = ([0] - $3)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$8 = ($6 + [-24])
	$6 = $8
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [544])
	$8 = ($7 + [-24])
	$6 = *($4)
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$4 }
	$3 = ([0] - $6)
	$6 = $8
	
.LOOP $label$5:
	$8 = ($6 + [24])
	$5 = *($8)
	*($8) = [0]
	$7 = *($6)
	*($6) = $5
	if ( ($7 == 0) ){ goto $label$6 }
	$5 = *($7 + [20])
	if ( ($5 == 0) ){ goto $label$7 }
	*(($7 + [24])) = $5
	CALL $113($5)
	
.LABEL $label$7
	$5 = *($7 + [8])
	if ( ($5 == 0) ){ goto $label$8 }
	*(($7 + [12])) = $5
	CALL $113($5)
	
.LABEL $label$8
	CALL $113($7)
	
.LABEL $label$6
	*(($6 + [16])) = *(($6 + [40]))
	*(($6 + [8])) = *(($6 + [32]))
	$6 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$6 = *($7)
	*($7) = [0]
	if ( ($6 == 0) ){ goto $label$10 }
	$5 = *($6 + [20])
	if ( ($5 == 0) ){ goto $label$11 }
	*(($6 + [24])) = $5
	CALL $113($5)
	
.LABEL $label$11
	$5 = *($6 + [8])
	if ( ($5 == 0) ){ goto $label$12 }
	*(($6 + [12])) = $5
	CALL $113($5)
	
.LABEL $label$12
	CALL $113($6)
	
.LABEL $label$10
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $51 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$8 = (*([0] + [4]) - [64])
	$12 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [832])
	$4 = *($1)
	$10 = *(($1 + [24]))
	$11 = *($1 + [20])
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$3 }
	$9 = *(*($3))
	
.LOOP $label$4:
	if ( ((int_64)$9 == (int_64)*($11)) ){ goto $label$3 }
	$11 = ($11 + [32])
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$2 }
	$10 = *($3 + [4])
	CALL eosio_assert(((int_64)*($10 + [8]) == (int_64)*(($11 + [16]))), [896])
	$9 = ((int_64)*($11 + [8]) + (int_64)*($10))
	*($11 + [8]) = $9
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($11 + [8]) < (int_64)4611686018427387904), [976])
	*($11 + [24]) = [1]
	goto $label$1 
	
.LABEL $label$2
	$5 = ($1 + [20])
	*(($12 + [40])) = (int_64)344826856192
	*($12 + [32]) = (int_64)0
	CALL eosio_assert([1], [368])
	$9 = (int_64)1346979907
	$11 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$10 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$10 = [0]
	
.LABEL $label$5
	CALL eosio_assert($10, [240])
	*($12 + [48]) = [0]
	*($12 + [24]) = *(*($3))
	$11 = *($3 + [4])
	*(($12 + [44])) = *(($11 + [12]))
	*(($6 = (($12 + [24]) + [16]))) = *(($11 + [8]))
	*((($12 + [24]) + [12])) = *(($11 + [4]))
	*($12 + [32]) = *($11)
	*($12 + [48]) = [1]
	$10 = ($1 + [24])
	$11 = *($10)
	if ( ((int_32)$11 == (int_32)*(($1 + [28]))) ){ goto $label$10 }
	*($11) = *($12 + [24])
	*(($11 + [24])) = *((($12 + [24]) + [24]))
	*(($11 + [16])) = *($6)
	*(($11 + [8])) = *((($12 + [24]) + [8]))
	*($10) = (*($10) + [32])
	goto $label$1 
	
.LABEL $label$10
	CALL $38($5, ($12 + [24]))
	
.LABEL $label$1
	$6 = ($1 + [12])
	$10 = *($6)
	$11 = *($1 + [8])
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$11 }
	$9 = *(*($3))
	
.LOOP $label$12:
	if ( ((int_64)$9 == (int_64)*($11)) ){ goto $label$11 }
	$11 = ($11 + [32])
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$12 }
	$11 = $10
	
.LABEL $label$11
	*($11 + [8]) = (int_64)0
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1120])
	$3 = *($1 + [8])
	$10 = *($6)
	$6 = ($10 - $3)
	$9 = (CASTING uint_64)(uint_32 int_32($6 >> [5]))
	$11 = [36]
	
.LOOP $label$13:
	$11 = ($11 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$13 }
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$15 }
	$3 = (((int_32)uint_32(($6 + [-32]) >> [5]) * (int_32)[28]) + $11)
	goto $label$14 
	
.LABEL $label$15
	$3 = ($11 + [-28])
	
.LABEL $label$14
	$10 = *(($1 + [20]))
	$11 = *(($1 + [24]))
	$6 = ($11 - $10)
	$9 = (CASTING uint_64)(uint_32 int_32($6 >> [5]))
	
.LOOP $label$16:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$16 }
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$17 }
	$3 = ((((int_32)uint_32(($6 + [-32]) >> [5]) * (int_32)[25]) + $3) + [25])
	
.LABEL $label$17
	if ( ($3 <= [513]) ){ goto $label$19 }
	$7 = CALL malloc($3)
	goto $label$18 
	
.LABEL $label$19
	$7 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$18
	*($12 + [8]) = $7
	$5 = ($7 + $3)
	*($12 + [16]) = $5
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [608])
	CALL memcpy($7, $1, [8])
	$10 = ($7 + [8])
	*($12 + [12]) = $10
	$9 = (CASTING uint_64)(uint_32 int_32((*(($1 + [12])) - *(($1 + [8]))) >> [5]))
	$8 = ($7 + [9])
	
.LOOP $label$20:
	$11 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$6 = ((int_64)$9) != (int_64)0
	*($12 + [24]) = (($6) << [7]) | ($11 & [127]))
	CALL eosio_assert(((int_32)($5 - $10) > (int_32)[0]), [608])
	$11 = $8
	CALL memcpy(($11 + [-1]), ($12 + [24]), [1])
	*($12 + [12]) = $11
	$8 = ($11 + [1])
	$10 = $11
	if ( $6 ){ goto $label$20 }
	$8 = *(($1 + [12]))
	$10 = *(($1 + [8]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$21 }
	
.LOOP $label$22:
	*($12 + [56]) = ($12 + [8])
	*($12 + [24]) = $10
	*((($12 + [24]) + [8])) = ($10 + [24])
	*($12 + [28]) = ($10 + [8])
	CALL $39(($12 + [24]), ($12 + [56]))
	$10 = ($10 + [32])
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$22 }
	$11 = *($12 + [12])
	
.LABEL $label$21
	$9 = (CASTING uint_64)(uint_32 int_32((*(($1 + [24])) - *(($1 + [20]))) >> [5]))
	$6 = (($12 + [8]) + [8])
	
.LOOP $label$23:
	$10 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$8 = ((int_64)$9) != (int_64)0
	*($12 + [24]) = (($8) << [7]) | ($10 & [127]))
	CALL eosio_assert(((int_32)(*($6) - $11) > (int_32)[0]), [608])
	CALL memcpy(*($12 + [12]), ($12 + [24]), [1])
	$11 = (*($12 + [12]) + [1])
	*($12 + [12]) = $11
	if ( $8 ){ goto $label$23 }
	$10 = *(($1 + [24]))
	$11 = *(($1 + [20]))
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$24 }
	
.LOOP $label$25:
	*($12 + [56]) = ($12 + [8])
	*($12 + [24]) = $11
	*((($12 + [24]) + [8])) = ($11 + [24])
	*($12 + [28]) = ($11 + [8])
	CALL $40(($12 + [24]), ($12 + [56]))
	$11 = ($11 + [32])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$25 }
	
.LABEL $label$24
	CALL db_update_i64(*($1 + [36]), $2, $7, $3)
	if ( ($3 <= [513]) ){ goto $label$26 }
	CALL free($7)
	
.LABEL $label$26
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$27 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$27
	*([0] + [4]) = ($12 + [64])
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	$2 = *($1)
	CALL $117(($5 + [32]), ($1 + [8]))
	*(($3 = (($5 + [16]) + [8]))) = *(($1 + [32]))
	*($5 + [16]) = *($1 + [24])
	*((($5 + [48]) + [8])) = *($3)
	*($5 + [48]) = *($5 + [16])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $117(($5 + [80]), ($5 + [32]))
	$4 = *((($5 + [48]) + [8]))
	*((($5 + [64]) + [8])) = $4
	*(($5 + [8])) = $4
	$4 = *($5 + [48])
	*($5 + [64]) = $4
	*($5) = $4
	CALL void $0((int_32 $2), (int_64 ($5 + [80])), (int_32 $5), (int_32 $1))
	if ( ((*($5 + [80]) & [1]) == 0) ){ goto $label$2 }
	CALL $113(*($5 + [88]))
	
.LABEL $label$2
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$3 }
	CALL $113(*($5 + [40]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$7 = (*([0] + [4]) - [48])
	$11 = $7
	*([0] + [4]) = $7
	$10 = *($0 + [4])
	*($1) = *(*($10))
	$2 = *($0)
	$10 = *($10 + [4])
	$5 = ($1 + [12])
	$9 = *($5)
	if ( ((int_32)$9 == (int_32)*(($1 + [16]))) ){ goto $label$2 }
	*($9) = *($10)
	*(($9 + [24])) = *(($10 + [24]))
	*(($9 + [16])) = *(($10 + [16]))
	*(($9 + [8])) = *(($10 + [8]))
	$9 = (*($5) + [32])
	*($5) = $9
	$4 = ($1 + [8])
	goto $label$1 
	
.LABEL $label$2
	$4 = ($1 + [8])
	CALL $56($4, $10)
	$9 = *($5)
	
.LABEL $label$1
	$5 = *($4)
	$3 = ($9 - $5)
	$8 = (CASTING uint_64)(uint_32 int_32($3 >> [5]))
	$10 = [36]
	
.LOOP $label$3:
	$10 = ($10 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$5 }
	$5 = (((int_32)uint_32(($3 + [-32]) >> [5]) * (int_32)[28]) + $10)
	goto $label$4 
	
.LABEL $label$5
	$5 = ($10 + [-28])
	
.LABEL $label$4
	$9 = *(($1 + [20]))
	$10 = *(($1 + [24]))
	$3 = ($10 - $9)
	$8 = (CASTING uint_64)(uint_32 int_32($3 >> [5]))
	
.LOOP $label$6:
	$5 = ($5 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$7 }
	$5 = ((((int_32)uint_32(($3 + [-32]) >> [5]) * (int_32)[25]) + $5) + [25])
	
.LABEL $label$7
	if ( ($5 <= [513]) ){ goto $label$9 }
	$6 = CALL malloc($5)
	goto $label$8 
	
.LABEL $label$9
	$6 = ($7 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$8
	*($11 + [8]) = $6
	$3 = ($6 + $5)
	*($11 + [16]) = $3
	CALL eosio_assert(((int_32)$5 > (int_32)[7]), [608])
	CALL memcpy($6, $1, [8])
	$9 = ($6 + [8])
	*($11 + [12]) = $9
	$7 = ($6 + [9])
	$8 = (CASTING uint_64)(uint_32 int_32((*(($1 + [12])) - *($4)) >> [5]))
	
.LOOP $label$10:
	$10 = (CASTING uint_32)(uint_64 $8)
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	$4 = ((int_64)$8) != (int_64)0
	*($11 + [32]) = (($4) << [7]) | ($10 & [127]))
	CALL eosio_assert(((int_32)($3 - $9) > (int_32)[0]), [608])
	$10 = $7
	CALL memcpy(($10 + [-1]), ($11 + [32]), [1])
	*($11 + [12]) = $10
	$7 = ($10 + [1])
	$9 = $10
	if ( $4 ){ goto $label$10 }
	$7 = *(($1 + [12]))
	$9 = *($1 + [8])
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	*($11 + [24]) = ($11 + [8])
	*($11 + [32]) = $9
	*((($11 + [32]) + [8])) = ($9 + [24])
	*($11 + [36]) = ($9 + [8])
	CALL $39(($11 + [32]), ($11 + [24]))
	$9 = ($9 + [32])
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$12 }
	$10 = *($11 + [12])
	
.LABEL $label$11
	$8 = (CASTING uint_64)(uint_32 int_32((*(($1 + [24])) - *(($1 + [20]))) >> [5]))
	$4 = ($11 + [16])
	
.LOOP $label$13:
	$9 = (CASTING uint_32)(uint_64 $8)
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	$7 = ((int_64)$8) != (int_64)0
	*($11 + [32]) = (($7) << [7]) | ($9 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $10) > (int_32)[0]), [608])
	CALL memcpy(*($11 + [12]), ($11 + [32]), [1])
	$10 = (*($11 + [12]) + [1])
	*($11 + [12]) = $10
	if ( $7 ){ goto $label$13 }
	$9 = *(($1 + [24]))
	$10 = *(($1 + [20]))
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$14 }
	
.LOOP $label$15:
	*($11 + [24]) = ($11 + [8])
	*($11 + [32]) = $10
	*((($11 + [32]) + [8])) = ($10 + [24])
	*($11 + [36]) = ($10 + [8])
	CALL $40(($11 + [32]), ($11 + [24]))
	$10 = ($10 + [32])
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$15 }
	
.LABEL $label$14
	$8 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)-3838636552279642112, *(*($0 + [8])), $8, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$16 }
	CALL free($6)
	
.LABEL $label$16
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$17 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	*([0] + [4]) = ($11 + [48])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$9 = (*([0] + [4]) - [48])
	$12 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [832])
	$7 = *(($3 + [8]))
	$6 = *(($3 + [4]))
	$4 = *($1)
	$10 = *(*($3))
	$11 = *(($1 + [12]))
	$3 = *($1 + [8])
	if ( ((int_32)$3 == (int_32)$11) ){ goto $label$1 }
	
.LOOP $label$2:
	if ( ((int_64)$10 == (int_64)*($3)) ){ goto $label$1 }
	$3 = ($3 + [32])
	if ( ((int_32)$11 != (int_32)$3) ){ goto $label$2 }
	$3 = $11
	
.LABEL $label$1
	if ( ((int_64)*($3) != (int_64)$10) ){ goto $label$4 }
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)*(($3 + [16]))), [896])
	$10 = ((int_64)*($3 + [8]) + (int_64)*($6))
	*($3 + [8]) = $10
	CALL eosio_assert(((int_64)$10 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($3 + [8]) < (int_64)4611686018427387904), [976])
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$11 == (int_32)*(($1 + [16]))) ){ goto $label$5 }
	*($11) = *($7)
	*(($11 + [24])) = *(($7 + [24]))
	*(($11 + [16])) = *(($7 + [16]))
	*(($11 + [8])) = *(($7 + [8]))
	*(($3 = ($1 + [12]))) = (*($3) + [32])
	goto $label$3 
	
.LABEL $label$5
	CALL $56(($1 + [8]), $7)
	
.LABEL $label$3
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1120])
	$7 = *(($1 + [8]))
	$11 = *(($1 + [12]))
	$6 = ($11 - $7)
	$10 = (CASTING uint_64)(uint_32 int_32($6 >> [5]))
	$3 = [36]
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$11) ){ goto $label$8 }
	$7 = (((int_32)uint_32(($6 + [-32]) >> [5]) * (int_32)[28]) + $3)
	goto $label$7 
	
.LABEL $label$8
	$7 = ($3 + [-28])
	
.LABEL $label$7
	$11 = *(($1 + [20]))
	$3 = *(($1 + [24]))
	$6 = ($3 - $11)
	$10 = (CASTING uint_64)(uint_32 int_32($6 >> [5]))
	
.LOOP $label$9:
	$7 = ($7 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$11 == (int_32)$3) ){ goto $label$10 }
	$7 = ((((int_32)uint_32(($6 + [-32]) >> [5]) * (int_32)[25]) + $7) + [25])
	
.LABEL $label$10
	if ( ($7 <= [513]) ){ goto $label$12 }
	$8 = CALL malloc($7)
	goto $label$11 
	
.LABEL $label$12
	$8 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$11
	*($12 + [8]) = $8
	$5 = ($8 + $7)
	*($12 + [16]) = $5
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [608])
	CALL memcpy($8, $1, [8])
	$11 = ($8 + [8])
	*($12 + [12]) = $11
	$10 = (CASTING uint_64)(uint_32 int_32((*(($1 + [12])) - *(($1 + [8]))) >> [5]))
	$9 = ($8 + [9])
	
.LOOP $label$13:
	$3 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$6 = ((int_64)$10) != (int_64)0
	*($12 + [32]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)($5 - $11) > (int_32)[0]), [608])
	$3 = $9
	CALL memcpy(($3 + [-1]), ($12 + [32]), [1])
	*($12 + [12]) = $3
	$9 = ($3 + [1])
	$11 = $3
	if ( $6 ){ goto $label$13 }
	$9 = *(($1 + [12]))
	$11 = *(($1 + [8]))
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$14 }
	
.LOOP $label$15:
	*($12 + [24]) = ($12 + [8])
	*($12 + [32]) = $11
	*((($12 + [32]) + [8])) = ($11 + [24])
	*($12 + [36]) = ($11 + [8])
	CALL $39(($12 + [32]), ($12 + [24]))
	$11 = ($11 + [32])
	if ( ((int_32)$11 != (int_32)$9) ){ goto $label$15 }
	$3 = *($12 + [12])
	
.LABEL $label$14
	$10 = (CASTING uint_64)(uint_32 int_32((*(($1 + [24])) - *(($1 + [20]))) >> [5]))
	$6 = (($12 + [8]) + [8])
	
.LOOP $label$16:
	$11 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$9 = ((int_64)$10) != (int_64)0
	*($12 + [32]) = (($9) << [7]) | ($11 & [127]))
	CALL eosio_assert(((int_32)(*($6) - $3) > (int_32)[0]), [608])
	CALL memcpy(*($12 + [12]), ($12 + [32]), [1])
	$3 = (*($12 + [12]) + [1])
	*($12 + [12]) = $3
	if ( $9 ){ goto $label$16 }
	$11 = *(($1 + [24]))
	$3 = *(($1 + [20]))
	if ( ((int_32)$3 == (int_32)$11) ){ goto $label$17 }
	
.LOOP $label$18:
	*($12 + [24]) = ($12 + [8])
	*($12 + [32]) = $3
	*((($12 + [32]) + [8])) = ($3 + [24])
	*($12 + [36]) = ($3 + [8])
	CALL $40(($12 + [32]), ($12 + [24]))
	$3 = ($3 + [32])
	if ( ((int_32)$3 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	CALL db_update_i64(*($1 + [36]), $2, $8, $7)
	if ( ($7 <= [513]) ){ goto $label$19 }
	CALL free($8)
	
.LABEL $label$19
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$20 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$20
	*([0] + [4]) = ($12 + [48])
}

void .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [144])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [144])
	CALL memcpy($0, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$2 = int_32(($6 - $5) >> [5])
	$3 = ($2 + [1])
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$3 }
	$4 = [134217727]
	$7 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($7 >> [5]) > (uint_32)[67108862]) ){ goto $label$5 }
	$4 = int_32($7 >> [4])
	$4 = ( $3 ? $4 : ($4 <= $3) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[134217728]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $112(($4 << [5]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $116($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($2 << [5])))) = *($1)
	*(($3 + [24])) = *(($1 + [24]))
	*(($3 + [16])) = *(($1 + [16]))
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($6 - $5)
	$6 = ($3 - $1)
	$4 = ($7 + ($4 << [5]))
	$3 = ($3 + [32])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($6, $5, $1)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $113($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	CALL $117($4, $1)
	$2 = *($1 + [16])
	$0 = *($0 + [4])
	$3 = *($0 + [4])
	$1 = (*(*($0)) + int_32($3 >> [1]))
	$0 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	CALL $117(($4 + [16]), $4)
	CALL void $1((int_32 ($4 + [16])), (int_32 $2), (int_64 $0))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $113(*($4 + [24]))
	
.LABEL $label$2
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	CALL $113(*($4 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [32])
}

void .FUNC $116 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $112($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $114 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $35 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $112(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $116($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $113($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $113($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $112 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10268])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $113 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $110 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10262]) == 0) ){ goto $label$2 }
	$7 = *([0] + [10264])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [10262]) = [1]
	$7 = ($7 << [16])
	*([0] + [10264]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10264])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [10264]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [10262]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [10262]) = [1]
	$3 = ($3 << [16])
	*([0] + [10264]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10264])
	
.LABEL $label$8
	*([0] + [10264]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [10152])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [9960]
	$1 = (((int_32)$2 * (int_32)[12]) + [9960])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $112($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $116($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $113($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $28 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [28]) == (int_32)$0), [432])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [480])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [544])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $113($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $113($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [32]))
}

void .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [608])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [608])
	CALL memcpy(*($2 + [4]), $0, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

int_32 .FUNC _ZN5eosio14egc_texas_gameC2Ey (int_32 $0, int_64 $1)
{
	*($0 + [8]) = $1
	*($0) = $1
	*(($0 + [16])) = $1
	*(($0 + [24])) = (int_64)-1
	*(($0 + [32])) = (int_64)0
	*(($0 + [40])) = [0]
	*($0 + [56]) = $1
	*(($0 + [64])) = $1
	*(($0 + [72])) = (int_64)-1
	*(($0 + [80])) = [0]
	*(($0 + [84])) = [0]
	*(($0 + [88])) = [0]
	return $0
}

void .FUNC $106 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [28]) == (int_32)$0), [784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [832])
	$4 = *($1)
	$5 = ((int_64)*(*($3)) / (int_64)10000)
	CALL eosio_assert((uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [368])
	$6 = (int_64)1346979907
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [240])
	CALL eosio_assert(((int_64)*(($1 + [16])) == (int_64)344826856192), [896])
	$6 = ((int_64)*($1 + [8]) + (int_64)$5)
	*($1 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [976])
	*($1 + [24]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1120])
	$7 = $9
	$3 = ($7 + [-32])
	*([0] + [4]) = $3
	*($8 + [12]) = $3
	*($8 + [8]) = $3
	*($8 + [16]) = ($7 + [-4])
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($1 + [8])
	*($8 + [32]) = $1
	*($8 + [40]) = ($1 + [24])
	CALL $55(($8 + [32]), ($8 + [24]))
	CALL db_update_i64(*($1 + [32]), $2, $3, [28])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($8 + [48])
}

int_32 .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($6 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	*($5) = (int_64)0
	*($5 + [36]) = $1
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + $3)
	CALL $48(($5 + [32]), $5)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	CALL $117(($5 + [16]), $5)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL $117(($5 + [32]), ($5 + [16]))
	CALL void $1((int_32 ($5 + [32])), (int_32 $4))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL $113(*($5 + [40]))
	
.LABEL $label$6
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$7 }
	CALL $113(*($5 + [24]))
	
.LABEL $label$7
	if ( ((*($5) & [1]) == 0) ){ goto $label$8 }
	CALL $113(*(($5 + [8])))
	
.LABEL $label$8
	*([0] + [4]) = ($5 + [48])
	return [1]
}

void .FUNC _ZN5eosio14egc_texas_game10texasclearENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_32 $22
	$22 = (*([0] + [4]) - [144])
	*([0] + [4]) = $22
	CALL require_auth(*($0))
	if ( (*($1) & [1]) ){ goto $label$2 }
	$1 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($1 + [8])
	
.LABEL $label$1
	$2 = ($0 + [8])
	$9 = [-1]
	
.LOOP $label$3:
	$8 = ($1 + $9)
	$3 = ($9 + [1])
	$9 = $3
	if ( *(($8 + [1])) ){ goto $label$3 }
	$4 = (CASTING uint_64)(uint_32 $3)
	$19 = (int_64)0
	$21 = (int_64)59
	$20 = (int_64)0
	
.LOOP $label$4:
	$18 = (int_64)0
	if ( ((uint_64)$19 >= (uint_64)$4) ){ goto $label$5 }
	$9 = *($1)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$9 = ($9 + [165])
	goto $label$6 
	
.LABEL $label$7
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	if ( ((uint_64)$19 > (uint_64)(int_64)11) ){ goto $label$9 }
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	goto $label$8 
	
.LABEL $label$9
	$18 = ((int_64)$18 & (int_64)15)
	
.LABEL $label$8
	$1 = ($1 + [1])
	$19 = ((int_64)$19 + (int_64)1)
	$20 = ((int_64)$18 | (int_64)$20)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$4 }
	$7 = *(($0 + [32]))
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	$1 = ($8 + [-24])
	$3 = ([0] - $7)
	
.LOOP $label$11:
	if ( ((int_64)*(*($1)) == (int_64)$20) ){ goto $label$10 }
	$8 = $1
	$9 = ($1 + [-24])
	$1 = $9
	if ( ((int_32)($9 + $3) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$15 }
	$5 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [32]) == (int_32)$2), [160])
	if ( $5 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$1 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-3838636552279642112, $20)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$13 }
	$5 = CALL $36($2, $1)
	CALL eosio_assert(((int_32)*($5 + [32]) == (int_32)$2), [160])
	
.LABEL $label$14
	$8 = *($5 + [20])
	*($22 + [124]) = $8
	$17 = ($5 + [24])
	$1 = *($17)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$16 }
	$6 = ($22 | [1])
	$10 = (($22 + [64]) + [8])
	$12 = (($22 + [16]) + [16])
	$7 = (($22 + [16]) + [32])
	$13 = ($7 + [4])
	$14 = ($22 + [108])
	$16 = ($22 + [56])
	$15 = ($22 + [100])
	
.LOOP $label$17:
	if ( ((int_64)*($8 + [8]) < (int_64)1) ){ goto $label$18 }
	$4 = *($0)
	$19 = (int_64)0
	$18 = (int_64)59
	$1 = [224]
	$20 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$19 > (uint_64)(int_64)5) ){ goto $label$24 }
	$9 = *($1)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$9 = ($9 + [165])
	goto $label$22 
	
.LABEL $label$24
	$21 = (int_64)0
	if ( ((uint_64)$19 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$21 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$21 = ((int_64)((int_64)$21 & (int_64)31) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$20
	$1 = ($1 + [1])
	$19 = ((int_64)$19 + (int_64)1)
	$20 = ((int_64)$21 | (int_64)$20)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$19 }
	*($10) = $20
	*($22 + [64]) = $4
	$19 = (int_64)0
	$18 = (int_64)59
	$1 = [112]
	$20 = (int_64)0
	
.LOOP $label$25:
	if ( ((uint_64)$19 > (uint_64)(int_64)7) ){ goto $label$30 }
	$9 = *($1)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$9 = ($9 + [165])
	goto $label$28 
	
.LABEL $label$30
	$21 = (int_64)0
	if ( ((uint_64)$19 <= (uint_64)(int_64)11) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$21 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	$21 = ((int_64)((int_64)$21 & (int_64)31) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$26
	$1 = ($1 + [1])
	$19 = ((int_64)$19 + (int_64)1)
	$20 = ((int_64)$21 | (int_64)$20)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$25 }
	$21 = ((int_64)*($8 + [8]) * (int_64)10000)
	CALL eosio_assert((uint_64)(((int_64)$21 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [368])
	$19 = (int_64)4411461
	$1 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $19) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$19 = (uint_64)$19 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$19) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$19 = (uint_64)$19 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$19) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$9 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$9 = [0]
	
.LABEL $label$31
	CALL eosio_assert($9, [240])
	*(($9 = ($22 + [8]))) = [0]
	*($22) = (int_64)0
	$1 = CALL strlen([1200])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$38 }
	*($22) = ($1 << [1])
	$3 = $6
	if ( $1 ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$38
	$11 = (($1 + [16]) & [-16])
	$3 = CALL $112($11)
	*($9) = $3
	*($22) = ($11 | [1])
	*($22 + [4]) = $1
	
.LABEL $label$37
	CALL memcpy($3, [1200], $1)
	
.LABEL $label$36
	*(($3 + $1)) = [0]
	*((($22 + [16]) + [8])) = *($8)
	*((($22 + [16]) + [24])) = (int_64)1129334020
	*($12) = $21
	*($13) = *($22 + [4 align=4])
	*($22 + [16]) = *($0)
	*($7) = *($22)
	*($22) = [0]
	*($22 + [4]) = [0]
	*($9) = [0]
	CALL $27(($22 + [128]), CALL $26(($22 + [80]), ($22 + [64]), (int_64)-3838636544615976944, $20, ($22 + [16])))
	$1 = *($22 + [128])
	CALL send_inline($1, (*($22 + [132]) - $1))
	$1 = *($22 + [128])
	if ( ($1 == 0) ){ goto $label$39 }
	*($22 + [132]) = $1
	CALL $113($1)
	
.LABEL $label$39
	$1 = *($14)
	if ( ($1 == 0) ){ goto $label$40 }
	*((($22 + [80]) + [32])) = $1
	CALL $113($1)
	
.LABEL $label$40
	$1 = *((($22 + [80]) + [16]))
	if ( ($1 == 0) ){ goto $label$41 }
	*($15) = $1
	CALL $113($1)
	
.LABEL $label$41
	if ( ((*($7) & [1]) == 0) ){ goto $label$42 }
	CALL $113(*($16))
	
.LABEL $label$42
	if ( ((*($22) & [1]) == 0) ){ goto $label$43 }
	CALL $113(*($9))
	
.LABEL $label$43
	$1 = *($17)
	$8 = *($22 + [124])
	
.LABEL $label$18
	$8 = ($8 + [32])
	*($22 + [124]) = $8
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$17 }
	
.LABEL $label$16
	$8 = *($5 + [8])
	*($22 + [124]) = $8
	$17 = ($5 + [12])
	if ( ((int_32)$8 == (int_32)*($17)) ){ goto $label$44 }
	$6 = ($22 | [1])
	$10 = (($22 + [64]) + [8])
	$12 = (($22 + [16]) + [16])
	$7 = (($22 + [16]) + [32])
	$13 = ($7 + [4])
	$14 = ($22 + [108])
	$16 = ($22 + [56])
	$15 = ($22 + [100])
	
.LOOP $label$45:
	CALL prints([1232])
	if ( ((int_64)*($8 + [8]) < (int_64)1) ){ goto $label$46 }
	$4 = *($0)
	$19 = (int_64)0
	$18 = (int_64)59
	$1 = [224]
	$20 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$19 > (uint_64)(int_64)5) ){ goto $label$52 }
	$9 = *($1)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$9 = ($9 + [165])
	goto $label$50 
	
.LABEL $label$52
	$21 = (int_64)0
	if ( ((uint_64)$19 <= (uint_64)(int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$21 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$21 = ((int_64)((int_64)$21 & (int_64)31) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$48
	$1 = ($1 + [1])
	$19 = ((int_64)$19 + (int_64)1)
	$20 = ((int_64)$21 | (int_64)$20)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$47 }
	*($10) = $20
	*($22 + [64]) = $4
	$19 = (int_64)0
	$18 = (int_64)59
	$1 = [112]
	$20 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$19 > (uint_64)(int_64)7) ){ goto $label$58 }
	$9 = *($1)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$9 = ($9 + [165])
	goto $label$56 
	
.LABEL $label$58
	$21 = (int_64)0
	if ( ((uint_64)$19 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$21 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$21 = ((int_64)((int_64)$21 & (int_64)31) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$54
	$1 = ($1 + [1])
	$19 = ((int_64)$19 + (int_64)1)
	$20 = ((int_64)$21 | (int_64)$20)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$53 }
	$21 = ((int_64)*($8 + [8]) * (int_64)10000)
	CALL eosio_assert((uint_64)(((int_64)$21 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [368])
	$19 = (int_64)4411461
	$1 = [0]
	
.LOOP $label$61:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $19) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$60 }
	$19 = (uint_64)$19 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$19) & (int_64)255) != (int_64)0) ){ goto $label$62 }
	
.LOOP $label$63:
	$19 = (uint_64)$19 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$19) & (int_64)255) != (int_64)0) ){ goto $label$60 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$63 }
	
.LABEL $label$62
	$9 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$61 }
	goto $label$59 
	
.LABEL $label$60
	$9 = [0]
	
.LABEL $label$59
	CALL eosio_assert($9, [240])
	*(($9 = ($22 + [8]))) = [0]
	*($22) = (int_64)0
	$1 = CALL strlen([1264])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$66 }
	*($22) = ($1 << [1])
	$3 = $6
	if ( $1 ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$66
	$11 = (($1 + [16]) & [-16])
	$3 = CALL $112($11)
	*($9) = $3
	*($22) = ($11 | [1])
	*($22 + [4]) = $1
	
.LABEL $label$65
	CALL memcpy($3, [1264], $1)
	
.LABEL $label$64
	*(($3 + $1)) = [0]
	*((($22 + [16]) + [8])) = *($8)
	*((($22 + [16]) + [24])) = (int_64)1129334020
	*($12) = $21
	*($13) = *($22 + [4 align=4])
	*($22 + [16]) = *($0)
	*($7) = *($22)
	*($22) = [0]
	*($22 + [4]) = [0]
	*($9) = [0]
	CALL $27(($22 + [128]), CALL $26(($22 + [80]), ($22 + [64]), (int_64)-3838636544615976944, $20, ($22 + [16])))
	$1 = *($22 + [128])
	CALL send_inline($1, (*($22 + [132]) - $1))
	$1 = *($22 + [128])
	if ( ($1 == 0) ){ goto $label$67 }
	*($22 + [132]) = $1
	CALL $113($1)
	
.LABEL $label$67
	$1 = *($14)
	if ( ($1 == 0) ){ goto $label$68 }
	*((($22 + [80]) + [32])) = $1
	CALL $113($1)
	
.LABEL $label$68
	$1 = *((($22 + [80]) + [16]))
	if ( ($1 == 0) ){ goto $label$69 }
	*($15) = $1
	CALL $113($1)
	
.LABEL $label$69
	if ( ((*($7) & [1]) == 0) ){ goto $label$70 }
	CALL $113(*($16))
	
.LABEL $label$70
	if ( ((*($22) & [1]) == 0) ){ goto $label$71 }
	CALL $113(*($9))
	
.LABEL $label$71
	$8 = *($22 + [124])
	
.LABEL $label$46
	$8 = ($8 + [32])
	*($22 + [124]) = $8
	if ( ((int_32)$8 != (int_32)*($17)) ){ goto $label$45 }
	
.LABEL $label$44
	CALL eosio_assert([1], [288])
	CALL eosio_assert([1], [336])
	$1 = CALL db_next_i64(*($5 + [36]), ($22 + [16]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$72 }
	CALL $36($2, $1)
	
.LABEL $label$72
	CALL $50($2, $5)
	
.LABEL $label$13
	*([0] + [4]) = ($22 + [144])
	return (unreachable)
	
.LABEL $label$12
	CALL $114($22)
}

void .FUNC _ZN5eosio14egc_texas_game11texasredeemEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [144])
	*([0] + [4]) = $12
	CALL require_auth($1)
	$2 = *(($0 + [80]))
	$6 = *(($0 + [84]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$7 = ($6 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$1 }
	$6 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [56])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$6 }
	$6 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [28]) == (int_32)$3), [160])
	if ( $6 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$7 = CALL db_find_i64(*(($0 + [56])), *(($0 + [64])), (int_64)-3838636559280373760, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = CALL $25($3, $7)
	CALL eosio_assert(((int_32)*($6 + [28]) == (int_32)$3), [160])
	
.LABEL $label$5
	$4 = *($0)
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [224]
	$10 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$12 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$5 = ($5 + [165])
	goto $label$10 
	
.LABEL $label$12
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$8
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$7 }
	*($12 + [80]) = $10
	*($12 + [72]) = $4
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [112]
	$10 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$18 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$5 = ($5 + [165])
	goto $label$16 
	
.LABEL $label$18
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$14
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$13 }
	$11 = ((int_64)*($6 + [8]) * (int_64)10000)
	CALL eosio_assert((uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [368])
	$9 = (int_64)4411461
	$7 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	
.LOOP $label$23:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$23 }
	
.LABEL $label$22
	$5 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	$5 = [0]
	
.LABEL $label$19
	CALL eosio_assert($5, [240])
	*(($12 + [16])) = [0]
	*($12 + [8]) = (int_64)0
	$7 = CALL strlen([272])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$26 }
	*($12 + [8]) = ($7 << [1])
	$5 = (($12 + [8]) | [1])
	if ( $7 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$2 = (($7 + [16]) & [-16])
	$5 = CALL $112($2)
	*($12 + [8]) = ($2 | [1])
	*($12 + [16]) = $5
	*($12 + [12]) = $7
	
.LABEL $label$25
	CALL memcpy($5, [272], $7)
	
.LABEL $label$24
	*(($5 + $7)) = [0]
	*(($12 + [48])) = (int_64)1129334020
	*(($12 + [60])) = *($12 + [12])
	*($12 + [32]) = $1
	$7 = ($12 + [16])
	*(($12 + [64])) = *($7)
	*($12 + [24]) = *($0)
	*($12 + [40]) = $11
	*($12 + [56]) = *($12 + [8])
	*($12 + [8]) = [0]
	*($12 + [12]) = [0]
	*($7) = [0]
	$7 = CALL $26(($12 + [88]), ($12 + [72]), (int_64)-3838636544615976944, $10, ($12 + [24]))
	CALL $27(($12 + [128]), $7)
	$5 = *($12 + [128])
	CALL send_inline($5, (*($12 + [132]) - $5))
	$5 = *($12 + [128])
	if ( ($5 == 0) ){ goto $label$27 }
	*($12 + [132]) = $5
	CALL $113($5)
	
.LABEL $label$27
	$5 = *($7 + [28])
	if ( ($5 == 0) ){ goto $label$28 }
	*(($7 + [32])) = $5
	CALL $113($5)
	
.LABEL $label$28
	$5 = *($7 + [16])
	if ( ($5 == 0) ){ goto $label$29 }
	*(($7 + [20])) = $5
	CALL $113($5)
	
.LABEL $label$29
	if ( ((*(($12 + [56])) & [1]) == 0) ){ goto $label$30 }
	CALL $113(*(($12 + [64])))
	
.LABEL $label$30
	if ( ((*($12 + [8]) & [1]) == 0) ){ goto $label$31 }
	CALL $113(*(($12 + [16])))
	
.LABEL $label$31
	CALL eosio_assert([1], [288])
	CALL eosio_assert([1], [336])
	$7 = CALL db_next_i64(*($6 + [32]), ($12 + [24]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$32 }
	CALL $25($3, $7)
	
.LABEL $label$32
	CALL $28($3, $6)
	
.LABEL $label$4
	*([0] + [4]) = ($12 + [144])
	return (unreachable)
	
.LABEL $label$3
	CALL $114(($12 + [8]))
}

void .FUNC _ZN5eosio14egc_texas_game10texasblindENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEyNS_5assetE (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [16])
	*([0] + [4]) = $14
	*($14 + [8]) = $2
	CALL require_auth(*($0))
	if ( (*($1) & [1]) ){ goto $label$2 }
	$1 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($1 + [8])
	
.LABEL $label$1
	$4 = ($0 + [8])
	$9 = [-1]
	
.LOOP $label$3:
	$8 = ($1 + $9)
	$5 = ($9 + [1])
	$9 = $5
	if ( *(($8 + [1])) ){ goto $label$3 }
	$6 = (CASTING uint_64)(uint_32 $5)
	$11 = (int_64)0
	$10 = (int_64)59
	$12 = (int_64)0
	
.LOOP $label$4:
	$13 = (int_64)0
	if ( ((uint_64)$11 >= (uint_64)$6) ){ goto $label$5 }
	$9 = *($1)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$9 = ($9 + [165])
	goto $label$6 
	
.LABEL $label$7
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$9 }
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	goto $label$8 
	
.LABEL $label$9
	$13 = ((int_64)$13 & (int_64)15)
	
.LABEL $label$8
	$1 = ($1 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$4 }
	$7 = *(($0 + [32]))
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	$1 = ($8 + [-24])
	$5 = ([0] - $7)
	
.LOOP $label$11:
	if ( ((int_64)*(*($1)) == (int_64)$12) ){ goto $label$10 }
	$8 = $1
	$9 = ($1 + [-24])
	$1 = $9
	if ( ((int_32)($9 + $5) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$14 }
	$8 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)$4), [160])
	if ( $8 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$1 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-3838636552279642112, $12)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$12 }
	$8 = CALL $36($4, $1)
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)$4), [160])
	
.LABEL $label$13
	$9 = *(($8 + [12]))
	$1 = *($8 + [8])
	if ( ((int_32)$1 == (int_32)$9) ){ goto $label$15 }
	
.LOOP $label$16:
	if ( ((int_64)*($1) == (int_64)$2) ){ goto $label$15 }
	$1 = ($1 + [32])
	if ( ((int_32)$9 != (int_32)$1) ){ goto $label$16 }
	goto $label$12 
	
.LABEL $label$15
	if ( ((int_32)$1 == (int_32)$9) ){ goto $label$12 }
	CALL eosio_assert([1], [368])
	$11 = (int_64)1346979907
	$9 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	
.LOOP $label$21:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$21 }
	
.LABEL $label$20
	$5 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	$5 = [0]
	
.LABEL $label$17
	CALL eosio_assert($5, [240])
	$11 = *($1 + [8])
	CALL eosio_assert(((int_64)*(($1 + [16])) == (int_64)*($3 + [8])), [656])
	CALL eosio_assert(((int_64)$11 >= (int_64)*($3)), [720])
	$11 = *($0)
	*($14 + [4]) = $3
	*($14) = ($14 + [8])
	CALL eosio_assert([1], [736])
	CALL $37($4, $8, $11, $14)
	
.LABEL $label$12
	*([0] + [4]) = ($14 + [16])
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [624])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$2 = ($0 + [24])
	*(($4 = CALL $112([40])) + [16]) = (int_64)344826856192
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [368])
	$3 = ($4 + [8])
	$7 = (int_64)1346979907
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [240])
	*($4 + [28]) = $0
	*($4 + [24]) = [0]
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = $3
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + [24])
	CALL $34(($8 + [32]), ($8 + [24]))
	*($4 + [32]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [32]) = $7
	$6 = *($4 + [32])
	*($8 + [4]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $35($2, ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $113($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [144])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $29($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [608])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [608])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $31(CALL $30($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $26 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $112([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $29($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $32(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

int_32 .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $110($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [10176])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [624])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $112([32])) + [16]) = [0]
	*($6 + [8 align=4]) = (int_64)0
	*($6 + [20]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [144])
	CALL memcpy($6, $4, [8])
	*($8 + [36]) = ($4 + [8])
	CALL $42(($8 + [32]), ($6 + [8]))
	*($6 + [24]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [24])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $71(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [12])) = $7
	CALL $113($7)
	
.LABEL $label$10
	CALL $113($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$4 = (*([0] + [4]) - [48])
	$10 = $4
	*([0] + [4]) = $4
	*($1) = *(*(*($0 + [4])))
	$3 = *($1 + [8])
	$5 = *(($1 + [12]))
	$6 = ($5 - $3)
	$9 = (CASTING uint_64)(uint_32 int_32($6 >> [5]))
	$2 = *($0)
	$8 = [33]
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$3 }
	$6 = (((int_32)uint_32(($6 + [-32]) >> [5]) * (int_32)[25]) + $8)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($8 + [-25])
	
.LABEL $label$2
	if ( ($6 <= [513]) ){ goto $label$5 }
	$7 = CALL malloc($6)
	goto $label$4 
	
.LABEL $label$5
	$7 = ($4 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$4
	*($10 + [8]) = $7
	$3 = ($7 + $6)
	*($10 + [16]) = $3
	CALL eosio_assert(((int_32)$6 > (int_32)[7]), [608])
	CALL memcpy($7, $1, [8])
	$8 = ($7 + [8])
	*($10 + [12]) = $8
	$9 = (CASTING uint_64)(uint_32 int_32((*(($1 + [12])) - *(($1 + [8]))) >> [5]))
	
.LOOP $label$6:
	$4 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$5 = ((int_64)$9) != (int_64)0
	*($10 + [32]) = (($5) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)($3 - $8) > (int_32)[0]), [608])
	CALL memcpy($8, ($10 + [32]), [1])
	$8 = ($8 + [1])
	*($10 + [12]) = $8
	if ( $5 ){ goto $label$6 }
	$4 = *(($1 + [12]))
	$8 = *(($1 + [8]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$7 }
	
.LOOP $label$8:
	*($10 + [24]) = ($10 + [8])
	*($10 + [32]) = $8
	*((($10 + [32]) + [8])) = ($8 + [24])
	*($10 + [36]) = ($8 + [8])
	CALL $40(($10 + [32]), ($10 + [24]))
	$8 = ($8 + [32])
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$9 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($2 + [8]), (int_64)-2042756381877293056, *(*($0 + [8])), $9, $7, $6)
	if ( ($6 <= [513]) ){ goto $label$9 }
	CALL free($7)
	
.LABEL $label$9
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$10 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*([0] + [4]) = ($10 + [48])
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $109([1768], $0)
}

void .FUNC $65 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$4 = (*(*($0)) + int_32($6 >> [1]))
	$5 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$5 = *((*($4) + $5))
	
.LABEL $label$1
	CALL $117(($7 + [32]), $1)
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$0 = (*($2 + [4]) - *($2))
	$1 = int_32($0 >> [3])
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ((uint_32)$1 >= (uint_32)[536870912]) ){ goto $label$3 }
	$0 = CALL $112($0)
	*(($7 + [24])) = ($0 + ($1 << [3]))
	*($7 + [16]) = $0
	*($7 + [20]) = $0
	$1 = *($2)
	$2 = (*(($2 + [4])) - $1)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($0, $1, $2)
	*($7 + [20]) = (*($7 + [20]) + $2)
	
.LABEL $label$4
	*($7 + [8]) = [0]
	*($7) = (int_64)0
	$2 = (*($3 + [4]) - *($3))
	$1 = ((int_32)$2 / (int_32)[40])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ((uint_32)$1 >= (uint_32)[107374183]) ){ goto $label$2 }
	$0 = CALL $112($2)
	*(($7 + [8])) = ($0 + ((int_32)$1 * (int_32)[40]))
	*($7) = $0
	*($7 + [4]) = $0
	$3 = *(($3 + [4]))
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	CALL $64($0, $2)
	$0 = (*($7 + [4]) + [40])
	*($7 + [4]) = $0
	$2 = ($2 + [40])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$5
	CALL void $4((int_32 ($7 + [32])), (int_32 ($7 + [16])), (int_32 $7), (int_32 $5))
	$5 = *($7)
	if ( ($5 == 0) ){ goto $label$7 }
	$2 = *($7 + [4])
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$9 }
	$3 = ([0] - $5)
	$2 = ($2 + [-32])
	
.LOOP $label$10:
	$0 = *(($2 + [12]))
	if ( ($0 == 0) ){ goto $label$11 }
	*(($2 + [16])) = $0
	CALL $113($0)
	
.LABEL $label$11
	$0 = *($2)
	if ( ($0 == 0) ){ goto $label$12 }
	*(($2 + [4])) = $0
	CALL $113($0)
	
.LABEL $label$12
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-32]) ){ goto $label$10 }
	$2 = *($7)
	goto $label$8 
	
.LABEL $label$9
	$2 = $5
	
.LABEL $label$8
	*($7 + [4]) = $5
	CALL $113($2)
	
.LABEL $label$7
	$2 = *($7 + [16])
	if ( ($2 == 0) ){ goto $label$13 }
	*($7 + [20]) = $2
	CALL $113($2)
	
.LABEL $label$13
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$14 }
	CALL $113(*($7 + [40]))
	
.LABEL $label$14
	*([0] + [4]) = ($7 + [48])
	return (unreachable)
	
.LABEL $label$3
	CALL $116(($7 + [16]))
	
.LABEL $label$2
	CALL $116($7)
	(unreachable)
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*(($0 + [12])) = (int_64)0
	*($0 + [8]) = [0]
	*($0) = *($1)
	$3 = (*(($1 + [12])) - *($1 + [8]))
	$2 = int_32($3 >> [3])
	if ( ($2 == 0) ){ goto $label$3 }
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$2 }
	$3 = CALL $112($3)
	*(($0 + [8])) = $3
	*(($0 + [16])) = ($3 + ($2 << [3]))
	*(($2 = ($0 + [12]))) = $3
	$4 = *(($1 + [8]))
	$5 = (*(($1 + [12])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($3, $4, $5)
	*($2) = (*($2) + $5)
	
.LABEL $label$3
	*($0 + [20 align=4]) = (int_64)0
	*(($0 + [28])) = [0]
	$3 = (*(($1 + [24])) - *($1 + [20]))
	$2 = int_32($3 >> [3])
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	$3 = CALL $112($3)
	*(($0 + [20])) = $3
	*(($0 + [28])) = ($3 + ($2 << [3]))
	*(($2 = ($0 + [24]))) = $3
	$4 = *(($1 + [20]))
	$5 = (*(($1 + [24])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($3, $4, $5)
	*($2) = (*($2) + $5)
	
.LABEL $label$4
	*($0 + [32]) = *($1 + [32])
	return $0
	
.LABEL $label$2
	CALL $116(($0 + [8]))
	
.LABEL $label$1
	CALL $116(($0 + [20]))
	(unreachable)
	return (unreachable)
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $2) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$3 = *($0)
	$4 = int_32(($2 - $3) >> [3])
	$2 = ($4 + $1)
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = ($7 - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($7 >> [2])
	$6 = ( $2 ? $6 : ($6 <= $2) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$7 = CALL $112(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $2
	$7 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	*(($0 + [4])) = ($2 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $116($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$3 = ($7 + ($6 << [3]))
	$2 = ($7 + ($4 << [3]))
	$6 = $2
	$7 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$4 = ($2 + ($1 << [3]))
	$6 = *($0)
	$5 = ($0 + [4])
	$7 = (*($5) - $6)
	$1 = ($2 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($5) = $4
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $113($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $8) / (int_32)[40]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$6 = ((int_32)($8 - $5) / (int_32)[40])
	$7 = ($6 + $1)
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$3 }
	$8 = [107374182]
	$2 = ((int_32)($2 - $5) / (int_32)[40])
	if ( ((uint_32)$2 > (uint_32)[53687090]) ){ goto $label$6 }
	$8 = ($2 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $112(((int_32)$8 * (int_32)[40]))
	goto $label$2 
	
.LABEL $label$5
	$2 = ($0 + [4])
	
.LOOP $label$7:
	*(($8 = CALL memset($8, [0], [40])) + [8 align=4]) = (int_64)0
	*(($8 + [16])) = (int_64)0
	*(($8 + [24])) = (int_64)0
	$8 = (*($2) + [40])
	*($2) = $8
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$8 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $116($0)
	
.LABEL $label$2
	$3 = ($2 + ((int_32)$8 * (int_32)[40]))
	$8 = ($2 + ((int_32)$6 * (int_32)[40]))
	$2 = $8
	
.LOOP $label$8:
	*(($2 = CALL memset($2, [0], [40])) + [8 align=4]) = (int_64)0
	*(($2 + [16])) = (int_64)0
	*(($2 + [24])) = (int_64)0
	$2 = ($2 + [40])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$10 }
	$4 = ([0] - $1)
	$1 = ($5 + [-20])
	
.LOOP $label$11:
	*(($5 = ($8 + [-32]))) = (int_64)0
	*(($6 = ($8 + [-24]))) = [0]
	$7 = ($1 + [-12])
	*($5) = *($7)
	*(($8 + [-28])) = *(($1 + [-8]))
	*(($8 + [-40])) = *(($1 + [-20]))
	$5 = ($1 + [-4])
	*($6) = *($5)
	*($7) = (int_64)0
	*($5) = [0]
	*(($5 = ($8 + [-20]))) = (int_64)0
	*(($6 = ($8 + [-12]))) = [0]
	*($5) = *($1)
	*(($8 + [-16])) = *(($1 + [4]))
	$5 = ($1 + [8])
	*($6) = *($5)
	*($5) = [0]
	*($1) = (int_64)0
	*(($8 + [-8])) = *(($1 + [12]))
	$8 = ($8 + [-40])
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $4) != (int_32)[-20]) ){ goto $label$11 }
	$1 = *(($0 + [4]))
	$5 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$5 = $1
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $2
	*(($0 + [8])) = $3
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$12 }
	$2 = ([0] - $5)
	$1 = ($1 + [-32])
	
.LOOP $label$13:
	$8 = *(($1 + [12]))
	if ( ($8 == 0) ){ goto $label$14 }
	*(($1 + [16])) = $8
	CALL $113($8)
	
.LABEL $label$14
	$8 = *($1)
	if ( ($8 == 0) ){ goto $label$15 }
	*(($1 + [4])) = $8
	CALL $113($8)
	
.LABEL $label$15
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $2) != (int_32)[-32]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($5 == 0) ){ goto $label$1 }
	CALL $113($5)
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1184])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = int_32(($3 - $4) >> [3])
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $67($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + ($5 << [3]))
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	
.LOOP $label$6:
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $7) > (uint_32)[7]), [144])
	CALL memcpy($4, *($5), [8])
	$7 = (*($5) + [8])
	*($5) = $7
	$4 = ($4 + [8])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $60 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = (*([0] + [4]) - [48])
	$12 = $6
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [832])
	$7 = *(($3 + [4]))
	$4 = *($1)
	$5 = ($1 + [12])
	$10 = *($5)
	$11 = *($1 + [8])
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$1 }
	$9 = *(*($3))
	
.LOOP $label$2:
	if ( ((int_64)$9 == (int_64)*($11)) ){ goto $label$1 }
	$11 = ($11 + [32])
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$2 }
	$11 = $10
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)*(($11 + [16]))), [1008])
	$9 = (int_64)
	*($11 + [8]) = $9(*($11 + [8]) - *($7)))
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [1056])
	CALL eosio_assert(((int_64)*($11 + [8]) < (int_64)4611686018427387904), [1088])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1120])
	$7 = *($1 + [8])
	$10 = *($5)
	$3 = ($10 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($3 >> [5]))
	$11 = [36]
	
.LOOP $label$3:
	$11 = ($11 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$7 == (int_32)$10) ){ goto $label$5 }
	$7 = (((int_32)uint_32(($3 + [-32]) >> [5]) * (int_32)[28]) + $11)
	goto $label$4 
	
.LABEL $label$5
	$7 = ($11 + [-28])
	
.LABEL $label$4
	$10 = *(($1 + [20]))
	$11 = *(($1 + [24]))
	$3 = ($11 - $10)
	$9 = (CASTING uint_64)(uint_32 int_32($3 >> [5]))
	
.LOOP $label$6:
	$7 = ($7 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$7 }
	$7 = ((((int_32)uint_32(($3 + [-32]) >> [5]) * (int_32)[25]) + $7) + [25])
	
.LABEL $label$7
	if ( ($7 <= [513]) ){ goto $label$9 }
	$8 = CALL malloc($7)
	goto $label$8 
	
.LABEL $label$9
	$8 = ($6 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$8
	*($12 + [8]) = $8
	$5 = ($8 + $7)
	*($12 + [16]) = $5
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [608])
	CALL memcpy($8, $1, [8])
	$10 = ($8 + [8])
	*($12 + [12]) = $10
	$9 = (CASTING uint_64)(uint_32 int_32((*(($1 + [12])) - *(($1 + [8]))) >> [5]))
	$3 = ($8 + [9])
	
.LOOP $label$10:
	$11 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$6 = ((int_64)$9) != (int_64)0
	*($12 + [32]) = (($6) << [7]) | ($11 & [127]))
	CALL eosio_assert(((int_32)($5 - $10) > (int_32)[0]), [608])
	$11 = $3
	CALL memcpy(($11 + [-1]), ($12 + [32]), [1])
	*($12 + [12]) = $11
	$3 = ($11 + [1])
	$10 = $11
	if ( $6 ){ goto $label$10 }
	$3 = *(($1 + [12]))
	$10 = *(($1 + [8]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$11 }
	
.LOOP $label$12:
	*($12 + [24]) = ($12 + [8])
	*($12 + [32]) = $10
	*((($12 + [32]) + [8])) = ($10 + [24])
	*($12 + [36]) = ($10 + [8])
	CALL $39(($12 + [32]), ($12 + [24]))
	$10 = ($10 + [32])
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$12 }
	$11 = *($12 + [12])
	
.LABEL $label$11
	$9 = (CASTING uint_64)(uint_32 int_32((*(($1 + [24])) - *(($1 + [20]))) >> [5]))
	$6 = (($12 + [8]) + [8])
	
.LOOP $label$13:
	$10 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$3 = ((int_64)$9) != (int_64)0
	*($12 + [32]) = (($3) << [7]) | ($10 & [127]))
	CALL eosio_assert(((int_32)(*($6) - $11) > (int_32)[0]), [608])
	CALL memcpy(*($12 + [12]), ($12 + [32]), [1])
	$11 = (*($12 + [12]) + [1])
	*($12 + [12]) = $11
	if ( $3 ){ goto $label$13 }
	$10 = *(($1 + [24]))
	$11 = *(($1 + [20]))
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$14 }
	
.LOOP $label$15:
	*($12 + [24]) = ($12 + [8])
	*($12 + [32]) = $11
	*((($12 + [32]) + [8])) = ($11 + [24])
	*($12 + [36]) = ($11 + [8])
	CALL $40(($12 + [32]), ($12 + [24]))
	$11 = ($11 + [32])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$15 }
	
.LABEL $label$14
	CALL db_update_i64(*($1 + [36]), $2, $8, $7)
	if ( ($7 <= [513]) ){ goto $label$16 }
	CALL free($8)
	
.LABEL $label$16
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$17 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	*([0] + [4]) = ($12 + [48])
}

void .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL $117(($5 + [32]), $1)
	*($5 + [24]) = [0]
	*($5 + [16]) = (int_64)0
	$4 = (*(($1 + [16])) - *($1 + [12]))
	$3 = int_32($4 >> [3])
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$2 }
	$4 = CALL $112($4)
	*(($5 + [24])) = ($4 + ($3 << [3]))
	*($5 + [16]) = $4
	*($5 + [20]) = $4
	$2 = *(($1 + [12]))
	$3 = (*(($1 + [16])) - $2)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($4, $2, $3)
	*($5 + [20]) = (*($5 + [20]) + $3)
	
.LABEL $label$3
	*($5 + [8]) = [0]
	*($5) = (int_64)0
	$4 = (*(($1 + [28])) - *($1 + [24]))
	$2 = ((int_32)$4 / (int_32)[40])
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$2 >= (uint_32)[107374183]) ){ goto $label$1 }
	$3 = CALL $112($4)
	*(($5 + [8])) = ($3 + ((int_32)$2 * (int_32)[40]))
	*($5) = $3
	*($5 + [4]) = $3
	$1 = *(($1 + [28]))
	$4 = *(($1 + [24]))
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$4 }
	
.LOOP $label$5:
	CALL $64($3, $4)
	$3 = (*($5 + [4]) + [40])
	*($5 + [4]) = $3
	$4 = ($4 + [40])
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$4
	CALL $65($0, ($5 + [32]), ($5 + [16]), $5)
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$6 }
	$4 = *($5 + [4])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$8 }
	$1 = ([0] - $2)
	$4 = ($4 + [-32])
	
.LOOP $label$9:
	$3 = *(($4 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($4 + [16])) = $3
	CALL $113($3)
	
.LABEL $label$10
	$3 = *($4)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($4 + [4])) = $3
	CALL $113($3)
	
.LABEL $label$11
	$4 = ($4 + [-40])
	if ( ((int_32)($4 + $1) != (int_32)[-32]) ){ goto $label$9 }
	$4 = *($5)
	goto $label$7 
	
.LABEL $label$8
	$4 = $2
	
.LABEL $label$7
	*($5 + [4]) = $2
	CALL $113($4)
	
.LABEL $label$6
	$4 = *($5 + [16])
	if ( ($4 == 0) ){ goto $label$12 }
	*($5 + [20]) = $4
	CALL $113($4)
	
.LABEL $label$12
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$13 }
	CALL $113(*($5 + [40]))
	
.LABEL $label$13
	*([0] + [4]) = ($5 + [48])
	return (unreachable)
	
.LABEL $label$2
	CALL $116(($5 + [16]))
	
.LABEL $label$1
	CALL $116($5)
	(unreachable)
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [1184])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$6 = *($1)
	$2 = *($1 + [4])
	$7 = ((int_32)($2 - $6) / (int_32)[40])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$7) ){ goto $label$3 }
	CALL $66($1, ($4 - $7))
	$2 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$7) ){ goto $label$2 }
	$4 = ((int_32)$4 * (int_32)[40])
	$3 = ($6 + $4)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$4 }
	$6 = (([0] - $6) - $4)
	$4 = ($2 + [-32])
	
.LOOP $label$5:
	$7 = *(($4 + [12]))
	if ( ($7 == 0) ){ goto $label$6 }
	*(($4 + [16])) = $7
	CALL $113($7)
	
.LABEL $label$6
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [4])) = $7
	CALL $113($7)
	
.LABEL $label$7
	$4 = ($4 + [-40])
	if ( ((int_32)($4 + $6) != (int_32)[-32]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $3
	$2 = $3
	
.LABEL $label$2
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$9:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [144])
	CALL memcpy($7, *($4), [8])
	*($4) = (*($4) + [8])
	CALL $61($0, ($7 + [8]))
	CALL $61($0, ($7 + [20]))
	CALL eosio_assert(((uint_32)(*($3) - *($4)) > (uint_32)[7]), [144])
	CALL memcpy(($7 + [32]), *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$9 }
	
.LABEL $label$8
	return $0
}

void .FUNC $101 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	CALL $117(($5 + [32]), $1)
	*(($5 + [28])) = *(($1 + [36]))
	*(($3 = (($5 + [16]) + [8]))) = *(($1 + [32]))
	*($5 + [16]) = *($1 + [24])
	*($5 + [20]) = *(($1 + [28]))
	$2 = *($1 + [16])
	*((($5 + [48]) + [8])) = *($3)
	*($5 + [48]) = *($5 + [16])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $117(($5 + [80]), ($5 + [32]))
	$4 = *((($5 + [48]) + [8]))
	*((($5 + [64]) + [8])) = $4
	*(($5 + [8])) = $4
	$4 = *($5 + [48])
	*($5 + [64]) = $4
	*($5) = $4
	CALL void $0((int_32 ($5 + [80])), (int_32 $2), (int_64 $5), (int_32 $1))
	if ( ((*($5 + [80]) & [1]) == 0) ){ goto $label$2 }
	CALL $113(*($5 + [88]))
	
.LABEL $label$2
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$3 }
	CALL $113(*($5 + [40]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

int_32 .FUNC $100 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [32])
	*([0] + [4]) = $16
	$15 = int_32(($1 - $0) >> [5])
	if ( ((uint_32)$15 > (uint_32)[5]) ){ goto $label$9 }
	$8 = [1]
	goto $label$1 
	
.LABEL $label$11
	$15 = ($1 + [-32])
	if ( (CALL int_32 $15((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$1 }
	$9 = ($0 + [24])
	*(($2 = ($16 + [24]))) = *($9)
	$11 = ($0 + [16])
	*(($10 = ($16 + [16]))) = *($11)
	$3 = ($0 + [8])
	*(($12 = ($16 + [8]))) = *($3)
	*($16) = *($0)
	$13 = ($15 + [24])
	*($9) = *($13)
	$9 = ($15 + [16])
	*($11) = *($9)
	$11 = ($15 + [8])
	*($3) = *($11)
	*($0) = *($15)
	*($13) = *($2)
	*($9) = *($10)
	*($11) = *($12)
	*($15) = *($16)
	goto $label$1 
	
.LABEL $label$10
	$15 = ($0 + [32])
	$10 = CALL int_32 $15((int_32 $0), (int_32 *($2)))
	$9 = ($1 + [-32])
	$11 = CALL int_32 $9((int_32 $15), (int_32 *($2)))
	if ( ($10 == 0) ){ goto $label$6 }
	$12 = ($0 + [24])
	*(($10 = ($16 + [24]))) = *($12)
	$13 = ($0 + [16])
	*(($3 = ($16 + [16]))) = *($13)
	$14 = ($0 + [8])
	*(($1 = ($16 + [8]))) = *($14)
	*($16) = *($0)
	if ( ($11 == 0) ){ goto $label$4 }
	*($0) = *($9)
	$15 = ($9 + [24])
	*($12) = *($15)
	$0 = ($9 + [16])
	*($13) = *($0)
	$2 = ($9 + [8])
	*($14) = *($2)
	*($15) = *($10)
	*($9) = *($16)
	*($0) = *($3)
	*($2) = *($1)
	goto $label$1 
	
.LABEL $label$9
	$15 = ($0 + [32])
	$9 = CALL int_32 $15((int_32 $0), (int_32 *($2)))
	$8 = ($0 + [64])
	$10 = CALL int_32 $8((int_32 $15), (int_32 *($2)))
	if ( ($9 == 0) ){ goto $label$5 }
	$11 = ($0 + [24])
	*(($9 = ($16 + [24]))) = *($11)
	$3 = ($0 + [16])
	*(($12 = ($16 + [16]))) = *($3)
	$14 = ($0 + [8])
	*(($13 = ($16 + [8]))) = *($14)
	*($16) = *($0)
	if ( ($10 == 0) ){ goto $label$3 }
	*($0) = *($8)
	$15 = ($8 + [24])
	*($11) = *($15)
	$10 = ($8 + [16])
	*($3) = *($10)
	$11 = ($8 + [8])
	*($14) = *($11)
	*($15) = *($9)
	*($10) = *($12)
	*($11) = *($13)
	*($8) = *($16)
	goto $label$2 
	
.LABEL $label$8
	CALL $99($0, ($0 + [32]), ($0 + [64]), ($1 + [-32]), $2)
	goto $label$1 
	
.LABEL $label$7
	$15 = ($0 + [96])
	$9 = ($0 + [64])
	$11 = ($0 + [32])
	CALL $99($0, $11, $9, $15, $2)
	$10 = ($1 + [-32])
	if ( (CALL int_32 $10((int_32 $15), (int_32 *($2))) == 0) ){ goto $label$1 }
	$3 = ($15 + [24])
	*(($12 = ($16 + [24]))) = *($3)
	$1 = ($15 + [16])
	*(($13 = ($16 + [16]))) = *($1)
	$5 = ($15 + [8])
	*(($14 = ($16 + [8]))) = *($5)
	*($16) = *($15)
	$6 = ($10 + [24])
	*($3) = *($6)
	$7 = ($10 + [16])
	*($1) = *($7)
	$4 = ($10 + [8])
	*($5) = *($4)
	*($15) = *($10)
	*($6) = *($12)
	*($7) = *($13)
	*($4) = *($14)
	*($10) = *($16)
	if ( (CALL int_32 $15((int_32 $9), (int_32 *($2))) == 0) ){ goto $label$1 }
	$10 = ($9 + [24])
	*($12) = *($10)
	$6 = ($9 + [16])
	*($13) = *($6)
	$7 = ($9 + [8])
	*($14) = *($7)
	*($16) = *($9)
	*($10) = *($3)
	*($6) = *($1)
	*($7) = *($5)
	*($9) = *($15)
	*($3) = *($12)
	*($1) = *($13)
	*($5) = *($14)
	*($15) = *($16)
	if ( (CALL int_32 $9((int_32 $11), (int_32 *($2))) == 0) ){ goto $label$1 }
	$10 = ($11 + [24])
	*(($15 = ($16 + [24]))) = *($10)
	$3 = ($11 + [16])
	*(($12 = ($16 + [16]))) = *($3)
	$1 = ($11 + [8])
	*(($13 = ($16 + [8]))) = *($1)
	*($16) = *($11)
	$14 = ($9 + [24])
	*($10) = *($14)
	$5 = ($9 + [16])
	*($3) = *($5)
	$6 = ($9 + [8])
	*($1) = *($6)
	*($11) = *($9)
	*($14) = *($15)
	*($5) = *($12)
	*($6) = *($13)
	*($9) = *($16)
	if ( (CALL int_32 $11((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$1 }
	$2 = ($0 + [24])
	*($15) = *($2)
	$9 = ($0 + [16])
	*($12) = *($9)
	$14 = ($0 + [8])
	*($13) = *($14)
	*($16) = *($0)
	*($2) = *($10)
	*($9) = *($3)
	*($14) = *($1)
	*($0) = *($11)
	*($10) = *($15)
	*($3) = *($12)
	*($1) = *($13)
	*($11) = *($16)
	goto $label$1 
	
.LABEL $label$6
	if ( ($11 == 0) ){ goto $label$1 }
	$11 = ($15 + [24])
	*(($10 = ($16 + [24]))) = *($11)
	$3 = ($15 + [16])
	*(($12 = ($16 + [16]))) = *($3)
	$1 = ($15 + [8])
	*(($13 = ($16 + [8]))) = *($1)
	*($16) = *($15)
	$14 = ($9 + [24])
	*($11) = *($14)
	$5 = ($9 + [16])
	*($3) = *($5)
	$6 = ($9 + [8])
	*($1) = *($6)
	*($15) = *($9)
	*($14) = *($10)
	*($5) = *($12)
	*($6) = *($13)
	*($9) = *($16)
	if ( (CALL int_32 $15((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$1 }
	$2 = ($0 + [24])
	*($10) = *($2)
	$9 = ($0 + [16])
	*($12) = *($9)
	$14 = ($0 + [8])
	*($13) = *($14)
	*($16) = *($0)
	*($2) = *($11)
	*($9) = *($3)
	*($14) = *($1)
	*($0) = *($15)
	*($11) = *($10)
	*($3) = *($12)
	*($1) = *($13)
	*($15) = *($16)
	goto $label$1 
	
.LABEL $label$5
	if ( ($10 == 0) ){ goto $label$2 }
	$10 = ($15 + [24])
	*(($9 = ($16 + [24]))) = *($10)
	$12 = ($15 + [16])
	*(($11 = ($16 + [16]))) = *($12)
	$13 = ($15 + [8])
	*(($3 = ($16 + [8]))) = *($13)
	*($16) = *($15)
	$14 = ($8 + [24])
	*($10) = *($14)
	$5 = ($8 + [16])
	*($12) = *($5)
	$6 = ($8 + [8])
	*($13) = *($6)
	*($15) = *($8)
	*($14) = *($9)
	*($5) = *($11)
	*($6) = *($3)
	*($8) = *($16)
	if ( (CALL int_32 $15((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$2 }
	$14 = ($0 + [24])
	*($9) = *($14)
	$5 = ($0 + [16])
	*($11) = *($5)
	$6 = ($0 + [8])
	*($3) = *($6)
	*($16) = *($0)
	*($14) = *($10)
	*($5) = *($12)
	*($6) = *($13)
	*($0) = *($15)
	*($10) = *($9)
	*($12) = *($11)
	*($13) = *($3)
	*($15) = *($16)
	goto $label$2 
	
.LABEL $label$4
	*($0) = *($15)
	$0 = ($15 + [24])
	*($12) = *($0)
	$11 = ($15 + [16])
	*($13) = *($11)
	$12 = ($15 + [8])
	*($14) = *($12)
	*($0) = *($10)
	*($11) = *($3)
	*($12) = *($1)
	*($15) = *($16)
	if ( (CALL int_32 $9((int_32 $15), (int_32 *($2))) == 0) ){ goto $label$1 }
	$2 = ($15 + [24])
	*(($0 = ($16 + [24]))) = *($2)
	$11 = ($15 + [16])
	*(($10 = ($16 + [16]))) = *($11)
	$3 = ($15 + [8])
	*(($12 = ($16 + [8]))) = *($3)
	*($16) = *($15)
	$13 = ($9 + [24])
	*($2) = *($13)
	$2 = ($9 + [16])
	*($11) = *($2)
	$11 = ($9 + [8])
	*($3) = *($11)
	*($15) = *($9)
	*($13) = *($0)
	*($2) = *($10)
	*($11) = *($12)
	*($9) = *($16)
	goto $label$1 
	
.LABEL $label$3
	*($0) = *($15)
	$10 = ($15 + [24])
	*($11) = *($10)
	$11 = ($15 + [16])
	*($3) = *($11)
	$3 = ($15 + [8])
	*($14) = *($3)
	*($10) = *($9)
	*($11) = *($12)
	*($3) = *($13)
	*($15) = *($16)
	if ( (CALL int_32 $8((int_32 $15), (int_32 *($2))) == 0) ){ goto $label$2 }
	$10 = ($15 + [24])
	*(($9 = ($16 + [24]))) = *($10)
	$12 = ($15 + [16])
	*(($11 = ($16 + [16]))) = *($12)
	$13 = ($15 + [8])
	*(($3 = ($16 + [8]))) = *($13)
	*($16) = *($15)
	$14 = ($8 + [24])
	*($10) = *($14)
	$10 = ($8 + [16])
	*($12) = *($10)
	$12 = ($8 + [8])
	*($13) = *($12)
	*($15) = *($8)
	*($14) = *($9)
	*($10) = *($11)
	*($12) = *($3)
	*($8) = *($16)
	
.LABEL $label$2
	$15 = ($0 + [96])
	if ( ((int_32)$15 == (int_32)$1) ){ goto $label$14 }
	$13 = [0]
	$14 = [0]
	
.LOOP $label$15:
	$3 = $15
	if ( (CALL int_32 $3((int_32 $8), (int_32 *($2))) == 0) ){ goto $label$16 }
	*(($5 = ($16 + [24]))) = *(($3 + [24]))
	*(($6 = ($16 + [16]))) = *(($3 + [16]))
	*(($7 = ($16 + [8]))) = *(($3 + [8]))
	*($16) = *($3)
	$15 = $13
	
.LOOP $label$18:
	$9 = ($8 + [88])
	*((($8 = ($0 + $15)) + [120])) = *($9)
	$10 = ($8 + [80])
	*(($8 + [112])) = *($10)
	$11 = ($8 + [72])
	*(($8 + [104])) = *($11)
	$12 = ($8 + [64])
	*(($8 + [96])) = *($12)
	if ( ((int_32)$15 == (int_32)[-64]) ){ goto $label$17 }
	$15 = ($15 + [-32])
	if ( CALL int_32 $16((int_32 ($8 + [32])), (int_32 *($2))) ){ goto $label$18 }
	
.LABEL $label$17
	*($9) = *($5)
	*($10) = *($6)
	*($11) = *($7)
	*($12) = *($16)
	$14 = ($14 + [1])
	if ( ((int_32)$14 == (int_32)[8]) ){ goto $label$13 }
	
.LABEL $label$16
	$13 = ($13 + [32])
	$8 = $3
	$15 = ($3 + [32])
	if ( ((int_32)$15 != (int_32)$1) ){ goto $label$15 }
	
.LABEL $label$14
	$8 = [1]
	goto $label$12 
	
.LABEL $label$13
	$15 = ((int_32)($3 + [32]) == (int_32)$1)
	$8 = [0]
	
.LABEL $label$12
	$8 = ($15 | $8)
	
.LABEL $label$1
	*([0] + [4]) = ($16 + [32])
	$15
	return ($8 & [1])
}

void .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [144])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [144])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [144])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [144])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $48(*($1), ($0 + [32]))
}

void .FUNC $102 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$8 = (*([0] + [4]) - [64])
	$12 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [832])
	$4 = *($1)
	$10 = *(($1 + [24]))
	$11 = *($1 + [20])
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$3 }
	$9 = *(*($3))
	
.LOOP $label$4:
	if ( ((int_64)$9 == (int_64)*($11)) ){ goto $label$3 }
	$11 = ($11 + [32])
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$2 }
	$10 = *($3 + [4])
	CALL eosio_assert(((int_64)*($10 + [8]) == (int_64)*(($11 + [16]))), [896])
	$9 = ((int_64)*($11 + [8]) + (int_64)*($10))
	*($11 + [8]) = $9
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($11 + [8]) < (int_64)4611686018427387904), [976])
	goto $label$1 
	
.LABEL $label$2
	$5 = ($1 + [20])
	*(($12 + [40])) = (int_64)344826856192
	*($12 + [32]) = (int_64)0
	CALL eosio_assert([1], [368])
	$9 = (int_64)1346979907
	$11 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$10 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$10 = [0]
	
.LABEL $label$5
	CALL eosio_assert($10, [240])
	*($12 + [48]) = [0]
	*($12 + [24]) = *(*($3))
	$11 = *($3 + [4])
	*(($12 + [44])) = *(($11 + [12]))
	*(($6 = (($12 + [24]) + [16]))) = *(($11 + [8]))
	*((($12 + [24]) + [12])) = *(($11 + [4]))
	*($12 + [32]) = *($11)
	$10 = ($1 + [24])
	$11 = *($10)
	if ( ((int_32)$11 == (int_32)*(($1 + [28]))) ){ goto $label$10 }
	*($11) = *($12 + [24])
	*(($11 + [24])) = *((($12 + [24]) + [24]))
	*(($11 + [16])) = *($6)
	*(($11 + [8])) = *((($12 + [24]) + [8]))
	*($10) = (*($10) + [32])
	goto $label$1 
	
.LABEL $label$10
	CALL $38($5, ($12 + [24]))
	
.LABEL $label$1
	$6 = ($1 + [12])
	$10 = *($6)
	$11 = *($1 + [8])
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$11 }
	$9 = *(*($3))
	
.LOOP $label$12:
	if ( ((int_64)$9 == (int_64)*($11)) ){ goto $label$11 }
	$11 = ($11 + [32])
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$12 }
	$11 = $10
	
.LABEL $label$11
	$10 = *($3 + [4])
	CALL eosio_assert(((int_64)*($10 + [8]) == (int_64)*(($11 + [16]))), [1008])
	$9 = (int_64)
	*($11 + [8]) = $9(*($11 + [8]) - *($10)))
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [1056])
	CALL eosio_assert(((int_64)*($11 + [8]) < (int_64)4611686018427387904), [1088])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1120])
	$3 = *($1 + [8])
	$10 = *($6)
	$6 = ($10 - $3)
	$9 = (CASTING uint_64)(uint_32 int_32($6 >> [5]))
	$11 = [36]
	
.LOOP $label$13:
	$11 = ($11 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$13 }
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$15 }
	$3 = (((int_32)uint_32(($6 + [-32]) >> [5]) * (int_32)[28]) + $11)
	goto $label$14 
	
.LABEL $label$15
	$3 = ($11 + [-28])
	
.LABEL $label$14
	$10 = *(($1 + [20]))
	$11 = *(($1 + [24]))
	$6 = ($11 - $10)
	$9 = (CASTING uint_64)(uint_32 int_32($6 >> [5]))
	
.LOOP $label$16:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$16 }
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$17 }
	$3 = ((((int_32)uint_32(($6 + [-32]) >> [5]) * (int_32)[25]) + $3) + [25])
	
.LABEL $label$17
	if ( ($3 <= [513]) ){ goto $label$19 }
	$7 = CALL malloc($3)
	goto $label$18 
	
.LABEL $label$19
	$7 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$18
	*($12 + [8]) = $7
	$5 = ($7 + $3)
	*($12 + [16]) = $5
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [608])
	CALL memcpy($7, $1, [8])
	$10 = ($7 + [8])
	*($12 + [12]) = $10
	$9 = (CASTING uint_64)(uint_32 int_32((*(($1 + [12])) - *(($1 + [8]))) >> [5]))
	$8 = ($7 + [9])
	
.LOOP $label$20:
	$11 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$6 = ((int_64)$9) != (int_64)0
	*($12 + [24]) = (($6) << [7]) | ($11 & [127]))
	CALL eosio_assert(((int_32)($5 - $10) > (int_32)[0]), [608])
	$11 = $8
	CALL memcpy(($11 + [-1]), ($12 + [24]), [1])
	*($12 + [12]) = $11
	$8 = ($11 + [1])
	$10 = $11
	if ( $6 ){ goto $label$20 }
	$8 = *(($1 + [12]))
	$10 = *(($1 + [8]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$21 }
	
.LOOP $label$22:
	*($12 + [56]) = ($12 + [8])
	*($12 + [24]) = $10
	*((($12 + [24]) + [8])) = ($10 + [24])
	*($12 + [28]) = ($10 + [8])
	CALL $39(($12 + [24]), ($12 + [56]))
	$10 = ($10 + [32])
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$22 }
	$11 = *($12 + [12])
	
.LABEL $label$21
	$9 = (CASTING uint_64)(uint_32 int_32((*(($1 + [24])) - *(($1 + [20]))) >> [5]))
	$6 = (($12 + [8]) + [8])
	
.LOOP $label$23:
	$10 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$8 = ((int_64)$9) != (int_64)0
	*($12 + [24]) = (($8) << [7]) | ($10 & [127]))
	CALL eosio_assert(((int_32)(*($6) - $11) > (int_32)[0]), [608])
	CALL memcpy(*($12 + [12]), ($12 + [24]), [1])
	$11 = (*($12 + [12]) + [1])
	*($12 + [12]) = $11
	if ( $8 ){ goto $label$23 }
	$10 = *(($1 + [24]))
	$11 = *(($1 + [20]))
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$24 }
	
.LOOP $label$25:
	*($12 + [56]) = ($12 + [8])
	*($12 + [24]) = $11
	*((($12 + [24]) + [8])) = ($11 + [24])
	*($12 + [28]) = ($11 + [8])
	CALL $40(($12 + [24]), ($12 + [56]))
	$11 = ($11 + [32])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$25 }
	
.LABEL $label$24
	CALL db_update_i64(*($1 + [36]), $2, $7, $3)
	if ( ($3 <= [513]) ){ goto $label$26 }
	CALL free($7)
	
.LABEL $label$26
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$27 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$27
	*([0] + [4]) = ($12 + [64])
}

void .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	$5 = *($0 + [4])
	*($1) = *(*($5))
	$2 = *($0)
	$3 = ((int_64)*(*($5 + [4])) / (int_64)10000)
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [368])
	$4 = (int_64)1346979907
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [240])
	*(($1 + [16])) = (int_64)344826856192
	*($1 + [8]) = $3
	*($1 + [24]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$6 = $8
	$5 = ($6 + [-32])
	*([0] + [4]) = $5
	*($7 + [12]) = $5
	*($7 + [8]) = $5
	*($7 + [16]) = ($6 + [-4])
	*($7 + [24]) = ($7 + [8])
	*($7 + [36]) = ($1 + [8])
	*($7 + [32]) = $1
	*($7 + [40]) = ($1 + [24])
	CALL $55(($7 + [32]), ($7 + [24]))
	$4 = *($1)
	*($1 + [32]) = CALL db_store_i64(*($2 + [8]), (int_64)-3838636559280373760, *(*($0 + [8])), $4, $5, [28])
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $104 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $117(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $117(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $113(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $113(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

void .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [2])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$4 = [1073741823]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [2]) > (uint_32)[536870910]) ){ goto $label$5 }
	$4 = int_32($2 >> [1])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[1073741824]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $112(($4 << [2]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $116($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [2])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [2]))
	$7 = ($3 + [4])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $113($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC _ZN5eosio14egc_texas_game9sortcardsENSt3__16vectorIyNS1_9allocatorIyEEEE (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [16])
	*([0] + [4]) = $13
	$12 = *($2)
	$11 = *($2 + [4])
	$6 = ((int_32)$11 != (int_32)$12)
	if ( $6 ){ goto $label$4 }
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$9 = ($0 + [4])
	goto $label$3 
	
.LABEL $label$4
	$5 = int_32(($11 - $12) >> [3])
	$10 = [0]
	$11 = $12
	
.LOOP $label$5:
	*($11) = ((int_64)((uint_64)*($11) % (uint_64)(int_64)13) + (int_64)2)
	$11 = ($11 + [8])
	$10 = ($10 + [1])
	if ( ($10 <= $5) ){ goto $label$5 }
	$5 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$9 = ($0 + [4])
	if ( $6 ){ goto $label$2 }
	
.LABEL $label$3
	$11 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	$7 = ($13 + [8])
	$11 = [0]
	$8 = [0]
	
.LOOP $label$6:
	*($7) = [1]
	*($13) = (int_64)-1
	$10 = ($12 + ($8 << [3]))
	*($13) = *($10)
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$7 }
	$12 = int_32(($5 - $11) >> [4])
	$3 = *($10)
	$10 = [0]
	
.LOOP $label$8:
	if ( ((int_64)*($11) != (int_64)$3) ){ goto $label$9 }
	$6 = (*($6) + [1])
	*(($6 = ($11 + [8]))) = $6
	*($7) = $6
	
.LABEL $label$9
	$11 = ($11 + [16])
	$10 = ($10 + [1])
	if ( ($10 <= $12) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)*(($0 + [8]))) ){ goto $label$11 }
	*($5) = *($13)
	*(($5 + [8])) = *($7)
	*($9) = (*($9) + [16])
	goto $label$10 
	
.LABEL $label$11
	CALL $90($0, $13)
	
.LABEL $label$10
	$5 = *($9)
	$11 = *($0)
	$12 = *($2)
	$8 = ($8 + [1])
	if ( ($8 <= int_32((*(($2 + [4])) - $12) >> [3])) ){ goto $label$6 }
	
.LABEL $label$1
	if ( ((int_32)($5 - $11) == (int_32)[16]) ){ goto $label$12 }
	$10 = [0]
	
.LOOP $label$13:
	$4 = ($10 + [1])
	if ( ((int_32)int_32(($5 - $11) >> [4]) == (int_32)$4) ){ goto $label$14 }
	$2 = ((int_32)$10 ^ (int_32)[-1])
	$10 = [0]
	$12 = [0]
	
.LOOP $label$15:
	$12 = ($12 + [1])
	$7 = ($11 + [24])
	$6 = *($7)
	$11 = ($11 + $10)
	$8 = ($11 + [8])
	$5 = *($8)
	if ( ((int_32)$5 > (int_32)$6) ){ goto $label$16 }
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$17 }
	$5 = ($11 + [16])
	if ( ((uint_64)*($11) >= (uint_64)*($5)) ){ goto $label$16 }
	*(($6 = ($13 + [8]))) = *($7)
	*($13) = *($5)
	*($5) = *($11)
	*($7) = *($8)
	*(($11 + [20])) = *(($11 + [4]))
	*(($11 = (*($0) + $10))) = *($13)
	*(($11 + [8])) = *($6)
	goto $label$16 
	
.LABEL $label$17
	if ( ((int_32)$5 >= (int_32)$6) ){ goto $label$16 }
	*(($5 = ($13 + [8]))) = *($7)
	$6 = ($11 + [16])
	*($13) = *($6)
	*($6) = *($11)
	*($7) = *($8)
	*(($11 + [20])) = *(($11 + [4]))
	*(($11 = (*($0) + $10))) = *($13)
	*(($11 + [8])) = *($5)
	
.LABEL $label$16
	$10 = ($10 + [16])
	$11 = *($0)
	$5 = *($9)
	if ( ($12 <= (int_32(($5 - $11) >> [4]) + $2)) ){ goto $label$15 }
	
.LABEL $label$14
	$10 = $4
	if ( ($4 <= (int_32(($5 - $11) >> [4]) + [-1])) ){ goto $label$13 }
	
.LABEL $label$12
	*([0] + [4]) = ($13 + [16])
}

void .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [2])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$4 = [1073741823]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [2]) > (uint_32)[536870910]) ){ goto $label$5 }
	$4 = int_32($2 >> [1])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[1073741824]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $112(($4 << [2]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $116($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [2])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [2]))
	$7 = ($3 + [4])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $113($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $86 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	
.LOOP $label$1:
	$11 = ([80] - $1)
	$10 = ($1 + [-8])
	$9 = ($1 + [-12])
	$8 = ($1 + [-16])
	$7 = ($1 + [-20])
	$6 = ($1 + [-24])
	$5 = ($1 + [-28])
	$4 = ($1 + [-32])
	$3 = ($1 + [-40])
	
.LOOP $label$2:
	$12 = $0
	
.LOOP $label$4:
	$0 = ($1 - $12)
	$35 = ((int_32)$0 / (int_32)[40])
	if ( ((uint_32)$35 <= (uint_32)[5]) ){ goto $label$15 }
	if ( ((int_32)$0 <= (int_32)[279]) ){ goto $label$14 }
	$26 = ($12 + ((int_32)((uint_32)$0 / (uint_32)[80]) * (int_32)[40]))
	if ( ((int_32)$0 < (int_32)[39961]) ){ goto $label$17 }
	$0 = ((int_32)((uint_32)$0 / (uint_32)[160]) * (int_32)[40])
	$18 = CALL $93($12, ($12 + $0), $26, ($26 + $0), $3, $2)
	goto $label$16 
	
.LABEL $label$17
	$18 = CALL $91($12, $26, $3, $2)
	
.LABEL $label$16
	if ( CALL int_32 $12((int_32 $26), (int_32 *($2))) ){ goto $label$18 }
	$0 = ([0] - $12)
	$33 = $3
	
.LOOP $label$21:
	if ( ((int_32)($33 + $0) == (int_32)[40]) ){ goto $label$20 }
	$33 = ($33 + [-40])
	if ( (CALL int_32 $33((int_32 $26), (int_32 *($2))) == 0) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	$34 = ($12 + [40])
	if ( CALL int_32 $12((int_32 $3), (int_32 *($2))) ){ goto $label$22 }
	if ( ((int_32)$34 == (int_32)$3) ){ goto $label$6 }
	$33 = ($12 + $11)
	$0 = [0]
	
.LOOP $label$24:
	$35 = ($12 + $0)
	$26 = ($35 + [40])
	if ( CALL int_32 $12((int_32 $26), (int_32 *($2))) ){ goto $label$23 }
	$0 = ($0 + [40])
	if ( ($33 + $0) ){ goto $label$24 }
	goto $label$6 
	
.LABEL $label$23
	$30 = ($35 + [56])
	$28 = *($30)
	*($30) = [0]
	$31 = ($35 + [52])
	$29 = *($31)
	*($31) = [0]
	$27 = ($35 + [48])
	$21 = *($27)
	*($27) = [0]
	$20 = *($26)
	$22 = ($35 + [68])
	$34 = *($22)
	$33 = ($35 + [64])
	$17 = *($33)
	$0 = ($35 + [60])
	$18 = *($0)
	*($22) = [0]
	*($33) = [0]
	*($0) = [0]
	$19 = ($35 + [72])
	$13 = *($19)
	*($26) = *($3)
	$26 = *($5)
	*($27) = *($4)
	*($31) = $26
	*($30) = *($6)
	*($5) = [0]
	*($6) = [0]
	*($4) = [0]
	$26 = *($0)
	if ( ($26 == 0) ){ goto $label$25 }
	*($33) = $26
	CALL $113($26)
	*($33) = [0]
	*($22) = [0]
	*($0) = [0]
	
.LABEL $label$25
	*($0) = *($7)
	*($33) = *($8)
	*($22) = *($9)
	*($8) = [0]
	*($9) = [0]
	*($7) = [0]
	*($19) = *($10)
	*($3) = $20
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$27 }
	*($5) = $0
	CALL $113($0)
	*($4) = $21
	*($5) = $29
	*($6) = $28
	$0 = *($7)
	if ( ($0 == 0) ){ goto $label$26 }
	*($8) = $0
	CALL $113($0)
	*($8) = [0]
	*($9) = [0]
	*($7) = [0]
	goto $label$26 
	
.LABEL $label$27
	*($5) = $29
	*($4) = $21
	*($6) = $28
	
.LABEL $label$26
	*($8) = $17
	*($7) = $18
	*($9) = $34
	*($10) = $13
	$34 = ($35 + [80])
	
.LABEL $label$22
	if ( ((int_32)$34 == (int_32)$3) ){ goto $label$6 }
	$33 = $3
	
.LOOP $label$28:
	$35 = ($34 + [-40])
	
.LOOP $label$29:
	$35 = ($35 + [40])
	if ( (CALL int_32 $12((int_32 $35), (int_32 *($2))) == 0) ){ goto $label$29 }
	$0 = ($33 + [32])
	$34 = ($35 + [40])
	
.LOOP $label$30:
	$26 = ($0 + [-72])
	$0 = ($0 + [-40])
	if ( CALL int_32 $12((int_32 $26), (int_32 *($2))) ){ goto $label$30 }
	$33 = ($0 + [-32])
	if ( ((uint_32)$35 >= (uint_32)$33) ){ goto $label$5 }
	$27 = ($35 + [16])
	$16 = *($27)
	*($27) = [0]
	$28 = ($35 + [12])
	$15 = *($28)
	*($28) = [0]
	$29 = ($35 + [8])
	$14 = *($29)
	*($29) = [0]
	$13 = *($35)
	$30 = ($35 + [28])
	$19 = *($30)
	$31 = ($35 + [24])
	$18 = *($31)
	$26 = ($35 + [20])
	$17 = *($26)
	*($30) = [0]
	*($31) = [0]
	*($26) = [0]
	$32 = ($35 + [32])
	$20 = *($32)
	*($35) = *($33)
	$21 = ($0 + [-20])
	$35 = *($21)
	$22 = ($0 + [-24])
	*($29) = *($22)
	*($28) = $35
	$28 = ($0 + [-16])
	*($27) = *($28)
	*($28) = [0]
	*($22) = (int_64)0
	$35 = *($26)
	if ( ($35 == 0) ){ goto $label$31 }
	*($31) = $35
	CALL $113($35)
	*($30) = [0]
	*($26) = (int_64)0
	
.LABEL $label$31
	$35 = ($0 + [-12])
	*($26) = *($35)
	$27 = ($0 + [-8])
	*($31) = *($27)
	$26 = ($0 + [-4])
	*($30) = *($26)
	*($26) = [0]
	*($35) = (int_64)0
	*($32) = *($0)
	*($33) = $13
	$30 = *($22)
	if ( ($30 == 0) ){ goto $label$33 }
	*($21) = $30
	CALL $113($30)
	*($22) = $14
	*($21) = $15
	*($28) = $16
	$22 = *($35)
	if ( ($22 == 0) ){ goto $label$32 }
	*($27) = $22
	CALL $113($22)
	*($27) = [0]
	*($26) = [0]
	*($35) = [0]
	goto $label$32 
	
.LABEL $label$33
	*($21) = $15
	*($22) = $14
	*($28) = $16
	
.LABEL $label$32
	*($27) = $18
	*($35) = $17
	*($26) = $19
	*($0) = $20
	goto $label$28 
	
.LABEL $label$19
	$29 = *($12 + [8])
	*($12 + [8]) = [0]
	$0 = ($12 + [16])
	$21 = *($0)
	*($0) = [0]
	$31 = ($12 + [12])
	$34 = *($31)
	*($31) = [0]
	$20 = *($12)
	$22 = ($12 + [28])
	$17 = *($22)
	$30 = ($12 + [24])
	$19 = *($30)
	$16 = *($12 + [20])
	*($22) = [0]
	*($30) = [0]
	*($12 + [20]) = [0]
	$13 = *($12 + [32])
	*($12) = *($33)
	$27 = ($33 + [12])
	$28 = *($27)
	$35 = ($33 + [8])
	*($12 + [8]) = *($35)
	*($31) = $28
	$31 = ($33 + [16])
	*($0) = *($31)
	*($31) = [0]
	*($35) = (int_64)0
	$0 = *($12 + [20])
	if ( ($0 == 0) ){ goto $label$34 }
	*($30) = $0
	CALL $113($0)
	*($22) = [0]
	*(($12 + [20])) = (int_64)0
	
.LABEL $label$34
	$0 = ($33 + [20])
	*(($12 + [20])) = *($0)
	$28 = ($33 + [24])
	*($30) = *($28)
	$30 = ($33 + [28])
	*($22) = *($30)
	*($30) = [0]
	*($0) = (int_64)0
	$15 = ($33 + [32])
	*(($12 + [32])) = *($15)
	*($33) = $20
	$22 = *($35)
	if ( ($22 == 0) ){ goto $label$36 }
	*($27) = $22
	CALL $113($22)
	*($35) = $29
	*($27) = $34
	*($31) = $21
	$35 = *($0)
	if ( ($35 == 0) ){ goto $label$35 }
	*($28) = $35
	CALL $113($35)
	*($30) = [0]
	*($0) = (int_64)0
	goto $label$35 
	
.LABEL $label$36
	*($27) = $34
	*($35) = $29
	*($31) = $21
	
.LABEL $label$35
	*($28) = $19
	*($0) = $16
	*($30) = $17
	*($15) = $13
	$18 = ($18 + [1])
	goto $label$7 
	
.LABEL $label$18
	$33 = $3
	goto $label$7 
	
.LABEL $label$15
	goto $label$6 
	
.LABEL $label$14
	CALL $94($12, $1, $2)
	return 
	
.LABEL $label$13
	if ( (CALL int_32 $3((int_32 $12), (int_32 *($2))) == 0) ){ goto $label$6 }
	$27 = *($12 + [8])
	*($12 + [8]) = [0]
	$35 = ($12 + [16])
	$28 = *($35)
	*($35) = [0]
	$26 = ($12 + [12])
	$29 = *($26)
	*($26) = [0]
	$20 = *($12)
	$2 = ($12 + [28])
	$33 = *($2)
	$0 = ($12 + [24])
	$22 = *($0)
	$30 = *($12 + [20])
	*($2) = [0]
	*($0) = [0]
	*($12 + [20]) = [0]
	$13 = *($12 + [32])
	*($12) = *($3)
	$31 = *($5)
	*($12 + [8]) = *($4)
	*($26) = $31
	*($35) = *($6)
	*($5) = [0]
	*($6) = [0]
	*($4) = [0]
	$35 = *($12 + [20])
	if ( ($35 == 0) ){ goto $label$37 }
	*($0) = $35
	CALL $113($35)
	*($2) = [0]
	*(($12 + [20])) = (int_64)0
	
.LABEL $label$37
	*(($12 + [20])) = *($7)
	*($0) = *($8)
	*($2) = *($9)
	*($8) = [0]
	*($9) = [0]
	*($7) = [0]
	*(($12 + [32])) = *($10)
	*($3) = $20
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$9 }
	*($5) = $2
	CALL $113($2)
	*($4) = $27
	*($5) = $29
	*($6) = $28
	$2 = *($7)
	if ( ($2 == 0) ){ goto $label$8 }
	*($8) = $2
	CALL $113($2)
	*($8) = [0]
	*($9) = [0]
	*($7) = [0]
	goto $label$8 
	
.LABEL $label$12
	CALL $91($12, ($12 + [40]), $3, $2)
	return 
	
.LABEL $label$11
	CALL $92($12, ($12 + [40]), ($12 + [80]), $3, $2)
	return 
	
.LABEL $label$10
	CALL $93($12, ($12 + [40]), ($12 + [80]), ($12 + [120]), $3, $2)
	return 
	
.LABEL $label$9
	*($5) = $29
	*($4) = $27
	*($6) = $28
	
.LABEL $label$8
	*($8) = $22
	*($7) = $30
	*($9) = $33
	*($10) = $13
	return 
	
.LABEL $label$7
	$34 = ($12 + [40])
	if ( ((uint_32)$34 >= (uint_32)$33) ){ goto $label$38 }
	
.LOOP $label$39:
	$35 = ($34 + [-40])
	
.LOOP $label$40:
	$35 = ($35 + [40])
	if ( CALL int_32 $35((int_32 $26), (int_32 *($2))) ){ goto $label$40 }
	$0 = ($33 + [32])
	$34 = ($35 + [40])
	
.LOOP $label$41:
	$33 = ($0 + [-72])
	$0 = ($0 + [-40])
	if ( (CALL int_32 $33((int_32 $26), (int_32 *($2))) == 0) ){ goto $label$41 }
	$33 = ($0 + [-32])
	if ( ((uint_32)$35 > (uint_32)$33) ){ goto $label$42 }
	$30 = ($35 + [16])
	$25 = *($30)
	*($30) = [0]
	$29 = ($35 + [12])
	$24 = *($29)
	*($29) = [0]
	$21 = ($35 + [8])
	$23 = *($21)
	*($21) = [0]
	$13 = *($35)
	$27 = ($35 + [28])
	$15 = *($27)
	$28 = ($35 + [24])
	$16 = *($28)
	$22 = ($35 + [20])
	$19 = *($22)
	*($27) = [0]
	*($28) = [0]
	*($22) = [0]
	$14 = ($35 + [32])
	$20 = *($14)
	*($35) = *($33)
	$17 = ($0 + [-20])
	$32 = *($17)
	$31 = ($0 + [-24])
	*($21) = *($31)
	*($29) = $32
	$29 = ($0 + [-16])
	*($30) = *($29)
	*($29) = [0]
	*($31) = (int_64)0
	$30 = *($22)
	if ( ($30 == 0) ){ goto $label$43 }
	*($28) = $30
	CALL $113($30)
	*($27) = [0]
	*($22) = (int_64)0
	
.LABEL $label$43
	$30 = ($0 + [-12])
	*($22) = *($30)
	$21 = ($0 + [-8])
	*($28) = *($21)
	$22 = ($0 + [-4])
	*($27) = *($22)
	*($22) = [0]
	*($30) = (int_64)0
	*($14) = *($0)
	*($33) = $13
	$27 = *($31)
	if ( ($27 == 0) ){ goto $label$45 }
	*($17) = $27
	CALL $113($27)
	*($31) = $23
	*($17) = $24
	*($29) = $25
	$31 = *($30)
	if ( ($31 == 0) ){ goto $label$44 }
	*($21) = $31
	CALL $113($31)
	*($21) = [0]
	*($22) = [0]
	*($30) = [0]
	goto $label$44 
	
.LABEL $label$45
	*($17) = $24
	*($31) = $23
	*($29) = $25
	
.LABEL $label$44
	*($21) = $16
	*($30) = $19
	*($22) = $15
	*($0) = $20
	$26 = ( $33 ? $26 : ((int_32)$26 == (int_32)$35) )
	$18 = ($18 + [1])
	goto $label$39 
	
.LABEL $label$42
	$34 = $35
	
.LABEL $label$38
	if ( ((int_32)$34 == (int_32)$26) ){ goto $label$46 }
	if ( (CALL int_32 $26((int_32 $34), (int_32 *($2))) == 0) ){ goto $label$46 }
	$21 = *($34 + [8])
	*($34 + [8]) = [0]
	$0 = ($34 + [16])
	$17 = *($0)
	*($0) = [0]
	$22 = ($34 + [12])
	$19 = *($22)
	*($22) = [0]
	$20 = *($34)
	$35 = ($34 + [28])
	$27 = *($35)
	$33 = ($34 + [24])
	$28 = *($33)
	$29 = *($34 + [20])
	*($35) = [0]
	*($33) = [0]
	*($34 + [20]) = [0]
	$13 = *($34 + [32])
	*($34) = *($26)
	$30 = ($26 + [12])
	$31 = *($30)
	*($34 + [8]) = *($26 + [8])
	*($22) = $31
	$22 = ($26 + [16])
	*($0) = *($22)
	*($22) = [0]
	*($26 + [8 align=4]) = (int_64)0
	$0 = *($34 + [20])
	if ( ($0 == 0) ){ goto $label$47 }
	*($33) = $0
	CALL $113($0)
	*($35) = [0]
	*(($34 + [20])) = (int_64)0
	
.LABEL $label$47
	$0 = ($26 + [20])
	*(($34 + [20])) = *($0)
	$31 = ($26 + [24])
	*($33) = *($31)
	$33 = ($26 + [28])
	*($35) = *($33)
	*($33) = [0]
	*($0) = (int_64)0
	*(($34 + [32])) = *($26 + [32])
	*($26) = $20
	$16 = ($26 + [8])
	$35 = *($16)
	if ( ($35 == 0) ){ goto $label$49 }
	*($30) = $35
	CALL $113($35)
	*($16) = $21
	*($30) = $19
	*($22) = $17
	$35 = *($0)
	if ( ($35 == 0) ){ goto $label$48 }
	*($31) = $35
	CALL $113($35)
	*($33) = [0]
	*($0) = (int_64)0
	goto $label$48 
	
.LABEL $label$49
	*($30) = $19
	*($16) = $21
	*($22) = $17
	
.LABEL $label$48
	*($31) = $28
	*($0) = $29
	*($33) = $27
	*(($26 + [32])) = $13
	$18 = ($18 + [1])
	
.LABEL $label$46
	if ( $18 ){ goto $label$51 }
	$35 = CALL $95($12, $34, $2)
	$0 = ($34 + [40])
	if ( CALL $95($0, $1, $2) ){ goto $label$50 }
	if ( $35 ){ goto $label$2 }
	
.LABEL $label$51
	if ( ((int_32)($34 - $12) >= (int_32)($1 - $34)) ){ goto $label$3 }
	CALL $86($12, $34, $2)
	$0 = ($34 + [40])
	goto $label$2 
	
.LABEL $label$50
	$1 = $34
	$0 = $12
	if ( ($35 == 0) ){ goto $label$1 }
	
.LABEL $label$6
	return 
	
.LABEL $label$5
	$12 = $35
	goto $label$4 
	
.LABEL $label$3
	CALL $86(($34 + [40]), $1, $2)
	$1 = $34
	$0 = $12
	goto $label$1 
	$35
}

int_32 .FUNC _ZN5eosio14egc_texas_game7compareERKNS0_12player_pokerES3_ (int_32 $0, int_32 $1)
{
	CALL eosio_assert((uint_64)(((int_64)*($0 + [32]) + (int_64)-1) <= (int_64)10), [1616])
	CALL eosio_assert((uint_64)(((int_64)*($1 + [32]) + (int_64)-1) <= (int_64)10), [1616])
	return (uint_64)(*($0 + [32]) <= *($1 + [32]))
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [3])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$3 }
	$4 = [536870911]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$4 = int_32($2 >> [2])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $112(($4 << [3]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $116($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [3])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [3]))
	$7 = ($3 + [8])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $113($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $83($0, *($1))
	CALL $83($0, *($1 + [4]))
	$0 = *(($1 + [20]))
	if ( ($0 == 0) ){ goto $label$2 }
	*(($1 + [24])) = $0
	CALL $113($0)
	
.LABEL $label$2
	CALL $113($1)
	
.LABEL $label$1
}

void .FUNC $82 (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$10 = (*([0] + [4]) - [48])
	$12 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [832])
	*(($1 + [24])) = *($1 + [20])
	$3 = *($1)
	CALL eosio_assert([1], [1120])
	$8 = *($1 + [8])
	$6 = *(($1 + [12]))
	$5 = ($6 - $8)
	$9 = (CASTING uint_64)(uint_32 int_32($5 >> [5]))
	$11 = [36]
	
.LOOP $label$1:
	$11 = ($11 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$3 }
	$6 = (((int_32)uint_32(($5 + [-32]) >> [5]) * (int_32)[28]) + $11)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($11 + [-28])
	
.LABEL $label$2
	$8 = *(($1 + [20]))
	$11 = *(($1 + [24]))
	$5 = ($11 - $8)
	$9 = (CASTING uint_64)(uint_32 int_32($5 >> [5]))
	
.LOOP $label$4:
	$6 = ($6 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$5 }
	$6 = ((((int_32)uint_32(($5 + [-32]) >> [5]) * (int_32)[25]) + $6) + [25])
	
.LABEL $label$5
	if ( ($6 <= [513]) ){ goto $label$7 }
	$7 = CALL malloc($6)
	goto $label$6 
	
.LABEL $label$7
	$7 = ($10 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$6
	*($12 + [8]) = $7
	$4 = ($7 + $6)
	*($12 + [16]) = $4
	CALL eosio_assert(((int_32)$6 > (int_32)[7]), [608])
	CALL memcpy($7, $1, [8])
	$10 = ($7 + [8])
	*($12 + [12]) = $10
	$9 = (CASTING uint_64)(uint_32 int_32((*(($1 + [12])) - *(($1 + [8]))) >> [5]))
	$8 = ($7 + [9])
	
.LOOP $label$8:
	$11 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$5 = ((int_64)$9) != (int_64)0
	*($12 + [32]) = (($5) << [7]) | ($11 & [127]))
	CALL eosio_assert(((int_32)($4 - $10) > (int_32)[0]), [608])
	$11 = $8
	CALL memcpy(($11 + [-1]), ($12 + [32]), [1])
	*($12 + [12]) = $11
	$8 = ($11 + [1])
	$10 = $11
	if ( $5 ){ goto $label$8 }
	$8 = *(($1 + [12]))
	$10 = *(($1 + [8]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$9 }
	
.LOOP $label$10:
	*($12 + [24]) = ($12 + [8])
	*($12 + [32]) = $10
	*((($12 + [32]) + [8])) = ($10 + [24])
	*($12 + [36]) = ($10 + [8])
	CALL $39(($12 + [32]), ($12 + [24]))
	$10 = ($10 + [32])
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$10 }
	$11 = *($12 + [12])
	
.LABEL $label$9
	$9 = (CASTING uint_64)(uint_32 int_32((*(($1 + [24])) - *(($1 + [20]))) >> [5]))
	$5 = (($12 + [8]) + [8])
	
.LOOP $label$11:
	$10 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$8 = ((int_64)$9) != (int_64)0
	*($12 + [32]) = (($8) << [7]) | ($10 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $11) > (int_32)[0]), [608])
	CALL memcpy(*($12 + [12]), ($12 + [32]), [1])
	$11 = (*($12 + [12]) + [1])
	*($12 + [12]) = $11
	if ( $8 ){ goto $label$11 }
	$10 = *(($1 + [24]))
	$11 = *(($1 + [20]))
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$12 }
	
.LOOP $label$13:
	*($12 + [24]) = ($12 + [8])
	*($12 + [32]) = $11
	*((($12 + [32]) + [8])) = ($11 + [24])
	*($12 + [36]) = ($11 + [8])
	CALL $40(($12 + [32]), ($12 + [24]))
	$11 = ($11 + [32])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$13 }
	
.LABEL $label$12
	CALL db_update_i64(*($1 + [36]), $2, $7, $6)
	if ( ($6 <= [513]) ){ goto $label$14 }
	CALL free($7)
	
.LABEL $label$14
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	*([0] + [4]) = ($12 + [48])
}

void .FUNC $81 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$5 = (*([0] + [4]) - [64])
	$13 = $5
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [832])
	$4 = *($1)
	$8 = *(($1 + [12]))
	$11 = *($1 + [8])
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$3 }
	$12 = *(*(*($3)))
	
.LOOP $label$4:
	if ( ((int_64)$12 == (int_64)*($11)) ){ goto $label$3 }
	$11 = ($11 + [32])
	if ( ((int_32)$8 != (int_32)$11) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$2 }
	$8 = *($3 + [4])
	$7 = *($8)
	$12 = *($8 + [8])
	$6 = *(*($3 + [8]))
	CALL eosio_assert(((int_64)$6 != (int_64)0), [1568])
	CALL eosio_assert([1], [1584])
	$8 = *(*($3 + [12]))
	CALL eosio_assert(((int_64)$12 == (int_64)*(($8 + [16]))), [896])
	$7 = ((int_64)*($8 + [8]) + (int_64)((int_64)$7 / (int_64)$6))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)$7 < (int_64)4611686018427387904), [976])
	CALL eosio_assert(((int_64)$12 == (int_64)*(($11 + [16]))), [896])
	$12 = ((int_64)*($11 + [8]) + (int_64)$7)
	*($11 + [8]) = $12
	CALL eosio_assert(((int_64)$12 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($11 + [8]) < (int_64)4611686018427387904), [976])
	goto $label$1 
	
.LABEL $label$2
	$10 = ($1 + [8])
	*(($13 + [40])) = (int_64)344826856192
	*($13 + [32]) = (int_64)0
	CALL eosio_assert([1], [368])
	$12 = (int_64)1346979907
	$11 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$8 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$8 = [0]
	
.LABEL $label$5
	CALL eosio_assert($8, [240])
	*($13 + [48]) = [0]
	*($13 + [24]) = *(*(*($3)))
	$11 = *($3 + [4])
	$7 = *($11)
	$12 = *($11 + [8])
	$6 = *(*($3 + [8]))
	CALL eosio_assert(((int_64)$6 != (int_64)0), [1568])
	CALL eosio_assert([1], [1584])
	$11 = *(*($3 + [12]))
	CALL eosio_assert(((int_64)$12 == (int_64)*(($11 + [16]))), [896])
	$7 = ((int_64)*($11 + [8]) + (int_64)((int_64)$7 / (int_64)$6))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)$7 < (int_64)4611686018427387904), [976])
	*(($3 = (($13 + [24]) + [16]))) = $12
	*(($9 = (($13 + [24]) + [8]))) = $7
	$8 = ($1 + [12])
	$11 = *($8)
	if ( ((int_32)$11 == (int_32)*(($1 + [16]))) ){ goto $label$10 }
	*($11) = *($13 + [24])
	*(($11 + [24])) = *((($13 + [24]) + [24]))
	*(($11 + [16])) = *($3)
	*(($11 + [8])) = *($9)
	*($8) = (*($8) + [32])
	goto $label$1 
	
.LABEL $label$10
	CALL $38($10, ($13 + [24]))
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1120])
	$3 = *(($1 + [8]))
	$8 = *(($1 + [12]))
	$9 = ($8 - $3)
	$12 = (CASTING uint_64)(uint_32 int_32($9 >> [5]))
	$11 = [33]
	
.LOOP $label$11:
	$11 = ($11 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$11 }
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$13 }
	$9 = (((int_32)uint_32(($9 + [-32]) >> [5]) * (int_32)[25]) + $11)
	goto $label$12 
	
.LABEL $label$13
	$9 = ($11 + [-25])
	
.LABEL $label$12
	if ( ($9 <= [513]) ){ goto $label$15 }
	$10 = CALL malloc($9)
	goto $label$14 
	
.LABEL $label$15
	$10 = ($5 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$14
	*($13 + [8]) = $10
	$5 = ($10 + $9)
	*($13 + [16]) = $5
	CALL eosio_assert(((int_32)$9 > (int_32)[7]), [608])
	CALL memcpy($10, $1, [8])
	$11 = ($10 + [8])
	*($13 + [12]) = $11
	$12 = (CASTING uint_64)(uint_32 int_32((*(($1 + [12])) - *(($1 + [8]))) >> [5]))
	
.LOOP $label$16:
	$8 = (CASTING uint_32)(uint_64 $12)
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	$3 = ((int_64)$12) != (int_64)0
	*($13 + [24]) = (($3) << [7]) | ($8 & [127]))
	CALL eosio_assert(((int_32)($5 - $11) > (int_32)[0]), [608])
	CALL memcpy($11, ($13 + [24]), [1])
	$11 = ($11 + [1])
	*($13 + [12]) = $11
	if ( $3 ){ goto $label$16 }
	$8 = *(($1 + [12]))
	$11 = *(($1 + [8]))
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$17 }
	
.LOOP $label$18:
	*($13 + [56]) = ($13 + [8])
	*($13 + [24]) = $11
	*((($13 + [24]) + [8])) = ($11 + [24])
	*($13 + [28]) = ($11 + [8])
	CALL $40(($13 + [24]), ($13 + [56]))
	$11 = ($11 + [32])
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$18 }
	
.LABEL $label$17
	CALL db_update_i64(*($1 + [24]), $2, $10, $9)
	if ( ($9 <= [513]) ){ goto $label$19 }
	CALL free($10)
	
.LABEL $label$19
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$20 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$20
	*([0] + [4]) = ($13 + [64])
}

void .FUNC $80 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$10 = (*([0] + [4]) - [48])
	$14 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [832])
	$4 = *($1)
	$8 = ($1 + [12])
	$12 = *($8)
	$13 = *($1 + [8])
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$1 }
	$11 = *(*(*($3)))
	
.LOOP $label$2:
	if ( ((int_64)$11 == (int_64)*($13)) ){ goto $label$1 }
	$13 = ($13 + [32])
	if ( ((int_32)$12 != (int_32)$13) ){ goto $label$2 }
	$13 = $12
	
.LABEL $label$1
	$12 = *($3 + [4])
	$7 = *($12)
	$11 = *($12 + [8])
	$6 = *(*($3 + [8]))
	CALL eosio_assert(((int_64)$6 != (int_64)0), [1568])
	CALL eosio_assert([1], [1584])
	$12 = *(*($3 + [12]))
	CALL eosio_assert(((int_64)$11 == (int_64)*(($12 + [16]))), [896])
	$7 = ((int_64)*($12 + [8]) + (int_64)((int_64)$7 / (int_64)$6))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)$7 < (int_64)4611686018427387904), [976])
	CALL eosio_assert(((int_64)$11 == (int_64)*(($13 + [16]))), [896])
	$11 = ((int_64)*($13 + [8]) + (int_64)$7)
	*($13 + [8]) = $11
	CALL eosio_assert(((int_64)$11 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($13 + [8]) < (int_64)4611686018427387904), [976])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1120])
	$3 = *($1 + [8])
	$12 = *($8)
	$8 = ($12 - $3)
	$11 = (CASTING uint_64)(uint_32 int_32($8 >> [5]))
	$13 = [36]
	
.LOOP $label$3:
	$13 = ($13 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$3 == (int_32)$12) ){ goto $label$5 }
	$3 = (((int_32)uint_32(($8 + [-32]) >> [5]) * (int_32)[28]) + $13)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($13 + [-28])
	
.LABEL $label$4
	$12 = *(($1 + [20]))
	$13 = *(($1 + [24]))
	$8 = ($13 - $12)
	$11 = (CASTING uint_64)(uint_32 int_32($8 >> [5]))
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$12 == (int_32)$13) ){ goto $label$7 }
	$3 = ((((int_32)uint_32(($8 + [-32]) >> [5]) * (int_32)[25]) + $3) + [25])
	
.LABEL $label$7
	if ( ($3 <= [513]) ){ goto $label$9 }
	$9 = CALL malloc($3)
	goto $label$8 
	
.LABEL $label$9
	$9 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$8
	*($14 + [8]) = $9
	$5 = ($9 + $3)
	*($14 + [16]) = $5
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [608])
	CALL memcpy($9, $1, [8])
	$12 = ($9 + [8])
	*($14 + [12]) = $12
	$11 = (CASTING uint_64)(uint_32 int_32((*(($1 + [12])) - *(($1 + [8]))) >> [5]))
	$10 = ($9 + [9])
	
.LOOP $label$10:
	$13 = (CASTING uint_32)(uint_64 $11)
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	$8 = ((int_64)$11) != (int_64)0
	*($14 + [32]) = (($8) << [7]) | ($13 & [127]))
	CALL eosio_assert(((int_32)($5 - $12) > (int_32)[0]), [608])
	$13 = $10
	CALL memcpy(($13 + [-1]), ($14 + [32]), [1])
	*($14 + [12]) = $13
	$10 = ($13 + [1])
	$12 = $13
	if ( $8 ){ goto $label$10 }
	$10 = *(($1 + [12]))
	$12 = *(($1 + [8]))
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$11 }
	
.LOOP $label$12:
	*($14 + [24]) = ($14 + [8])
	*($14 + [32]) = $12
	*((($14 + [32]) + [8])) = ($12 + [24])
	*($14 + [36]) = ($12 + [8])
	CALL $39(($14 + [32]), ($14 + [24]))
	$12 = ($12 + [32])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$12 }
	$13 = *($14 + [12])
	
.LABEL $label$11
	$11 = (CASTING uint_64)(uint_32 int_32((*(($1 + [24])) - *(($1 + [20]))) >> [5]))
	$8 = (($14 + [8]) + [8])
	
.LOOP $label$13:
	$12 = (CASTING uint_32)(uint_64 $11)
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	$10 = ((int_64)$11) != (int_64)0
	*($14 + [32]) = (($10) << [7]) | ($12 & [127]))
	CALL eosio_assert(((int_32)(*($8) - $13) > (int_32)[0]), [608])
	CALL memcpy(*($14 + [12]), ($14 + [32]), [1])
	$13 = (*($14 + [12]) + [1])
	*($14 + [12]) = $13
	if ( $10 ){ goto $label$13 }
	$12 = *(($1 + [24]))
	$13 = *(($1 + [20]))
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$14 }
	
.LOOP $label$15:
	*($14 + [24]) = ($14 + [8])
	*($14 + [32]) = $13
	*((($14 + [32]) + [8])) = ($13 + [24])
	*($14 + [36]) = ($13 + [8])
	CALL $40(($14 + [32]), ($14 + [24]))
	$13 = ($13 + [32])
	if ( ((int_32)$13 != (int_32)$12) ){ goto $label$15 }
	
.LABEL $label$14
	CALL db_update_i64(*($1 + [36]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$16 }
	CALL free($9)
	
.LABEL $label$16
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$17 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	*([0] + [4]) = ($14 + [48])
}

int_32 .FUNC _ZN5eosio4cmp1ERKNS_11player_chipES2_ (int_32 $0, int_32 $1)
{
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)*(($1 + [16]))), [656])
	return ((int_64)*($0 + [8]) < (int_64)*($1 + [8]))
}

void .FUNC $73 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [32])
	*([0] + [4]) = $18
	
.LOOP $label$1:
	$4 = ($1 + [-64])
	$3 = ($1 + [-32])
	
.LOOP $label$2:
	$5 = $0
	
.LOOP $label$4:
	$0 = ($1 - $5)
	$17 = int_32($0 >> [5])
	if ( ((uint_32)$17 <= (uint_32)[5]) ){ goto $label$14 }
	if ( ((int_32)$0 <= (int_32)[991]) ){ goto $label$13 }
	$7 = ($5 + (((int_32)$17 / (int_32)[2]) << [5]))
	if ( ((int_32)$0 < (int_32)[31969]) ){ goto $label$21 }
	$0 = ($7 + $0)
	$0 = (((int_32)$17 / (int_32)[4]) << [5])
	$17 = ($5 + $0)
	$10 = CALL $99($5, $17, $7, $0, $2)
	if ( (CALL int_32 $3((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$15 }
	$11 = ($0 + [24])
	*(($8 = ($18 + [24]))) = *($11)
	$13 = ($0 + [16])
	*(($9 = ($18 + [16]))) = *($13)
	$14 = ($0 + [8])
	*(($12 = ($18 + [8]))) = *($14)
	*($18) = *($0)
	$15 = ($3 + [24])
	*($11) = *($15)
	$16 = ($3 + [16])
	*($13) = *($16)
	$6 = ($3 + [8])
	*($14) = *($6)
	*($0) = *($3)
	*($15) = *($8)
	*($16) = *($9)
	*($6) = *($12)
	*($3) = *($18)
	if ( (CALL int_32 $0((int_32 $7), (int_32 *($2))) == 0) ){ goto $label$20 }
	$15 = ($7 + [24])
	*($8) = *($15)
	$16 = ($7 + [16])
	*($9) = *($16)
	$6 = ($7 + [8])
	*($12) = *($6)
	*($18) = *($7)
	*($15) = *($11)
	*($16) = *($13)
	*($6) = *($14)
	*($7) = *($0)
	*($11) = *($8)
	*($13) = *($9)
	*($14) = *($12)
	*($0) = *($18)
	if ( (CALL int_32 $7((int_32 $17), (int_32 *($2))) == 0) ){ goto $label$17 }
	$0 = ($17 + [24])
	*($8) = *($0)
	$11 = ($17 + [16])
	*($9) = *($11)
	$13 = ($17 + [8])
	*($12) = *($13)
	*($18) = *($17)
	*($0) = *($15)
	*($11) = *($16)
	*($13) = *($6)
	*($17) = *($7)
	*($15) = *($8)
	*($16) = *($9)
	*($6) = *($12)
	*($7) = *($18)
	if ( (CALL int_32 $17((int_32 $5), (int_32 *($2))) == 0) ){ goto $label$16 }
	$14 = ($5 + [24])
	*($8) = *($14)
	$15 = ($5 + [16])
	*($9) = *($15)
	$16 = ($5 + [8])
	*($12) = *($16)
	*($18) = *($5)
	*($14) = *($0)
	*($15) = *($11)
	*($16) = *($13)
	*($5) = *($17)
	*($0) = *($8)
	*($11) = *($9)
	*($13) = *($12)
	*($17) = *($18)
	$10 = ($10 + [4])
	goto $label$15 
	
.LABEL $label$21
	$0 = CALL int_32 $7((int_32 $5), (int_32 *($2)))
	$17 = CALL int_32 $3((int_32 $7), (int_32 *($2)))
	if ( ($0 == 0) ){ goto $label$22 }
	$10 = ($5 + [24])
	*(($0 = ($18 + [24]))) = *($10)
	$12 = ($5 + [16])
	*(($8 = ($18 + [16]))) = *($12)
	$11 = ($5 + [8])
	*(($9 = ($18 + [8]))) = *($11)
	*($18) = *($5)
	if ( ($17 == 0) ){ goto $label$19 }
	*($5) = *($3)
	$17 = ($3 + [24])
	*($10) = *($17)
	$10 = ($3 + [16])
	*($12) = *($10)
	$12 = ($3 + [8])
	*($11) = *($12)
	*($17) = *($0)
	*($3) = *($18)
	*($10) = *($8)
	*($12) = *($9)
	$10 = [1]
	goto $label$15 
	
.LABEL $label$22
	$10 = [0]
	if ( ($17 == 0) ){ goto $label$15 }
	$17 = ($7 + [24])
	*(($0 = ($18 + [24]))) = *($17)
	$9 = ($7 + [16])
	*(($8 = ($18 + [16]))) = *($9)
	$11 = ($7 + [8])
	*(($12 = ($18 + [8]))) = *($11)
	*($18) = *($7)
	$10 = ($3 + [24])
	*($17) = *($10)
	$13 = ($3 + [16])
	*($9) = *($13)
	$14 = ($3 + [8])
	*($11) = *($14)
	*($7) = *($3)
	*($10) = *($0)
	*($13) = *($8)
	*($14) = *($12)
	*($3) = *($18)
	$10 = [1]
	if ( (CALL int_32 $7((int_32 $5), (int_32 *($2))) == 0) ){ goto $label$15 }
	$10 = ($5 + [24])
	*($0) = *($10)
	$13 = ($5 + [16])
	*($8) = *($13)
	$14 = ($5 + [8])
	*($12) = *($14)
	*($18) = *($5)
	*($10) = *($17)
	*($13) = *($9)
	*($14) = *($11)
	*($5) = *($7)
	*($17) = *($0)
	*($9) = *($8)
	*($11) = *($12)
	*($7) = *($18)
	goto $label$18 
	
.LABEL $label$20
	$10 = ($10 + [1])
	goto $label$15 
	
.LABEL $label$19
	*($5) = *($7)
	$17 = ($7 + [24])
	*($10) = *($17)
	$13 = ($7 + [16])
	*($12) = *($13)
	$12 = ($7 + [8])
	*($11) = *($12)
	*($17) = *($0)
	*($7) = *($18)
	*($13) = *($8)
	*($12) = *($9)
	$10 = [1]
	if ( (CALL int_32 $3((int_32 $7), (int_32 *($2))) == 0) ){ goto $label$15 }
	*($0) = *($17)
	*($8) = *($13)
	*($9) = *($12)
	*($18) = *($7)
	$10 = ($3 + [24])
	*($17) = *($10)
	$17 = ($3 + [16])
	*($13) = *($17)
	$11 = ($3 + [8])
	*($12) = *($11)
	*($7) = *($3)
	*($10) = *($0)
	*($17) = *($8)
	*($11) = *($9)
	*($3) = *($18)
	
.LABEL $label$18
	$10 = [2]
	goto $label$15 
	
.LABEL $label$17
	$10 = ($10 + [2])
	goto $label$15 
	
.LABEL $label$16
	$10 = ($10 + [3])
	
.LABEL $label$15
	if ( CALL int_32 $5((int_32 $7), (int_32 *($2))) ){ goto $label$23 }
	$0 = $4
	
.LOOP $label$25:
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$24 }
	$17 = CALL int_32 $0((int_32 $7), (int_32 *($2)))
	$0 = ($0 + [-32])
	if ( ($17 == 0) ){ goto $label$25 }
	$17 = ($5 + [24])
	*(($8 = ($18 + [24]))) = *($17)
	$12 = ($5 + [16])
	*(($9 = ($18 + [16]))) = *($12)
	$13 = ($5 + [8])
	*(($11 = ($18 + [8]))) = *($13)
	*($18) = *($5)
	$14 = ($0 + [56])
	*($17) = *($14)
	$15 = ($0 + [48])
	*($12) = *($15)
	$12 = ($0 + [40])
	*($13) = *($12)
	$17 = ($0 + [32])
	*($5) = *($17)
	*($15) = *($9)
	*($17) = *($18)
	*($14) = *($8)
	*($12) = *($11)
	$10 = ($10 + [1])
	goto $label$7 
	
.LABEL $label$24
	$0 = ($5 + [32])
	if ( CALL int_32 $5((int_32 $3), (int_32 *($2))) ){ goto $label$26 }
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$6 }
	$0 = ($5 + [64])
	
.LOOP $label$28:
	$17 = ($0 + [-32])
	if ( CALL int_32 $5((int_32 $17), (int_32 *($2))) ){ goto $label$27 }
	$0 = ($0 + [32])
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$28 }
	goto $label$6 
	
.LABEL $label$27
	$8 = ($0 + [-8])
	*(($7 = ($18 + [24]))) = *($8)
	$9 = ($0 + [-16])
	*(($10 = ($18 + [16]))) = *($9)
	$11 = ($0 + [-24])
	*(($12 = ($18 + [8]))) = *($11)
	*($18) = *($17)
	$13 = ($3 + [16])
	*($9) = *($13)
	$9 = ($3 + [8])
	*($11) = *($9)
	$11 = ($3 + [24])
	*($8) = *($11)
	*($17) = *($3)
	*($13) = *($10)
	*($11) = *($7)
	*($9) = *($12)
	*($3) = *($18)
	
.LABEL $label$26
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$6 }
	$17 = $3
	
.LOOP $label$29:
	$7 = CALL int_32 $5((int_32 $0), (int_32 *($2)))
	$0 = ($0 + [32])
	if ( ($7 == 0) ){ goto $label$29 }
	$7 = ($0 + [-32])
	
.LOOP $label$30:
	$17 = ($17 + [-32])
	if ( CALL int_32 $5((int_32 $17), (int_32 *($2))) ){ goto $label$30 }
	if ( ((uint_32)$7 >= (uint_32)$17) ){ goto $label$5 }
	$8 = ($0 + [-8])
	*(($7 = ($18 + [24]))) = *($8)
	$9 = ($0 + [-16])
	*(($10 = ($18 + [16]))) = *($9)
	$11 = ($0 + [-24])
	*(($12 = ($18 + [8]))) = *($11)
	$13 = ($0 + [-32])
	*($18) = *($13)
	$14 = ($17 + [16])
	*($9) = *($14)
	$9 = ($17 + [8])
	*($11) = *($9)
	$11 = ($17 + [24])
	*($8) = *($11)
	*($13) = *($17)
	*($14) = *($10)
	*($11) = *($7)
	*($9) = *($12)
	*($17) = *($18)
	goto $label$29 
	
.LABEL $label$23
	$17 = $3
	goto $label$7 
	
.LABEL $label$14
	goto $label$6 
	
.LABEL $label$31
	if ( (CALL int_32 $3((int_32 $5), (int_32 *($2))) == 0) ){ goto $label$6 }
	$0 = ($5 + [24])
	*(($2 = ($18 + [24]))) = *($0)
	$7 = ($5 + [16])
	*(($17 = ($18 + [16]))) = *($7)
	$10 = ($5 + [8])
	*(($8 = ($18 + [8]))) = *($10)
	*($18) = *($5)
	$9 = ($3 + [24])
	*($0) = *($9)
	$0 = ($3 + [16])
	*($7) = *($0)
	$7 = ($3 + [8])
	*($10) = *($7)
	*($5) = *($3)
	*($9) = *($2)
	*($0) = *($17)
	*($7) = *($8)
	*($3) = *($18)
	goto $label$6 
	
.LABEL $label$13
	$17 = ($5 + [32])
	$7 = CALL int_32 $17((int_32 $5), (int_32 *($2)))
	$0 = ($5 + [64])
	$8 = CALL int_32 $0((int_32 $17), (int_32 *($2)))
	if ( ($7 == 0) ){ goto $label$34 }
	$10 = ($5 + [24])
	*(($7 = ($18 + [24]))) = *($10)
	$12 = ($5 + [16])
	*(($9 = ($18 + [16]))) = *($12)
	$13 = ($5 + [8])
	*(($11 = ($18 + [8]))) = *($13)
	*($18) = *($5)
	if ( ($8 == 0) ){ goto $label$33 }
	*($5) = *($0)
	$17 = ($0 + [24])
	*($10) = *($17)
	$8 = ($0 + [16])
	*($12) = *($8)
	$10 = ($0 + [8])
	*($13) = *($10)
	*($17) = *($7)
	*($8) = *($9)
	*($10) = *($11)
	*($0) = *($18)
	goto $label$32 
	
.LABEL $label$34
	if ( ($8 == 0) ){ goto $label$32 }
	$8 = ($17 + [24])
	*(($7 = ($18 + [24]))) = *($8)
	$9 = ($17 + [16])
	*(($10 = ($18 + [16]))) = *($9)
	$11 = ($17 + [8])
	*(($12 = ($18 + [8]))) = *($11)
	*($18) = *($17)
	$13 = ($0 + [24])
	*($8) = *($13)
	$14 = ($0 + [16])
	*($9) = *($14)
	$15 = ($0 + [8])
	*($11) = *($15)
	*($17) = *($0)
	*($13) = *($7)
	*($14) = *($10)
	*($15) = *($12)
	*($0) = *($18)
	if ( (CALL int_32 $17((int_32 $5), (int_32 *($2))) == 0) ){ goto $label$32 }
	$13 = ($5 + [24])
	*($7) = *($13)
	$14 = ($5 + [16])
	*($10) = *($14)
	$15 = ($5 + [8])
	*($12) = *($15)
	*($18) = *($5)
	*($13) = *($8)
	*($14) = *($9)
	*($15) = *($11)
	*($5) = *($17)
	*($8) = *($7)
	*($9) = *($10)
	*($11) = *($12)
	*($17) = *($18)
	goto $label$32 
	
.LABEL $label$33
	*($5) = *($17)
	$8 = ($17 + [24])
	*($10) = *($8)
	$10 = ($17 + [16])
	*($12) = *($10)
	$12 = ($17 + [8])
	*($13) = *($12)
	*($8) = *($7)
	*($10) = *($9)
	*($12) = *($11)
	*($17) = *($18)
	if ( (CALL int_32 $0((int_32 $17), (int_32 *($2))) == 0) ){ goto $label$32 }
	$8 = ($17 + [24])
	*(($7 = ($18 + [24]))) = *($8)
	$9 = ($17 + [16])
	*(($10 = ($18 + [16]))) = *($9)
	$11 = ($17 + [8])
	*(($12 = ($18 + [8]))) = *($11)
	*($18) = *($17)
	$13 = ($0 + [24])
	*($8) = *($13)
	$8 = ($0 + [16])
	*($9) = *($8)
	$9 = ($0 + [8])
	*($11) = *($9)
	*($17) = *($0)
	*($13) = *($7)
	*($8) = *($10)
	*($9) = *($12)
	*($0) = *($18)
	
.LABEL $label$32
	$17 = ($5 + [96])
	if ( ((int_32)$17 == (int_32)$1) ){ goto $label$6 }
	$11 = [0]
	
.LOOP $label$35:
	$12 = $17
	if ( (CALL int_32 $12((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$36 }
	*(($13 = ($18 + [24]))) = *(($12 + [24]))
	*(($14 = ($18 + [16]))) = *(($12 + [16]))
	*(($15 = ($18 + [8]))) = *(($12 + [8]))
	*($18) = *($12)
	$17 = $11
	
.LOOP $label$38:
	$7 = ($0 + [88])
	*((($0 = ($5 + $17)) + [120])) = *($7)
	$8 = ($0 + [80])
	*(($0 + [112])) = *($8)
	$10 = ($0 + [72])
	*(($0 + [104])) = *($10)
	$9 = ($0 + [64])
	*(($0 + [96])) = *($9)
	if ( ((int_32)$17 == (int_32)[-64]) ){ goto $label$37 }
	$17 = ($17 + [-32])
	if ( CALL int_32 $18((int_32 ($0 + [32])), (int_32 *($2))) ){ goto $label$38 }
	
.LABEL $label$37
	*($7) = *($13)
	*($8) = *($14)
	*($10) = *($15)
	*($9) = *($18)
	
.LABEL $label$36
	$11 = ($11 + [32])
	$0 = $12
	$17 = ($12 + [32])
	if ( ((int_32)$17 != (int_32)$1) ){ goto $label$35 }
	goto $label$6 
	
.LABEL $label$12
	$0 = ($5 + [32])
	$17 = CALL int_32 $0((int_32 $5), (int_32 *($2)))
	$7 = CALL int_32 $3((int_32 $0), (int_32 *($2)))
	if ( ($17 == 0) ){ goto $label$9 }
	$8 = ($5 + [24])
	*(($17 = ($18 + [24]))) = *($8)
	$9 = ($5 + [16])
	*(($10 = ($18 + [16]))) = *($9)
	$11 = ($5 + [8])
	*(($12 = ($18 + [8]))) = *($11)
	*($18) = *($5)
	if ( ($7 == 0) ){ goto $label$8 }
	*($5) = *($3)
	$2 = ($3 + [24])
	*($8) = *($2)
	$0 = ($3 + [16])
	*($9) = *($0)
	$5 = ($3 + [8])
	*($11) = *($5)
	*($2) = *($17)
	*($3) = *($18)
	*($0) = *($10)
	*($5) = *($12)
	goto $label$6 
	
.LABEL $label$11
	CALL $99($5, ($5 + [32]), ($5 + [64]), $3, $2)
	goto $label$6 
	
.LABEL $label$10
	$0 = ($5 + [96])
	$17 = ($5 + [64])
	$7 = ($5 + [32])
	CALL $99($5, $7, $17, $0, $2)
	if ( (CALL int_32 $3((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$6 }
	$10 = ($0 + [24])
	*(($8 = ($18 + [24]))) = *($10)
	$12 = ($0 + [16])
	*(($9 = ($18 + [16]))) = *($12)
	$13 = ($0 + [8])
	*(($11 = ($18 + [8]))) = *($13)
	*($18) = *($0)
	$14 = ($3 + [24])
	*($10) = *($14)
	$15 = ($3 + [16])
	*($12) = *($15)
	$16 = ($3 + [8])
	*($13) = *($16)
	*($0) = *($3)
	*($15) = *($9)
	*($16) = *($11)
	*($3) = *($18)
	*($14) = *($8)
	if ( (CALL int_32 $0((int_32 $17), (int_32 *($2))) == 0) ){ goto $label$6 }
	$14 = ($17 + [24])
	*($8) = *($14)
	$15 = ($17 + [16])
	*($9) = *($15)
	$16 = ($17 + [8])
	*($11) = *($16)
	*($18) = *($17)
	*($14) = *($10)
	*($15) = *($12)
	*($16) = *($13)
	*($17) = *($0)
	*($10) = *($8)
	*($12) = *($9)
	*($13) = *($11)
	*($0) = *($18)
	if ( (CALL int_32 $17((int_32 $7), (int_32 *($2))) == 0) ){ goto $label$6 }
	$8 = ($7 + [24])
	*(($0 = ($18 + [24]))) = *($8)
	$9 = ($7 + [16])
	*(($10 = ($18 + [16]))) = *($9)
	$11 = ($7 + [8])
	*(($12 = ($18 + [8]))) = *($11)
	*($18) = *($7)
	$13 = ($17 + [24])
	*($8) = *($13)
	$14 = ($17 + [16])
	*($9) = *($14)
	$15 = ($17 + [8])
	*($11) = *($15)
	*($7) = *($17)
	*($13) = *($0)
	*($14) = *($10)
	*($15) = *($12)
	*($17) = *($18)
	if ( (CALL int_32 $7((int_32 $5), (int_32 *($2))) == 0) ){ goto $label$6 }
	$2 = ($5 + [24])
	*($0) = *($2)
	$17 = ($5 + [16])
	*($10) = *($17)
	$13 = ($5 + [8])
	*($12) = *($13)
	*($18) = *($5)
	*($2) = *($8)
	*($17) = *($9)
	*($13) = *($11)
	*($5) = *($7)
	*($8) = *($0)
	*($9) = *($10)
	*($11) = *($12)
	*($7) = *($18)
	goto $label$6 
	
.LABEL $label$9
	if ( ($7 == 0) ){ goto $label$6 }
	$7 = ($0 + [24])
	*(($17 = ($18 + [24]))) = *($7)
	$10 = ($0 + [16])
	*(($8 = ($18 + [16]))) = *($10)
	$12 = ($0 + [8])
	*(($9 = ($18 + [8]))) = *($12)
	*($18) = *($0)
	$11 = ($3 + [24])
	*($7) = *($11)
	$13 = ($3 + [16])
	*($10) = *($13)
	$14 = ($3 + [8])
	*($12) = *($14)
	*($0) = *($3)
	*($13) = *($8)
	*($14) = *($9)
	*($3) = *($18)
	*($11) = *($17)
	if ( (CALL int_32 $0((int_32 $5), (int_32 *($2))) == 0) ){ goto $label$6 }
	$2 = ($5 + [24])
	*($17) = *($2)
	$11 = ($5 + [16])
	*($8) = *($11)
	$13 = ($5 + [8])
	*($9) = *($13)
	*($18) = *($5)
	*($2) = *($7)
	*($11) = *($10)
	*($13) = *($12)
	*($5) = *($0)
	*($7) = *($17)
	*($10) = *($8)
	*($12) = *($9)
	*($0) = *($18)
	goto $label$6 
	
.LABEL $label$8
	*($5) = *($0)
	$5 = ($0 + [24])
	*($8) = *($5)
	$7 = ($0 + [16])
	*($9) = *($7)
	$8 = ($0 + [8])
	*($11) = *($8)
	*($5) = *($17)
	*($7) = *($10)
	*($8) = *($12)
	*($0) = *($18)
	if ( (CALL int_32 $3((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$6 }
	$17 = ($0 + [24])
	*(($2 = ($18 + [24]))) = *($17)
	$7 = ($0 + [16])
	*(($5 = ($18 + [16]))) = *($7)
	$10 = ($0 + [8])
	*(($8 = ($18 + [8]))) = *($10)
	*($18) = *($0)
	$9 = ($3 + [24])
	*($17) = *($9)
	$17 = ($3 + [16])
	*($7) = *($17)
	$7 = ($3 + [8])
	*($10) = *($7)
	*($0) = *($3)
	*($17) = *($5)
	*($7) = *($8)
	*($3) = *($18)
	*($9) = *($2)
	goto $label$6 
	
.LABEL $label$7
	$8 = ($5 + [32])
	if ( ((uint_32)$8 >= (uint_32)$17) ){ goto $label$39 }
	
.LOOP $label$40:
	$0 = ($8 + [-32])
	
.LOOP $label$41:
	$0 = ($0 + [32])
	if ( CALL int_32 $0((int_32 $7), (int_32 *($2))) ){ goto $label$41 }
	$8 = ($0 + [32])
	
.LOOP $label$42:
	$17 = ($17 + [-32])
	if ( (CALL int_32 $17((int_32 $7), (int_32 *($2))) == 0) ){ goto $label$42 }
	if ( ((uint_32)$0 > (uint_32)$17) ){ goto $label$43 }
	$12 = ($0 + [24])
	*(($9 = ($18 + [24]))) = *($12)
	$13 = ($0 + [16])
	*(($11 = ($18 + [16]))) = *($13)
	$15 = ($0 + [8])
	*(($14 = ($18 + [8]))) = *($15)
	*($18) = *($0)
	$16 = ($17 + [24])
	*($12) = *($16)
	$12 = ($17 + [16])
	*($13) = *($12)
	$13 = ($17 + [8])
	*($15) = *($13)
	*($0) = *($17)
	*($16) = *($9)
	*($12) = *($11)
	*($13) = *($14)
	*($17) = *($18)
	$7 = ( $17 ? $7 : ((int_32)$7 == (int_32)$0) )
	$10 = ($10 + [1])
	goto $label$40 
	
.LABEL $label$43
	$8 = $0
	
.LABEL $label$39
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$44 }
	if ( (CALL int_32 $7((int_32 $8), (int_32 *($2))) == 0) ){ goto $label$44 }
	$17 = ($8 + [24])
	*(($0 = ($18 + [24]))) = *($17)
	$12 = ($8 + [16])
	*(($9 = ($18 + [16]))) = *($12)
	$13 = ($8 + [8])
	*(($11 = ($18 + [8]))) = *($13)
	*($18) = *($8)
	$14 = ($7 + [24])
	*($17) = *($14)
	$17 = ($7 + [16])
	*($12) = *($17)
	$12 = ($7 + [8])
	*($13) = *($12)
	*($8) = *($7)
	*($14) = *($0)
	*($17) = *($9)
	*($12) = *($11)
	*($7) = *($18)
	$10 = ($10 + [1])
	
.LABEL $label$44
	if ( $10 ){ goto $label$46 }
	$17 = CALL $100($5, $8, $2)
	$0 = ($8 + [32])
	if ( CALL $100($0, $1, $2) ){ goto $label$45 }
	if ( $17 ){ goto $label$2 }
	
.LABEL $label$46
	if ( ((int_32)($8 - $5) >= (int_32)($1 - $8)) ){ goto $label$3 }
	CALL $73($5, $8, $2)
	$5 = ($8 + [32])
	goto $label$4 
	
.LABEL $label$45
	$1 = $8
	$0 = $5
	if ( ($17 == 0) ){ goto $label$1 }
	
.LABEL $label$6
	*([0] + [4]) = ($18 + [32])
	return 
	
.LABEL $label$5
	$5 = $7
	goto $label$4 
	
.LABEL $label$3
	CALL $73(($8 + [32]), $1, $2)
	$1 = $8
	$0 = $5
	goto $label$1 
	$17
}

void .FUNC $70 (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$5 = (*([0] + [4]) - [48])
	$11 = $5
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [832])
	*(($9 = ($1 + [12]))) = *($1 + [8])
	$3 = *($1)
	CALL eosio_assert([1], [1120])
	$4 = *($1 + [8])
	$6 = *($9)
	$7 = ($6 - $4)
	$10 = (CASTING uint_64)(uint_32 int_32($7 >> [5]))
	$9 = [33]
	
.LOOP $label$1:
	$9 = ($9 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$3 }
	$7 = (((int_32)uint_32(($7 + [-32]) >> [5]) * (int_32)[25]) + $9)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($9 + [-25])
	
.LABEL $label$2
	if ( ($7 <= [513]) ){ goto $label$5 }
	$8 = CALL malloc($7)
	goto $label$4 
	
.LABEL $label$5
	$8 = ($5 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$4
	*($11 + [8]) = $8
	$4 = ($8 + $7)
	*($11 + [16]) = $4
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [608])
	CALL memcpy($8, $1, [8])
	$9 = ($8 + [8])
	*($11 + [12]) = $9
	$10 = (CASTING uint_64)(uint_32 int_32((*(($1 + [12])) - *(($1 + [8]))) >> [5]))
	
.LOOP $label$6:
	$5 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$6 = ((int_64)$10) != (int_64)0
	*($11 + [32]) = (($6) << [7]) | ($5 & [127]))
	CALL eosio_assert(((int_32)($4 - $9) > (int_32)[0]), [608])
	CALL memcpy($9, ($11 + [32]), [1])
	$9 = ($9 + [1])
	*($11 + [12]) = $9
	if ( $6 ){ goto $label$6 }
	$5 = *(($1 + [12]))
	$9 = *(($1 + [8]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	*($11 + [24]) = ($11 + [8])
	*($11 + [32]) = $9
	*((($11 + [32]) + [8])) = ($9 + [24])
	*($11 + [36]) = ($9 + [8])
	CALL $40(($11 + [32]), ($11 + [24]))
	$9 = ($9 + [32])
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$8 }
	
.LABEL $label$7
	CALL db_update_i64(*($1 + [24]), $2, $8, $7)
	if ( ($7 <= [513]) ){ goto $label$9 }
	CALL free($8)
	
.LABEL $label$9
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*([0] + [4]) = ($11 + [48])
}

void .FUNC $71 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $112(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $116($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [8])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $6
	CALL $113($6)
	
.LABEL $label$11
	CALL $113($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $113($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $76 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = *([0] + [4])
	$10 = $2
	$7 = (int_64)1
	$8 = *($0 + [8])
	$5 = (int_64)($8 == 0)
	if ( $5 ){ goto $label$1 }
	$9 = ((int_64)$8 + (int_64)1)
	$7 = (int_64)1
	
.LOOP $label$2:
	$7 = ((int_64)$7 * (int_64)10)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)$9 > (int_64)1) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [8])
	$2 = ($2 - (((CASTING uint_32)(uint_64 ((int_64)$8 + (int_64)1)) + [15]) & [1008]))
	*([0] + [4]) = $2
	*(($6 = ($2 + ($3 = (CASTING uint_32)(uint_64 $8))))) = [0]
	$4 = *($0)
	if ( $5 ){ goto $label$3 }
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$4 % (int_64)$7)
	$0 = ($6 + [-1])
	
.LOOP $label$4:
	*($0) = ((int_64)((int_64)$9 % (int_64)10) + (int_64)48)
	$0 = ($0 + [-1])
	$9 = ((int_64)$9 / (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$4 }
	
.LABEL $label$3
	CALL printi(((int_64)$4 / (int_64)$7))
	CALL prints([1632])
	CALL prints_l($2, $3)
	CALL prints([1648])
	CALL $96($1, [0])
	*([0] + [4]) = $10
}

void .FUNC _ZN5eosio14egc_texas_game13compare_cardsERNSt3__16vectorINS0_12player_pokerENS1_9allocatorIS3_EEEE (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [96])
	*([0] + [4]) = $13
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$10 = *($2)
	$9 = *($2 + [4])
	if ( ((int_32)($9 - $10) != (int_32)[40]) ){ goto $label$4 }
	CALL $84($0, $10)
	goto $label$3 
	
.LABEL $label$4
	*($13 + [80]) = [13]
	CALL $86($10, $9, ($13 + [80]))
	*($13 + [88]) = [0]
	*($13 + [80]) = (int_64)0
	*($13 + [76]) = [0]
	CALL $87(($13 + [80]), ($13 + [76]))
	$10 = *($2)
	$7 = ($2 + [4])
	if ( ((int_32)(*($7) - $10) == (int_32)[40]) ){ goto $label$5 }
	$12 = (($13 + [48]) + [8])
	$8 = [0]
	
.LOOP $label$6:
	$8 = ($8 + [1])
	$11 = ((int_32)$8 * (int_32)[40])
	$9 = ($10 + ((int_32)*($13 + [76]) * (int_32)[40]))
	if ( ((int_64)*($9 + [32]) != (int_64)*(($10 + $11) + [32])) ){ goto $label$5 }
	*($12) = [0]
	*($13 + [48]) = (int_64)0
	$3 = ($9 + [24])
	$10 = (*($3) - *($9 + [20]))
	$4 = int_32($10 >> [3])
	if ( ($4 == 0) ){ goto $label$7 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$2 }
	$10 = CALL $112($10)
	*($12) = ($10 + ($4 << [3]))
	*($13 + [48]) = $10
	*($13 + [52]) = $10
	$4 = *(($9 + [20]))
	$9 = (*($3) - $4)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($10, $4, $9)
	*($13 + [52]) = (*($13 + [52]) + $9)
	
.LABEL $label$7
	CALL _ZN5eosio14egc_texas_game9sortcardsENSt3__16vectorIyNS1_9allocatorIyEEEE(($13 + [64]), $13, ($13 + [48]))
	$10 = *($13 + [48])
	if ( ($10 == 0) ){ goto $label$8 }
	*($13 + [52]) = $10
	CALL $113($10)
	
.LABEL $label$8
	*(($3 = (($13 + [16]) + [8]))) = [0]
	*($13 + [16]) = (int_64)0
	$10 = (*($2) + $11)
	$11 = ($10 + [24])
	$9 = (*($11) - *($10 + [20]))
	$4 = int_32($9 >> [3])
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$9 = CALL $112($9)
	*($3) = ($9 + ($4 << [3]))
	*($13 + [16]) = $9
	*($13 + [20]) = $9
	$4 = *(($10 + [20]))
	$10 = (*($11) - $4)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($9, $4, $10)
	*($13 + [20]) = (*($13 + [20]) + $10)
	
.LABEL $label$9
	CALL _ZN5eosio14egc_texas_game9sortcardsENSt3__16vectorIyNS1_9allocatorIyEEEE(($13 + [32]), $13, ($13 + [16]))
	$10 = *($13 + [16])
	if ( ($10 == 0) ){ goto $label$10 }
	*($13 + [20]) = $10
	CALL $113($10)
	
.LABEL $label$10
	$10 = *($13 + [64])
	$9 = *($13 + [68])
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$13 }
	$3 = int_32(($9 - $10) >> [4])
	$11 = [0]
	$9 = *($13 + [32])
	$4 = [0]
	
.LOOP $label$17:
	$6 = *($9)
	$5 = *($10)
	if ( (uint_64)($5 <= $6) ){ goto $label$16 }
	$9 = ($9 + [16])
	$10 = ($10 + [16])
	$4 = (((int_64)$5 == (int_64)$6) + $4)
	$11 = ($11 + [1])
	if ( ($11 <= $3) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	*($13 + [76]) = $8
	$10 = *($13 + [80])
	*($13 + [84]) = $10
	if ( ((int_32)$10 == (int_32)*((($13 + [80]) + [8]))) ){ goto $label$18 }
	*($10) = $8
	*($13 + [84]) = ($10 + [4])
	if ( ((int_32)$4 == (int_32)[5]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$18
	CALL $87(($13 + [80]), ($13 + [76]))
	
.LABEL $label$15
	if ( ((int_32)$4 != (int_32)[5]) ){ goto $label$13 }
	
.LABEL $label$14
	*($13 + [12]) = $8
	$10 = *($13 + [84])
	if ( ((uint_32)$10 >= (uint_32)*((($13 + [80]) + [8]))) ){ goto $label$19 }
	*($10) = $8
	*($13 + [84]) = ($10 + [4])
	$10 = *($13 + [32])
	if ( $10 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$19
	CALL $89(($13 + [80]), ($13 + [12]))
	
.LABEL $label$13
	$10 = *($13 + [32])
	if ( ($10 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	*($13 + [36]) = $10
	CALL $113($10)
	
.LABEL $label$11
	$10 = *($13 + [64])
	if ( ($10 == 0) ){ goto $label$20 }
	*($13 + [68]) = $10
	CALL $113($10)
	
.LABEL $label$20
	$10 = *($2)
	if ( ($8 <= (((int_32)(*($7) - $10) / (int_32)[40]) + [-1])) ){ goto $label$6 }
	
.LABEL $label$5
	$11 = *($13 + [80])
	$12 = *($13 + [84])
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$21 }
	$9 = [0]
	$7 = ($0 + [8])
	$8 = ($0 + [4])
	$4 = [1]
	
.LOOP $label$22:
	$3 = ($10 + ((int_32)*(($11 + $9)) * (int_32)[40]))
	$10 = *($8)
	if ( ((int_32)$10 == (int_32)*($7)) ){ goto $label$24 }
	*($8) = ($10 + [8])
	*($10) = *($3)
	goto $label$23 
	
.LABEL $label$24
	CALL $84($0, $3)
	$11 = *($13 + [80])
	$12 = *($13 + [84])
	
.LABEL $label$23
	if ( ((uint_32)$4 >= (uint_32)int_32(($12 - $11) >> [2])) ){ goto $label$21 }
	$9 = ($9 + [4])
	$4 = ($4 + [1])
	$10 = *($2)
	goto $label$22 
	
.LABEL $label$21
	if ( ($11 == 0) ){ goto $label$3 }
	*($13 + [84]) = $11
	CALL $113($11)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [96])
	return (unreachable)
	
.LABEL $label$2
	CALL $116(($13 + [48]))
	
.LABEL $label$1
	CALL $116(($13 + [16]))
	(unreachable)
}

void .FUNC _ZN5eosio14egc_texas_game7chippotERNSt3__16vectorINS_11player_chipENS1_9allocatorIS3_EEEEy (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$20 = (*([0] + [4]) - [32])
	*([0] + [4]) = $20
	*($0 + [8]) = [0]
	*($0 + [4]) = [0]
	$17 = ($0 + [4])
	*($0) = $17
	$7 = *($2)
	$11 = *($2 + [4])
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$1 }
	$14 = ($2 + [4])
	$15 = [8]
	$16 = [0]
	
.LOOP $label$3:
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$2 }
	$18 = ($7 + ($16 << [5]))
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 ([0] - (*($18 + [24]) & [1]))) << (int_64)56) >> (int_64)56)
	if ( (int_64)(*($18 + [8]) == 0) ){ goto $label$4 }
	*(($9 = (($20 + [16]) + [8]))) = [0]
	*($20 + [16]) = (int_64)0
	if ( ((uint_32)$16 >= (uint_32)int_32(($11 - $7) >> [5])) ){ goto $label$5 }
	$4 = *($18 + [8])
	$5 = *(($18 + [16]))
	$18 = $15
	$19 = $16
	
.LOOP $label$6:
	$7 = ($7 + $18)
	*(($10 = ($20 + [8]))) = *(($7 + [8]))
	*($20) = *($7)
	CALL prints([1680])
	CALL $76($20)
	*(($7 = (*($2) + $18))) = $4
	*(($7 + [8])) = $5
	CALL prints([1696])
	CALL $76((*($2) + $18))
	$11 = (*($2) + $18)
	$6 = ($11 + [-8])
	$7 = *($20 + [20])
	if ( ((int_32)$7 == (int_32)*($9)) ){ goto $label$8 }
	*(($7 + [8])) = *($11)
	*(($7 + [24])) = *(($11 + [16]))
	*(($7 + [16])) = *(($11 + [8]))
	*($7) = *($6)
	*($20 + [20]) = ($7 + [32])
	goto $label$7 
	
.LABEL $label$8
	CALL $38(($20 + [16]), $6)
	
.LABEL $label$7
	$13 = *($20)
	$12 = *($10)
	CALL eosio_assert(((int_64)$5 == (int_64)$12), [1008])
	$13 = (int_64)
	CALL eosio_assert(((int_64)$13($13 - $4)) > (int_64)-4611686018427387904), [1056])
	CALL eosio_assert(((int_64)$13 < (int_64)4611686018427387904), [1088])
	*(($7 = (*($2) + $18))) = $13
	*(($7 + [8])) = $12
	CALL prints([1712])
	CALL $76((*($2) + $18))
	$18 = ($18 + [32])
	$7 = *($2)
	$19 = ($19 + [1])
	if ( ($19 <= int_32((*($14) - $7) >> [5])) ){ goto $label$6 }
	
.LABEL $label$5
	$11 = $17
	$18 = *($17)
	if ( $18 ){ goto $label$11 }
	$18 = $17
	$11 = $17
	$7 = *($11)
	if ( $7 ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$11
	
.LOOP $label$14:
	$7 = *($18 + [16])
	if ( ((int_32)$16 >= (int_32)$7) ){ goto $label$16 }
	$11 = $18
	$7 = *($18)
	if ( $7 ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$16
	if ( ((int_32)$7 >= (int_32)$16) ){ goto $label$12 }
	$11 = ($18 + [4])
	$7 = *($18 + [4])
	if ( ($7 == 0) ){ goto $label$12 }
	
.LABEL $label$15
	$18 = $7
	goto $label$14 
	
.LABEL $label$13
	$11 = $18
	
.LABEL $label$12
	$7 = *($11)
	if ( $7 ){ goto $label$9 }
	
.LABEL $label$10
	*(($7 = CALL $112([32])) + [20]) = [0]
	*($7 + [24]) = [0]
	*($7 + [28]) = [0]
	*($7) = (int_64)0
	*($7 + [8]) = $18
	*($7 + [16]) = $16
	*($11) = $7
	$18 = $7
	$19 = *(*($0))
	if ( ($19 == 0) ){ goto $label$17 }
	*($0) = $19
	$18 = *($11)
	
.LABEL $label$17
	CALL $97(*(($0 + [4])), $18)
	*(($18 = ($0 + [8]))) = (*($18) + [1])
	
.LABEL $label$9
	$18 = ($7 + [20])
	if ( ((int_32)$18 == (int_32)($20 + [16])) ){ goto $label$18 }
	CALL $98($18, *($20 + [16]), *($20 + [20]))
	
.LABEL $label$18
	$18 = *($20 + [16])
	if ( ($18 == 0) ){ goto $label$19 }
	*($20 + [20]) = $18
	CALL $113($18)
	
.LABEL $label$19
	$11 = *($14)
	$7 = *($2)
	
.LABEL $label$4
	$3 = ((int_64)$8 + (int_64)$3)
	$15 = ($15 + [32])
	$16 = ($16 + [1])
	if ( ($16 <= int_32(($11 - $7) >> [5])) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$18 = *($17)
	if ( ($18 == 0) ){ goto $label$23 }
	$11 = $17
	
.LOOP $label$25:
	$7 = *($18 + [16])
	if ( ((int_32)$16 >= (int_32)$7) ){ goto $label$27 }
	$11 = $18
	$7 = *($18)
	if ( $7 ){ goto $label$26 }
	goto $label$22 
	
.LABEL $label$27
	if ( ((int_32)$7 >= (int_32)$16) ){ goto $label$24 }
	$11 = ($18 + [4])
	$7 = *($18 + [4])
	if ( ($7 == 0) ){ goto $label$24 }
	
.LABEL $label$26
	$18 = $7
	goto $label$25 
	
.LABEL $label$24
	$17 = $18
	$18 = $11
	$7 = *($18)
	if ( $7 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$23
	$18 = $17
	$7 = *($18)
	if ( $7 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$22
	$17 = $18
	$7 = *($18)
	if ( $7 ){ goto $label$20 }
	
.LABEL $label$21
	*(($7 = CALL $112([32])) + [20]) = [0]
	*($7 + [24]) = [0]
	*($7 + [28]) = [0]
	*($7) = (int_64)0
	*($7 + [8]) = $17
	*($7 + [16]) = $16
	*($18) = $7
	$11 = $7
	$19 = *(*($0))
	if ( ($19 == 0) ){ goto $label$28 }
	*($0) = $19
	$11 = *($18)
	
.LABEL $label$28
	CALL $97(*(($0 + [4])), $11)
	*(($18 = ($0 + [8]))) = (*($18) + [1])
	
.LABEL $label$20
	$18 = ($7 + [20])
	if ( ((int_32)$18 == (int_32)$2) ){ goto $label$1 }
	CALL $98($18, *($2), *(($2 + [4])))
	
.LABEL $label$1
	*([0] + [4]) = ($20 + [32])
}

void .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [608])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [608])
	CALL memcpy(*($2 + [4]), $0, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [624])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $112([48])) + [8 align=4]) = (int_64)0
	*($6 + [16 align=4]) = (int_64)0
	*($6 + [24 align=4]) = (int_64)0
	*($6 + [32]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [144])
	CALL memcpy($6, $4, [8])
	*($8 + [36]) = ($4 + [8])
	CALL $41(($8 + [32]), ($6 + [8]))
	CALL $42(($8 + [32]), ($6 + [20]))
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $43(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [20])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [24])) = $7
	CALL $113($7)
	
.LABEL $label$10
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$11 }
	*(($4 + [12])) = $7
	CALL $113($7)
	
.LABEL $label$11
	CALL $113($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $37 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$8 = (*([0] + [4]) - [64])
	$12 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [832])
	$4 = *($1)
	$10 = *(($1 + [24]))
	$11 = *($1 + [20])
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$3 }
	$9 = *(*($3))
	
.LOOP $label$4:
	if ( ((int_64)$9 == (int_64)*($11)) ){ goto $label$3 }
	$11 = ($11 + [32])
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$2 }
	$10 = *($3 + [4])
	CALL eosio_assert(((int_64)*($10 + [8]) == (int_64)*(($11 + [16]))), [896])
	$9 = ((int_64)*($11 + [8]) + (int_64)*($10))
	*($11 + [8]) = $9
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($11 + [8]) < (int_64)4611686018427387904), [976])
	goto $label$1 
	
.LABEL $label$2
	$5 = ($1 + [20])
	*(($12 + [40])) = (int_64)344826856192
	*($12 + [32]) = (int_64)0
	CALL eosio_assert([1], [368])
	$9 = (int_64)1346979907
	$11 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$10 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$10 = [0]
	
.LABEL $label$5
	CALL eosio_assert($10, [240])
	*($12 + [48]) = [0]
	*($12 + [24]) = *(*($3))
	$11 = *($3 + [4])
	*(($12 + [44])) = *(($11 + [12]))
	*(($6 = (($12 + [24]) + [16]))) = *(($11 + [8]))
	*((($12 + [24]) + [12])) = *(($11 + [4]))
	*($12 + [32]) = *($11)
	$10 = ($1 + [24])
	$11 = *($10)
	if ( ((int_32)$11 == (int_32)*(($1 + [28]))) ){ goto $label$10 }
	*($11) = *($12 + [24])
	*(($11 + [24])) = *((($12 + [24]) + [24]))
	*(($11 + [16])) = *($6)
	*(($11 + [8])) = *((($12 + [24]) + [8]))
	*($10) = (*($10) + [32])
	goto $label$1 
	
.LABEL $label$10
	CALL $38($5, ($12 + [24]))
	
.LABEL $label$1
	$6 = ($1 + [12])
	$10 = *($6)
	$11 = *($1 + [8])
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$11 }
	$9 = *(*($3))
	
.LOOP $label$12:
	if ( ((int_64)$9 == (int_64)*($11)) ){ goto $label$11 }
	$11 = ($11 + [32])
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$12 }
	$11 = $10
	
.LABEL $label$11
	$10 = *($3 + [4])
	CALL eosio_assert(((int_64)*($10 + [8]) == (int_64)*(($11 + [16]))), [1008])
	$9 = (int_64)
	*($11 + [8]) = $9(*($11 + [8]) - *($10)))
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [1056])
	CALL eosio_assert(((int_64)*($11 + [8]) < (int_64)4611686018427387904), [1088])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1120])
	$3 = *($1 + [8])
	$10 = *($6)
	$6 = ($10 - $3)
	$9 = (CASTING uint_64)(uint_32 int_32($6 >> [5]))
	$11 = [36]
	
.LOOP $label$13:
	$11 = ($11 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$13 }
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$15 }
	$3 = (((int_32)uint_32(($6 + [-32]) >> [5]) * (int_32)[28]) + $11)
	goto $label$14 
	
.LABEL $label$15
	$3 = ($11 + [-28])
	
.LABEL $label$14
	$10 = *(($1 + [20]))
	$11 = *(($1 + [24]))
	$6 = ($11 - $10)
	$9 = (CASTING uint_64)(uint_32 int_32($6 >> [5]))
	
.LOOP $label$16:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$16 }
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$17 }
	$3 = ((((int_32)uint_32(($6 + [-32]) >> [5]) * (int_32)[25]) + $3) + [25])
	
.LABEL $label$17
	if ( ($3 <= [513]) ){ goto $label$19 }
	$7 = CALL malloc($3)
	goto $label$18 
	
.LABEL $label$19
	$7 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$18
	*($12 + [8]) = $7
	$5 = ($7 + $3)
	*($12 + [16]) = $5
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [608])
	CALL memcpy($7, $1, [8])
	$10 = ($7 + [8])
	*($12 + [12]) = $10
	$9 = (CASTING uint_64)(uint_32 int_32((*(($1 + [12])) - *(($1 + [8]))) >> [5]))
	$8 = ($7 + [9])
	
.LOOP $label$20:
	$11 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$6 = ((int_64)$9) != (int_64)0
	*($12 + [24]) = (($6) << [7]) | ($11 & [127]))
	CALL eosio_assert(((int_32)($5 - $10) > (int_32)[0]), [608])
	$11 = $8
	CALL memcpy(($11 + [-1]), ($12 + [24]), [1])
	*($12 + [12]) = $11
	$8 = ($11 + [1])
	$10 = $11
	if ( $6 ){ goto $label$20 }
	$8 = *(($1 + [12]))
	$10 = *(($1 + [8]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$21 }
	
.LOOP $label$22:
	*($12 + [56]) = ($12 + [8])
	*($12 + [24]) = $10
	*((($12 + [24]) + [8])) = ($10 + [24])
	*($12 + [28]) = ($10 + [8])
	CALL $39(($12 + [24]), ($12 + [56]))
	$10 = ($10 + [32])
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$22 }
	$11 = *($12 + [12])
	
.LABEL $label$21
	$9 = (CASTING uint_64)(uint_32 int_32((*(($1 + [24])) - *(($1 + [20]))) >> [5]))
	$6 = (($12 + [8]) + [8])
	
.LOOP $label$23:
	$10 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$8 = ((int_64)$9) != (int_64)0
	*($12 + [24]) = (($8) << [7]) | ($10 & [127]))
	CALL eosio_assert(((int_32)(*($6) - $11) > (int_32)[0]), [608])
	CALL memcpy(*($12 + [12]), ($12 + [24]), [1])
	$11 = (*($12 + [12]) + [1])
	*($12 + [12]) = $11
	if ( $8 ){ goto $label$23 }
	$10 = *(($1 + [24]))
	$11 = *(($1 + [20]))
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$24 }
	
.LOOP $label$25:
	*($12 + [56]) = ($12 + [8])
	*($12 + [24]) = $11
	*((($12 + [24]) + [8])) = ($11 + [24])
	*($12 + [28]) = ($11 + [8])
	CALL $40(($12 + [24]), ($12 + [56]))
	$11 = ($11 + [32])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$25 }
	
.LABEL $label$24
	CALL db_update_i64(*($1 + [36]), $2, $7, $3)
	if ( ($3 <= [513]) ){ goto $label$26 }
	CALL free($7)
	
.LABEL $label$26
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$27 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$27
	*([0] + [4]) = ($12 + [64])
}

void .FUNC $78 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$8 = (*([0] + [4]) - [48])
	$14 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [832])
	$5 = *(($3 + [8]))
	$10 = *(($3 + [4]))
	$4 = *($1)
	$9 = ($1 + [12])
	$12 = *($9)
	$13 = *($1 + [8])
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$1 }
	$11 = *(*(*($3)))
	
.LOOP $label$2:
	if ( ((int_64)$11 == (int_64)*($13)) ){ goto $label$1 }
	$13 = ($13 + [32])
	if ( ((int_32)$12 != (int_32)$13) ){ goto $label$2 }
	$13 = $12
	
.LABEL $label$1
	$11 = *($10)
	$7 = *($10 + [8])
	$6 = *($5)
	CALL eosio_assert(((int_64)$6 != (int_64)0), [1568])
	CALL eosio_assert([1], [1584])
	CALL eosio_assert(((int_64)$7 == (int_64)*(($13 + [16]))), [896])
	$11 = ((int_64)*($13 + [8]) + (int_64)((int_64)$11 / (int_64)$6))
	*($13 + [8]) = $11
	CALL eosio_assert(((int_64)$11 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($13 + [8]) < (int_64)4611686018427387904), [976])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1120])
	$3 = *($1 + [8])
	$12 = *($9)
	$10 = ($12 - $3)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [5]))
	$13 = [36]
	
.LOOP $label$3:
	$13 = ($13 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$3 == (int_32)$12) ){ goto $label$5 }
	$3 = (((int_32)uint_32(($10 + [-32]) >> [5]) * (int_32)[28]) + $13)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($13 + [-28])
	
.LABEL $label$4
	$12 = *(($1 + [20]))
	$13 = *(($1 + [24]))
	$10 = ($13 - $12)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [5]))
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$12 == (int_32)$13) ){ goto $label$7 }
	$3 = ((((int_32)uint_32(($10 + [-32]) >> [5]) * (int_32)[25]) + $3) + [25])
	
.LABEL $label$7
	if ( ($3 <= [513]) ){ goto $label$9 }
	$9 = CALL malloc($3)
	goto $label$8 
	
.LABEL $label$9
	$9 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$8
	*($14 + [8]) = $9
	$5 = ($9 + $3)
	*($14 + [16]) = $5
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [608])
	CALL memcpy($9, $1, [8])
	$12 = ($9 + [8])
	*($14 + [12]) = $12
	$11 = (CASTING uint_64)(uint_32 int_32((*(($1 + [12])) - *(($1 + [8]))) >> [5]))
	$10 = ($9 + [9])
	
.LOOP $label$10:
	$13 = (CASTING uint_32)(uint_64 $11)
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	$8 = ((int_64)$11) != (int_64)0
	*($14 + [32]) = (($8) << [7]) | ($13 & [127]))
	CALL eosio_assert(((int_32)($5 - $12) > (int_32)[0]), [608])
	$13 = $10
	CALL memcpy(($13 + [-1]), ($14 + [32]), [1])
	*($14 + [12]) = $13
	$10 = ($13 + [1])
	$12 = $13
	if ( $8 ){ goto $label$10 }
	$10 = *(($1 + [12]))
	$12 = *(($1 + [8]))
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$11 }
	
.LOOP $label$12:
	*($14 + [24]) = ($14 + [8])
	*($14 + [32]) = $12
	*((($14 + [32]) + [8])) = ($12 + [24])
	*($14 + [36]) = ($12 + [8])
	CALL $39(($14 + [32]), ($14 + [24]))
	$12 = ($12 + [32])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$12 }
	$13 = *($14 + [12])
	
.LABEL $label$11
	$11 = (CASTING uint_64)(uint_32 int_32((*(($1 + [24])) - *(($1 + [20]))) >> [5]))
	$8 = (($14 + [8]) + [8])
	
.LOOP $label$13:
	$12 = (CASTING uint_32)(uint_64 $11)
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	$10 = ((int_64)$11) != (int_64)0
	*($14 + [32]) = (($10) << [7]) | ($12 & [127]))
	CALL eosio_assert(((int_32)(*($8) - $13) > (int_32)[0]), [608])
	CALL memcpy(*($14 + [12]), ($14 + [32]), [1])
	$13 = (*($14 + [12]) + [1])
	*($14 + [12]) = $13
	if ( $10 ){ goto $label$13 }
	$12 = *(($1 + [24]))
	$13 = *(($1 + [20]))
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$14 }
	
.LOOP $label$15:
	*($14 + [24]) = ($14 + [8])
	*($14 + [32]) = $13
	*((($14 + [32]) + [8])) = ($13 + [24])
	*($14 + [36]) = ($13 + [8])
	CALL $40(($14 + [32]), ($14 + [24]))
	$13 = ($13 + [32])
	if ( ((int_32)$13 != (int_32)$12) ){ goto $label$15 }
	
.LABEL $label$14
	CALL db_update_i64(*($1 + [36]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$16 }
	CALL free($9)
	
.LABEL $label$16
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$17 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	*([0] + [4]) = ($14 + [48])
}

void .FUNC $79 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$5 = (*([0] + [4]) - [64])
	$13 = $5
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [832])
	$4 = *($1)
	$8 = *(($1 + [12]))
	$11 = *($1 + [8])
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$3 }
	$12 = *(*(*($3)))
	
.LOOP $label$4:
	if ( ((int_64)$12 == (int_64)*($11)) ){ goto $label$3 }
	$11 = ($11 + [32])
	if ( ((int_32)$8 != (int_32)$11) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$2 }
	$8 = *($3 + [4])
	$12 = *($8)
	$7 = *($8 + [8])
	$6 = *(*($3 + [8]))
	CALL eosio_assert(((int_64)$6 != (int_64)0), [1568])
	CALL eosio_assert([1], [1584])
	CALL eosio_assert(((int_64)$7 == (int_64)*(($11 + [16]))), [896])
	$12 = ((int_64)*($11 + [8]) + (int_64)((int_64)$12 / (int_64)$6))
	*($11 + [8]) = $12
	CALL eosio_assert(((int_64)$12 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($11 + [8]) < (int_64)4611686018427387904), [976])
	goto $label$1 
	
.LABEL $label$2
	$10 = ($1 + [8])
	*(($13 + [40])) = (int_64)344826856192
	*($13 + [32]) = (int_64)0
	CALL eosio_assert([1], [368])
	$12 = (int_64)1346979907
	$11 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$8 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$8 = [0]
	
.LABEL $label$5
	CALL eosio_assert($8, [240])
	*($13 + [48]) = [0]
	*($13 + [24]) = *(*(*($3)))
	$11 = *($3 + [4])
	$12 = *($11)
	$7 = *($11 + [8])
	$6 = *(*($3 + [8]))
	CALL eosio_assert(((int_64)$6 != (int_64)0), [1568])
	CALL eosio_assert([1], [1584])
	*(($3 = (($13 + [24]) + [16]))) = $7
	*(($9 = (($13 + [24]) + [8]))) = ((int_64)$12 / (int_64)$6)
	$8 = ($1 + [12])
	$11 = *($8)
	if ( ((int_32)$11 == (int_32)*(($1 + [16]))) ){ goto $label$10 }
	*($11) = *($13 + [24])
	*(($11 + [24])) = *((($13 + [24]) + [24]))
	*(($11 + [16])) = *($3)
	*(($11 + [8])) = *($9)
	*($8) = (*($8) + [32])
	goto $label$1 
	
.LABEL $label$10
	CALL $38($10, ($13 + [24]))
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1120])
	$3 = *(($1 + [8]))
	$8 = *(($1 + [12]))
	$9 = ($8 - $3)
	$12 = (CASTING uint_64)(uint_32 int_32($9 >> [5]))
	$11 = [33]
	
.LOOP $label$11:
	$11 = ($11 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$11 }
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$13 }
	$9 = (((int_32)uint_32(($9 + [-32]) >> [5]) * (int_32)[25]) + $11)
	goto $label$12 
	
.LABEL $label$13
	$9 = ($11 + [-25])
	
.LABEL $label$12
	if ( ($9 <= [513]) ){ goto $label$15 }
	$10 = CALL malloc($9)
	goto $label$14 
	
.LABEL $label$15
	$10 = ($5 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$14
	*($13 + [8]) = $10
	$5 = ($10 + $9)
	*($13 + [16]) = $5
	CALL eosio_assert(((int_32)$9 > (int_32)[7]), [608])
	CALL memcpy($10, $1, [8])
	$11 = ($10 + [8])
	*($13 + [12]) = $11
	$12 = (CASTING uint_64)(uint_32 int_32((*(($1 + [12])) - *(($1 + [8]))) >> [5]))
	
.LOOP $label$16:
	$8 = (CASTING uint_32)(uint_64 $12)
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	$3 = ((int_64)$12) != (int_64)0
	*($13 + [24]) = (($3) << [7]) | ($8 & [127]))
	CALL eosio_assert(((int_32)($5 - $11) > (int_32)[0]), [608])
	CALL memcpy($11, ($13 + [24]), [1])
	$11 = ($11 + [1])
	*($13 + [12]) = $11
	if ( $3 ){ goto $label$16 }
	$8 = *(($1 + [12]))
	$11 = *(($1 + [8]))
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$17 }
	
.LOOP $label$18:
	*($13 + [56]) = ($13 + [8])
	*($13 + [24]) = $11
	*((($13 + [24]) + [8])) = ($11 + [24])
	*($13 + [28]) = ($11 + [8])
	CALL $40(($13 + [24]), ($13 + [56]))
	$11 = ($11 + [32])
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$18 }
	
.LABEL $label$17
	CALL db_update_i64(*($1 + [24]), $2, $10, $9)
	if ( ($9 <= [513]) ){ goto $label$19 }
	CALL free($10)
	
.LABEL $label$19
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$20 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$20
	*([0] + [4]) = ($13 + [64])
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [608])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $33(*($1), ($0 + [32]))
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [608])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [608])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [608])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [608])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [608])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [608])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [608])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}