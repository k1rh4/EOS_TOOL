(data (i32.const 4) "\00e\00\00")
(data (i32.const 16) "onerror\00")
(data (i32.const 32) "eosio\00")
(data (i32.const 48) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 112) "eosio.token\00")
(data (i32.const 128) "invalid symbol name\00")
(data (i32.const 160) "eoshoweoshow\00")
(data (i32.const 176) "Your bonus\00")
(data (i32.const 192) "eoseosboyboy\00")
(data (i32.const 208) "loserloser11\00")
(data (i32.const 224) "fangfang3344\00")
(data (i32.const 240) "taidastrong2\00")
(data (i32.const 256) "blackjackone\00")
(data (i32.const 272) "nathanrobert\00")
(data (i32.const 288) "sossos112233\00")
(data (i32.const 304) "faireostoken\00")
(data (i32.const 320) "no balance to split\00")
(data (i32.const 352) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 416) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 480) "error reading iterator\00")
(data (i32.const 512) "read\00")
(data (i32.const 528) "cannot create objects in table of another contract\00")
(data (i32.const 592) "cannot pass end iterator to modify\00")
(data (i32.const 640) "object passed to modify is not in multi_index\00")
(data (i32.const 688) "cannot modify objects in table of another contract\00")
(data (i32.const 752) "attempt to add asset with different symbol\00")
(data (i32.const 800) "addition underflow\00")
(data (i32.const 832) "addition overflow\00")
(data (i32.const 864) "updater cannot change primary key when modifying an object\00")
(data (i32.const 928) "write\00")
(data (i32.const 944) "active\00")
(data (i32.const 960) "transfer\00")
(data (i32.const 9376) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "current_time" (func $fimport$3 (result i64)))
(import "env" "db_find_i64" (func $fimport$4 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "db_store_i64" (func $fimport$6 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$7 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$8 (param i32 i32)))
(import "env" "memcpy" (func $fimport$9 (param i32 i32 i32) (result i32)))
(import "env" "read_action_data" (func $fimport$10 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$11 (param i64)))
(import "env" "require_auth2" (func $fimport$12 (param i64 i64)))
(import "env" "send_inline" (func $fimport$13 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "apply" (func $5))
(export "_ZN7teamdiv3divEv" (func $6))
(export "_ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $8))
(export "_ZN7teamdiv6recordEN5eosio5assetE" (func $9))
(export "malloc" (func $25))
(export "free" (func $28))
(export "memcmp" (func $34))
(export "strlen" (func $35))
(table $0 2 2 anyfunc)
(elem (i32.const 0) $36 $6)



int_32 .FUNC $29 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [9468])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [9356])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [9164]
	$1 = (((int_32)$2 * (int_32)[12]) + [9164])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $26([972], $0)
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $29($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [928])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [928])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $32 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $30 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [128])
	*([0] + [4]) = $13
	if ( ($1 == 0) ){ goto $label$6 }
	$8 = (int_64)0
	$7 = (int_64)59
	$1 = [944]
	$9 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$12 }
	$6 = *($1)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$6 = ($6 + [165])
	goto $label$10 
	
.LABEL $label$12
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$8
	$1 = ($1 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$7 }
	$8 = (int_64)0
	$10 = (int_64)59
	$1 = [304]
	$11 = (int_64)0
	
.LOOP $label$13:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$14 }
	$6 = *($1)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$6 = ($6 + [165])
	goto $label$15 
	
.LABEL $label$16
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$14
	$1 = ($1 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$11 = ((int_64)$7 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$13 }
	$8 = (int_64)0
	$7 = (int_64)59
	$1 = [960]
	$12 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$22 }
	$6 = *($1)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$6 = ($6 + [165])
	goto $label$20 
	
.LABEL $label$22
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$18
	$1 = ($1 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$17 }
	*((($13 + [8]) + [28])) = *(($4 + [12]))
	*((($13 + [8]) + [24])) = *(($4 + [8]))
	*((($13 + [8]) + [20])) = *(($4 + [4]))
	*($13 + [16]) = $3
	*($13 + [8]) = $2
	*($13 + [24]) = *($4)
	CALL $33((($13 + [8]) + [32]), $5)
	*($13 + [64]) = $12
	*($13 + [56]) = $11
	*(($1 = CALL $29([16]))) = $2
	*($1 + [8]) = $9
	*((($13 + [56]) + [32])) = [0]
	$6 = ($1 + [16])
	*((($13 + [56]) + [24])) = $6
	*((($13 + [56]) + [20])) = $6
	*($13 + [72]) = $1
	*($13 + [84]) = [0]
	*((($13 + [56]) + [36])) = [0]
	$1 = *($13 + [40])
	$6 = ( *((($13 + [8]) + [36])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($6 + [32])
	$8 = (CASTING uint_64)(uint_32 $6)
	$6 = (($13 + [56]) + [28])
	
.LOOP $label$23:
	$1 = ($1 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$23 }
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $19($6, $1)
	$6 = *(($13 + [88]))
	$1 = *(($13 + [84]))
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	$7 = (int_64)59
	$1 = [944]
	$9 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$29 }
	$6 = *($1)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$6 = ($6 + [165])
	goto $label$27 
	
.LABEL $label$29
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$25
	$1 = ($1 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$24 }
	$8 = (int_64)0
	$7 = (int_64)59
	$1 = [112]
	$11 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$35 }
	$6 = *($1)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$6 = ($6 + [165])
	goto $label$33 
	
.LABEL $label$35
	$10 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$31
	$1 = ($1 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$11 = ((int_64)$10 | (int_64)$11)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$30 }
	$8 = (int_64)0
	$7 = (int_64)59
	$1 = [960]
	$12 = (int_64)0
	
.LOOP $label$36:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$41 }
	$6 = *($1)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$6 = ($6 + [165])
	goto $label$39 
	
.LABEL $label$41
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$38
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$37
	$1 = ($1 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$36 }
	*((($13 + [8]) + [28])) = *(($4 + [12]))
	*((($13 + [8]) + [24])) = *(($4 + [8]))
	*((($13 + [8]) + [20])) = *(($4 + [4]))
	*($13 + [16]) = $3
	*($13 + [8]) = $2
	*($13 + [24]) = *($4)
	CALL $33((($13 + [8]) + [32]), $5)
	*($13 + [64]) = $12
	*($13 + [56]) = $11
	*(($1 = CALL $29([16]))) = $2
	*($1 + [8]) = $9
	*((($13 + [56]) + [32])) = [0]
	$6 = ($1 + [16])
	*((($13 + [56]) + [24])) = $6
	*((($13 + [56]) + [20])) = $6
	*($13 + [72]) = $1
	*($13 + [84]) = [0]
	*((($13 + [56]) + [36])) = [0]
	$1 = *($13 + [40])
	$6 = ( *((($13 + [8]) + [36])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($6 + [32])
	$8 = (CASTING uint_64)(uint_32 $6)
	$6 = (($13 + [56]) + [28])
	
.LOOP $label$42:
	$1 = ($1 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$42 }
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $19($6, $1)
	$6 = *(($13 + [88]))
	$1 = *(($13 + [84]))
	goto $label$2 
	
.LABEL $label$5
	$6 = [0]
	$1 = [0]
	
.LABEL $label$4
	*($13 + [100]) = $1
	*($13 + [96]) = $1
	*($13 + [104]) = $6
	*($13 + [112]) = ($13 + [96])
	*($13 + [120]) = ($13 + [8])
	CALL $20(($13 + [120]), ($13 + [112]))
	CALL $21(($13 + [96]), ($13 + [56]))
	$1 = *($13 + [96])
	CALL send_inline($1, (*($13 + [100]) - $1))
	$1 = *($13 + [96])
	if ( ($1 == 0) ){ goto $label$43 }
	*($13 + [100]) = $1
	CALL $30($1)
	
.LABEL $label$43
	$1 = *($13 + [84])
	if ( ($1 == 0) ){ goto $label$44 }
	*(($13 + [88])) = $1
	CALL $30($1)
	
.LABEL $label$44
	$1 = *($13 + [72])
	if ( ($1 == 0) ){ goto $label$45 }
	*(($13 + [76])) = $1
	CALL $30($1)
	
.LABEL $label$45
	if ( ((*($13 + [40]) & [1]) == 0) ){ goto $label$1 }
	CALL $30(*(($13 + [48])))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$1 = [0]
	
.LABEL $label$2
	*($13 + [100]) = $1
	*($13 + [96]) = $1
	*($13 + [104]) = $6
	*($13 + [112]) = ($13 + [96])
	*($13 + [120]) = ($13 + [8])
	CALL $20(($13 + [120]), ($13 + [112]))
	CALL $21(($13 + [96]), ($13 + [56]))
	$1 = *($13 + [96])
	CALL send_inline($1, (*($13 + [100]) - $1))
	$1 = *($13 + [96])
	if ( ($1 == 0) ){ goto $label$46 }
	*($13 + [100]) = $1
	CALL $30($1)
	
.LABEL $label$46
	$1 = *($13 + [84])
	if ( ($1 == 0) ){ goto $label$47 }
	*(($13 + [88])) = $1
	CALL $30($1)
	
.LABEL $label$47
	$1 = *($13 + [72])
	if ( ($1 == 0) ){ goto $label$48 }
	*(($13 + [76])) = $1
	CALL $30($1)
	
.LABEL $label$48
	if ( ((*($13 + [40]) & [1]) == 0) ){ goto $label$1 }
	CALL $30(*(($13 + [48])))
	
.LABEL $label$1
	*([0] + [4]) = ($13 + [128])
}

void .FUNC _ZN7teamdiv6recordEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [128])
	*([0] + [4]) = $7
	*((($7 + [8]) + [32])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$2 = *($0)
	*($7 + [8]) = $2
	*($7 + [16]) = $2
	$6 = CALL db_find_i64($2, $2, (int_64)-4157493845350678528, (uint_64)*($1 + [8]) >> (uint_64)(int_64)8)
	if ( ((int_32)$6) <= (int_32)[-1]) ){ goto $label$4 }
	$6 = CALL $16(($7 + [8]), $6)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($7 + [8])), [416])
	$3 = *($0)
	CALL eosio_assert([1], [592])
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($7 + [8])), [640])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$2()), [688])
	*($6) = *($1)
	$2 = *($6 + [8])
	$4 = *(($1 + [8]))
	*($6 + [8]) = $4
	CALL eosio_assert(((int_64)$4 == (int_64)*(($6 + [24]))), [752])
	$4 = ((int_64)*($6 + [16]) + (int_64)*($1))
	*($6 + [16]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [800])
	CALL eosio_assert(((int_64)*($6 + [16]) < (int_64)4611686018427387904), [832])
	*($6 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($6 + [36]) = (*($6 + [36]) + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$2) == (int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8)), [864])
	*($7 + [96]) = (($7 + [48]) + [40])
	*($7 + [92]) = ($7 + [48])
	*($7 + [88]) = ($7 + [48])
	*($7 + [104]) = ($7 + [88])
	*($7 + [116]) = ($6 + [16])
	*($7 + [112]) = $6
	*($7 + [120]) = ($6 + [32])
	*($7 + [124]) = ($6 + [36])
	CALL $15(($7 + [112]), ($7 + [104]))
	CALL db_update_i64(*($6 + [44]), $3, ($7 + [48]), [40])
	$6 = (($7 + [8]) + [16])
	if ( (uint_64)($2 <= *($6)) ){ goto $label$3 }
	*($6) = ((int_64)$2 + (int_64)1)
	$0 = *($7 + [32])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$3 = *($0)
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$2()), [528])
	$6 = CALL $29([56])
	CALL $14($6)
	*($6 + [40]) = ($7 + [8])
	$2 = *(($1 + [8]))
	*(($0 = ($6 + [8]))) = $2
	$4 = *($1)
	*($6) = $4
	*(($6 + [24])) = $2
	*($6 + [16]) = $4
	$2 = CALL current_time()
	*($6 + [36]) = [1]
	*($6 + [32]) = ((uint_64)$2 / (uint_64)(int_64)1000000)
	*($7 + [96]) = (($7 + [48]) + [40])
	*($7 + [92]) = ($7 + [48])
	*($7 + [88]) = ($7 + [48])
	*($7 + [104]) = ($7 + [88])
	*($7 + [116]) = ($6 + [16])
	*($7 + [112]) = $6
	*($7 + [120]) = ($6 + [32])
	*($7 + [124]) = ($6 + [36])
	CALL $15(($7 + [112]), ($7 + [104]))
	$2 = (uint_64)*($0) >> (uint_64)(int_64)8
	$5 = CALL db_store_i64(*((($7 + [8]) + [8])), (int_64)-4157493845350678528, $3, $2), ($7 + [48]), [40]
	*($6 + [44]) = $5)
	$1 = (($7 + [8]) + [16])
	if ( (uint_64)($2 <= *($1)) ){ goto $label$5 }
	*($1) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$5
	*($7 + [112]) = $6
	$2 = (uint_64)*($0) >> (uint_64)(int_64)8
	*($7 + [48]) = $2)
	*($7 + [88]) = $5
	$0 = ($7 + [36])
	$1 = *($0)
	if ( ((uint_32)$1 >= (uint_32)*(($7 + [40]))) ){ goto $label$7 }
	*($1 + [8]) = $2
	*($1 + [16]) = $5
	*($7 + [112]) = [0]
	*($1) = $6
	*($0) = ($1 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $17(($7 + [32]), ($7 + [112]), ($7 + [48]), ($7 + [88]))
	
.LABEL $label$6
	$6 = *($7 + [112])
	*($7 + [112]) = [0]
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $30($6)
	
.LABEL $label$3
	$0 = *($7 + [32])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($7 + [36])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$6 = ($6 + [-24])
	$1 = *($6)
	*($6) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $30($1)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$10 }
	$6 = *(($7 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$6 = $0
	
.LABEL $label$8
	*($5) = $0
	CALL $30($6)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [128])
}

void .FUNC _ZN7teamdiv3divEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [880])
	*([0] + [4]) = $11
	CALL require_auth(*($0))
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [112]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$6 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$1 = ($1 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$1 }
	*($11 + [576]) = $7
	CALL $10(($11 + [864]), ($11 + [576]), *($0), (int_64)1397703940)
	$6 = (int_64)0
	$10 = [0]
	$8 = *($11 + [864])
	if ( ((int_64)$8 <= (int_64)0) ){ goto $label$23 }
	$3 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $8) * (float_64)(float_64)0.05))
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [352])
	$8 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$26:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$25 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	
.LOOP $label$28:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$28 }
	
.LABEL $label$27
	$1 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	$1 = [0]
	
.LABEL $label$24
	CALL eosio_assert($1, [128])
	if ( ((int_64)$3 < (int_64)1) ){ goto $label$29 }
	$2 = *($0)
	$8 = (int_64)0
	$5 = (int_64)59
	$4 = [160]
	$9 = (int_64)0
	
.LOOP $label$30:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$31 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$1 = ($1 + [165])
	goto $label$32 
	
.LABEL $label$33
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$31
	$4 = ($4 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$30 }
	*($11 + [856]) = (int_64)1397703940
	*(($11 + [840])) = [0]
	*($11 + [848]) = $3
	*($11 + [832]) = (int_64)0
	$4 = CALL strlen([176])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$22 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$36 }
	*($11 + [832]) = ($4 << [1])
	$1 = (($11 + [832]) | [1])
	if ( $4 ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	$10 = (($4 + [16]) & [-16])
	$1 = CALL $29($10)
	*($11 + [832]) = ($10 | [1])
	*($11 + [840]) = $1
	*($11 + [836]) = $4
	
.LABEL $label$35
	CALL memcpy($1, [176], $4)
	
.LABEL $label$34
	*(($1 + $4)) = [0]
	*((($11 + [280]) + [8])) = *((($11 + [848]) + [8]))
	*($11 + [280]) = *($11 + [848])
	CALL _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($11, [0], $2, $9, ($11 + [280]), ($11 + [832]))
	if ( ((*($11 + [832]) & [1]) == 0) ){ goto $label$37 }
	CALL $30(*($11 + [840]))
	
.LABEL $label$37
	$2 = *($0)
	$8 = (int_64)0
	$5 = (int_64)59
	$4 = [192]
	$9 = (int_64)0
	
.LOOP $label$38:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$39 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$41 }
	$1 = ($1 + [165])
	goto $label$40 
	
.LABEL $label$41
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$40
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$39
	$4 = ($4 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$38 }
	*($11 + [824]) = (int_64)1397703940
	*(($11 + [808])) = [0]
	*($11 + [816]) = $3
	*($11 + [800]) = (int_64)0
	$4 = CALL strlen([176])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$21 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$44 }
	*($11 + [800]) = ($4 << [1])
	$1 = (($11 + [800]) | [1])
	if ( $4 ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	$10 = (($4 + [16]) & [-16])
	$1 = CALL $29($10)
	*($11 + [800]) = ($10 | [1])
	*($11 + [808]) = $1
	*($11 + [804]) = $4
	
.LABEL $label$43
	CALL memcpy($1, [176], $4)
	
.LABEL $label$42
	*(($1 + $4)) = [0]
	*((($11 + [264]) + [8])) = *((($11 + [816]) + [8]))
	*($11 + [264]) = *($11 + [816])
	CALL _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($11, [0], $2, $9, ($11 + [264]), ($11 + [800]))
	if ( ((*($11 + [800]) & [1]) == 0) ){ goto $label$45 }
	CALL $30(*($11 + [808]))
	
.LABEL $label$45
	$2 = *($0)
	$8 = (int_64)0
	$5 = (int_64)59
	$4 = [208]
	$9 = (int_64)0
	
.LOOP $label$46:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$47 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$49 }
	$1 = ($1 + [165])
	goto $label$48 
	
.LABEL $label$49
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$48
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$47
	$4 = ($4 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$46 }
	*($11 + [792]) = (int_64)1397703940
	*(($11 + [776])) = [0]
	*($11 + [784]) = $3
	*($11 + [768]) = (int_64)0
	$4 = CALL strlen([176])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$20 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$52 }
	*($11 + [768]) = ($4 << [1])
	$1 = (($11 + [768]) | [1])
	if ( $4 ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$52
	$10 = (($4 + [16]) & [-16])
	$1 = CALL $29($10)
	*($11 + [768]) = ($10 | [1])
	*($11 + [776]) = $1
	*($11 + [772]) = $4
	
.LABEL $label$51
	CALL memcpy($1, [176], $4)
	
.LABEL $label$50
	*(($1 + $4)) = [0]
	*((($11 + [248]) + [8])) = *((($11 + [784]) + [8]))
	*($11 + [248]) = *($11 + [784])
	CALL _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($11, [0], $2, $9, ($11 + [248]), ($11 + [768]))
	if ( ((*($11 + [768]) & [1]) == 0) ){ goto $label$53 }
	CALL $30(*($11 + [776]))
	
.LABEL $label$53
	$2 = *($0)
	$8 = (int_64)0
	$5 = (int_64)59
	$4 = [224]
	$9 = (int_64)0
	
.LOOP $label$54:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$55 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$1 = ($1 + [165])
	goto $label$56 
	
.LABEL $label$57
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$55
	$4 = ($4 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$54 }
	*($11 + [760]) = (int_64)1397703940
	*(($11 + [744])) = [0]
	*($11 + [752]) = $3
	*($11 + [736]) = (int_64)0
	$4 = CALL strlen([176])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$19 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$60 }
	*($11 + [736]) = ($4 << [1])
	$1 = (($11 + [736]) | [1])
	if ( $4 ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$60
	$10 = (($4 + [16]) & [-16])
	$1 = CALL $29($10)
	*($11 + [736]) = ($10 | [1])
	*($11 + [744]) = $1
	*($11 + [740]) = $4
	
.LABEL $label$59
	CALL memcpy($1, [176], $4)
	
.LABEL $label$58
	*(($1 + $4)) = [0]
	*((($11 + [232]) + [8])) = *((($11 + [752]) + [8]))
	*($11 + [232]) = *($11 + [752])
	CALL _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($11, [0], $2, $9, ($11 + [232]), ($11 + [736]))
	if ( ((*($11 + [736]) & [1]) == 0) ){ goto $label$61 }
	CALL $30(*($11 + [744]))
	
.LABEL $label$61
	$2 = *($0)
	$8 = (int_64)0
	$5 = (int_64)59
	$4 = [240]
	$9 = (int_64)0
	
.LOOP $label$62:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$63 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$65 }
	$1 = ($1 + [165])
	goto $label$64 
	
.LABEL $label$65
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$64
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$63
	$4 = ($4 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$62 }
	*($11 + [728]) = (int_64)1397703940
	*(($11 + [712])) = [0]
	*($11 + [720]) = $3
	*($11 + [704]) = (int_64)0
	$4 = CALL strlen([176])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$18 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$68 }
	*($11 + [704]) = ($4 << [1])
	$1 = (($11 + [704]) | [1])
	if ( $4 ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$68
	$10 = (($4 + [16]) & [-16])
	$1 = CALL $29($10)
	*($11 + [704]) = ($10 | [1])
	*($11 + [712]) = $1
	*($11 + [708]) = $4
	
.LABEL $label$67
	CALL memcpy($1, [176], $4)
	
.LABEL $label$66
	*(($1 + $4)) = [0]
	*((($11 + [216]) + [8])) = *((($11 + [720]) + [8]))
	*($11 + [216]) = *($11 + [720])
	CALL _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($11, [0], $2, $9, ($11 + [216]), ($11 + [704]))
	if ( ((*($11 + [704]) & [1]) == 0) ){ goto $label$69 }
	CALL $30(*($11 + [712]))
	
.LABEL $label$69
	$2 = *($0)
	$8 = (int_64)0
	$5 = (int_64)59
	$4 = [256]
	$9 = (int_64)0
	
.LOOP $label$70:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$71 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$73 }
	$1 = ($1 + [165])
	goto $label$72 
	
.LABEL $label$73
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$72
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$71
	$4 = ($4 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$70 }
	*($11 + [696]) = (int_64)1397703940
	*(($11 + [680])) = [0]
	*($11 + [688]) = $3
	*($11 + [672]) = (int_64)0
	$4 = CALL strlen([176])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$17 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$76 }
	*($11 + [672]) = ($4 << [1])
	$1 = (($11 + [672]) | [1])
	if ( $4 ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$76
	$10 = (($4 + [16]) & [-16])
	$1 = CALL $29($10)
	*($11 + [672]) = ($10 | [1])
	*($11 + [680]) = $1
	*($11 + [676]) = $4
	
.LABEL $label$75
	CALL memcpy($1, [176], $4)
	
.LABEL $label$74
	*(($1 + $4)) = [0]
	*((($11 + [200]) + [8])) = *((($11 + [688]) + [8]))
	*($11 + [200]) = *($11 + [688])
	CALL _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($11, [0], $2, $9, ($11 + [200]), ($11 + [672]))
	if ( ((*($11 + [672]) & [1]) == 0) ){ goto $label$77 }
	CALL $30(*($11 + [680]))
	
.LABEL $label$77
	$2 = *($0)
	$8 = (int_64)0
	$5 = (int_64)59
	$4 = [272]
	$9 = (int_64)0
	
.LOOP $label$78:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$79 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$81 }
	$1 = ($1 + [165])
	goto $label$80 
	
.LABEL $label$81
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$80
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$79
	$4 = ($4 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$78 }
	*($11 + [664]) = (int_64)1397703940
	*(($11 + [648])) = [0]
	*($11 + [656]) = $3
	*($11 + [640]) = (int_64)0
	$4 = CALL strlen([176])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$84 }
	*($11 + [640]) = ($4 << [1])
	$1 = (($11 + [640]) | [1])
	if ( $4 ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$84
	$10 = (($4 + [16]) & [-16])
	$1 = CALL $29($10)
	*($11 + [640]) = ($10 | [1])
	*($11 + [648]) = $1
	*($11 + [644]) = $4
	
.LABEL $label$83
	CALL memcpy($1, [176], $4)
	
.LABEL $label$82
	*(($1 + $4)) = [0]
	*((($11 + [184]) + [8])) = *((($11 + [656]) + [8]))
	*($11 + [184]) = *($11 + [656])
	CALL _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($11, [0], $2, $9, ($11 + [184]), ($11 + [640]))
	if ( ((*($11 + [640]) & [1]) == 0) ){ goto $label$29 }
	CALL $30(*($11 + [648]))
	
.LABEL $label$29
	$3 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 *($11 + [864])) * (float_64)(float_64)0.65))
	if ( ((int_64)$3 < (int_64)1) ){ goto $label$85 }
	$2 = *($0)
	$8 = (int_64)0
	$5 = (int_64)59
	$4 = [288]
	$9 = (int_64)0
	
.LOOP $label$86:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$87 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$89 }
	$1 = ($1 + [165])
	goto $label$88 
	
.LABEL $label$89
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$88
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$87
	$4 = ($4 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$86 }
	*($11 + [632]) = (int_64)1397703940
	*(($11 + [616])) = [0]
	*($11 + [624]) = $3
	*($11 + [608]) = (int_64)0
	$4 = CALL strlen([176])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$92 }
	*($11 + [608]) = ($4 << [1])
	$1 = (($11 + [608]) | [1])
	if ( $4 ){ goto $label$91 }
	goto $label$90 
	
.LABEL $label$92
	$10 = (($4 + [16]) & [-16])
	$1 = CALL $29($10)
	*($11 + [608]) = ($10 | [1])
	*($11 + [616]) = $1
	*($11 + [612]) = $4
	
.LABEL $label$91
	CALL memcpy($1, [176], $4)
	
.LABEL $label$90
	*(($1 + $4)) = [0]
	*((($11 + [168]) + [8])) = *((($11 + [624]) + [8]))
	*($11 + [168]) = *($11 + [624])
	CALL _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($11, [0], $2, $9, ($11 + [168]), ($11 + [608]))
	if ( ((*($11 + [608]) & [1]) == 0) ){ goto $label$85 }
	CALL $30(*($11 + [616]))
	
.LABEL $label$85
	$8 = *((($11 + [864]) + [8]))
	*((($11 + [592]) + [8])) = $8
	*((($11 + [152]) + [8])) = $8
	$8 = *($11 + [864])
	*($11 + [592]) = $8
	*($11 + [152]) = $8
	CALL _ZN7teamdiv6recordEN5eosio5assetE($0, ($11 + [152]))
	$10 = [1]
	
.LABEL $label$23
	$8 = (int_64)59
	$4 = [304]
	$7 = (int_64)0
	
.LOOP $label$93:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$94 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$96 }
	$1 = ($1 + [165])
	goto $label$95 
	
.LABEL $label$96
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$95
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$94
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$93 }
	*($11 + [568]) = $7
	CALL $10(($11 + [576]), ($11 + [568]), *($0), (int_64)353416332804)
	*((($11 + [864]) + [8])) = *((($11 + [576]) + [8]))
	*($11 + [864]) = *($11 + [576])
	$6 = *($11 + [864])
	if ( ((int_64)$6 <= (int_64)0) ){ goto $label$97 }
	$9 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $6) * (float_64)(float_64)0.05))
	CALL eosio_assert((uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [352])
	$6 = (int_64)1380532550
	$4 = [0]
	
.LOOP $label$100:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$99 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$101 }
	
.LOOP $label$102:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$99 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$102 }
	
.LABEL $label$101
	$1 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$100 }
	goto $label$98 
	
.LABEL $label$99
	$1 = [0]
	
.LABEL $label$98
	CALL eosio_assert($1, [128])
	if ( ((int_64)$9 < (int_64)1) ){ goto $label$103 }
	$3 = *($0)
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [160]
	$7 = (int_64)0
	
.LOOP $label$104:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$105 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$107 }
	$1 = ($1 + [165])
	goto $label$106 
	
.LABEL $label$107
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$106
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$105
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$104 }
	*($11 + [560]) = (int_64)353416332804
	*(($11 + [544])) = [0]
	*($11 + [552]) = $9
	*($11 + [536]) = (int_64)0
	$4 = CALL strlen([176])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$110 }
	*($11 + [536]) = ($4 << [1])
	$1 = (($11 + [536]) | [1])
	if ( $4 ){ goto $label$109 }
	goto $label$108 
	
.LABEL $label$110
	$10 = (($4 + [16]) & [-16])
	$1 = CALL $29($10)
	*($11 + [536]) = ($10 | [1])
	*($11 + [544]) = $1
	*($11 + [540]) = $4
	
.LABEL $label$109
	CALL memcpy($1, [176], $4)
	
.LABEL $label$108
	*(($1 + $4)) = [0]
	*((($11 + [136]) + [8])) = *((($11 + [552]) + [8]))
	*($11 + [136]) = *($11 + [552])
	CALL _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($11, [1], $3, $7, ($11 + [136]), ($11 + [536]))
	if ( ((*($11 + [536]) & [1]) == 0) ){ goto $label$111 }
	CALL $30(*($11 + [544]))
	
.LABEL $label$111
	$3 = *($0)
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [192]
	$7 = (int_64)0
	
.LOOP $label$112:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$113 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$115 }
	$1 = ($1 + [165])
	goto $label$114 
	
.LABEL $label$115
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$114
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$113
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$112 }
	*($11 + [528]) = (int_64)353416332804
	*(($11 + [512])) = [0]
	*($11 + [520]) = $9
	*($11 + [504]) = (int_64)0
	$4 = CALL strlen([176])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$118 }
	*($11 + [504]) = ($4 << [1])
	$1 = (($11 + [504]) | [1])
	if ( $4 ){ goto $label$117 }
	goto $label$116 
	
.LABEL $label$118
	$10 = (($4 + [16]) & [-16])
	$1 = CALL $29($10)
	*($11 + [504]) = ($10 | [1])
	*($11 + [512]) = $1
	*($11 + [508]) = $4
	
.LABEL $label$117
	CALL memcpy($1, [176], $4)
	
.LABEL $label$116
	*(($1 + $4)) = [0]
	*((($11 + [120]) + [8])) = *((($11 + [520]) + [8]))
	*($11 + [120]) = *($11 + [520])
	CALL _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($11, [1], $3, $7, ($11 + [120]), ($11 + [504]))
	if ( ((*($11 + [504]) & [1]) == 0) ){ goto $label$119 }
	CALL $30(*($11 + [512]))
	
.LABEL $label$119
	$3 = *($0)
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [208]
	$7 = (int_64)0
	
.LOOP $label$120:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$121 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$123 }
	$1 = ($1 + [165])
	goto $label$122 
	
.LABEL $label$123
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$122
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$121
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$120 }
	*($11 + [496]) = (int_64)353416332804
	*(($11 + [480])) = [0]
	*($11 + [488]) = $9
	*($11 + [472]) = (int_64)0
	$4 = CALL strlen([176])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$126 }
	*($11 + [472]) = ($4 << [1])
	$1 = (($11 + [472]) | [1])
	if ( $4 ){ goto $label$125 }
	goto $label$124 
	
.LABEL $label$126
	$10 = (($4 + [16]) & [-16])
	$1 = CALL $29($10)
	*($11 + [472]) = ($10 | [1])
	*($11 + [480]) = $1
	*($11 + [476]) = $4
	
.LABEL $label$125
	CALL memcpy($1, [176], $4)
	
.LABEL $label$124
	*(($1 + $4)) = [0]
	*((($11 + [104]) + [8])) = *((($11 + [488]) + [8]))
	*($11 + [104]) = *($11 + [488])
	CALL _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($11, [1], $3, $7, ($11 + [104]), ($11 + [472]))
	if ( ((*($11 + [472]) & [1]) == 0) ){ goto $label$127 }
	CALL $30(*($11 + [480]))
	
.LABEL $label$127
	$3 = *($0)
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [224]
	$7 = (int_64)0
	
.LOOP $label$128:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$129 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$131 }
	$1 = ($1 + [165])
	goto $label$130 
	
.LABEL $label$131
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$130
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$129
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$128 }
	*($11 + [464]) = (int_64)353416332804
	*(($11 + [448])) = [0]
	*($11 + [456]) = $9
	*($11 + [440]) = (int_64)0
	$4 = CALL strlen([176])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$134 }
	*($11 + [440]) = ($4 << [1])
	$1 = (($11 + [440]) | [1])
	if ( $4 ){ goto $label$133 }
	goto $label$132 
	
.LABEL $label$134
	$10 = (($4 + [16]) & [-16])
	$1 = CALL $29($10)
	*($11 + [440]) = ($10 | [1])
	*($11 + [448]) = $1
	*($11 + [444]) = $4
	
.LABEL $label$133
	CALL memcpy($1, [176], $4)
	
.LABEL $label$132
	*(($1 + $4)) = [0]
	*((($11 + [88]) + [8])) = *((($11 + [456]) + [8]))
	*($11 + [88]) = *($11 + [456])
	CALL _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($11, [1], $3, $7, ($11 + [88]), ($11 + [440]))
	if ( ((*($11 + [440]) & [1]) == 0) ){ goto $label$135 }
	CALL $30(*($11 + [448]))
	
.LABEL $label$135
	$3 = *($0)
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [240]
	$7 = (int_64)0
	
.LOOP $label$136:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$137 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$139 }
	$1 = ($1 + [165])
	goto $label$138 
	
.LABEL $label$139
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$138
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$137
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$136 }
	*($11 + [432]) = (int_64)353416332804
	*(($11 + [416])) = [0]
	*($11 + [424]) = $9
	*($11 + [408]) = (int_64)0
	$4 = CALL strlen([176])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$142 }
	*($11 + [408]) = ($4 << [1])
	$1 = (($11 + [408]) | [1])
	if ( $4 ){ goto $label$141 }
	goto $label$140 
	
.LABEL $label$142
	$10 = (($4 + [16]) & [-16])
	$1 = CALL $29($10)
	*($11 + [408]) = ($10 | [1])
	*($11 + [416]) = $1
	*($11 + [412]) = $4
	
.LABEL $label$141
	CALL memcpy($1, [176], $4)
	
.LABEL $label$140
	*(($1 + $4)) = [0]
	*((($11 + [72]) + [8])) = *((($11 + [424]) + [8]))
	*($11 + [72]) = *($11 + [424])
	CALL _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($11, [1], $3, $7, ($11 + [72]), ($11 + [408]))
	if ( ((*($11 + [408]) & [1]) == 0) ){ goto $label$143 }
	CALL $30(*($11 + [416]))
	
.LABEL $label$143
	$3 = *($0)
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [256]
	$7 = (int_64)0
	
.LOOP $label$144:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$145 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$147 }
	$1 = ($1 + [165])
	goto $label$146 
	
.LABEL $label$147
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$146
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$145
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$144 }
	*($11 + [400]) = (int_64)353416332804
	*(($11 + [384])) = [0]
	*($11 + [392]) = $9
	*($11 + [376]) = (int_64)0
	$4 = CALL strlen([176])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$150 }
	*($11 + [376]) = ($4 << [1])
	$1 = (($11 + [376]) | [1])
	if ( $4 ){ goto $label$149 }
	goto $label$148 
	
.LABEL $label$150
	$10 = (($4 + [16]) & [-16])
	$1 = CALL $29($10)
	*($11 + [376]) = ($10 | [1])
	*($11 + [384]) = $1
	*($11 + [380]) = $4
	
.LABEL $label$149
	CALL memcpy($1, [176], $4)
	
.LABEL $label$148
	*(($1 + $4)) = [0]
	*((($11 + [56]) + [8])) = *((($11 + [392]) + [8]))
	*($11 + [56]) = *($11 + [392])
	CALL _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($11, [1], $3, $7, ($11 + [56]), ($11 + [376]))
	if ( ((*($11 + [376]) & [1]) == 0) ){ goto $label$151 }
	CALL $30(*($11 + [384]))
	
.LABEL $label$151
	$3 = *($0)
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [272]
	$7 = (int_64)0
	
.LOOP $label$152:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$153 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$155 }
	$1 = ($1 + [165])
	goto $label$154 
	
.LABEL $label$155
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$154
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$153
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$152 }
	*($11 + [368]) = (int_64)353416332804
	*(($11 + [352])) = [0]
	*($11 + [360]) = $9
	*($11 + [344]) = (int_64)0
	$4 = CALL strlen([176])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$158 }
	*($11 + [344]) = ($4 << [1])
	$1 = (($11 + [344]) | [1])
	if ( $4 ){ goto $label$157 }
	goto $label$156 
	
.LABEL $label$158
	$10 = (($4 + [16]) & [-16])
	$1 = CALL $29($10)
	*($11 + [344]) = ($10 | [1])
	*($11 + [352]) = $1
	*($11 + [348]) = $4
	
.LABEL $label$157
	CALL memcpy($1, [176], $4)
	
.LABEL $label$156
	*(($1 + $4)) = [0]
	*((($11 + [40]) + [8])) = *((($11 + [360]) + [8]))
	*($11 + [40]) = *($11 + [360])
	CALL _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($11, [1], $3, $7, ($11 + [40]), ($11 + [344]))
	if ( ((*($11 + [344]) & [1]) == 0) ){ goto $label$103 }
	CALL $30(*($11 + [352]))
	
.LABEL $label$103
	$9 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 *($11 + [864])) * (float_64)(float_64)0.65))
	if ( ((int_64)$9 < (int_64)1) ){ goto $label$159 }
	$3 = *($0)
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [288]
	$7 = (int_64)0
	
.LOOP $label$160:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$161 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$163 }
	$1 = ($1 + [165])
	goto $label$162 
	
.LABEL $label$163
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$162
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$161
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$160 }
	*($11 + [336]) = (int_64)353416332804
	*(($11 + [320])) = [0]
	*($11 + [328]) = $9
	*($11 + [312]) = (int_64)0
	$4 = CALL strlen([176])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$166 }
	*($11 + [312]) = ($4 << [1])
	$1 = (($11 + [312]) | [1])
	if ( $4 ){ goto $label$165 }
	goto $label$164 
	
.LABEL $label$166
	$10 = (($4 + [16]) & [-16])
	$1 = CALL $29($10)
	*($11 + [312]) = ($10 | [1])
	*($11 + [320]) = $1
	*($11 + [316]) = $4
	
.LABEL $label$165
	CALL memcpy($1, [176], $4)
	
.LABEL $label$164
	*(($1 + $4)) = [0]
	*((($11 + [24]) + [8])) = *((($11 + [328]) + [8]))
	*($11 + [24]) = *($11 + [328])
	CALL _ZN7teamdiv8transferEhyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($11, [1], $3, $7, ($11 + [24]), ($11 + [312]))
	if ( ((*($11 + [312]) & [1]) == 0) ){ goto $label$159 }
	CALL $30(*($11 + [320]))
	
.LABEL $label$159
	$6 = *((($11 + [864]) + [8]))
	*((($11 + [296]) + [8])) = $6
	*((($11 + [8]) + [8])) = $6
	$6 = *($11 + [864])
	*($11 + [296]) = $6
	*($11 + [8]) = $6
	CALL _ZN7teamdiv6recordEN5eosio5assetE($0, ($11 + [8]))
	$10 = [1]
	
.LABEL $label$97
	CALL eosio_assert($10, [320])
	*([0] + [4]) = ($11 + [880])
	return (unreachable)
	
.LABEL $label$22
	CALL $31(($11 + [832]))
	
.LABEL $label$21
	CALL $31(($11 + [800]))
	
.LABEL $label$20
	CALL $31(($11 + [768]))
	
.LABEL $label$19
	CALL $31(($11 + [736]))
	
.LABEL $label$18
	CALL $31(($11 + [704]))
	
.LABEL $label$17
	CALL $31(($11 + [672]))
	
.LABEL $label$16
	CALL $31(($11 + [640]))
	
.LABEL $label$15
	CALL $31(($11 + [608]))
	
.LABEL $label$14
	CALL $31(($11 + [536]))
	
.LABEL $label$13
	CALL $31(($11 + [504]))
	
.LABEL $label$12
	CALL $31(($11 + [472]))
	
.LABEL $label$11
	CALL $31(($11 + [440]))
	
.LABEL $label$10
	CALL $31(($11 + [408]))
	
.LABEL $label$9
	CALL $31(($11 + [376]))
	
.LABEL $label$8
	CALL $31(($11 + [344]))
	
.LABEL $label$7
	CALL $31(($11 + [312]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [16]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [32]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [48])
	
.LABEL $label$7
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [16]
	$7 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$21 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$3 = ($3 + [165])
	goto $label$19 
	
.LABEL $label$21
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$17
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$16 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$14 }
	
.LABEL $label$15
	*($9 + [24]) = $0
	if ( ((int_64)$2 != (int_64)5455547998605934592) ){ goto $label$14 }
	*($9 + [20]) = [0]
	*($9 + [16]) = [1]
	*($9 + [8 align=4]) = *($9 + [16])
	CALL $7(($9 + [24]), ($9 + [8]))
	
.LABEL $label$14
	*([0] + [4]) = ($9 + [32])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC $14 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [352])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [128])
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [352])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [128])
	return $0
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [928])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [928])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [928])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [928])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [928])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [928])
	CALL memcpy(*($2 + [4]), $0, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

int_32 .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [480])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $29([56])
	CALL $14($6)
	*($6 + [40]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [16])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [32])
	*($8 + [44]) = ($6 + [36])
	CALL $18(($8 + [32]), ($8 + [24]))
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($8 + [32]) = $5)
	$7 = *($6 + [44])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $17(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $30($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $17 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $29(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $32($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $30($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $30($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $10 (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	$9 = [0]
	*(($10 + [40])) = [0]
	*($10 + [24]) = (int_64)-1
	*($10 + [32]) = (int_64)0
	$7 = *($1)
	*($10 + [8]) = $7
	*($10 + [16]) = $2
	$8 = (uint_64)$3 >> (uint_64)(int_64)8
	$1 = CALL db_find_i64($7, $2, (int_64)3607749779137757184, $8)
	if ( ((int_32)$1) < (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert(((int_32)*(CALL $11(($10 + [8]), $1) + [16]) == (int_32)($10 + [8])), [416])
	$4 = *(($10 + [32]))
	$6 = *(($10 + [36]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$6 }
	$9 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)(uint_64)*(*($9) + [8]) >> (uint_64)(int_64)8) == (int_64)$8) ){ goto $label$6 }
	$6 = $9
	$1 = ($9 + [-24])
	$9 = $1
	if ( ((int_32)($1 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)($10 + [8])), [416])
	goto $label$3 
	
.LABEL $label$5
	*($0 + [8]) = $3
	*($0) = (int_64)0
	CALL eosio_assert([1], [352])
	
.LOOP $label$9:
	$1 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$1 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	CALL eosio_assert($1, [128])
	$6 = *($10 + [32])
	if ( $6 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$9 = [0]
	$1 = CALL db_find_i64(*($10 + [8]), *(($10 + [16])), (int_64)3607749779137757184, $8)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $11(($10 + [8]), $1)
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)($10 + [8])), [416])
	
.LABEL $label$3
	*($0) = *($9)
	*(($0 + [8])) = *(($9 + [8]))
	$6 = *($10 + [32])
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($10 + [36])
	$9 = *($5)
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$13 }
	
.LOOP $label$14:
	$9 = ($9 + [-24])
	$1 = *($9)
	*($9) = [0]
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $30($1)
	
.LABEL $label$15
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$14 }
	$9 = *(($10 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$9 = $6
	
.LABEL $label$12
	*($5) = $6
	CALL $30($9)
	
.LABEL $label$1
	*([0] + [4]) = ($10 + [48])
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [480])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $29([32])
	$6 = CALL $12($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $13(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $30($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $12 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [352])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [128])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [512])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [512])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

void .FUNC $13 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $29(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $32($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $30($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $30($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $19($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [928])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [928])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $23(CALL $22($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [928])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [928])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [928])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [928])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $24(*($1), ($0 + [32]))
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [928])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [928])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [928])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [928])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [928])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [512])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [512])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [512])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [512])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [512])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [512])
	CALL memcpy($0, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

void .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $29($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $32($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $30($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $27 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [9462]) == 0) ){ goto $label$2 }
	$7 = *([0] + [9464])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [9462]) = [1]
	$7 = ($7 << [16])
	*([0] + [9464]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [9464])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [9464]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [9462]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [9462]) = [1]
	$3 = ($3 << [16])
	*([0] + [9464]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [9464])
	
.LABEL $label$8
	*([0] + [9464]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $27($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [9376])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

void .FUNC $36 ()
{
	(unreachable)
}

void .FUNC $31 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}