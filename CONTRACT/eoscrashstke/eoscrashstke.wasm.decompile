(data (i32.const 4) "`h\00\00")
(data (i32.const 16) "invalid quantity\00")
(data (i32.const 48) "must stake positive quantity\00")
(data (i32.const 80) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 144) "cannot create objects in table of another contract\00")
(data (i32.const 208) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 272) "invalid symbol name\00")
(data (i32.const 304) "write\00")
(data (i32.const 320) "cannot pass end iterator to modify\00")
(data (i32.const 368) "object passed to modify is not in multi_index\00")
(data (i32.const 416) "cannot modify objects in table of another contract\00")
(data (i32.const 480) "attempt to add asset with different symbol\00")
(data (i32.const 528) "addition underflow\00")
(data (i32.const 560) "addition overflow\00")
(data (i32.const 592) "updater cannot change primary key when modifying an object\00")
(data (i32.const 656) "error reading iterator\00")
(data (i32.const 688) "read\00")
(data (i32.const 704) "must claim positive quantity\00")
(data (i32.const 736) "eosio.token\00")
(data (i32.const 752) "active\00")
(data (i32.const 768) "EOS CRASH dividends\00")
(data (i32.const 800) "cannot pass end iterator to erase\00")
(data (i32.const 848) "cannot increment end iterator\00")
(data (i32.const 880) "object passed to erase is not in multi_index\00")
(data (i32.const 928) "cannot erase objects in table of another contract\00")
(data (i32.const 992) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1056) "settings are not initialised\00")
(data (i32.const 1088) "staking is locked\00")
(data (i32.const 1120) "eoscrashplay\00")
(data (i32.const 1136) " no CRASH balance object found\00")
(data (i32.const 1168) "overdrawn balace when staking\00")
(data (i32.const 1200) "overdrawn balace during staking\00")
(data (i32.const 1232) "next primary key in table is at autoincrement limit\00")
(data (i32.const 1296) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 1360) "cannot decrement iterator at beginning of table\00")
(data (i32.const 1408) "no staked tokens found \00")
(data (i32.const 1440) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 1504) "overdrawn staked amount \00")
(data (i32.const 1536) "action is not valid\00")
(data (i32.const 1568) "accounts\00")
(data (i32.const 1584) " no CRASH balance object found \00")
(data (i32.const 1616) "attempt to subtract asset with different symbol\00")
(data (i32.const 1664) "subtraction underflow\00")
(data (i32.const 1696) "subtraction overflow\00")
(data (i32.const 1728) "onerror\00")
(data (i32.const 1744) "eosio\00")
(data (i32.const 1760) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 1824) "eoscrashstke\00")
(data (i32.const 10240) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "current_time" (func $fimport$3 (result i64)))
(import "env" "db_end_i64" (func $fimport$4 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$5 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$7 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$8 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$9 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$10 (param i32)))
(import "env" "db_store_i64" (func $fimport$11 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$12 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$13 (param i32 i32)))
(import "env" "memcpy" (func $fimport$14 (param i32 i32 i32) (result i32)))
(import "env" "read_action_data" (func $fimport$15 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$16 (param i64)))
(import "env" "require_auth2" (func $fimport$17 (param i64 i64)))
(import "env" "send_inline" (func $fimport$18 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN12eoscrashstke7destdivEyN5eosio5assetE" (func $5))
(export "_ZN12eoscrashstke5claimEy" (func $9))
(export "_ZN12eoscrashstke7cleanupEy" (func $18))
(export "_ZN12eoscrashstke5stakeEyN5eosio5assetE" (func $19))
(export "_ZN12eoscrashstke7unstakeEyN5eosio5assetE" (func $41))
(export "_ZN12eoscrashstke7releaseEv" (func $43))
(export "_ZN12eoscrashstke6setstsEm" (func $46))
(export "_ZN12eoscrashstke9setstsadvEmN5eosio5assetES1_" (func $48))
(export "_ZN12eoscrashstke11stakelogrecEyN5eosio5assetEm" (func $50))
(export "_ZN12eoscrashstke8cleanlogEy" (func $52))
(export "_ZN12eoscrashstke8rbalanceEm" (func $54))
(export "apply" (func $60))
(export "malloc" (func $71))
(export "free" (func $74))
(export "memcmp" (func $79))
(export "strlen" (func $80))
(table $0 12 12 anyfunc)
(elem (i32.const 0) $81 $9 $19 $5 $43 $50 $41 $46 $48 $52 $18 $54)



int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

void .FUNC _ZN12eoscrashstke7cleanupEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL require_auth(*($0 + [8]))
	$2 = *(($0 + [160]))
	$6 = *(($0 + [164]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$5 = ($6 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($5)) == (int_64)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [136])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [32]) == (int_32)$4), [80])
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	$6 = CALL db_find_i64(*(($0 + [136])), *(($0 + [144])), (int_64)4782171893383823360, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $6($4, $6)
	CALL eosio_assert(((int_32)*($5 + [32]) == (int_32)$4), [80])
	
.LABEL $label$3
	$6 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($6, [800])
	CALL eosio_assert($6, [848])
	$6 = CALL db_next_i64(*($5 + [36]), ($7 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	CALL $6($4, $6)
	
.LABEL $label$5
	CALL $11($4, $5)
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$3 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$3 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$2
	CALL read_action_data($3, $1)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[3]), [688])
	CALL memcpy(($5 + [8]), $3, [4])
	$6 = *($5 + [8])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($3)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL void $1((int_32 $6), (int_32 $4))
	*([0] + [4]) = ($5 + [16])
	return [1]
}

void .FUNC _ZN12eoscrashstke5stakeEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [144])
	*([0] + [4]) = $15
	*($15 + [48]) = $1
	CALL require_auth($1)
	$3 = ($0 + [16])
	$5 = [0]
	$8 = [0]
	$9 = CALL db_lowerbound_i64(*($0 + [16]), *(($0 + [24])), (int_64)-4157658851253531248, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $20($3, $9)
	
.LABEL $label$1
	$4 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($4, [1056])
	CALL eosio_assert((*($8 + [8]) == 0), [1088])
	$10 = *($2)
	if ( ((uint_64)((int_64)$10 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$11 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$5 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$5 = [0]
	
.LABEL $label$2
	CALL eosio_assert($5, [16])
	$11 = (int_64)0
	CALL eosio_assert(((int_64)$10 > (int_64)0), [48])
	$10 = (int_64)59
	$9 = [1120]
	$12 = (int_64)0
	
.LOOP $label$7:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$8 }
	$5 = *($9)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$5 = ($5 + [165])
	goto $label$9 
	
.LABEL $label$10
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$8
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$7 }
	*(($15 + [40])) = [0]
	*($15 + [16]) = $1
	*($15 + [8]) = $12
	*($15 + [24]) = (int_64)-1
	*($15 + [32]) = (int_64)0
	$10 = *(CALL $21(($15 + [8]), (uint_64)*($2 + [8]) >> (uint_64)(int_64)8), [1136]))
	$6 = *(($0 + [120]))
	$14 = *(($0 + [124]))
	if ( ((int_32)$14 == (int_32)$6) ){ goto $label$11 }
	$9 = ($14 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$12:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$11 }
	$14 = $9
	$5 = ($9 + [-24])
	$9 = $5
	if ( ((int_32)($5 + $7) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	$5 = ($0 + [96])
	if ( ((int_32)$14 == (int_32)$6) ){ goto $label$15 }
	$9 = *(($14 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)$5), [80])
	if ( $9 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$9 = CALL db_find_i64(*(($0 + [96])), *(($0 + [104])), (int_64)-3102536757352841216, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$13 }
	$9 = CALL $22($5, $9)
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)$5), [80])
	
.LABEL $label$14
	$10 = (int_64))($10 - *($9 + [8]))
	
.LABEL $label$13
	CALL eosio_assert($4, [320])
	CALL eosio_assert(((int_32)*($8 + [48]) == (int_32)$3), [368])
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)CALL $fimport$2()), [416])
	*($8 + [16]) = ((int_64)*($8 + [16]) + (int_64)*($2))
	$11 = *($8)
	CALL eosio_assert([1], [592])
	*($15 + [136]) = (($15 + [80]) + [44])
	*($15 + [132]) = ($15 + [80])
	*($15 + [128]) = ($15 + [80])
	CALL $23(($15 + [128]), $8)
	CALL db_update_i64(*($8 + [52]), (int_64)0, ($15 + [80]), [44])
	$9 = ($0 + [32])
	if ( (uint_64)($11 <= *($9)) ){ goto $label$16 }
	*($9) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	$11 = *($15 + [48])
	$8 = *(($0 + [80]))
	$14 = *(($0 + [84]))
	if ( ((int_32)$14 == (int_32)$8) ){ goto $label$17 }
	$9 = ($14 + [-24])
	$7 = ([0] - $8)
	
.LOOP $label$18:
	if ( ((int_64)*(*($9)) == (int_64)$11) ){ goto $label$17 }
	$14 = $9
	$5 = ($9 + [-24])
	$9 = $5
	if ( ((int_32)($5 + $7) != (int_32)[-24]) ){ goto $label$18 }
	
.LABEL $label$17
	$7 = ($0 + [56])
	if ( ((int_32)$14 == (int_32)$8) ){ goto $label$23 }
	$9 = *(($14 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$7), [80])
	$11 = *($2)
	if ( $9 ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$23
	$9 = CALL db_find_i64(*(($0 + [56])), *(($0 + [64])), (int_64)-4157658851266527232, $11)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$21 }
	$9 = CALL $24($7, $9)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$7), [80])
	$11 = *($2)
	
.LABEL $label$22
	CALL eosio_assert(((int_64)((int_64)*($9 + [8]) + (int_64)$11) <= (int_64)$10), [1200])
	CALL eosio_assert([1], [320])
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$7), [368])
	CALL eosio_assert(((int_64)*(($0 + [56])) == (int_64)CALL $fimport$2()), [416])
	$11 = *($9)
	$5 = ($9 + [16])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*($5)), [480])
	$10 = ((int_64)*($9 + [8]) + (int_64)*($2))
	*($9 + [8]) = $10
	CALL eosio_assert(((int_64)$10 > (int_64)-4611686018427387904), [528])
	CALL eosio_assert(((int_64)*($9 + [8]) < (int_64)4611686018427387904), [560])
	CALL eosio_assert(((int_64)$11 == (int_64)*($9)), [592])
	CALL eosio_assert([1], [304])
	CALL memcpy(($15 + [80]), $9, [8])
	CALL eosio_assert([1], [304])
	CALL memcpy((($15 + [80]) | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [304])
	CALL memcpy((($15 + [80]) + [16]), $5, [8])
	CALL db_update_i64(*($9 + [28]), (int_64)0, ($15 + [80]), [24])
	$9 = ($0 + [72])
	if ( (uint_64)($11 <= *($9)) ){ goto $label$19 }
	*($9) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	goto $label$19 
	
.LABEL $label$21
	$11 = *($2)
	
.LABEL $label$20
	CALL eosio_assert(((int_64)$11 <= (int_64)$10), [1168])
	$10 = *($0 + [8])
	CALL eosio_assert(((int_64)*(($0 + [56])) == (int_64)CALL $fimport$2()), [144])
	*(($5 = CALL $75([40])) + [16]) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [208])
	$3 = ($5 + [16])
	$14 = ($5 + [8])
	$11 = (int_64)5462355
	$9 = [0]
	
.LOOP $label$26:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$25 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	
.LOOP $label$28:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$28 }
	
.LABEL $label$27
	$8 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	$8 = [0]
	
.LABEL $label$24
	CALL eosio_assert($8, [272])
	*($5 + [24]) = $7
	*($5) = *($15 + [48])
	*(($14 + [12])) = *(($2 + [12]))
	*(($14 + [8])) = *(($2 + [8]))
	*(($14 + [4])) = *(($2 + [4]))
	*($14) = *($2)
	CALL eosio_assert([1], [304])
	CALL memcpy(($15 + [80]), $5, [8])
	CALL eosio_assert([1], [304])
	CALL memcpy((($15 + [80]) | [8]), $14, [8])
	CALL eosio_assert([1], [304])
	CALL memcpy(($15 + [96]), $3, [8])
	$11 = *($5)
	$14 = CALL db_store_i64(*(($0 + [64])), (int_64)-4157658851266527232, $10, $11, ($15 + [80]), [24])
	*($5 + [28]) = $14
	$9 = ($0 + [72])
	if ( (uint_64)($11 <= *($9)) ){ goto $label$29 }
	*($9) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$29
	*($15 + [128]) = $5
	$11 = *($5)
	*($15 + [80]) = $11
	*($15 + [72]) = $14
	$7 = ($0 + [84])
	$9 = *($7)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [88]))) ){ goto $label$31 }
	*($9 + [8]) = $11
	*($9 + [16]) = $14
	*($15 + [128]) = [0]
	*($9) = $5
	*($7) = ($9 + [24])
	goto $label$30 
	
.LABEL $label$31
	CALL $25(($0 + [80]), ($15 + [128]), ($15 + [80]), ($15 + [72]))
	
.LABEL $label$30
	$9 = *($15 + [128])
	*($15 + [128]) = [0]
	if ( ($9 == 0) ){ goto $label$19 }
	CALL $76($9)
	
.LABEL $label$19
	$11 = *(($0 + [8]))
	*($15 + [128]) = $0
	*($15 + [136]) = $2
	*($15 + [132]) = ($15 + [48])
	*($15 + [72]) = $11
	CALL eosio_assert(((int_64)*($0 + [176]) == (int_64)CALL $fimport$2()), [144])
	$7 = ($0 + [176])
	*($15 + [80]) = $7
	*($15 + [84]) = ($15 + [128])
	*($15 + [88]) = ($15 + [72])
	*(($5 = CALL $75([56])) + [24]) = (int_64)1398362884
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [208])
	$11 = (int_64)5462355
	$9 = [0]
	
.LOOP $label$34:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$33 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$35 }
	
.LOOP $label$36:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$33 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$36 }
	
.LABEL $label$35
	$14 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	$14 = [0]
	
.LABEL $label$32
	CALL eosio_assert($14, [272])
	*($5 + [44]) = $7
	CALL $26(($15 + [80]), $5)
	*($15 + [64]) = $5
	$11 = *($5)
	*($15 + [80]) = $11
	$14 = *($5 + [48])
	*($15 + [60]) = $14
	$7 = ($0 + [204])
	$9 = *($7)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [208]))) ){ goto $label$38 }
	*($9 + [8]) = $11
	*($9 + [16]) = $14
	*($15 + [64]) = [0]
	*($9) = $5
	*($7) = ($9 + [24])
	goto $label$37 
	
.LABEL $label$38
	CALL $27(($0 + [200]), ($15 + [64]), ($15 + [80]), ($15 + [60]))
	
.LABEL $label$37
	$9 = *($15 + [64])
	*($15 + [64]) = [0]
	if ( ($9 == 0) ){ goto $label$39 }
	CALL $76($9)
	
.LABEL $label$39
	$0 = *($15 + [32])
	if ( ($0 == 0) ){ goto $label$40 }
	$14 = ($15 + [36])
	$9 = *($14)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$42 }
	
.LOOP $label$43:
	$9 = ($9 + [-24])
	$5 = *($9)
	*($9) = [0]
	if ( ($5 == 0) ){ goto $label$44 }
	CALL $76($5)
	
.LABEL $label$44
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$43 }
	$9 = *(($15 + [32]))
	goto $label$41 
	
.LABEL $label$42
	$9 = $0
	
.LABEL $label$41
	*($14) = $0
	CALL $76($9)
	
.LABEL $label$40
	*([0] + [4]) = ($15 + [144])
}

void .FUNC $77 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $76 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [32])) = (int_64)1398362884
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = (int_64)0
	CALL eosio_assert([1], [208])
	$6 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$7 = [0]
	
.LABEL $label$4
	CALL eosio_assert($7, [272])
	*($9 + [40]) = [0]
	*($9 + [84]) = $5
	*($9 + [80]) = $5
	*($9 + [88]) = ($5 + $3)
	*($9 + [48]) = ($9 + [80])
	*($9 + [64]) = ($9 + [16])
	CALL $68(($9 + [64]), ($9 + [48]))
	if ( ($3 <= [513]) ){ goto $label$9 }
	CALL free($5)
	
.LABEL $label$9
	*(($1 = (($9 + [48]) + [8]))) = *(($9 + [32]))
	$6 = *($9 + [16])
	*($9 + [48]) = *($9 + [24])
	$5 = *(($9 + [40]))
	*((($9 + [64]) + [8])) = *($1)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$10 }
	$8 = *((*($1) + $8))
	
.LABEL $label$10
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*(($9 + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9) = $4
	CALL void $1((int_32 $6), (int_64 $9), (int_32 $5), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

int_32 .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [688])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $73 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10326]) == 0) ){ goto $label$2 }
	$7 = *([0] + [10328])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [10326]) = [1]
	$7 = ($7 << [16])
	*([0] + [10328]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10328])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [10328]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [10326]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [10326]) = [1]
	$3 = ($3 << [16])
	*([0] + [10328]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10328])
	
.LABEL $label$8
	*([0] + [10328]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $67 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [240]))
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = ($0 + [244])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $76($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$4 = *(($0 + [240]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*($3) = $1
	CALL $76($4)
	
.LABEL $label$1
	$1 = *(($0 + [200]))
	if ( ($1 == 0) ){ goto $label$6 }
	$3 = ($0 + [204])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $76($2)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$4 = *(($0 + [200]))
	goto $label$7 
	
.LABEL $label$8
	$4 = $1
	
.LABEL $label$7
	*($3) = $1
	CALL $76($4)
	
.LABEL $label$6
	$1 = *(($0 + [160]))
	if ( ($1 == 0) ){ goto $label$11 }
	$3 = ($0 + [164])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	CALL $76($2)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$14 }
	$4 = *(($0 + [160]))
	goto $label$12 
	
.LABEL $label$13
	$4 = $1
	
.LABEL $label$12
	*($3) = $1
	CALL $76($4)
	
.LABEL $label$11
	$1 = *(($0 + [120]))
	if ( ($1 == 0) ){ goto $label$16 }
	$3 = ($0 + [124])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$20 }
	CALL $76($2)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$19 }
	$4 = *(($0 + [120]))
	goto $label$17 
	
.LABEL $label$18
	$4 = $1
	
.LABEL $label$17
	*($3) = $1
	CALL $76($4)
	
.LABEL $label$16
	$1 = *(($0 + [80]))
	if ( ($1 == 0) ){ goto $label$21 }
	$3 = ($0 + [84])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$23 }
	
.LOOP $label$24:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$25 }
	CALL $76($2)
	
.LABEL $label$25
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$24 }
	$4 = *(($0 + [80]))
	goto $label$22 
	
.LABEL $label$23
	$4 = $1
	
.LABEL $label$22
	*($3) = $1
	CALL $76($4)
	
.LABEL $label$21
	$1 = *(($0 + [40]))
	if ( ($1 == 0) ){ goto $label$26 }
	$3 = ($0 + [44])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$28 }
	
.LOOP $label$29:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$30 }
	CALL $76($2)
	
.LABEL $label$30
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$29 }
	$4 = *(($0 + [40]))
	goto $label$27 
	
.LABEL $label$28
	$4 = $1
	
.LABEL $label$27
	*($3) = $1
	CALL $76($4)
	
.LABEL $label$26
	return $0
}

int_32 .FUNC $29 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [48]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1360])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-4157661080438439936)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1296])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1296])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $28(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [656])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $75([56])) + [24]) = (int_64)1398362884
	*($4 + [16]) = (int_64)0
	CALL eosio_assert([1], [208])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [272])
	*($4 + [44]) = $0
	CALL $31(($8 + [32]), $4)
	*($4 + [48]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [48])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $27($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $76($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC $21 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [80])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $35($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [80])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [656])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $75([64])
	$4 = CALL $38($6)
	*($6 + [48]) = $0
	CALL $39(($8 + [32]), $4)
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $40(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $76($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [304])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [656])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $75([48])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [208])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [272])
	*($4 + [32]) = $0
	CALL $33(($8 + [32]), $4)
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [36])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $34($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $76($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $75(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $78($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $76($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $76($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [656])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $75([40])
	$6 = CALL $32($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [28])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $25(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $76($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $27 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $75(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $78($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $76($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $76($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$8 = ($4 + [192])
	$7 = *($8)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$5 = ($4 + [176])
	$6 = CALL db_lowerbound_i64(*($5), *(($4 + [184])), (int_64)-4157661080438439936, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $28($5, $6)
	*($10 + [4]) = [0]
	*($10) = $5
	$7 = *(*(CALL $29($10) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [192])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [1232])
	*($1) = *($8)
	*($1 + [8]) = *(*($3 + [4]))
	$3 = *($3 + [8])
	*($1 + [16]) = *($3)
	$7 = *(($3 + [8]))
	*($1 + [40]) = [0]
	*(($1 + [24])) = $7
	*($1 + [32]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = $9
	$9 = ($3 + [-48])
	*([0] + [4]) = $9
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($3 + [-4])
	CALL $30($10, $1)
	$7 = *($1)
	*($1 + [48]) = CALL db_store_i64(*($2 + [8]), (int_64)-4157661080438439936, *(*($0 + [8])), $7, $9, [44])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [16])
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [10224])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [10032]
	$1 = (((int_32)$2 * (int_32)[12]) + [10032])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$4 = *($0 + [4])
	*($1) = (int_64)0
	*($1 + [8]) = *(*($4))
	$2 = *($0)
	CALL eosio_assert([1], [208])
	$3 = (int_64)310634435139
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [272])
	*(($1 + [24])) = (int_64)79522415395588
	*($1 + [16]) = (int_64)0
	CALL eosio_assert([1], [208])
	$3 = (int_64)310634435139
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [272])
	*(($1 + [40])) = (int_64)79522415395588
	*($1 + [32]) = (int_64)0
	$5 = $7
	$4 = ($5 + [-48])
	*([0] + [4]) = $4
	*($6 + [4]) = $4
	*($6) = $4
	*($6 + [8]) = ($5 + [-4])
	CALL $23($6, $1)
	$3 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)-4157658851253531248, *(*($0 + [8])), $3, $4, [44])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$11 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($6 + [16])
}

void .FUNC _ZN12eoscrashstke9setstsadvEmN5eosio5assetES1_ (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [96])
	*([0] + [4]) = $10
	*($10 + [16]) = $1
	CALL require_auth(*($0 + [8]))
	$4 = *(($0 + [40]))
	$9 = *(($0 + [44]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$8 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( (int_64)(*(*($8)) == 0) ){ goto $label$1 }
	$9 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [16])
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$6 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [48]) == (int_32)$6), [80])
	if ( $8 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$8 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)-4157658851253531248, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $20($6, $8)
	CALL eosio_assert(((int_32)*($8 + [48]) == (int_32)$6), [80])
	
.LABEL $label$5
	CALL eosio_assert([1], [320])
	CALL eosio_assert(((int_32)*($8 + [48]) == (int_32)$6), [368])
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)CALL $fimport$2()), [416])
	*($8 + [8]) = $1
	*(($8 + [28])) = *(($2 + [12]))
	*(($8 + [24])) = *(($2 + [8]))
	*(($8 + [20])) = *(($2 + [4]))
	*($8 + [16]) = *($2)
	$7 = *($8)
	*(($8 + [40])) = *(($3 + [8]))
	*($8 + [32]) = *($3)
	CALL eosio_assert([1], [592])
	*($10 + [88]) = (($10 + [32]) + [44])
	*($10 + [84]) = ($10 + [32])
	*($10 + [80]) = ($10 + [32])
	CALL $23(($10 + [80]), $8)
	CALL db_update_i64(*($8 + [52]), (int_64)0, ($10 + [32]), [44])
	$8 = ($0 + [32])
	if ( (uint_64)($7 <= *($8)) ){ goto $label$3 }
	*($8) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$4
	$7 = *(($0 + [8]))
	*($10 + [8]) = ($10 + [16])
	*($10 + [80]) = $7
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)CALL $fimport$2()), [144])
	*($10 + [32]) = $6
	*($10 + [36]) = ($10 + [8])
	*($10 + [40]) = ($10 + [80])
	$8 = CALL $75([64])
	CALL $38($8)
	*($8 + [48]) = $6
	CALL $49(($10 + [32]), $8)
	*($10 + [24]) = $8
	$7 = *($8)
	*($10 + [32]) = $7
	$9 = *($8 + [52])
	*($10 + [20]) = $9
	$5 = ($0 + [44])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [48]))) ){ goto $label$8 }
	*($6 + [8]) = $7
	*($6 + [16]) = $9
	*($10 + [24]) = [0]
	*($6) = $8
	*($5) = ($6 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $40(($0 + [40]), ($10 + [24]), ($10 + [32]), ($10 + [20]))
	
.LABEL $label$7
	$8 = *($10 + [24])
	*($10 + [24]) = [0]
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $76($8)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [96])
}

void .FUNC $69 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	$4 = [0]
	*($0) = [0]
	*(($0 + [16])) = (int_64)1398362884
	CALL eosio_assert([1], [208])
	$3 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [272])
	*(($0 + [32])) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [208])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [272])
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $70(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [688])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [688])
	CALL memcpy(($0 + [24]), *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC _ZN12eoscrashstke7releaseEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$19 = (*([0] + [4]) - [80])
	*([0] + [4]) = $19
	CALL require_auth(*($0 + [8]))
	$1 = ($0 + [16])
	$15 = [0]
	$14 = [0]
	$17 = CALL db_lowerbound_i64(*($0 + [16]), *(($0 + [24])), (int_64)-4157658851253531248, (int_64)0)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$1 }
	$14 = CALL $20($1, $17)
	
.LABEL $label$1
	$2 = ((int_32)$14 != (int_32)[0])
	CALL eosio_assert($2, [1056])
	$3 = CALL current_time()
	*($19 + [8]) = [0]
	$6 = *(($0 + [104]))
	*($19) = (int_64)0
	$17 = CALL db_lowerbound_i64(*($0 + [96]), $6, (int_64)-3102536757352841216, (int_64)0)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$2 }
	$4 = ($0 + [96])
	$17 = CALL $22($4, $17)
	$6 = ((int_64)((uint_64)$3 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$9 = [0]
	$8 = ($19 + [8])
	$15 = [0]
	
.LOOP $label$4:
	if ( ((uint_64)((int_64)*($17 + [24]) + (int_64)86400) >= (uint_64)$6) ){ goto $label$5 }
	$18 = *($19 + [4])
	if ( ((int_32)$18 == (int_32)*($8)) ){ goto $label$7 }
	*($18) = *($17)
	*($19 + [4]) = ($18 + [8])
	goto $label$6 
	
.LABEL $label$7
	CALL $44($19, $17)
	
.LABEL $label$6
	$15 = (CASTING uint_32)(uint_64 ((int_64)*($17 + [8]) + (int_64)(CASTING uint_64)(uint_32 $15)))
	if ( ((int_32)$9 > (int_32)[20]) ){ goto $label$3 }
	$9 = ($9 + [1])
	
.LABEL $label$5
	CALL eosio_assert([1], [848])
	$17 = CALL db_next_i64(*($17 + [36]), ($19 + [16]))
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$3 }
	$17 = CALL $22($4, $17)
	goto $label$4 
	
.LABEL $label$3
	$5 = *($19 + [4])
	$16 = *($19)
	if ( ((int_32)$16 == (int_32)$5) ){ goto $label$2 }
	$10 = ($0 + [120])
	$11 = ($0 + [124])
	$12 = ($0 + [104])
	$13 = ($0 + [96])
	
.LOOP $label$8:
	$6 = *($16)
	$7 = *($10)
	$18 = *($11)
	if ( ((int_32)$18 == (int_32)$7) ){ goto $label$9 }
	$17 = ($18 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$10:
	if ( ((int_64)*(*($17)) == (int_64)$6) ){ goto $label$9 }
	$18 = $17
	$9 = ($17 + [-24])
	$17 = $9
	if ( ((int_32)($9 + $8) != (int_32)[-24]) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$18 == (int_32)$7) ){ goto $label$13 }
	$17 = *(($18 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [32]) == (int_32)$4), [80])
	if ( $17 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$17 = CALL db_find_i64(*($13), *($12), (int_64)-3102536757352841216, $6)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$11 }
	$17 = CALL $22($4, $17)
	CALL eosio_assert(((int_32)*($17 + [32]) == (int_32)$4), [80])
	
.LABEL $label$12
	CALL eosio_assert([1], [800])
	CALL eosio_assert([1], [848])
	$9 = CALL db_next_i64(*($17 + [36]), ($19 + [16]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$14 }
	CALL $22($4, $9)
	
.LABEL $label$14
	CALL $45($4, $17)
	
.LABEL $label$11
	$16 = ($16 + [8])
	if ( ((int_32)$16 != (int_32)$5) ){ goto $label$8 }
	
.LABEL $label$2
	CALL eosio_assert($2, [320])
	CALL eosio_assert(((int_32)*($14 + [48]) == (int_32)$1), [368])
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)CALL $fimport$2()), [416])
	*($14 + [32]) = (int_64))(*($14 + [32]) - (CASTING int_64)(int_32 $15))
	$6 = *($14)
	CALL eosio_assert([1], [592])
	*($19 + [72]) = (($19 + [16]) + [44])
	*($19 + [68]) = ($19 + [16])
	*($19 + [64]) = ($19 + [16])
	CALL $23(($19 + [64]), $14)
	CALL db_update_i64(*($14 + [52]), (int_64)0, ($19 + [16]), [44])
	$17 = ($0 + [32])
	if ( (uint_64)($6 <= *($17)) ){ goto $label$15 }
	*($17) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	$17 = *($19)
	if ( ($17 == 0) ){ goto $label$16 }
	*($19 + [4]) = $17
	CALL $76($17)
	
.LABEL $label$16
	*([0] + [4]) = ($19 + [80])
}

void .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$8 = ($4 + [192])
	$7 = *($8)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$5 = ($4 + [176])
	$6 = CALL db_lowerbound_i64(*($5), *(($4 + [184])), (int_64)-4157661080438439936, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $28($5, $6)
	*($10 + [4]) = [0]
	*($10) = $5
	$7 = *(*(CALL $29($10) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [192])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [1232])
	*($1) = *($8)
	*($1 + [8]) = *(*($3 + [4]))
	$3 = *($3 + [8])
	*($1 + [16]) = *($3)
	$7 = *(($3 + [8]))
	*($1 + [40]) = [1]
	*(($1 + [24])) = $7
	*($1 + [32]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = $9
	$9 = ($3 + [-48])
	*([0] + [4]) = $9
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($3 + [-4])
	CALL $30($10, $1)
	$7 = *($1)
	*($1 + [48]) = CALL db_store_i64(*($2 + [8]), (int_64)-4157661080438439936, *(*($0 + [8])), $7, $9, [44])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [16])
}

void .FUNC _ZN12eoscrashstke7unstakeEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [96])
	*([0] + [4]) = $11
	*($11) = $1
	CALL require_auth($1)
	$5 = ($0 + [16])
	$8 = [0]
	$6 = [0]
	$10 = CALL db_lowerbound_i64(*($0 + [16]), *(($0 + [24])), (int_64)-4157658851253531248, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $20($5, $10)
	
.LABEL $label$1
	$4 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($4, [1056])
	CALL eosio_assert((*($6 + [8]) == 0), [1088])
	$3 = *($2)
	if ( ((uint_64)((int_64)$3 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$9 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$8 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$8 = [0]
	
.LABEL $label$2
	CALL eosio_assert($8, [16])
	CALL eosio_assert(((int_64)$3 > (int_64)0), [48])
	CALL eosio_assert($4, [320])
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)$5), [368])
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)CALL $fimport$2()), [416])
	*($6 + [16]) = (int_64))(*($6 + [16]) - $3)
	*($6 + [32]) = ((int_64)*($6 + [32]) + (int_64)*($2))
	$9 = *($6)
	CALL eosio_assert([1], [592])
	*($11 + [88]) = (($11 + [32]) + [44])
	*($11 + [84]) = ($11 + [32])
	*($11 + [80]) = ($11 + [32])
	CALL $23(($11 + [80]), $6)
	CALL db_update_i64(*($6 + [52]), (int_64)0, ($11 + [32]), [44])
	$10 = ($0 + [32])
	if ( (uint_64)($9 <= *($10)) ){ goto $label$7 }
	*($10) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$4 = *(($0 + [80]))
	$8 = *(($0 + [84]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$8 }
	$10 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$9:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$8 }
	$8 = $10
	$6 = ($10 + [-24])
	$10 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	$6 = ($0 + [56])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$11 }
	$10 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)$6), [80])
	goto $label$10 
	
.LABEL $label$11
	$10 = [0]
	$8 = CALL db_find_i64(*(($0 + [56])), *(($0 + [64])), (int_64)-4157658851266527232, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	$10 = CALL $24($6, $8)
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)$6), [80])
	
.LABEL $label$10
	$8 = ((int_32)$10 != (int_32)[0])
	CALL eosio_assert($8, [1408])
	$5 = ($10 + [16])
	CALL eosio_assert(((int_64)*($5) == (int_64)*($2 + [8])), [1440])
	$9 = *($2)
	CALL eosio_assert(((int_64)*($10 + [8]) >= (int_64)$9), [1504])
	CALL eosio_assert($8, [320])
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)$6), [368])
	CALL eosio_assert(((int_64)*(($0 + [56])) == (int_64)CALL $fimport$2()), [416])
	*($10 + [8]) = (int_64))(*($10 + [8]) - $9)
	$9 = *($10)
	CALL eosio_assert([1], [592])
	CALL eosio_assert([1], [304])
	CALL memcpy(($11 + [32]), $10, [8])
	CALL eosio_assert([1], [304])
	CALL memcpy((($11 + [32]) | [8]), ($10 + [8]), [8])
	CALL eosio_assert([1], [304])
	CALL memcpy((($11 + [32]) + [16]), $5, [8])
	CALL db_update_i64(*($10 + [28]), (int_64)0, ($11 + [32]), [24])
	$10 = ($0 + [72])
	if ( (uint_64)($9 <= *($10)) ){ goto $label$12 }
	*($10) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$9 = *($11)
	$4 = *(($0 + [120]))
	$8 = *(($0 + [124]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$13 }
	$10 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$14:
	if ( ((int_64)*(*($10)) == (int_64)$9) ){ goto $label$13 }
	$8 = $10
	$6 = ($10 + [-24])
	$10 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$14 }
	
.LABEL $label$13
	$5 = ($0 + [96])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$18 }
	$10 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [32]) == (int_32)$5), [80])
	if ( $10 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$10 = CALL db_find_i64(*(($0 + [96])), *(($0 + [104])), (int_64)-3102536757352841216, $9)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$16 }
	$10 = CALL $22($5, $10)
	CALL eosio_assert(((int_32)*($10 + [32]) == (int_32)$5), [80])
	
.LABEL $label$17
	CALL eosio_assert([1], [320])
	CALL eosio_assert(((int_32)*($10 + [32]) == (int_32)$5), [368])
	CALL eosio_assert(((int_64)*(($0 + [96])) == (int_64)CALL $fimport$2()), [416])
	*($10 + [8]) = ((int_64)*($10 + [8]) + (int_64)*($2))
	$9 = *($10)
	*($10 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$9 == (int_64)*($10)), [592])
	CALL eosio_assert([1], [304])
	CALL memcpy(($11 + [32]), $10, [8])
	CALL eosio_assert([1], [304])
	CALL memcpy((($11 + [32]) | [8]), ($10 + [8]), [8])
	CALL eosio_assert([1], [304])
	CALL memcpy((($11 + [32]) + [16]), ($10 + [16]), [8])
	CALL eosio_assert([1], [304])
	CALL memcpy((($11 + [32]) + [24]), ($10 + [24]), [8])
	CALL db_update_i64(*($10 + [36]), (int_64)0, ($11 + [32]), [32])
	$10 = ($0 + [112])
	if ( (uint_64)($9 <= *($10)) ){ goto $label$15 }
	*($10) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	goto $label$15 
	
.LABEL $label$16
	$1 = *($0 + [8])
	CALL eosio_assert(((int_64)*(($0 + [96])) == (int_64)CALL $fimport$2()), [144])
	*(($6 = CALL $75([48])) + [16]) = (int_64)1398362884
	*($6 + [8]) = (int_64)0
	CALL eosio_assert([1], [208])
	$7 = ($6 + [16])
	$8 = ($6 + [8])
	$9 = (int_64)5462355
	$10 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	
.LOOP $label$23:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$23 }
	
.LABEL $label$22
	$4 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	$4 = [0]
	
.LABEL $label$19
	CALL eosio_assert($4, [272])
	*($6 + [32]) = $5
	*($6) = *($11)
	*(($8 + [12])) = *(($2 + [12]))
	*(($8 + [8])) = *(($2 + [8]))
	*(($8 + [4])) = *(($2 + [4]))
	*($8) = *($2)
	*($6 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert([1], [304])
	CALL memcpy(($11 + [32]), $6, [8])
	CALL eosio_assert([1], [304])
	CALL memcpy((($11 + [32]) | [8]), $8, [8])
	CALL eosio_assert([1], [304])
	CALL memcpy(($11 + [48]), $7, [8])
	CALL eosio_assert([1], [304])
	CALL memcpy((($11 + [32]) + [24]), ($6 + [24]), [8])
	$9 = *($6)
	$8 = CALL db_store_i64(*(($0 + [104])), (int_64)-3102536757352841216, $1, $9, ($11 + [32]), [32])
	*($6 + [36]) = $8
	$10 = ($0 + [112])
	if ( (uint_64)($9 <= *($10)) ){ goto $label$24 }
	*($10) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$24
	*($11 + [80]) = $6
	$9 = *($6)
	*($11 + [32]) = $9
	*($11 + [24]) = $8
	$5 = ($0 + [124])
	$10 = *($5)
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [128]))) ){ goto $label$26 }
	*($10 + [8]) = $9
	*($10 + [16]) = $8
	*($11 + [80]) = [0]
	*($10) = $6
	*($5) = ($10 + [24])
	goto $label$25 
	
.LABEL $label$26
	CALL $34(($0 + [120]), ($11 + [80]), ($11 + [32]), ($11 + [24]))
	
.LABEL $label$25
	$10 = *($11 + [80])
	*($11 + [80]) = [0]
	if ( ($10 == 0) ){ goto $label$15 }
	CALL $76($10)
	
.LABEL $label$15
	$9 = *(($0 + [8]))
	*($11 + [80]) = $0
	*($11 + [88]) = $2
	*($11 + [84]) = $11
	*($11 + [24]) = $9
	CALL eosio_assert(((int_64)*($0 + [176]) == (int_64)CALL $fimport$2()), [144])
	$5 = ($0 + [176])
	*($11 + [32]) = $5
	*($11 + [36]) = ($11 + [80])
	*($11 + [40]) = ($11 + [24])
	*(($6 = CALL $75([56])) + [24]) = (int_64)1398362884
	*($6 + [16]) = (int_64)0
	CALL eosio_assert([1], [208])
	$9 = (int_64)5462355
	$10 = [0]
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	
.LOOP $label$31:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$31 }
	
.LABEL $label$30
	$8 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	$8 = [0]
	
.LABEL $label$27
	CALL eosio_assert($8, [272])
	*($6 + [44]) = $5
	CALL $42(($11 + [32]), $6)
	*($11 + [16]) = $6
	$9 = *($6)
	*($11 + [32]) = $9
	$8 = *($6 + [48])
	*($11 + [12]) = $8
	$5 = ($0 + [204])
	$10 = *($5)
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [208]))) ){ goto $label$33 }
	*($10 + [8]) = $9
	*($10 + [16]) = $8
	*($11 + [16]) = [0]
	*($10) = $6
	*($5) = ($10 + [24])
	goto $label$32 
	
.LABEL $label$33
	CALL $27(($0 + [200]), ($11 + [16]), ($11 + [32]), ($11 + [12]))
	
.LABEL $label$32
	$10 = *($11 + [16])
	*($11 + [16]) = [0]
	if ( ($10 == 0) ){ goto $label$34 }
	CALL $76($10)
	
.LABEL $label$34
	*([0] + [4]) = ($11 + [96])
}

void .FUNC $40 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $75(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $78($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $76($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $76($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$4 = *($0 + [4])
	*($1) = (int_64)0
	*($1 + [8]) = *(*($4))
	$2 = *($0)
	CALL eosio_assert([1], [208])
	$3 = (int_64)310634435139
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [272])
	*(($1 + [24])) = (int_64)79522415395588
	*($1 + [16]) = (int_64)0
	CALL eosio_assert([1], [208])
	$3 = (int_64)310634435139
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [272])
	*(($1 + [40])) = (int_64)79522415395588
	*($1 + [32]) = (int_64)0
	$5 = $7
	$4 = ($5 + [-48])
	*([0] + [4]) = $4
	*($6 + [4]) = $4
	*($6) = $4
	*($6 + [8]) = ($5 + [-4])
	CALL $23($6, $1)
	$3 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)-4157658851253531248, *(*($0 + [8])), $3, $4, [44])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$11 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($6 + [16])
}

void .FUNC _ZN12eoscrashstke6setstsEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	*([0] + [4]) = $8
	*($8 + [16]) = $1
	CALL require_auth(*($0 + [8]))
	$2 = *(($0 + [40]))
	$7 = *(($0 + [44]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( (int_64)(*(*($6)) == 0) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [16])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)$4), [80])
	if ( $6 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)-4157658851253531248, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$6 = CALL $20($4, $6)
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)$4), [80])
	
.LABEL $label$5
	CALL eosio_assert([1], [320])
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)$4), [368])
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)CALL $fimport$2()), [416])
	*($6 + [8]) = $1
	$5 = *($6)
	CALL eosio_assert([1], [592])
	*($8 + [88]) = (($8 + [32]) + [44])
	*($8 + [84]) = ($8 + [32])
	*($8 + [80]) = ($8 + [32])
	CALL $23(($8 + [80]), $6)
	CALL db_update_i64(*($6 + [52]), (int_64)0, ($8 + [32]), [44])
	$6 = ($0 + [32])
	if ( (uint_64)($5 <= *($6)) ){ goto $label$3 }
	*($6) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$4
	$5 = *(($0 + [8]))
	*($8 + [8]) = ($8 + [16])
	*($8 + [80]) = $5
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)CALL $fimport$2()), [144])
	*($8 + [32]) = $4
	*($8 + [36]) = ($8 + [8])
	*($8 + [40]) = ($8 + [80])
	$6 = CALL $75([64])
	CALL $38($6)
	*($6 + [48]) = $4
	CALL $47(($8 + [32]), $6)
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [52])
	*($8 + [20]) = $7
	$3 = ($0 + [44])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [48]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($3) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $40(($0 + [40]), ($8 + [24]), ($8 + [32]), ($8 + [20]))
	
.LABEL $label$7
	$6 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $76($6)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [96])
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [928])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [992])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $76($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $76($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [3])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$3 }
	$4 = [536870911]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$4 = int_32($2 >> [2])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $75(($4 << [3]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $78($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [3])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [3]))
	$7 = ($3 + [8])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $76($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $73($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [10240])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$8 = ($4 + [192])
	$7 = *($8)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$5 = ($4 + [176])
	$6 = CALL db_lowerbound_i64(*($5), *(($4 + [184])), (int_64)-4157661080438439936, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $28($5, $6)
	*($9 + [4]) = [0]
	*($9) = $5
	$7 = *(*(CALL $29($9) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [192])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [1232])
	*($1) = *($8)
	*($1 + [8]) = *(*($3 + [4]))
	$4 = *($3 + [8])
	*($1 + [16]) = *($4)
	*(($1 + [24])) = *(($4 + [8]))
	*($1 + [40]) = *(*($3 + [12]))
	*($1 + [32]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$10 = $10
	$3 = ($10 + [-48])
	*([0] + [4]) = $3
	*($9 + [4]) = $3
	*($9) = $3
	*($9 + [8]) = ($10 + [-4])
	CALL $30($9, $1)
	$7 = *($1)
	*($1 + [48]) = CALL db_store_i64(*($2 + [8]), (int_64)-4157661080438439936, *(*($0 + [8])), $7, $3, [44])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $78 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [688])
	CALL memcpy($2, *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [688])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [688])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	$1 = (*($3 + [4]) + [8])
	*($3 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $1) > (uint_32)[7]), [688])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC $81 ()
{
	(unreachable)
}

int_32 .FUNC $75 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10332])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [432])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1728]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1744]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [1760])
	
.LABEL $label$7
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1728]
	$7 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$21 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$3 = ($3 + [165])
	goto $label$19 
	
.LABEL $label$21
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$17
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$16 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$14 }
	
.LABEL $label$15
	*($9 + [176]) = $0
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [1824]
	$7 = (int_64)0
	
.LOOP $label$22:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$23 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$3 = ($3 + [165])
	goto $label$24 
	
.LABEL $label$25
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$23
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$22 }
	*(($9 + [200])) = $0
	*(($9 + [208])) = (int_64)-1
	*(($9 + [216])) = (int_64)0
	*(($9 + [224])) = [0]
	*($9 + [192]) = $0
	*($9 + [184]) = $7
	*($9 + [232]) = $0
	*(($9 + [240])) = $0
	*(($9 + [248])) = (int_64)-1
	*(($9 + [256])) = [0]
	*(($9 + [260])) = [0]
	*(($9 + [264])) = [0]
	*($9 + [272]) = $0
	*(($9 + [280])) = $0
	*(($9 + [288])) = (int_64)-1
	*(($9 + [296])) = [0]
	*(($9 + [300])) = [0]
	*(($9 + [304])) = [0]
	*($9 + [312]) = $0
	*(($9 + [320])) = $0
	*(($9 + [328])) = (int_64)-1
	*(($9 + [336])) = [0]
	*(($9 + [340])) = [0]
	*(($9 + [344])) = [0]
	*($9 + [352]) = $0
	*(($9 + [360])) = $0
	*(($9 + [368])) = (int_64)-1
	*(($9 + [376])) = [0]
	*(($9 + [380])) = [0]
	*(($9 + [384])) = [0]
	*($9 + [392]) = $0
	*(($9 + [400])) = $0
	*(($9 + [408])) = (int_64)-1
	*(($9 + [416])) = [0]
	*(($9 + [420])) = [0]
	*(($9 + [424])) = [0]
	if ( ((int_64)$2 <= (int_64)-4157661080426213377) ){ goto $label$36 }
	if ( ((int_64)$2 > (int_64)4923676594096046079) ){ goto $label$35 }
	if ( ((int_64)$2 == (int_64)-4157661080426213376) ){ goto $label$33 }
	if ( ((int_64)$2 == (int_64)-3102536759825661952) ){ goto $label$32 }
	if ( ((int_64)$2 != (int_64)4921564679018381312) ){ goto $label$26 }
	*($9 + [132]) = [0]
	*($9 + [128]) = [1]
	*($9 + [40 align=4]) = *($9 + [128])
	CALL $64(($9 + [176]), ($9 + [40]))
	goto $label$26 
	
.LABEL $label$36
	if ( ((int_64)$2 <= (int_64)-4417031915819761665) ){ goto $label$34 }
	if ( ((int_64)$2 == (int_64)-4417031915819761664) ){ goto $label$31 }
	if ( ((int_64)$2 == (int_64)-4417031912433385472) ){ goto $label$30 }
	if ( ((int_64)$2 != (int_64)-4157661383434960896) ){ goto $label$26 }
	*($9 + [172]) = [0]
	*($9 + [168]) = [2]
	*($9) = *($9 + [168])
	CALL $61(($9 + [176]), $9)
	goto $label$26 
	
.LABEL $label$35
	if ( ((int_64)$2 == (int_64)4923676594096046080) ){ goto $label$29 }
	if ( ((int_64)$2 == (int_64)4923676749050413056) ){ goto $label$28 }
	if ( ((int_64)$2 != (int_64)5382246562174861312) ){ goto $label$26 }
	*($9 + [140]) = [0]
	*($9 + [136]) = [3]
	*($9 + [32 align=4]) = *($9 + [136])
	CALL $61(($9 + [176]), ($9 + [32]))
	goto $label$26 
	
.LABEL $label$34
	if ( ((int_64)$2 == (int_64)-5058365584866017280) ){ goto $label$27 }
	if ( ((int_64)$2 != (int_64)-4998252998346932224) ){ goto $label$26 }
	*($9 + [124]) = [0]
	*($9 + [120]) = [4]
	*($9 + [48 align=4]) = *($9 + [120])
	CALL $65(($9 + [176]), ($9 + [48]))
	goto $label$26 
	
.LABEL $label$33
	*($9 + [108]) = [0]
	*($9 + [104]) = [5]
	*($9 + [64 align=4]) = *($9 + [104])
	CALL $66(($9 + [176]), ($9 + [64]))
	goto $label$26 
	
.LABEL $label$32
	*($9 + [164]) = [0]
	*($9 + [160]) = [6]
	*($9 + [8 align=4]) = *($9 + [160])
	CALL $61(($9 + [176]), ($9 + [8]))
	goto $label$26 
	
.LABEL $label$31
	*($9 + [156]) = [0]
	*($9 + [152]) = [7]
	*($9 + [16 align=4]) = *($9 + [152])
	CALL $62(($9 + [176]), ($9 + [16]))
	goto $label$26 
	
.LABEL $label$30
	*($9 + [148]) = [0]
	*($9 + [144]) = [8]
	*($9 + [24 align=4]) = *($9 + [144])
	CALL $63(($9 + [176]), ($9 + [24]))
	goto $label$26 
	
.LABEL $label$29
	*($9 + [100]) = [0]
	*($9 + [96]) = [9]
	*($9 + [72 align=4]) = *($9 + [96])
	CALL $64(($9 + [176]), ($9 + [72]))
	goto $label$26 
	
.LABEL $label$28
	*($9 + [116]) = [0]
	*($9 + [112]) = [10]
	*($9 + [56 align=4]) = *($9 + [112])
	CALL $64(($9 + [176]), ($9 + [56]))
	goto $label$26 
	
.LABEL $label$27
	*($9 + [92]) = [0]
	*($9 + [88]) = [11]
	*($9 + [80 align=4]) = *($9 + [88])
	CALL $62(($9 + [176]), ($9 + [80]))
	
.LABEL $label$26
	CALL $67(($9 + [176]))
	
.LABEL $label$14
	*([0] + [4]) = ($9 + [432])
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $72([1840], $0)
}

int_32 .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN12eoscrashstke5claimEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [96])
	*([0] + [4]) = $16
	CALL require_auth($1)
	$3 = *(($0 + [160]))
	$9 = *(($0 + [164]))
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$1 }
	$10 = ($9 + [-24])
	$2 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$1 }
	$9 = $10
	$4 = ($10 + [-24])
	$10 = $4
	if ( ((int_32)($4 + $2) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = ($0 + [136])
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$4 }
	$9 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)$2), [80])
	goto $label$3 
	
.LABEL $label$4
	$9 = [0]
	$10 = CALL db_find_i64(*(($0 + [136])), *(($0 + [144])), (int_64)4782171893383823360, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $6($2, $10)
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)$2), [80])
	
.LABEL $label$3
	$3 = ((int_32)$9 != (int_32)[0])
	CALL eosio_assert($3, [704])
	$12 = (int_64)0
	CALL eosio_assert(((int_64)*($9 + [8]) > (int_64)0), [704])
	$11 = (int_64)59
	$10 = [736]
	$13 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$12 > (uint_64)(int_64)10) ){ goto $label$10 }
	$4 = *($10)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$4 = ($4 + [165])
	goto $label$8 
	
.LABEL $label$10
	$14 = (int_64)0
	if ( ((int_64)$12 == (int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$6
	$10 = ($10 + [1])
	$11 = ((int_64)$11 + (int_64)-5)
	$13 = ((int_64)$14 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)1)
	if ( ((int_64)$12 != (int_64)13) ){ goto $label$5 }
	$5 = *($0 + [8])
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [752]
	$15 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$16 }
	$4 = *($10)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$4 = ($4 + [165])
	goto $label$14 
	
.LABEL $label$16
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$12
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$11 }
	*(($16 + [8])) = [0]
	*($16) = (int_64)0
	$10 = CALL strlen([768])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$17 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$20 }
	*($16) = ($10 << [1])
	$4 = ($16 | [1])
	if ( $10 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$6 = (($10 + [16]) & [-16])
	$4 = CALL $75($6)
	*($16) = ($6 | [1])
	*($16 + [8]) = $4
	*($16 + [4]) = $10
	
.LABEL $label$19
	CALL memcpy($4, [768], $10)
	
.LABEL $label$18
	*(($4 + $10)) = [0]
	*((($16 + [16]) + [12])) = *(($9 + [20]))
	*(($4 = (($16 + [16]) + [8]))) = *(($9 + [16]))
	*($16 + [20]) = *(($9 + [12]))
	*($16 + [16]) = *($9 + [8])
	$12 = *(($0 + [8]))
	$0 = *($16 + [8])
	$6 = *($16 + [4])
	$7 = *($16)
	*($16) = [0]
	*($16 + [4]) = [0]
	*($16 + [8]) = [0]
	*(($10 = CALL $75([16]))) = $5
	*($10 + [8]) = $15
	$8 = ($10 + [16])
	*($16 + [88]) = $8
	*($16 + [80]) = $10
	*($16 + [40]) = $1
	*($16 + [32]) = $12
	*($16 + [84]) = $8
	*(($16 + [56])) = *($4)
	*($16 + [48]) = *($16 + [16])
	*($16 + [64]) = $7
	*(($16 + [68])) = $6
	*(($10 = ($16 + [72]))) = $0
	CALL $10($13, (int_64)-3617168760277827584, ($16 + [80]), ($16 + [32]))
	if ( ((*($16 + [64]) & [1]) == 0) ){ goto $label$21 }
	CALL $76(*($10))
	
.LABEL $label$21
	$10 = *($16 + [80])
	if ( ($10 == 0) ){ goto $label$22 }
	*($16 + [84]) = $10
	CALL $76($10)
	
.LABEL $label$22
	if ( ((*($16) & [1]) == 0) ){ goto $label$23 }
	CALL $76(*(($16 + [8])))
	
.LABEL $label$23
	CALL eosio_assert($3, [800])
	CALL eosio_assert($3, [848])
	$10 = CALL db_next_i64(*($9 + [36]), ($16 + [32]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$24 }
	CALL $6($2, $10)
	
.LABEL $label$24
	CALL $11($2, $9)
	*([0] + [4]) = ($16 + [96])
	return (unreachable)
	
.LABEL $label$17
	CALL $77($16)
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [656])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $75([48])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [208])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [272])
	*($4 + [32]) = $0
	CALL $8(($8 + [32]), $4)
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [36])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $7($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $76($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $7 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $75(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $78($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $76($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $76($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _ZN12eoscrashstke7destdivEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [48])
	*([0] + [4]) = $11
	CALL require_auth(*($0 + [8]))
	$6 = [0]
	$3 = *($2)
	if ( ((uint_64)((int_64)$3 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$8 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [16])
	CALL eosio_assert(((int_64)$3 > (int_64)0), [48])
	$4 = *(($0 + [160]))
	$10 = *(($0 + [164]))
	if ( ((int_32)$10 == (int_32)$4) ){ goto $label$6 }
	$9 = ($10 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$6 }
	$10 = $9
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = ($0 + [136])
	if ( ((int_32)$10 == (int_32)$4) ){ goto $label$11 }
	$9 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)$5), [80])
	if ( $9 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$9 = CALL db_find_i64(*(($0 + [136])), *(($0 + [144])), (int_64)4782171893383823360, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$9 }
	$9 = CALL $6($5, $9)
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)$5), [80])
	
.LABEL $label$10
	CALL eosio_assert([1], [320])
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)$5), [368])
	CALL eosio_assert(((int_64)*(($0 + [136])) == (int_64)CALL $fimport$2()), [416])
	$8 = *($9)
	$6 = ($9 + [16])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*($6)), [480])
	$1 = ((int_64)*($9 + [8]) + (int_64)$3)
	*($9 + [8]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [528])
	CALL eosio_assert(((int_64)*($9 + [8]) < (int_64)4611686018427387904), [560])
	*($9 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$8 == (int_64)*($9)), [592])
	CALL eosio_assert([1], [304])
	CALL memcpy($11, $9, [8])
	CALL eosio_assert([1], [304])
	CALL memcpy(($11 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [304])
	CALL memcpy(($11 + [16]), $6, [8])
	CALL eosio_assert([1], [304])
	CALL memcpy(($11 + [24]), ($9 + [24]), [8])
	CALL db_update_i64(*($9 + [36]), (int_64)0, $11, [32])
	$9 = ($0 + [152])
	if ( (uint_64)($8 <= *($9)) ){ goto $label$8 }
	*($9) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	goto $label$8 
	
.LABEL $label$9
	$3 = *(($0 + [8]))
	CALL eosio_assert(((int_64)*(($0 + [136])) == (int_64)CALL $fimport$2()), [144])
	*(($6 = CALL $75([48])) + [16]) = (int_64)1398362884
	*($6 + [8]) = (int_64)0
	CALL eosio_assert([1], [208])
	$7 = ($6 + [16])
	$10 = ($6 + [8])
	$8 = (int_64)5462355
	$9 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$4 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$4 = [0]
	
.LABEL $label$12
	CALL eosio_assert($4, [272])
	*($6 + [32]) = $5
	*($6) = $1
	*(($10 + [12])) = *(($2 + [12]))
	*(($10 + [8])) = *(($2 + [8]))
	*(($10 + [4])) = *(($2 + [4]))
	*($10) = *($2)
	*($6 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert([1], [304])
	CALL memcpy($11, $6, [8])
	CALL eosio_assert([1], [304])
	CALL memcpy(($11 | [8]), $10, [8])
	CALL eosio_assert([1], [304])
	CALL memcpy(($11 + [16]), $7, [8])
	CALL eosio_assert([1], [304])
	CALL memcpy(($11 + [24]), ($6 + [24]), [8])
	$8 = *($6)
	$10 = CALL db_store_i64(*(($0 + [144])), (int_64)4782171893383823360, $3, $8, $11, [32])
	*($6 + [36]) = $10
	$9 = ($0 + [152])
	if ( (uint_64)($8 <= *($9)) ){ goto $label$17 }
	*($9) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	*($11 + [40]) = $6
	$8 = *($6)
	*($11) = $8
	*($11 + [36]) = $10
	$5 = ($0 + [164])
	$9 = *($5)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [168]))) ){ goto $label$19 }
	*($9 + [8]) = $8
	*($9 + [16]) = $10
	*($11 + [40]) = [0]
	*($9) = $6
	*($5) = ($9 + [24])
	goto $label$18 
	
.LABEL $label$19
	CALL $7(($0 + [160]), ($11 + [40]), $11, ($11 + [36]))
	
.LABEL $label$18
	$9 = *($11 + [40])
	*($11 + [40]) = [0]
	if ( ($9 == 0) ){ goto $label$8 }
	CALL $76($9)
	
.LABEL $label$8
	*([0] + [4]) = ($11 + [48])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $12($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [304])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [304])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $16(CALL $15($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [304])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [304])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [304])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [304])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [304])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [304])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [304])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $10 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [96])
	*([0] + [4]) = $9
	*($9 + [16]) = [0]
	*($9 + [8]) = (int_64)0
	$6 = [0]
	$7 = [0]
	$8 = [0]
	$4 = (*($2 + [4]) - *($2))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $75($4)
	$6 = ($8 + ($5 << [4]))
	*(($9 + [16])) = $6
	*($9 + [8]) = $8
	*($9 + [12]) = $8
	$7 = *($2)
	$2 = (*(($2 + [4])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $7, $2)
	$7 = ($8 + $2)
	*($9 + [12]) = $7
	goto $label$2 
	
.LABEL $label$3
	$7 = $8
	
.LABEL $label$2
	*(($9 + [44])) = $7
	*($9 + [32]) = $1
	*(($9 + [16])) = [0]
	*(($9 + [48])) = $6
	*($9 + [24]) = $0
	*($9 + [40]) = $8
	*($9 + [8]) = (int_64)0
	*($9 + [52]) = [0]
	*((($9 + [24]) + [32])) = [0]
	*((($9 + [24]) + [36])) = [0]
	$8 = *($3 + [32])
	$2 = ( *(($3 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($9 + [52])
	
.LOOP $label$4:
	$8 = ($8 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($8 == 0) ){ goto $label$6 }
	CALL $12($2, $8)
	$2 = *(($9 + [56]))
	$8 = *(($9 + [52]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$8 = [0]
	
.LABEL $label$5
	*($9 + [84]) = $8
	*($9 + [80]) = $8
	*($9 + [88]) = $2
	*($9 + [64]) = ($9 + [80])
	*($9 + [72]) = $3
	CALL $13(($9 + [72]), ($9 + [64]))
	CALL $14(($9 + [80]), ($9 + [24]))
	$8 = *($9 + [80])
	CALL send_inline($8, (*($9 + [84]) - $8))
	$8 = *($9 + [80])
	if ( ($8 == 0) ){ goto $label$7 }
	*($9 + [84]) = $8
	CALL $76($8)
	
.LABEL $label$7
	$8 = *($9 + [52])
	if ( ($8 == 0) ){ goto $label$8 }
	*(($9 + [56])) = $8
	CALL $76($8)
	
.LABEL $label$8
	$8 = *($9 + [40])
	if ( ($8 == 0) ){ goto $label$9 }
	*(($9 + [44])) = $8
	CALL $76($8)
	
.LABEL $label$9
	$8 = *($9 + [8])
	if ( ($8 == 0) ){ goto $label$10 }
	*($9 + [12]) = $8
	CALL $76($8)
	
.LABEL $label$10
	*([0] + [4]) = ($9 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $78(($9 + [8]))
}

void .FUNC $11 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [928])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [992])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $76($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $76($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $75($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $78($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $76($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [304])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [304])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [304])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [304])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $17(*($1), ($0 + [32]))
}

int_32 .FUNC $36 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [208])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [272])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [688])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

void .FUNC $37 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $75(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $78($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $76($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $76($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $34 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $75(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $78($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $76($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $76($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [656])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $75([32])
	$6 = CALL $36($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $37(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $76($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $32 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [208])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [272])
	*($0 + [24]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [688])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [688])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [28]) = *(*($2 + [8]))
	return $0
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [304])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [688])
	CALL memcpy(($1 + [40]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $59 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $75(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $78($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $76($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $76($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [208])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [272])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [688])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [688])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [688])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

int_32 .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [176])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	CALL $69(($6 + [40]), $4, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	*((($6 + [96]) + [12])) = *(($6 + [60]))
	*(($1 = (($6 + [96]) + [8]))) = *(($6 + [56]))
	*($6 + [100]) = *((($6 + [40]) + [12]))
	$4 = *($6 + [40])
	*($6 + [96]) = *($6 + [48])
	*(($3 = (($6 + [80]) + [8]))) = *(($6 + [72]))
	*($6 + [80]) = *($6 + [64])
	*((($6 + [128]) + [8])) = *($3)
	*((($6 + [112]) + [8])) = *($1)
	*($6 + [128]) = *($6 + [80])
	*($6 + [112]) = *($6 + [96])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	*(($2 = (($6 + [160]) + [8]))) = *((($6 + [112]) + [8]))
	*(($0 = (($6 + [144]) + [8]))) = *((($6 + [128]) + [8]))
	*($6 + [160]) = *($6 + [112])
	*($6 + [144]) = *($6 + [128])
	*((($6 + [24]) + [8])) = *($2)
	*($6 + [24]) = *($6 + [160])
	*((($6 + [8]) + [8])) = *($0)
	*($6 + [8]) = *($6 + [144])
	CALL void $1((int_32 $4), (int_32 ($6 + [24])), (int_32 ($6 + [8])), (int_32 $5))
	*([0] + [4]) = ($6 + [176])
	return [1]
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [688])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC _ZN12eoscrashstke11stakelogrecEyN5eosio5assetEm (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	*($8 + [32]) = $1
	*($8 + [28]) = $3
	CALL require_auth(*($0 + [8]))
	$7 = [0]
	$5 = [0]
	$4 = *($2)
	if ( ((uint_64)((int_64)$4 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$1 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [16])
	CALL eosio_assert(((int_64)$4 > (int_64)0), [48])
	CALL eosio_assert(((int_32)($3 | [1]) == (int_32)[1]), [1536])
	$1 = *(($0 + [8]))
	*($8 + [8]) = $0
	*($8 + [16]) = $2
	*($8 + [12]) = ($8 + [32])
	*($8 + [20]) = ($8 + [28])
	*($8 + [72]) = $1
	CALL eosio_assert(((int_64)*($0 + [176]) == (int_64)CALL $fimport$2()), [144])
	$2 = ($0 + [176])
	*($8 + [48]) = $2
	*($8 + [52]) = ($8 + [8])
	*($8 + [56]) = ($8 + [72])
	*(($5 = CALL $75([56])) + [24]) = (int_64)1398362884
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [208])
	$1 = (int_64)5462355
	
.LOOP $label$7:
	$6 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$6 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	CALL eosio_assert($6, [272])
	*($5 + [44]) = $2
	CALL $51(($8 + [48]), $5)
	*($8 + [64]) = $5
	$1 = *($5)
	*($8 + [48]) = $1
	$6 = *($5 + [48])
	*($8 + [44]) = $6
	$2 = ($0 + [204])
	$7 = *($2)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [208]))) ){ goto $label$11 }
	*($7 + [8]) = $1
	*($7 + [16]) = $6
	*($8 + [64]) = [0]
	*($7) = $5
	*($2) = ($7 + [24])
	goto $label$10 
	
.LABEL $label$11
	CALL $27(($0 + [200]), ($8 + [64]), ($8 + [48]), ($8 + [44]))
	
.LABEL $label$10
	$7 = *($8 + [64])
	*($8 + [64]) = [0]
	if ( ($7 == 0) ){ goto $label$12 }
	CALL $76($7)
	
.LABEL $label$12
	*([0] + [4]) = ($8 + [80])
}

int_32 .FUNC $38 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	$2 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($3 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [208])
	$1 = (uint_64)*($3) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [272])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [208])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [272])
	return $0
}

void .FUNC _ZN12eoscrashstke8cleanlogEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [32])
	*([0] + [4]) = $14
	CALL require_auth(*($0 + [8]))
	CALL current_time()
	$5 = *(($0 + [184]))
	$4 = [0]
	*($14 + [16]) = [0]
	*($14 + [8]) = (int_64)0
	$12 = CALL db_lowerbound_i64(*($0 + [176]), $5, (int_64)-4157661080438439936, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$1 }
	$2 = ($0 + [176])
	$12 = CALL $28($2, $12)
	$3 = (($14 + [8]) + [8])
	
.LOOP $label$3:
	if ( ((uint_64)*($12 + [32]) >= (uint_64)$1) ){ goto $label$4 }
	$13 = *($14 + [12])
	if ( ((int_32)$13 == (int_32)*($3)) ){ goto $label$6 }
	*($13) = *($12)
	*($14 + [12]) = ($13 + [8])
	if ( ((int_32)$4 <= (int_32)[25]) ){ goto $label$5 }
	goto $label$2 
	
.LABEL $label$6
	CALL $44(($14 + [8]), $12)
	if ( ((int_32)$4 > (int_32)[25]) ){ goto $label$2 }
	
.LABEL $label$5
	$4 = ($4 + [1])
	
.LABEL $label$4
	CALL eosio_assert([1], [848])
	$12 = CALL db_next_i64(*($12 + [48]), ($14 + [24]))
	if ( ((int_32)$12 <= (int_32)[-1]) ){ goto $label$2 }
	$12 = CALL $28($2, $12)
	goto $label$3 
	
.LABEL $label$2
	$10 = *($14 + [12])
	$11 = *($14 + [8])
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$7 }
	$6 = ($0 + [200])
	$7 = ($0 + [204])
	$8 = ($0 + [184])
	$9 = ($0 + [176])
	
.LOOP $label$8:
	$1 = *($11)
	$0 = *($6)
	$13 = *($7)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$9 }
	$12 = ($13 + [-24])
	$3 = ([0] - $0)
	
.LOOP $label$10:
	if ( ((int_64)*(*($12)) == (int_64)$1) ){ goto $label$9 }
	$13 = $12
	$4 = ($12 + [-24])
	$12 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$13 }
	$12 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [44]) == (int_32)$2), [80])
	if ( $12 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$12 = CALL db_find_i64(*($9), *($8), (int_64)-4157661080438439936, $1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$11 }
	$12 = CALL $28($2, $12)
	CALL eosio_assert(((int_32)*($12 + [44]) == (int_32)$2), [80])
	
.LABEL $label$12
	CALL eosio_assert([1], [800])
	CALL eosio_assert([1], [848])
	$4 = CALL db_next_i64(*($12 + [48]), ($14 + [24]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$14 }
	CALL $28($2, $4)
	
.LABEL $label$14
	CALL $53($2, $12)
	
.LABEL $label$11
	$11 = ($11 + [8])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$8 }
	$10 = *($14 + [8])
	
.LABEL $label$7
	if ( ($10 == 0) ){ goto $label$1 }
	*($14 + [12]) = $10
	CALL $76($10)
	
.LABEL $label$1
	*([0] + [4]) = ($14 + [32])
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [44]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [928])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [992])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $76($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $76($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [48]))
}

void .FUNC _ZN12eoscrashstke8rbalanceEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_64 $25
	int_64 $26
	int_64 $27
	int_64 $28
	int_64 $29
	int_64 $30
	int_64 $31
	int_32 $32
	$32 = (*([0] + [4]) - [128])
	*([0] + [4]) = $32
	CALL require_auth(*($0 + [8]))
	$7 = [0]
	$9 = CALL db_lowerbound_i64(*($0 + [16]), *(($0 + [24])), (int_64)-4157658851253531248, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	CALL $20(($0 + [16]), $9)
	$7 = [1]
	
.LABEL $label$1
	CALL eosio_assert($7, [1056])
	if ( ($1 == 0) ){ goto $label$3 }
	$7 = CALL db_lowerbound_i64(*($0 + [216]), *(($0 + [224])), (int_64)-4481904832562593792, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$4 = ($0 + [56])
	$8 = ($0 + [216])
	$7 = CALL $55($8, $7)
	$3 = (($32 + [48]) + [16])
	$24 = (($32 + [48]) | [8])
	$5 = ($0 + [80])
	$13 = ($0 + [84])
	$14 = ($0 + [64])
	$23 = ($0 + [72])
	
.LOOP $label$4:
	$26 = *($7 + [40])
	$25 = *(($7 + [48]))
	CALL eosio_assert(((int_64)*(($7 + [16])) == (int_64)$25), [1616])
	$26 = (int_64)
	CALL eosio_assert(((int_64)$26($26 - *($7 + [8]))) > (int_64)-4611686018427387904), [1664])
	CALL eosio_assert(((int_64)$26 < (int_64)4611686018427387904), [1696])
	CALL eosio_assert(((int_64)$25 == (int_64)*(($7 + [32]))), [1616])
	$25 = (int_64)
	CALL eosio_assert(((int_64)$25($26 - *($7 + [24]))) > (int_64)-4611686018427387904), [1664])
	CALL eosio_assert(((int_64)$25 < (int_64)4611686018427387904), [1696])
	if ( ((int_64)$25 > (int_64)-1) ){ goto $label$5 }
	$26 = *($7)
	$15 = *($5)
	$9 = *($13)
	if ( ((int_32)$9 == (int_32)$15) ){ goto $label$6 }
	$0 = ($9 + [-24])
	$12 = ([0] - $15)
	
.LOOP $label$7:
	if ( ((int_64)*(*($0)) == (int_64)$26) ){ goto $label$6 }
	$9 = $0
	$1 = ($0 + [-24])
	$0 = $1
	if ( ((int_32)($1 + $12) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$9 == (int_32)$15) ){ goto $label$9 }
	$0 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)$4), [80])
	goto $label$8 
	
.LABEL $label$9
	$0 = [0]
	$1 = CALL db_find_i64(*($4), *($14), (int_64)-4157658851266527232, $26)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$8 }
	$0 = CALL $24($4, $1)
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)$4), [80])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [320])
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)$4), [368])
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$2()), [416])
	*($0 + [8]) = ( $25 ? (int_64)0 : ((int_64)$25 > (int_64)0) )
	$26 = *($0)
	CALL eosio_assert([1], [592])
	CALL eosio_assert([1], [304])
	CALL memcpy(($32 + [48]), $0, [8])
	CALL eosio_assert([1], [304])
	CALL memcpy($24, ($0 + [8]), [8])
	CALL eosio_assert([1], [304])
	CALL memcpy($3, ($0 + [16]), [8])
	CALL db_update_i64(*($0 + [28]), (int_64)0, ($32 + [48]), [24])
	if ( (uint_64)($26 <= *($23)) ){ goto $label$5 }
	*($23) = ( (int_64)-2 ? ((int_64)$26 + (int_64)1) : ((uint_64)$26 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	CALL eosio_assert([1], [848])
	$0 = CALL db_next_i64(*($7 + [60]), ($32 + [48]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	$7 = CALL $55($8, $0)
	goto $label$4 
	
.LABEL $label$3
	$7 = CALL db_lowerbound_i64(*($0 + [56]), *(($0 + [64])), (int_64)-4157658851266527232, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$4 = ($0 + [216])
	$3 = ($0 + [96])
	$2 = ($0 + [56])
	$12 = CALL $24($2, $7)
	$5 = (($32 + [48]) + [56])
	$13 = (($32 + [8]) + [8])
	$14 = (($32 + [8]) + [16])
	$15 = (($32 + [8]) + [24])
	$16 = (($32 + [8]) + [32])
	$17 = ($0 + [120])
	$18 = ($0 + [124])
	$19 = ($0 + [104])
	$20 = ($0 + [240])
	$21 = ($0 + [244])
	$22 = ($0 + [224])
	$23 = ($0 + [232])
	$24 = ($32 + [36])
	
.LOOP $label$10:
	$6 = *($12)
	$26 = (int_64)0
	$25 = (int_64)59
	$0 = [1120]
	$27 = (int_64)0
	
.LOOP $label$11:
	$28 = (int_64)0
	if ( ((uint_64)$26 > (uint_64)(int_64)11) ){ goto $label$12 }
	$7 = *($0)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$7 = ($7 + [165])
	goto $label$13 
	
.LABEL $label$14
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$28 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$25 & (int_64)4294967295))
	
.LABEL $label$12
	$0 = ($0 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$27 = ((int_64)$28 | (int_64)$27)
	$25 = ((int_64)$25 + (int_64)-5)
	if ( ((int_64)$25 != (int_64)-6) ){ goto $label$11 }
	*($13) = $6
	*($14) = (int_64)-1
	*($15) = (int_64)0
	*($16) = [0]
	*($32 + [8]) = $27
	CALL eosio_assert([1], [208])
	$26 = (int_64)310634435139
	$0 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$7 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$7 = [0]
	
.LABEL $label$15
	CALL eosio_assert($7, [272])
	CALL eosio_assert([1], [208])
	$26 = (int_64)310634435139
	$0 = [0]
	
.LOOP $label$22:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	
.LOOP $label$24:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	$7 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$7 = [0]
	
.LABEL $label$20
	CALL eosio_assert($7, [272])
	CALL eosio_assert([1], [208])
	$26 = (int_64)310634435139
	$0 = [0]
	
.LOOP $label$27:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	
.LOOP $label$29:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$26 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$29 }
	
.LABEL $label$28
	$7 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	$7 = [0]
	
.LABEL $label$25
	CALL eosio_assert($7, [272])
	$8 = *($17)
	$1 = *($18)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$30 }
	$0 = ($1 + [-24])
	$9 = ([0] - $8)
	
.LOOP $label$31:
	if ( ((int_64)*(*($0)) == (int_64)$6) ){ goto $label$30 }
	$1 = $0
	$7 = ($0 + [-24])
	$0 = $7
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$31 }
	
.LABEL $label$30
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$34 }
	$0 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [32]) == (int_32)$3), [80])
	if ( $0 ){ goto $label$33 }
	$29 = (int_64)0
	goto $label$32 
	
.LABEL $label$34
	$0 = CALL db_find_i64(*($3), *($19), (int_64)-3102536757352841216, $6)
	if ( ((int_32)$0 >= (int_32)[0]) ){ goto $label$35 }
	$29 = (int_64)0
	goto $label$32 
	
.LABEL $label$35
	$0 = CALL $22($3, $0)
	CALL eosio_assert(((int_32)*($0 + [32]) == (int_32)$3), [80])
	
.LABEL $label$33
	$29 = *($0 + [8])
	
.LABEL $label$32
	$26 = (int_64)0
	$11 = *(($12 + [16]))
	$31 = (int_64)79522415395588
	$10 = *($12 + [8])
	if ( ((int_64)$10 < (int_64)0) ){ goto $label$36 }
	$26 = (int_64)0
	$25 = (int_64)59
	$0 = [1120]
	$27 = (int_64)0
	
.LOOP $label$37:
	$28 = (int_64)0
	if ( ((uint_64)$26 > (uint_64)(int_64)11) ){ goto $label$38 }
	$7 = *($0)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$7 = ($7 + [165])
	goto $label$39 
	
.LABEL $label$40
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$28 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$25 & (int_64)4294967295))
	
.LABEL $label$38
	$0 = ($0 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$27 = ((int_64)$28 | (int_64)$27)
	$25 = ((int_64)$25 + (int_64)-5)
	if ( ((int_64)$25 != (int_64)-6) ){ goto $label$37 }
	$26 = (int_64)0
	$28 = (int_64)59
	$0 = [1568]
	$30 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$26 > (uint_64)(int_64)7) ){ goto $label$46 }
	$7 = *($0)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$7 = ($7 + [165])
	goto $label$44 
	
.LABEL $label$46
	$25 = (int_64)0
	if ( ((uint_64)$26 <= (uint_64)(int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$25 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$25 = ((int_64)((int_64)$25 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$42
	$0 = ($0 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$30 = ((int_64)$25 | (int_64)$30)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$41 }
	if ( ((int_32)CALL db_find_i64($27, $6, $30, (int_64)310634435139) < (int_32)[0]) ){ goto $label$47 }
	$0 = CALL $21(($32 + [8]), (uint_64)$11 >> (uint_64)(int_64)8), [1584]
	$31 = *($0) + [8])
	$26 = *($0)
	goto $label$36 
	
.LABEL $label$47
	$26 = (int_64)0
	
.LABEL $label$36
	$8 = *($20)
	$1 = *($21)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$48 }
	$0 = ($1 + [-24])
	$9 = ([0] - $8)
	
.LOOP $label$49:
	if ( ((int_64)*(*($0)) == (int_64)$6) ){ goto $label$48 }
	$1 = $0
	$7 = ($0 + [-24])
	$0 = $7
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$49 }
	
.LABEL $label$48
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$51 }
	$0 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [56]) == (int_32)$4), [80])
	goto $label$50 
	
.LABEL $label$51
	$0 = [0]
	$7 = CALL db_find_i64(*($4), *($22), (int_64)-4481904832562593792, $6)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$50 }
	$0 = CALL $55($4, $7)
	CALL eosio_assert(((int_32)*($0 + [56]) == (int_32)$4), [80])
	
.LABEL $label$50
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [320])
	CALL eosio_assert(((int_32)*($0 + [56]) == (int_32)$4), [368])
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$2()), [416])
	*($0 + [8]) = $10
	*(($0 + [16])) = $11
	*($0 + [24]) = $29
	*(($0 + [32])) = (int_64)79522415395588
	*($0 + [40]) = $26
	*(($0 + [48])) = $31
	$26 = *($0)
	CALL eosio_assert([1], [592])
	*((($32 + [112]) + [8])) = $5
	*($32 + [116]) = ($32 + [48])
	*($32 + [112]) = ($32 + [48])
	CALL $56(($32 + [112]), $0)
	CALL db_update_i64(*($0 + [60]), (int_64)0, ($32 + [48]), [56])
	if ( (uint_64)($26 <= *($23)) ){ goto $label$52 }
	*($23) = ( (int_64)-2 ? ((int_64)$26 + (int_64)1) : ((uint_64)$26 > (uint_64)(int_64)-3) )
	
.LABEL $label$52
	$1 = *($15)
	if ( ($1 == 0) ){ goto $label$53 }
	$0 = *($24)
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$55 }
	$0 = $1
	goto $label$54 
	
.LABEL $label$55
	
.LOOP $label$56:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$57 }
	CALL $76($7)
	
.LABEL $label$57
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$56 }
	$0 = *($15)
	
.LABEL $label$54
	*($24) = $1
	CALL $76($0)
	
.LABEL $label$53
	CALL eosio_assert([1], [848])
	$0 = CALL db_next_i64(*($12 + [28]), ($32 + [48]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	$12 = CALL $24($2, $0)
	goto $label$10 
	
.LABEL $label$2
	*([0] + [4]) = ($32 + [128])
}

int_32 .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [656])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $75([72])
	$4 = CALL $57($6)
	*($6 + [56]) = $0
	CALL $58(($8 + [32]), $4)
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [60])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $59(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $76($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [304])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $57 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [208])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [272])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [208])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [272])
	*(($2 = ($0 + [48]))) = (int_64)1398362884
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [208])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [272])
	return $0
}