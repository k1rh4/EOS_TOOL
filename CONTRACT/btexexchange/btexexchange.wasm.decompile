(data (i32.const 4) "\10x\00\00")
(data (i32.const 16) "manager account does not exist.\00")
(data (i32.const 48) "the account is not the administrator account.\00")
(data (i32.const 96) "the blacklist account is already existed.\00")
(data (i32.const 144) "cannot create objects in table of another contract\00")
(data (i32.const 208) "write\00")
(data (i32.const 224) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 288) "error reading iterator\00")
(data (i32.const 320) "read\00")
(data (i32.const 336) "the blacklist account does not exist.\00")
(data (i32.const 384) "cannot pass end iterator to erase\00")
(data (i32.const 432) "cannot increment end iterator\00")
(data (i32.const 464) "object passed to erase is not in multi_index\00")
(data (i32.const 512) "cannot erase objects in table of another contract\00")
(data (i32.const 576) "attempt to remove object that was not in multi_index\00")
(data (i32.const 640) "unable to find key\00")
(data (i32.const 672) "invalid symbol name\00")
(data (i32.const 704) "token not issued\00")
(data (i32.const 736) "base token is already existed\00")
(data (i32.const 768) "next primary key in table is at autoincrement limit\00")
(data (i32.const 832) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 896) "cannot decrement iterator at beginning of table\00")
(data (i32.const 944) "get\00")
(data (i32.const 960) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 1024) "no base token object found\00")
(data (i32.const 1056) "creator account does not exist\00")
(data (i32.const 1088) "no token pair object found\00")
(data (i32.const 1120) "current account is not creator\00")
(data (i32.const 1152) "active\00")
(data (i32.const 1168) "transfer\00")
(data (i32.const 1184) "delete token pair and return your \00")
(data (i32.const 1232) "btexmortgage\00")
(data (i32.const 1248) "eosbtextoken\00")
(data (i32.const 1264) "return pledge\00")
(data (i32.const 1280) "cannot pass end iterator to modify\00")
(data (i32.const 1328) "pledge assets must be BT.\00")
(data (i32.const 1360) "quantity of pledge can not be negative.\00")
(data (i32.const 1408) "object passed to modify is not in multi_index\00")
(data (i32.const 1456) "cannot modify objects in table of another contract\00")
(data (i32.const 1520) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1584) "new creator account does not exist\00")
(data (i32.const 1632) "new creator account can not be btexexchange\00")
(data (i32.const 1680) "please set up a new account\00")
(data (i32.const 1712) "owner account does not exist\00")
(data (i32.const 1744) "no order object found\00")
(data (i32.const 1776) "this is not your order\00")
(data (i32.const 1808) "cancel order and return your \00")
(data (i32.const 1840) "user account must in blacklist\00")
(data (i32.const 1872) "contract account does not exist\00")
(data (i32.const 1904) "eosbtexteams\00")
(data (i32.const 1920) "EOS\00")
(data (i32.const 1936) "BT\00")
(data (i32.const 1952) "USDT\00")
(data (i32.const 1968) "this symbol can not be listed\00")
(data (i32.const 2000) "same name as the base token\00")
(data (i32.const 2032) "eosio.token\00")
(data (i32.const 2048) "account is not eosbtexteams\00")
(data (i32.const 2080) "token pair ID is already existed\00")
(data (i32.const 2128) "token pair is already existed\00")
(data (i32.const 2160) "pledge\00")
(data (i32.const 2176) "Are you funny?\00")
(data (i32.const 2192) "price must more than 0\00")
(data (i32.const 2224) "invalid amount quantity\00")
(data (i32.const 2256) "order amount must more than or equal to 0.01\00")
(data (i32.const 2304) "order ID is already existed\00")
(data (i32.const 2336) "attempt to subtract asset with different symbol\00")
(data (i32.const 2384) "subtraction underflow\00")
(data (i32.const 2416) "subtraction overflow\00")
(data (i32.const 2448) "{\00")
(data (i32.const 2464) "\"currencyId\":\00")
(data (i32.const 2480) ",\"buyOrderId\":\00")
(data (i32.const 2496) ",\"buyer\":\"\00")
(data (i32.const 2512) "\"\00")
(data (i32.const 2528) ",\"sellOrderId\":\00")
(data (i32.const 2544) ",\"seller\":\"\00")
(data (i32.const 2560) ",\"price\":\00")
(data (i32.const 2576) ",\"qty\":\"\00")
(data (i32.const 2592) ",\"amount\":\"\00")
(data (i32.const 2608) ",\"dealTime\":\00")
(data (i32.const 2624) "}\00")
(data (i32.const 2640) ",\"fee\":\"\00")
(data (i32.const 2656) "eosbtexbonus\00")
(data (i32.const 2672) "exchange fee\00")
(data (i32.const 2688) "share exchange fee\00")
(data (i32.const 2720) "BT token pair is not existed\00")
(data (i32.const 2752) "exchangemine\00")
(data (i32.const 2784) ".\00")
(data (i32.const 2800) " \00")
(data (i32.const 2804) "\00\0b\00\00")
(data (i32.const 2816) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 2864) "return\00")
(data (i32.const 2880) "invalid quantity\00")
(data (i32.const 2912) "order qty must more than 0\00")
(data (i32.const 2944) "cannot decrement end iterator when the index is empty\00")
(data (i32.const 3008) "cannot decrement iterator at beginning of index\00")
(data (i32.const 3056) ":\00")
(data (i32.const 3072) "The account was blacklisted.\00")
(data (i32.const 3104) "order\00")
(data (i32.const 3120) ",\00")
(data (i32.const 3136) "parameters are incorrect.\00")
(data (i32.const 3168) "currency\00")
(data (i32.const 3184) "the BT of pledge must be more than 2000.\00")
(data (i32.const 3232) "it is not my action.\00")
(data (i32.const 11664) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 11760) "%lld\00")
(data (i32.const 11776) "%llu\00")
(data (i32.const 11792) "%f\00")
(data (i32.const 11808) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 12272) "0123456789ABCDEF")
(data (i32.const 12288) "-+   0X0x\00")
(data (i32.const 12304) "(null)\00")
(data (i32.const 12320) "-0X+0X 0X-0x+0x 0x\00")
(data (i32.const 12352) "inf\00")
(data (i32.const 12368) "INF\00")
(data (i32.const 12384) "nan\00")
(data (i32.const 12400) "NAN\00")
(data (i32.const 12416) ".\00")
(data (i32.const 12432) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 12528) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(import "env" "__addtf3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "__eqtf2" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "__extenddftf2" (func $fimport$2 (param i32 f64)))
(import "env" "__fixtfsi" (func $fimport$3 (param i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$4 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$5 (param i32 i32)))
(import "env" "__floatunsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$8 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$9 (param i32 i64 i64 i64 i64)))
(import "env" "__unordtf2" (func $fimport$10 (param i64 i64 i64 i64) (result i32)))
(import "env" "abort" (func $fimport$11))
(import "env" "action_data_size" (func $fimport$12 (result i32)))
(import "env" "current_receiver" (func $fimport$13 (result i64)))
(import "env" "current_time" (func $fimport$14 (result i64)))
(import "env" "db_end_i64" (func $fimport$15 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$16 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$17 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$18 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$19 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$20 (param i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$21 (param i32)))
(import "env" "db_idx64_store" (func $fimport$22 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$23 (param i32 i64 i32)))
(import "env" "db_idx_double_end" (func $fimport$24 (param i64 i64 i64) (result i32)))
(import "env" "db_idx_double_find_primary" (func $fimport$25 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx_double_lowerbound" (func $fimport$26 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx_double_next" (func $fimport$27 (param i32 i32) (result i32)))
(import "env" "db_idx_double_previous" (func $fimport$28 (param i32 i32) (result i32)))
(import "env" "db_idx_double_remove" (func $fimport$29 (param i32)))
(import "env" "db_idx_double_store" (func $fimport$30 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx_double_update" (func $fimport$31 (param i32 i64 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$32 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$33 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$34 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$35 (param i32)))
(import "env" "db_store_i64" (func $fimport$36 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$37 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$38 (param i32 i32)))
(import "env" "eosio_exit" (func $fimport$39 (param i32)))
(import "env" "is_account" (func $fimport$40 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$41 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$42 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$43 (param i32 i32 i32) (result i32)))
(import "env" "read_action_data" (func $fimport$44 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$45 (param i64)))
(import "env" "require_auth2" (func $fimport$46 (param i64 i64)))
(import "env" "send_inline" (func $fimport$47 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN5eosio8exchange12addblacklistEyy" (func $5))
(export "_ZN5eosio8exchange18blacklist_checkingEy" (func $6))
(export "_ZN5eosio8exchange12delblacklistEyy" (func $9))
(export "_ZN5eosio8exchange12newbasetokenEyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $11))
(export "_ZN5eosio8exchange12delbasetokenEyy" (func $29))
(export "_ZN5eosio8exchange12deltokenpairEyy" (func $31))
(export "_ZN5eosio8exchange11settppledgeEyyNS_5assetE" (func $66))
(export "_ZN5eosio8exchange12settpcreatorEyyy" (func $69))
(export "_ZN5eosio8exchange11cancelorderEyyyy" (func $71))
(export "_ZN5eosio8exchange11rmuserorderEyy" (func $72))
(export "_ZN5eosio8exchange12newtokenpairEyyyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_5assetE" (func $73))
(export "_ZN5eosio8exchange3buyEyyyydNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $77))
(export "_ZN5eosio8exchange19adjust_u_sell_orderEyyNS_5assetE" (func $82))
(export "_ZN5eosio8exchange18adjust_u_buy_orderEyyNS_5assetE" (func $83))
(export "_ZN5eosio8exchange15asset_to_stringERKNS_5assetE" (func $85))
(export "_ZN5eosio8exchange19deal_fee_processingENS_5assetEyyyyyyby" (func $88))
(export "_ZN5eosio8exchange6miningEyNS_5assetEyyy" (func $90))
(export "_ZN5eosio8exchange19buy_by_market_priceEyyyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $96))
(export "_ZN5eosio8exchange4sellEyyyydNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $99))
(export "_ZN5eosio8exchange20sell_by_market_priceEyyyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $105))
(export "_ZN5eosio8exchange5splitERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_" (func $108))
(export "_ZN5eosio8exchange7is_uintERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $110))
(export "_ZN5eosio8exchange5applyEyy" (func $111))
(export "apply" (func $123))
(export "malloc" (func $124))
(export "free" (func $127))
(export "_ZNSt3__19to_stringEx" (func $142))
(export "_ZNSt3__19to_stringEy" (func $144))
(export "_ZNSt3__19to_stringEf" (func $145))
(export "isdigit" (func $149))
(export "snprintf" (func $150))
(export "vsnprintf" (func $151))
(export "__errno_location" (func $153))
(export "vfprintf" (func $154))
(export "__lockfile" (func $156))
(export "__unlockfile" (func $157))
(export "__fwritex" (func $158))
(export "strerror" (func $160))
(export "strnlen" (func $161))
(export "wctomb" (func $162))
(export "__signbitl" (func $163))
(export "__fpclassifyl" (func $164))
(export "frexpl" (func $165))
(export "wcrtomb" (func $166))
(export "memchr" (func $167))
(export "__lctrans" (func $168))
(export "__lctrans_impl" (func $169))
(export "__mo_lookup" (func $170))
(export "strcmp" (func $171))
(export "__towrite" (func $172))
(export "atoll" (func $173))
(export "memcmp" (func $174))
(export "strcpy" (func $175))
(export "__stpcpy" (func $176))
(export "strlen" (func $177))
(export "strtok" (func $178))
(export "strspn" (func $179))
(export "strcspn" (func $180))
(export "__strchrnul" (func $181))
(table $0 11 11 anyfunc)
(elem (i32.const 0) $182 $31 $72 $71 $66 $29 $9 $11 $5 $69 $152)



int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC _ZN5eosio8exchange18blacklist_checkingEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	$6 = [0]
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$4 = *($0)
	*($7 + [8]) = $4
	*($7 + [16]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)4344997574077186048, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $8(($7 + [8]), $0) + [16]) == (int_32)($7 + [8])), [224])
	$6 = [1]
	$2 = *($7 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	$5 = ($7 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $130($3)
	
.LABEL $label$5
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($7 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $2
	
.LABEL $label$2
	*($5) = $2
	CALL $130($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [48])
	return $6
}

int_32 .FUNC __stpcpy (int_32 $0, int_32 $1)
{
	int_32 $2
	if ( (((int_32)$1 ^ (int_32)$0) & [3]) ){ goto $label$2 }
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = *($1)
	*($0) = $2
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ($1 & [3]) ){ goto $label$4 }
	
.LABEL $label$3
	$2 = *($1)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$2 }
	
.LOOP $label$5:
	*($0) = $2
	$0 = ($0 + [4])
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	
.LABEL $label$2
	$2 = *($1)
	*($0) = $2
	if ( ($2 == 0) ){ goto $label$1 }
	$1 = ($1 + [1])
	
.LOOP $label$6:
	$2 = *($1)
	*(($0 = ($0 + [1]))) = $2
	$1 = ($1 + [1])
	if ( $2 ){ goto $label$6 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC __mo_lookup (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = *($0)
	$10 = ((int_32)$3 == (int_32)[-1794895138])
	$9 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	$4 = *($0 + [8])
	$5 = ( $4 ? $9 : $10 )
	if ( ((uint_32)$5 >= (uint_32)uint_32($1 >> [2])) ){ goto $label$4 }
	$12 = ($1 - ($5 << [2]))
	$11 = *($0 + [12])
	$6 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$6 >= (uint_32)$12) ){ goto $label$3 }
	$11 = *($0 + [16])
	$10 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$10 >= (uint_32)$12) ){ goto $label$2 }
	if ( ((($10 | $6) & [3]) == 0) ){ goto $label$1 }
	return [0]
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	$12 = uint_32($6 >> [2])
	if ( ((int_32)$3 != (int_32)[-1794895138]) ){ goto $label$16 }
	$5 = uint_32($5 >> [1])
	$6 = ($5 << [1])
	$9 = ($0 + (($6 + $12) << [2]))
	$11 = *(($9 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$15 }
	$8 = *($9)
	if ( ((uint_32)$8 >= (uint_32)($1 - $11)) ){ goto $label$14 }
	$9 = $5
	$7 = [0]
	
.LOOP $label$17:
	if ( *(($0 + ($11 + $8))) ){ goto $label$9 }
	$11 = CALL strcmp($2, ($0 + $11))
	if ( ($11 == 0) ){ goto $label$11 }
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$7 }
	$13 = [0]
	$4 = ( $9 ? ($4 - $9) : $11 )
	$9 = uint_32($4 >> [1])
	$11 = ((int_32)$11 < (int_32)[0])
	$7 = ( $7 ? $5 : $11 )
	$5 = ($7 + $9)
	$6 = ($5 << [1])
	$8 = ($0 + (($6 + $12) << [2]))
	$11 = *(($8 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$10 }
	$8 = *($8)
	if ( ($8 <= ($1 - $11)) ){ goto $label$17 }
	goto $label$10 
	
.LABEL $label$16
	$8 = uint_32($9 >> [1])
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$13 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ((uint_32)$11 >= (uint_32)($1 - $4)) ){ goto $label$12 }
	$5 = $8
	$7 = [0]
	
.LOOP $label$18:
	if ( *(($0 + ($4 + $11))) ){ goto $label$8 }
	$4 = CALL strcmp($2, ($0 + $4))
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((int_32)$9 == (int_32)[1]) ){ goto $label$6 }
	$13 = [0]
	$9 = ( $5 ? ($9 - $5) : $4 )
	$5 = uint_32($9 >> [1])
	$4 = ((int_32)$4 < (int_32)[0])
	$7 = ( $7 ? $8 : $4 )
	$8 = ($7 + $5)
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$10 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ($11 <= ($1 - $4)) ){ goto $label$18 }
	goto $label$10 
	
.LABEL $label$15
	return [0]
	
.LABEL $label$14
	return [0]
	
.LABEL $label$13
	return [0]
	
.LABEL $label$12
	return [0]
	
.LABEL $label$11
	$9 = ((int_32)$3 == (int_32)[-1794895138])
	$10 = ($0 + (($6 + uint_32($10 >> [2])) << [2]))
	$4 = *(($10 + [4]))
	$11 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$5 }
	$13 = [0]
	$4 = *($10)
	$4 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$4 >= (uint_32)($1 - $11)) ){ goto $label$10 }
	return ( [0] ? ($0 + $11) : *(($0 + ($11 + $4))) )
	
.LABEL $label$10
	return $13
	
.LABEL $label$9
	return [0]
	
.LABEL $label$8
	return [0]
	
.LABEL $label$7
	return [0]
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	return [0]
}

int_32 .FUNC strcmp (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ((int_32)$2 != (int_32)($3 & [255])) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	
.LOOP $label$2:
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 == (int_32)($3 & [255])) ){ goto $label$2 }
	
.LABEL $label$1
	return ($2 - ($3 & [255]))
}

int_32 .FUNC __towrite (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

void .FUNC $7 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $128(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $146($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $130($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $130($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC strtok (int_32 $0, int_32 $1)
{
	int_32 $2
	if ( $0 ){ goto $label$2 }
	$2 = [0]
	$0 = *([0] + [14340])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$2 = ($0 + CALL strspn($0, $1))
	if ( (*($2) == 0) ){ goto $label$4 }
	$0 = ($2 + CALL strcspn($2, $1))
	*([0] + [14340]) = $0
	if ( (*($0) == 0) ){ goto $label$3 }
	*([0] + [14340]) = ($0 + [1])
	*($0) = [0]
	return $2
	
.LABEL $label$4
	*([0] + [14340]) = [0]
	return [0]
	
.LABEL $label$3
	*([0] + [14340]) = [0]
	
.LABEL $label$1
	return $2
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _ZN5eosio8exchange12addblacklistEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$40($1), [16])
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [48])
	CALL eosio_assert(((int_32)CALL $6($0, $2) ^ (int_32)[1]), [96])
	*(($5 = (($7 + [8]) + [32]))) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$1 = *($0)
	*($7 + [8]) = $1
	*($7 + [16]) = $1
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$13()), [144])
	*(($0 = CALL $128([32])) + [16]) = ($7 + [8])
	*($0) = $2
	*($0 + [8]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000)
	CALL eosio_assert([1], [208])
	CALL memcpy(($7 + [64]), $0, [8])
	CALL eosio_assert([1], [208])
	CALL memcpy((($7 + [64]) | [8]), ($0 + [8]), [8])
	$2 = *($0)
	$3 = CALL db_store_i64(*($7 + [16]), (int_64)4344997574077186048, $1, $2, ($7 + [64]), [16])
	*($0 + [20]) = $3
	if ( (uint_64)($2 <= *($7 + [24])) ){ goto $label$1 }
	*((($7 + [8]) + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($7 + [56]) = $0
	$1 = *($0)
	*($7 + [64]) = $1
	*($7 + [52]) = $3
	$6 = ($7 + [36])
	$4 = *($6)
	if ( ((uint_32)$4 >= (uint_32)*($5)) ){ goto $label$3 }
	*($4 + [8]) = $1
	*($4 + [16]) = $3
	*($7 + [56]) = [0]
	*($4) = $0
	*($6) = ($4 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $7(($7 + [32]), ($7 + [56]), ($7 + [64]), ($7 + [52]))
	
.LABEL $label$2
	$0 = *($7 + [56])
	*($7 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	CALL $130($0)
	
.LABEL $label$4
	$3 = *($7 + [32])
	if ( ($3 == 0) ){ goto $label$5 }
	$5 = ($7 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	CALL $130($4)
	
.LABEL $label$9
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($7 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $3
	
.LABEL $label$6
	*($5) = $3
	CALL $130($0)
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [80])
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [11640])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [11448]
	$1 = (((int_32)$2 * (int_32)[12]) + [11448])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

void .FUNC $49 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $128(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $146($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $130($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $130($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $130($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $130($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [76]))
	*($9 + [4]) = $1
	*($9) = $0
	*($9 + [8]) = $9
	CALL $46(($9 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]), ($0 + [39]), ($0 + [40]))
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $42 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $130($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $130($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
	$7 = *(($1 + [72]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020480680945127424, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [288])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $128([80])
	$4 = CALL $47($6)
	*($6 + [64]) = $0
	CALL $48(($8 + [32]), $4)
	*($6 + [72]) = [-1]
	*($6 + [68]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [68])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $49(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $130($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [288])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $128([104])
	$4 = CALL $50($6)
	*($6 + [72]) = $0
	CALL $51(($8 + [32]), $4)
	*($6 + [80]) = [-1]
	*($6 + [76]) = $1
	*($6 + [84]) = [-1]
	*($6 + [88]) = [-1]
	*($6 + [92]) = [-1]
	*($6 + [96]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [76])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $52(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $130($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $47 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [24]) = (int_64)0
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	CALL eosio_assert([1], [960])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [672])
	*(($2 = ($0 + [48]))) = (int_64)1398362884
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [960])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [672])
	return $0
}

void .FUNC $46 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$7 = *($0)
	$6 = *($7 + [4])
	$8 = *($6 + [80])
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$2 }
	$8 = *($7)
	$8 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-4421661421696319488, ($9 + [8]), *($6))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($8)
	
.LABEL $label$1
	$7 = *($0)
	$6 = *($7 + [4])
	$8 = *(($6 + [84]))
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$4 }
	$8 = *($7)
	$8 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-4421661421696319487, ($9 + [8]), *($6))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($8)
	
.LABEL $label$3
	$7 = *($0)
	$6 = *($7 + [4])
	$8 = *(($6 + [88]))
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$6 }
	$8 = *($7)
	$8 = CALL db_idx_double_find_primary(*($8), *($8 + [8]), (int_64)-4421661421696319486, ($9 + [8]), *($6))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx_double_remove($8)
	
.LABEL $label$5
	$7 = *($0)
	$6 = *($7 + [4])
	$8 = *(($6 + [92]))
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$8 }
	$8 = *($7)
	$8 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-4421661421696319485, ($9 + [8]), *($6))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL db_idx64_remove($8)
	
.LABEL $label$7
	$8 = *($0)
	$7 = *($8 + [4])
	$0 = *(($7 + [96]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$10 }
	$0 = *($8)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4421661421696319484, ($9 + [8]), *($7))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($0)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $45 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	*([0] + [4]) = $12
	$10 = *($0)
	$9 = *($10 + [4])
	$11 = *($9 + [112])
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$2 }
	$11 = *($10)
	$11 = CALL db_idx64_find_primary(*($11), *($11 + [8]), (int_64)-3665743365212864512, ($12 + [8]), *($9))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($11)
	
.LABEL $label$1
	$10 = *($0)
	$9 = *($10 + [4])
	$11 = *(($9 + [116]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$4 }
	$11 = *($10)
	$11 = CALL db_idx64_find_primary(*($11), *($11 + [8]), (int_64)-3665743365212864511, ($12 + [8]), *($9))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($11)
	
.LABEL $label$3
	$10 = *($0)
	$9 = *($10 + [4])
	$11 = *(($9 + [120]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$6 }
	$11 = *($10)
	$11 = CALL db_idx64_find_primary(*($11), *($11 + [8]), (int_64)-3665743365212864510, ($12 + [8]), *($9))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($11)
	
.LABEL $label$5
	$10 = *($0)
	$9 = *($10 + [4])
	$11 = *(($9 + [124]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$8 }
	$11 = *($10)
	$11 = CALL db_idx64_find_primary(*($11), *($11 + [8]), (int_64)-3665743365212864509, ($12 + [8]), *($9))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL db_idx64_remove($11)
	
.LABEL $label$7
	$10 = *($0)
	$9 = *($10 + [4])
	$11 = *(($9 + [128]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$10 }
	$11 = *($10)
	$11 = CALL db_idx64_find_primary(*($11), *($11 + [8]), (int_64)-3665743365212864508, ($12 + [8]), *($9))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($11)
	
.LABEL $label$9
	$10 = *($0)
	$9 = *($10 + [4])
	$11 = *(($9 + [132]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$12 }
	$11 = *($10)
	$11 = CALL db_idx_double_find_primary(*($11), *($11 + [8]), (int_64)-3665743365212864507, ($12 + [8]), *($9))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx_double_remove($11)
	
.LABEL $label$11
	$10 = *($0)
	$9 = *($10 + [4])
	$11 = *(($9 + [136]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$14 }
	$11 = *($10)
	$11 = CALL db_idx_double_find_primary(*($11), *($11 + [8]), (int_64)-3665743365212864506, ($12 + [8]), *($9))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$13 }
	
.LABEL $label$14
	CALL db_idx_double_remove($11)
	
.LABEL $label$13
	$11 = *($0)
	$10 = *($11 + [4])
	$0 = *(($10 + [140]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$16 }
	$0 = *($11)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864505, ($12 + [8]), *($10))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($0)
	
.LABEL $label$15
	*([0] + [4]) = ($12 + [16])
}

void .FUNC $44 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$7 }
	CALL $130(*(($4 + [40])))
	
.LABEL $label$7
	CALL $130($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $130(*(($4 + [40])))
	
.LABEL $label$10
	CALL $130($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [108]))
	*($9 + [4]) = $1
	*($9) = $0
	*($9 + [8]) = $9
	CALL $45(($9 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]), ($0 + [39]), ($0 + [40]), ($0 + [41]), ($0 + [42]), ($0 + [43]))
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

int_32 .FUNC wcrtomb (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL __errno_location()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL __errno_location()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

void .FUNC frexpl (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$5 = ($4) & [32767]
	if ( ((int_32)$5) == (int_32)[32767]) ){ goto $label$1 }
	if ( $5 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($6, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL frexpl(($6 + [16]), *($6), *(($6 + [8])), $3)
	$4 = (*($3) + [-120])
	$2 = *($6 + [24])
	$1 = *($6 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($4 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($4 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	*($3) = $4
	
.LABEL $label$1
	*($0) = $1
	*(($0 + [8])) = $2
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC __fpclassifyl (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [3] ? [2] : ((int_64)((int_64)$2 | (int_64)$0) != (int_64)0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

int_32 .FUNC __signbitl (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

int_32 .FUNC wctomb (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL wcrtomb($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC strnlen (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL memchr($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

int_32 .FUNC strerror (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL __lctrans($3, *([0] + [20]))
	$2 = [0]
	
.LOOP $label$5:
	if ( ((int_32)*(($2 + [12432])) == (int_32)$0) ){ goto $label$4 }
	$1 = [87]
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[87]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$1 = $2
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = [12528]
	
.LOOP $label$6:
	$0 = *($2)
	$3 = ($2 + [1])
	$2 = $3
	if ( $0 ){ goto $label$6 }
	$2 = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [12528]
	return .LABEL $label$1
}

int_32 .FUNC __lctrans_impl (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	$1 = CALL __mo_lookup(*($1), *($1 + [4]), $0)
	return ( $1 ? $0 : $1 )
	
.LABEL $label$1
	return ( [0] ? $0 : [0] )
}

int_32 .FUNC __lctrans (int_32 $0, int_32 $1)
{
	return CALL __lctrans_impl($0, $1)
}

int_32 .FUNC strcpy (int_32 $0, int_32 $1)
{
	CALL __stpcpy($0, $1)
	return $0
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [208])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [208])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [208])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [208])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [208])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $20(*($1), ($0 + [32]))
}

int_32 .FUNC $50 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [32]) = (int_64)0
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	CALL eosio_assert([1], [960])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [672])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [960])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [672])
	return $0
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $52 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $128(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $146($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $130($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $130($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$7 = *($0)
	$6 = *($7 + [4])
	$8 = *($6 + [80])
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$2 }
	$8 = *($7)
	$8 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)4520852774463733760, ($9 + [8]), *($6))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($8)
	
.LABEL $label$1
	$7 = *($0)
	$6 = *($7 + [4])
	$8 = *(($6 + [84]))
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$4 }
	$8 = *($7)
	$8 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)4520852774463733761, ($9 + [8]), *($6))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($8)
	
.LABEL $label$3
	$7 = *($0)
	$6 = *($7 + [4])
	$8 = *(($6 + [88]))
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$6 }
	$8 = *($7)
	$8 = CALL db_idx_double_find_primary(*($8), *($8 + [8]), (int_64)4520852774463733762, ($9 + [8]), *($6))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx_double_remove($8)
	
.LABEL $label$5
	$7 = *($0)
	$6 = *($7 + [4])
	$8 = *(($6 + [92]))
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$8 }
	$8 = *($7)
	$8 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)4520852774463733763, ($9 + [8]), *($6))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL db_idx64_remove($8)
	
.LABEL $label$7
	$8 = *($0)
	$7 = *($8 + [4])
	$0 = *(($7 + [96]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$10 }
	$0 = *($8)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4520852774463733764, ($9 + [8]), *($7))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($0)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $54 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [24]) = (int_64)0
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	CALL eosio_assert([1], [960])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [672])
	*(($2 = ($0 + [48]))) = (int_64)1398362884
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [960])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [672])
	return $0
}

int_32 .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $56 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $128(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $146($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $130($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $130($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [208])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [208])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [208])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_64 .FUNC atoll (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	
.LOOP $label$1:
	$3 = *($0)
	$1 = int_32(($3 << [24]) >> [24])
	$2 = ($1 + [-9])
	$4 = ($0 + [1])
	$0 = $4
	if ( ((int_32)$3 == (int_32)[32]) ){ goto $label$1 }
	$0 = $4
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$2 = [1]
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	
.LABEL $label$4
	$3 = *($4)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 + [-1])
	$2 = [0]
	
.LABEL $label$2
	$5 = (int_64)0
	$3 = (int_32(($3 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$3 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($4 + [1])
	$5 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64))(((int_64)$5 * (int_64)10) - (CASTING int_64)(int_32 $3))
	$3 = *($0)
	$0 = ($0 + [1])
	$3 = ($3 + [-48])
	if ( ($3 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $5 ? (int_64))((int_64)0 - $5) : $2 )
}

int_32 .FUNC $152 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0 + [28])
	$6 = (*($0 + [20]) - $4)
	$3 = *($0 + [84])
	$5 = *($3 + [4])
	$6 = ( $5 ? $6 : ($5 <= $6) )
	if ( ($6 == 0) ){ goto $label$1 }
	CALL memcpy(*($3), $4, $6)
	*($3) = (*($3) + $6)
	$5 = (*($5) - $6)
	*(($5 = ($3 + [4]))) = $5
	
.LABEL $label$1
	$6 = *($3)
	$5 = ( $5 ? $2 : ($5 <= $2) )
	if ( ($5 == 0) ){ goto $label$2 }
	CALL memcpy($6, $1, $5)
	$6 = (*($3) + $5)
	*($3) = $6
	*(($3 = ($3 + [4]))) = (*($3) - $5)
	
.LABEL $label$2
	*($6) = [0]
	$3 = *($0 + [44])
	*(($0 + [28])) = $3
	*(($0 + [20])) = $3
	return $2
}

int_32 .FUNC __errno_location ()
{
	return [14332]
}

int_32 .FUNC snprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($4 + [12]) = $3
	$3 = CALL vsnprintf($0, $1, $2, $3)
	*([0] + [4]) = ($4 + [16])
	return $3
}

int_32 .FUNC vsnprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [160])
	*([0] + [4]) = $4
	$5 = [-1]
	*($4 + [148]) = ( ($1 + [-1]) ? [0] : $1 )
	$0 = ( $0 ? ($4 + [158]) : $1 )
	*($4 + [144]) = $0
	*(($4 = CALL memset($4, [0], [144])) + [36]) = [10]
	*($4 + [75]) = [255]
	*($4 + [76]) = [-1]
	*($4 + [44]) = ($4 + [159])
	*($4 + [84]) = ($4 + [144])
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	*($0) = [0]
	$5 = CALL vfprintf($4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*(CALL __errno_location()) = [75]
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [160])
	return $5
}

int_32 .FUNC __lockfile (int_32 $0)
{
	int_32 $1
	return $1
}

void .FUNC __unlockfile (int_32 $0)
{
}

int_32 .FUNC vfprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [288])
	*([0] + [4]) = $7
	*($7 + [284]) = $2
	$6 = [0]
	CALL memset(($7 + [240]), [0], [40])
	*($7 + [280]) = *($7 + [284])
	$2 = [-1]
	if ( ((int_32)CALL $155([0], $1, ($7 + [280]), ($7 + [80]), ($7 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL __lockfile($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) > (int_32)[0]) ){ goto $label$3 }
	*($0) = ($2 & [-33])
	
.LABEL $label$3
	$3 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	$2 = CALL $155($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	goto $label$4 
	
.LABEL $label$5
	*(($5 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($7 + [80])
	*($0 + [28]) = $7
	*($0 + [20]) = $7
	$4 = *($0 + [44])
	*($0 + [44]) = $7
	$2 = CALL $155($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	if ( ($4 == 0) ){ goto $label$4 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $4
	*($5) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$4 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $4 )
	
.LABEL $label$4
	$1 = *($0)
	*($0) = ($1 | $3)
	$1 = ($1 & [32])
	if ( ($6 == 0) ){ goto $label$6 }
	CALL __unlockfile($0)
	
.LABEL $label$6
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [288])
	return $2
}

int_32 .FUNC $155 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_64 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	$39 = (*([0] + [4]) - [8128])
	*([0] + [4]) = $39
	$12 = (($39 + [692]) + [11])
	$11 = (($39 + [704]) | [8])
	$10 = (($39 + [704]) | [9])
	$9 = ($39 + [7664])
	$8 = ([-2] - ($39 + [704]))
	$7 = (($39 + [692]) + [12])
	$6 = (($39 + [352]) + [54])
	$5 = (($39 + [352]) + [55])
	$30 = [0]
	$38 = [0]
	$32 = [0]
	
.LOOP $label$17:
	$38 = ($30 + $38)
	$37 = $1
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$16 }
	$1 = $37
	$30 = ($30 & [255])
	if ( ($30 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	if ( ((int_32)$30 == (int_32)[37]) ){ goto $label$19 }
	$1 = ($1 + [1])
	$30 = (*($1) & [255])
	if ( $30 ){ goto $label$21 }
	
.LABEL $label$20
	$30 = $1
	goto $label$18 
	
.LABEL $label$19
	$30 = $1
	
.LOOP $label$22:
	if ( ((int_32)*(($1 + [1])) != (int_32)[37]) ){ goto $label$18 }
	$30 = ($30 + [1])
	$1 = ($1 + [2])
	if ( ((int_32)*($1) == (int_32)[37]) ){ goto $label$22 }
	
.LABEL $label$18
	$13 = ([2147483647] - $38)
	$30 = ($30 - $37)
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	if ( ($0 == 0) ){ goto $label$23 }
	if ( (*($0) & [32]) ){ goto $label$23 }
	CALL __fwritex($37, $30, $0)
	
.LABEL $label$23
	if ( $30 ){ goto $label$24 }
	$36 = ($1 + [1])
	$27 = [-1]
	$30 = *($1 + [1])
	$17 = ($30 + [-48])
	if ( ((uint_32)$17 > (uint_32)[9]) ){ goto $label$25 }
	$1 = ((int_32)*($1 + [2]) == (int_32)[36])
	$36 = ( ($1 + [3]) ? $36 : $1 )
	$30 = *($36)
	$27 = ( $17 ? [-1] : $1 )
	$32 = ( [1] ? $32 : $1 )
	
.LABEL $label$25
	$14 = [0]
	$1 = (int_32(($30 << [24]) >> [24]) + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$26 }
	$14 = [0]
	
.LOOP $label$27:
	if ( ((([1] << $1) & [75913]) == 0) ){ goto $label$26 }
	$14 = (([1] << (int_32(($30 << [24]) >> [24]) + [-32])) | $14)
	$36 = ($36 + [1])
	$30 = *($36)
	$1 = ($30 + [-32])
	if ( ($1 <= [32]) ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)($30 & [255]) != (int_32)[42]) ){ goto $label$33 }
	$1 = (*($36 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$32 }
	if ( ((int_32)*($36 + [2]) != (int_32)[36]) ){ goto $label$32 }
	*(($4 + ($1 << [2]))) = [10]
	$17 = ($36 + [3])
	$32 = [1]
	$15 = *((($3 + (*(($36 + [1])) << [4])) + [-768]))
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	goto $label$31 
	
.LABEL $label$33
	$15 = [0]
	$30 = (int_32(($30 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$30 > (uint_32)[9]) ){ goto $label$30 }
	$1 = [0]
	$17 = $36
	
.LOOP $label$34:
	$15 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$35 }
	$1 = ((int_32)$1 * (int_32)[10])
	$15 = ( [-1] ? ($1 + $30) : ((int_32)$30 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$35
	$1 = $15
	$17 = ($17 + [1])
	$30 = (*($17) + [-48])
	if ( ($30 <= [10]) ){ goto $label$34 }
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$28 }
	goto $label$15 
	
.LABEL $label$32
	if ( $32 ){ goto $label$3 }
	$17 = ($36 + [1])
	if ( ($0 == 0) ){ goto $label$29 }
	$1 = *($2)
	*($2) = ($1 + [4])
	$32 = [0]
	$15 = *($1)
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	
.LABEL $label$31
	$15 = ([0] - $15)
	$14 = ($14 | [8192])
	goto $label$28 
	
.LABEL $label$30
	$17 = $36
	goto $label$28 
	
.LABEL $label$29
	$32 = [0]
	$15 = [0]
	
.LABEL $label$28
	$30 = [0]
	$36 = [-1]
	if ( ((int_32)*($17) != (int_32)[46]) ){ goto $label$42 }
	$36 = *($17 + [1])
	if ( ((int_32)$36 != (int_32)[42]) ){ goto $label$41 }
	$1 = (*($17 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$40 }
	if ( ((int_32)*($17 + [3]) != (int_32)[36]) ){ goto $label$40 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($17 + [4])
	$36 = *((($3 + (*(($17 + [2])) << [4])) + [-768]))
	goto $label$37 
	
.LABEL $label$42
	$1 = $17
	$16 = [0]
	goto $label$36 
	
.LABEL $label$41
	$1 = ($17 + [1])
	$31 = ($36 + [-48])
	if ( ((uint_32)$31 > (uint_32)[9]) ){ goto $label$39 }
	$17 = [0]
	
.LOOP $label$43:
	$36 = [-1]
	if ( ((uint_32)$17 > (uint_32)[214748364]) ){ goto $label$44 }
	$17 = ((int_32)$17 * (int_32)[10])
	$36 = ( [-1] ? ($17 + $31) : ((int_32)$31 > (int_32)([2147483647] - $17)) )
	
.LABEL $label$44
	$16 = [1]
	$17 = $36
	$1 = ($1 + [1])
	$31 = (*($1) + [-48])
	if ( ($31 <= [10]) ){ goto $label$43 }
	goto $label$36 
	
.LABEL $label$40
	if ( $32 ){ goto $label$3 }
	$1 = ($17 + [2])
	if ( ($0 == 0) ){ goto $label$38 }
	$17 = *($2)
	*($2) = ($17 + [4])
	$36 = *($17)
	goto $label$37 
	
.LABEL $label$39
	$16 = [1]
	$36 = [0]
	goto $label$36 
	
.LABEL $label$38
	$36 = [0]
	
.LABEL $label$37
	$16 = ((int_32)uint_32($36 >> [31]) ^ (int_32)[1])
	
.LABEL $label$36
	
.LOOP $label$45:
	$17 = $30
	$30 = (*($1) + [-65])
	if ( ((uint_32)$30 > (uint_32)[57]) ){ goto $label$3 }
	$1 = ($1 + [1])
	$30 = *(((((int_32)$17 * (int_32)[58]) + $30) + [11808]))
	if ( (($30 + [-1]) <= [8]) ){ goto $label$45 }
	if ( ($30 == 0) ){ goto $label$3 }
	if ( ((int_32)$30 != (int_32)[27]) ){ goto $label$49 }
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$48 }
	goto $label$3 
	
.LABEL $label$49
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$47 }
	*(($4 + ($27 << [2]))) = $30
	$30 = ($3 + ($27 << [4]))
	*($39 + [428]) = *(($30 + [12]))
	*($39 + [424]) = *(($30 + [8]))
	*($39 + [420]) = *(($30 + [4]))
	*($39 + [416]) = *($30)
	
.LABEL $label$48
	if ( $0 ){ goto $label$46 }
	$30 = [0]
	goto $label$24 
	
.LABEL $label$47
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $159(($39 + [416]), $30, $2)
	
.LABEL $label$46
	$31 = ($14 & [-65537])
	$18 = ( $31 ? $14 : ($14 & [8192]) )
	$26 = [0]
	$24 = [12288]
	$30 = *(($1 + [-1]))
	$29 = ( ( ($30 & [-33]) ? $30 : ((int_32)($30 & [15]) == (int_32)[3]) ) ? $30 : $17 )
	$30 = ($29 + [-65])
	if ( ((uint_32)$30 > (uint_32)[55]) ){ goto $label$80 }
	$14 = $5
	goto $label$111 
	
.LABEL $label$111
	if ( ((int_32)$36 > (int_32)[-1]) ){ goto $label$112 }
	if ( $16 ){ goto $label$15 }
	
.LABEL $label$112
	$35 = *($39 + [424])
	$23 = *($39 + [416])
	*($39 + [748]) = [0]
	if ( (CALL __signbitl($23, $35) == 0) ){ goto $label$113 }
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	$20 = [1]
	$19 = [12320]
	goto $label$108 
	
.LABEL $label$113
	if ( ($18 & [2048]) ){ goto $label$109 }
	$20 = ($18 & [1])
	$19 = ( [12326] ? [12321] : $20 )
	goto $label$108 
	
.LABEL $label$110
	$35 = *($39 + [416])
	if ( ((int_64)$35 <= (int_64)-1) ){ goto $label$92 }
	if ( ($18 & [2048]) ){ goto $label$88 }
	$26 = ($18 & [1])
	$24 = ( [12290] ? [12288] : $26 )
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$109
	$20 = [1]
	$19 = [12323]
	
.LABEL $label$108
	if ( ((int_32)CALL __fpclassifyl($23, $35) <= (int_32)[1]) ){ goto $label$115 }
	CALL frexpl(($39 + [320]), $23, $35, ($39 + [748]))
	$23 = *($39 + [328])
	$35 = *($39 + [320])
	CALL __addtf3(($39 + [304]), $35, $23, $35, $23)
	$23 = *((($39 + [304]) + [8]))
	$35 = *($39 + [304])
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$116 }
	*($39 + [748]) = (*($39 + [748]) + [-1])
	
.LABEL $label$116
	$21 = ($29 | [32])
	if ( ((int_32)$21 != (int_32)[97]) ){ goto $label$114 }
	$37 = ($29 & [32])
	$24 = ( ($19 + [9]) ? $19 : $37 )
	if ( ((uint_32)$36 > (uint_32)[26]) ){ goto $label$77 }
	if ( (([27] - $36) == 0) ){ goto $label$77 }
	$30 = ($36 + [-27])
	$34 = (int_64)4612248968380809216
	$33 = (int_64)0
	
.LOOP $label$117:
	CALL __multf3(($39 + [208]), $33, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($39 + [208]) + [8]))
	$33 = *($39 + [208])
	$30 = ($30 + [1])
	if ( $30 ){ goto $label$117 }
	if ( ((int_32)*($24) != (int_32)[45]) ){ goto $label$78 }
	CALL __subtf3(($39 + [160]), $35, ((int_64)$23 ^ (int_64)-9223372036854775808), $33, $34)
	CALL __addtf3(($39 + [144]), $33, $34, *($39 + [160]), *((($39 + [160]) + [8])))
	$23 = ((int_64)*((($39 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$35 = *($39 + [144])
	goto $label$77 
	
.LABEL $label$115
	$16 = CALL __unordtf2($23, $35, $23, $35)
	$37 = ($20 + [3])
	if ( ($18 & [8192]) ){ goto $label$93 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$93 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$95 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$118:
	if ( (($30 & [1]) == 0) ){ goto $label$119 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$119
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$118 }
	if ( $14 ){ goto $label$93 }
	$31 = ($31 & [255])
	goto $label$94 
	
.LABEL $label$114
	$30 = ((int_32)$36 < (int_32)[0])
	if ( (CALL __netf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$90 }
	CALL __multf3(($39 + [288]), $35, $23, (int_64)0, (int_64)4619285842798575616)
	$31 = (*($39 + [748]) + [-28])
	*($39 + [748]) = $31
	$23 = *((($39 + [288]) + [8]))
	$35 = *($39 + [288])
	goto $label$89 
	
.LABEL $label$107
	$35 = *($39 + [416])
	*((($39 + [344]) + [4])) = [0]
	*($39 + [344]) = $35
	*($39 + [416]) = ($39 + [344])
	$36 = [-1]
	$37 = ($39 + [344])
	goto $label$105 
	
.LABEL $label$106
	$37 = *($39 + [416])
	if ( ($36 == 0) ){ goto $label$74 }
	
.LABEL $label$105
	$30 = [0]
	$14 = $37
	$17 = [0]
	
.LOOP $label$121:
	$31 = *($14)
	if ( ($31 == 0) ){ goto $label$120 }
	$17 = CALL wctomb(($39 + [340]), $31)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$120 }
	if ( ((uint_32)$17 > (uint_32)($36 - $30)) ){ goto $label$120 }
	$14 = ($14 + [4])
	$30 = ($17 + $30)
	if ( ((uint_32)$36 > (uint_32)$30) ){ goto $label$121 }
	
.LABEL $label$120
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$104
	*((($39 + [352]) + [54])) = *($39 + [416])
	$36 = [1]
	$37 = $6
	$14 = $5
	$18 = $31
	goto $label$79 
	
.LABEL $label$103
	$37 = CALL strerror(*(CALL $153()))
	goto $label$97 
	
.LABEL $label$102
	$30 = ($17 & [255])
	if ( ((uint_32)$30 > (uint_32)[7]) ){ goto $label$56 }
	goto $label$122 
	
.LABEL $label$122
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$101
	$37 = $5
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$123 }
	$37 = $5
	
.LOOP $label$124:
	*(($37 = ($37 + [-1]))) = ((int_64)((int_64)$35 & (int_64)7) | (int_64)48)
	$35 = (uint_64)$35 >> (uint_64)(int_64)3
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$124 }
	
.LABEL $label$123
	if ( ($18 & [8]) ){ goto $label$84 }
	$26 = [0]
	$24 = [12288]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$100
	$36 = ( $36 ? [8] : ((uint_32)$36 > (uint_32)[8]) )
	$18 = ($18 | [8])
	$29 = [120]
	
.LABEL $label$99
	$26 = [0]
	$24 = [12288]
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$125 }
	$30 = ($29 & [32])
	$37 = $5
	
.LOOP $label$126:
	*(($37 = ($37 + [-1]))) = (*((((CASTING uint_32)(uint_64 $35) & [15]) + [12272])) | $30)
	$35 = (uint_64)$35 >> (uint_64)(int_64)4
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$126 }
	if ( (($18 & [8]) == 0) ){ goto $label$83 }
	if ( (int_64)(*($39 + [416]) == 0) ){ goto $label$83 }
	$24 = (int_32($29 >> [4]) + [12288])
	$26 = [2]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$125
	$37 = $5
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$98
	$30 = *($39 + [416])
	$37 = ( $30 ? [12304] : $30 )
	
.LABEL $label$97
	$26 = [0]
	$30 = CALL strnlen($37, ( [2147483647] ? $36 : ((int_32)$36 < (int_32)[0]) ))
	$14 = ($37 + $30)
	if ( ((int_32)$36 <= (int_32)[-1]) ){ goto $label$91 }
	$18 = $31
	$36 = $30
	goto $label$79 
	
.LABEL $label$96
	$26 = [0]
	$24 = [12288]
	$35 = *($39 + [416])
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$95
	if ( $17 ){ goto $label$93 }
	
.LABEL $label$94
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$93
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$127 }
	CALL __fwritex($19, $20, $0)
	$30 = *($0)
	
.LABEL $label$127
	if ( ($30 & [32]) ){ goto $label$128 }
	$30 = uint_32(($29 & [32]) >> [5])
	CALL __fwritex(( ( [12384] ? [12400] : $30 ) ? ( [12352] ? [12368] : $30 ) : $16 ), [3], $0)
	
.LABEL $label$128
	if ( ((int_32)($18 & [73728]) != (int_32)[8192]) ){ goto $label$129 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$129 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$131 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$132:
	if ( (($30 & [1]) == 0) ){ goto $label$133 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$133
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$132 }
	if ( $14 ){ goto $label$129 }
	$31 = ($31 & [255])
	goto $label$130 
	
.LABEL $label$131
	if ( $17 ){ goto $label$129 }
	
.LABEL $label$130
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$129
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$92
	$35 = (int_64)
	*($39 + [416]) = $35((int_64)0 - $35))
	$26 = [1]
	$24 = [12288]
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$91
	$18 = $31
	$36 = $30
	if ( (*($14) == 0) ){ goto $label$79 }
	goto $label$15 
	
.LABEL $label$90
	$31 = *($39 + [748])
	
.LABEL $label$89
	$28 = ( [6] ? $36 : $30 )
	$22 = ( ($39 + [752]) ? $9 : ((int_32)$31 < (int_32)[0]) )
	$36 = $22
	
.LOOP $label$134:
	$30 = CALL __fixunstfsi($35, $23)
	CALL __floatunsitf(($39 + [272]), $30)
	CALL __subtf3(($39 + [256]), $35, $23, *($39 + [272]), *((($39 + [272]) + [8])))
	CALL __multf3(($39 + [240]), *($39 + [256]), *((($39 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($36) = $30
	$36 = ($36 + [4])
	$23 = *((($39 + [240]) + [8]))
	$35 = *($39 + [240])
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$134 }
	if ( ((int_32)$31 < (int_32)[1]) ){ goto $label$137 }
	$17 = $22
	
.LOOP $label$138:
	$14 = ( $31 ? [29] : ((int_32)$31 < (int_32)[29]) )
	$30 = ($36 + [-4])
	if ( ($30 <= $17) ){ goto $label$139 }
	$23 = (CASTING uint_64)(uint_32 $14)
	$35 = (int_64)0
	
.LOOP $label$140:
	$35 = ((int_64)((int_64)*($30) << (int_64)$23) + (int_64)((int_64)$35 & (int_64)4294967295))
	*($30) = ((uint_64)$35 % (uint_64)(int_64)1000000000)
	$35 = ((uint_64)$35 / (uint_64)(int_64)1000000000)
	$30 = ($30 + [-4])
	if ( ((uint_32)$30 >= (uint_32)$17) ){ goto $label$140 }
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( ($30 == 0) ){ goto $label$139 }
	*(($17 = ($17 + [-4]))) = $30
	
.LABEL $label$139
	
.LOOP $label$142:
	$30 = $36
	if ( ((uint_32)$30 <= (uint_32)$17) ){ goto $label$141 }
	$36 = ($30 + [-4])
	if ( (*($36) == 0) ){ goto $label$142 }
	
.LABEL $label$141
	$36 = $30
	$31 = ($31 - $14)
	if ( ((int_32)$31 > (int_32)[0]) ){ goto $label$138 }
	*($39 + [748]) = $31
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	goto $label$136 
	
.LABEL $label$137
	$30 = $36
	$17 = $22
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	
.LABEL $label$136
	$24 = (((uint_32)($28 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$21 != (int_32)[102]) ){ goto $label$144 }
	$25 = ($22 + ($24 << [2]))
	
.LOOP $label$145:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$147 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$148:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$148 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$146 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$146 
	
.LABEL $label$147
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$146
	$30 = ( $25 ? $30 : ((int_32)int_32(($30 - $22) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$145 }
	goto $label$143 
	
.LABEL $label$144
	
.LOOP $label$149:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$151 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$152:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$152 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$150 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$150 
	
.LABEL $label$151
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$150
	$30 = ( ($17 + ($24 << [2])) ? $30 : ((int_32)int_32(($30 - $17) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$149 }
	
.LABEL $label$143
	*($39 + [748]) = $31
	
.LABEL $label$135
	$36 = [0]
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$153 }
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$153 }
	$14 = [10]
	
.LOOP $label$154:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$154 }
	
.LABEL $label$153
	$16 = ((int_32)$21 == (int_32)[103])
	$14 = (($28 - ( $36 ? [0] : ((int_32)$21 != (int_32)[102]) )) - (((int_32)$28 != (int_32)[0]) & $16))
	if ( ((int_32)$14 >= (int_32)(((int_32)int_32(($30 - $22) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$155 }
	$37 = ($14 + [147456])
	$24 = ($22 + (((int_32)$37 / (int_32)[9]) << [2]))
	$31 = ($24 + [-65532])
	$14 = [10]
	$37 = ((int_32)$37 % (int_32)[9])
	if ( ((int_32)($37 + [1]) > (int_32)[8]) ){ goto $label$156 }
	$37 = ([8] - $37)
	$14 = [10]
	
.LOOP $label$157:
	$14 = ((int_32)$14 * (int_32)[10])
	$37 = ($37 + [-1])
	if ( $37 ){ goto $label$157 }
	
.LABEL $label$156
	$27 = *($31)
	$37 = ((uint_32)$27 % (uint_32)$14)
	$26 = ($31 + [4])
	if ( ((int_32)$26 != (int_32)$30) ){ goto $label$159 }
	if ( ($37 == 0) ){ goto $label$158 }
	
.LABEL $label$159
	if ( (((uint_32)$27 / (uint_32)$14) & [1]) ){ goto $label$161 }
	$35 = (int_64)4643211215818981376
	$23 = (int_64)0
	if ( ((uint_32)$31 <= (uint_32)$17) ){ goto $label$160 }
	if ( ((int_32)$14 != (int_32)[1000000000]) ){ goto $label$160 }
	if ( ((*(($31 + [-4])) & [1]) == 0) ){ goto $label$160 }
	
.LABEL $label$161
	$35 = (int_64)4643211215818981376
	$23 = (int_64)1
	
.LABEL $label$160
	$34 = (int_64)4611123068473966592
	$25 = ((int_32)$14 / (int_32)[2])
	if ( ($37 <= $25) ){ goto $label$162 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$37 == (int_32)$25) ) ? (int_64)4611545280939032576 : ((int_32)$26 == (int_32)$30) )
	
.LABEL $label$162
	if ( ($20 == 0) ){ goto $label$163 }
	if ( ((int_32)*($19) != (int_32)[45]) ){ goto $label$163 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	
.LABEL $label$163
	CALL __addtf3(($39 + [224]), $23, $35, (int_64)0, $34)
	$37 = ($27 - $37)
	*($31) = $37
	if ( (CALL __eqtf2(*($39 + [224]), *((($39 + [224]) + [8])), $23, $35) == 0) ){ goto $label$158 }
	$36 = ($37 + $14)
	*($31) = $36
	if ( ($36 <= [1000000000]) ){ goto $label$164 }
	$36 = ($24 + [-65536])
	
.LOOP $label$165:
	*(($36 + [4])) = [0]
	if ( ((uint_32)$36 >= (uint_32)$17) ){ goto $label$166 }
	*(($17 = ($17 + [-4]))) = [0]
	
.LABEL $label$166
	$14 = (*($36) + [1])
	*($36) = $14
	$36 = ($36 + [-4])
	if ( ((uint_32)$14 > (uint_32)[999999999]) ){ goto $label$165 }
	$31 = ($36 + [4])
	
.LABEL $label$164
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$158 }
	$14 = [10]
	
.LOOP $label$167:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$167 }
	
.LABEL $label$158
	$14 = ($31 + [4])
	$30 = ( $14 ? $30 : ((uint_32)$30 > (uint_32)$14) )
	
.LABEL $label$155
	$31 = ([0] - $36)
	
.LOOP $label$171:
	$14 = $30
	if ( ((uint_32)$14 <= (uint_32)$17) ){ goto $label$170 }
	$30 = ($14 + [-4])
	if ( (*($30) == 0) ){ goto $label$171 }
	$27 = [1]
	if ( $16 ){ goto $label$169 }
	goto $label$168 
	
.LABEL $label$170
	$27 = [0]
	if ( ($16 == 0) ){ goto $label$168 }
	
.LABEL $label$169
	$30 = (($28 == 0) + $28)
	if ( ((int_32)$30 <= (int_32)$36) ){ goto $label$76 }
	if ( ((int_32)$36 < (int_32)[-4]) ){ goto $label$76 }
	$29 = ($29 + [-1])
	$28 = (($30 + [-1]) - $36)
	$16 = ($18 & [8])
	if ( ($16 == 0) ){ goto $label$75 }
	goto $label$68 
	
.LABEL $label$168
	$16 = ($18 & [8])
	goto $label$68 
	
.LABEL $label$88
	$26 = [1]
	$24 = [12289]
	if ( (uint_64)($35 <= (int_64)4294967296) ){ goto $label$86 }
	
.LABEL $label$87
	$37 = $5
	
.LOOP $label$172:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$172 }
	goto $label$85 
	
.LABEL $label$86
	$23 = $35
	$37 = $5
	
.LABEL $label$85
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$83 }
	
.LOOP $label$173:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $17 ){ goto $label$173 }
	goto $label$83 
	
.LABEL $label$84
	$30 = ($5 - $37)
	$24 = ( [12288] ? [12293] : ((int_32)$36 > (int_32)$30) )
	$26 = ((int_32)$36 <= (int_32)$30)
	
.LABEL $label$83
	if ( ($16 == 0) ){ goto $label$81 }
	
.LABEL $label$82
	if ( ((int_32)$36 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$81
	$18 = ( ($18 & [-65537]) ? $18 : ((int_32)$36 > (int_32)[-1]) )
	$35 = *($39 + [416])
	if ( $36 ){ goto $label$174 }
	if ( ((int_64)($35 == 0) == 0) ){ goto $label$174 }
	$37 = $5
	$14 = $5
	$36 = [0]
	goto $label$79 
	
.LABEL $label$174
	$30 = ((int_64)($35 == 0) + ($5 - $37))
	$36 = ( $36 ? $30 : ((int_32)$36 > (int_32)$30) )
	
.LABEL $label$80
	$14 = $5
	
.LABEL $label$79
	$29 = ($14 - $37)
	$28 = ( $29 ? $36 : ((int_32)$36 < (int_32)$29) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$15 }
	$27 = ($26 + $28)
	$30 = ( $27 ? $15 : ((int_32)$15 < (int_32)$27) )
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$175 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$175 }
	$17 = ($22 <= [256])
	$22 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $22 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$177 }
	$17 = ($14 == 0)
	$14 = $22
	
.LOOP $label$178:
	if ( (($17 & [1]) == 0) ){ goto $label$179 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$179
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$178 }
	if ( $16 ){ goto $label$175 }
	$22 = ($22 & [255])
	goto $label$176 
	
.LABEL $label$177
	if ( $14 ){ goto $label$175 }
	
.LABEL $label$176
	CALL __fwritex(($39 + [432]), $22, $0)
	
.LABEL $label$175
	if ( (*($0) & [32]) ){ goto $label$180 }
	CALL __fwritex($24, $26, $0)
	
.LABEL $label$180
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$181 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$181 }
	$17 = ($26 <= [256])
	$26 = ($30 - $27)
	CALL memset(($39 + [432]), [48], ( $26 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$183 }
	$17 = ($14 == 0)
	$14 = $26
	
.LOOP $label$184:
	if ( (($17 & [1]) == 0) ){ goto $label$185 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$185
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$184 }
	if ( $16 ){ goto $label$181 }
	$26 = ($26 & [255])
	goto $label$182 
	
.LABEL $label$183
	if ( $14 ){ goto $label$181 }
	
.LABEL $label$182
	CALL __fwritex(($39 + [432]), $26, $0)
	
.LABEL $label$181
	if ( ((int_32)$29 >= (int_32)$36) ){ goto $label$186 }
	$17 = ($16 <= [256])
	$16 = ($28 - $29)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$188 }
	$17 = ($36 == 0)
	$36 = $16
	
.LOOP $label$189:
	if ( (($17 & [1]) == 0) ){ goto $label$190 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$190
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$189 }
	if ( $31 ){ goto $label$186 }
	$16 = ($16 & [255])
	goto $label$187 
	
.LABEL $label$188
	if ( $36 ){ goto $label$186 }
	
.LABEL $label$187
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$186
	if ( (*($0) & [32]) ){ goto $label$191 }
	CALL __fwritex($37, $29, $0)
	
.LABEL $label$191
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$24 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$24 }
	$17 = ($37 <= [256])
	$37 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $17 ))
	$36 = *($0)
	$15 = ($36 & [32])
	if ( $17 ){ goto $label$193 }
	$17 = ($15 == 0)
	$15 = $37
	
.LOOP $label$194:
	if ( (($17 & [1]) == 0) ){ goto $label$195 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$195
	$14 = ($36 & [32])
	$17 = ($14 == 0)
	$15 = ($15 + [-256])
	if ( ((uint_32)$15 > (uint_32)[255]) ){ goto $label$194 }
	if ( $14 ){ goto $label$24 }
	$37 = ($37 & [255])
	goto $label$192 
	
.LABEL $label$193
	if ( $15 ){ goto $label$24 }
	
.LABEL $label$192
	CALL __fwritex(($39 + [432]), $37, $0)
	goto $label$24 
	
.LABEL $label$78
	CALL __addtf3(($39 + [192]), $35, $23, $33, $34)
	CALL __subtf3(($39 + [176]), *($39 + [192]), *((($39 + [192]) + [8])), $33, $34)
	$23 = *((($39 + [176]) + [8]))
	$35 = *($39 + [176])
	
.LABEL $label$77
	$30 = int_32($31 >> [31])
	$31 = *($39 + [748])
	$17 = ((int_32)($31 + $30) ^ (int_32)$30)
	$34 = (CASTING int_64)(int_32 $17)
	$30 = [0]
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$198 }
	$17 = (CASTING uint_32)(uint_64 $34)
	if ( $17 ){ goto $label$197 }
	goto $label$196 
	
.LABEL $label$198
	$30 = [0]
	
.LOOP $label$199:
	*(($12 + $30)) = ((int_64)((uint_64)$34 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ($30 + [-1])
	$17 = ((uint_64)$34 > (uint_64)(int_64)42949672959)
	$33 = ((uint_64)$34 / (uint_64)(int_64)10)
	$34 = $33
	if ( $17 ){ goto $label$199 }
	$17 = (CASTING uint_32)(uint_64 $33)
	if ( ($17 == 0) ){ goto $label$196 }
	
.LABEL $label$197
	
.LOOP $label$200:
	*(((($39 + [692]) + $30) + [11])) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$30 = ($30 + [-1])
	$14 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $14 ){ goto $label$200 }
	
.LABEL $label$196
	$17 = ($7 + $30)
	if ( $30 ){ goto $label$201 }
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$201
	$16 = ($20 | [2])
	*(($27 = ($17 + [-2]))) = ($29 + [15])
	*(($17 + [-1])) = ((uint_32($31 >> [30]) & [2]) + [43])
	if ( ($18 & [8]) ){ goto $label$202 }
	if ( ((int_32)$36 < (int_32)[1]) ){ goto $label$71 }
	$30 = ($39 + [704])
	
.LOOP $label$203:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [80]), $17)
	CALL __subtf3(($39 + [64]), $35, $23, *($39 + [80]), *((($39 + [80]) + [8])))
	CALL __multf3(($39 + [48]), *($39 + [64]), *((($39 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [12272])) | $37)
	$23 = *((($39 + [48]) + [8]))
	$35 = *($39 + [48])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$204 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$204
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$203 }
	goto $label$70 
	
.LABEL $label$202
	$30 = ($39 + [704])
	
.LOOP $label$205:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [128]), $17)
	CALL __subtf3(($39 + [112]), $35, $23, *($39 + [128]), *((($39 + [128]) + [8])))
	CALL __multf3(($39 + [96]), *($39 + [112]), *((($39 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [12272])) | $37)
	$23 = *((($39 + [96]) + [8]))
	$35 = *($39 + [96])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$206 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$206
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$205 }
	goto $label$70 
	
.LABEL $label$76
	$28 = ($30 + [-1])
	$29 = ($29 + [-2])
	$16 = ($18 & [8])
	if ( $16 ){ goto $label$68 }
	
.LABEL $label$75
	$30 = [9]
	if ( ($27 == 0) ){ goto $label$207 }
	$16 = *(($14 + [-4]))
	if ( ($16 == 0) ){ goto $label$207 }
	$30 = [0]
	if ( ((uint_32)$16 % (uint_32)[10]) ){ goto $label$207 }
	$37 = [10]
	$30 = [0]
	
.LOOP $label$208:
	$30 = ($30 + [1])
	$37 = ((int_32)$37 * (int_32)[10])
	if ( (((uint_32)$16 % (uint_32)$37) == 0) ){ goto $label$208 }
	
.LABEL $label$207
	$37 = (((int_32)int_32(($14 - $22) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($29 | [32]) != (int_32)[102]) ){ goto $label$69 }
	$16 = [0]
	$30 = ($37 - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	goto $label$68 
	
.LABEL $label$74
	$30 = [0]
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	
.LABEL $label$73
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$72 }
	$17 = ($27 <= [256])
	$27 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $27 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$210 }
	$17 = ($36 == 0)
	$36 = $27
	
.LOOP $label$211:
	if ( (($17 & [1]) == 0) ){ goto $label$212 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$212
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$211 }
	if ( $31 ){ goto $label$72 }
	$27 = ($27 & [255])
	goto $label$209 
	
.LABEL $label$210
	if ( $36 ){ goto $label$72 }
	
.LABEL $label$209
	CALL __fwritex(($39 + [432]), $27, $0)
	
.LABEL $label$72
	if ( ($30 == 0) ){ goto $label$213 }
	$17 = [0]
	
.LOOP $label$214:
	$36 = *($37)
	if ( ($36 == 0) ){ goto $label$213 }
	$36 = CALL wctomb(($39 + [340]), $36)
	$17 = ($36 + $17)
	if ( ((uint_32)$17 > (uint_32)$30) ){ goto $label$213 }
	if ( (*($0) & [32]) ){ goto $label$215 }
	CALL __fwritex(($39 + [340]), $36, $0)
	
.LABEL $label$215
	$37 = ($37 + [4])
	if ( ($17 <= $30) ){ goto $label$214 }
	
.LABEL $label$213
	if ( ((int_32)$16 != (int_32)[8192]) ){ goto $label$216 }
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$216 }
	$17 = ($31 <= [256])
	$31 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$218 }
	$17 = ($36 == 0)
	$36 = $31
	
.LOOP $label$219:
	if ( (($17 & [1]) == 0) ){ goto $label$220 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$220
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$219 }
	if ( $37 ){ goto $label$216 }
	$31 = ($31 & [255])
	goto $label$217 
	
.LABEL $label$218
	if ( $36 ){ goto $label$216 }
	
.LABEL $label$217
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$216
	$30 = ( $15 ? $30 : ((int_32)$15 > (int_32)$30) )
	goto $label$24 
	
.LABEL $label$71
	$17 = ($39 + [704])
	
.LOOP $label$221:
	$14 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [32]), $14)
	CALL __subtf3(($39 + [16]), $35, $23, *($39 + [32]), *((($39 + [32]) + [8])))
	CALL __multf3($39, *($39 + [16]), *((($39 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($30 = $17)) = (*(($14 + [12272])) | $37)
	$23 = *(($39 + [8]))
	$35 = *($39)
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$222 }
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$222 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$222
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$221 }
	
.LABEL $label$70
	$30 = [-1]
	$31 = ($7 - $27)
	if ( ((int_32)(([2147483645] - $16) - $31) < (int_32)$36) ){ goto $label$50 }
	$26 = ($17 - ($39 + [704]))
	$29 = ( ( ($36 + [2]) ? $26 : ((int_32)($8 + $17) < (int_32)$36) ) ? $26 : $36 )
	$37 = (($31 + $16) + $29)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$65 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$65 }
	$30 = ($28 <= [256])
	$28 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$67 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$223:
	if ( (($30 & [1]) == 0) ){ goto $label$224 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$224
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$223 }
	if ( $14 ){ goto $label$65 }
	$28 = ($28 & [255])
	goto $label$66 
	
.LABEL $label$69
	$16 = [0]
	$30 = (($37 + $36) - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	
.LABEL $label$68
	$30 = [-1]
	$24 = ($28 | $16)
	$37 = ((int_32)$24 != (int_32)[0])
	if ( ((int_32)$28 > (int_32)([2147483646] - $37)) ){ goto $label$50 }
	$26 = (($28 + $37) + [1])
	$21 = ((int_32)($29 | [32]) != (int_32)[102])
	if ( $21 ){ goto $label$225 }
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	$36 = ( $36 ? [0] : ((int_32)$36 > (int_32)[0]) )
	goto $label$61 
	
.LABEL $label$225
	$30 = ( $31 ? $36 : ((int_32)$36 < (int_32)[0]) )
	$35 = (CASTING int_64)(int_32 $30)
	if ( ((int_32)$30 <= (int_32)[-1]) ){ goto $label$64 }
	$37 = $7
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( $30 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$67
	if ( $17 ){ goto $label$65 }
	
.LABEL $label$66
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$65
	if ( (*($0) & [32]) ){ goto $label$226 }
	CALL __fwritex($24, $16, $0)
	
.LABEL $label$226
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$227 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$227 }
	$30 = ($16 <= [256])
	$16 = ($15 - $37)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$229 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$230:
	if ( (($30 & [1]) == 0) ){ goto $label$231 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$231
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$230 }
	if ( $14 ){ goto $label$227 }
	$16 = ($16 & [255])
	goto $label$228 
	
.LABEL $label$229
	if ( $17 ){ goto $label$227 }
	
.LABEL $label$228
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$227
	if ( (*($0) & [32]) ){ goto $label$232 }
	CALL __fwritex(($39 + [704]), $26, $0)
	
.LABEL $label$232
	$16 = ($29 - $26)
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$233 }
	$30 = ($16 <= [256])
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$235 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$236:
	if ( (($30 & [1]) == 0) ){ goto $label$237 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$237
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$236 }
	if ( $14 ){ goto $label$233 }
	$16 = ($16 & [255])
	goto $label$234 
	
.LABEL $label$235
	if ( $17 ){ goto $label$233 }
	
.LABEL $label$234
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$233
	if ( (*($0) & [32]) ){ goto $label$238 }
	CALL __fwritex($27, $31, $0)
	
.LABEL $label$238
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$239 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$239 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$241 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$242:
	if ( (($30 & [1]) == 0) ){ goto $label$243 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$243
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$242 }
	if ( $14 ){ goto $label$239 }
	$31 = ($31 & [255])
	goto $label$240 
	
.LABEL $label$241
	if ( $17 ){ goto $label$239 }
	
.LABEL $label$240
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$239
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$64
	$37 = $7
	
.LOOP $label$244:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$244 }
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$62 }
	
.LABEL $label$63
	
.LOOP $label$245:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$31 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $31 ){ goto $label$245 }
	
.LABEL $label$62
	if ( ((int_32)($7 - $37) > (int_32)[1]) ){ goto $label$246 }
	$30 = ($37 + [-1])
	
.LOOP $label$247:
	*($30) = [48]
	$37 = ($7 - $30)
	$31 = ($30 + [-1])
	$30 = $31
	if ( ((int_32)$37 < (int_32)[2]) ){ goto $label$247 }
	$37 = ($31 + [1])
	
.LABEL $label$246
	*(($25 = ($37 + [-2]))) = $29
	$30 = [-1]
	*(($37 + [-1])) = ((uint_32($36 >> [30]) & [2]) + [43])
	$36 = ($7 - $25)
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	
.LABEL $label$61
	$30 = [-1]
	$36 = ($36 + $26)
	if ( ((int_32)$36 > (int_32)((int_32)$20 ^ (int_32)[2147483647])) ){ goto $label$50 }
	$26 = ($36 + $20)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$51 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$51 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$53 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$248:
	if ( (($30 & [1]) == 0) ){ goto $label$249 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$249
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$248 }
	if ( $31 ){ goto $label$51 }
	$29 = ($29 & [255])
	goto $label$52 
	
.LABEL $label$60
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$59
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$58
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$57
	*(*($39 + [416])) = $38
	
.LABEL $label$56
	$30 = [0]
	goto $label$24 
	
.LABEL $label$55
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$54
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$53
	if ( $36 ){ goto $label$51 }
	
.LABEL $label$52
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$51
	if ( (*($0) & [32]) ){ goto $label$250 }
	CALL __fwritex($19, $20, $0)
	
.LABEL $label$250
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$251 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$251 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [48], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$253 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$254:
	if ( (($30 & [1]) == 0) ){ goto $label$255 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$255
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$254 }
	if ( $31 ){ goto $label$251 }
	$29 = ($29 & [255])
	goto $label$252 
	
.LABEL $label$253
	if ( $36 ){ goto $label$251 }
	
.LABEL $label$252
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$251
	if ( $21 ){ goto $label$266 }
	$31 = ( $22 ? $17 : ((uint_32)$17 > (uint_32)$22) )
	$37 = $31
	
.LOOP $label$267:
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$269 }
	$17 = [0]
	
.LOOP $label$270:
	*(($11 + $17)) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ($17 + [-1])
	$36 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $36 ){ goto $label$270 }
	goto $label$268 
	
.LABEL $label$269
	$17 = [0]
	
.LABEL $label$268
	$30 = ($10 + $17)
	if ( ((int_32)$37 == (int_32)$31) ){ goto $label$272 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$271 }
	
.LOOP $label$273:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$273 }
	$30 = ($39 + [704])
	goto $label$271 
	
.LABEL $label$272
	if ( $17 ){ goto $label$271 }
	*(($30 = ($30 + [-1]))) = [48]
	
.LABEL $label$271
	if ( (*($0) & [32]) ){ goto $label$274 }
	CALL __fwritex($30, ($10 - $30), $0)
	
.LABEL $label$274
	$37 = ($37 + [4])
	if ( ((uint_32)$37 <= (uint_32)$22) ){ goto $label$267 }
	if ( ($24 == 0) ){ goto $label$275 }
	if ( (*($0) & [32]) ){ goto $label$275 }
	CALL __fwritex([12416], [1], $0)
	
.LABEL $label$275
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$265 }
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$264 }
	
.LOOP $label$276:
	$30 = $10
	$17 = *($37)
	if ( ($17 == 0) ){ goto $label$278 }
	$30 = $10
	
.LOOP $label$279:
	*(($30 = ($30 + [-1]))) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$36 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $36 ){ goto $label$279 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$277 }
	
.LABEL $label$278
	
.LOOP $label$280:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$280 }
	
.LABEL $label$277
	if ( (*($0) & [32]) ){ goto $label$281 }
	CALL __fwritex($30, ( $28 ? [9] : ((int_32)$28 < (int_32)[9]) ), $0)
	
.LABEL $label$281
	$30 = ($28 + [-9])
	if ( ((int_32)$28 < (int_32)[10]) ){ goto $label$263 }
	$28 = $30
	$37 = ($37 + [4])
	if ( ($37 <= $14) ){ goto $label$276 }
	goto $label$263 
	
.LABEL $label$266
	if ( ((int_32)$28 <= (int_32)[-1]) ){ goto $label$259 }
	$31 = ( $14 ? ($17 + [4]) : $27 )
	if ( ($16 == 0) ){ goto $label$261 }
	$37 = $17
	
.LOOP $label$282:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$284 }
	$36 = [0]
	
.LOOP $label$285:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$285 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$283 }
	
.LABEL $label$284
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$283
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$287 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$286 }
	
.LOOP $label$288:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$288 }
	goto $label$286 
	
.LABEL $label$287
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$289 }
	CALL __fwritex($14, [1], $0)
	$30 = *($0)
	
.LABEL $label$289
	$14 = ($14 + [1])
	if ( ($30 & [32]) ){ goto $label$286 }
	CALL __fwritex([12416], [1], $0)
	
.LABEL $label$286
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$290 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$290
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$282 }
	goto $label$260 
	
.LABEL $label$265
	$30 = $28
	if ( ((int_32)$30 >= (int_32)[1]) ){ goto $label$262 }
	goto $label$258 
	
.LABEL $label$264
	$30 = $28
	
.LABEL $label$263
	if ( ((int_32)$30 < (int_32)[1]) ){ goto $label$258 }
	
.LABEL $label$262
	$17 = ($30 <= [256])
	CALL memset(($39 + [432]), [48], ( $30 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$292 }
	$17 = ($36 == 0)
	$36 = $30
	
.LOOP $label$293:
	if ( (($17 & [1]) == 0) ){ goto $label$294 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$294
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$293 }
	if ( $37 ){ goto $label$258 }
	$30 = ($30 & [255])
	goto $label$291 
	
.LABEL $label$292
	if ( $36 ){ goto $label$258 }
	
.LABEL $label$291
	CALL __fwritex(($39 + [432]), $30, $0)
	if ( ((int_32)$18 == (int_32)[8192]) ){ goto $label$257 }
	goto $label$256 
	
.LABEL $label$261
	$37 = $17
	
.LOOP $label$295:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$297 }
	$36 = [0]
	
.LOOP $label$298:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$298 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$296 }
	
.LABEL $label$297
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$296
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$300 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$299 }
	
.LOOP $label$301:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$301 }
	goto $label$299 
	
.LABEL $label$300
	if ( (*($0) & [32]) ){ goto $label$302 }
	CALL __fwritex($14, [1], $0)
	
.LABEL $label$302
	$14 = ($14 + [1])
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$299 }
	if ( (*($0) & [32]) ){ goto $label$299 }
	CALL __fwritex([12416], [1], $0)
	
.LABEL $label$299
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$303 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$303
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$295 }
	
.LABEL $label$260
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$259 }
	$30 = ($28 <= [256])
	CALL memset(($39 + [432]), [48], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$305 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$306:
	if ( (($30 & [1]) == 0) ){ goto $label$307 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$307
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$306 }
	if ( $14 ){ goto $label$259 }
	$28 = ($28 & [255])
	goto $label$304 
	
.LABEL $label$305
	if ( $17 ){ goto $label$259 }
	
.LABEL $label$304
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$259
	if ( (*($0) & [32]) ){ goto $label$258 }
	CALL __fwritex($25, ($7 - $25), $0)
	
.LABEL $label$258
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$256 }
	
.LABEL $label$257
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$256 }
	$30 = ($37 <= [256])
	$37 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$309 }
	$30 = ($17 == 0)
	$17 = $37
	
.LOOP $label$310:
	if ( (($30 & [1]) == 0) ){ goto $label$311 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$311
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$310 }
	if ( $14 ){ goto $label$256 }
	$37 = ($37 & [255])
	goto $label$308 
	
.LABEL $label$309
	if ( $17 ){ goto $label$256 }
	
.LABEL $label$308
	CALL __fwritex(($39 + [432]), $37, $0)
	
.LABEL $label$256
	$30 = ( $15 ? $26 : ((int_32)$15 > (int_32)$26) )
	
.LABEL $label$50
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$24
	if ( ((int_32)$30 <= (int_32)$13) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( $0 ){ goto $label$1 }
	if ( ($32 == 0) ){ goto $label$14 }
	$30 = [1]
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $159(($3 + [16]), $1, $2)
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $159(($3 + [32]), $1, $2)
	$1 = *($4 + [12])
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $159(($3 + [48]), $1, $2)
	$1 = *($4 + [16])
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $159(($3 + [64]), $1, $2)
	$1 = *($4 + [20])
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $159(($3 + [80]), $1, $2)
	$1 = *($4 + [24])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL $159(($3 + [96]), $1, $2)
	$1 = *($4 + [28])
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $159(($3 + [112]), $1, $2)
	$1 = *($4 + [32])
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $159(($3 + [128]), $1, $2)
	$1 = *($4 + [36])
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $159(($3 + [144]), $1, $2)
	$38 = [1]
	goto $label$1 
	
.LABEL $label$15
	*(CALL __errno_location()) = [75]
	goto $label$2 
	
.LABEL $label$14
	$38 = [0]
	goto $label$1 
	
.LABEL $label$13
	$30 = [2]
	goto $label$4 
	
.LABEL $label$12
	$30 = [3]
	goto $label$4 
	
.LABEL $label$11
	$38 = [0]
	goto $label$1 
	
.LABEL $label$10
	$30 = [4]
	goto $label$4 
	
.LABEL $label$9
	$30 = [5]
	goto $label$4 
	
.LABEL $label$8
	$30 = [6]
	goto $label$4 
	
.LABEL $label$7
	$30 = [7]
	goto $label$4 
	
.LABEL $label$6
	$30 = [8]
	goto $label$4 
	
.LABEL $label$5
	$30 = [9]
	
.LABEL $label$4
	$1 = ($4 + ($30 << [2]))
	
.LOOP $label$312:
	if ( *($1) ){ goto $label$3 }
	$1 = ($1 + [4])
	$38 = [1]
	$30 = ($30 + [1])
	if ( ((uint_32)$30 <= (uint_32)[9]) ){ goto $label$312 }
	goto $label$1 
	
.LABEL $label$3
	*(CALL __errno_location()) = [22]
	
.LABEL $label$2
	$38 = [-1]
	
.LABEL $label$1
	*([0] + [4]) = ($39 + [8128])
	$30
	$30
	return $38
}

int_32 .FUNC __fwritex (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($2 + [16])
	if ( $6 ){ goto $label$2 }
	$6 = [0]
	if ( CALL __towrite($2) ){ goto $label$1 }
	$6 = *(($2 + [16]))
	
.LABEL $label$2
	$7 = *($2 + [20])
	if ( ((uint_32)($6 - $7) >= (uint_32)$1) ){ goto $label$3 }
	return CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	
.LABEL $label$3
	$8 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$4 }
	$3 = ($0 + $1)
	$8 = [0]
	$6 = [0]
	
.LOOP $label$5:
	if ( (($1 + $6) == 0) ){ goto $label$4 }
	$5 = ($3 + $6)
	$4 = ($6 + [-1])
	$6 = $4
	if ( ((int_32)*(($5 + [-1])) != (int_32)[10]) ){ goto $label$5 }
	$8 = (($1 + $4) + [1])
	$6 = CALL int_32 $2((int_32 $0), (int_32 $8), (int_32 *($2 + [36])))
	if ( ($6 <= $8) ){ goto $label$1 }
	$1 = ((int_32)$4 ^ (int_32)[-1])
	$0 = (($3 + $4) + [1])
	$7 = *(($2 + [20]))
	
.LABEL $label$4
	CALL memcpy($7, $0, $1)
	*(($6 = ($2 + [20]))) = (*($6) + $1)
	return ($8 + $1)
	
.LABEL $label$1
	return $6
}

void .FUNC $159 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$1 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$18
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$16
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$15
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$9
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$8
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$7
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$5
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$3
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($4, *($1))
	*(($0 + [8])) = *(($4 + [8]))
	*($0) = *($4)
	goto $label$1 
	
.LABEL $label$2
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$3 = *($1)
	*(($0 + [8])) = *($1 + [8])
	*($0) = $3
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	$1
}

int_32 .FUNC strspn (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*((($4 = (*([0] + [4]) - [32])) + [24])) = (int_64)0
	*(($4 + [16])) = (int_64)0
	*($4 + [8]) = (int_64)0
	*($4) = (int_64)0
	$3 = *($1)
	if ( ($3 == 0) ){ goto $label$2 }
	if ( (*($1 + [1]) == 0) ){ goto $label$1 }
	$1 = ($1 + [1])
	
.LOOP $label$3:
	*(($2 = ($4 + uint_32(($3 & [224]) >> [3])))) = (*($2) | ([1] << ($3 & [31])))
	$3 = *($1)
	$1 = ($1 + [1])
	if ( $3 ){ goto $label$3 }
	$1 = $0
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = $0
	
.LOOP $label$5:
	if ( ((*(($4 + uint_32(($3 & [224]) >> [3]))) & ([1] << ($3 & [31]))) == 0) ){ goto $label$4 }
	$1 = ($1 + [1])
	$3 = *($1)
	if ( $3 ){ goto $label$5 }
	
.LABEL $label$4
	return ($1 - $0)
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	$1 = ($0 + [-1])
	
.LOOP $label$6:
	$1 = ($1 + [1])
	if ( ((int_32)*($1) == (int_32)$3) ){ goto $label$6 }
	return ($1 - $0)
}

void .FUNC _ZN5eosio8exchange12settpcreatorEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	*([0] + [4]) = $7
	*($7 + [56]) = $3
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$40($1), [1056])
	CALL eosio_assert(CALL $fimport$40($3), [1584])
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$3 = *($0)
	*($7 + [8]) = $3
	*($7 + [16]) = $3
	*($7 + [44 align=4]) = (int_64)0
	$6 = [0]
	$4 = CALL db_find_i64($3, $3, (int_64)-3665743365212864512, $2)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $33(($7 + [8]), $4)
	CALL eosio_assert(((int_32)*($6 + [104]) == (int_32)($7 + [8])), [224])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [1088])
	$4 = [1]
	if ( ((int_64)*($6 + [16]) == (int_64)$1) ){ goto $label$2 }
	if ( ((int_64)*(($6 + [48])) == (int_64)$1) ){ goto $label$2 }
	$4 = ((int_64)*($0) == (int_64)$1)
	
.LABEL $label$2
	CALL eosio_assert($4, [1120])
	$1 = *($7 + [56])
	CALL eosio_assert(((int_64)$1 != (int_64)*($0)), [1632])
	CALL eosio_assert(((int_64)$1 != (int_64)*(($6 + [48]))), [1680])
	*($7) = ($7 + [56])
	CALL $70(($7 + [8]), $6, $7)
	$4 = *($7 + [32])
	if ( ($4 == 0) ){ goto $label$3 }
	$5 = ($7 + [36])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$5 }
	
.LOOP $label$6:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	if ( ((*($0 + [32]) & [1]) == 0) ){ goto $label$8 }
	CALL $130(*(($0 + [40])))
	
.LABEL $label$8
	CALL $130($0)
	
.LABEL $label$7
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$6 }
	$6 = *(($7 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$6 = $4
	
.LABEL $label$4
	*($5) = $4
	CALL $130($6)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [64])
}

int_32 .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $20($0, ($1 + [32]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[0]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [44]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [96]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $22($0, ($1 + [32]))
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [320])
	CALL memcpy(($1 + [44]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [88]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [96]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $64 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $128(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $146($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $130(*(($1 + [40])))
	
.LABEL $label$11
	CALL $130($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $130($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $67 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$15 = (*([0] + [4]) - [96])
	*([0] + [4]) = $15
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [1408])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1456])
	$14 = *(($1 + [96]))
	$7 = *(($1 + [88]))
	$8 = *(($1 + [80]))
	$9 = *(($1 + [56]))
	$10 = *(($1 + [48]))
	$11 = *(($1 + [24]))
	$12 = *(($1 + [16]))
	*(($16 = $15) + [16]) = *(($1 + [8]))
	*($16 + [24]) = $12
	*($16 + [32]) = $11
	*($16 + [40]) = $10
	*($16 + [48]) = $9
	*($16 + [56]) = $8
	*($16 + [64]) = $7
	*($16 + [72]) = $14
	$7 = *($1)
	$2 = *($2)
	*($1 + [64]) = *($2)
	*(($1 + [72])) = *(($2 + [8]))
	CALL eosio_assert([1], [1520])
	$2 = *($1 + [32])
	$13 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($13 + [89])
	$14 = (CASTING uint_64)(uint_32 $13)
	$13 = (($16 + [16]) + [56])
	$6 = ($16 + [48])
	$5 = (($16 + [16]) + [24])
	$4 = (($16 + [16]) + [16])
	$3 = (($16 + [16]) + [8])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$15 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$15 = ($15 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $15
	
.LABEL $label$2
	*($16 + [4]) = $15
	*($16) = $15
	*($16 + [8]) = ($15 + $2)
	CALL $68($16, $1)
	CALL db_update_i64(*($1 + [108]), (int_64)0, $15, $2)
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL free($15)
	
.LABEL $label$4
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($16 + [88]) = *(($1 + [8]))
	if ( (CALL memcmp(($16 + [16]), ($16 + [88]), [8]) == 0) ){ goto $label$6 }
	$15 = ($1 + [112])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$7 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864512, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$7
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$6
	*($16 + [88]) = *(($1 + [16]))
	if ( (CALL memcmp($3, ($16 + [88]), [8]) == 0) ){ goto $label$8 }
	$15 = ($1 + [116])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864511, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$8
	*($16 + [88]) = *(($1 + [24]))
	if ( (CALL memcmp($4, ($16 + [88]), [8]) == 0) ){ goto $label$10 }
	$15 = ($1 + [120])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864510, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$10
	*($16 + [88]) = *(($1 + [48]))
	if ( (CALL memcmp($5, ($16 + [88]), [8]) == 0) ){ goto $label$12 }
	$15 = ($1 + [124])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864509, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$12
	*($16 + [88]) = *(($1 + [56]))
	if ( (CALL memcmp($6, ($16 + [88]), [8]) == 0) ){ goto $label$14 }
	$15 = ($1 + [128])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$15 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864508, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$15
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$14
	*($16 + [88]) = *(($1 + [80]))
	if ( (CALL memcmp(($16 + [56]), ($16 + [88]), [8]) == 0) ){ goto $label$16 }
	$15 = ($1 + [132])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$17 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864507, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$17
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$16
	*($16 + [88]) = *(($1 + [88]))
	if ( (CALL memcmp(($16 + [64]), ($16 + [88]), [8]) == 0) ){ goto $label$18 }
	$15 = ($1 + [136])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$19 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864506, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$19
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$18
	*($16 + [88]) = *(($1 + [96]))
	if ( (CALL memcmp($13, ($16 + [88]), [8]) == 0) ){ goto $label$20 }
	$1 = ($1 + [140])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$21 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864505, ($16 + [80]), $7)
	*($1) = $2
	
.LABEL $label$21
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$20
	*([0] + [4]) = ($16 + [96])
}

void .FUNC _ZN5eosio8exchange11settppledgeEyyNS_5assetE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [64])
	*([0] + [4]) = $6
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$40($1), [16])
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [48])
	CALL eosio_assert((uint_64)(((int_64)*($3 + [8]) ^ (int_64)5521920) <= (int_64)256), [1328])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($3) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [1360])
	*(($6 + [48])) = [0]
	*($6 + [32]) = (int_64)-1
	*($6 + [40]) = (int_64)0
	$1 = *($0)
	*($6 + [16]) = $1
	*($6 + [24]) = $1
	*($6 + [52 align=4]) = (int_64)0
	$0 = [0]
	$4 = CALL db_find_i64($1, $1, (int_64)-3665743365212864512, $2)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $33(($6 + [16]), $4)
	CALL eosio_assert(((int_32)*($0 + [104]) == (int_32)($6 + [16])), [224])
	
.LABEL $label$1
	$4 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($4, [1088])
	*($6 + [8]) = $3
	CALL eosio_assert($4, [1280])
	CALL $67(($6 + [16]), $0, ($6 + [8]))
	$4 = *($6 + [40])
	if ( ($4 == 0) ){ goto $label$2 }
	$5 = ($6 + [44])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	if ( ((*($0 + [32]) & [1]) == 0) ){ goto $label$7 }
	CALL $130(*(($0 + [40])))
	
.LABEL $label$7
	CALL $130($0)
	
.LABEL $label$6
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$5 }
	$3 = *(($6 + [40]))
	goto $label$3 
	
.LABEL $label$4
	$3 = $4
	
.LABEL $label$3
	*($5) = $4
	CALL $130($3)
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [64])
}

int_32 .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $60 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [32]) = (int_64)0
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	CALL eosio_assert([1], [960])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [672])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [960])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [672])
	return $0
}

int_32 .FUNC $63 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [32 align=4]) = (int_64)0
	*($0 + [64]) = (int_64)0
	$4 = [0]
	*(($0 + [40])) = [0]
	*(($5 = ($0 + [72]))) = (int_64)1398362884
	CALL eosio_assert([1], [960])
	$3 = (uint_64)*($5) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [672])
	*($0 + [88]) = (int_64)0
	*($0 + [80]) = (int_64)0
	*($0 + [96]) = (int_64)0
	*($0 + [104]) = $1
	CALL $65(*($2 + [4]), $0)
	$4 = *(*($2 + [8]))
	*($0 + [112]) = [-1]
	*($0 + [108]) = $4
	*(($0 + [116])) = [-1]
	*(($0 + [120])) = [-1]
	*(($0 + [124])) = [-1]
	*(($0 + [128])) = [-1]
	*(($0 + [132])) = [-1]
	*(($0 + [136])) = [-1]
	*(($0 + [140])) = [-1]
	return $0
}

void .FUNC $62 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $128(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $146($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $130($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $130($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC $89 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [432])
	$6 = *($0 + [4])
	$7 = *(($6 + [88]))
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx_double_find_primary(*($7), *($7 + [8]), (int_64)-4421661421696319486, ($9 + [8]), *($6))
	*((*(($0 + [4])) + [88])) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx_double_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)$2), [224])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $40($2, CALL $fimport$16(*($2), *($2 + [8]), (int_64)-4421661421696319488, $3))
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)$2), [224])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [88])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC _ZN5eosio8exchange19deal_fee_processingENS_5assetEyyyyyyby (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6, int_64 $7, int_32 $8, int_64 $9)
{
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [208])
	*([0] + [4]) = $17
	$16 = *($1)
	if ( ((int_64)$16 < (int_64)1) ){ goto $label$6 }
	if ( ($8 == 0) ){ goto $label$23 }
	$13 = (int_64)0
	$12 = (int_64)59
	$8 = [2032]
	$15 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$13 > (uint_64)(int_64)10) ){ goto $label$29 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$10 = ($10 + [165])
	goto $label$27 
	
.LABEL $label$29
	$14 = (int_64)0
	if ( ((int_64)$13 == (int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$25
	$8 = ($8 + [1])
	$12 = ((int_64)$12 + (int_64)-5)
	$15 = ((int_64)$14 | (int_64)$15)
	$13 = ((int_64)$13 + (int_64)1)
	if ( ((int_64)$13 != (int_64)13) ){ goto $label$24 }
	if ( ((int_64)(uint_64)(int_64)1397703936 >> (uint_64)(int_64)8) != (int_64)$4) ){ goto $label$22 }
	if ( ((int_64)$15 != (int_64)$2) ){ goto $label$22 }
	$16 = *($0)
	$13 = (int_64)0
	$12 = (int_64)59
	$8 = [1152]
	$15 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$13 > (uint_64)(int_64)5) ){ goto $label$35 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$10 = ($10 + [165])
	goto $label$33 
	
.LABEL $label$35
	$14 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$31
	$8 = ($8 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$30 }
	*($17 + [144]) = $15
	*($17 + [136]) = $16
	$13 = (int_64)0
	$12 = (int_64)59
	$8 = [1168]
	$15 = (int_64)0
	
.LOOP $label$36:
	if ( ((uint_64)$13 > (uint_64)(int_64)7) ){ goto $label$41 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$10 = ($10 + [165])
	goto $label$39 
	
.LABEL $label$41
	$14 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$38
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$37
	$8 = ($8 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$36 }
	$13 = (int_64)0
	$14 = (int_64)59
	$8 = [2656]
	$16 = (int_64)0
	
.LOOP $label$42:
	$12 = (int_64)0
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$43 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$10 = ($10 + [165])
	goto $label$44 
	
.LABEL $label$45
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$43
	$8 = ($8 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$16 = ((int_64)$12 | (int_64)$16)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$42 }
	*(($17 + [80])) = [0]
	*($17 + [72]) = (int_64)0
	$8 = CALL strlen([2672])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$17 }
	*($17 + [72]) = ($8 << [1])
	$10 = (($17 + [72]) | [1])
	if ( $8 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$23
	$16 = *($0)
	$13 = (int_64)0
	$12 = (int_64)59
	$8 = [1152]
	$15 = (int_64)0
	
.LOOP $label$46:
	if ( ((uint_64)$13 > (uint_64)(int_64)5) ){ goto $label$51 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$50 }
	$10 = ($10 + [165])
	goto $label$49 
	
.LABEL $label$51
	$14 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$50
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$49
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$48
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$47
	$8 = ($8 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$46 }
	*($17 + [144]) = $15
	*($17 + [136]) = $16
	$13 = (int_64)0
	$12 = (int_64)59
	$8 = [1168]
	$15 = (int_64)0
	
.LOOP $label$52:
	if ( ((uint_64)$13 > (uint_64)(int_64)7) ){ goto $label$57 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$56 }
	$10 = ($10 + [165])
	goto $label$55 
	
.LABEL $label$57
	$14 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$56
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$55
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$54
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$53
	$8 = ($8 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$52 }
	$13 = (int_64)0
	$14 = (int_64)59
	$8 = [2656]
	$16 = (int_64)0
	
.LOOP $label$58:
	$12 = (int_64)0
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$59 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$61 }
	$10 = ($10 + [165])
	goto $label$60 
	
.LABEL $label$61
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$60
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$59
	$8 = ($8 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$16 = ((int_64)$12 | (int_64)$16)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$58 }
	*(($17 + [80])) = [0]
	*($17 + [72]) = (int_64)0
	$8 = CALL strlen([2672])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$21 }
	*($17 + [72]) = ($8 << [1])
	$10 = (($17 + [72]) | [1])
	if ( $8 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$13 = (int_64)0
	$14 = (int_64)59
	$8 = [1248]
	$15 = (int_64)0
	
.LOOP $label$62:
	$12 = (int_64)0
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$63 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$65 }
	$10 = ($10 + [165])
	goto $label$64 
	
.LABEL $label$65
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$64
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$63
	$8 = ($8 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$15 = ((int_64)$12 | (int_64)$15)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$62 }
	if ( ((int_64)(uint_64)(int_64)361923564800 >> (uint_64)(int_64)8) != (int_64)$4) ){ goto $label$18 }
	if ( ((int_64)$15 != (int_64)$2) ){ goto $label$18 }
	$4 = *($1 + [8])
	CALL eosio_assert([1], [960])
	$13 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$66:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$67 }
	
.LOOP $label$68:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$68 }
	
.LABEL $label$67
	$10 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$66 }
	goto $label$13 
	
.LABEL $label$21
	$11 = (($8 + [16]) & [-16])
	$10 = CALL $128($11)
	*($17 + [72]) = ($11 | [1])
	*($17 + [80]) = $10
	*($17 + [76]) = $8
	
.LABEL $label$20
	CALL memcpy($10, [2672], $8)
	
.LABEL $label$19
	*(($10 + $8)) = [0]
	*(($17 + [116])) = *(($1 + [12]))
	*(($17 + [112])) = *(($1 + [8]))
	*(($17 + [108])) = *(($1 + [4]))
	*($17 + [96]) = $16
	*($17 + [88]) = *($0)
	*($17 + [104]) = *($1)
	$8 = (($17 + [72]) + [8])
	*(($17 + [128])) = *($8)
	*($17 + [120]) = *($17 + [72])
	*($17 + [72]) = [0]
	*($17 + [76]) = [0]
	*($8) = [0]
	$8 = CALL $35(($17 + [152]), ($17 + [136]), $2, $15, ($17 + [88]))
	CALL $36(($17 + [192]), $8)
	$10 = *($17 + [192])
	CALL send_inline($10, (*($17 + [196]) - $10))
	$10 = *($17 + [192])
	if ( ($10 == 0) ){ goto $label$69 }
	*($17 + [196]) = $10
	CALL $130($10)
	
.LABEL $label$69
	$10 = *($8 + [28])
	if ( ($10 == 0) ){ goto $label$70 }
	*(($8 + [32])) = $10
	CALL $130($10)
	
.LABEL $label$70
	$10 = *($8 + [16])
	if ( ($10 == 0) ){ goto $label$71 }
	*(($8 + [20])) = $10
	CALL $130($10)
	
.LABEL $label$71
	if ( ((*(($17 + [120])) & [1]) == 0) ){ goto $label$72 }
	CALL $130(*(($17 + [128])))
	
.LABEL $label$72
	if ( ((*($17 + [72]) & [1]) == 0) ){ goto $label$73 }
	CALL $130(*(($17 + [80])))
	
.LABEL $label$73
	$13 = (int_64)0
	$12 = (int_64)59
	$8 = [2032]
	$15 = (int_64)0
	
.LOOP $label$74:
	if ( ((uint_64)$13 > (uint_64)(int_64)10) ){ goto $label$79 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$78 }
	$10 = ($10 + [165])
	goto $label$77 
	
.LABEL $label$79
	$14 = (int_64)0
	if ( ((int_64)$13 == (int_64)11) ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$78
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$77
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$76
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$75
	$8 = ($8 + [1])
	$12 = ((int_64)$12 + (int_64)-5)
	$15 = ((int_64)$14 | (int_64)$15)
	$13 = ((int_64)$13 + (int_64)1)
	if ( ((int_64)$13 != (int_64)13) ){ goto $label$74 }
	if ( ((int_64)(uint_64)(int_64)1397703936 >> (uint_64)(int_64)8) != (int_64)$4) ){ goto $label$6 }
	if ( ((int_64)$15 != (int_64)$2) ){ goto $label$6 }
	$13 = *(($1 + [8]))
	*((($17 + [40]) + [8])) = $13
	$14 = *($1)
	*((($17 + [24]) + [8])) = $13
	*($17 + [40]) = $14
	*($17 + [28]) = *($17 + [44])
	*($17 + [24]) = *($17 + [40])
	CALL _ZN5eosio8exchange6miningEyNS_5assetEyyy($0, $3, ($17 + [24]), $5, $6, $7)
	goto $label$6 
	
.LABEL $label$18
	$16 = *($0)
	$13 = (int_64)0
	$12 = (int_64)59
	$8 = [1152]
	$15 = (int_64)0
	
.LOOP $label$80:
	if ( ((uint_64)$13 > (uint_64)(int_64)5) ){ goto $label$85 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$84 }
	$10 = ($10 + [165])
	goto $label$83 
	
.LABEL $label$85
	$14 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$84
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$83
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$82
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$81
	$8 = ($8 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$80 }
	*($17 + [144]) = $15
	*($17 + [136]) = $16
	$13 = (int_64)0
	$12 = (int_64)59
	$8 = [1168]
	$15 = (int_64)0
	
.LOOP $label$86:
	if ( ((uint_64)$13 > (uint_64)(int_64)7) ){ goto $label$91 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$90 }
	$10 = ($10 + [165])
	goto $label$89 
	
.LABEL $label$91
	$14 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$88 }
	goto $label$87 
	
.LABEL $label$90
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$89
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$88
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$87
	$8 = ($8 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$86 }
	$13 = (int_64)0
	$14 = (int_64)59
	$8 = [2656]
	$16 = (int_64)0
	
.LOOP $label$92:
	$12 = (int_64)0
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$93 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$95 }
	$10 = ($10 + [165])
	goto $label$94 
	
.LABEL $label$95
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$94
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$93
	$8 = ($8 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$16 = ((int_64)$12 | (int_64)$16)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$92 }
	*(($17 + [80])) = [0]
	*($17 + [72]) = (int_64)0
	$8 = CALL strlen([2672])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$12 }
	*($17 + [72]) = ($8 << [1])
	$10 = (($17 + [72]) | [1])
	if ( $8 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$17
	$11 = (($8 + [16]) & [-16])
	$10 = CALL $128($11)
	*($17 + [72]) = ($11 | [1])
	*($17 + [80]) = $10
	*($17 + [76]) = $8
	
.LABEL $label$16
	CALL memcpy($10, [2672], $8)
	
.LABEL $label$15
	*(($10 + $8)) = [0]
	*(($17 + [116])) = *(($1 + [12]))
	*(($17 + [112])) = *(($1 + [8]))
	*(($17 + [108])) = *(($1 + [4]))
	*($17 + [96]) = $16
	*($17 + [88]) = *($0)
	*($17 + [104]) = *($1)
	$8 = (($17 + [72]) + [8])
	*(($17 + [128])) = *($8)
	*($17 + [120]) = *($17 + [72])
	*($17 + [72]) = [0]
	*($17 + [76]) = [0]
	*($8) = [0]
	$8 = CALL $35(($17 + [152]), ($17 + [136]), $2, $15, ($17 + [88]))
	CALL $36(($17 + [192]), $8)
	$10 = *($17 + [192])
	CALL send_inline($10, (*($17 + [196]) - $10))
	$10 = *($17 + [192])
	if ( ($10 == 0) ){ goto $label$96 }
	*($17 + [196]) = $10
	CALL $130($10)
	
.LABEL $label$96
	$10 = *($8 + [28])
	if ( ($10 == 0) ){ goto $label$97 }
	*(($8 + [32])) = $10
	CALL $130($10)
	
.LABEL $label$97
	$10 = *($8 + [16])
	if ( ($10 == 0) ){ goto $label$98 }
	*(($8 + [20])) = $10
	CALL $130($10)
	
.LABEL $label$98
	if ( ((*(($17 + [120])) & [1]) == 0) ){ goto $label$99 }
	CALL $130(*(($17 + [128])))
	
.LABEL $label$99
	if ( ((*($17 + [72]) & [1]) == 0) ){ goto $label$100 }
	CALL $130(*(($17 + [80])))
	
.LABEL $label$100
	*(($8 = (($17 + [56]) + [8]))) = *(($1 + [8]))
	$13 = *($1)
	*((($17 + [8]) + [12])) = *((($17 + [56]) + [12]))
	*((($17 + [8]) + [8])) = *($8)
	*($17 + [56]) = $13
	*($17 + [12]) = *($17 + [60])
	*($17 + [8]) = *($17 + [56])
	CALL _ZN5eosio8exchange6miningEyNS_5assetEyyy($0, $3, ($17 + [8]), $5, $9, $7)
	goto $label$6 
	
.LABEL $label$14
	$10 = [0]
	
.LABEL $label$13
	CALL eosio_assert($10, [672])
	$3 = ((int_64)$16 / (int_64)2)
	$16 = *($0)
	$13 = (int_64)0
	$12 = (int_64)59
	$8 = [1152]
	$15 = (int_64)0
	
.LOOP $label$101:
	if ( ((uint_64)$13 > (uint_64)(int_64)5) ){ goto $label$106 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$105 }
	$10 = ($10 + [165])
	goto $label$104 
	
.LABEL $label$106
	$14 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$103 }
	goto $label$102 
	
.LABEL $label$105
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$104
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$103
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$102
	$8 = ($8 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$101 }
	*($17 + [144]) = $15
	*($17 + [136]) = $16
	$13 = (int_64)0
	$12 = (int_64)59
	$8 = [1168]
	$15 = (int_64)0
	
.LOOP $label$107:
	if ( ((uint_64)$13 > (uint_64)(int_64)7) ){ goto $label$112 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$111 }
	$10 = ($10 + [165])
	goto $label$110 
	
.LABEL $label$112
	$14 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$109 }
	goto $label$108 
	
.LABEL $label$111
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$110
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$109
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$108
	$8 = ($8 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$107 }
	*(($17 + [80])) = [0]
	*($17 + [72]) = (int_64)0
	$8 = CALL strlen([2688])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$9 }
	*($17 + [72]) = ($8 << [1])
	$10 = (($17 + [72]) | [1])
	if ( $8 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$12
	$11 = (($8 + [16]) & [-16])
	$10 = CALL $128($11)
	*($17 + [72]) = ($11 | [1])
	*($17 + [80]) = $10
	*($17 + [76]) = $8
	
.LABEL $label$11
	CALL memcpy($10, [2672], $8)
	
.LABEL $label$10
	*(($10 + $8)) = [0]
	*(($17 + [116])) = *(($1 + [12]))
	*(($17 + [112])) = *(($1 + [8]))
	*(($17 + [108])) = *(($1 + [4]))
	*($17 + [96]) = $16
	*($17 + [88]) = *($0)
	*($17 + [104]) = *($1)
	$8 = (($17 + [72]) + [8])
	*(($17 + [128])) = *($8)
	*($17 + [120]) = *($17 + [72])
	*($17 + [72]) = [0]
	*($17 + [76]) = [0]
	*($8) = [0]
	$8 = CALL $35(($17 + [152]), ($17 + [136]), $2, $15, ($17 + [88]))
	CALL $36(($17 + [192]), $8)
	$10 = *($17 + [192])
	CALL send_inline($10, (*($17 + [196]) - $10))
	$10 = *($17 + [192])
	if ( ($10 == 0) ){ goto $label$113 }
	*($17 + [196]) = $10
	CALL $130($10)
	
.LABEL $label$113
	$10 = *($8 + [28])
	if ( ($10 == 0) ){ goto $label$114 }
	*(($8 + [32])) = $10
	CALL $130($10)
	
.LABEL $label$114
	$10 = *($8 + [16])
	if ( ($10 == 0) ){ goto $label$115 }
	*(($8 + [20])) = $10
	CALL $130($10)
	
.LABEL $label$115
	if ( ((*(($17 + [120])) & [1]) == 0) ){ goto $label$116 }
	CALL $130(*(($17 + [128])))
	
.LABEL $label$116
	if ( ((*($17 + [72]) & [1]) == 0) ){ goto $label$6 }
	CALL $130(*(($17 + [80])))
	goto $label$6 
	
.LABEL $label$9
	$11 = (($8 + [16]) & [-16])
	$10 = CALL $128($11)
	*($17 + [72]) = ($11 | [1])
	*($17 + [80]) = $10
	*($17 + [76]) = $8
	
.LABEL $label$8
	CALL memcpy($10, [2688], $8)
	
.LABEL $label$7
	*(($10 + $8)) = [0]
	*(($17 + [112])) = $4
	*(($17 + [124])) = *($17 + [76])
	*($17 + [96]) = $9
	$8 = ($17 + [80])
	*(($17 + [128])) = *($8)
	*($17 + [88]) = *($0)
	*($17 + [104]) = $3
	*($17 + [120]) = *($17 + [72])
	*($17 + [72]) = [0]
	*($17 + [76]) = [0]
	*($8) = [0]
	$8 = CALL $35(($17 + [152]), ($17 + [136]), $2, $15, ($17 + [88]))
	CALL $36(($17 + [192]), $8)
	$10 = *($17 + [192])
	CALL send_inline($10, (*($17 + [196]) - $10))
	$10 = *($17 + [192])
	if ( ($10 == 0) ){ goto $label$117 }
	*($17 + [196]) = $10
	CALL $130($10)
	
.LABEL $label$117
	$10 = *($8 + [28])
	if ( ($10 == 0) ){ goto $label$118 }
	*(($8 + [32])) = $10
	CALL $130($10)
	
.LABEL $label$118
	$10 = *($8 + [16])
	if ( ($10 == 0) ){ goto $label$119 }
	*(($8 + [20])) = $10
	CALL $130($10)
	
.LABEL $label$119
	if ( ((*(($17 + [120])) & [1]) == 0) ){ goto $label$120 }
	CALL $130(*(($17 + [128])))
	
.LABEL $label$120
	if ( ((*($17 + [72]) & [1]) == 0) ){ goto $label$121 }
	CALL $130(*(($17 + [80])))
	
.LABEL $label$121
	$16 = *($0)
	$13 = (int_64)0
	$12 = (int_64)59
	$8 = [1152]
	$15 = (int_64)0
	
.LOOP $label$122:
	if ( ((uint_64)$13 > (uint_64)(int_64)5) ){ goto $label$127 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$126 }
	$10 = ($10 + [165])
	goto $label$125 
	
.LABEL $label$127
	$14 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$124 }
	goto $label$123 
	
.LABEL $label$126
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$125
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$124
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$123
	$8 = ($8 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$122 }
	*($17 + [144]) = $15
	*($17 + [136]) = $16
	$13 = (int_64)0
	$12 = (int_64)59
	$8 = [1168]
	$15 = (int_64)0
	
.LOOP $label$128:
	if ( ((uint_64)$13 > (uint_64)(int_64)7) ){ goto $label$133 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$132 }
	$10 = ($10 + [165])
	goto $label$131 
	
.LABEL $label$133
	$14 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$130 }
	goto $label$129 
	
.LABEL $label$132
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$131
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$130
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$129
	$8 = ($8 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$128 }
	$13 = (int_64)0
	$14 = (int_64)59
	$8 = [2656]
	$16 = (int_64)0
	
.LOOP $label$134:
	$12 = (int_64)0
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$135 }
	$10 = *($8)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$137 }
	$10 = ($10 + [165])
	goto $label$136 
	
.LABEL $label$137
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$136
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$135
	$8 = ($8 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$16 = ((int_64)$12 | (int_64)$16)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$134 }
	$13 = *($1)
	$14 = *(($1 + [8]))
	CALL eosio_assert(((int_64)$4 == (int_64)$14), [2336])
	$13 = (int_64)
	CALL eosio_assert(((int_64)$13($13 - $3)) > (int_64)-4611686018427387904), [2384])
	CALL eosio_assert(((int_64)$13 < (int_64)4611686018427387904), [2416])
	*((($17 + [72]) + [8])) = [0]
	*($17 + [72]) = (int_64)0
	$8 = CALL strlen([2672])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$140 }
	*($17 + [72]) = ($8 << [1])
	$10 = (($17 + [72]) | [1])
	if ( $8 ){ goto $label$139 }
	goto $label$138 
	
.LABEL $label$140
	$1 = (($8 + [16]) & [-16])
	$10 = CALL $128($1)
	*($17 + [72]) = ($1 | [1])
	*($17 + [80]) = $10
	*($17 + [76]) = $8
	
.LABEL $label$139
	CALL memcpy($10, [2672], $8)
	
.LABEL $label$138
	*(($10 + $8)) = [0]
	*(($17 + [112])) = $14
	*(($17 + [124])) = *($17 + [76])
	*($17 + [96]) = $16
	$8 = ($17 + [80])
	*(($17 + [128])) = *($8)
	*($17 + [88]) = *($0)
	*($17 + [104]) = $13
	*($17 + [120]) = *($17 + [72])
	*($17 + [72]) = [0]
	*($17 + [76]) = [0]
	*($8) = [0]
	$8 = CALL $35(($17 + [152]), ($17 + [136]), $2, $15, ($17 + [88]))
	CALL $36(($17 + [192]), $8)
	$10 = *($17 + [192])
	CALL send_inline($10, (*($17 + [196]) - $10))
	$10 = *($17 + [192])
	if ( ($10 == 0) ){ goto $label$141 }
	*($17 + [196]) = $10
	CALL $130($10)
	
.LABEL $label$141
	$10 = *($8 + [28])
	if ( ($10 == 0) ){ goto $label$142 }
	*(($8 + [32])) = $10
	CALL $130($10)
	
.LABEL $label$142
	$10 = *($8 + [16])
	if ( ($10 == 0) ){ goto $label$143 }
	*(($8 + [20])) = $10
	CALL $130($10)
	
.LABEL $label$143
	if ( ((*(($17 + [120])) & [1]) == 0) ){ goto $label$144 }
	CALL $130(*(($17 + [128])))
	
.LABEL $label$144
	if ( ((*($17 + [72]) & [1]) == 0) ){ goto $label$6 }
	CALL $130(*(($17 + [80])))
	
.LABEL $label$6
	*([0] + [4]) = ($17 + [208])
	return (unreachable)
	
.LABEL $label$5
	CALL $132(($17 + [72]))
	
.LABEL $label$4
	CALL $132(($17 + [72]))
	
.LABEL $label$3
	CALL $132(($17 + [72]))
	
.LABEL $label$2
	CALL $132(($17 + [72]))
	
.LABEL $label$1
	CALL $132(($17 + [72]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $87 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$15 = (*([0] + [4]) - [96])
	*([0] + [4]) = $15
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [1408])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1456])
	$14 = *(($1 + [96]))
	$7 = *(($1 + [88]))
	$8 = ($1 + [80])
	$9 = *($8)
	$10 = *(($1 + [56]))
	$11 = *(($1 + [48]))
	$12 = *(($1 + [24]))
	$13 = *(($1 + [16]))
	*(($16 = $15) + [16]) = *(($1 + [8]))
	*($16 + [24]) = $13
	*($16 + [32]) = $12
	*($16 + [40]) = $11
	*($16 + [48]) = $10
	*($16 + [56]) = $9
	*($16 + [64]) = $7
	*($16 + [72]) = $14
	$7 = *($1)
	*($8) = *(*($2))
	CALL eosio_assert([1], [1520])
	$2 = *($1 + [32])
	$8 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($8 + [89])
	$14 = (CASTING uint_64)(uint_32 $8)
	$8 = (($16 + [16]) + [56])
	$6 = ($16 + [48])
	$5 = (($16 + [16]) + [24])
	$4 = (($16 + [16]) + [16])
	$3 = (($16 + [16]) + [8])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$15 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$15 = ($15 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $15
	
.LABEL $label$2
	*($16 + [4]) = $15
	*($16) = $15
	*($16 + [8]) = ($15 + $2)
	CALL $68($16, $1)
	CALL db_update_i64(*($1 + [108]), (int_64)0, $15, $2)
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL free($15)
	
.LABEL $label$4
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($16 + [88]) = *(($1 + [8]))
	if ( (CALL memcmp(($16 + [16]), ($16 + [88]), [8]) == 0) ){ goto $label$6 }
	$15 = ($1 + [112])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$7 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864512, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$7
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$6
	*($16 + [88]) = *(($1 + [16]))
	if ( (CALL memcmp($3, ($16 + [88]), [8]) == 0) ){ goto $label$8 }
	$15 = ($1 + [116])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864511, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$8
	*($16 + [88]) = *(($1 + [24]))
	if ( (CALL memcmp($4, ($16 + [88]), [8]) == 0) ){ goto $label$10 }
	$15 = ($1 + [120])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864510, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$10
	*($16 + [88]) = *(($1 + [48]))
	if ( (CALL memcmp($5, ($16 + [88]), [8]) == 0) ){ goto $label$12 }
	$15 = ($1 + [124])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864509, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$12
	*($16 + [88]) = *(($1 + [56]))
	if ( (CALL memcmp($6, ($16 + [88]), [8]) == 0) ){ goto $label$14 }
	$15 = ($1 + [128])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$15 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864508, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$15
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$14
	*($16 + [88]) = *(($1 + [80]))
	if ( (CALL memcmp(($16 + [56]), ($16 + [88]), [8]) == 0) ){ goto $label$16 }
	$15 = ($1 + [132])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$17 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864507, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$17
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$16
	*($16 + [88]) = *(($1 + [88]))
	if ( (CALL memcmp(($16 + [64]), ($16 + [88]), [8]) == 0) ){ goto $label$18 }
	$15 = ($1 + [136])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$19 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864506, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$19
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$18
	*($16 + [88]) = *(($1 + [96]))
	if ( (CALL memcmp($8, ($16 + [88]), [8]) == 0) ){ goto $label$20 }
	$1 = ($1 + [140])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$21 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864505, ($16 + [80]), $7)
	*($1) = $2
	
.LABEL $label$21
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$20
	*([0] + [4]) = ($16 + [96])
}

void .FUNC $86 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$15 = (*([0] + [4]) - [96])
	*([0] + [4]) = $15
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [1408])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1456])
	$6 = ($1 + [96])
	$14 = *($6)
	$7 = ($1 + [88])
	$5 = *($7)
	$8 = ($1 + [80])
	$9 = *($8)
	$10 = *(($1 + [56]))
	$11 = *(($1 + [48]))
	$12 = *(($1 + [24]))
	$13 = *(($1 + [16]))
	*(($16 = $15) + [16]) = *(($1 + [8]))
	*($16 + [24]) = $13
	*($16 + [32]) = $12
	*($16 + [40]) = $11
	*($16 + [48]) = $10
	*($16 + [56]) = $9
	*($16 + [64]) = $5
	*($16 + [72]) = $14
	$5 = *($1)
	*($8) = *(*($2))
	*($7) = *(*($2))
	*($6) = *(*($2 + [4]))
	CALL eosio_assert([1], [1520])
	$2 = *($1 + [32])
	$6 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($6 + [89])
	$14 = (CASTING uint_64)(uint_32 $6)
	$6 = (($16 + [16]) + [56])
	$7 = ($16 + [48])
	$8 = (($16 + [16]) + [24])
	$4 = (($16 + [16]) + [16])
	$3 = (($16 + [16]) + [8])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$15 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$15 = ($15 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $15
	
.LABEL $label$2
	*($16 + [4]) = $15
	*($16) = $15
	*($16 + [8]) = ($15 + $2)
	CALL $68($16, $1)
	CALL db_update_i64(*($1 + [108]), (int_64)0, $15, $2)
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL free($15)
	
.LABEL $label$4
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($16 + [88]) = *(($1 + [8]))
	if ( (CALL memcmp(($16 + [16]), ($16 + [88]), [8]) == 0) ){ goto $label$6 }
	$15 = ($1 + [112])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$7 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864512, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$7
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$6
	*($16 + [88]) = *(($1 + [16]))
	if ( (CALL memcmp($3, ($16 + [88]), [8]) == 0) ){ goto $label$8 }
	$15 = ($1 + [116])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864511, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$8
	*($16 + [88]) = *(($1 + [24]))
	if ( (CALL memcmp($4, ($16 + [88]), [8]) == 0) ){ goto $label$10 }
	$15 = ($1 + [120])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864510, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$10
	*($16 + [88]) = *(($1 + [48]))
	if ( (CALL memcmp($8, ($16 + [88]), [8]) == 0) ){ goto $label$12 }
	$15 = ($1 + [124])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864509, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$12
	*($16 + [88]) = *(($1 + [56]))
	if ( (CALL memcmp($7, ($16 + [88]), [8]) == 0) ){ goto $label$14 }
	$15 = ($1 + [128])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$15 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864508, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$15
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$14
	*($16 + [88]) = *(($1 + [80]))
	if ( (CALL memcmp(($16 + [56]), ($16 + [88]), [8]) == 0) ){ goto $label$16 }
	$15 = ($1 + [132])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$17 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864507, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$17
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$16
	*($16 + [88]) = *(($1 + [88]))
	if ( (CALL memcmp(($16 + [64]), ($16 + [88]), [8]) == 0) ){ goto $label$18 }
	$15 = ($1 + [136])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$19 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864506, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$19
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$18
	*($16 + [88]) = *(($1 + [96]))
	if ( (CALL memcmp($6, ($16 + [88]), [8]) == 0) ){ goto $label$20 }
	$1 = ($1 + [140])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$21 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864505, ($16 + [80]), $5)
	*($1) = $2
	
.LABEL $label$21
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$20
	*([0] + [4]) = ($16 + [96])
}

void .FUNC _ZN5eosio8exchange15asset_to_stringERKNS_5assetE (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$8 = (*([0] + [4]) - [112])
	$11 = $8
	*([0] + [4]) = $8
	$6 = (int_64)1
	$3 = *($2 + [8])
	$9 = ((int_64)$3 & (int_64)255)
	$7 = (int_64)($9 == 0)
	if ( $7 ){ goto $label$1 }
	$10 = ((int_64)$9 + (int_64)1)
	$6 = (int_64)1
	
.LOOP $label$2:
	$6 = ((int_64)$6 * (int_64)10)
	$10 = ((int_64)$10 + (int_64)-1)
	if ( ((int_64)$10 > (int_64)1) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($8 - (((CASTING uint_32)(uint_64 ((int_64)$9 + (int_64)1)) + [15]) & [1008]))
	*([0] + [4]) = $4
	*(($4 + (CASTING uint_32)(uint_64 $9))) = [0]
	if ( $7 ){ goto $label$3 }
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)*($2) % (int_64)$6)
	$8 = (($4 + ((CASTING uint_32)(uint_64 $3) & [255])) + [-1])
	
.LOOP $label$4:
	*($8) = ((int_64)((int_64)$10 % (int_64)10) + (int_64)48)
	$8 = ($8 + [-1])
	$10 = ((int_64)$10 / (int_64)10)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)$9 > (int_64)1) ){ goto $label$4 }
	
.LABEL $label$3
	*(($11 + [104])) = [0]
	*($11 + [96]) = (int_64)0
	$8 = CALL strlen([2768])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$10 }
	*($11 + [96]) = ($8 << [1])
	$7 = (($11 + [96]) | [1])
	if ( $8 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = (($8 + [16]) & [-16])
	$7 = CALL $128($5)
	*($11 + [96]) = ($5 | [1])
	*($11 + [104]) = $7
	*($11 + [100]) = $8
	
.LABEL $label$9
	CALL memcpy($7, [2768], $8)
	
.LABEL $label$8
	*(($7 + $8)) = [0]
	$8 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)8)
	if ( (($8) & [255]) == 0) ){ goto $label$11 }
	CALL $138(($11 + [96]), int_32(($8 << [24]) >> [24]))
	$8 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)16)
	if ( (($8) & [255]) == 0) ){ goto $label$11 }
	CALL $138(($11 + [96]), int_32(($8 << [24]) >> [24]))
	$8 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)24)
	if ( (($8) & [255]) == 0) ){ goto $label$11 }
	CALL $138(($11 + [96]), int_32(($8 << [24]) >> [24]))
	$8 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( (($8) & [255]) == 0) ){ goto $label$11 }
	CALL $138(($11 + [96]), int_32(($8 << [24]) >> [24]))
	$8 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)40)
	if ( (($8) & [255]) == 0) ){ goto $label$11 }
	CALL $138(($11 + [96]), int_32(($8 << [24]) >> [24]))
	$8 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)48)
	if ( (($8) & [255]) == 0) ){ goto $label$11 }
	CALL $138(($11 + [96]), int_32(($8 << [24]) >> [24]))
	$8 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)56)
	if ( ($8) == 0) ){ goto $label$11 }
	CALL $138(($11 + [96]), int_32(($8 << [24]) >> [24]))
	
.LABEL $label$11
	CALL _ZNSt3__19to_stringEx(($11 + [32]), ((int_64)*($2) / (int_64)$6))
	*(($11 + [24])) = [0]
	*($11 + [16]) = (int_64)0
	$8 = CALL strlen([2784])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$14 }
	*($11 + [16]) = ($8 << [1])
	$7 = (($11 + [16]) | [1])
	$2 = $7
	if ( $8 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$7 = (($8 + [16]) & [-16])
	$2 = CALL $128($7)
	*($11 + [16]) = ($7 | [1])
	*($11 + [24]) = $2
	*($11 + [20]) = $8
	$7 = (($11 + [16]) | [1])
	
.LABEL $label$13
	CALL memcpy($2, [2784], $8)
	
.LABEL $label$12
	*(($2 + $8)) = [0]
	$8 = *($11 + [16])
	$2 = ($8 & [1])
	$8 = CALL $136(($11 + [32]), ( *($11 + [24]) ? $7 : $2 ), ( *($11 + [20]) ? uint_32($8 >> [1]) : $2 ))
	$2 = ($8 + [8])
	*((($11 + [48]) + [8])) = *($2)
	*($11 + [48]) = *($8)
	*($8) = [0]
	*(($8 + [4])) = [0]
	*($2) = [0]
	$8 = CALL $137(($11 + [48]), $4)
	$2 = ($8 + [8])
	*((($11 + [64]) + [8])) = *($2)
	*($11 + [64]) = *($8)
	*($8) = [0]
	*(($8 + [4])) = [0]
	*($2) = [0]
	*(($11 + [8])) = [0]
	*($11) = (int_64)0
	$8 = CALL strlen([2800])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$17 }
	*($11) = ($8 << [1])
	$4 = ($11 | [1])
	$2 = $4
	if ( $8 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$4 = (($8 + [16]) & [-16])
	$2 = CALL $128($4)
	*($11) = ($4 | [1])
	*($11 + [8]) = $2
	*($11 + [4]) = $8
	$4 = ($11 | [1])
	
.LABEL $label$16
	CALL memcpy($2, [2800], $8)
	
.LABEL $label$15
	*(($2 + $8)) = [0]
	$8 = *($11)
	$2 = ($8 & [1])
	$8 = CALL $136(($11 + [64]), ( *($11 + [8]) ? $4 : $2 ), ( *($11 + [4]) ? uint_32($8 >> [1]) : $2 ))
	$2 = ($8 + [8])
	*((($11 + [80]) + [8])) = *($2)
	*($11 + [80]) = *($8)
	*($8) = [0]
	*(($8 + [4])) = [0]
	*($2) = [0]
	$8 = *($11 + [96])
	$2 = ($8 & [1])
	$8 = CALL $136(($11 + [80]), ( *($11 + [104]) ? (($11 + [96]) | [1]) : $2 ), ( *($11 + [100]) ? uint_32($8 >> [1]) : $2 ))
	$10 = *($8)
	*($8) = (int_64)0
	*($0) = $10
	$8 = ($8 + [8])
	*(($0 + [8])) = *($8)
	*($8) = [0]
	if ( ((*($11 + [80]) & [1]) == 0) ){ goto $label$18 }
	CALL $130(*($11 + [88]))
	
.LABEL $label$18
	if ( ((*($11) & [1]) == 0) ){ goto $label$19 }
	CALL $130(*(($11 + [8])))
	
.LABEL $label$19
	if ( ((*($11 + [64]) & [1]) == 0) ){ goto $label$20 }
	CALL $130(*($11 + [72]))
	
.LABEL $label$20
	if ( ((*($11 + [48]) & [1]) == 0) ){ goto $label$21 }
	CALL $130(*($11 + [56]))
	
.LABEL $label$21
	if ( ((*($11 + [16]) & [1]) == 0) ){ goto $label$22 }
	CALL $130(*(($11 + [24])))
	
.LABEL $label$22
	if ( ((*($11 + [32]) & [1]) == 0) ){ goto $label$23 }
	CALL $130(*($11 + [40]))
	
.LABEL $label$23
	if ( ((*($11 + [96]) & [1]) == 0) ){ goto $label$24 }
	CALL $130(*(($11 + [104])))
	
.LABEL $label$24
	*([0] + [4]) = ($11 + [112])
	return (unreachable)
	
.LABEL $label$7
	CALL $132(($11 + [96]))
	
.LABEL $label$6
	CALL $132(($11 + [16]))
	
.LABEL $label$5
	CALL $132($11)
	(unreachable)
	(unreachable)
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = CALL $128([16])
	*($0 + [8]) = $6
	*($0) = (int_64)55834574865
	CALL memset($6, [46], [13])
	*($6 + [13]) = [0]
	$2 = ($0 + [1])
	$8 = *($1)
	$7 = [17]
	$5 = ($0 + [8])
	$6 = [12]
	
.LOOP $label$1:
	$4 = ((int_32)$6 == (int_32)[12])
	$3 = *((*([0] + [2804]) + (CASTING uint_32)(uint_64 ((int_64)( (int_64)15 ? (int_64)31 : $4 ) & (int_64)$8))))
	$1 = $2
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	$1 = *($5)
	
.LABEL $label$2
	*(($1 + $6)) = $3
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ($6 + [-1])
	$8 = (uint_64)$8 >> (uint_64)( (int_64)4 ? (int_64)5 : $4 ))
	$7 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($6 & [1])
	$6 = *($0)
	$6 = ( *(($0 + [4])) ? uint_32($6 >> [1]) : $1 )
	$7 = ( *(($0 + [8])) ? $2 : $1 )
	
.LOOP $label$5:
	if ( ($6 == 0) ){ goto $label$4 }
	$1 = ($7 + $6)
	$3 = ($6 + [-1])
	$6 = $3
	if ( ((int_32)*(($1 + [-1])) == (int_32)[46]) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	CALL $148($9, $0, [0], ($3 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$6
	CALL $135($0, [0])
	*(($0 + [8])) = *(($9 + [8]))
	*($0) = *($9)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _ZN5eosio8exchange18adjust_u_buy_orderEyyNS_5assetE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [160])
	*([0] + [4]) = $7
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($0)
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($7 + [44]) = [0]
	$0 = CALL db_find_i64($5, $1, (int_64)-3317487864618549248, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $37(($7 + [8]), $0)
	CALL eosio_assert(((int_32)*($0 + [64]) == (int_32)($7 + [8])), [224])
	if ( ((int_64)*($3) > (int_64)1) ){ goto $label$4 }
	CALL eosio_assert([1], [384])
	CALL eosio_assert([1], [432])
	$3 = CALL db_next_i64(*($0 + [68]), ($7 + [48]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	CALL $37(($7 + [8]), $3)
	
.LABEL $label$5
	CALL $38(($7 + [8]), $0)
	$4 = *($7 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert([1], [1280])
	CALL eosio_assert(((int_32)*($0 + [64]) == (int_32)($7 + [8])), [1408])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$13()), [1456])
	*(($0 + [36])) = *(($3 + [12]))
	*(($0 + [32])) = *(($3 + [8]))
	*(($0 + [28])) = *(($3 + [4]))
	*($0 + [24]) = *($3)
	$3 = ($0 + [8])
	*($7 + [136]) = *($3)
	$1 = *($0)
	CALL eosio_assert([1], [1520])
	*($7 + [128]) = (($7 + [48]) + [64])
	*($7 + [124]) = ($7 + [48])
	*($7 + [120]) = ($7 + [48])
	CALL $79(($7 + [120]), $0)
	CALL db_update_i64(*($0 + [68]), (int_64)0, ($7 + [48]), [64])
	$4 = ($7 + [24])
	if ( (uint_64)($1 <= *($4)) ){ goto $label$6 }
	*($4) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($7 + [152]) = *($3)
	if ( (CALL memcmp(($7 + [136]), ($7 + [152]), [8]) == 0) ){ goto $label$3 }
	$3 = ($0 + [72])
	$0 = *($3)
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$7 }
	$0 = CALL db_idx64_find_primary(*($7 + [8]), *(($7 + [16])), (int_64)-3317487864618549248, ($7 + [144]), $1)
	*($3) = $0
	
.LABEL $label$7
	CALL db_idx64_update($0, (int_64)0, ($7 + [152]))
	
.LABEL $label$3
	$4 = *($7 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($7 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $130($3)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($7 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $4
	
.LABEL $label$8
	*($6) = $4
	CALL $130($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [160])
}

void .FUNC _ZN5eosio8exchange19adjust_u_sell_orderEyyNS_5assetE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [160])
	*([0] + [4]) = $7
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($0)
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($7 + [44]) = [0]
	$0 = CALL db_find_i64($5, $1, (int_64)-3020480680945127424, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $41(($7 + [8]), $0)
	CALL eosio_assert(((int_32)*($0 + [64]) == (int_32)($7 + [8])), [224])
	if ( ((int_64)*($3) <= (int_64)0) ){ goto $label$4 }
	CALL eosio_assert([1], [1280])
	CALL eosio_assert(((int_32)*($0 + [64]) == (int_32)($7 + [8])), [1408])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$13()), [1456])
	*(($0 + [36])) = *(($3 + [12]))
	*(($0 + [32])) = *(($3 + [8]))
	*(($0 + [28])) = *(($3 + [4]))
	*($0 + [24]) = *($3)
	$3 = ($0 + [8])
	*($7 + [136]) = *($3)
	$1 = *($0)
	CALL eosio_assert([1], [1520])
	*($7 + [128]) = (($7 + [48]) + [64])
	*($7 + [124]) = ($7 + [48])
	*($7 + [120]) = ($7 + [48])
	CALL $95(($7 + [120]), $0)
	CALL db_update_i64(*($0 + [68]), (int_64)0, ($7 + [48]), [64])
	$4 = ($7 + [24])
	if ( (uint_64)($1 <= *($4)) ){ goto $label$5 }
	*($4) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($7 + [152]) = *($3)
	if ( (CALL memcmp(($7 + [136]), ($7 + [152]), [8]) == 0) ){ goto $label$3 }
	$3 = ($0 + [72])
	$0 = *($3)
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$6 }
	$0 = CALL db_idx64_find_primary(*($7 + [8]), *(($7 + [16])), (int_64)-3020480680945127424, ($7 + [144]), $1)
	*($3) = $0
	
.LABEL $label$6
	CALL db_idx64_update($0, (int_64)0, ($7 + [152]))
	$4 = *($7 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert([1], [384])
	CALL eosio_assert([1], [432])
	$3 = CALL db_next_i64(*($0 + [68]), ($7 + [48]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$7 }
	CALL $41(($7 + [8]), $3)
	
.LABEL $label$7
	CALL $42(($7 + [8]), $0)
	
.LABEL $label$3
	$4 = *($7 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($7 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $130($3)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($7 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $4
	
.LABEL $label$8
	*($6) = $4
	CALL $130($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [160])
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $80 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx_double_lowerbound(*($8), *($8 + [8]), (int_64)-4421661421696319486, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [72]) == (int_32)$4), [224])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $40($4, CALL $fimport$16(*($4), *($4 + [8]), (int_64)-4421661421696319488, $5))
	CALL eosio_assert(((int_32)*($2 + [72]) == (int_32)$4), [224])
	
.LABEL $label$4
	*(($2 + [88])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $182 ()
{
	(unreachable)
}

int_32 .FUNC isdigit (int_32 $0)
{
	return (($0 + [-48]) <= [10])
}

int_32 .FUNC $148 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $128($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC _ZNSt3__19to_stringEf (int_32 $0, float_32 $1)
{
	int_32 $2
	float_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*($8 + [24]) = [0]
	*($8 + [16]) = (int_64)0
	$7 = [10]
	$2 = (($8 + [16]) | [1])
	CALL memset($2, [0], [10])
	$4 = *($8 + [16])
	if ( ($4 & [1]) ){ goto $label$2 }
	$4 = [20]
	*($8 + [16]) = [20]
	$7 = *($8 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($8 + [20]) = [10]
	
.LABEL $label$1
	*(($8 + [27])) = [0]
	$7 = ( $7 ? uint_32($4 >> [1]) : ($4 & [1]) )
	$3 = (PROMOTE float_64)(float_32 $1)
	$6 = ($8 + [24])
	
.LOOP $label$4:
	*($8) = $3
	$4 = CALL snprintf(( *($6) ? $2 : ($4 & [1]) ), ($7 + [1]), [11792], $8)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$4 <= (uint_32)$7) ){ goto $label$3 }
	$7 = $4
	goto $label$5 
	
.LABEL $label$6
	$7 = (($7 << [1]) | [1])
	
.LABEL $label$5
	$5 = ($4 & [1])
	$4 = *($8 + [16])
	$4 = ( *($8 + [20]) ? uint_32($4 >> [1]) : $5 )
	if ( ((uint_32)$7 <= (uint_32)$4) ){ goto $label$7 }
	CALL $143(($8 + [16]), ($7 - $4), [0])
	$4 = *($8 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $5 ){ goto $label$8 }
	*(((($8 + [16]) + $7) + [1])) = [0]
	*($8 + [16]) = ($7 << [1])
	$4 = *($8 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($6) + $7)) = [0]
	*($8 + [20]) = $7
	$4 = *($8 + [16])
	goto $label$4 
	
.LABEL $label$3
	$7 = ($7 & [1])
	$7 = *($8 + [16])
	$5 = ( *($8 + [20]) ? uint_32($7 >> [1]) : $7 )
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$10 }
	CALL $143(($8 + [16]), ($4 - $5), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $7 ){ goto $label$11 }
	*(((($8 + [16]) + $4) + [1])) = [0]
	*($8 + [16]) = ($4 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($8 + [24])) + $4)) = [0]
	*($8 + [20]) = $4
	
.LABEL $label$9
	*($0) = *($8 + [16])
	*(($0 + [8])) = *((($8 + [16]) + [8]))
	*([0] + [4]) = ($8 + [32])
}

void .FUNC _ZNSt3__19to_stringEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [11776], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $143(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $143(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $128($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $146 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $141 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = CALL strlen($1)
	$3 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$6 = ($4 + $3)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$6 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($6 + [16]) & [-16])
	$6 = CALL $128($5)
	*($0) = ($5 | [1])
	*(($0 + [8])) = $6
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL $136($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $140 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $143 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$3 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$4 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$4 = *($0 + [4])
	
.LABEL $label$3
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$5 }
	CALL $139($0, $3, (($1 - $3) + $4), $4, $4, [0], [0])
	$5 = *($0)
	
.LABEL $label$5
	if ( ($5 & [1]) ){ goto $label$7 }
	$5 = ($0 + [1])
	goto $label$6 
	
.LABEL $label$7
	$5 = *($0 + [8])
	
.LABEL $label$6
	CALL memset(($5 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($1 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $1
	
.LABEL $label$8
	*(($5 + $1)) = [0]
	
.LABEL $label$1
	return $0
}

void .FUNC _ZNSt3__19to_stringEx (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [11760], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $143(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $143(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC _ZN5eosio8exchange11rmuserorderEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [144])
	*([0] + [4]) = $15
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$40($1), [16])
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [48])
	CALL eosio_assert(CALL $6($0, $2), [1840])
	*((($15 + [96]) + [32])) = [0]
	*($15 + [104]) = $2
	*($15 + [112]) = (int_64)-1
	$1 = *($0)
	*($15 + [96]) = $1
	*($15 + [120]) = (int_64)0
	*($15 + [132]) = [0]
	$14 = CALL db_lowerbound_i64($1, $2, (int_64)-3317487864618549248, (int_64)0)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$1 }
	$13 = CALL $37(($15 + [96]), $14)
	$6 = (($15 + [48]) + [8])
	$7 = ($15 + [64])
	$8 = ($15 + [72])
	$10 = ($15 + [76])
	$11 = (($15 + [48]) + [32])
	$3 = ($15 + [84])
	$12 = ($3 + [4])
	
.LOOP $label$2:
	$1 = *($13 + [8])
	*($6) = $1
	*($7) = (int_64)-1
	$14 = [0]
	*($8) = [0]
	$9 = *($0)
	*($15 + [48]) = $9
	*($10) = [0]
	*($11) = [0]
	*($12) = [0]
	*($3) = [0]
	$5 = CALL db_find_i64($9, $1, (int_64)4520852774463733760, *($13))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$14 = CALL $34(($15 + [48]), $5)
	CALL eosio_assert(((int_32)*($14 + [72]) == (int_32)($15 + [48])), [224])
	
.LABEL $label$3
	$5 = ((int_32)$14 != (int_32)[0])
	CALL eosio_assert($5, [384])
	CALL eosio_assert($5, [432])
	$5 = CALL db_next_i64(*($14 + [76]), ($15 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	CALL $34(($15 + [48]), $5)
	
.LABEL $label$4
	CALL $39(($15 + [48]), $14)
	$14 = ((int_32)$13 != (int_32)[0])
	CALL eosio_assert($14, [384])
	CALL eosio_assert($14, [432])
	$14 = CALL db_next_i64(*($13 + [68]), ($15 + [8]))
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$5 }
	CALL $37(($15 + [96]), $14)
	
.LABEL $label$5
	CALL $38(($15 + [96]), $13)
	$13 = [0]
	$14 = CALL db_lowerbound_i64(*($15 + [96]), *((($15 + [96]) + [8])), (int_64)-3317487864618549248, (int_64)0)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$6 }
	$13 = CALL $37(($15 + [96]), $14)
	
.LABEL $label$6
	$4 = *($8)
	if ( ($4 == 0) ){ goto $label$7 }
	$14 = *($10)
	if ( ((int_32)$14 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL $130($5)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$14) ){ goto $label$10 }
	$14 = *($8)
	goto $label$8 
	
.LABEL $label$9
	$14 = $4
	
.LABEL $label$8
	*($10) = $4
	CALL $130($14)
	
.LABEL $label$7
	if ( $13 ){ goto $label$2 }
	
.LABEL $label$1
	*((($15 + [8]) + [32])) = [0]
	*($15 + [24]) = (int_64)-1
	$1 = *($0)
	*($15 + [8]) = $1
	*($15 + [16]) = $2
	*($15 + [32]) = (int_64)0
	*($15 + [44]) = [0]
	$14 = CALL db_lowerbound_i64($1, $2, (int_64)-3020480680945127424, (int_64)0)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$12 }
	$13 = CALL $41(($15 + [8]), $14)
	$6 = (($15 + [48]) + [8])
	$7 = ($15 + [64])
	$8 = ($15 + [72])
	$10 = ($15 + [76])
	$11 = ($15 + [80])
	$3 = ($15 + [84])
	$12 = ($3 + [4])
	
.LOOP $label$13:
	$1 = *($13 + [8])
	*($6) = $1
	*($7) = (int_64)-1
	*($8) = [0]
	$9 = *($0)
	*($15 + [48]) = $9
	*($10) = [0]
	*($11) = [0]
	*($12) = [0]
	*($3) = [0]
	$14 = [0]
	$5 = CALL db_find_i64($9, $1, (int_64)-4421661421696319488, *($13))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$14 }
	$14 = CALL $40(($15 + [48]), $5)
	CALL eosio_assert(((int_32)*($14 + [72]) == (int_32)($15 + [48])), [224])
	
.LABEL $label$14
	$5 = ((int_32)$14 != (int_32)[0])
	CALL eosio_assert($5, [384])
	CALL eosio_assert($5, [432])
	$5 = CALL db_next_i64(*($14 + [76]), ($15 + [136]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$15 }
	CALL $40(($15 + [48]), $5)
	
.LABEL $label$15
	CALL $43(($15 + [48]), $14)
	$14 = ((int_32)$13 != (int_32)[0])
	CALL eosio_assert($14, [384])
	CALL eosio_assert($14, [432])
	$14 = CALL db_next_i64(*($13 + [68]), ($15 + [136]))
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$16 }
	CALL $41(($15 + [8]), $14)
	
.LABEL $label$16
	CALL $42(($15 + [8]), $13)
	$13 = [0]
	$14 = CALL db_lowerbound_i64(*($15 + [8]), *((($15 + [8]) + [8])), (int_64)-3020480680945127424, (int_64)0)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$17 }
	$13 = CALL $41(($15 + [8]), $14)
	
.LABEL $label$17
	$4 = *($8)
	if ( ($4 == 0) ){ goto $label$18 }
	$14 = *($10)
	if ( ((int_32)$14 == (int_32)$4) ){ goto $label$20 }
	
.LOOP $label$21:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$22 }
	CALL $130($5)
	
.LABEL $label$22
	if ( ((int_32)$4 != (int_32)$14) ){ goto $label$21 }
	$14 = *($8)
	goto $label$19 
	
.LABEL $label$20
	$14 = $4
	
.LABEL $label$19
	*($10) = $4
	CALL $130($14)
	
.LABEL $label$18
	if ( $13 ){ goto $label$13 }
	
.LABEL $label$12
	$4 = *($15 + [32])
	if ( ($4 == 0) ){ goto $label$23 }
	$13 = ($15 + [36])
	$14 = *($13)
	if ( ((int_32)$14 == (int_32)$4) ){ goto $label$25 }
	
.LOOP $label$26:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$27 }
	CALL $130($5)
	
.LABEL $label$27
	if ( ((int_32)$4 != (int_32)$14) ){ goto $label$26 }
	$14 = *(($15 + [32]))
	goto $label$24 
	
.LABEL $label$25
	$14 = $4
	
.LABEL $label$24
	*($13) = $4
	CALL $130($14)
	
.LABEL $label$23
	$4 = *($15 + [120])
	if ( ($4 == 0) ){ goto $label$28 }
	$13 = ($15 + [124])
	$14 = *($13)
	if ( ((int_32)$14 == (int_32)$4) ){ goto $label$30 }
	
.LOOP $label$31:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$32 }
	CALL $130($5)
	
.LABEL $label$32
	if ( ((int_32)$4 != (int_32)$14) ){ goto $label$31 }
	$14 = *(($15 + [120]))
	goto $label$29 
	
.LABEL $label$30
	$14 = $4
	
.LABEL $label$29
	*($13) = $4
	CALL $130($14)
	
.LABEL $label$28
	*([0] + [4]) = ($15 + [144])
}

void .FUNC _ZN5eosio8exchange12newtokenpairEyyyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_5assetE (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [288])
	*([0] + [4]) = $14
	*($14 + [264]) = $1
	*($14 + [256]) = $2
	*($14 + [248]) = $3
	*($14 + [240]) = $4
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$40($1), [1056])
	CALL eosio_assert(CALL $fimport$40($4), [1872])
	$3 = (int_64)0
	$2 = (int_64)59
	$11 = [1904]
	$10 = (int_64)0
	
.LOOP $label$1:
	$13 = (int_64)0
	if ( ((uint_64)$3 > (uint_64)(int_64)11) ){ goto $label$2 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$12 = ($12 + [165])
	goto $label$3 
	
.LABEL $label$4
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$2
	$11 = ($11 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$10 = ((int_64)$13 | (int_64)$10)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$10 == (int_64)$1) ){ goto $label$5 }
	$11 = *($5)
	$12 = CALL strlen([1920])
	if ( ((int_32)$12 != (int_32)( *($5 + [4]) ? uint_32($11 >> [1]) : ($11 & [1]) )) ){ goto $label$7 }
	$11 = [0]
	if ( (CALL $140($5, [0], [-1], [1920], $12) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$11 = *($5)
	$12 = ($5 + [4])
	$8 = CALL strlen([1936])
	if ( ((int_32)$8 != (int_32)( *($12) ? uint_32($11 >> [1]) : ($11 & [1]) )) ){ goto $label$8 }
	$11 = [0]
	if ( (CALL $140($5, [0], [-1], [1936], $8) == 0) ){ goto $label$6 }
	
.LABEL $label$8
	$11 = [1]
	$12 = *($5)
	$8 = CALL strlen([1952])
	if ( ((int_32)$8 != (int_32)( *($12) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$6 }
	$11 = ((int_32)CALL $140($5, [0], [-1], [1952], $8) != (int_32)[0])
	
.LABEL $label$6
	CALL eosio_assert($11, [1968])
	
.LABEL $label$5
	if ( (*($5) & [1]) ){ goto $label$10 }
	$12 = ($5 + [1])
	goto $label$9 
	
.LABEL $label$10
	$12 = *($5 + [8])
	
.LABEL $label$9
	$11 = [-1]
	
.LOOP $label$11:
	$8 = ($12 + $11)
	$7 = ($11 + [1])
	$11 = $7
	if ( *(($8 + [1])) ){ goto $label$11 }
	$13 = (int_64)0
	if ( ($7 == 0) ){ goto $label$12 }
	$2 = (CASTING uint_64)(uint_32 $7)
	$3 = (int_64)8
	$13 = (int_64)0
	
.LOOP $label$13:
	$11 = *($12)
	if ( ((uint_32)(($11 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$13 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$3 & (int_64)4294967288)) | (int_64)$13)
	
.LABEL $label$14
	$12 = ($12 + [1])
	$3 = ((int_64)$3 + (int_64)8)
	$2 = ((int_64)$2 + (int_64)-1)
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$13 }
	
.LABEL $label$12
	$11 = [0]
	*(($14 + [168])) = [0]
	*($14 + [136]) = $4
	*($14 + [152]) = (int_64)-1
	*($14 + [160]) = (int_64)0
	$3 = (uint_64)$13 >> (uint_64)(int_64)8
	*($14 + [144]) = $3)
	$12 = CALL $12(($14 + [136]), $3, [640])
	*((($14 + [224]) + [8])) = *(($12 + [8]))
	*($14 + [224]) = *($12)
	$7 = *($14 + [160])
	if ( ($7 == 0) ){ goto $label$15 }
	$9 = ($14 + [164])
	$12 = *($9)
	if ( ((int_32)$12 == (int_32)$7) ){ goto $label$17 }
	
.LOOP $label$18:
	$12 = ($12 + [-24])
	$8 = *($12)
	*($12) = [0]
	if ( ($8 == 0) ){ goto $label$19 }
	CALL $130($8)
	
.LABEL $label$19
	if ( ((int_32)$7 != (int_32)$12) ){ goto $label$18 }
	$12 = *(($14 + [160]))
	goto $label$16 
	
.LABEL $label$17
	$12 = $7
	
.LABEL $label$16
	*($9) = $7
	CALL $130($12)
	
.LABEL $label$15
	$3 = (uint_64)*($14 + [232]) >> (uint_64)(int_64)8)
	
.LOOP $label$22:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	
.LOOP $label$24:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	$12 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$12 = [0]
	
.LABEL $label$20
	CALL eosio_assert($12, [672])
	$3 = (int_64)0
	CALL eosio_assert(((int_64)*($14 + [224]) > (int_64)0), [704])
	*(($14 + [216])) = [0]
	$2 = *($0)
	*($14 + [184]) = $2
	*($14 + [200]) = (int_64)-1
	*($14 + [208]) = (int_64)0
	*($14 + [192]) = $2
	*($14 + [220]) = [0]
	$11 = CALL db_find_i64($2, $2, (int_64)4157012474184204288, *($14 + [256]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$25 }
	$8 = CALL $17(($14 + [184]), $11)
	CALL eosio_assert(((int_32)*($8 + [40]) == (int_32)($14 + [184])), [224])
	
.LABEL $label$25
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [1024])
	CALL eosio_assert(((int_64)(uint_64)*(($14 + [232])) >> (uint_64)(int_64)8) != (int_64)*($8 + [16])), [2000])
	$1 = *($8 + [8])
	$13 = (int_64)59
	$11 = [2032]
	$10 = (int_64)0
	
.LOOP $label$26:
	if ( ((uint_64)$3 > (uint_64)(int_64)10) ){ goto $label$31 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$12 = ($12 + [165])
	goto $label$29 
	
.LABEL $label$31
	$2 = (int_64)0
	if ( ((int_64)$3 == (int_64)11) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$30
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$28
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$27
	$11 = ($11 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$10 = ((int_64)$2 | (int_64)$10)
	$3 = ((int_64)$3 + (int_64)1)
	if ( ((int_64)$3 != (int_64)13) ){ goto $label$26 }
	if ( ((int_64)$1 != (int_64)$10) ){ goto $label$33 }
	if ( ((int_64)*(($8 + [16])) == (int_64)(uint_64)(int_64)1397703936 >> (uint_64)(int_64)8)) ){ goto $label$32 }
	
.LABEL $label$33
	$3 = (int_64)0
	$2 = (int_64)59
	$11 = [1904]
	$1 = *($14 + [264])
	$10 = (int_64)0
	
.LOOP $label$34:
	$13 = (int_64)0
	if ( ((uint_64)$3 > (uint_64)(int_64)11) ){ goto $label$35 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$12 = ($12 + [165])
	goto $label$36 
	
.LABEL $label$37
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$35
	$11 = ($11 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$10 = ((int_64)$13 | (int_64)$10)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$34 }
	CALL eosio_assert(((int_64)$1 == (int_64)$10), [2048])
	
.LABEL $label$32
	$11 = [0]
	*(($14 + [168])) = [0]
	$3 = *($0)
	*($14 + [136]) = $3
	*($14 + [152]) = (int_64)-1
	*($14 + [160]) = (int_64)0
	*($14 + [144]) = $3
	*($14 + [172 align=4]) = (int_64)0
	$12 = CALL db_find_i64($3, $3, (int_64)-3665743365212864512, *($14 + [248]))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$38 }
	$11 = CALL $33(($14 + [136]), $12)
	CALL eosio_assert(((int_32)*($11 + [104]) == (int_32)($14 + [136])), [224])
	
.LABEL $label$38
	CALL eosio_assert(($11 == 0), [2080])
	*($14 + [128]) = ($14 + [136])
	*($14 + [80]) = (uint_64)*(($14 + [232])) >> (uint_64)(int_64)8)
	CALL $74(($14 + [16]), ($14 + [128]), ($14 + [80]))
	$11 = *($14 + [20])
	if ( ($11 == 0) ){ goto $label$40 }
	if ( ((int_64)*($14 + [80]) != (int_64)*($11 + [24])) ){ goto $label$40 }
	$3 = *($14 + [16])
	*($14 + [120]) = $3
	$11 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( ($11) == 0) ){ goto $label$39 }
	$8 = ($14 + [232])
	
.LOOP $label$41:
	if ( ((int_64)*($11 + [8]) != (int_64)*($14 + [256])) ){ goto $label$42 }
	$12 = [1]
	if ( ((int_64)*($11 + [24]) != (int_64)(uint_64)*($8) >> (uint_64)(int_64)8)) ){ goto $label$43 }
	$12 = ((int_64)*($11 + [16]) != (int_64)*($14 + [240]))
	
.LABEL $label$43
	CALL eosio_assert($12, [2128])
	
.LABEL $label$42
	CALL $75(($14 + [120]))
	$11 = *($14 + [124])
	if ( $11 ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$40
	*($14 + [124]) = [0]
	*($14 + [120]) = ($14 + [128])
	
.LABEL $label$39
	$3 = *($0)
	*($14 + [32]) = $5
	*($14 + [40]) = $6
	*($14 + [20]) = ($14 + [256])
	*($14 + [16]) = ($14 + [248])
	*($14 + [24]) = ($14 + [240])
	*($14 + [28]) = ($14 + [224])
	*($14 + [36]) = ($14 + [264])
	*($14 + [64]) = $3
	CALL eosio_assert(((int_64)*($14 + [136]) == (int_64)CALL $fimport$13()), [144])
	*($14 + [84]) = ($14 + [16])
	*($14 + [80]) = ($14 + [136])
	*($14 + [88]) = ($14 + [64])
	*(($12 = CALL $128([144])) + [40]) = [0]
	*($12 + [32 align=4]) = (int_64)0
	*($12 + [64]) = (int_64)0
	*($12 + [72]) = (int_64)1398362884
	CALL eosio_assert([1], [960])
	$3 = (int_64)5462355
	$11 = [0]
	
.LOOP $label$46:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$45 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$47 }
	
.LOOP $label$48:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$45 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$48 }
	
.LABEL $label$47
	$8 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$46 }
	goto $label$44 
	
.LABEL $label$45
	$8 = [0]
	
.LABEL $label$44
	CALL eosio_assert($8, [672])
	*($12 + [88]) = (int_64)0
	*($12 + [80]) = (int_64)0
	*($12 + [96]) = (int_64)0
	*($12 + [104]) = ($14 + [136])
	CALL $76(($14 + [80]), $12)
	*($14 + [272]) = $12
	$3 = *($12)
	*($14 + [80]) = $3
	$8 = *($12 + [108])
	*($14) = $8
	$7 = ($14 + [164])
	$11 = *($7)
	if ( ((uint_32)$11 >= (uint_32)*(($14 + [168]))) ){ goto $label$50 }
	*($11 + [8]) = $3
	*($11 + [16]) = $8
	*($14 + [272]) = [0]
	*($11) = $12
	*($7) = ($11 + [24])
	goto $label$49 
	
.LABEL $label$50
	CALL $64(($14 + [160]), ($14 + [272]), ($14 + [80]), $14)
	
.LABEL $label$49
	$11 = *($14 + [272])
	*($14 + [272]) = [0]
	if ( ($11 == 0) ){ goto $label$51 }
	if ( ((*($11 + [32]) & [1]) == 0) ){ goto $label$52 }
	CALL $130(*(($11 + [40])))
	
.LABEL $label$52
	CALL $130($11)
	
.LABEL $label$51
	$1 = *($0)
	$3 = (int_64)0
	$13 = (int_64)59
	$11 = [1152]
	$10 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$3 > (uint_64)(int_64)5) ){ goto $label$58 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$12 = ($12 + [165])
	goto $label$56 
	
.LABEL $label$58
	$2 = (int_64)0
	if ( ((uint_64)$3 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$54
	$11 = ($11 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$10 = ((int_64)$2 | (int_64)$10)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$53 }
	*($14 + [72]) = $10
	*($14 + [64]) = $1
	$3 = (int_64)0
	$2 = (int_64)59
	$11 = [1248]
	$10 = (int_64)0
	
.LOOP $label$59:
	$13 = (int_64)0
	if ( ((uint_64)$3 > (uint_64)(int_64)11) ){ goto $label$60 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$62 }
	$12 = ($12 + [165])
	goto $label$61 
	
.LABEL $label$62
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$61
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$60
	$11 = ($11 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$10 = ((int_64)$13 | (int_64)$10)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$59 }
	$3 = (int_64)0
	$13 = (int_64)59
	$11 = [1168]
	$1 = (int_64)0
	
.LOOP $label$63:
	if ( ((uint_64)$3 > (uint_64)(int_64)7) ){ goto $label$68 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$67 }
	$12 = ($12 + [165])
	goto $label$66 
	
.LABEL $label$68
	$2 = (int_64)0
	if ( ((uint_64)$3 <= (uint_64)(int_64)11) ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$67
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$66
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$65
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$64
	$11 = ($11 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$1 = ((int_64)$2 | (int_64)$1)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$63 }
	$3 = (int_64)0
	$2 = (int_64)59
	$11 = [1232]
	$4 = (int_64)0
	
.LOOP $label$69:
	$13 = (int_64)0
	if ( ((uint_64)$3 > (uint_64)(int_64)11) ){ goto $label$70 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$72 }
	$12 = ($12 + [165])
	goto $label$71 
	
.LABEL $label$72
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$71
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$70
	$11 = ($11 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$4 = ((int_64)$13 | (int_64)$4)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$69 }
	*(($14 + [8])) = [0]
	*($14) = (int_64)0
	$11 = CALL strlen([2160])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$73 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$76 }
	*($14) = ($11 << [1])
	$12 = ($14 | [1])
	if ( $11 ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$76
	$8 = (($11 + [16]) & [-16])
	$12 = CALL $128($8)
	*($14) = ($8 | [1])
	*($14 + [8]) = $12
	*($14 + [4]) = $11
	
.LABEL $label$75
	CALL memcpy($12, [2160], $11)
	
.LABEL $label$74
	*(($12 + $11)) = [0]
	*(($14 + [44])) = *(($6 + [12]))
	*(($14 + [40])) = *(($6 + [8]))
	*(($14 + [36])) = *(($6 + [4]))
	*($14 + [24]) = $4
	*($14 + [16]) = *($0)
	*($14 + [32]) = *($6)
	$11 = ($14 + [8])
	*(($14 + [56])) = *($11)
	*($14 + [48]) = *($14)
	*($14) = [0]
	*($14 + [4]) = [0]
	*($11) = [0]
	$11 = CALL $35(($14 + [80]), ($14 + [64]), $10, $1, ($14 + [16]))
	CALL $36(($14 + [272]), $11)
	$12 = *($14 + [272])
	CALL send_inline($12, (*($14 + [276]) - $12))
	$12 = *($14 + [272])
	if ( ($12 == 0) ){ goto $label$77 }
	*($14 + [276]) = $12
	CALL $130($12)
	
.LABEL $label$77
	$12 = *($11 + [28])
	if ( ($12 == 0) ){ goto $label$78 }
	*(($11 + [32])) = $12
	CALL $130($12)
	
.LABEL $label$78
	$12 = *($11 + [16])
	if ( ($12 == 0) ){ goto $label$79 }
	*(($11 + [20])) = $12
	CALL $130($12)
	
.LABEL $label$79
	if ( ((*(($14 + [48])) & [1]) == 0) ){ goto $label$80 }
	CALL $130(*(($14 + [56])))
	
.LABEL $label$80
	if ( ((*($14) & [1]) == 0) ){ goto $label$81 }
	CALL $130(*(($14 + [8])))
	
.LABEL $label$81
	$8 = *($14 + [160])
	if ( ($8 == 0) ){ goto $label$82 }
	$7 = ($14 + [164])
	$11 = *($7)
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$84 }
	
.LOOP $label$85:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$86 }
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$87 }
	CALL $130(*(($12 + [40])))
	
.LABEL $label$87
	CALL $130($12)
	
.LABEL $label$86
	if ( ((int_32)$8 != (int_32)$11) ){ goto $label$85 }
	$11 = *(($14 + [160]))
	goto $label$83 
	
.LABEL $label$84
	$11 = $8
	
.LABEL $label$83
	*($7) = $8
	CALL $130($11)
	
.LABEL $label$82
	$8 = *($14 + [208])
	if ( ($8 == 0) ){ goto $label$88 }
	$7 = ($14 + [212])
	$11 = *($7)
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$90 }
	
.LOOP $label$91:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$92 }
	if ( ((*($12 + [24]) & [1]) == 0) ){ goto $label$93 }
	CALL $130(*(($12 + [32])))
	
.LABEL $label$93
	CALL $130($12)
	
.LABEL $label$92
	if ( ((int_32)$8 != (int_32)$11) ){ goto $label$91 }
	$11 = *(($14 + [208]))
	goto $label$89 
	
.LABEL $label$90
	$11 = $8
	
.LABEL $label$89
	*($7) = $8
	CALL $130($11)
	
.LABEL $label$88
	*([0] + [4]) = ($14 + [288])
	return (unreachable)
	
.LABEL $label$73
	CALL $132($14)
}

void .FUNC $70 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$15 = (*([0] + [4]) - [96])
	*([0] + [4]) = $15
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [1408])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1456])
	$14 = *(($1 + [96]))
	$7 = *(($1 + [88]))
	$8 = *(($1 + [80]))
	$9 = *(($1 + [56]))
	$10 = ($1 + [48])
	$11 = *($10)
	$12 = *(($1 + [24]))
	$13 = *(($1 + [16]))
	*(($16 = $15) + [16]) = *(($1 + [8]))
	*($16 + [24]) = $13
	*($16 + [32]) = $12
	*($16 + [40]) = $11
	*($16 + [48]) = $9
	*($16 + [56]) = $8
	*($16 + [64]) = $7
	*($16 + [72]) = $14
	$7 = *($1)
	*($10) = *(*($2))
	CALL eosio_assert([1], [1520])
	$2 = *($1 + [32])
	$10 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($10 + [89])
	$14 = (CASTING uint_64)(uint_32 $10)
	$10 = (($16 + [16]) + [56])
	$6 = ($16 + [48])
	$5 = (($16 + [16]) + [24])
	$4 = (($16 + [16]) + [16])
	$3 = (($16 + [16]) + [8])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$15 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$15 = ($15 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $15
	
.LABEL $label$2
	*($16 + [4]) = $15
	*($16) = $15
	*($16 + [8]) = ($15 + $2)
	CALL $68($16, $1)
	CALL db_update_i64(*($1 + [108]), (int_64)0, $15, $2)
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL free($15)
	
.LABEL $label$4
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($16 + [88]) = *(($1 + [8]))
	if ( (CALL memcmp(($16 + [16]), ($16 + [88]), [8]) == 0) ){ goto $label$6 }
	$15 = ($1 + [112])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$7 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864512, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$7
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$6
	*($16 + [88]) = *(($1 + [16]))
	if ( (CALL memcmp($3, ($16 + [88]), [8]) == 0) ){ goto $label$8 }
	$15 = ($1 + [116])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864511, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$8
	*($16 + [88]) = *(($1 + [24]))
	if ( (CALL memcmp($4, ($16 + [88]), [8]) == 0) ){ goto $label$10 }
	$15 = ($1 + [120])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864510, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$10
	*($16 + [88]) = *(($1 + [48]))
	if ( (CALL memcmp($5, ($16 + [88]), [8]) == 0) ){ goto $label$12 }
	$15 = ($1 + [124])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864509, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$12
	*($16 + [88]) = *(($1 + [56]))
	if ( (CALL memcmp($6, ($16 + [88]), [8]) == 0) ){ goto $label$14 }
	$15 = ($1 + [128])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$15 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864508, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$15
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$14
	*($16 + [88]) = *(($1 + [80]))
	if ( (CALL memcmp(($16 + [56]), ($16 + [88]), [8]) == 0) ){ goto $label$16 }
	$15 = ($1 + [132])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$17 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864507, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$17
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$16
	*($16 + [88]) = *(($1 + [88]))
	if ( (CALL memcmp(($16 + [64]), ($16 + [88]), [8]) == 0) ){ goto $label$18 }
	$15 = ($1 + [136])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$19 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864506, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$19
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$18
	*($16 + [88]) = *(($1 + [96]))
	if ( (CALL memcmp($10, ($16 + [88]), [8]) == 0) ){ goto $label$20 }
	$1 = ($1 + [140])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$21 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864505, ($16 + [80]), $7)
	*($1) = $2
	
.LABEL $label$21
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$20
	*([0] + [4]) = ($16 + [96])
}

void .FUNC _ZN5eosio8exchange11cancelorderEyyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [272])
	*([0] + [4]) = $14
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$40($1), [1712])
	*(($14 + [240])) = [0]
	*($14 + [224]) = (int_64)-1
	*($14 + [232]) = (int_64)0
	$12 = *($0)
	*($14 + [208]) = $12
	*($14 + [216]) = $12
	*($14 + [244 align=4]) = (int_64)0
	$5 = [0]
	$13 = CALL db_find_i64($12, $12, (int_64)-3665743365212864512, $2)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $33(($14 + [208]), $13)
	CALL eosio_assert(((int_32)*($5 + [104]) == (int_32)($14 + [208])), [224])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [1088])
	if ( ((int_64)$4 == (int_64)2) ){ goto $label$12 }
	if ( ((int_64)$4 != (int_64)1) ){ goto $label$5 }
	$11 = [0]
	*((($14 + [168]) + [32])) = [0]
	*($14 + [184]) = (int_64)-1
	*($14 + [192]) = (int_64)0
	$12 = *($0)
	*($14 + [168]) = $12
	*($14 + [176]) = $12
	*($14 + [204]) = [0]
	$10 = [0]
	$13 = CALL db_find_i64($12, $12, (int_64)4157012474184204288, *($5 + [8]))
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$13 }
	$10 = CALL $17(($14 + [168]), $13)
	CALL eosio_assert(((int_32)*($10 + [40]) == (int_32)($14 + [168])), [224])
	
.LABEL $label$13
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [1024])
	*((($14 + [120]) + [32])) = [0]
	*($14 + [136]) = (int_64)-1
	*($14 + [144]) = (int_64)0
	$12 = *($0)
	*($14 + [120]) = $12
	*($14 + [128]) = $2
	*(($14 + [160])) = [0]
	*($14 + [156]) = [0]
	$13 = CALL db_find_i64($12, $2, (int_64)4520852774463733760, $3)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$14 }
	$11 = CALL $34(($14 + [120]), $13)
	CALL eosio_assert(((int_32)*($11 + [72]) == (int_32)($14 + [120])), [224])
	
.LABEL $label$14
	$5 = ((int_32)$11 != (int_32)[0])
	CALL eosio_assert($5, [1744])
	CALL eosio_assert(((int_64)*($11 + [16]) == (int_64)$1), [1776])
	$6 = *($0)
	$12 = (int_64)0
	$2 = (int_64)59
	$13 = [1152]
	$4 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$20 }
	$8 = *($13)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$8 = ($8 + [165])
	goto $label$18 
	
.LABEL $label$20
	$1 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$16
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$4 = ((int_64)$1 | (int_64)$4)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$15 }
	*($14 + [72]) = $4
	*($14 + [64]) = $6
	$6 = *($10 + [8])
	$12 = (int_64)0
	$2 = (int_64)59
	$13 = [1168]
	$4 = (int_64)0
	
.LOOP $label$21:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$26 }
	$8 = *($13)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$8 = ($8 + [165])
	goto $label$24 
	
.LABEL $label$26
	$1 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$23
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$22
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$4 = ((int_64)$1 | (int_64)$4)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$21 }
	CALL $141($14, [1808], ($10 + [24]))
	$12 = *(($11 + [16]))
	*((($14 + [16]) + [24])) = *(($11 + [40]))
	*(($14 + [36])) = *(($11 + [36]))
	*(($14 + [44])) = *(($11 + [44]))
	*($14 + [16]) = *($0)
	*($14 + [24]) = $12
	*($14 + [32]) = *($11 + [32])
	*((($14 + [16]) + [36])) = *($14 + [4 align=4])
	*($14 + [48]) = *($14)
	*($14) = [0]
	*($14 + [4]) = [0]
	*(($14 + [8])) = [0]
	$13 = CALL $35(($14 + [80]), ($14 + [64]), $6, $4, ($14 + [16]))
	CALL $36(($14 + [256]), $13)
	$8 = *($14 + [256])
	CALL send_inline($8, (*($14 + [260]) - $8))
	$8 = *($14 + [256])
	if ( ($8 == 0) ){ goto $label$27 }
	*($14 + [260]) = $8
	CALL $130($8)
	
.LABEL $label$27
	$8 = *($13 + [28])
	if ( ($8 == 0) ){ goto $label$28 }
	*(($13 + [32])) = $8
	CALL $130($8)
	
.LABEL $label$28
	$8 = *($13 + [16])
	if ( ($8 == 0) ){ goto $label$29 }
	*(($13 + [20])) = $8
	CALL $130($8)
	
.LABEL $label$29
	if ( ((*(($14 + [48])) & [1]) == 0) ){ goto $label$30 }
	CALL $130(*(($14 + [56])))
	
.LABEL $label$30
	if ( ((*($14) & [1]) == 0) ){ goto $label$31 }
	CALL $130(*(($14 + [8])))
	
.LABEL $label$31
	*($14 + [32]) = (int_64)-1
	*($14 + [40]) = [0]
	$12 = *($0)
	*($14 + [16]) = $12
	$1 = *(($11 + [16]))
	*($14 + [24]) = $1
	*(($14 + [44])) = [0]
	*(($14 + [48])) = [0]
	*($14 + [52]) = [0]
	$13 = CALL db_find_i64($12, $1, (int_64)-3317487864618549248, $3)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$32 }
	$13 = CALL $37(($14 + [16]), $13)
	CALL eosio_assert(((int_32)*($13 + [64]) == (int_32)($14 + [16])), [224])
	CALL eosio_assert([1], [384])
	CALL eosio_assert([1], [432])
	$8 = CALL db_next_i64(*($13 + [68]), ($14 + [80]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$33 }
	CALL $37(($14 + [16]), $8)
	
.LABEL $label$33
	CALL $38(($14 + [16]), $13)
	
.LABEL $label$32
	CALL eosio_assert($5, [384])
	CALL eosio_assert($5, [432])
	$13 = CALL db_next_i64(*($11 + [76]), ($14 + [80]))
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$34 }
	CALL $34(($14 + [120]), $13)
	
.LABEL $label$34
	CALL $39(($14 + [120]), $11)
	$0 = *($14 + [40])
	if ( ($0 == 0) ){ goto $label$9 }
	$5 = ($14 + [44])
	$13 = *($5)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$11 }
	
.LOOP $label$35:
	$13 = ($13 + [-24])
	$8 = *($13)
	*($13) = [0]
	if ( ($8 == 0) ){ goto $label$36 }
	CALL $130($8)
	
.LABEL $label$36
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$35 }
	$13 = *(($14 + [40]))
	goto $label$10 
	
.LABEL $label$12
	*(($14 + [152])) = [0]
	*($14 + [136]) = (int_64)-1
	$12 = (int_64)0
	*($14 + [144]) = (int_64)0
	$4 = *($0)
	*($14 + [120]) = $4
	*($14 + [128]) = $2
	*(($14 + [160])) = [0]
	*($14 + [156]) = [0]
	$11 = [0]
	$13 = CALL db_find_i64($4, $2, (int_64)-4421661421696319488, $3)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$37 }
	$11 = CALL $40(($14 + [120]), $13)
	CALL eosio_assert(((int_32)*($11 + [72]) == (int_32)($14 + [120])), [224])
	
.LABEL $label$37
	$10 = ((int_32)$11 != (int_32)[0])
	CALL eosio_assert($10, [1744])
	CALL eosio_assert(((int_64)*($11 + [16]) == (int_64)$1), [1776])
	$6 = *($0)
	$2 = (int_64)59
	$13 = [1152]
	$4 = (int_64)0
	
.LOOP $label$38:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$43 }
	$8 = *($13)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$8 = ($8 + [165])
	goto $label$41 
	
.LABEL $label$43
	$1 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$42
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$40
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$39
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$4 = ((int_64)$1 | (int_64)$4)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$38 }
	*($14 + [88]) = $4
	*($14 + [80]) = $6
	$6 = *($5 + [16])
	$12 = (int_64)0
	$2 = (int_64)59
	$13 = [1168]
	$4 = (int_64)0
	
.LOOP $label$44:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$49 }
	$8 = *($13)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$8 = ($8 + [165])
	goto $label$47 
	
.LABEL $label$49
	$1 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$48
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$46
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$45
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$4 = ((int_64)$1 | (int_64)$4)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$44 }
	*(($14 + [264])) = [0]
	*($14 + [256]) = (int_64)0
	$13 = CALL strlen([1808])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$2 }
	$7 = ($11 + [32])
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$52 }
	*($14 + [256]) = ($13 << [1])
	$8 = (($14 + [256]) | [1])
	if ( $13 ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$52
	$9 = (($13 + [16]) & [-16])
	$8 = CALL $128($9)
	*($14 + [256]) = ($9 | [1])
	*($14 + [264]) = $8
	*($14 + [260]) = $13
	
.LABEL $label$51
	CALL memcpy($8, [1808], $13)
	
.LABEL $label$50
	*(($8 + $13)) = [0]
	$13 = *($5 + [32])
	$8 = ($13 & [1])
	$13 = CALL $136(($14 + [256]), ( *(($5 + [40])) ? ($5 + [33]) : $8 ), ( *(($5 + [36])) ? uint_32($13 >> [1]) : $8 ))
	$8 = *($13)
	*($13) = [0]
	$5 = *($13 + [4])
	*($13 + [4]) = [0]
	$9 = *($13 + [8])
	*($13 + [8]) = [0]
	*($14 + [16]) = *($0)
	*($14 + [24]) = *(($11 + [16]))
	*(($14 + [40])) = *(($7 + [8]))
	$12 = *($7)
	*((($14 + [16]) + [36])) = $5
	*($14 + [32]) = $12
	*($14 + [48]) = $8
	*((($14 + [16]) + [40])) = $9
	$13 = CALL $35(($14 + [168]), ($14 + [80]), $6, $4, ($14 + [16]))
	CALL $36(($14 + [64]), $13)
	$8 = *($14 + [64])
	CALL send_inline($8, (*($14 + [68]) - $8))
	$8 = *($14 + [64])
	if ( ($8 == 0) ){ goto $label$53 }
	*($14 + [68]) = $8
	CALL $130($8)
	
.LABEL $label$53
	$8 = *($13 + [28])
	if ( ($8 == 0) ){ goto $label$54 }
	*(($13 + [32])) = $8
	CALL $130($8)
	
.LABEL $label$54
	$8 = *($13 + [16])
	if ( ($8 == 0) ){ goto $label$55 }
	*(($13 + [20])) = $8
	CALL $130($8)
	
.LABEL $label$55
	if ( ((*($14 + [48]) & [1]) == 0) ){ goto $label$56 }
	CALL $130(*(($14 + [56])))
	
.LABEL $label$56
	if ( ((*($14 + [256]) & [1]) == 0) ){ goto $label$57 }
	CALL $130(*($14 + [264]))
	
.LABEL $label$57
	*($14 + [32]) = (int_64)-1
	*($14 + [40]) = [0]
	$12 = *($0)
	*($14 + [16]) = $12
	$1 = *(($11 + [16]))
	*($14 + [24]) = $1
	*(($14 + [44])) = [0]
	*(($14 + [48])) = [0]
	*($14 + [52]) = [0]
	$13 = CALL db_find_i64($12, $1, (int_64)-3020480680945127424, $3)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$58 }
	$13 = CALL $41(($14 + [16]), $13)
	CALL eosio_assert(((int_32)*($13 + [64]) == (int_32)($14 + [16])), [224])
	CALL eosio_assert([1], [384])
	CALL eosio_assert([1], [432])
	$8 = CALL db_next_i64(*($13 + [68]), ($14 + [168]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$59 }
	CALL $41(($14 + [16]), $8)
	
.LABEL $label$59
	CALL $42(($14 + [16]), $13)
	
.LABEL $label$58
	CALL eosio_assert($10, [384])
	CALL eosio_assert($10, [432])
	$13 = CALL db_next_i64(*($11 + [76]), ($14 + [168]))
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$60 }
	CALL $40(($14 + [120]), $13)
	
.LABEL $label$60
	CALL $43(($14 + [120]), $11)
	$0 = *($14 + [40])
	if ( ($0 == 0) ){ goto $label$6 }
	$5 = ($14 + [44])
	$13 = *($5)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$8 }
	
.LOOP $label$61:
	$13 = ($13 + [-24])
	$8 = *($13)
	*($13) = [0]
	if ( ($8 == 0) ){ goto $label$62 }
	CALL $130($8)
	
.LABEL $label$62
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$61 }
	$13 = *(($14 + [40]))
	goto $label$7 
	
.LABEL $label$11
	$13 = $0
	
.LABEL $label$10
	*($5) = $0
	CALL $130($13)
	
.LABEL $label$9
	$0 = *($14 + [144])
	if ( ($0 == 0) ){ goto $label$63 }
	$5 = ($14 + [148])
	$13 = *($5)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$65 }
	
.LOOP $label$66:
	$13 = ($13 + [-24])
	$8 = *($13)
	*($13) = [0]
	if ( ($8 == 0) ){ goto $label$67 }
	CALL $130($8)
	
.LABEL $label$67
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$66 }
	$13 = *(($14 + [144]))
	goto $label$64 
	
.LABEL $label$65
	$13 = $0
	
.LABEL $label$64
	*($5) = $0
	CALL $130($13)
	
.LABEL $label$63
	$0 = *($14 + [192])
	if ( ($0 == 0) ){ goto $label$5 }
	$5 = ($14 + [196])
	$13 = *($5)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$69 }
	
.LOOP $label$70:
	$13 = ($13 + [-24])
	$8 = *($13)
	*($13) = [0]
	if ( ($8 == 0) ){ goto $label$71 }
	if ( ((*($8 + [24]) & [1]) == 0) ){ goto $label$72 }
	CALL $130(*(($8 + [32])))
	
.LABEL $label$72
	CALL $130($8)
	
.LABEL $label$71
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$70 }
	$13 = *(($14 + [192]))
	goto $label$68 
	
.LABEL $label$69
	$13 = $0
	
.LABEL $label$68
	*($5) = $0
	CALL $130($13)
	$0 = *($14 + [232])
	if ( $0 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$8
	$13 = $0
	
.LABEL $label$7
	*($5) = $0
	CALL $130($13)
	
.LABEL $label$6
	$0 = *($14 + [144])
	if ( ($0 == 0) ){ goto $label$5 }
	$5 = ($14 + [148])
	$13 = *($5)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$74 }
	
.LOOP $label$75:
	$13 = ($13 + [-24])
	$8 = *($13)
	*($13) = [0]
	if ( ($8 == 0) ){ goto $label$76 }
	CALL $130($8)
	
.LABEL $label$76
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$75 }
	$13 = *(($14 + [144]))
	goto $label$73 
	
.LABEL $label$74
	$13 = $0
	
.LABEL $label$73
	*($5) = $0
	CALL $130($13)
	
.LABEL $label$5
	$0 = *($14 + [232])
	if ( ($0 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = ($14 + [236])
	$13 = *($5)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$78 }
	
.LOOP $label$79:
	$13 = ($13 + [-24])
	$8 = *($13)
	*($13) = [0]
	if ( ($8 == 0) ){ goto $label$80 }
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$81 }
	CALL $130(*(($8 + [40])))
	
.LABEL $label$81
	CALL $130($8)
	
.LABEL $label$80
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$79 }
	$13 = *(($14 + [232]))
	goto $label$77 
	
.LABEL $label$78
	$13 = $0
	
.LABEL $label$77
	*($5) = $0
	CALL $130($13)
	
.LABEL $label$3
	*([0] + [4]) = ($14 + [272])
	return (unreachable)
	
.LABEL $label$2
	CALL $132(($14 + [256]))
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = (*([0] + [4]) - [32])
	$9 = $4
	*([0] + [4]) = $4
	$7 = *($0 + [4])
	*($1) = *(*($7))
	*($1 + [8]) = *(*($7 + [4]))
	$2 = *($0)
	*($1 + [16]) = *(*($7 + [8]))
	*($1 + [24]) = (uint_64)*(*($7 + [12]) + [8]) >> (uint_64)(int_64)8)
	CALL $133(($1 + [32]), *($7 + [16]))
	*($1 + [44]) = *(*($7 + [12]) + [8])
	*($1 + [48]) = *(*($7 + [20]))
	*($1 + [56]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000)
	$7 = *($7 + [24])
	*($1 + [64]) = *($7)
	*(($1 + [72])) = *(($7 + [8]))
	$7 = *($1 + [32])
	$3 = ( *(($1 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($3 + [89])
	$8 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($7)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	*($9 + [12]) = $4
	*($9 + [8]) = $4
	*($9 + [16]) = ($4 + $7)
	CALL $68(($9 + [8]), $1)
	$8 = *($1)
	*($1 + [108]) = CALL db_store_i64(*($2 + [8]), (int_64)-3665743365212864512, *(*($0 + [8])), $8, $4, $7)
	if ( ($7 <= [513]) ){ goto $label$4 }
	CALL free($4)
	
.LABEL $label$4
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$5 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$7 = ($2 + [8])
	$8 = *($7)
	$4 = *(($0 + [8]))
	$5 = *($4)
	$6 = *($1)
	*($9 + [24]) = *(($1 + [8]))
	*($1 + [112]) = CALL db_idx64_store($8, (int_64)-3665743365212864512, $5, $6, ($9 + [24]))
	$8 = *($4)
	$5 = *($7)
	$6 = *($1)
	*($9 + [24]) = *(($1 + [16]))
	*(($1 + [116])) = CALL db_idx64_store($5, (int_64)-3665743365212864511, $8, $6, ($9 + [24]))
	$8 = *($4)
	$5 = *($7)
	$6 = *($1)
	*($9 + [24]) = *(($1 + [24]))
	*(($1 + [120])) = CALL db_idx64_store($5, (int_64)-3665743365212864510, $8, $6, ($9 + [24]))
	$8 = *($4)
	$5 = *($7)
	$6 = *($1)
	*($9 + [24]) = *(($1 + [48]))
	*(($1 + [124])) = CALL db_idx64_store($5, (int_64)-3665743365212864509, $8, $6, ($9 + [24]))
	$8 = *($4)
	$5 = *($7)
	$6 = *($1)
	*($9 + [24]) = *(($1 + [56]))
	*(($1 + [128])) = CALL db_idx64_store($5, (int_64)-3665743365212864508, $8, $6, ($9 + [24]))
	$8 = *($4)
	$5 = *($7)
	$6 = *($1)
	*($9 + [24]) = *($1 + [80])
	*(($1 + [132])) = CALL db_idx_double_store($5, (int_64)-3665743365212864507, $8, $6, ($9 + [24]))
	$8 = *($4)
	$5 = *($7)
	$6 = *($1)
	*($9 + [24]) = *($1 + [88])
	*(($1 + [136])) = CALL db_idx_double_store($5, (int_64)-3665743365212864506, $8, $6, ($9 + [24]))
	$8 = *($4)
	$5 = *($7)
	$6 = *($1)
	*($9 + [24]) = *($1 + [96])
	*(($1 + [140])) = CALL db_idx64_store($5, (int_64)-3665743365212864505, $8, $6, ($9 + [24]))
	*([0] + [4]) = ($9 + [32])
}

void .FUNC _ZN5eosio8exchange3buyEyyyydNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, float_64 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	float_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	int_32 $41
	int_32 $42
	int_32 $43
	int_32 $44
	int_32 $45
	int_32 $46
	int_32 $47
	int_32 $48
	int_32 $49
	int_32 $50
	int_32 $51
	int_32 $52
	int_32 $53
	int_32 $54
	int_32 $55
	int_32 $56
	int_32 $57
	int_32 $58
	int_32 $59
	int_32 $60
	int_32 $61
	int_32 $62
	int_32 $63
	int_32 $64
	int_32 $65
	int_64 $66
	int_32 $67
	int_32 $68
	int_64 $69
	int_32 $70
	float_64 $71
	int_32 $72
	int_32 $73
	int_64 $74
	int_32 $75
	int_32 $76
	int_32 $77
	int_32 $78
	int_32 $79
	int_32 $80
	int_32 $81
	int_32 $82
	int_32 $83
	int_32 $84
	int_32 $85
	int_32 $86
	int_32 $87
	int_32 $88
	int_32 $89
	int_32 $90
	int_32 $91
	int_32 $92
	int_32 $93
	int_32 $94
	int_32 $95
	int_32 $96
	int_32 $97
	int_32 $98
	int_32 $99
	int_32 $100
	int_32 $101
	int_32 $102
	int_32 $103
	int_32 $104
	int_32 $105
	int_32 $106
	int_32 $107
	int_32 $108
	int_32 $109
	int_32 $110
	int_32 $111
	int_32 $112
	int_32 $113
	int_32 $114
	int_32 $115
	int_32 $116
	int_32 $117
	int_32 $118
	int_32 $119
	int_32 $120
	int_32 $121
	int_32 $122
	int_32 $123
	int_32 $124
	int_32 $125
	int_32 $126
	int_32 $127
	int_32 $128
	int_32 $129
	int_32 $130
	int_32 $131
	int_32 $132
	int_32 $133
	int_32 $134
	int_32 $135
	int_32 $136
	int_32 $137
	int_32 $138
	int_64 $139
	int_64 $140
	int_32 $141
	int_32 $142
	$142 = (*([0] + [4]) - [1376])
	*([0] + [4]) = $142
	CALL eosio_assert(CALL $fimport$40($1), [1712])
	$67 = [0]
	*(($142 + [1240])) = [0]
	*($142 + [1224]) = (int_64)-1
	*($142 + [1232]) = (int_64)0
	$139 = *($0)
	*($142 + [1208]) = $139
	*($142 + [1216]) = $139
	*($142 + [1244]) = [0]
	*($142 + [1200]) = ($142 + [1208])
	$139 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($142 + [1144]) = $139)
	CALL $13(($142 + [1248]), ($142 + [1200]), ($142 + [1144]))
	$138 = *($142 + [1252])
	if ( ($138 == 0) ){ goto $label$3 }
	if ( ((int_64)*($142 + [1144]) != (int_64)*($138 + [16])) ){ goto $label$3 }
	$140 = *($142 + [1248])
	*($142 + [1192]) = $140
	$11 = (($142 + [1192]) | [4])
	$67 = [0]
	$138 = (CASTING uint_32)(uint_64 (uint_64)$140 >> (uint_64)(int_64)32)
	if ( ($138) == 0) ){ goto $label$1 }
	
.LOOP $label$4:
	if ( ((int_64)*($138 + [16]) != (int_64)$139) ){ goto $label$5 }
	if ( ((int_64)*($138 + [8]) == (int_64)$3) ){ goto $label$2 }
	
.LABEL $label$5
	CALL $14(($142 + [1192]))
	$138 = *($142 + [1196])
	if ( $138 ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	*($142 + [1196]) = [0]
	*($142 + [1192]) = ($142 + [1200])
	$11 = (($142 + [1192]) | [4])
	goto $label$1 
	
.LABEL $label$2
	$67 = [1]
	
.LABEL $label$1
	CALL eosio_assert($67, [1024])
	$8 = *($11)
	$67 = [0]
	*(($142 + [1176])) = [0]
	*($142 + [1160]) = (int_64)-1
	*($142 + [1168]) = (int_64)0
	$3 = *($0)
	*($142 + [1144]) = $3
	*($142 + [1152]) = $3
	*($142 + [1180 align=4]) = (int_64)0
	$9 = [0]
	$138 = CALL db_find_i64($3, $3, (int_64)-3665743365212864512, $4)
	if ( ((int_32)$138 < (int_32)[0]) ){ goto $label$6 }
	$9 = CALL $33(($142 + [1144]), $138)
	CALL eosio_assert(((int_32)*($9 + [104]) == (int_32)($142 + [1144])), [224])
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [1088])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)*($8)), [2176])
	CALL eosio_assert(((float_64)$5 > (float_64)(float_64)0), [2192])
	$3 = *($6)
	if ( ((uint_64)((int_64)$3 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$138 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $139) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$139 = (uint_64)$139 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$139) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$139 = (uint_64)$139 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$139) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$138 = ($138 + [1])
	if ( ((int_32)$138 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$67 = [1]
	$138 = ($138 + [1])
	if ( ((int_32)$138 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$67 = [0]
	
.LABEL $label$7
	CALL eosio_assert($67, [2224])
	CALL eosio_assert(((int_64)$3 > (int_64)99), [2256])
	$67 = *($8 + [36])
	$138 = *($9 + [44])
	if ( ((uint_32)$138 <= (uint_32)$67) ){ goto $label$13 }
	$67 = ($138 - $67)
	$138 = [0]
	$10 = (float_64)1
	
.LOOP $label$14:
	$10 = ((float_64)$10 * (float_64)(float_64)10)
	$138 = ($138 + [1])
	if ( ((int_32)$138 < (int_32)$67) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$10 = (float_64)1
	if ( ((uint_32)$138 >= (uint_32)$67) ){ goto $label$12 }
	$67 = ($67 - $138)
	$138 = [0]
	$10 = (float_64)1
	
.LOOP $label$15:
	$10 = ((float_64)$10 / (float_64)(float_64)10)
	$138 = ($138 + [1])
	if ( ((int_32)$138 < (int_32)$67) ){ goto $label$15 }
	
.LABEL $label$12
	$138 = [0]
	*((($142 + [1096]) + [32])) = [0]
	*($142 + [1112]) = (int_64)-1
	*($142 + [1120]) = (int_64)0
	$139 = *($0)
	*($142 + [1096]) = $139
	*($142 + [1104]) = $4
	*((($142 + [1096]) + [40])) = [0]
	*($142 + [1132]) = [0]
	$67 = CALL db_find_i64($139, $4, (int_64)4520852774463733760, $2)
	if ( ((int_32)$67 < (int_32)[0]) ){ goto $label$16 }
	$138 = CALL $34(($142 + [1096]), $67)
	CALL eosio_assert(((int_32)*($138 + [72]) == (int_32)($142 + [1096])), [224])
	
.LABEL $label$16
	CALL eosio_assert(($138 == 0), [2304])
	$139 = *($0)
	CALL eosio_assert(((int_64)*($142 + [1096]) == (int_64)CALL $fimport$13()), [144])
	$11 = CALL $128([104])
	$12 = CALL $60($11)
	*($11 + [72]) = ($142 + [1096])
	*(($67 = ($11 + [8]))) = $4
	*($11) = $2
	*(($114 = ($11 + [16]))) = $1
	*(($122 = ($11 + [24]))) = $5
	*(($11 + [44])) = *(($6 + [12]))
	$138 = ($6 + [8])
	*(($11 + [40])) = *($138)
	*(($11 + [36])) = *(($6 + [4]))
	*(($13 = ($11 + [32]))) = *($6)
	*(($11 + [56])) = *($138)
	*($11 + [48]) = *($6)
	*(($6 = ($11 + [64]))) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000)
	$14 = (($142 + [1248]) + [72])
	*($142 + [1016]) = $14
	*($142 + [1012]) = ($142 + [1248])
	*($142 + [1008]) = ($142 + [1248])
	CALL $78(($142 + [1008]), $12)
	$3 = *($11)
	$138 = (($142 + [1096]) + [8])
	*($11 + [76]) = CALL db_store_i64(*($138), (int_64)4520852774463733760, $139, $3, ($142 + [1248]), [72])
	$68 = (($142 + [1096]) + [16])
	if ( (uint_64)($3 <= *($68)) ){ goto $label$17 }
	*($68) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	$3 = *($11)
	$2 = *($138)
	*($142 + [1320]) = *($67)
	*($11 + [80]) = CALL db_idx64_store($2, (int_64)4520852774463733760, $139, $3, ($142 + [1320]))
	$3 = *($11)
	$2 = *($138)
	*($142 + [1320]) = *($114)
	*($11 + [84]) = CALL db_idx64_store($2, (int_64)4520852774463733761, $139, $3, ($142 + [1320]))
	$3 = *($11)
	$2 = *($138)
	*($142 + [1320]) = *($122)
	*($11 + [88]) = CALL db_idx_double_store($2, (int_64)4520852774463733762, $139, $3, ($142 + [1320]))
	$3 = *($11)
	$2 = *($138)
	*($142 + [1320]) = *(($11 + [32]))
	*($11 + [92]) = CALL db_idx64_store($2, (int_64)4520852774463733763, $139, $3, ($142 + [1320]))
	$3 = *($11)
	$2 = *($138)
	*($142 + [1320]) = *($6)
	*($11 + [96]) = CALL db_idx64_store($2, (int_64)4520852774463733764, $139, $3, ($142 + [1320]))
	*($142 + [1008]) = $11
	$139 = *($11)
	*($142 + [1248]) = $139
	$67 = *(($11 + [76]))
	*($142 + [1320]) = $67
	$6 = ($142 + [1124])
	$138 = *($6)
	if ( ((uint_32)$138 >= (uint_32)*((($142 + [1096]) + [32]))) ){ goto $label$19 }
	*($138 + [8]) = $139
	*($138 + [16]) = $67
	*($142 + [1008]) = [0]
	*($138) = $11
	*($6) = ($138 + [24])
	goto $label$18 
	
.LABEL $label$19
	CALL $62(($142 + [1120]), ($142 + [1008]), ($142 + [1248]), ($142 + [1320]))
	
.LABEL $label$18
	$138 = *($142 + [1008])
	$6 = [0]
	*($142 + [1008]) = [0]
	if ( ($138 == 0) ){ goto $label$20 }
	CALL $130($138)
	
.LABEL $label$20
	$67 = ($11 + [48])
	*($142 + [1072]) = (int_64)-1
	*($142 + [1080]) = [0]
	$139 = *($0)
	*($142 + [1056]) = $139
	$3 = *(($11 + [16]))
	*($142 + [1064]) = $3
	*(($142 + [1084])) = [0]
	*((($142 + [1056]) + [32])) = [0]
	*($142 + [1092]) = [0]
	$138 = CALL db_find_i64($139, $3, (int_64)-3317487864618549248, *($11))
	if ( ((int_32)$138 < (int_32)[0]) ){ goto $label$21 }
	$6 = CALL $37(($142 + [1056]), $138)
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)($142 + [1056])), [224])
	
.LABEL $label$21
	CALL eosio_assert(($6 == 0), [2304])
	$139 = *($0)
	CALL eosio_assert(((int_64)*($142 + [1056]) == (int_64)CALL $fimport$13()), [144])
	$138 = CALL $128([80])
	$6 = CALL $54($138)
	*($138 + [64]) = ($142 + [1056])
	*($138) = *($11)
	*($138 + [8]) = *(($11 + [8]))
	*($138 + [16]) = *(($11 + [24]))
	*(($138 + [36])) = *(($13 + [12]))
	*(($138 + [32])) = *(($13 + [8]))
	*($138 + [24]) = *($13)
	*(($138 + [48])) = *(($67 + [8]))
	*($138 + [40]) = *($67)
	*($138 + [56]) = *(($11 + [64]))
	*($142 + [1016]) = (($142 + [1248]) + [64])
	*($142 + [1012]) = ($142 + [1248])
	*($142 + [1008]) = ($142 + [1248])
	CALL $79(($142 + [1008]), $6)
	$3 = *($138)
	$67 = (($142 + [1056]) + [8])
	*($138 + [68]) = CALL db_store_i64(*($67), (int_64)-3317487864618549248, $139, $3, ($142 + [1248]), [64])
	if ( (uint_64)($3 <= *((($142 + [1056]) + [16]))) ){ goto $label$22 }
	*(($142 + [1072])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	$3 = *($138)
	$2 = *($67)
	*($142 + [1320]) = *(($138 + [8]))
	*($138 + [72]) = CALL db_idx64_store($2, (int_64)-3317487864618549248, $139, $3, ($142 + [1320]))
	*($142 + [1008]) = $138
	$139 = *($138)
	*($142 + [1248]) = $139
	$6 = *(($138 + [68]))
	*($142 + [1320]) = $6
	$114 = ($142 + [1084])
	$67 = *($114)
	if ( ((uint_32)$67 >= (uint_32)*(($142 + [1088]))) ){ goto $label$24 }
	*($67 + [8]) = $139
	*($67 + [16]) = $6
	*($142 + [1008]) = [0]
	*($67) = $138
	*($114) = ($67 + [24])
	goto $label$23 
	
.LABEL $label$24
	CALL $56(($142 + [1080]), ($142 + [1008]), ($142 + [1248]), ($142 + [1320]))
	
.LABEL $label$23
	$138 = *($142 + [1008])
	*($142 + [1008]) = [0]
	if ( ($138 == 0) ){ goto $label$25 }
	CALL $130($138)
	
.LABEL $label$25
	*(($142 + [1040])) = [0]
	*($142 + [1016]) = $4
	*($142 + [1024]) = (int_64)-1
	*($142 + [1032]) = (int_64)0
	*($142 + [1008]) = *($0)
	*(($142 + [1048])) = [0]
	*($142 + [1044]) = [0]
	*($142 + [1000]) = ($142 + [1008])
	*($142 + [1248]) = (int_64)-4503599627370497
	CALL $80(($142 + [992]), ($142 + [1000]), ($142 + [1248]))
	$67 = *($7)
	$138 = ($67 & [1])
	if ( $138 ){ goto $label$31 }
	if ( uint_32($67 >> [1]) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	if ( (*($7 + [4]) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	if ( $138 ){ goto $label$28 }
	$138 = ($7 + [1])
	goto $label$27 
	
.LABEL $label$29
	$16 = [0]
	$15 = (int_64)0
	goto $label$26 
	
.LABEL $label$28
	$138 = *($7 + [8])
	
.LABEL $label$27
	$67 = [-1]
	
.LOOP $label$32:
	$6 = ($138 + $67)
	$7 = ($67 + [1])
	$67 = $7
	if ( *(($6 + [1])) ){ goto $label$32 }
	$140 = (CASTING uint_64)(uint_32 $7)
	$139 = (int_64)0
	$3 = (int_64)59
	$15 = (int_64)0
	
.LOOP $label$33:
	$2 = (int_64)0
	if ( ((uint_64)$139 >= (uint_64)$140) ){ goto $label$34 }
	$67 = *($138)
	if ( ((uint_32)(($67 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$36 }
	$67 = ($67 + [165])
	goto $label$35 
	
.LABEL $label$36
	$67 = ( ($67 + [208]) ? [0] : ((($67 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$35
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $67) << (int_64)56) >> (int_64)56)
	
.LABEL $label$34
	if ( ((uint_64)$139 > (uint_64)(int_64)11) ){ goto $label$38 }
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$3 & (int_64)4294967295))
	goto $label$37 
	
.LABEL $label$38
	$2 = ((int_64)$2 & (int_64)15)
	
.LABEL $label$37
	$138 = ($138 + [1])
	$139 = ((int_64)$139 + (int_64)1)
	$15 = ((int_64)$2 | (int_64)$15)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$33 }
	$16 = CALL is_account($15)
	
.LABEL $label$26
	$70 = ($11 + [24])
	$71 = *($70)
	$5 = *(*($142 + [996]) + [24])
	if ( (((float_64)$5 > (float_64)$71) | (((float_64)$5 != (float_64)$5) | ((float_64)$71 != (float_64)$71))) ){ goto $label$71 }
	$20 = (uint_64)(int_64)1397703936 >> (uint_64)(int_64)8)
	$65 = (($142 + [1248]) + [32])
	$64 = (($142 + [1248]) + [16])
	$63 = (($142 + [88]) | [1])
	$62 = (($142 + [104]) | [1])
	$61 = (($142 + [120]) | [1])
	$60 = (($142 + [136]) | [1])
	$59 = (($142 + [152]) | [1])
	$58 = (($142 + [168]) | [1])
	$57 = (($142 + [184]) | [1])
	$56 = (($142 + [216]) | [1])
	$55 = (($142 + [232]) | [1])
	$54 = (($142 + [248]) | [1])
	$53 = (($142 + [264]) | [1])
	$52 = (($142 + [280]) | [1])
	$51 = (($142 + [296]) | [1])
	$50 = (($142 + [312]) | [1])
	$49 = (($142 + [328]) | [1])
	$48 = (($142 + [344]) | [1])
	$47 = (($142 + [360]) | [1])
	$46 = (($142 + [376]) | [1])
	$45 = (($142 + [392]) | [1])
	$44 = (($142 + [408]) | [1])
	$43 = (($142 + [424]) | [1])
	$42 = (($142 + [440]) | [1])
	$41 = (($142 + [456]) | [1])
	$40 = (($142 + [472]) | [1])
	$39 = (($142 + [488]) | [1])
	$38 = (($142 + [504]) | [1])
	$37 = (($142 + [520]) | [1])
	$36 = (($142 + [232]) | [1])
	$35 = (($142 + [248]) | [1])
	$34 = (($142 + [280]) | [1])
	$33 = (($142 + [312]) | [1])
	$32 = (($142 + [328]) | [1])
	$31 = (($142 + [360]) | [1])
	$30 = (($142 + [392]) | [1])
	$29 = (($142 + [408]) | [1])
	$28 = (($142 + [440]) | [1])
	$27 = (($142 + [472]) | [1])
	$26 = (($142 + [504]) | [1])
	$25 = (($142 + [520]) | [1])
	$24 = (($142 + [536]) | [1])
	$23 = (($142 + [552]) | [1])
	$22 = (($142 + [568]) | [1])
	$21 = (($142 + [584]) | [1])
	$19 = (($142 + [1320]) + [16])
	$18 = (($142 + [1320]) + [32])
	$17 = (($142 + [1320]) + [24])
	$6 = (($142 + [1320]) + [8])
	$138 = *($142 + [996])
	$77 = ($11 + [76])
	$82 = ($13 + [4])
	$134 = ($142 + [1348])
	$136 = ($9 + [96])
	$135 = ($142 + [1340])
	$137 = ($9 + [48])
	$81 = ($11 + [92])
	$80 = ($11 + [88])
	$79 = ($11 + [84])
	$78 = ($11 + [80])
	
.LOOP $label$72:
	if ( ((int_64)*($13) < (int_64)1) ){ goto $label$71 }
	if ( ($138 == 0) ){ goto $label$71 }
	*($142 + [984]) = *($138 + [24])
	$3 = *(($138 + [40]))
	*(($72 = (($142 + [968]) + [8]))) = $3
	*($142 + [968]) = (int_64)0
	CALL eosio_assert([1], [960])
	$139 = (uint_64)$3 >> (uint_64)(int_64)8)
	$138 = [0]
	
.LOOP $label$75:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $139) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$74 }
	$139 = (uint_64)$139 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$139) & (int_64)255) != (int_64)0) ){ goto $label$76 }
	
.LOOP $label$77:
	$139 = (uint_64)$139 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$139) & (int_64)255) != (int_64)0) ){ goto $label$74 }
	$138 = ($138 + [1])
	if ( ((int_32)$138 < (int_32)[7]) ){ goto $label$77 }
	
.LABEL $label$76
	$67 = [1]
	$138 = ($138 + [1])
	if ( ((int_32)$138 < (int_32)[7]) ){ goto $label$75 }
	goto $label$73 
	
.LABEL $label$74
	$67 = [0]
	
.LABEL $label$73
	CALL eosio_assert($67, [672])
	$114 = ($11 + [40])
	$2 = *($114)
	*(($73 = (($142 + [952]) + [8]))) = $2
	*($142 + [952]) = (int_64)0
	CALL eosio_assert([1], [960])
	$139 = (uint_64)$2 >> (uint_64)(int_64)8)
	$138 = [0]
	
.LOOP $label$80:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $139) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$79 }
	$139 = (uint_64)$139 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$139) & (int_64)255) != (int_64)0) ){ goto $label$81 }
	
.LOOP $label$82:
	$139 = (uint_64)$139 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$139) & (int_64)255) != (int_64)0) ){ goto $label$79 }
	$138 = ($138 + [1])
	if ( ((int_32)$138 < (int_32)[7]) ){ goto $label$82 }
	
.LABEL $label$81
	$67 = [1]
	$138 = ($138 + [1])
	if ( ((int_32)$138 < (int_32)[7]) ){ goto $label$80 }
	goto $label$78 
	
.LABEL $label$79
	$67 = [0]
	
.LABEL $label$78
	CALL eosio_assert($67, [672])
	$139 = *($114)
	$66 = (Rounds 0)(((float_64)*($142 + [984]) * (float_64)((float_64)(CASTING float_64)(int_64 *(*($142 + [996]) + [32])) / (float_64)$10)))
	CALL eosio_assert((uint_64)(((int_64)$66 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [960])
	$139 = (uint_64)$139 >> (uint_64)(int_64)8)
	$138 = [0]
	
.LOOP $label$85:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $139) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$84 }
	$139 = (uint_64)$139 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$139) & (int_64)255) != (int_64)0) ){ goto $label$86 }
	
.LOOP $label$87:
	$139 = (uint_64)$139 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$139) & (int_64)255) != (int_64)0) ){ goto $label$84 }
	$138 = ($138 + [1])
	if ( ((int_32)$138 < (int_32)[7]) ){ goto $label$87 }
	
.LABEL $label$86
	$67 = [1]
	$138 = ($138 + [1])
	if ( ((int_32)$138 < (int_32)[7]) ){ goto $label$85 }
	goto $label$83 
	
.LABEL $label$84
	$67 = [0]
	
.LABEL $label$83
	CALL eosio_assert($67, [672])
	$139 = *($13)
	if ( ((int_64)$66 >= (int_64)$139) ){ goto $label$89 }
	$138 = *($142 + [996])
	$140 = *($138 + [32])
	$139 = $66
	goto $label$88 
	
.LABEL $label$89
	$140 = (Rounds 0)(((float_64)((float_64)$10 * (float_64)(CASTING float_64)(int_64 $139)) / (float_64)*($142 + [984])))
	$138 = *($142 + [996])
	
.LABEL $label$88
	*($142 + [968]) = $140
	*($142 + [952]) = $139
	CALL eosio_assert(((int_32)$138 != (int_32)[0]), [1280])
	$67 = *($142 + [1000])
	CALL eosio_assert(((int_32)*($138 + [72]) == (int_32)$67), [1408])
	CALL eosio_assert(((int_64)*($67) == (int_64)CALL $fimport$13()), [1456])
	$122 = ($138 + [8])
	*($142 + [1320]) = *($122)
	$68 = ($138 + [64])
	$139 = *($68)
	$7 = ($138 + [32])
	$66 = *($7)
	$76 = ($138 + [24])
	$74 = *($76)
	$85 = ($138 + [16])
	*($6) = *($85)
	*($19) = $74
	*($17) = $66
	*($18) = $139
	$139 = *($138)
	CALL eosio_assert(((int_64)$3 == (int_64)*(($138 + [40]))), [2336])
	$3 = (int_64)
	*($7) = $3(*($7) - $140))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [2384])
	CALL eosio_assert(((int_64)*($7) < (int_64)4611686018427387904), [2416])
	CALL eosio_assert(((int_64)$139 == (int_64)*($138)), [1520])
	*(($75 = (($142 + [904]) + [8]))) = $14
	*($142 + [908]) = ($142 + [1248])
	*($142 + [904]) = ($142 + [1248])
	CALL $81(($142 + [904]), $138)
	CALL db_update_i64(*($138 + [76]), (int_64)0, ($142 + [1248]), [72])
	if ( (uint_64)($139 <= *($67 + [16])) ){ goto $label$90 }
	*(($67 + [16])) = ( (int_64)-2 ? ((int_64)$139 + (int_64)1) : ((uint_64)$139 > (uint_64)(int_64)-3) )
	
.LABEL $label$90
	*($142 + [72]) = *($122)
	if ( (CALL memcmp(($142 + [1320]), ($142 + [72]), [8]) == 0) ){ goto $label$91 }
	$89 = ($138 + [80])
	$122 = *($89)
	if ( ((int_32)$122 > (int_32)[-1]) ){ goto $label$92 }
	$122 = CALL db_idx64_find_primary(*($67), *($67 + [8]), (int_64)-4421661421696319488, ($142 + [1360]), $139)
	*($89) = $122
	
.LABEL $label$92
	CALL db_idx64_update($122, (int_64)0, ($142 + [72]))
	
.LABEL $label$91
	*($142 + [72]) = *($85)
	if ( (CALL memcmp($6, ($142 + [72]), [8]) == 0) ){ goto $label$93 }
	$85 = ($138 + [84])
	$122 = *($85)
	if ( ((int_32)$122 > (int_32)[-1]) ){ goto $label$94 }
	$122 = CALL db_idx64_find_primary(*($67), *($67 + [8]), (int_64)-4421661421696319487, ($142 + [1360]), $139)
	*($85) = $122
	
.LABEL $label$94
	CALL db_idx64_update($122, (int_64)0, ($142 + [72]))
	
.LABEL $label$93
	*($142 + [72]) = *($76)
	if ( (CALL memcmp($19, ($142 + [72]), [8]) == 0) ){ goto $label$95 }
	$76 = ($138 + [88])
	$122 = *($76)
	if ( ((int_32)$122 > (int_32)[-1]) ){ goto $label$96 }
	$122 = CALL db_idx_double_find_primary(*($67), *($67 + [8]), (int_64)-4421661421696319486, ($142 + [1360]), $139)
	*($76) = $122
	
.LABEL $label$96
	CALL db_idx_double_update($122, (int_64)0, ($142 + [72]))
	
.LABEL $label$95
	*($142 + [72]) = *($7)
	if ( (CALL memcmp($17, ($142 + [72]), [8]) == 0) ){ goto $label$97 }
	$122 = ($138 + [92])
	$7 = *($122)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$98 }
	$7 = CALL db_idx64_find_primary(*($67), *($67 + [8]), (int_64)-4421661421696319485, ($142 + [1360]), $139)
	*($122) = $7
	
.LABEL $label$98
	CALL db_idx64_update($7, (int_64)0, ($142 + [72]))
	
.LABEL $label$97
	*($142 + [72]) = *($68)
	if ( (CALL memcmp($18, ($142 + [72]), [8]) == 0) ){ goto $label$99 }
	$7 = ($138 + [96])
	$138 = *($7)
	if ( ((int_32)$138 > (int_32)[-1]) ){ goto $label$100 }
	$138 = CALL db_idx64_find_primary(*($67), *($67 + [8]), (int_64)-4421661421696319484, ($142 + [1360]), $139)
	*($7) = $138
	
.LABEL $label$100
	CALL db_idx64_update($138, (int_64)0, ($142 + [72]))
	
.LABEL $label$99
	$138 = *($142 + [996])
	$139 = *($138)
	*(($67 = (($142 + [936]) + [8]))) = *(($138 + [40]))
	*($142 + [936]) = *($138 + [32])
	*($142 + [940]) = *(($138 + [36]))
	$3 = *($138 + [16])
	*((($142 + [40]) + [8])) = *($67)
	*($142 + [40]) = *($142 + [936])
	CALL _ZN5eosio8exchange19adjust_u_sell_orderEyyNS_5assetE($0, $3, $139, ($142 + [40]))
	CALL eosio_assert([1], [1280])
	CALL eosio_assert(((int_32)*(($11 + [72])) == (int_32)($142 + [1096])), [1408])
	CALL eosio_assert(((int_64)*($142 + [1096]) == (int_64)CALL $fimport$13()), [1456])
	$67 = ($11 + [8])
	*($142 + [1320]) = *($67)
	$7 = ($11 + [64])
	$139 = *($7)
	$138 = ($11 + [32])
	$3 = *($138)
	$140 = *($70)
	$76 = ($11 + [16])
	*($6) = *($76)
	*($19) = $140
	*($17) = $3
	*($18) = $139
	$139 = *($11)
	CALL eosio_assert(((int_64)$2 == (int_64)*($114)), [2336])
	$66 = *($142 + [952])
	$3 = (int_64)
	*($138) = $3(*($138) - $66))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [2384])
	CALL eosio_assert(((int_64)*($138) < (int_64)4611686018427387904), [2416])
	CALL eosio_assert(((int_64)$139 == (int_64)*($11)), [1520])
	*($75) = $14
	*($142 + [908]) = ($142 + [1248])
	*($142 + [904]) = ($142 + [1248])
	CALL $78(($142 + [904]), $12)
	CALL db_update_i64(*($77), (int_64)0, ($142 + [1248]), [72])
	$138 = (($142 + [1096]) + [16])
	if ( (uint_64)($139 <= *($138)) ){ goto $label$101 }
	*($138) = ( (int_64)-2 ? ((int_64)$139 + (int_64)1) : ((uint_64)$139 > (uint_64)(int_64)-3) )
	
.LABEL $label$101
	*($142 + [72]) = *($67)
	if ( (CALL memcmp(($142 + [1320]), ($142 + [72]), [8]) == 0) ){ goto $label$102 }
	$138 = *($78)
	if ( ((int_32)$138 > (int_32)[-1]) ){ goto $label$103 }
	$138 = CALL db_idx64_find_primary(*($142 + [1096]), *((($142 + [1096]) + [8])), (int_64)4520852774463733760, ($142 + [1360]), $139)
	*($78) = $138
	
.LABEL $label$103
	CALL db_idx64_update($138, (int_64)0, ($142 + [72]))
	
.LABEL $label$102
	*($142 + [72]) = *($76)
	if ( (CALL memcmp($6, ($142 + [72]), [8]) == 0) ){ goto $label$104 }
	$138 = *($79)
	if ( ((int_32)$138 > (int_32)[-1]) ){ goto $label$105 }
	$138 = CALL db_idx64_find_primary(*($142 + [1096]), *((($142 + [1096]) + [8])), (int_64)4520852774463733761, ($142 + [1360]), $139)
	*($79) = $138
	
.LABEL $label$105
	CALL db_idx64_update($138, (int_64)0, ($142 + [72]))
	
.LABEL $label$104
	*($142 + [72]) = *($70)
	if ( (CALL memcmp($19, ($142 + [72]), [8]) == 0) ){ goto $label$106 }
	$138 = *($80)
	if ( ((int_32)$138 > (int_32)[-1]) ){ goto $label$107 }
	$138 = CALL db_idx_double_find_primary(*($142 + [1096]), *((($142 + [1096]) + [8])), (int_64)4520852774463733762, ($142 + [1360]), $139)
	*($80) = $138
	
.LABEL $label$107
	CALL db_idx_double_update($138, (int_64)0, ($142 + [72]))
	
.LABEL $label$106
	*($142 + [72]) = *($13)
	if ( (CALL memcmp($17, ($142 + [72]), [8]) == 0) ){ goto $label$108 }
	$138 = *($81)
	if ( ((int_32)$138 > (int_32)[-1]) ){ goto $label$109 }
	$138 = CALL db_idx64_find_primary(*($142 + [1096]), *((($142 + [1096]) + [8])), (int_64)4520852774463733763, ($142 + [1360]), $139)
	*($81) = $138
	
.LABEL $label$109
	CALL db_idx64_update($138, (int_64)0, ($142 + [72]))
	
.LABEL $label$108
	*($142 + [72]) = *($7)
	if ( (CALL memcmp($18, ($142 + [72]), [8]) == 0) ){ goto $label$110 }
	$67 = ($11 + [96])
	$138 = *($67)
	if ( ((int_32)$138 > (int_32)[-1]) ){ goto $label$111 }
	$138 = CALL db_idx64_find_primary(*($142 + [1096]), *((($142 + [1096]) + [8])), (int_64)4520852774463733764, ($142 + [1360]), $139)
	*($67) = $138
	
.LABEL $label$111
	CALL db_idx64_update($138, (int_64)0, ($142 + [72]))
	
.LABEL $label$110
	*((($142 + [920]) + [12])) = *(($13 + [12]))
	*(($138 = (($142 + [920]) + [8]))) = *(($13 + [8]))
	*($142 + [924]) = *($82)
	*($142 + [920]) = *($13)
	$139 = *($76)
	$3 = *($11)
	*((($142 + [24]) + [8])) = *($138)
	*($142 + [24]) = *($142 + [920])
	CALL _ZN5eosio8exchange18adjust_u_buy_orderEyyNS_5assetE($0, $139, $3, ($142 + [24]))
	$139 = *($73)
	*($75) = $139
	*($142 + [904]) = (int_64)0
	CALL eosio_assert([1], [960])
	$139 = (uint_64)$139 >> (uint_64)(int_64)8)
	$138 = [0]
	
.LOOP $label$114:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $139) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$113 }
	$139 = (uint_64)$139 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$139) & (int_64)255) != (int_64)0) ){ goto $label$115 }
	
.LOOP $label$116:
	$139 = (uint_64)$139 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$139) & (int_64)255) != (int_64)0) ){ goto $label$113 }
	$138 = ($138 + [1])
	if ( ((int_32)$138 < (int_32)[7]) ){ goto $label$116 }
	
.LABEL $label$115
	$67 = [1]
	$138 = ($138 + [1])
	if ( ((int_32)$138 < (int_32)[7]) ){ goto $label$114 }
	goto $label$112 
	
.LABEL $label$113
	$67 = [0]
	
.LABEL $label$112
	CALL eosio_assert($67, [672])
	$83 = ($8 + [8])
	$74 = *($83)
	$139 = (int_64)0
	$2 = (int_64)59
	$138 = [2032]
	$140 = (int_64)0
	
.LOOP $label$117:
	if ( ((uint_64)$139 > (uint_64)(int_64)10) ){ goto $label$122 }
	$67 = *($138)
	if ( ((uint_32)(($67 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$121 }
	$67 = ($67 + [165])
	goto $label$120 
	
.LABEL $label$122
	$3 = (int_64)0
	if ( ((int_64)$139 == (int_64)11) ){ goto $label$119 }
	goto $label$118 
	
.LABEL $label$121
	$67 = ( ($67 + [208]) ? [0] : ((($67 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$120
	$3 = (int_64)((int_64)(CASTING uint_64)(uint_32 $67) << (int_64)56) >> (int_64)56)
	
.LABEL $label$119
	$3 = ((int_64)((int_64)$3 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$118
	$138 = ($138 + [1])
	$2 = ((int_64)$2 + (int_64)-5)
	$140 = ((int_64)$3 | (int_64)$140)
	$139 = ((int_64)$139 + (int_64)1)
	if ( ((int_64)$139 != (int_64)13) ){ goto $label$117 }
	$139 = (int_64)1
	if ( ((int_64)$74 != (int_64)$140) ){ goto $label$123 }
	$139 = ( (int_64)2 ? (int_64)1 : ((int_64)*(($8 + [16])) == (int_64)$20) )
	
.LABEL $label$123
	*($142 + [904]) = ((int_64)((int_64)$66 * (int_64)$139) / (int_64)1000)
	*(($84 = (($142 + [584]) + [8]))) = [0]
	*($142 + [584]) = (int_64)0
	$138 = CALL strlen([2448])
	if ( ((uint_32)$138 >= (uint_32)[-16]) ){ goto $label$70 }
	if ( ((uint_32)$138 >= (uint_32)[11]) ){ goto $label$126 }
	*($142 + [584]) = ($138 << [1])
	$67 = $21
	if ( $138 ){ goto $label$125 }
	goto $label$124 
	
.LABEL $label$126
	$7 = (($138 + [16]) & [-16])
	$67 = CALL $128($7)
	*($84) = $67
	*($142 + [584]) = ($7 | [1])
	*($142 + [588]) = $138
	
.LABEL $label$125
	CALL memcpy($67, [2448], $138)
	
.LABEL $label$124
	*(($67 + $138)) = [0]
	*(($85 = (($142 + [568]) + [8]))) = [0]
	*($142 + [568]) = (int_64)0
	$138 = CALL strlen([2464])
	if ( ((uint_32)$138 >= (uint_32)[-16]) ){ goto $label$69 }
	if ( ((uint_32)$138 >= (uint_32)[11]) ){ goto $label$129 }
	*($142 + [568]) = ($138 << [1])
	$67 = $22
	if ( $138 ){ goto $label$128 }
	goto $label$127 
	
.LABEL $label$129
	$7 = (($138 + [16]) & [-16])
	$67 = CALL $128($7)
	*($85) = $67
	*($142 + [568]) = ($7 | [1])
	*($142 + [572]) = $138
	
.LABEL $label$128
	CALL memcpy($67, [2464], $138)
	
.LABEL $label$127
	*(($67 + $138)) = [0]
	$138 = *($142 + [568])
	$67 = ($138 & [1])
	$138 = CALL $136(($142 + [584]), ( *($85) ? $22 : $67 ), ( *($142 + [572]) ? uint_32($138 >> [1]) : $67 ))
	$67 = ($138 + [8])
	*(($86 = (($142 + [600]) + [8]))) = *($67)
	*($142 + [600]) = *($138)
	*($138) = [0]
	*(($138 + [4])) = [0]
	*($67) = [0]
	CALL _ZNSt3__19to_stringEy(($142 + [552]), $4)
	$138 = *($142 + [552])
	$67 = ($138 & [1])
	$87 = (($142 + [552]) + [8])
	$138 = CALL $136(($142 + [600]), ( *($87) ? $23 : $67 ), ( *($142 + [556]) ? uint_32($138 >> [1]) : $67 ))
	$67 = ($138 + [8])
	*(($88 = (($142 + [616]) + [8]))) = *($67)
	*($142 + [616]) = *($138)
	*($138) = [0]
	*(($138 + [4])) = [0]
	*($67) = [0]
	*(($89 = (($142 + [536]) + [8]))) = [0]
	*($142 + [536]) = (int_64)0
	$138 = CALL strlen([2480])
	if ( ((uint_32)$138 >= (uint_32)[-16]) ){ goto $label$68 }
	if ( ((uint_32)$138 >= (uint_32)[11]) ){ goto $label$132 }
	*($142 + [536]) = ($138 << [1])
	$67 = $24
	if ( $138 ){ goto $label$131 }
	goto $label$130 
	
.LABEL $label$132
	$7 = (($138 + [16]) & [-16])
	$67 = CALL $128($7)
	*($89) = $67
	*($142 + [536]) = ($7 | [1])
	*($142 + [540]) = $138
	
.LABEL $label$131
	CALL memcpy($67, [2480], $138)
	
.LABEL $label$130
	*(($67 + $138)) = [0]
	$138 = *($142 + [536])
	$67 = ($138 & [1])
	$138 = CALL $136(($142 + [616]), ( *($89) ? $24 : $67 ), ( *($142 + [540]) ? uint_32($138 >> [1]) : $67 ))
	$67 = ($138 + [8])
	*(($90 = (($142 + [632]) + [8]))) = *($67)
	*($142 + [632]) = *($138)
	*($138) = [0]
	*(($138 + [4])) = [0]
	*($67) = [0]
	CALL _ZNSt3__19to_stringEy(($142 + [520]), *($11))
	$138 = *($142 + [520])
	$67 = ($138 & [1])
	$91 = (($142 + [520]) + [8])
	$138 = CALL $136(($142 + [632]), ( *($91) ? $25 : $67 ), ( *($142 + [524]) ? uint_32($138 >> [1]) : $67 ))
	$67 = ($138 + [8])
	*(($92 = (($142 + [648]) + [8]))) = *($67)
	*($142 + [648]) = *($138)
	*($138) = [0]
	*(($138 + [4])) = [0]
	*($67) = [0]
	*(($138 = (($142 + [504]) + [8]))) = [0]
	*($142 + [504]) = (int_64)0
	$67 = CALL strlen([2496])
	if ( ((uint_32)$67 >= (uint_32)[-16]) ){ goto $label$67 }
	if ( ((uint_32)$67 >= (uint_32)[11]) ){ goto $label$135 }
	*($142 + [504]) = ($67 << [1])
	$7 = $26
	if ( $67 ){ goto $label$134 }
	goto $label$133 
	
.LABEL $label$135
	$114 = (($67 + [16]) & [-16])
	$7 = CALL $128($114)
	*($138) = $7
	*($142 + [504]) = ($114 | [1])
	*($142 + [508]) = $67
	
.LABEL $label$134
	CALL memcpy($7, [2496], $67)
	
.LABEL $label$133
	*(($7 + $67)) = [0]
	$67 = *($142 + [504])
	$7 = ($67 & [1])
	$67 = CALL $136(($142 + [648]), ( *($138) ? $26 : $7 ), ( *($142 + [508]) ? uint_32($67 >> [1]) : $7 ))
	$7 = ($67 + [8])
	*(($93 = (($142 + [664]) + [8]))) = *($7)
	*($142 + [664]) = *($67)
	*($67) = [0]
	*(($67 + [4])) = [0]
	*($7) = [0]
	*($142 + [184]) = *($76)
	CALL $84(($142 + [488]), ($142 + [184]))
	$67 = *($142 + [488])
	$7 = ($67 & [1])
	$94 = (($142 + [488]) + [8])
	$67 = CALL $136(($142 + [664]), ( *($94) ? $39 : $7 ), ( *($142 + [492]) ? uint_32($67 >> [1]) : $7 ))
	$7 = ($67 + [8])
	*(($95 = (($142 + [680]) + [8]))) = *($7)
	*($142 + [680]) = *($67)
	*($67) = [0]
	*(($67 + [4])) = [0]
	*($7) = [0]
	*(($67 = (($142 + [472]) + [8]))) = [0]
	*($142 + [472]) = (int_64)0
	$7 = CALL strlen([2512])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$66 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$138 }
	*($142 + [472]) = ($7 << [1])
	$114 = $27
	if ( $7 ){ goto $label$137 }
	goto $label$136 
	
.LABEL $label$138
	$122 = (($7 + [16]) & [-16])
	$114 = CALL $128($122)
	*($67) = $114
	*($142 + [472]) = ($122 | [1])
	*($142 + [476]) = $7
	
.LABEL $label$137
	CALL memcpy($114, [2512], $7)
	
.LABEL $label$136
	*(($114 + $7)) = [0]
	$7 = *($142 + [472])
	$114 = ($7 & [1])
	$7 = CALL $136(($142 + [680]), ( *($67) ? $27 : $114 ), ( *($142 + [476]) ? uint_32($7 >> [1]) : $114 ))
	$114 = ($7 + [8])
	*(($96 = (($142 + [696]) + [8]))) = *($114)
	*($142 + [696]) = *($7)
	*($7) = [0]
	*(($7 + [4])) = [0]
	*($114) = [0]
	*(($97 = (($142 + [456]) + [8]))) = [0]
	*($142 + [456]) = (int_64)0
	$7 = CALL strlen([2528])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$65 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$141 }
	*($142 + [456]) = ($7 << [1])
	$114 = $41
	if ( $7 ){ goto $label$140 }
	goto $label$139 
	
.LABEL $label$141
	$122 = (($7 + [16]) & [-16])
	$114 = CALL $128($122)
	*($97) = $114
	*($142 + [456]) = ($122 | [1])
	*($142 + [460]) = $7
	
.LABEL $label$140
	CALL memcpy($114, [2528], $7)
	
.LABEL $label$139
	*(($114 + $7)) = [0]
	$7 = *($142 + [456])
	$114 = ($7 & [1])
	$7 = CALL $136(($142 + [696]), ( *($97) ? $41 : $114 ), ( *($142 + [460]) ? uint_32($7 >> [1]) : $114 ))
	$114 = ($7 + [8])
	*(($98 = (($142 + [712]) + [8]))) = *($114)
	*($142 + [712]) = *($7)
	*($7) = [0]
	*(($7 + [4])) = [0]
	*($114) = [0]
	CALL _ZNSt3__19to_stringEy(($142 + [440]), *(*($142 + [996])))
	$7 = *($142 + [440])
	$114 = ($7 & [1])
	$99 = (($142 + [440]) + [8])
	$7 = CALL $136(($142 + [712]), ( *($99) ? $28 : $114 ), ( *($142 + [444]) ? uint_32($7 >> [1]) : $114 ))
	$114 = ($7 + [8])
	*(($100 = (($142 + [728]) + [8]))) = *($114)
	*($142 + [728]) = *($7)
	*($7) = [0]
	*(($7 + [4])) = [0]
	*($114) = [0]
	*(($101 = (($142 + [424]) + [8]))) = [0]
	*($142 + [424]) = (int_64)0
	$7 = CALL strlen([2544])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$64 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$144 }
	*($142 + [424]) = ($7 << [1])
	$114 = $43
	if ( $7 ){ goto $label$143 }
	goto $label$142 
	
.LABEL $label$144
	$122 = (($7 + [16]) & [-16])
	$114 = CALL $128($122)
	*($101) = $114
	*($142 + [424]) = ($122 | [1])
	*($142 + [428]) = $7
	
.LABEL $label$143
	CALL memcpy($114, [2544], $7)
	
.LABEL $label$142
	*(($114 + $7)) = [0]
	$7 = *($142 + [424])
	$114 = ($7 & [1])
	$7 = CALL $136(($142 + [728]), ( *($101) ? $43 : $114 ), ( *($142 + [428]) ? uint_32($7 >> [1]) : $114 ))
	$114 = ($7 + [8])
	*(($102 = (($142 + [744]) + [8]))) = *($114)
	*($142 + [744]) = *($7)
	*($7) = [0]
	*(($7 + [4])) = [0]
	*($114) = [0]
	*($142 + [168]) = *(*($142 + [996]) + [16])
	CALL $84(($142 + [408]), ($142 + [168]))
	$7 = *($142 + [408])
	$114 = ($7 & [1])
	$103 = (($142 + [408]) + [8])
	$7 = CALL $136(($142 + [744]), ( *($103) ? $29 : $114 ), ( *($142 + [412]) ? uint_32($7 >> [1]) : $114 ))
	$114 = ($7 + [8])
	*(($104 = (($142 + [760]) + [8]))) = *($114)
	*($142 + [760]) = *($7)
	*($7) = [0]
	*(($7 + [4])) = [0]
	*($114) = [0]
	*(($7 = (($142 + [392]) + [8]))) = [0]
	*($142 + [392]) = (int_64)0
	$114 = CALL strlen([2512])
	if ( ((uint_32)$114 >= (uint_32)[-16]) ){ goto $label$63 }
	if ( ((uint_32)$114 >= (uint_32)[11]) ){ goto $label$147 }
	*($142 + [392]) = ($114 << [1])
	$122 = $30
	if ( $114 ){ goto $label$146 }
	goto $label$145 
	
.LABEL $label$147
	$68 = (($114 + [16]) & [-16])
	$122 = CALL $128($68)
	*($7) = $122
	*($142 + [392]) = ($68 | [1])
	*($142 + [396]) = $114
	
.LABEL $label$146
	CALL memcpy($122, [2512], $114)
	
.LABEL $label$145
	*(($122 + $114)) = [0]
	$114 = *($142 + [392])
	$122 = ($114 & [1])
	$114 = CALL $136(($142 + [760]), ( *($7) ? $30 : $122 ), ( *($142 + [396]) ? uint_32($114 >> [1]) : $122 ))
	$122 = ($114 + [8])
	*(($105 = (($142 + [776]) + [8]))) = *($122)
	*($142 + [776]) = *($114)
	*($114) = [0]
	*(($114 + [4])) = [0]
	*($122) = [0]
	*(($106 = (($142 + [376]) + [8]))) = [0]
	*($142 + [376]) = (int_64)0
	$114 = CALL strlen([2560])
	if ( ((uint_32)$114 >= (uint_32)[-16]) ){ goto $label$62 }
	if ( ((uint_32)$114 >= (uint_32)[11]) ){ goto $label$150 }
	*($142 + [376]) = ($114 << [1])
	$122 = $46
	if ( $114 ){ goto $label$149 }
	goto $label$148 
	
.LABEL $label$150
	$68 = (($114 + [16]) & [-16])
	$122 = CALL $128($68)
	*($106) = $122
	*($142 + [376]) = ($68 | [1])
	*($142 + [380]) = $114
	
.LABEL $label$149
	CALL memcpy($122, [2560], $114)
	
.LABEL $label$148
	*(($122 + $114)) = [0]
	$114 = *($142 + [376])
	$122 = ($114 & [1])
	$114 = CALL $136(($142 + [776]), ( *($106) ? $46 : $122 ), ( *($142 + [380]) ? uint_32($114 >> [1]) : $122 ))
	$122 = ($114 + [8])
	*(($107 = (($142 + [792]) + [8]))) = *($122)
	*($142 + [792]) = *($114)
	*($114) = [0]
	*(($114 + [4])) = [0]
	*($122) = [0]
	CALL _ZNSt3__19to_stringEf(($142 + [360]), (DEMOTE float_32)(float_64 *($142 + [984])))
	$114 = *($142 + [360])
	$122 = ($114 & [1])
	$108 = (($142 + [360]) + [8])
	$114 = CALL $136(($142 + [792]), ( *($108) ? $31 : $122 ), ( *($142 + [364]) ? uint_32($114 >> [1]) : $122 ))
	$122 = ($114 + [8])
	*(($109 = (($142 + [808]) + [8]))) = *($122)
	*($142 + [808]) = *($114)
	*($114) = [0]
	*(($114 + [4])) = [0]
	*($122) = [0]
	*(($110 = (($142 + [344]) + [8]))) = [0]
	*($142 + [344]) = (int_64)0
	$114 = CALL strlen([2576])
	if ( ((uint_32)$114 >= (uint_32)[-16]) ){ goto $label$61 }
	if ( ((uint_32)$114 >= (uint_32)[11]) ){ goto $label$153 }
	*($142 + [344]) = ($114 << [1])
	$122 = $48
	if ( $114 ){ goto $label$152 }
	goto $label$151 
	
.LABEL $label$153
	$68 = (($114 + [16]) & [-16])
	$122 = CALL $128($68)
	*($110) = $122
	*($142 + [344]) = ($68 | [1])
	*($142 + [348]) = $114
	
.LABEL $label$152
	CALL memcpy($122, [2576], $114)
	
.LABEL $label$151
	*(($122 + $114)) = [0]
	$114 = *($142 + [344])
	$122 = ($114 & [1])
	$114 = CALL $136(($142 + [808]), ( *($110) ? $48 : $122 ), ( *($142 + [348]) ? uint_32($114 >> [1]) : $122 ))
	$122 = ($114 + [8])
	*(($111 = (($142 + [824]) + [8]))) = *($122)
	*($142 + [824]) = *($114)
	*($114) = [0]
	*(($114 + [4])) = [0]
	*($122) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($142 + [328]), $142, ($142 + [968]))
	$114 = *($142 + [328])
	$122 = ($114 & [1])
	$112 = (($142 + [328]) + [8])
	$114 = CALL $136(($142 + [824]), ( *($112) ? $32 : $122 ), ( *($142 + [332]) ? uint_32($114 >> [1]) : $122 ))
	$122 = ($114 + [8])
	*(($113 = (($142 + [840]) + [8]))) = *($122)
	*($142 + [840]) = *($114)
	*($114) = [0]
	*(($114 + [4])) = [0]
	*($122) = [0]
	*(($114 = (($142 + [312]) + [8]))) = [0]
	*($142 + [312]) = (int_64)0
	$122 = CALL strlen([2512])
	if ( ((uint_32)$122 >= (uint_32)[-16]) ){ goto $label$60 }
	if ( ((uint_32)$122 >= (uint_32)[11]) ){ goto $label$156 }
	*($142 + [312]) = ($122 << [1])
	$68 = $33
	if ( $122 ){ goto $label$155 }
	goto $label$154 
	
.LABEL $label$156
	$116 = (($122 + [16]) & [-16])
	$68 = CALL $128($116)
	*($114) = $68
	*($142 + [312]) = ($116 | [1])
	*($142 + [316]) = $122
	
.LABEL $label$155
	CALL memcpy($68, [2512], $122)
	
.LABEL $label$154
	*(($68 + $122)) = [0]
	$122 = *($142 + [312])
	$68 = ($122 & [1])
	$122 = CALL $136(($142 + [840]), ( *($114) ? $33 : $68 ), ( *($142 + [316]) ? uint_32($122 >> [1]) : $68 ))
	$68 = ($122 + [8])
	*(($115 = (($142 + [856]) + [8]))) = *($68)
	*($142 + [856]) = *($122)
	*($122) = [0]
	*(($122 + [4])) = [0]
	*($68) = [0]
	*(($116 = (($142 + [296]) + [8]))) = [0]
	*($142 + [296]) = (int_64)0
	$122 = CALL strlen([2592])
	if ( ((uint_32)$122 >= (uint_32)[-16]) ){ goto $label$59 }
	if ( ((uint_32)$122 >= (uint_32)[11]) ){ goto $label$159 }
	*($142 + [296]) = ($122 << [1])
	$68 = $51
	if ( $122 ){ goto $label$158 }
	goto $label$157 
	
.LABEL $label$159
	$120 = (($122 + [16]) & [-16])
	$68 = CALL $128($120)
	*($116) = $68
	*($142 + [296]) = ($120 | [1])
	*($142 + [300]) = $122
	
.LABEL $label$158
	CALL memcpy($68, [2592], $122)
	
.LABEL $label$157
	*(($68 + $122)) = [0]
	$122 = *($142 + [296])
	$68 = ($122 & [1])
	$122 = CALL $136(($142 + [856]), ( *($116) ? $51 : $68 ), ( *($142 + [300]) ? uint_32($122 >> [1]) : $68 ))
	$68 = ($122 + [8])
	*(($117 = (($142 + [872]) + [8]))) = *($68)
	*($142 + [872]) = *($122)
	*($122) = [0]
	*(($122 + [4])) = [0]
	*($68) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($142 + [280]), $142, ($142 + [952]))
	$122 = *($142 + [280])
	$68 = ($122 & [1])
	$118 = (($142 + [280]) + [8])
	$122 = CALL $136(($142 + [872]), ( *($118) ? $34 : $68 ), ( *($142 + [284]) ? uint_32($122 >> [1]) : $68 ))
	$68 = ($122 + [8])
	*(($119 = (($142 + [1360]) + [8]))) = *($68)
	*($142 + [1360]) = *($122)
	*($122) = [0]
	*(($122 + [4])) = [0]
	*($68) = [0]
	*(($120 = (($142 + [264]) + [8]))) = [0]
	*($142 + [264]) = (int_64)0
	$122 = CALL strlen([2512])
	if ( ((uint_32)$122 >= (uint_32)[-16]) ){ goto $label$58 }
	if ( ((uint_32)$122 >= (uint_32)[11]) ){ goto $label$162 }
	*($142 + [264]) = ($122 << [1])
	$68 = $53
	if ( $122 ){ goto $label$161 }
	goto $label$160 
	
.LABEL $label$162
	$125 = (($122 + [16]) & [-16])
	$68 = CALL $128($125)
	*($120) = $68
	*($142 + [264]) = ($125 | [1])
	*($142 + [268]) = $122
	
.LABEL $label$161
	CALL memcpy($68, [2512], $122)
	
.LABEL $label$160
	*(($68 + $122)) = [0]
	$122 = *($142 + [264])
	$68 = ($122 & [1])
	$122 = CALL $136(($142 + [1360]), ( *($120) ? $53 : $68 ), ( *($142 + [268]) ? uint_32($122 >> [1]) : $68 ))
	$68 = ($122 + [8])
	*(($121 = (($142 + [72]) + [8]))) = *($68)
	*($142 + [72]) = *($122)
	*($122) = [0]
	*(($122 + [4])) = [0]
	*($68) = [0]
	*(($122 = (($142 + [248]) + [8]))) = [0]
	*($142 + [248]) = (int_64)0
	$68 = CALL strlen([2608])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$57 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$165 }
	*($142 + [248]) = ($68 << [1])
	$125 = $35
	if ( $68 ){ goto $label$164 }
	goto $label$163 
	
.LABEL $label$165
	$123 = (($68 + [16]) & [-16])
	$125 = CALL $128($123)
	*($122) = $125
	*($142 + [248]) = ($123 | [1])
	*($142 + [252]) = $68
	
.LABEL $label$164
	CALL memcpy($125, [2608], $68)
	
.LABEL $label$163
	*(($125 + $68)) = [0]
	$68 = *($142 + [248])
	$125 = ($68 & [1])
	$68 = CALL $136(($142 + [72]), ( *($122) ? $35 : $125 ), ( *($142 + [252]) ? uint_32($68 >> [1]) : $125 ))
	$125 = ($68 + [8])
	*($6) = *($125)
	*($142 + [1320]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($125) = [0]
	CALL _ZNSt3__19to_stringEy(($142 + [232]), ((uint_64)CALL $fimport$14() / (uint_64)(int_64)1000))
	$68 = *($142 + [232])
	$125 = ($68 & [1])
	$123 = (($142 + [232]) + [8])
	$68 = CALL $136(($142 + [1320]), ( *($123) ? $36 : $125 ), ( *($142 + [236]) ? uint_32($68 >> [1]) : $125 ))
	$125 = ($68 + [8])
	*(($124 = (($142 + [1248]) + [8]))) = *($125)
	*($142 + [1248]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($125) = [0]
	*(($125 = (($142 + [216]) + [8]))) = [0]
	*($142 + [216]) = (int_64)0
	$68 = CALL strlen([2624])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$56 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$168 }
	*($142 + [216]) = ($68 << [1])
	$127 = $56
	if ( $68 ){ goto $label$167 }
	goto $label$166 
	
.LABEL $label$168
	$129 = (($68 + [16]) & [-16])
	$127 = CALL $128($129)
	*($125) = $127
	*($142 + [216]) = ($129 | [1])
	*($142 + [220]) = $68
	
.LABEL $label$167
	CALL memcpy($127, [2624], $68)
	
.LABEL $label$166
	*(($127 + $68)) = [0]
	$68 = *($142 + [216])
	$127 = ($68 & [1])
	$68 = CALL $136(($142 + [1248]), ( *($125) ? $56 : $127 ), ( *($142 + [220]) ? uint_32($68 >> [1]) : $127 ))
	$127 = ($68 + [8])
	*(($126 = (($142 + [888]) + [8]))) = *($127)
	*($142 + [888]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($127) = [0]
	if ( ((*($142 + [216]) & [1]) == 0) ){ goto $label$169 }
	CALL $130(*($125))
	
.LABEL $label$169
	if ( ((*($142 + [1248]) & [1]) == 0) ){ goto $label$170 }
	CALL $130(*($124))
	
.LABEL $label$170
	if ( ((*($142 + [232]) & [1]) == 0) ){ goto $label$171 }
	CALL $130(*($123))
	
.LABEL $label$171
	if ( ((*($142 + [1320]) & [1]) == 0) ){ goto $label$172 }
	CALL $130(*($6))
	
.LABEL $label$172
	if ( ((*($142 + [248]) & [1]) == 0) ){ goto $label$173 }
	CALL $130(*($122))
	
.LABEL $label$173
	if ( ((*($142 + [72]) & [1]) == 0) ){ goto $label$174 }
	CALL $130(*($121))
	
.LABEL $label$174
	if ( ((*($142 + [264]) & [1]) == 0) ){ goto $label$175 }
	CALL $130(*($120))
	
.LABEL $label$175
	if ( ((*($142 + [1360]) & [1]) == 0) ){ goto $label$176 }
	CALL $130(*($119))
	
.LABEL $label$176
	if ( ((*($142 + [280]) & [1]) == 0) ){ goto $label$177 }
	CALL $130(*($118))
	
.LABEL $label$177
	if ( ((*($142 + [872]) & [1]) == 0) ){ goto $label$178 }
	CALL $130(*($117))
	
.LABEL $label$178
	if ( ((*($142 + [296]) & [1]) == 0) ){ goto $label$179 }
	CALL $130(*($116))
	
.LABEL $label$179
	if ( ((*($142 + [856]) & [1]) == 0) ){ goto $label$180 }
	CALL $130(*($115))
	
.LABEL $label$180
	if ( ((*($142 + [312]) & [1]) == 0) ){ goto $label$181 }
	CALL $130(*($114))
	
.LABEL $label$181
	if ( ((*($142 + [840]) & [1]) == 0) ){ goto $label$182 }
	CALL $130(*($113))
	
.LABEL $label$182
	if ( ((*($142 + [328]) & [1]) == 0) ){ goto $label$183 }
	CALL $130(*($112))
	
.LABEL $label$183
	if ( ((*($142 + [824]) & [1]) == 0) ){ goto $label$184 }
	CALL $130(*($111))
	
.LABEL $label$184
	if ( ((*($142 + [344]) & [1]) == 0) ){ goto $label$185 }
	CALL $130(*($110))
	
.LABEL $label$185
	if ( ((*($142 + [808]) & [1]) == 0) ){ goto $label$186 }
	CALL $130(*($109))
	
.LABEL $label$186
	if ( ((*($142 + [360]) & [1]) == 0) ){ goto $label$187 }
	CALL $130(*($108))
	
.LABEL $label$187
	if ( ((*($142 + [792]) & [1]) == 0) ){ goto $label$188 }
	CALL $130(*($107))
	
.LABEL $label$188
	if ( ((*($142 + [376]) & [1]) == 0) ){ goto $label$189 }
	CALL $130(*($106))
	
.LABEL $label$189
	if ( ((*($142 + [776]) & [1]) == 0) ){ goto $label$190 }
	CALL $130(*($105))
	
.LABEL $label$190
	if ( ((*($142 + [392]) & [1]) == 0) ){ goto $label$191 }
	CALL $130(*($7))
	
.LABEL $label$191
	if ( ((*($142 + [760]) & [1]) == 0) ){ goto $label$192 }
	CALL $130(*($104))
	
.LABEL $label$192
	if ( ((*($142 + [408]) & [1]) == 0) ){ goto $label$193 }
	CALL $130(*($103))
	
.LABEL $label$193
	if ( ((*($142 + [744]) & [1]) == 0) ){ goto $label$194 }
	CALL $130(*($102))
	
.LABEL $label$194
	if ( ((*($142 + [424]) & [1]) == 0) ){ goto $label$195 }
	CALL $130(*($101))
	
.LABEL $label$195
	if ( ((*($142 + [728]) & [1]) == 0) ){ goto $label$196 }
	CALL $130(*($100))
	
.LABEL $label$196
	if ( ((*($142 + [440]) & [1]) == 0) ){ goto $label$197 }
	CALL $130(*($99))
	
.LABEL $label$197
	if ( ((*($142 + [712]) & [1]) == 0) ){ goto $label$198 }
	CALL $130(*($98))
	
.LABEL $label$198
	if ( ((*($142 + [456]) & [1]) == 0) ){ goto $label$199 }
	CALL $130(*($97))
	
.LABEL $label$199
	if ( ((*($142 + [696]) & [1]) == 0) ){ goto $label$200 }
	CALL $130(*($96))
	
.LABEL $label$200
	if ( ((*($142 + [472]) & [1]) == 0) ){ goto $label$201 }
	CALL $130(*($67))
	
.LABEL $label$201
	if ( ((*($142 + [680]) & [1]) == 0) ){ goto $label$202 }
	CALL $130(*($95))
	
.LABEL $label$202
	if ( ((*($142 + [488]) & [1]) == 0) ){ goto $label$203 }
	CALL $130(*($94))
	
.LABEL $label$203
	if ( ((*($142 + [664]) & [1]) == 0) ){ goto $label$204 }
	CALL $130(*($93))
	
.LABEL $label$204
	if ( ((*($142 + [504]) & [1]) == 0) ){ goto $label$205 }
	CALL $130(*($138))
	
.LABEL $label$205
	if ( ((*($142 + [648]) & [1]) == 0) ){ goto $label$206 }
	CALL $130(*($92))
	
.LABEL $label$206
	if ( ((*($142 + [520]) & [1]) == 0) ){ goto $label$207 }
	CALL $130(*($91))
	
.LABEL $label$207
	if ( ((*($142 + [632]) & [1]) == 0) ){ goto $label$208 }
	CALL $130(*($90))
	
.LABEL $label$208
	if ( ((*($142 + [536]) & [1]) == 0) ){ goto $label$209 }
	CALL $130(*($89))
	
.LABEL $label$209
	if ( ((*($142 + [616]) & [1]) == 0) ){ goto $label$210 }
	CALL $130(*($88))
	
.LABEL $label$210
	if ( ((*($142 + [552]) & [1]) == 0) ){ goto $label$211 }
	CALL $130(*($87))
	
.LABEL $label$211
	if ( ((*($142 + [600]) & [1]) == 0) ){ goto $label$212 }
	CALL $130(*($86))
	
.LABEL $label$212
	if ( ((*($142 + [568]) & [1]) == 0) ){ goto $label$213 }
	CALL $130(*($85))
	
.LABEL $label$213
	if ( ((*($142 + [584]) & [1]) == 0) ){ goto $label$214 }
	CALL $130(*($84))
	
.LABEL $label$214
	*($91) = [0]
	*($142 + [520]) = (int_64)0
	$68 = CALL strlen([2448])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$55 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$217 }
	*($142 + [520]) = ($68 << [1])
	$127 = $37
	if ( $68 ){ goto $label$216 }
	goto $label$215 
	
.LABEL $label$217
	$129 = (($68 + [16]) & [-16])
	$127 = CALL $128($129)
	*($91) = $127
	*($142 + [520]) = ($129 | [1])
	*($142 + [524]) = $68
	
.LABEL $label$216
	CALL memcpy($127, [2448], $68)
	
.LABEL $label$215
	*(($127 + $68)) = [0]
	*($138) = [0]
	*($142 + [504]) = (int_64)0
	$68 = CALL strlen([2464])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$54 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$220 }
	*($142 + [504]) = ($68 << [1])
	$127 = $38
	if ( $68 ){ goto $label$219 }
	goto $label$218 
	
.LABEL $label$220
	$129 = (($68 + [16]) & [-16])
	$127 = CALL $128($129)
	*($138) = $127
	*($142 + [504]) = ($129 | [1])
	*($142 + [508]) = $68
	
.LABEL $label$219
	CALL memcpy($127, [2464], $68)
	
.LABEL $label$218
	*(($127 + $68)) = [0]
	$68 = *($142 + [504])
	$127 = ($68 & [1])
	$68 = CALL $136(($142 + [520]), ( *($138) ? $38 : $127 ), ( *($142 + [508]) ? uint_32($68 >> [1]) : $127 ))
	$127 = ($68 + [8])
	*($89) = *($127)
	*($142 + [536]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($127) = [0]
	CALL _ZNSt3__19to_stringEy(($142 + [488]), $4)
	$68 = *($142 + [488])
	$127 = ($68 & [1])
	$68 = CALL $136(($142 + [536]), ( *($94) ? $39 : $127 ), ( *($142 + [492]) ? uint_32($68 >> [1]) : $127 ))
	$127 = ($68 + [8])
	*($87) = *($127)
	*($142 + [552]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($127) = [0]
	*($67) = [0]
	*($142 + [472]) = (int_64)0
	$68 = CALL strlen([2480])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$53 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$223 }
	*($142 + [472]) = ($68 << [1])
	$127 = $40
	if ( $68 ){ goto $label$222 }
	goto $label$221 
	
.LABEL $label$223
	$129 = (($68 + [16]) & [-16])
	$127 = CALL $128($129)
	*($67) = $127
	*($142 + [472]) = ($129 | [1])
	*($142 + [476]) = $68
	
.LABEL $label$222
	CALL memcpy($127, [2480], $68)
	
.LABEL $label$221
	*(($127 + $68)) = [0]
	$68 = *($142 + [472])
	$127 = ($68 & [1])
	$68 = CALL $136(($142 + [552]), ( *($67) ? $40 : $127 ), ( *($142 + [476]) ? uint_32($68 >> [1]) : $127 ))
	$127 = ($68 + [8])
	*($85) = *($127)
	*($142 + [568]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($127) = [0]
	CALL _ZNSt3__19to_stringEy(($142 + [456]), *($11))
	$68 = *($142 + [456])
	$127 = ($68 & [1])
	$68 = CALL $136(($142 + [568]), ( *($97) ? $41 : $127 ), ( *($142 + [460]) ? uint_32($68 >> [1]) : $127 ))
	$127 = ($68 + [8])
	*($84) = *($127)
	*($142 + [584]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($127) = [0]
	*($99) = [0]
	*($142 + [440]) = (int_64)0
	$68 = CALL strlen([2496])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$52 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$226 }
	*($142 + [440]) = ($68 << [1])
	$127 = $42
	if ( $68 ){ goto $label$225 }
	goto $label$224 
	
.LABEL $label$226
	$129 = (($68 + [16]) & [-16])
	$127 = CALL $128($129)
	*($99) = $127
	*($142 + [440]) = ($129 | [1])
	*($142 + [444]) = $68
	
.LABEL $label$225
	CALL memcpy($127, [2496], $68)
	
.LABEL $label$224
	*(($127 + $68)) = [0]
	$68 = *($142 + [440])
	$127 = ($68 & [1])
	$68 = CALL $136(($142 + [584]), ( *($99) ? $42 : $127 ), ( *($142 + [444]) ? uint_32($68 >> [1]) : $127 ))
	$127 = ($68 + [8])
	*($86) = *($127)
	*($142 + [600]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($127) = [0]
	*($142 + [208]) = *($76)
	CALL $84(($142 + [424]), ($142 + [208]))
	$68 = *($142 + [424])
	$76 = ($68 & [1])
	$68 = CALL $136(($142 + [600]), ( *($101) ? $43 : $76 ), ( *($142 + [428]) ? uint_32($68 >> [1]) : $76 ))
	$76 = ($68 + [8])
	*($88) = *($76)
	*($142 + [616]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($76) = [0]
	*($103) = [0]
	*($142 + [408]) = (int_64)0
	$68 = CALL strlen([2512])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$51 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$229 }
	*($142 + [408]) = ($68 << [1])
	$76 = $44
	if ( $68 ){ goto $label$228 }
	goto $label$227 
	
.LABEL $label$229
	$127 = (($68 + [16]) & [-16])
	$76 = CALL $128($127)
	*($103) = $76
	*($142 + [408]) = ($127 | [1])
	*($142 + [412]) = $68
	
.LABEL $label$228
	CALL memcpy($76, [2512], $68)
	
.LABEL $label$227
	*(($76 + $68)) = [0]
	$68 = *($142 + [408])
	$76 = ($68 & [1])
	$68 = CALL $136(($142 + [616]), ( *($103) ? $44 : $76 ), ( *($142 + [412]) ? uint_32($68 >> [1]) : $76 ))
	$76 = ($68 + [8])
	*($90) = *($76)
	*($142 + [632]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($76) = [0]
	*($7) = [0]
	*($142 + [392]) = (int_64)0
	$68 = CALL strlen([2528])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$50 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$232 }
	*($142 + [392]) = ($68 << [1])
	$76 = $45
	if ( $68 ){ goto $label$231 }
	goto $label$230 
	
.LABEL $label$232
	$127 = (($68 + [16]) & [-16])
	$76 = CALL $128($127)
	*($7) = $76
	*($142 + [392]) = ($127 | [1])
	*($142 + [396]) = $68
	
.LABEL $label$231
	CALL memcpy($76, [2528], $68)
	
.LABEL $label$230
	*(($76 + $68)) = [0]
	$68 = *($142 + [392])
	$76 = ($68 & [1])
	$68 = CALL $136(($142 + [632]), ( *($7) ? $45 : $76 ), ( *($142 + [396]) ? uint_32($68 >> [1]) : $76 ))
	$76 = ($68 + [8])
	*($92) = *($76)
	*($142 + [648]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($76) = [0]
	CALL _ZNSt3__19to_stringEy(($142 + [376]), *(*($142 + [996])))
	$68 = *($142 + [376])
	$76 = ($68 & [1])
	$68 = CALL $136(($142 + [648]), ( *($106) ? $46 : $76 ), ( *($142 + [380]) ? uint_32($68 >> [1]) : $76 ))
	$76 = ($68 + [8])
	*($93) = *($76)
	*($142 + [664]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($76) = [0]
	*($108) = [0]
	*($142 + [360]) = (int_64)0
	$68 = CALL strlen([2544])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$49 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$235 }
	*($142 + [360]) = ($68 << [1])
	$76 = $47
	if ( $68 ){ goto $label$234 }
	goto $label$233 
	
.LABEL $label$235
	$127 = (($68 + [16]) & [-16])
	$76 = CALL $128($127)
	*($108) = $76
	*($142 + [360]) = ($127 | [1])
	*($142 + [364]) = $68
	
.LABEL $label$234
	CALL memcpy($76, [2544], $68)
	
.LABEL $label$233
	*(($76 + $68)) = [0]
	$68 = *($142 + [360])
	$76 = ($68 & [1])
	$68 = CALL $136(($142 + [664]), ( *($108) ? $47 : $76 ), ( *($142 + [364]) ? uint_32($68 >> [1]) : $76 ))
	$76 = ($68 + [8])
	*($95) = *($76)
	*($142 + [680]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($76) = [0]
	*($142 + [200]) = *(*($142 + [996]) + [16])
	CALL $84(($142 + [344]), ($142 + [200]))
	$68 = *($142 + [344])
	$76 = ($68 & [1])
	$68 = CALL $136(($142 + [680]), ( *($110) ? $48 : $76 ), ( *($142 + [348]) ? uint_32($68 >> [1]) : $76 ))
	$76 = ($68 + [8])
	*($96) = *($76)
	*($142 + [696]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($76) = [0]
	*($112) = [0]
	*($142 + [328]) = (int_64)0
	$68 = CALL strlen([2512])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$48 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$238 }
	*($142 + [328]) = ($68 << [1])
	$76 = $49
	if ( $68 ){ goto $label$237 }
	goto $label$236 
	
.LABEL $label$238
	$127 = (($68 + [16]) & [-16])
	$76 = CALL $128($127)
	*($112) = $76
	*($142 + [328]) = ($127 | [1])
	*($142 + [332]) = $68
	
.LABEL $label$237
	CALL memcpy($76, [2512], $68)
	
.LABEL $label$236
	*(($76 + $68)) = [0]
	$68 = *($142 + [328])
	$76 = ($68 & [1])
	$68 = CALL $136(($142 + [696]), ( *($112) ? $49 : $76 ), ( *($142 + [332]) ? uint_32($68 >> [1]) : $76 ))
	$76 = ($68 + [8])
	*($98) = *($76)
	*($142 + [712]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($76) = [0]
	*($114) = [0]
	*($142 + [312]) = (int_64)0
	$68 = CALL strlen([2560])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$47 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$241 }
	*($142 + [312]) = ($68 << [1])
	$76 = $50
	if ( $68 ){ goto $label$240 }
	goto $label$239 
	
.LABEL $label$241
	$127 = (($68 + [16]) & [-16])
	$76 = CALL $128($127)
	*($114) = $76
	*($142 + [312]) = ($127 | [1])
	*($142 + [316]) = $68
	
.LABEL $label$240
	CALL memcpy($76, [2560], $68)
	
.LABEL $label$239
	*(($76 + $68)) = [0]
	$68 = *($142 + [312])
	$76 = ($68 & [1])
	$68 = CALL $136(($142 + [712]), ( *($114) ? $50 : $76 ), ( *($142 + [316]) ? uint_32($68 >> [1]) : $76 ))
	$76 = ($68 + [8])
	*($100) = *($76)
	*($142 + [728]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($76) = [0]
	CALL _ZNSt3__19to_stringEf(($142 + [296]), (DEMOTE float_32)(float_64 *($142 + [984])))
	$68 = *($142 + [296])
	$76 = ($68 & [1])
	$68 = CALL $136(($142 + [728]), ( *($116) ? $51 : $76 ), ( *($142 + [300]) ? uint_32($68 >> [1]) : $76 ))
	$76 = ($68 + [8])
	*($102) = *($76)
	*($142 + [744]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($76) = [0]
	*($118) = [0]
	*($142 + [280]) = (int_64)0
	$68 = CALL strlen([2576])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$46 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$244 }
	*($142 + [280]) = ($68 << [1])
	$76 = $52
	if ( $68 ){ goto $label$243 }
	goto $label$242 
	
.LABEL $label$244
	$127 = (($68 + [16]) & [-16])
	$76 = CALL $128($127)
	*($118) = $76
	*($142 + [280]) = ($127 | [1])
	*($142 + [284]) = $68
	
.LABEL $label$243
	CALL memcpy($76, [2576], $68)
	
.LABEL $label$242
	*(($76 + $68)) = [0]
	$68 = *($142 + [280])
	$76 = ($68 & [1])
	$68 = CALL $136(($142 + [744]), ( *($118) ? $52 : $76 ), ( *($142 + [284]) ? uint_32($68 >> [1]) : $76 ))
	$76 = ($68 + [8])
	*($104) = *($76)
	*($142 + [760]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($76) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($142 + [264]), $142, ($142 + [968]))
	$68 = *($142 + [264])
	$76 = ($68 & [1])
	$68 = CALL $136(($142 + [760]), ( *($120) ? $53 : $76 ), ( *($142 + [268]) ? uint_32($68 >> [1]) : $76 ))
	$76 = ($68 + [8])
	*($105) = *($76)
	*($142 + [776]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($76) = [0]
	*($122) = [0]
	*($142 + [248]) = (int_64)0
	$68 = CALL strlen([2512])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$45 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$247 }
	*($142 + [248]) = ($68 << [1])
	$76 = $54
	if ( $68 ){ goto $label$246 }
	goto $label$245 
	
.LABEL $label$247
	$127 = (($68 + [16]) & [-16])
	$76 = CALL $128($127)
	*($122) = $76
	*($142 + [248]) = ($127 | [1])
	*($142 + [252]) = $68
	
.LABEL $label$246
	CALL memcpy($76, [2512], $68)
	
.LABEL $label$245
	*(($76 + $68)) = [0]
	$68 = *($142 + [248])
	$76 = ($68 & [1])
	$68 = CALL $136(($142 + [776]), ( *($122) ? $54 : $76 ), ( *($142 + [252]) ? uint_32($68 >> [1]) : $76 ))
	$76 = ($68 + [8])
	*($107) = *($76)
	*($142 + [792]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($76) = [0]
	*($123) = [0]
	*($142 + [232]) = (int_64)0
	$68 = CALL strlen([2592])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$44 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$250 }
	*($142 + [232]) = ($68 << [1])
	$76 = $55
	if ( $68 ){ goto $label$249 }
	goto $label$248 
	
.LABEL $label$250
	$127 = (($68 + [16]) & [-16])
	$76 = CALL $128($127)
	*($123) = $76
	*($142 + [232]) = ($127 | [1])
	*($142 + [236]) = $68
	
.LABEL $label$249
	CALL memcpy($76, [2592], $68)
	
.LABEL $label$248
	*(($76 + $68)) = [0]
	$68 = *($142 + [232])
	$76 = ($68 & [1])
	$68 = CALL $136(($142 + [792]), ( *($123) ? $55 : $76 ), ( *($142 + [236]) ? uint_32($68 >> [1]) : $76 ))
	$76 = ($68 + [8])
	*($109) = *($76)
	*($142 + [808]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($76) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($142 + [216]), $142, ($142 + [952]))
	$68 = *($142 + [216])
	$76 = ($68 & [1])
	$68 = CALL $136(($142 + [808]), ( *($125) ? $56 : $76 ), ( *($142 + [220]) ? uint_32($68 >> [1]) : $76 ))
	$76 = ($68 + [8])
	*($111) = *($76)
	*($142 + [824]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($76) = [0]
	*(($76 = (($142 + [184]) + [8]))) = [0]
	*($142 + [184]) = (int_64)0
	$68 = CALL strlen([2512])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$43 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$253 }
	*($142 + [184]) = ($68 << [1])
	$127 = $57
	if ( $68 ){ goto $label$252 }
	goto $label$251 
	
.LABEL $label$253
	$129 = (($68 + [16]) & [-16])
	$127 = CALL $128($129)
	*($76) = $127
	*($142 + [184]) = ($129 | [1])
	*($142 + [188]) = $68
	
.LABEL $label$252
	CALL memcpy($127, [2512], $68)
	
.LABEL $label$251
	*(($127 + $68)) = [0]
	$68 = *($142 + [184])
	$127 = ($68 & [1])
	$68 = CALL $136(($142 + [824]), ( *($76) ? $57 : $127 ), ( *($142 + [188]) ? uint_32($68 >> [1]) : $127 ))
	$127 = ($68 + [8])
	*($113) = *($127)
	*($142 + [840]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($127) = [0]
	*(($127 = (($142 + [168]) + [8]))) = [0]
	*($142 + [168]) = (int_64)0
	$68 = CALL strlen([2640])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$42 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$256 }
	*($142 + [168]) = ($68 << [1])
	$129 = $58
	if ( $68 ){ goto $label$255 }
	goto $label$254 
	
.LABEL $label$256
	$130 = (($68 + [16]) & [-16])
	$129 = CALL $128($130)
	*($127) = $129
	*($142 + [168]) = ($130 | [1])
	*($142 + [172]) = $68
	
.LABEL $label$255
	CALL memcpy($129, [2640], $68)
	
.LABEL $label$254
	*(($129 + $68)) = [0]
	$68 = *($142 + [168])
	$129 = ($68 & [1])
	$68 = CALL $136(($142 + [840]), ( *($127) ? $58 : $129 ), ( *($142 + [172]) ? uint_32($68 >> [1]) : $129 ))
	$129 = ($68 + [8])
	*($115) = *($129)
	*($142 + [856]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($129) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($142 + [152]), $142, ($142 + [904]))
	$68 = *($142 + [152])
	$129 = ($68 & [1])
	$128 = (($142 + [152]) + [8])
	$68 = CALL $136(($142 + [856]), ( *($128) ? $59 : $129 ), ( *($142 + [156]) ? uint_32($68 >> [1]) : $129 ))
	$129 = ($68 + [8])
	*($119) = *($129)
	*($142 + [1360]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($129) = [0]
	*(($129 = (($142 + [136]) + [8]))) = [0]
	*($142 + [136]) = (int_64)0
	$68 = CALL strlen([2512])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$41 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$259 }
	*($142 + [136]) = ($68 << [1])
	$130 = $60
	if ( $68 ){ goto $label$258 }
	goto $label$257 
	
.LABEL $label$259
	$132 = (($68 + [16]) & [-16])
	$130 = CALL $128($132)
	*($129) = $130
	*($142 + [136]) = ($132 | [1])
	*($142 + [140]) = $68
	
.LABEL $label$258
	CALL memcpy($130, [2512], $68)
	
.LABEL $label$257
	*(($130 + $68)) = [0]
	$68 = *($142 + [136])
	$130 = ($68 & [1])
	$68 = CALL $136(($142 + [1360]), ( *($129) ? $60 : $130 ), ( *($142 + [140]) ? uint_32($68 >> [1]) : $130 ))
	$130 = ($68 + [8])
	*($121) = *($130)
	*($142 + [72]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($130) = [0]
	*(($130 = (($142 + [120]) + [8]))) = [0]
	*($142 + [120]) = (int_64)0
	$68 = CALL strlen([2608])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$40 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$262 }
	*($142 + [120]) = ($68 << [1])
	$132 = $61
	if ( $68 ){ goto $label$261 }
	goto $label$260 
	
.LABEL $label$262
	$141 = (($68 + [16]) & [-16])
	$132 = CALL $128($141)
	*($130) = $132
	*($142 + [120]) = ($141 | [1])
	*($142 + [124]) = $68
	
.LABEL $label$261
	CALL memcpy($132, [2608], $68)
	
.LABEL $label$260
	*(($132 + $68)) = [0]
	$68 = *($142 + [120])
	$132 = ($68 & [1])
	$68 = CALL $136(($142 + [72]), ( *($130) ? $61 : $132 ), ( *($142 + [124]) ? uint_32($68 >> [1]) : $132 ))
	$132 = ($68 + [8])
	*($6) = *($132)
	*($142 + [1320]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($132) = [0]
	CALL _ZNSt3__19to_stringEy(($142 + [104]), ((uint_64)CALL $fimport$14() / (uint_64)(int_64)1000))
	$68 = *($142 + [104])
	$132 = ($68 & [1])
	$131 = (($142 + [104]) + [8])
	$68 = CALL $136(($142 + [1320]), ( *($131) ? $62 : $132 ), ( *($142 + [108]) ? uint_32($68 >> [1]) : $132 ))
	$132 = ($68 + [8])
	*($124) = *($132)
	*($142 + [1248]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($132) = [0]
	*(($132 = (($142 + [88]) + [8]))) = [0]
	*($142 + [88]) = (int_64)0
	$68 = CALL strlen([2624])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$39 }
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$265 }
	*($142 + [88]) = ($68 << [1])
	$141 = $63
	if ( $68 ){ goto $label$264 }
	goto $label$263 
	
.LABEL $label$265
	$133 = (($68 + [16]) & [-16])
	$141 = CALL $128($133)
	*($132) = $141
	*($142 + [88]) = ($133 | [1])
	*($142 + [92]) = $68
	
.LABEL $label$264
	CALL memcpy($141, [2624], $68)
	
.LABEL $label$263
	*(($141 + $68)) = [0]
	$68 = *($142 + [88])
	$141 = ($68 & [1])
	$68 = CALL $136(($142 + [1248]), ( *($132) ? $63 : $141 ), ( *($142 + [92]) ? uint_32($68 >> [1]) : $141 ))
	$141 = ($68 + [8])
	*($117) = *($141)
	*($142 + [872]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($141) = [0]
	if ( ((*($142 + [88]) & [1]) == 0) ){ goto $label$266 }
	CALL $130(*($132))
	
.LABEL $label$266
	if ( ((*($142 + [1248]) & [1]) == 0) ){ goto $label$267 }
	CALL $130(*($124))
	
.LABEL $label$267
	if ( ((*($142 + [104]) & [1]) == 0) ){ goto $label$268 }
	CALL $130(*($131))
	
.LABEL $label$268
	if ( ((*($142 + [1320]) & [1]) == 0) ){ goto $label$269 }
	CALL $130(*($6))
	
.LABEL $label$269
	if ( ((*($142 + [120]) & [1]) == 0) ){ goto $label$270 }
	CALL $130(*($130))
	
.LABEL $label$270
	if ( ((*($142 + [72]) & [1]) == 0) ){ goto $label$271 }
	CALL $130(*($121))
	
.LABEL $label$271
	if ( ((*($142 + [136]) & [1]) == 0) ){ goto $label$272 }
	CALL $130(*($129))
	
.LABEL $label$272
	if ( ((*($142 + [1360]) & [1]) == 0) ){ goto $label$273 }
	CALL $130(*($119))
	
.LABEL $label$273
	if ( ((*($142 + [152]) & [1]) == 0) ){ goto $label$274 }
	CALL $130(*($128))
	
.LABEL $label$274
	if ( ((*($142 + [856]) & [1]) == 0) ){ goto $label$275 }
	CALL $130(*($115))
	
.LABEL $label$275
	if ( ((*($142 + [168]) & [1]) == 0) ){ goto $label$276 }
	CALL $130(*($127))
	
.LABEL $label$276
	if ( ((*($142 + [840]) & [1]) == 0) ){ goto $label$277 }
	CALL $130(*($113))
	
.LABEL $label$277
	if ( ((*($142 + [184]) & [1]) == 0) ){ goto $label$278 }
	CALL $130(*($76))
	
.LABEL $label$278
	if ( ((*($142 + [824]) & [1]) == 0) ){ goto $label$279 }
	CALL $130(*($111))
	
.LABEL $label$279
	if ( ((*($142 + [216]) & [1]) == 0) ){ goto $label$280 }
	CALL $130(*($125))
	
.LABEL $label$280
	if ( ((*($142 + [808]) & [1]) == 0) ){ goto $label$281 }
	CALL $130(*($109))
	
.LABEL $label$281
	if ( ((*($142 + [232]) & [1]) == 0) ){ goto $label$282 }
	CALL $130(*($123))
	
.LABEL $label$282
	if ( ((*($142 + [792]) & [1]) == 0) ){ goto $label$283 }
	CALL $130(*($107))
	
.LABEL $label$283
	if ( ((*($142 + [248]) & [1]) == 0) ){ goto $label$284 }
	CALL $130(*($122))
	
.LABEL $label$284
	if ( ((*($142 + [776]) & [1]) == 0) ){ goto $label$285 }
	CALL $130(*($105))
	
.LABEL $label$285
	if ( ((*($142 + [264]) & [1]) == 0) ){ goto $label$286 }
	CALL $130(*($120))
	
.LABEL $label$286
	if ( ((*($142 + [760]) & [1]) == 0) ){ goto $label$287 }
	CALL $130(*($104))
	
.LABEL $label$287
	if ( ((*($142 + [280]) & [1]) == 0) ){ goto $label$288 }
	CALL $130(*($118))
	
.LABEL $label$288
	if ( ((*($142 + [744]) & [1]) == 0) ){ goto $label$289 }
	CALL $130(*($102))
	
.LABEL $label$289
	if ( ((*($142 + [296]) & [1]) == 0) ){ goto $label$290 }
	CALL $130(*($116))
	
.LABEL $label$290
	if ( ((*($142 + [728]) & [1]) == 0) ){ goto $label$291 }
	CALL $130(*($100))
	
.LABEL $label$291
	if ( ((*($142 + [312]) & [1]) == 0) ){ goto $label$292 }
	CALL $130(*($114))
	
.LABEL $label$292
	if ( ((*($142 + [712]) & [1]) == 0) ){ goto $label$293 }
	CALL $130(*($98))
	
.LABEL $label$293
	if ( ((*($142 + [328]) & [1]) == 0) ){ goto $label$294 }
	CALL $130(*($112))
	
.LABEL $label$294
	if ( ((*($142 + [696]) & [1]) == 0) ){ goto $label$295 }
	CALL $130(*($96))
	
.LABEL $label$295
	if ( ((*($142 + [344]) & [1]) == 0) ){ goto $label$296 }
	CALL $130(*($110))
	
.LABEL $label$296
	if ( ((*($142 + [680]) & [1]) == 0) ){ goto $label$297 }
	CALL $130(*($95))
	
.LABEL $label$297
	if ( ((*($142 + [360]) & [1]) == 0) ){ goto $label$298 }
	CALL $130(*($108))
	
.LABEL $label$298
	if ( ((*($142 + [664]) & [1]) == 0) ){ goto $label$299 }
	CALL $130(*($93))
	
.LABEL $label$299
	if ( ((*($142 + [376]) & [1]) == 0) ){ goto $label$300 }
	CALL $130(*($106))
	
.LABEL $label$300
	if ( ((*($142 + [648]) & [1]) == 0) ){ goto $label$301 }
	CALL $130(*($92))
	
.LABEL $label$301
	if ( ((*($142 + [392]) & [1]) == 0) ){ goto $label$302 }
	CALL $130(*($7))
	
.LABEL $label$302
	if ( ((*($142 + [632]) & [1]) == 0) ){ goto $label$303 }
	CALL $130(*($90))
	
.LABEL $label$303
	if ( ((*($142 + [408]) & [1]) == 0) ){ goto $label$304 }
	CALL $130(*($103))
	
.LABEL $label$304
	if ( ((*($142 + [616]) & [1]) == 0) ){ goto $label$305 }
	CALL $130(*($88))
	
.LABEL $label$305
	if ( ((*($142 + [424]) & [1]) == 0) ){ goto $label$306 }
	CALL $130(*($101))
	
.LABEL $label$306
	if ( ((*($142 + [600]) & [1]) == 0) ){ goto $label$307 }
	CALL $130(*($86))
	
.LABEL $label$307
	if ( ((*($142 + [440]) & [1]) == 0) ){ goto $label$308 }
	CALL $130(*($99))
	
.LABEL $label$308
	if ( ((*($142 + [584]) & [1]) == 0) ){ goto $label$309 }
	CALL $130(*($84))
	
.LABEL $label$309
	if ( ((*($142 + [456]) & [1]) == 0) ){ goto $label$310 }
	CALL $130(*($97))
	
.LABEL $label$310
	if ( ((*($142 + [568]) & [1]) == 0) ){ goto $label$311 }
	CALL $130(*($85))
	
.LABEL $label$311
	if ( ((*($142 + [472]) & [1]) == 0) ){ goto $label$312 }
	CALL $130(*($67))
	
.LABEL $label$312
	if ( ((*($142 + [552]) & [1]) == 0) ){ goto $label$313 }
	CALL $130(*($87))
	
.LABEL $label$313
	if ( ((*($142 + [488]) & [1]) == 0) ){ goto $label$314 }
	CALL $130(*($94))
	
.LABEL $label$314
	if ( ((*($142 + [536]) & [1]) == 0) ){ goto $label$315 }
	CALL $130(*($89))
	
.LABEL $label$315
	if ( ((*($142 + [504]) & [1]) == 0) ){ goto $label$316 }
	CALL $130(*($138))
	
.LABEL $label$316
	if ( ((*($142 + [520]) & [1]) == 0) ){ goto $label$317 }
	CALL $130(*($91))
	
.LABEL $label$317
	$74 = *($142 + [904])
	$66 = *($142 + [952])
	if ( ((int_64)$66 <= (int_64)$74) ){ goto $label$318 }
	$69 = *($0)
	$139 = (int_64)0
	$2 = (int_64)59
	$138 = [1152]
	$140 = (int_64)0
	
.LOOP $label$319:
	if ( ((uint_64)$139 > (uint_64)(int_64)5) ){ goto $label$324 }
	$67 = *($138)
	if ( ((uint_32)(($67 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$323 }
	$67 = ($67 + [165])
	goto $label$322 
	
.LABEL $label$324
	$3 = (int_64)0
	if ( ((uint_64)$139 <= (uint_64)(int_64)11) ){ goto $label$321 }
	goto $label$320 
	
.LABEL $label$323
	$67 = ( ($67 + [208]) ? [0] : ((($67 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$322
	$3 = (int_64)((int_64)(CASTING uint_64)(uint_32 $67) << (int_64)56) >> (int_64)56)
	
.LABEL $label$321
	$3 = ((int_64)((int_64)$3 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$320
	$138 = ($138 + [1])
	$139 = ((int_64)$139 + (int_64)1)
	$140 = ((int_64)$3 | (int_64)$140)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$319 }
	*($121) = $140
	*($142 + [72]) = $69
	$69 = *($83)
	$139 = (int_64)0
	$2 = (int_64)59
	$138 = [1168]
	$140 = (int_64)0
	
.LOOP $label$325:
	if ( ((uint_64)$139 > (uint_64)(int_64)7) ){ goto $label$330 }
	$67 = *($138)
	if ( ((uint_32)(($67 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$329 }
	$67 = ($67 + [165])
	goto $label$328 
	
.LABEL $label$330
	$3 = (int_64)0
	if ( ((uint_64)$139 <= (uint_64)(int_64)11) ){ goto $label$327 }
	goto $label$326 
	
.LABEL $label$329
	$67 = ( ($67 + [208]) ? [0] : ((($67 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$328
	$3 = (int_64)((int_64)(CASTING uint_64)(uint_32 $67) << (int_64)56) >> (int_64)56)
	
.LABEL $label$327
	$3 = ((int_64)((int_64)$3 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$326
	$138 = ($138 + [1])
	$139 = ((int_64)$139 + (int_64)1)
	$140 = ((int_64)$3 | (int_64)$140)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$325 }
	$138 = *($142 + [996])
	$3 = *($73)
	CALL eosio_assert(((int_64)*($75) == (int_64)$3), [2336])
	$139 = (int_64)
	CALL eosio_assert(((int_64)$139($66 - $74)) > (int_64)-4611686018427387904), [2384])
	CALL eosio_assert(((int_64)$139 < (int_64)4611686018427387904), [2416])
	$2 = *($138 + [16])
	*($64) = $139
	*((($142 + [1248]) + [24])) = $3
	*($124) = $2
	*($142 + [1248]) = *($0)
	CALL $147($65, ($142 + [872]))
	CALL $36(($142 + [1360]), CALL $35(($142 + [1320]), ($142 + [72]), $69, $140, ($142 + [1248])))
	$138 = *($142 + [1360])
	CALL send_inline($138, (*($142 + [1364]) - $138))
	$138 = *($142 + [1360])
	if ( ($138 == 0) ){ goto $label$331 }
	*($142 + [1364]) = $138
	CALL $130($138)
	
.LABEL $label$331
	$138 = *($134)
	if ( ($138 == 0) ){ goto $label$332 }
	*($18) = $138
	CALL $130($138)
	
.LABEL $label$332
	$138 = *($19)
	if ( ($138 == 0) ){ goto $label$333 }
	*($135) = $138
	CALL $130($138)
	
.LABEL $label$333
	if ( ((*($65) & [1]) == 0) ){ goto $label$334 }
	CALL $130(*((($142 + [1248]) + [40])))
	
.LABEL $label$334
	$139 = CALL current_time()
	*($142 + [1248]) = ((uint_64)$139 / (uint_64)(int_64)1000)
	if ( ((uint_64)((uint_64)$139 / (uint_64)(int_64)86400000000) <= (uint_64)((uint_64)*($136) / (uint_64)(int_64)86400000)) ){ goto $label$335 }
	*($142 + [1324]) = ($142 + [1248])
	*($142 + [1320]) = ($142 + [984])
	CALL $86(($142 + [1144]), $9, ($142 + [1320]))
	goto $label$318 
	
.LABEL $label$335
	*($142 + [1320]) = ($142 + [984])
	CALL $87(($142 + [1144]), $9, ($142 + [1320]))
	
.LABEL $label$318
	if ( ((int_64)*($142 + [968]) < (int_64)1) ){ goto $label$336 }
	$66 = *($0)
	$139 = (int_64)0
	$2 = (int_64)59
	$138 = [1152]
	$140 = (int_64)0
	
.LOOP $label$337:
	if ( ((uint_64)$139 > (uint_64)(int_64)5) ){ goto $label$342 }
	$67 = *($138)
	if ( ((uint_32)(($67 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$341 }
	$67 = ($67 + [165])
	goto $label$340 
	
.LABEL $label$342
	$3 = (int_64)0
	if ( ((uint_64)$139 <= (uint_64)(int_64)11) ){ goto $label$339 }
	goto $label$338 
	
.LABEL $label$341
	$67 = ( ($67 + [208]) ? [0] : ((($67 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$340
	$3 = (int_64)((int_64)(CASTING uint_64)(uint_32 $67) << (int_64)56) >> (int_64)56)
	
.LABEL $label$339
	$3 = ((int_64)((int_64)$3 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$338
	$138 = ($138 + [1])
	$139 = ((int_64)$139 + (int_64)1)
	$140 = ((int_64)$3 | (int_64)$140)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$337 }
	*($121) = $140
	*($142 + [72]) = $66
	$74 = *(($9 + [16]))
	$139 = (int_64)0
	$2 = (int_64)59
	$138 = [1168]
	$140 = (int_64)0
	
.LOOP $label$343:
	if ( ((uint_64)$139 > (uint_64)(int_64)7) ){ goto $label$348 }
	$67 = *($138)
	if ( ((uint_32)(($67 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$347 }
	$67 = ($67 + [165])
	goto $label$346 
	
.LABEL $label$348
	$3 = (int_64)0
	if ( ((uint_64)$139 <= (uint_64)(int_64)11) ){ goto $label$345 }
	goto $label$344 
	
.LABEL $label$347
	$67 = ( ($67 + [208]) ? [0] : ((($67 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$346
	$3 = (int_64)((int_64)(CASTING uint_64)(uint_32 $67) << (int_64)56) >> (int_64)56)
	
.LABEL $label$345
	$3 = ((int_64)((int_64)$3 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$344
	$138 = ($138 + [1])
	$139 = ((int_64)$139 + (int_64)1)
	$140 = ((int_64)$3 | (int_64)$140)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$343 }
	*($124) = $1
	*(($64 + [4])) = *($142 + [972])
	*($142 + [1248]) = $66
	*($64) = *($142 + [968])
	*(($64 + [12])) = *((($142 + [968]) + [12]))
	*(($64 + [8])) = *($72)
	CALL $147($65, ($142 + [888]))
	CALL $36(($142 + [1360]), CALL $35(($142 + [1320]), ($142 + [72]), $74, $140, ($142 + [1248])))
	$138 = *($142 + [1360])
	CALL send_inline($138, (*($142 + [1364]) - $138))
	$138 = *($142 + [1360])
	if ( ($138 == 0) ){ goto $label$349 }
	*($142 + [1364]) = $138
	CALL $130($138)
	
.LABEL $label$349
	$138 = *($134)
	if ( ($138 == 0) ){ goto $label$350 }
	*($18) = $138
	CALL $130($138)
	
.LABEL $label$350
	$138 = *($19)
	if ( ($138 == 0) ){ goto $label$351 }
	*($135) = $138
	CALL $130($138)
	
.LABEL $label$351
	if ( ((*($65) & [1]) == 0) ){ goto $label$336 }
	CALL $130(*((($142 + [1248]) + [40])))
	
.LABEL $label$336
	*(($138 = (($142 + [56]) + [8]))) = *($75)
	*($142 + [56]) = *($142 + [904])
	$139 = *($137)
	$3 = *(($9 + [16]))
	$2 = *(($8 + [16]))
	$140 = *($83)
	$66 = *(*($142 + [996]) + [16])
	$74 = *($8)
	*((($142 + [8]) + [8])) = *($138)
	*($142 + [8]) = *($142 + [56])
	CALL _ZN5eosio8exchange19deal_fee_processingENS_5assetEyyyyyyby($0, ($142 + [8]), $140, $74, $2, $3, $139, $66, $16, $15)
	if ( ((int_64)*(*($142 + [996]) + [32]) > (int_64)0) ){ goto $label$352 }
	$139 = *($142 + [992])
	*($142 + [1248]) = $139
	$138 = (CASTING uint_32)(uint_64 (uint_64)$139 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$138) != (int_32)[0]), [384])
	CALL $89(($142 + [1248]))
	CALL $43(*($142 + [1000]), $138)
	
.LABEL $label$352
	if ( ((int_64)*($13) <= (int_64)0) ){ goto $label$353 }
	*($142 + [1248]) = (int_64)-4503599627370497
	CALL $80(($142 + [1320]), ($142 + [1000]), ($142 + [1248]))
	*($142 + [992]) = *($142 + [1320])
	if ( ((*($142 + [872]) & [1]) == 0) ){ goto $label$354 }
	CALL $130(*($117))
	
.LABEL $label$354
	if ( ((*($142 + [888]) & [1]) == 0) ){ goto $label$355 }
	CALL $130(*($126))
	
.LABEL $label$355
	$138 = *($142 + [996])
	if ( ((float_64)*($138 + [24]) <= (float_64)*($70)) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$353
	CALL eosio_assert([1], [384])
	CALL eosio_assert([1], [432])
	$138 = CALL db_next_i64(*(($11 + [76])), ($142 + [1248]))
	if ( ((int_32)$138 < (int_32)[0]) ){ goto $label$356 }
	CALL $34(($142 + [1096]), $138)
	
.LABEL $label$356
	CALL $39(($142 + [1096]), $12)
	if ( ((*($142 + [872]) & [1]) == 0) ){ goto $label$357 }
	CALL $130(*(($142 + [880])))
	
.LABEL $label$357
	if ( ((*($142 + [888]) & [1]) == 0) ){ goto $label$71 }
	CALL $130(*(($142 + [896])))
	
.LABEL $label$71
	$11 = *($142 + [1032])
	if ( ($11 == 0) ){ goto $label$358 }
	$13 = ($142 + [1036])
	$138 = *($13)
	if ( ((int_32)$138 == (int_32)$11) ){ goto $label$360 }
	
.LOOP $label$361:
	$138 = ($138 + [-24])
	$67 = *($138)
	*($138) = [0]
	if ( ($67 == 0) ){ goto $label$362 }
	CALL $130($67)
	
.LABEL $label$362
	if ( ((int_32)$11 != (int_32)$138) ){ goto $label$361 }
	$138 = *(($142 + [1032]))
	goto $label$359 
	
.LABEL $label$360
	$138 = $11
	
.LABEL $label$359
	*($13) = $11
	CALL $130($138)
	
.LABEL $label$358
	$11 = *($142 + [1080])
	if ( ($11 == 0) ){ goto $label$363 }
	$13 = ($142 + [1084])
	$138 = *($13)
	if ( ((int_32)$138 == (int_32)$11) ){ goto $label$365 }
	
.LOOP $label$366:
	$138 = ($138 + [-24])
	$67 = *($138)
	*($138) = [0]
	if ( ($67 == 0) ){ goto $label$367 }
	CALL $130($67)
	
.LABEL $label$367
	if ( ((int_32)$11 != (int_32)$138) ){ goto $label$366 }
	$138 = *(($142 + [1080]))
	goto $label$364 
	
.LABEL $label$365
	$138 = $11
	
.LABEL $label$364
	*($13) = $11
	CALL $130($138)
	
.LABEL $label$363
	$11 = *($142 + [1120])
	if ( ($11 == 0) ){ goto $label$368 }
	$13 = ($142 + [1124])
	$138 = *($13)
	if ( ((int_32)$138 == (int_32)$11) ){ goto $label$370 }
	
.LOOP $label$371:
	$138 = ($138 + [-24])
	$67 = *($138)
	*($138) = [0]
	if ( ($67 == 0) ){ goto $label$372 }
	CALL $130($67)
	
.LABEL $label$372
	if ( ((int_32)$11 != (int_32)$138) ){ goto $label$371 }
	$138 = *(($142 + [1120]))
	goto $label$369 
	
.LABEL $label$370
	$138 = $11
	
.LABEL $label$369
	*($13) = $11
	CALL $130($138)
	
.LABEL $label$368
	$11 = *($142 + [1168])
	if ( ($11 == 0) ){ goto $label$373 }
	$13 = ($142 + [1172])
	$138 = *($13)
	if ( ((int_32)$138 == (int_32)$11) ){ goto $label$375 }
	
.LOOP $label$376:
	$138 = ($138 + [-24])
	$67 = *($138)
	*($138) = [0]
	if ( ($67 == 0) ){ goto $label$377 }
	if ( ((*($67 + [32]) & [1]) == 0) ){ goto $label$378 }
	CALL $130(*(($67 + [40])))
	
.LABEL $label$378
	CALL $130($67)
	
.LABEL $label$377
	if ( ((int_32)$11 != (int_32)$138) ){ goto $label$376 }
	$138 = *(($142 + [1168]))
	goto $label$374 
	
.LABEL $label$375
	$138 = $11
	
.LABEL $label$374
	*($13) = $11
	CALL $130($138)
	
.LABEL $label$373
	$11 = *($142 + [1232])
	if ( ($11 == 0) ){ goto $label$379 }
	$13 = ($142 + [1236])
	$138 = *($13)
	if ( ((int_32)$138 == (int_32)$11) ){ goto $label$381 }
	
.LOOP $label$382:
	$138 = ($138 + [-24])
	$67 = *($138)
	*($138) = [0]
	if ( ($67 == 0) ){ goto $label$383 }
	if ( ((*($67 + [24]) & [1]) == 0) ){ goto $label$384 }
	CALL $130(*(($67 + [32])))
	
.LABEL $label$384
	CALL $130($67)
	
.LABEL $label$383
	if ( ((int_32)$11 != (int_32)$138) ){ goto $label$382 }
	$138 = *(($142 + [1232]))
	goto $label$380 
	
.LABEL $label$381
	$138 = $11
	
.LABEL $label$380
	*($13) = $11
	CALL $130($138)
	
.LABEL $label$379
	*([0] + [4]) = ($142 + [1376])
	return (unreachable)
	
.LABEL $label$70
	CALL $132(($142 + [584]))
	
.LABEL $label$69
	CALL $132(($142 + [568]))
	
.LABEL $label$68
	CALL $132(($142 + [536]))
	
.LABEL $label$67
	CALL $132(($142 + [504]))
	
.LABEL $label$66
	CALL $132(($142 + [472]))
	
.LABEL $label$65
	CALL $132(($142 + [456]))
	
.LABEL $label$64
	CALL $132(($142 + [424]))
	
.LABEL $label$63
	CALL $132(($142 + [392]))
	
.LABEL $label$62
	CALL $132(($142 + [376]))
	
.LABEL $label$61
	CALL $132(($142 + [344]))
	
.LABEL $label$60
	CALL $132(($142 + [312]))
	
.LABEL $label$59
	CALL $132(($142 + [296]))
	
.LABEL $label$58
	CALL $132(($142 + [264]))
	
.LABEL $label$57
	CALL $132(($142 + [248]))
	
.LABEL $label$56
	CALL $132(($142 + [216]))
	
.LABEL $label$55
	CALL $132(($142 + [520]))
	
.LABEL $label$54
	CALL $132(($142 + [504]))
	
.LABEL $label$53
	CALL $132(($142 + [472]))
	
.LABEL $label$52
	CALL $132(($142 + [440]))
	
.LABEL $label$51
	CALL $132(($142 + [408]))
	
.LABEL $label$50
	CALL $132(($142 + [392]))
	
.LABEL $label$49
	CALL $132(($142 + [360]))
	
.LABEL $label$48
	CALL $132(($142 + [328]))
	
.LABEL $label$47
	CALL $132(($142 + [312]))
	
.LABEL $label$46
	CALL $132(($142 + [280]))
	
.LABEL $label$45
	CALL $132(($142 + [248]))
	
.LABEL $label$44
	CALL $132(($142 + [232]))
	
.LABEL $label$43
	CALL $132(($142 + [184]))
	
.LABEL $label$42
	CALL $132(($142 + [168]))
	
.LABEL $label$41
	CALL $132(($142 + [136]))
	
.LABEL $label$40
	CALL $132(($142 + [120]))
	
.LABEL $label$39
	CALL $132(($142 + [88]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $74 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-3665743365212864510, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [104]) == (int_32)$4), [224])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $33($4, CALL $fimport$16(*($4), *($4 + [8]), (int_64)-3665743365212864512, $5))
	CALL eosio_assert(((int_32)*($2 + [104]) == (int_32)$4), [224])
	
.LABEL $label$4
	*(($2 + [120])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $75 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [432])
	$6 = *($0 + [4])
	$7 = *(($6 + [120]))
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-3665743365212864510, ($9 + [8]), *($6))
	*((*(($0 + [4])) + [120])) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [104]) == (int_32)$2), [224])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $33($2, CALL $fimport$16(*($2), *($2 + [8]), (int_64)-3665743365212864512, $3))
	CALL eosio_assert(((int_32)*($7 + [104]) == (int_32)$2), [224])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [120])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $98 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$15 = (*([0] + [4]) - [96])
	*([0] + [4]) = $15
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [1408])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1456])
	$14 = *(($1 + [96]))
	$7 = *(($1 + [88]))
	$8 = ($1 + [80])
	$9 = *($8)
	$10 = *(($1 + [56]))
	$11 = *(($1 + [48]))
	$12 = *(($1 + [24]))
	$13 = *(($1 + [16]))
	*(($16 = $15) + [16]) = *(($1 + [8]))
	*($16 + [24]) = $13
	*($16 + [32]) = $12
	*($16 + [40]) = $11
	*($16 + [48]) = $10
	*($16 + [56]) = $9
	*($16 + [64]) = $7
	*($16 + [72]) = $14
	$7 = *($1)
	*($8) = *(*($2))
	CALL eosio_assert([1], [1520])
	$2 = *($1 + [32])
	$8 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($8 + [89])
	$14 = (CASTING uint_64)(uint_32 $8)
	$8 = (($16 + [16]) + [56])
	$6 = ($16 + [48])
	$5 = (($16 + [16]) + [24])
	$4 = (($16 + [16]) + [16])
	$3 = (($16 + [16]) + [8])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$15 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$15 = ($15 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $15
	
.LABEL $label$2
	*($16 + [4]) = $15
	*($16) = $15
	*($16 + [8]) = ($15 + $2)
	CALL $68($16, $1)
	CALL db_update_i64(*($1 + [108]), (int_64)0, $15, $2)
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL free($15)
	
.LABEL $label$4
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($16 + [88]) = *(($1 + [8]))
	if ( (CALL memcmp(($16 + [16]), ($16 + [88]), [8]) == 0) ){ goto $label$6 }
	$15 = ($1 + [112])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$7 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864512, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$7
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$6
	*($16 + [88]) = *(($1 + [16]))
	if ( (CALL memcmp($3, ($16 + [88]), [8]) == 0) ){ goto $label$8 }
	$15 = ($1 + [116])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864511, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$8
	*($16 + [88]) = *(($1 + [24]))
	if ( (CALL memcmp($4, ($16 + [88]), [8]) == 0) ){ goto $label$10 }
	$15 = ($1 + [120])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864510, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$10
	*($16 + [88]) = *(($1 + [48]))
	if ( (CALL memcmp($5, ($16 + [88]), [8]) == 0) ){ goto $label$12 }
	$15 = ($1 + [124])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864509, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$12
	*($16 + [88]) = *(($1 + [56]))
	if ( (CALL memcmp($6, ($16 + [88]), [8]) == 0) ){ goto $label$14 }
	$15 = ($1 + [128])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$15 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864508, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$15
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$14
	*($16 + [88]) = *(($1 + [80]))
	if ( (CALL memcmp(($16 + [56]), ($16 + [88]), [8]) == 0) ){ goto $label$16 }
	$15 = ($1 + [132])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$17 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864507, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$17
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$16
	*($16 + [88]) = *(($1 + [88]))
	if ( (CALL memcmp(($16 + [64]), ($16 + [88]), [8]) == 0) ){ goto $label$18 }
	$15 = ($1 + [136])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$19 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864506, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$19
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$18
	*($16 + [88]) = *(($1 + [96]))
	if ( (CALL memcmp($8, ($16 + [88]), [8]) == 0) ){ goto $label$20 }
	$1 = ($1 + [140])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$21 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864505, ($16 + [80]), $7)
	*($1) = $2
	
.LABEL $label$21
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$20
	*([0] + [4]) = ($16 + [96])
}

void .FUNC _ZN5eosio8exchange4sellEyyyydNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, float_64 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	float_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	int_32 $41
	int_32 $42
	int_32 $43
	int_32 $44
	int_32 $45
	int_32 $46
	int_32 $47
	int_32 $48
	int_32 $49
	int_32 $50
	int_32 $51
	int_32 $52
	int_32 $53
	int_32 $54
	int_32 $55
	int_32 $56
	int_32 $57
	int_32 $58
	int_32 $59
	int_32 $60
	int_32 $61
	int_32 $62
	int_32 $63
	int_32 $64
	int_32 $65
	int_32 $66
	int_64 $67
	int_32 $68
	int_32 $69
	int_64 $70
	int_64 $71
	int_32 $72
	float_64 $73
	int_32 $74
	int_32 $75
	int_32 $76
	int_32 $77
	int_64 $78
	int_32 $79
	int_32 $80
	int_32 $81
	int_32 $82
	int_32 $83
	int_32 $84
	int_32 $85
	int_32 $86
	int_32 $87
	int_32 $88
	int_32 $89
	int_32 $90
	int_32 $91
	int_32 $92
	int_32 $93
	int_32 $94
	int_32 $95
	int_32 $96
	int_32 $97
	int_32 $98
	int_32 $99
	int_32 $100
	int_32 $101
	int_32 $102
	int_32 $103
	int_32 $104
	int_32 $105
	int_32 $106
	int_32 $107
	int_32 $108
	int_32 $109
	int_32 $110
	int_32 $111
	int_32 $112
	int_32 $113
	int_32 $114
	int_32 $115
	int_32 $116
	int_32 $117
	int_32 $118
	int_32 $119
	int_32 $120
	int_32 $121
	int_32 $122
	int_32 $123
	int_32 $124
	int_32 $125
	int_32 $126
	int_32 $127
	int_32 $128
	int_32 $129
	int_32 $130
	int_32 $131
	int_32 $132
	int_32 $133
	int_32 $134
	int_32 $135
	int_32 $136
	int_32 $137
	int_32 $138
	int_32 $139
	int_32 $140
	int_32 $141
	int_32 $142
	int_32 $143
	int_32 $144
	int_32 $145
	int_32 $146
	int_64 $147
	int_32 $148
	int_32 $149
	int_32 $150
	$149 = (*([0] + [4]) - [1376])
	*([0] + [4]) = $149
	CALL eosio_assert(CALL $fimport$40($1), [1712])
	$68 = [0]
	*(($149 + [1232])) = [0]
	*($149 + [1216]) = (int_64)-1
	*($149 + [1224]) = (int_64)0
	$147 = *($0)
	*($149 + [1200]) = $147
	*($149 + [1208]) = $147
	*($149 + [1236 align=4]) = (int_64)0
	*($149 + [1192]) = ($149 + [1200])
	$147 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($149 + [1096]) = $147)
	CALL $74(($149 + [1248]), ($149 + [1192]), ($149 + [1096]))
	$146 = *($149 + [1252])
	if ( ($146 == 0) ){ goto $label$3 }
	if ( ((int_64)*($149 + [1096]) != (int_64)*($146 + [24])) ){ goto $label$3 }
	$67 = *($149 + [1248])
	*($149 + [1184]) = $67
	$11 = (($149 + [1184]) | [4])
	$68 = [0]
	$146 = (CASTING uint_32)(uint_64 (uint_64)$67 >> (uint_64)(int_64)32)
	if ( ($146) == 0) ){ goto $label$1 }
	
.LOOP $label$4:
	if ( ((int_64)*($146 + [24]) != (int_64)$147) ){ goto $label$5 }
	if ( ((int_64)*($146 + [16]) != (int_64)$4) ){ goto $label$5 }
	if ( ((int_64)*($146 + [8]) == (int_64)$3) ){ goto $label$2 }
	
.LABEL $label$5
	CALL $75(($149 + [1184]))
	$146 = *($149 + [1188])
	if ( $146 ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	*($149 + [1188]) = [0]
	*($149 + [1184]) = ($149 + [1192])
	$11 = (($149 + [1184]) | [4])
	goto $label$1 
	
.LABEL $label$2
	$68 = [1]
	
.LABEL $label$1
	CALL eosio_assert($68, [1088])
	$8 = *($11)
	$68 = [0]
	*(($149 + [1176])) = [0]
	*($149 + [1160]) = (int_64)-1
	*($149 + [1168]) = (int_64)0
	$4 = *($0)
	*($149 + [1144]) = $4
	*($149 + [1152]) = $4
	*($149 + [1180]) = [0]
	$9 = [0]
	$146 = CALL db_find_i64($4, $4, (int_64)4157012474184204288, *($8 + [8]))
	if ( ((int_32)$146 < (int_32)[0]) ){ goto $label$6 }
	$9 = CALL $17(($149 + [1144]), $146)
	CALL eosio_assert(((int_32)*($9 + [40]) == (int_32)($149 + [1144])), [224])
	
.LABEL $label$6
	CALL eosio_assert(((float_64)$5 > (float_64)(float_64)0), [2192])
	$4 = *($6)
	if ( ((uint_64)((int_64)$4 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$146 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $147) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$147 = (uint_64)$147 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$147) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$147 = (uint_64)$147 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$147) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$146 = ($146 + [1])
	if ( ((int_32)$146 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$68 = [1]
	$146 = ($146 + [1])
	if ( ((int_32)$146 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$68 = [0]
	
.LABEL $label$7
	CALL eosio_assert($68, [2880])
	CALL eosio_assert(((int_64)$4 > (int_64)0), [2912])
	$68 = *($9 + [36])
	$146 = *($8 + [44])
	if ( ((uint_32)$146 <= (uint_32)$68) ){ goto $label$13 }
	$68 = ($146 - $68)
	$146 = [0]
	$10 = (float_64)1
	
.LOOP $label$14:
	$10 = ((float_64)$10 * (float_64)(float_64)10)
	$146 = ($146 + [1])
	if ( ((int_32)$146 < (int_32)$68) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$10 = (float_64)1
	if ( ((uint_32)$146 >= (uint_32)$68) ){ goto $label$12 }
	$68 = ($68 - $146)
	$146 = [0]
	$10 = (float_64)1
	
.LOOP $label$15:
	$10 = ((float_64)$10 / (float_64)(float_64)10)
	$146 = ($146 + [1])
	if ( ((int_32)$146 < (int_32)$68) ){ goto $label$15 }
	
.LABEL $label$12
	CALL eosio_assert(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $4) / (float_64)$10) * (float_64)$5) >= (float_64)(float_64)100), [2256])
	*($149 + [1112]) = (int_64)-1
	$146 = [0]
	*($149 + [1120]) = [0]
	$147 = *($0)
	*($149 + [1096]) = $147
	$4 = *($8)
	*($149 + [1104]) = $4
	*(($149 + [1124])) = [0]
	*((($149 + [1096]) + [32])) = [0]
	*((($149 + [1096]) + [40])) = [0]
	*($149 + [1132]) = [0]
	$68 = CALL db_find_i64($147, $4, (int_64)-4421661421696319488, $2)
	if ( ((int_32)$68 < (int_32)[0]) ){ goto $label$16 }
	$146 = CALL $40(($149 + [1096]), $68)
	CALL eosio_assert(((int_32)*($146 + [72]) == (int_32)($149 + [1096])), [224])
	
.LABEL $label$16
	CALL eosio_assert(($146 == 0), [2304])
	$147 = *($0)
	CALL eosio_assert(((int_64)*($149 + [1096]) == (int_64)CALL $fimport$13()), [144])
	$11 = CALL $128([104])
	$12 = CALL $50($11)
	*($11 + [72]) = ($149 + [1096])
	*($11) = $2
	*(($68 = ($11 + [16]))) = $1
	*(($82 = ($11 + [24]))) = $5
	*(($77 = ($11 + [8]))) = *($8)
	*(($11 + [44])) = *(($6 + [12]))
	$146 = ($6 + [8])
	*(($11 + [40])) = *($146)
	*(($11 + [36])) = *(($6 + [4]))
	*(($13 = ($11 + [32]))) = *($6)
	*(($11 + [56])) = *($146)
	*($11 + [48]) = *($6)
	*(($6 = ($11 + [64]))) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000)
	$14 = (($149 + [1248]) + [72])
	*($149 + [1016]) = $14
	*($149 + [1012]) = ($149 + [1248])
	*($149 + [1008]) = ($149 + [1248])
	CALL $81(($149 + [1008]), $12)
	$4 = *($11)
	$146 = (($149 + [1096]) + [8])
	*($11 + [76]) = CALL db_store_i64(*($146), (int_64)-4421661421696319488, $147, $4, ($149 + [1248]), [72])
	$111 = (($149 + [1096]) + [16])
	if ( (uint_64)($4 <= *($111)) ){ goto $label$17 }
	*($111) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	$4 = *($11)
	$2 = *($146)
	*($149 + [1320]) = *($77)
	*($11 + [80]) = CALL db_idx64_store($2, (int_64)-4421661421696319488, $147, $4, ($149 + [1320]))
	$4 = *($11)
	$2 = *($146)
	*($149 + [1320]) = *($68)
	*($11 + [84]) = CALL db_idx64_store($2, (int_64)-4421661421696319487, $147, $4, ($149 + [1320]))
	$4 = *($11)
	$2 = *($146)
	*($149 + [1320]) = *($82)
	*($11 + [88]) = CALL db_idx_double_store($2, (int_64)-4421661421696319486, $147, $4, ($149 + [1320]))
	$4 = *($11)
	$2 = *($146)
	*($149 + [1320]) = *(($11 + [32]))
	*($11 + [92]) = CALL db_idx64_store($2, (int_64)-4421661421696319485, $147, $4, ($149 + [1320]))
	$4 = *($11)
	$2 = *($146)
	*($149 + [1320]) = *($6)
	*($11 + [96]) = CALL db_idx64_store($2, (int_64)-4421661421696319484, $147, $4, ($149 + [1320]))
	*($149 + [1008]) = $11
	$147 = *($11)
	*($149 + [1248]) = $147
	$68 = *(($11 + [76]))
	*($149 + [1320]) = $68
	$6 = ($149 + [1124])
	$146 = *($6)
	if ( ((uint_32)$146 >= (uint_32)*((($149 + [1096]) + [32]))) ){ goto $label$19 }
	*($146 + [8]) = $147
	*($146 + [16]) = $68
	*($149 + [1008]) = [0]
	*($146) = $11
	*($6) = ($146 + [24])
	goto $label$18 
	
.LABEL $label$19
	CALL $52(($149 + [1120]), ($149 + [1008]), ($149 + [1248]), ($149 + [1320]))
	
.LABEL $label$18
	$146 = *($149 + [1008])
	$6 = [0]
	*($149 + [1008]) = [0]
	if ( ($146 == 0) ){ goto $label$20 }
	CALL $130($146)
	
.LABEL $label$20
	$68 = ($11 + [48])
	*($149 + [1072]) = (int_64)-1
	*($149 + [1080]) = [0]
	$147 = *($0)
	*($149 + [1056]) = $147
	$4 = *(($11 + [16]))
	*($149 + [1064]) = $4
	*(($149 + [1084])) = [0]
	*((($149 + [1056]) + [32])) = [0]
	*($149 + [1092]) = [0]
	$146 = CALL db_find_i64($147, $4, (int_64)-3020480680945127424, *($11))
	if ( ((int_32)$146 < (int_32)[0]) ){ goto $label$21 }
	$6 = CALL $41(($149 + [1056]), $146)
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)($149 + [1056])), [224])
	
.LABEL $label$21
	CALL eosio_assert(($6 == 0), [2304])
	$147 = *($0)
	CALL eosio_assert(((int_64)*($149 + [1056]) == (int_64)CALL $fimport$13()), [144])
	$146 = CALL $128([80])
	$6 = CALL $47($146)
	*($146 + [64]) = ($149 + [1056])
	*($146) = *($11)
	*($146 + [8]) = *(($11 + [8]))
	*($146 + [16]) = *(($11 + [24]))
	*(($146 + [36])) = *(($13 + [12]))
	*(($146 + [32])) = *(($13 + [8]))
	*($146 + [24]) = *($13)
	*(($146 + [48])) = *(($68 + [8]))
	*($146 + [40]) = *($68)
	*($146 + [56]) = *(($11 + [64]))
	*($149 + [1016]) = (($149 + [1248]) + [64])
	*($149 + [1012]) = ($149 + [1248])
	*($149 + [1008]) = ($149 + [1248])
	CALL $95(($149 + [1008]), $6)
	$4 = *($146)
	$68 = (($149 + [1056]) + [8])
	*($146 + [68]) = CALL db_store_i64(*($68), (int_64)-3020480680945127424, $147, $4, ($149 + [1248]), [64])
	if ( (uint_64)($4 <= *((($149 + [1056]) + [16]))) ){ goto $label$22 }
	*(($149 + [1072])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	$4 = *($146)
	$2 = *($68)
	*($149 + [1320]) = *(($146 + [8]))
	*($146 + [72]) = CALL db_idx64_store($2, (int_64)-3020480680945127424, $147, $4, ($149 + [1320]))
	*($149 + [1008]) = $146
	$147 = *($146)
	*($149 + [1248]) = $147
	$6 = *(($146 + [68]))
	*($149 + [1320]) = $6
	$82 = ($149 + [1084])
	$68 = *($82)
	if ( ((uint_32)$68 >= (uint_32)*(($149 + [1088]))) ){ goto $label$24 }
	*($68 + [8]) = $147
	*($68 + [16]) = $6
	*($149 + [1008]) = [0]
	*($68) = $146
	*($82) = ($68 + [24])
	goto $label$23 
	
.LABEL $label$24
	CALL $49(($149 + [1080]), ($149 + [1008]), ($149 + [1248]), ($149 + [1320]))
	
.LABEL $label$23
	$146 = *($149 + [1008])
	*($149 + [1008]) = [0]
	if ( ($146 == 0) ){ goto $label$25 }
	CALL $130($146)
	
.LABEL $label$25
	*($149 + [1024]) = (int_64)-1
	*($149 + [1032]) = [0]
	*($149 + [1008]) = *($0)
	*($149 + [1016]) = *($8)
	*(($149 + [1036])) = [0]
	*(($149 + [1040])) = [0]
	*(($149 + [1048])) = [0]
	*($149 + [1044]) = [0]
	*($149 + [1000]) = ($149 + [1008])
	*($149 + [1248]) = (int_64)-4503599627370497
	CALL $100(($149 + [1320]), ($149 + [1000]), ($149 + [1248]))
	if ( (*($149 + [1324]) == 0) ){ goto $label$26 }
	$146 = *($7)
	$68 = ($146 & [1])
	if ( $68 ){ goto $label$28 }
	$146 = uint_32($146 >> [1])
	goto $label$27 
	
.LABEL $label$28
	$146 = *($7 + [4])
	
.LABEL $label$27
	$71 = (CASTING uint_64)(uint_32 ($149 + [1000]))
	if ( ($146 == 0) ){ goto $label$32 }
	if ( $68 ){ goto $label$31 }
	$146 = ($7 + [1])
	goto $label$30 
	
.LABEL $label$32
	$3 = (int_64)0
	$15 = [0]
	goto $label$29 
	
.LABEL $label$31
	$146 = *($7 + [8])
	
.LABEL $label$30
	$68 = [-1]
	
.LOOP $label$33:
	$6 = ($146 + $68)
	$7 = ($68 + [1])
	$68 = $7
	if ( *(($6 + [1])) ){ goto $label$33 }
	$1 = (CASTING uint_64)(uint_32 $7)
	$147 = (int_64)0
	$4 = (int_64)59
	$3 = (int_64)0
	
.LOOP $label$34:
	$2 = (int_64)0
	if ( ((uint_64)$147 >= (uint_64)$1) ){ goto $label$35 }
	$68 = *($146)
	if ( ((uint_32)(($68 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$68 = ($68 + [165])
	goto $label$36 
	
.LABEL $label$37
	$68 = ( ($68 + [208]) ? [0] : ((($68 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $68) << (int_64)56) >> (int_64)56)
	
.LABEL $label$35
	if ( ((uint_64)$147 > (uint_64)(int_64)11) ){ goto $label$39 }
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	goto $label$38 
	
.LABEL $label$39
	$2 = ((int_64)$2 & (int_64)15)
	
.LABEL $label$38
	$146 = ($146 + [1])
	$147 = ((int_64)$147 + (int_64)1)
	$3 = ((int_64)$2 | (int_64)$3)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$34 }
	$15 = CALL is_account($3)
	
.LABEL $label$29
	*($149 + [1248]) = $71
	$72 = ($11 + [24])
	$73 = *($72)
	$5 = *(*(CALL $101(($149 + [1248])) + [4]) + [24])
	if ( (((float_64)$5 < (float_64)$73) | (((float_64)$5 != (float_64)$5) | ((float_64)$73 != (float_64)$73))) ){ goto $label$26 }
	$19 = (uint_64)(int_64)1397703936 >> (uint_64)(int_64)8)
	$64 = (($149 + [1248]) + [32])
	$63 = (($149 + [1248]) + [16])
	$62 = (($149 + [88]) | [1])
	$61 = (($149 + [104]) | [1])
	$60 = (($149 + [120]) | [1])
	$59 = (($149 + [136]) | [1])
	$58 = (($149 + [152]) | [1])
	$57 = (($149 + [168]) | [1])
	$56 = (($149 + [184]) | [1])
	$55 = (($149 + [216]) | [1])
	$54 = (($149 + [232]) | [1])
	$53 = (($149 + [248]) | [1])
	$52 = (($149 + [264]) | [1])
	$51 = (($149 + [280]) | [1])
	$50 = (($149 + [296]) | [1])
	$49 = (($149 + [312]) | [1])
	$48 = (($149 + [328]) | [1])
	$47 = (($149 + [344]) | [1])
	$46 = (($149 + [360]) | [1])
	$45 = (($149 + [376]) | [1])
	$44 = (($149 + [392]) | [1])
	$43 = (($149 + [408]) | [1])
	$42 = (($149 + [424]) | [1])
	$41 = (($149 + [440]) | [1])
	$40 = (($149 + [456]) | [1])
	$39 = (($149 + [472]) | [1])
	$38 = (($149 + [488]) | [1])
	$37 = (($149 + [504]) | [1])
	$36 = (($149 + [520]) | [1])
	$35 = (($149 + [232]) | [1])
	$34 = (($149 + [248]) | [1])
	$33 = (($149 + [280]) | [1])
	$32 = (($149 + [312]) | [1])
	$31 = (($149 + [328]) | [1])
	$30 = (($149 + [360]) | [1])
	$29 = (($149 + [392]) | [1])
	$28 = (($149 + [408]) | [1])
	$27 = (($149 + [440]) | [1])
	$26 = (($149 + [472]) | [1])
	$25 = (($149 + [504]) | [1])
	$24 = (($149 + [520]) | [1])
	$23 = (($149 + [536]) | [1])
	$22 = (($149 + [552]) | [1])
	$21 = (($149 + [568]) | [1])
	$20 = (($149 + [584]) | [1])
	$18 = (($149 + [1320]) + [16])
	$17 = (($149 + [1320]) + [32])
	$16 = (($149 + [1320]) + [24])
	$7 = (($149 + [1320]) + [8])
	$74 = ($11 + [40])
	$81 = (($149 + [936]) + [12])
	$83 = ($11 + [76])
	$88 = ($13 + [4])
	$142 = ($149 + [1348])
	$144 = ($8 + [96])
	$143 = ($149 + [1340])
	$145 = ($8 + [48])
	$87 = ($11 + [92])
	$86 = ($11 + [88])
	$85 = ($11 + [84])
	$84 = ($11 + [80])
	
.LOOP $label$40:
	if ( ((int_64)*($13) < (int_64)1) ){ goto $label$26 }
	*($149 + [1248]) = $71
	*($149 + [992]) = *(*(CALL $101(($149 + [1248])) + [4]) + [24])
	CALL $100(($149 + [1248]), ($149 + [1000]), ($149 + [992]))
	$66 = [0]
	$65 = ($149 + [1000])
	$146 = *($149 + [1252])
	if ( ($146 == 0) ){ goto $label$45 }
	$6 = [0]
	if ( ((float_64)*($149 + [992]) != (float_64)*($146 + [24])) ){ goto $label$44 }
	$65 = *($149 + [1248])
	$6 = $146
	if ( $6 ){ goto $label$42 }
	goto $label$43 
	
.LABEL $label$45
	$6 = [0]
	$150 = [1]
	goto $label$41 
	
.LABEL $label$44
	$150 = [1]
	goto $label$41 
	
.LABEL $label$43
	$150 = [515]
	goto $label$41 
	
.LABEL $label$42
	$150 = [2]
	
.LABEL $label$41
	
.LOOP $label$46:
	goto $label$376 
	
.LABEL $label$890
	if ( ($6 == 0) ){ goto $label$339 }
	$150 = [2]
	goto $label$46 
	
.LABEL $label$889
	*($149 + [984]) = *($6 + [24])
	$2 = *($74)
	*(($75 = (($149 + [968]) + [8]))) = $2
	*($149 + [968]) = (int_64)0
	CALL eosio_assert([1], [960])
	$147 = (uint_64)$2 >> (uint_64)(int_64)8)
	$146 = [0]
	$150 = [3]
	goto $label$46 
	
.LABEL $label$888
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $147) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$335 }
	$150 = [511]
	goto $label$46 
	
.LABEL $label$887
	$147 = (uint_64)$147 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$147) & (int_64)255) != (int_64)0) ){ goto $label$47 }
	$150 = [513]
	goto $label$46 
	
.LABEL $label$886
	$147 = (uint_64)$147 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$147) & (int_64)255) != (int_64)0) ){ goto $label$336 }
	$150 = [514]
	goto $label$46 
	
.LABEL $label$885
	$146 = ($146 + [1])
	if ( ((int_32)$146 < (int_32)[7]) ){ goto $label$48 }
	$150 = [512]
	goto $label$46 
	
.LABEL $label$884
	$68 = [1]
	$146 = ($146 + [1])
	if ( ((int_32)$146 < (int_32)[7]) ){ goto $label$338 }
	goto $label$337 
	
.LABEL $label$883
	$68 = [0]
	$150 = [5]
	goto $label$46 
	
.LABEL $label$882
	CALL eosio_assert($68, [672])
	$82 = ($6 + [40])
	$1 = *($82)
	*(($76 = (($149 + [952]) + [8]))) = $1
	*($149 + [952]) = (int_64)0
	CALL eosio_assert([1], [960])
	$147 = (uint_64)$1 >> (uint_64)(int_64)8)
	$146 = [0]
	$150 = [6]
	goto $label$46 
	
.LABEL $label$881
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $147) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$331 }
	$150 = [507]
	goto $label$46 
	
.LABEL $label$880
	$147 = (uint_64)$147 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$147) & (int_64)255) != (int_64)0) ){ goto $label$49 }
	$150 = [509]
	goto $label$46 
	
.LABEL $label$879
	$147 = (uint_64)$147 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$147) & (int_64)255) != (int_64)0) ){ goto $label$332 }
	$150 = [510]
	goto $label$46 
	
.LABEL $label$878
	$146 = ($146 + [1])
	if ( ((int_32)$146 < (int_32)[7]) ){ goto $label$50 }
	$150 = [508]
	goto $label$46 
	
.LABEL $label$877
	$68 = [1]
	$146 = ($146 + [1])
	if ( ((int_32)$146 < (int_32)[7]) ){ goto $label$334 }
	goto $label$333 
	
.LABEL $label$876
	$68 = [0]
	$150 = [8]
	goto $label$46 
	
.LABEL $label$875
	CALL eosio_assert($68, [672])
	$147 = *($82)
	$67 = (Rounds 0)(((float_64)*($149 + [984]) * (float_64)((float_64)(CASTING float_64)(int_64 *($13)) / (float_64)$10)))
	CALL eosio_assert((uint_64)(((int_64)$67 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [960])
	$147 = (uint_64)$147 >> (uint_64)(int_64)8)
	$146 = [0]
	$150 = [9]
	goto $label$46 
	
.LABEL $label$874
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $147) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$327 }
	$150 = [503]
	goto $label$46 
	
.LABEL $label$873
	$147 = (uint_64)$147 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$147) & (int_64)255) != (int_64)0) ){ goto $label$51 }
	$150 = [505]
	goto $label$46 
	
.LABEL $label$872
	$147 = (uint_64)$147 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$147) & (int_64)255) != (int_64)0) ){ goto $label$328 }
	$150 = [506]
	goto $label$46 
	
.LABEL $label$871
	$146 = ($146 + [1])
	if ( ((int_32)$146 < (int_32)[7]) ){ goto $label$52 }
	$150 = [504]
	goto $label$46 
	
.LABEL $label$870
	$68 = [1]
	$146 = ($146 + [1])
	if ( ((int_32)$146 < (int_32)[7]) ){ goto $label$330 }
	goto $label$329 
	
.LABEL $label$869
	$68 = [0]
	$150 = [11]
	goto $label$46 
	
.LABEL $label$868
	CALL eosio_assert($68, [672])
	$4 = *($6 + [32])
	if ( ((int_64)$67 >= (int_64)$4) ){ goto $label$326 }
	$150 = [502]
	goto $label$46 
	
.LABEL $label$867
	$147 = *($13)
	$4 = $67
	goto $label$325 
	
.LABEL $label$866
	$147 = (Rounds 0)(((float_64)((float_64)$10 * (float_64)(CASTING float_64)(int_64 $4)) / (float_64)*($149 + [984])))
	$150 = [13]
	goto $label$46 
	
.LABEL $label$865
	*($149 + [968]) = $147
	*($149 + [952]) = $4
	CALL eosio_assert([1], [1280])
	$146 = *($149 + [1000])
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$146), [1408])
	CALL eosio_assert(((int_64)*($146) == (int_64)CALL $fimport$13()), [1456])
	$68 = ($6 + [8])
	*($149 + [1320]) = *($68)
	$111 = ($6 + [64])
	$147 = *($111)
	$77 = ($6 + [32])
	$67 = *($77)
	$121 = ($6 + [24])
	$78 = *($121)
	$79 = ($6 + [16])
	*($7) = *($79)
	*($18) = $78
	*($16) = $67
	*($17) = $147
	$147 = *($6)
	CALL eosio_assert(((int_64)$1 == (int_64)*($82)), [2336])
	$4 = (int_64)
	*($77) = $4(*($77) - $4))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [2384])
	CALL eosio_assert(((int_64)*($77) < (int_64)4611686018427387904), [2416])
	CALL eosio_assert(((int_64)$147 == (int_64)*($6)), [1520])
	*(($80 = (($149 + [904]) + [8]))) = $14
	*($149 + [908]) = ($149 + [1248])
	*($149 + [904]) = ($149 + [1248])
	CALL $78(($149 + [904]), $6)
	CALL db_update_i64(*($6 + [76]), (int_64)0, ($149 + [1248]), [72])
	if ( (uint_64)($147 <= *($146 + [16])) ){ goto $label$324 }
	$150 = [14]
	goto $label$46 
	
.LABEL $label$864
	*(($146 + [16])) = ( (int_64)-2 ? ((int_64)$147 + (int_64)1) : ((uint_64)$147 > (uint_64)(int_64)-3) )
	$150 = [15]
	goto $label$46 
	
.LABEL $label$863
	*($149 + [72]) = *($68)
	if ( (CALL memcmp(($149 + [1320]), ($149 + [72]), [8]) == 0) ){ goto $label$323 }
	$150 = [16]
	goto $label$46 
	
.LABEL $label$862
	$129 = ($6 + [80])
	$68 = *($129)
	if ( ((int_32)$68 > (int_32)[-1]) ){ goto $label$322 }
	$150 = [501]
	goto $label$46 
	
.LABEL $label$861
	$68 = CALL db_idx64_find_primary(*($146), *($146 + [8]), (int_64)4520852774463733760, ($149 + [1360]), $147)
	*($129) = $68
	$150 = [17]
	goto $label$46 
	
.LABEL $label$860
	CALL db_idx64_update($68, (int_64)0, ($149 + [72]))
	$150 = [18]
	goto $label$46 
	
.LABEL $label$859
	*($149 + [72]) = *($79)
	if ( (CALL memcmp($7, ($149 + [72]), [8]) == 0) ){ goto $label$321 }
	$150 = [19]
	goto $label$46 
	
.LABEL $label$858
	$129 = ($6 + [84])
	$68 = *($129)
	if ( ((int_32)$68 > (int_32)[-1]) ){ goto $label$320 }
	$150 = [500]
	goto $label$46 
	
.LABEL $label$857
	$68 = CALL db_idx64_find_primary(*($146), *($146 + [8]), (int_64)4520852774463733761, ($149 + [1360]), $147)
	*($129) = $68
	$150 = [20]
	goto $label$46 
	
.LABEL $label$856
	CALL db_idx64_update($68, (int_64)0, ($149 + [72]))
	$150 = [21]
	goto $label$46 
	
.LABEL $label$855
	*($149 + [72]) = *($121)
	if ( (CALL memcmp($18, ($149 + [72]), [8]) == 0) ){ goto $label$319 }
	$150 = [22]
	goto $label$46 
	
.LABEL $label$854
	$121 = ($6 + [88])
	$68 = *($121)
	if ( ((int_32)$68 > (int_32)[-1]) ){ goto $label$318 }
	$150 = [499]
	goto $label$46 
	
.LABEL $label$853
	$68 = CALL db_idx_double_find_primary(*($146), *($146 + [8]), (int_64)4520852774463733762, ($149 + [1360]), $147)
	*($121) = $68
	$150 = [23]
	goto $label$46 
	
.LABEL $label$852
	CALL db_idx_double_update($68, (int_64)0, ($149 + [72]))
	$150 = [24]
	goto $label$46 
	
.LABEL $label$851
	*($149 + [72]) = *($77)
	if ( (CALL memcmp($16, ($149 + [72]), [8]) == 0) ){ goto $label$317 }
	$150 = [25]
	goto $label$46 
	
.LABEL $label$850
	$121 = ($6 + [92])
	$68 = *($121)
	if ( ((int_32)$68 > (int_32)[-1]) ){ goto $label$316 }
	$150 = [498]
	goto $label$46 
	
.LABEL $label$849
	$68 = CALL db_idx64_find_primary(*($146), *($146 + [8]), (int_64)4520852774463733763, ($149 + [1360]), $147)
	*($121) = $68
	$150 = [26]
	goto $label$46 
	
.LABEL $label$848
	CALL db_idx64_update($68, (int_64)0, ($149 + [72]))
	$150 = [27]
	goto $label$46 
	
.LABEL $label$847
	*($149 + [72]) = *($111)
	if ( (CALL memcmp($17, ($149 + [72]), [8]) == 0) ){ goto $label$315 }
	$150 = [28]
	goto $label$46 
	
.LABEL $label$846
	$111 = ($6 + [96])
	$68 = *($111)
	if ( ((int_32)$68 > (int_32)[-1]) ){ goto $label$314 }
	$150 = [497]
	goto $label$46 
	
.LABEL $label$845
	$68 = CALL db_idx64_find_primary(*($146), *($146 + [8]), (int_64)4520852774463733764, ($149 + [1360]), $147)
	*($111) = $68
	$150 = [29]
	goto $label$46 
	
.LABEL $label$844
	CALL db_idx64_update($68, (int_64)0, ($149 + [72]))
	$150 = [30]
	goto $label$46 
	
.LABEL $label$843
	$147 = *($6)
	*($81) = *(($6 + [44]))
	*(($146 = (($149 + [936]) + [8]))) = *($82)
	*($149 + [940]) = *(($6 + [36]))
	*($149 + [936]) = *($6 + [32])
	$4 = *($6 + [16])
	*((($149 + [32]) + [8])) = *($146)
	*($149 + [32]) = *($149 + [936])
	CALL _ZN5eosio8exchange18adjust_u_buy_orderEyyNS_5assetE($0, $4, $147, ($149 + [32]))
	CALL eosio_assert([1], [1280])
	CALL eosio_assert(((int_32)*(($11 + [72])) == (int_32)($149 + [1096])), [1408])
	CALL eosio_assert(((int_64)*($149 + [1096]) == (int_64)CALL $fimport$13()), [1456])
	$68 = ($11 + [8])
	*($149 + [1320]) = *($68)
	$111 = ($11 + [64])
	$147 = *($111)
	$146 = ($11 + [32])
	$4 = *($146)
	$1 = *($72)
	$82 = ($11 + [16])
	*($7) = *($82)
	*($18) = $1
	*($16) = $4
	*($17) = $147
	$147 = *($11)
	CALL eosio_assert(((int_64)$2 == (int_64)*($74)), [2336])
	$4 = (int_64)
	*($146) = $4(*($146) - *($149 + [968])))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [2384])
	CALL eosio_assert(((int_64)*($146) < (int_64)4611686018427387904), [2416])
	CALL eosio_assert(((int_64)$147 == (int_64)*($11)), [1520])
	*($80) = $14
	*($149 + [908]) = ($149 + [1248])
	*($149 + [904]) = ($149 + [1248])
	CALL $81(($149 + [904]), $12)
	CALL db_update_i64(*($83), (int_64)0, ($149 + [1248]), [72])
	$146 = (($149 + [1096]) + [16])
	if ( (uint_64)($147 <= *($146)) ){ goto $label$313 }
	$150 = [31]
	goto $label$46 
	
.LABEL $label$842
	*($146) = ( (int_64)-2 ? ((int_64)$147 + (int_64)1) : ((uint_64)$147 > (uint_64)(int_64)-3) )
	$150 = [32]
	goto $label$46 
	
.LABEL $label$841
	*($149 + [72]) = *($68)
	if ( (CALL memcmp(($149 + [1320]), ($149 + [72]), [8]) == 0) ){ goto $label$312 }
	$150 = [33]
	goto $label$46 
	
.LABEL $label$840
	$146 = *($84)
	if ( ((int_32)$146 > (int_32)[-1]) ){ goto $label$311 }
	$150 = [496]
	goto $label$46 
	
.LABEL $label$839
	$146 = CALL db_idx64_find_primary(*($149 + [1096]), *((($149 + [1096]) + [8])), (int_64)-4421661421696319488, ($149 + [1360]), $147)
	*($84) = $146
	$150 = [34]
	goto $label$46 
	
.LABEL $label$838
	CALL db_idx64_update($146, (int_64)0, ($149 + [72]))
	$150 = [35]
	goto $label$46 
	
.LABEL $label$837
	*($149 + [72]) = *($82)
	if ( (CALL memcmp($7, ($149 + [72]), [8]) == 0) ){ goto $label$310 }
	$150 = [36]
	goto $label$46 
	
.LABEL $label$836
	$146 = *($85)
	if ( ((int_32)$146 > (int_32)[-1]) ){ goto $label$309 }
	$150 = [495]
	goto $label$46 
	
.LABEL $label$835
	$146 = CALL db_idx64_find_primary(*($149 + [1096]), *((($149 + [1096]) + [8])), (int_64)-4421661421696319487, ($149 + [1360]), $147)
	*($85) = $146
	$150 = [37]
	goto $label$46 
	
.LABEL $label$834
	CALL db_idx64_update($146, (int_64)0, ($149 + [72]))
	$150 = [38]
	goto $label$46 
	
.LABEL $label$833
	*($149 + [72]) = *($72)
	if ( (CALL memcmp($18, ($149 + [72]), [8]) == 0) ){ goto $label$308 }
	$150 = [39]
	goto $label$46 
	
.LABEL $label$832
	$146 = *($86)
	if ( ((int_32)$146 > (int_32)[-1]) ){ goto $label$307 }
	$150 = [494]
	goto $label$46 
	
.LABEL $label$831
	$146 = CALL db_idx_double_find_primary(*($149 + [1096]), *((($149 + [1096]) + [8])), (int_64)-4421661421696319486, ($149 + [1360]), $147)
	*($86) = $146
	$150 = [40]
	goto $label$46 
	
.LABEL $label$830
	CALL db_idx_double_update($146, (int_64)0, ($149 + [72]))
	$150 = [41]
	goto $label$46 
	
.LABEL $label$829
	*($149 + [72]) = *($13)
	if ( (CALL memcmp($16, ($149 + [72]), [8]) == 0) ){ goto $label$306 }
	$150 = [42]
	goto $label$46 
	
.LABEL $label$828
	$146 = *($87)
	if ( ((int_32)$146 > (int_32)[-1]) ){ goto $label$305 }
	$150 = [493]
	goto $label$46 
	
.LABEL $label$827
	$146 = CALL db_idx64_find_primary(*($149 + [1096]), *((($149 + [1096]) + [8])), (int_64)-4421661421696319485, ($149 + [1360]), $147)
	*($87) = $146
	$150 = [43]
	goto $label$46 
	
.LABEL $label$826
	CALL db_idx64_update($146, (int_64)0, ($149 + [72]))
	$150 = [44]
	goto $label$46 
	
.LABEL $label$825
	*($149 + [72]) = *($111)
	if ( (CALL memcmp($17, ($149 + [72]), [8]) == 0) ){ goto $label$304 }
	$150 = [45]
	goto $label$46 
	
.LABEL $label$824
	$68 = ($11 + [96])
	$146 = *($68)
	if ( ((int_32)$146 > (int_32)[-1]) ){ goto $label$303 }
	$150 = [492]
	goto $label$46 
	
.LABEL $label$823
	$146 = CALL db_idx64_find_primary(*($149 + [1096]), *((($149 + [1096]) + [8])), (int_64)-4421661421696319484, ($149 + [1360]), $147)
	*($68) = $146
	$150 = [46]
	goto $label$46 
	
.LABEL $label$822
	CALL db_idx64_update($146, (int_64)0, ($149 + [72]))
	$150 = [47]
	goto $label$46 
	
.LABEL $label$821
	*((($149 + [920]) + [12])) = *(($13 + [12]))
	*(($146 = (($149 + [920]) + [8]))) = *(($13 + [8]))
	*($149 + [924]) = *($88)
	*($149 + [920]) = *($13)
	$147 = *($82)
	$4 = *($11)
	*((($149 + [16]) + [8])) = *($146)
	*($149 + [16]) = *($149 + [920])
	CALL _ZN5eosio8exchange19adjust_u_sell_orderEyyNS_5assetE($0, $147, $4, ($149 + [16]))
	$147 = *($76)
	*($80) = $147
	*($149 + [904]) = (int_64)0
	CALL eosio_assert([1], [960])
	$147 = (uint_64)$147 >> (uint_64)(int_64)8)
	$146 = [0]
	$150 = [48]
	goto $label$46 
	
.LABEL $label$820
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $147) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$299 }
	$150 = [488]
	goto $label$46 
	
.LABEL $label$819
	$147 = (uint_64)$147 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$147) & (int_64)255) != (int_64)0) ){ goto $label$53 }
	$150 = [490]
	goto $label$46 
	
.LABEL $label$818
	$147 = (uint_64)$147 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$147) & (int_64)255) != (int_64)0) ){ goto $label$300 }
	$150 = [491]
	goto $label$46 
	
.LABEL $label$817
	$146 = ($146 + [1])
	if ( ((int_32)$146 < (int_32)[7]) ){ goto $label$54 }
	$150 = [489]
	goto $label$46 
	
.LABEL $label$816
	$68 = [1]
	$146 = ($146 + [1])
	if ( ((int_32)$146 < (int_32)[7]) ){ goto $label$302 }
	goto $label$301 
	
.LABEL $label$815
	$68 = [0]
	$150 = [50]
	goto $label$46 
	
.LABEL $label$814
	CALL eosio_assert($68, [672])
	$89 = ($9 + [8])
	$67 = *($89)
	$147 = (int_64)0
	$2 = (int_64)59
	$146 = [2032]
	$1 = (int_64)0
	$150 = [51]
	goto $label$46 
	
.LABEL $label$813
	if ( ((uint_64)$147 > (uint_64)(int_64)10) ){ goto $label$297 }
	$150 = [484]
	goto $label$46 
	
.LABEL $label$812
	$68 = *($146)
	if ( ((uint_32)(($68 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$56 }
	$150 = [487]
	goto $label$46 
	
.LABEL $label$811
	$68 = ($68 + [165])
	goto $label$55 
	
.LABEL $label$810
	$4 = (int_64)0
	if ( ((int_64)$147 == (int_64)11) ){ goto $label$296 }
	goto $label$295 
	
.LABEL $label$809
	$68 = ( ($68 + [208]) ? [0] : ((($68 + [-49]) & [255]) <= [5]) )
	$150 = [486]
	goto $label$46 
	
.LABEL $label$808
	$4 = (int_64)((int_64)(CASTING uint_64)(uint_32 $68) << (int_64)56) >> (int_64)56)
	$150 = [483]
	goto $label$46 
	
.LABEL $label$807
	$4 = ((int_64)((int_64)$4 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	$150 = [53]
	goto $label$46 
	
.LABEL $label$806
	$146 = ($146 + [1])
	$2 = ((int_64)$2 + (int_64)-5)
	$1 = ((int_64)$4 | (int_64)$1)
	$147 = ((int_64)$147 + (int_64)1)
	if ( ((int_64)$147 != (int_64)13) ){ goto $label$298 }
	$150 = [54]
	goto $label$46 
	
.LABEL $label$805
	$147 = (int_64)1
	if ( ((int_64)$67 != (int_64)$1) ){ goto $label$294 }
	$150 = [482]
	goto $label$46 
	
.LABEL $label$804
	$147 = ( (int_64)2 ? (int_64)1 : ((int_64)*(($9 + [16])) == (int_64)$19) )
	$150 = [55]
	goto $label$46 
	
.LABEL $label$803
	*($149 + [904]) = ((int_64)((int_64)*($149 + [952]) * (int_64)$147) / (int_64)1000)
	*(($90 = (($149 + [584]) + [8]))) = [0]
	*($149 + [584]) = (int_64)0
	$146 = CALL strlen([2448])
	if ( ((uint_32)$146 >= (uint_32)[-16]) ){ goto $label$373 }
	$150 = [56]
	goto $label$46 
	
.LABEL $label$802
	if ( ((uint_32)$146 >= (uint_32)[11]) ){ goto $label$293 }
	$150 = [481]
	goto $label$46 
	
.LABEL $label$801
	*($149 + [584]) = ($146 << [1])
	$68 = $20
	if ( $146 ){ goto $label$291 }
	goto $label$292 
	
.LABEL $label$800
	$111 = (($146 + [16]) & [-16])
	$68 = CALL $128($111)
	*($90) = $68
	*($149 + [584]) = ($111 | [1])
	*($149 + [588]) = $146
	$150 = [58]
	goto $label$46 
	
.LABEL $label$799
	CALL memcpy($68, [2448], $146)
	$150 = [59]
	goto $label$46 
	
.LABEL $label$798
	*(($68 + $146)) = [0]
	*(($91 = (($149 + [568]) + [8]))) = [0]
	*($149 + [568]) = (int_64)0
	$146 = CALL strlen([2464])
	if ( ((uint_32)$146 >= (uint_32)[-16]) ){ goto $label$372 }
	$150 = [60]
	goto $label$46 
	
.LABEL $label$797
	if ( ((uint_32)$146 >= (uint_32)[11]) ){ goto $label$290 }
	$150 = [480]
	goto $label$46 
	
.LABEL $label$796
	*($149 + [568]) = ($146 << [1])
	$68 = $21
	if ( $146 ){ goto $label$288 }
	goto $label$289 
	
.LABEL $label$795
	$111 = (($146 + [16]) & [-16])
	$68 = CALL $128($111)
	*($91) = $68
	*($149 + [568]) = ($111 | [1])
	*($149 + [572]) = $146
	$150 = [62]
	goto $label$46 
	
.LABEL $label$794
	CALL memcpy($68, [2464], $146)
	$150 = [63]
	goto $label$46 
	
.LABEL $label$793
	*(($68 + $146)) = [0]
	$146 = *($149 + [568])
	$68 = ($146 & [1])
	$146 = CALL $136(($149 + [584]), ( *($91) ? $21 : $68 ), ( *($149 + [572]) ? uint_32($146 >> [1]) : $68 ))
	$68 = ($146 + [8])
	*(($92 = (($149 + [600]) + [8]))) = *($68)
	*($149 + [600]) = *($146)
	*($146) = [0]
	*(($146 + [4])) = [0]
	*($68) = [0]
	CALL _ZNSt3__19to_stringEy(($149 + [552]), *($8))
	$146 = *($149 + [552])
	$68 = ($146 & [1])
	$93 = (($149 + [552]) + [8])
	$146 = CALL $136(($149 + [600]), ( *($93) ? $22 : $68 ), ( *($149 + [556]) ? uint_32($146 >> [1]) : $68 ))
	$68 = ($146 + [8])
	*(($94 = (($149 + [616]) + [8]))) = *($68)
	*($149 + [616]) = *($146)
	*($146) = [0]
	*(($146 + [4])) = [0]
	*($68) = [0]
	*(($95 = (($149 + [536]) + [8]))) = [0]
	*($149 + [536]) = (int_64)0
	$146 = CALL strlen([2480])
	if ( ((uint_32)$146 >= (uint_32)[-16]) ){ goto $label$371 }
	$150 = [64]
	goto $label$46 
	
.LABEL $label$792
	if ( ((uint_32)$146 >= (uint_32)[11]) ){ goto $label$287 }
	$150 = [479]
	goto $label$46 
	
.LABEL $label$791
	*($149 + [536]) = ($146 << [1])
	$68 = $23
	if ( $146 ){ goto $label$285 }
	goto $label$286 
	
.LABEL $label$790
	$111 = (($146 + [16]) & [-16])
	$68 = CALL $128($111)
	*($95) = $68
	*($149 + [536]) = ($111 | [1])
	*($149 + [540]) = $146
	$150 = [66]
	goto $label$46 
	
.LABEL $label$789
	CALL memcpy($68, [2480], $146)
	$150 = [67]
	goto $label$46 
	
.LABEL $label$788
	*(($68 + $146)) = [0]
	$146 = *($149 + [536])
	$68 = ($146 & [1])
	$146 = CALL $136(($149 + [616]), ( *($95) ? $23 : $68 ), ( *($149 + [540]) ? uint_32($146 >> [1]) : $68 ))
	$68 = ($146 + [8])
	*(($96 = (($149 + [632]) + [8]))) = *($68)
	*($149 + [632]) = *($146)
	*($146) = [0]
	*(($146 + [4])) = [0]
	*($68) = [0]
	CALL _ZNSt3__19to_stringEy(($149 + [520]), *($6))
	$146 = *($149 + [520])
	$68 = ($146 & [1])
	$97 = (($149 + [520]) + [8])
	$146 = CALL $136(($149 + [632]), ( *($97) ? $24 : $68 ), ( *($149 + [524]) ? uint_32($146 >> [1]) : $68 ))
	$68 = ($146 + [8])
	*(($98 = (($149 + [648]) + [8]))) = *($68)
	*($149 + [648]) = *($146)
	*($146) = [0]
	*(($146 + [4])) = [0]
	*($68) = [0]
	*(($146 = (($149 + [504]) + [8]))) = [0]
	*($149 + [504]) = (int_64)0
	$68 = CALL strlen([2496])
	if ( ((uint_32)$68 >= (uint_32)[-16]) ){ goto $label$370 }
	$150 = [68]
	goto $label$46 
	
.LABEL $label$787
	if ( ((uint_32)$68 >= (uint_32)[11]) ){ goto $label$284 }
	$150 = [478]
	goto $label$46 
	
.LABEL $label$786
	*($149 + [504]) = ($68 << [1])
	$111 = $25
	if ( $68 ){ goto $label$282 }
	goto $label$283 
	
.LABEL $label$785
	$121 = (($68 + [16]) & [-16])
	$111 = CALL $128($121)
	*($146) = $111
	*($149 + [504]) = ($121 | [1])
	*($149 + [508]) = $68
	$150 = [70]
	goto $label$46 
	
.LABEL $label$784
	CALL memcpy($111, [2496], $68)
	$150 = [71]
	goto $label$46 
	
.LABEL $label$783
	*(($111 + $68)) = [0]
	$68 = *($149 + [504])
	$111 = ($68 & [1])
	$68 = CALL $136(($149 + [648]), ( *($146) ? $25 : $111 ), ( *($149 + [508]) ? uint_32($68 >> [1]) : $111 ))
	$111 = ($68 + [8])
	*(($99 = (($149 + [664]) + [8]))) = *($111)
	*($149 + [664]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($111) = [0]
	*($149 + [184]) = *($79)
	CALL $84(($149 + [488]), ($149 + [184]))
	$68 = *($149 + [488])
	$111 = ($68 & [1])
	$100 = (($149 + [488]) + [8])
	$68 = CALL $136(($149 + [664]), ( *($100) ? $38 : $111 ), ( *($149 + [492]) ? uint_32($68 >> [1]) : $111 ))
	$111 = ($68 + [8])
	*(($101 = (($149 + [680]) + [8]))) = *($111)
	*($149 + [680]) = *($68)
	*($68) = [0]
	*(($68 + [4])) = [0]
	*($111) = [0]
	*(($68 = (($149 + [472]) + [8]))) = [0]
	*($149 + [472]) = (int_64)0
	$111 = CALL strlen([2512])
	if ( ((uint_32)$111 >= (uint_32)[-16]) ){ goto $label$369 }
	$150 = [72]
	goto $label$46 
	
.LABEL $label$782
	if ( ((uint_32)$111 >= (uint_32)[11]) ){ goto $label$281 }
	$150 = [477]
	goto $label$46 
	
.LABEL $label$781
	*($149 + [472]) = ($111 << [1])
	$121 = $26
	if ( $111 ){ goto $label$279 }
	goto $label$280 
	
.LABEL $label$780
	$129 = (($111 + [16]) & [-16])
	$121 = CALL $128($129)
	*($68) = $121
	*($149 + [472]) = ($129 | [1])
	*($149 + [476]) = $111
	$150 = [74]
	goto $label$46 
	
.LABEL $label$779
	CALL memcpy($121, [2512], $111)
	$150 = [75]
	goto $label$46 
	
.LABEL $label$778
	*(($121 + $111)) = [0]
	$111 = *($149 + [472])
	$121 = ($111 & [1])
	$111 = CALL $136(($149 + [680]), ( *($68) ? $26 : $121 ), ( *($149 + [476]) ? uint_32($111 >> [1]) : $121 ))
	$121 = ($111 + [8])
	*(($102 = (($149 + [696]) + [8]))) = *($121)
	*($149 + [696]) = *($111)
	*($111) = [0]
	*(($111 + [4])) = [0]
	*($121) = [0]
	*(($103 = (($149 + [456]) + [8]))) = [0]
	*($149 + [456]) = (int_64)0
	$111 = CALL strlen([2528])
	if ( ((uint_32)$111 >= (uint_32)[-16]) ){ goto $label$368 }
	$150 = [76]
	goto $label$46 
	
.LABEL $label$777
	if ( ((uint_32)$111 >= (uint_32)[11]) ){ goto $label$278 }
	$150 = [476]
	goto $label$46 
	
.LABEL $label$776
	*($149 + [456]) = ($111 << [1])
	$121 = $40
	if ( $111 ){ goto $label$276 }
	goto $label$277 
	
.LABEL $label$775
	$129 = (($111 + [16]) & [-16])
	$121 = CALL $128($129)
	*($103) = $121
	*($149 + [456]) = ($129 | [1])
	*($149 + [460]) = $111
	$150 = [78]
	goto $label$46 
	
.LABEL $label$774
	CALL memcpy($121, [2528], $111)
	$150 = [79]
	goto $label$46 
	
.LABEL $label$773
	*(($121 + $111)) = [0]
	$111 = *($149 + [456])
	$121 = ($111 & [1])
	$111 = CALL $136(($149 + [696]), ( *($103) ? $40 : $121 ), ( *($149 + [460]) ? uint_32($111 >> [1]) : $121 ))
	$121 = ($111 + [8])
	*(($104 = (($149 + [712]) + [8]))) = *($121)
	*($149 + [712]) = *($111)
	*($111) = [0]
	*(($111 + [4])) = [0]
	*($121) = [0]
	CALL _ZNSt3__19to_stringEy(($149 + [440]), *($11))
	$111 = *($149 + [440])
	$121 = ($111 & [1])
	$105 = (($149 + [440]) + [8])
	$111 = CALL $136(($149 + [712]), ( *($105) ? $27 : $121 ), ( *($149 + [444]) ? uint_32($111 >> [1]) : $121 ))
	$121 = ($111 + [8])
	*(($106 = (($149 + [728]) + [8]))) = *($121)
	*($149 + [728]) = *($111)
	*($111) = [0]
	*(($111 + [4])) = [0]
	*($121) = [0]
	*(($107 = (($149 + [424]) + [8]))) = [0]
	*($149 + [424]) = (int_64)0
	$111 = CALL strlen([2544])
	if ( ((uint_32)$111 >= (uint_32)[-16]) ){ goto $label$367 }
	$150 = [80]
	goto $label$46 
	
.LABEL $label$772
	if ( ((uint_32)$111 >= (uint_32)[11]) ){ goto $label$275 }
	$150 = [475]
	goto $label$46 
	
.LABEL $label$771
	*($149 + [424]) = ($111 << [1])
	$121 = $42
	if ( $111 ){ goto $label$273 }
	goto $label$274 
	
.LABEL $label$770
	$129 = (($111 + [16]) & [-16])
	$121 = CALL $128($129)
	*($107) = $121
	*($149 + [424]) = ($129 | [1])
	*($149 + [428]) = $111
	$150 = [82]
	goto $label$46 
	
.LABEL $label$769
	CALL memcpy($121, [2544], $111)
	$150 = [83]
	goto $label$46 
	
.LABEL $label$768
	*(($121 + $111)) = [0]
	$111 = *($149 + [424])
	$121 = ($111 & [1])
	$111 = CALL $136(($149 + [728]), ( *($107) ? $42 : $121 ), ( *($149 + [428]) ? uint_32($111 >> [1]) : $121 ))
	$121 = ($111 + [8])
	*(($108 = (($149 + [744]) + [8]))) = *($121)
	*($149 + [744]) = *($111)
	*($111) = [0]
	*(($111 + [4])) = [0]
	*($121) = [0]
	*($149 + [168]) = *($82)
	CALL $84(($149 + [408]), ($149 + [168]))
	$111 = *($149 + [408])
	$121 = ($111 & [1])
	$109 = (($149 + [408]) + [8])
	$111 = CALL $136(($149 + [744]), ( *($109) ? $28 : $121 ), ( *($149 + [412]) ? uint_32($111 >> [1]) : $121 ))
	$121 = ($111 + [8])
	*(($110 = (($149 + [760]) + [8]))) = *($121)
	*($149 + [760]) = *($111)
	*($111) = [0]
	*(($111 + [4])) = [0]
	*($121) = [0]
	*(($111 = (($149 + [392]) + [8]))) = [0]
	*($149 + [392]) = (int_64)0
	$121 = CALL strlen([2512])
	if ( ((uint_32)$121 >= (uint_32)[-16]) ){ goto $label$366 }
	$150 = [84]
	goto $label$46 
	
.LABEL $label$767
	if ( ((uint_32)$121 >= (uint_32)[11]) ){ goto $label$272 }
	$150 = [474]
	goto $label$46 
	
.LABEL $label$766
	*($149 + [392]) = ($121 << [1])
	$129 = $29
	if ( $121 ){ goto $label$270 }
	goto $label$271 
	
.LABEL $label$765
	$69 = (($121 + [16]) & [-16])
	$129 = CALL $128($69)
	*($111) = $129
	*($149 + [392]) = ($69 | [1])
	*($149 + [396]) = $121
	$150 = [86]
	goto $label$46 
	
.LABEL $label$764
	CALL memcpy($129, [2512], $121)
	$150 = [87]
	goto $label$46 
	
.LABEL $label$763
	*(($129 + $121)) = [0]
	$121 = *($149 + [392])
	$129 = ($121 & [1])
	$121 = CALL $136(($149 + [760]), ( *($111) ? $29 : $129 ), ( *($149 + [396]) ? uint_32($121 >> [1]) : $129 ))
	$129 = ($121 + [8])
	*(($112 = (($149 + [776]) + [8]))) = *($129)
	*($149 + [776]) = *($121)
	*($121) = [0]
	*(($121 + [4])) = [0]
	*($129) = [0]
	*(($113 = (($149 + [376]) + [8]))) = [0]
	*($149 + [376]) = (int_64)0
	$121 = CALL strlen([2560])
	if ( ((uint_32)$121 >= (uint_32)[-16]) ){ goto $label$365 }
	$150 = [88]
	goto $label$46 
	
.LABEL $label$762
	if ( ((uint_32)$121 >= (uint_32)[11]) ){ goto $label$269 }
	$150 = [473]
	goto $label$46 
	
.LABEL $label$761
	*($149 + [376]) = ($121 << [1])
	$129 = $45
	if ( $121 ){ goto $label$267 }
	goto $label$268 
	
.LABEL $label$760
	$69 = (($121 + [16]) & [-16])
	$129 = CALL $128($69)
	*($113) = $129
	*($149 + [376]) = ($69 | [1])
	*($149 + [380]) = $121
	$150 = [90]
	goto $label$46 
	
.LABEL $label$759
	CALL memcpy($129, [2560], $121)
	$150 = [91]
	goto $label$46 
	
.LABEL $label$758
	*(($129 + $121)) = [0]
	$121 = *($149 + [376])
	$129 = ($121 & [1])
	$121 = CALL $136(($149 + [776]), ( *($113) ? $45 : $129 ), ( *($149 + [380]) ? uint_32($121 >> [1]) : $129 ))
	$129 = ($121 + [8])
	*(($114 = (($149 + [792]) + [8]))) = *($129)
	*($149 + [792]) = *($121)
	*($121) = [0]
	*(($121 + [4])) = [0]
	*($129) = [0]
	CALL _ZNSt3__19to_stringEf(($149 + [360]), (DEMOTE float_32)(float_64 *($149 + [984])))
	$121 = *($149 + [360])
	$129 = ($121 & [1])
	$115 = (($149 + [360]) + [8])
	$121 = CALL $136(($149 + [792]), ( *($115) ? $30 : $129 ), ( *($149 + [364]) ? uint_32($121 >> [1]) : $129 ))
	$129 = ($121 + [8])
	*(($116 = (($149 + [808]) + [8]))) = *($129)
	*($149 + [808]) = *($121)
	*($121) = [0]
	*(($121 + [4])) = [0]
	*($129) = [0]
	*(($117 = (($149 + [344]) + [8]))) = [0]
	*($149 + [344]) = (int_64)0
	$121 = CALL strlen([2576])
	if ( ((uint_32)$121 >= (uint_32)[-16]) ){ goto $label$364 }
	$150 = [92]
	goto $label$46 
	
.LABEL $label$757
	if ( ((uint_32)$121 >= (uint_32)[11]) ){ goto $label$266 }
	$150 = [472]
	goto $label$46 
	
.LABEL $label$756
	*($149 + [344]) = ($121 << [1])
	$129 = $47
	if ( $121 ){ goto $label$264 }
	goto $label$265 
	
.LABEL $label$755
	$69 = (($121 + [16]) & [-16])
	$129 = CALL $128($69)
	*($117) = $129
	*($149 + [344]) = ($69 | [1])
	*($149 + [348]) = $121
	$150 = [94]
	goto $label$46 
	
.LABEL $label$754
	CALL memcpy($129, [2576], $121)
	$150 = [95]
	goto $label$46 
	
.LABEL $label$753
	*(($129 + $121)) = [0]
	$121 = *($149 + [344])
	$129 = ($121 & [1])
	$121 = CALL $136(($149 + [808]), ( *($117) ? $47 : $129 ), ( *($149 + [348]) ? uint_32($121 >> [1]) : $129 ))
	$129 = ($121 + [8])
	*(($118 = (($149 + [824]) + [8]))) = *($129)
	*($149 + [824]) = *($121)
	*($121) = [0]
	*(($121 + [4])) = [0]
	*($129) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($149 + [328]), $149, ($149 + [968]))
	$121 = *($149 + [328])
	$129 = ($121 & [1])
	$119 = (($149 + [328]) + [8])
	$121 = CALL $136(($149 + [824]), ( *($119) ? $31 : $129 ), ( *($149 + [332]) ? uint_32($121 >> [1]) : $129 ))
	$129 = ($121 + [8])
	*(($120 = (($149 + [840]) + [8]))) = *($129)
	*($149 + [840]) = *($121)
	*($121) = [0]
	*(($121 + [4])) = [0]
	*($129) = [0]
	*(($121 = (($149 + [312]) + [8]))) = [0]
	*($149 + [312]) = (int_64)0
	$129 = CALL strlen([2512])
	if ( ((uint_32)$129 >= (uint_32)[-16]) ){ goto $label$363 }
	$150 = [96]
	goto $label$46 
	
.LABEL $label$752
	if ( ((uint_32)$129 >= (uint_32)[11]) ){ goto $label$263 }
	$150 = [471]
	goto $label$46 
	
.LABEL $label$751
	*($149 + [312]) = ($129 << [1])
	$69 = $32
	if ( $129 ){ goto $label$261 }
	goto $label$262 
	
.LABEL $label$750
	$123 = (($129 + [16]) & [-16])
	$69 = CALL $128($123)
	*($121) = $69
	*($149 + [312]) = ($123 | [1])
	*($149 + [316]) = $129
	$150 = [98]
	goto $label$46 
	
.LABEL $label$749
	CALL memcpy($69, [2512], $129)
	$150 = [99]
	goto $label$46 
	
.LABEL $label$748
	*(($69 + $129)) = [0]
	$129 = *($149 + [312])
	$69 = ($129 & [1])
	$129 = CALL $136(($149 + [840]), ( *($121) ? $32 : $69 ), ( *($149 + [316]) ? uint_32($129 >> [1]) : $69 ))
	$69 = ($129 + [8])
	*(($122 = (($149 + [856]) + [8]))) = *($69)
	*($149 + [856]) = *($129)
	*($129) = [0]
	*(($129 + [4])) = [0]
	*($69) = [0]
	*(($123 = (($149 + [296]) + [8]))) = [0]
	*($149 + [296]) = (int_64)0
	$129 = CALL strlen([2592])
	if ( ((uint_32)$129 >= (uint_32)[-16]) ){ goto $label$362 }
	$150 = [100]
	goto $label$46 
	
.LABEL $label$747
	if ( ((uint_32)$129 >= (uint_32)[11]) ){ goto $label$260 }
	$150 = [470]
	goto $label$46 
	
.LABEL $label$746
	*($149 + [296]) = ($129 << [1])
	$69 = $50
	if ( $129 ){ goto $label$258 }
	goto $label$259 
	
.LABEL $label$745
	$127 = (($129 + [16]) & [-16])
	$69 = CALL $128($127)
	*($123) = $69
	*($149 + [296]) = ($127 | [1])
	*($149 + [300]) = $129
	$150 = [102]
	goto $label$46 
	
.LABEL $label$744
	CALL memcpy($69, [2592], $129)
	$150 = [103]
	goto $label$46 
	
.LABEL $label$743
	*(($69 + $129)) = [0]
	$129 = *($149 + [296])
	$69 = ($129 & [1])
	$129 = CALL $136(($149 + [856]), ( *($123) ? $50 : $69 ), ( *($149 + [300]) ? uint_32($129 >> [1]) : $69 ))
	$69 = ($129 + [8])
	*(($124 = (($149 + [872]) + [8]))) = *($69)
	*($149 + [872]) = *($129)
	*($129) = [0]
	*(($129 + [4])) = [0]
	*($69) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($149 + [280]), $149, ($149 + [952]))
	$129 = *($149 + [280])
	$69 = ($129 & [1])
	$125 = (($149 + [280]) + [8])
	$129 = CALL $136(($149 + [872]), ( *($125) ? $33 : $69 ), ( *($149 + [284]) ? uint_32($129 >> [1]) : $69 ))
	$69 = ($129 + [8])
	*(($126 = (($149 + [1360]) + [8]))) = *($69)
	*($149 + [1360]) = *($129)
	*($129) = [0]
	*(($129 + [4])) = [0]
	*($69) = [0]
	*(($127 = (($149 + [264]) + [8]))) = [0]
	*($149 + [264]) = (int_64)0
	$129 = CALL strlen([2512])
	if ( ((uint_32)$129 >= (uint_32)[-16]) ){ goto $label$361 }
	$150 = [104]
	goto $label$46 
	
.LABEL $label$742
	if ( ((uint_32)$129 >= (uint_32)[11]) ){ goto $label$257 }
	$150 = [469]
	goto $label$46 
	
.LABEL $label$741
	*($149 + [264]) = ($129 << [1])
	$69 = $52
	if ( $129 ){ goto $label$255 }
	goto $label$256 
	
.LABEL $label$740
	$132 = (($129 + [16]) & [-16])
	$69 = CALL $128($132)
	*($127) = $69
	*($149 + [264]) = ($132 | [1])
	*($149 + [268]) = $129
	$150 = [106]
	goto $label$46 
	
.LABEL $label$739
	CALL memcpy($69, [2512], $129)
	$150 = [107]
	goto $label$46 
	
.LABEL $label$738
	*(($69 + $129)) = [0]
	$129 = *($149 + [264])
	$69 = ($129 & [1])
	$129 = CALL $136(($149 + [1360]), ( *($127) ? $52 : $69 ), ( *($149 + [268]) ? uint_32($129 >> [1]) : $69 ))
	$69 = ($129 + [8])
	*(($128 = (($149 + [72]) + [8]))) = *($69)
	*($149 + [72]) = *($129)
	*($129) = [0]
	*(($129 + [4])) = [0]
	*($69) = [0]
	*(($129 = (($149 + [248]) + [8]))) = [0]
	*($149 + [248]) = (int_64)0
	$69 = CALL strlen([2608])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$360 }
	$150 = [108]
	goto $label$46 
	
.LABEL $label$737
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$254 }
	$150 = [468]
	goto $label$46 
	
.LABEL $label$736
	*($149 + [248]) = ($69 << [1])
	$132 = $34
	if ( $69 ){ goto $label$252 }
	goto $label$253 
	
.LABEL $label$735
	$130 = (($69 + [16]) & [-16])
	$132 = CALL $128($130)
	*($129) = $132
	*($149 + [248]) = ($130 | [1])
	*($149 + [252]) = $69
	$150 = [110]
	goto $label$46 
	
.LABEL $label$734
	CALL memcpy($132, [2608], $69)
	$150 = [111]
	goto $label$46 
	
.LABEL $label$733
	*(($132 + $69)) = [0]
	$69 = *($149 + [248])
	$132 = ($69 & [1])
	$69 = CALL $136(($149 + [72]), ( *($129) ? $34 : $132 ), ( *($149 + [252]) ? uint_32($69 >> [1]) : $132 ))
	$132 = ($69 + [8])
	*($7) = *($132)
	*($149 + [1320]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($132) = [0]
	CALL _ZNSt3__19to_stringEy(($149 + [232]), ((uint_64)CALL $fimport$14() / (uint_64)(int_64)1000))
	$69 = *($149 + [232])
	$132 = ($69 & [1])
	$130 = (($149 + [232]) + [8])
	$69 = CALL $136(($149 + [1320]), ( *($130) ? $35 : $132 ), ( *($149 + [236]) ? uint_32($69 >> [1]) : $132 ))
	$132 = ($69 + [8])
	*(($131 = (($149 + [1248]) + [8]))) = *($132)
	*($149 + [1248]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($132) = [0]
	*(($132 = (($149 + [216]) + [8]))) = [0]
	*($149 + [216]) = (int_64)0
	$69 = CALL strlen([2624])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$359 }
	$150 = [112]
	goto $label$46 
	
.LABEL $label$732
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$251 }
	$150 = [467]
	goto $label$46 
	
.LABEL $label$731
	*($149 + [216]) = ($69 << [1])
	$134 = $55
	if ( $69 ){ goto $label$249 }
	goto $label$250 
	
.LABEL $label$730
	$135 = (($69 + [16]) & [-16])
	$134 = CALL $128($135)
	*($132) = $134
	*($149 + [216]) = ($135 | [1])
	*($149 + [220]) = $69
	$150 = [114]
	goto $label$46 
	
.LABEL $label$729
	CALL memcpy($134, [2624], $69)
	$150 = [115]
	goto $label$46 
	
.LABEL $label$728
	*(($134 + $69)) = [0]
	$69 = *($149 + [216])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [1248]), ( *($132) ? $55 : $134 ), ( *($149 + [220]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*(($133 = (($149 + [888]) + [8]))) = *($134)
	*($149 + [888]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	if ( ((*($149 + [216]) & [1]) == 0) ){ goto $label$248 }
	$150 = [116]
	goto $label$46 
	
.LABEL $label$727
	CALL $130(*($132))
	$150 = [117]
	goto $label$46 
	
.LABEL $label$726
	if ( ((*($149 + [1248]) & [1]) == 0) ){ goto $label$247 }
	$150 = [118]
	goto $label$46 
	
.LABEL $label$725
	CALL $130(*($131))
	$150 = [119]
	goto $label$46 
	
.LABEL $label$724
	if ( ((*($149 + [232]) & [1]) == 0) ){ goto $label$246 }
	$150 = [120]
	goto $label$46 
	
.LABEL $label$723
	CALL $130(*($130))
	$150 = [121]
	goto $label$46 
	
.LABEL $label$722
	if ( ((*($149 + [1320]) & [1]) == 0) ){ goto $label$245 }
	$150 = [122]
	goto $label$46 
	
.LABEL $label$721
	CALL $130(*($7))
	$150 = [123]
	goto $label$46 
	
.LABEL $label$720
	if ( ((*($149 + [248]) & [1]) == 0) ){ goto $label$244 }
	$150 = [124]
	goto $label$46 
	
.LABEL $label$719
	CALL $130(*($129))
	$150 = [125]
	goto $label$46 
	
.LABEL $label$718
	if ( ((*($149 + [72]) & [1]) == 0) ){ goto $label$243 }
	$150 = [126]
	goto $label$46 
	
.LABEL $label$717
	CALL $130(*($128))
	$150 = [127]
	goto $label$46 
	
.LABEL $label$716
	if ( ((*($149 + [264]) & [1]) == 0) ){ goto $label$242 }
	$150 = [128]
	goto $label$46 
	
.LABEL $label$715
	CALL $130(*($127))
	$150 = [129]
	goto $label$46 
	
.LABEL $label$714
	if ( ((*($149 + [1360]) & [1]) == 0) ){ goto $label$241 }
	$150 = [130]
	goto $label$46 
	
.LABEL $label$713
	CALL $130(*($126))
	$150 = [131]
	goto $label$46 
	
.LABEL $label$712
	if ( ((*($149 + [280]) & [1]) == 0) ){ goto $label$240 }
	$150 = [132]
	goto $label$46 
	
.LABEL $label$711
	CALL $130(*($125))
	$150 = [133]
	goto $label$46 
	
.LABEL $label$710
	if ( ((*($149 + [872]) & [1]) == 0) ){ goto $label$239 }
	$150 = [134]
	goto $label$46 
	
.LABEL $label$709
	CALL $130(*($124))
	$150 = [135]
	goto $label$46 
	
.LABEL $label$708
	if ( ((*($149 + [296]) & [1]) == 0) ){ goto $label$238 }
	$150 = [136]
	goto $label$46 
	
.LABEL $label$707
	CALL $130(*($123))
	$150 = [137]
	goto $label$46 
	
.LABEL $label$706
	if ( ((*($149 + [856]) & [1]) == 0) ){ goto $label$237 }
	$150 = [138]
	goto $label$46 
	
.LABEL $label$705
	CALL $130(*($122))
	$150 = [139]
	goto $label$46 
	
.LABEL $label$704
	if ( ((*($149 + [312]) & [1]) == 0) ){ goto $label$236 }
	$150 = [140]
	goto $label$46 
	
.LABEL $label$703
	CALL $130(*($121))
	$150 = [141]
	goto $label$46 
	
.LABEL $label$702
	if ( ((*($149 + [840]) & [1]) == 0) ){ goto $label$235 }
	$150 = [142]
	goto $label$46 
	
.LABEL $label$701
	CALL $130(*($120))
	$150 = [143]
	goto $label$46 
	
.LABEL $label$700
	if ( ((*($149 + [328]) & [1]) == 0) ){ goto $label$234 }
	$150 = [144]
	goto $label$46 
	
.LABEL $label$699
	CALL $130(*($119))
	$150 = [145]
	goto $label$46 
	
.LABEL $label$698
	if ( ((*($149 + [824]) & [1]) == 0) ){ goto $label$233 }
	$150 = [146]
	goto $label$46 
	
.LABEL $label$697
	CALL $130(*($118))
	$150 = [147]
	goto $label$46 
	
.LABEL $label$696
	if ( ((*($149 + [344]) & [1]) == 0) ){ goto $label$232 }
	$150 = [148]
	goto $label$46 
	
.LABEL $label$695
	CALL $130(*($117))
	$150 = [149]
	goto $label$46 
	
.LABEL $label$694
	if ( ((*($149 + [808]) & [1]) == 0) ){ goto $label$231 }
	$150 = [150]
	goto $label$46 
	
.LABEL $label$693
	CALL $130(*($116))
	$150 = [151]
	goto $label$46 
	
.LABEL $label$692
	if ( ((*($149 + [360]) & [1]) == 0) ){ goto $label$230 }
	$150 = [152]
	goto $label$46 
	
.LABEL $label$691
	CALL $130(*($115))
	$150 = [153]
	goto $label$46 
	
.LABEL $label$690
	if ( ((*($149 + [792]) & [1]) == 0) ){ goto $label$229 }
	$150 = [154]
	goto $label$46 
	
.LABEL $label$689
	CALL $130(*($114))
	$150 = [155]
	goto $label$46 
	
.LABEL $label$688
	if ( ((*($149 + [376]) & [1]) == 0) ){ goto $label$228 }
	$150 = [156]
	goto $label$46 
	
.LABEL $label$687
	CALL $130(*($113))
	$150 = [157]
	goto $label$46 
	
.LABEL $label$686
	if ( ((*($149 + [776]) & [1]) == 0) ){ goto $label$227 }
	$150 = [158]
	goto $label$46 
	
.LABEL $label$685
	CALL $130(*($112))
	$150 = [159]
	goto $label$46 
	
.LABEL $label$684
	if ( ((*($149 + [392]) & [1]) == 0) ){ goto $label$226 }
	$150 = [160]
	goto $label$46 
	
.LABEL $label$683
	CALL $130(*($111))
	$150 = [161]
	goto $label$46 
	
.LABEL $label$682
	if ( ((*($149 + [760]) & [1]) == 0) ){ goto $label$225 }
	$150 = [162]
	goto $label$46 
	
.LABEL $label$681
	CALL $130(*($110))
	$150 = [163]
	goto $label$46 
	
.LABEL $label$680
	if ( ((*($149 + [408]) & [1]) == 0) ){ goto $label$224 }
	$150 = [164]
	goto $label$46 
	
.LABEL $label$679
	CALL $130(*($109))
	$150 = [165]
	goto $label$46 
	
.LABEL $label$678
	if ( ((*($149 + [744]) & [1]) == 0) ){ goto $label$223 }
	$150 = [166]
	goto $label$46 
	
.LABEL $label$677
	CALL $130(*($108))
	$150 = [167]
	goto $label$46 
	
.LABEL $label$676
	if ( ((*($149 + [424]) & [1]) == 0) ){ goto $label$222 }
	$150 = [168]
	goto $label$46 
	
.LABEL $label$675
	CALL $130(*($107))
	$150 = [169]
	goto $label$46 
	
.LABEL $label$674
	if ( ((*($149 + [728]) & [1]) == 0) ){ goto $label$221 }
	$150 = [170]
	goto $label$46 
	
.LABEL $label$673
	CALL $130(*($106))
	$150 = [171]
	goto $label$46 
	
.LABEL $label$672
	if ( ((*($149 + [440]) & [1]) == 0) ){ goto $label$220 }
	$150 = [172]
	goto $label$46 
	
.LABEL $label$671
	CALL $130(*($105))
	$150 = [173]
	goto $label$46 
	
.LABEL $label$670
	if ( ((*($149 + [712]) & [1]) == 0) ){ goto $label$219 }
	$150 = [174]
	goto $label$46 
	
.LABEL $label$669
	CALL $130(*($104))
	$150 = [175]
	goto $label$46 
	
.LABEL $label$668
	if ( ((*($149 + [456]) & [1]) == 0) ){ goto $label$218 }
	$150 = [176]
	goto $label$46 
	
.LABEL $label$667
	CALL $130(*($103))
	$150 = [177]
	goto $label$46 
	
.LABEL $label$666
	if ( ((*($149 + [696]) & [1]) == 0) ){ goto $label$217 }
	$150 = [178]
	goto $label$46 
	
.LABEL $label$665
	CALL $130(*($102))
	$150 = [179]
	goto $label$46 
	
.LABEL $label$664
	if ( ((*($149 + [472]) & [1]) == 0) ){ goto $label$216 }
	$150 = [180]
	goto $label$46 
	
.LABEL $label$663
	CALL $130(*($68))
	$150 = [181]
	goto $label$46 
	
.LABEL $label$662
	if ( ((*($149 + [680]) & [1]) == 0) ){ goto $label$215 }
	$150 = [182]
	goto $label$46 
	
.LABEL $label$661
	CALL $130(*($101))
	$150 = [183]
	goto $label$46 
	
.LABEL $label$660
	if ( ((*($149 + [488]) & [1]) == 0) ){ goto $label$214 }
	$150 = [184]
	goto $label$46 
	
.LABEL $label$659
	CALL $130(*($100))
	$150 = [185]
	goto $label$46 
	
.LABEL $label$658
	if ( ((*($149 + [664]) & [1]) == 0) ){ goto $label$213 }
	$150 = [186]
	goto $label$46 
	
.LABEL $label$657
	CALL $130(*($99))
	$150 = [187]
	goto $label$46 
	
.LABEL $label$656
	if ( ((*($149 + [504]) & [1]) == 0) ){ goto $label$212 }
	$150 = [188]
	goto $label$46 
	
.LABEL $label$655
	CALL $130(*($146))
	$150 = [189]
	goto $label$46 
	
.LABEL $label$654
	if ( ((*($149 + [648]) & [1]) == 0) ){ goto $label$211 }
	$150 = [190]
	goto $label$46 
	
.LABEL $label$653
	CALL $130(*($98))
	$150 = [191]
	goto $label$46 
	
.LABEL $label$652
	if ( ((*($149 + [520]) & [1]) == 0) ){ goto $label$210 }
	$150 = [192]
	goto $label$46 
	
.LABEL $label$651
	CALL $130(*($97))
	$150 = [193]
	goto $label$46 
	
.LABEL $label$650
	if ( ((*($149 + [632]) & [1]) == 0) ){ goto $label$209 }
	$150 = [194]
	goto $label$46 
	
.LABEL $label$649
	CALL $130(*($96))
	$150 = [195]
	goto $label$46 
	
.LABEL $label$648
	if ( ((*($149 + [536]) & [1]) == 0) ){ goto $label$208 }
	$150 = [196]
	goto $label$46 
	
.LABEL $label$647
	CALL $130(*($95))
	$150 = [197]
	goto $label$46 
	
.LABEL $label$646
	if ( ((*($149 + [616]) & [1]) == 0) ){ goto $label$207 }
	$150 = [198]
	goto $label$46 
	
.LABEL $label$645
	CALL $130(*($94))
	$150 = [199]
	goto $label$46 
	
.LABEL $label$644
	if ( ((*($149 + [552]) & [1]) == 0) ){ goto $label$206 }
	$150 = [200]
	goto $label$46 
	
.LABEL $label$643
	CALL $130(*($93))
	$150 = [201]
	goto $label$46 
	
.LABEL $label$642
	if ( ((*($149 + [600]) & [1]) == 0) ){ goto $label$205 }
	$150 = [202]
	goto $label$46 
	
.LABEL $label$641
	CALL $130(*($92))
	$150 = [203]
	goto $label$46 
	
.LABEL $label$640
	if ( ((*($149 + [568]) & [1]) == 0) ){ goto $label$204 }
	$150 = [204]
	goto $label$46 
	
.LABEL $label$639
	CALL $130(*($91))
	$150 = [205]
	goto $label$46 
	
.LABEL $label$638
	if ( ((*($149 + [584]) & [1]) == 0) ){ goto $label$203 }
	$150 = [206]
	goto $label$46 
	
.LABEL $label$637
	CALL $130(*($90))
	$150 = [207]
	goto $label$46 
	
.LABEL $label$636
	*($97) = [0]
	*($149 + [520]) = (int_64)0
	$69 = CALL strlen([2448])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$358 }
	$150 = [208]
	goto $label$46 
	
.LABEL $label$635
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$202 }
	$150 = [466]
	goto $label$46 
	
.LABEL $label$634
	*($149 + [520]) = ($69 << [1])
	$134 = $36
	if ( $69 ){ goto $label$200 }
	goto $label$201 
	
.LABEL $label$633
	$135 = (($69 + [16]) & [-16])
	$134 = CALL $128($135)
	*($97) = $134
	*($149 + [520]) = ($135 | [1])
	*($149 + [524]) = $69
	$150 = [210]
	goto $label$46 
	
.LABEL $label$632
	CALL memcpy($134, [2448], $69)
	$150 = [211]
	goto $label$46 
	
.LABEL $label$631
	*(($134 + $69)) = [0]
	*($146) = [0]
	*($149 + [504]) = (int_64)0
	$69 = CALL strlen([2464])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$357 }
	$150 = [212]
	goto $label$46 
	
.LABEL $label$630
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$199 }
	$150 = [465]
	goto $label$46 
	
.LABEL $label$629
	*($149 + [504]) = ($69 << [1])
	$134 = $37
	if ( $69 ){ goto $label$197 }
	goto $label$198 
	
.LABEL $label$628
	$135 = (($69 + [16]) & [-16])
	$134 = CALL $128($135)
	*($146) = $134
	*($149 + [504]) = ($135 | [1])
	*($149 + [508]) = $69
	$150 = [214]
	goto $label$46 
	
.LABEL $label$627
	CALL memcpy($134, [2464], $69)
	$150 = [215]
	goto $label$46 
	
.LABEL $label$626
	*(($134 + $69)) = [0]
	$69 = *($149 + [504])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [520]), ( *($146) ? $37 : $134 ), ( *($149 + [508]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($95) = *($134)
	*($149 + [536]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	CALL _ZNSt3__19to_stringEy(($149 + [488]), *($8))
	$69 = *($149 + [488])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [536]), ( *($100) ? $38 : $134 ), ( *($149 + [492]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($93) = *($134)
	*($149 + [552]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	*($68) = [0]
	*($149 + [472]) = (int_64)0
	$69 = CALL strlen([2480])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$356 }
	$150 = [216]
	goto $label$46 
	
.LABEL $label$625
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$196 }
	$150 = [464]
	goto $label$46 
	
.LABEL $label$624
	*($149 + [472]) = ($69 << [1])
	$134 = $39
	if ( $69 ){ goto $label$194 }
	goto $label$195 
	
.LABEL $label$623
	$135 = (($69 + [16]) & [-16])
	$134 = CALL $128($135)
	*($68) = $134
	*($149 + [472]) = ($135 | [1])
	*($149 + [476]) = $69
	$150 = [218]
	goto $label$46 
	
.LABEL $label$622
	CALL memcpy($134, [2480], $69)
	$150 = [219]
	goto $label$46 
	
.LABEL $label$621
	*(($134 + $69)) = [0]
	$69 = *($149 + [472])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [552]), ( *($68) ? $39 : $134 ), ( *($149 + [476]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($91) = *($134)
	*($149 + [568]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	CALL _ZNSt3__19to_stringEy(($149 + [456]), *($6))
	$69 = *($149 + [456])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [568]), ( *($103) ? $40 : $134 ), ( *($149 + [460]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($90) = *($134)
	*($149 + [584]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	*($105) = [0]
	*($149 + [440]) = (int_64)0
	$69 = CALL strlen([2496])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$355 }
	$150 = [220]
	goto $label$46 
	
.LABEL $label$620
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$193 }
	$150 = [463]
	goto $label$46 
	
.LABEL $label$619
	*($149 + [440]) = ($69 << [1])
	$134 = $41
	if ( $69 ){ goto $label$191 }
	goto $label$192 
	
.LABEL $label$618
	$135 = (($69 + [16]) & [-16])
	$134 = CALL $128($135)
	*($105) = $134
	*($149 + [440]) = ($135 | [1])
	*($149 + [444]) = $69
	$150 = [222]
	goto $label$46 
	
.LABEL $label$617
	CALL memcpy($134, [2496], $69)
	$150 = [223]
	goto $label$46 
	
.LABEL $label$616
	*(($134 + $69)) = [0]
	$69 = *($149 + [440])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [584]), ( *($105) ? $41 : $134 ), ( *($149 + [444]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($92) = *($134)
	*($149 + [600]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	*($149 + [208]) = *($79)
	CALL $84(($149 + [424]), ($149 + [208]))
	$69 = *($149 + [424])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [600]), ( *($107) ? $42 : $134 ), ( *($149 + [428]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($94) = *($134)
	*($149 + [616]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	*($109) = [0]
	*($149 + [408]) = (int_64)0
	$69 = CALL strlen([2512])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$354 }
	$150 = [224]
	goto $label$46 
	
.LABEL $label$615
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$190 }
	$150 = [462]
	goto $label$46 
	
.LABEL $label$614
	*($149 + [408]) = ($69 << [1])
	$134 = $43
	if ( $69 ){ goto $label$188 }
	goto $label$189 
	
.LABEL $label$613
	$135 = (($69 + [16]) & [-16])
	$134 = CALL $128($135)
	*($109) = $134
	*($149 + [408]) = ($135 | [1])
	*($149 + [412]) = $69
	$150 = [226]
	goto $label$46 
	
.LABEL $label$612
	CALL memcpy($134, [2512], $69)
	$150 = [227]
	goto $label$46 
	
.LABEL $label$611
	*(($134 + $69)) = [0]
	$69 = *($149 + [408])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [616]), ( *($109) ? $43 : $134 ), ( *($149 + [412]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($96) = *($134)
	*($149 + [632]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	*($111) = [0]
	*($149 + [392]) = (int_64)0
	$69 = CALL strlen([2528])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$353 }
	$150 = [228]
	goto $label$46 
	
.LABEL $label$610
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$187 }
	$150 = [461]
	goto $label$46 
	
.LABEL $label$609
	*($149 + [392]) = ($69 << [1])
	$134 = $44
	if ( $69 ){ goto $label$185 }
	goto $label$186 
	
.LABEL $label$608
	$135 = (($69 + [16]) & [-16])
	$134 = CALL $128($135)
	*($111) = $134
	*($149 + [392]) = ($135 | [1])
	*($149 + [396]) = $69
	$150 = [230]
	goto $label$46 
	
.LABEL $label$607
	CALL memcpy($134, [2528], $69)
	$150 = [231]
	goto $label$46 
	
.LABEL $label$606
	*(($134 + $69)) = [0]
	$69 = *($149 + [392])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [632]), ( *($111) ? $44 : $134 ), ( *($149 + [396]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($98) = *($134)
	*($149 + [648]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	CALL _ZNSt3__19to_stringEy(($149 + [376]), *($11))
	$69 = *($149 + [376])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [648]), ( *($113) ? $45 : $134 ), ( *($149 + [380]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($99) = *($134)
	*($149 + [664]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	*($115) = [0]
	*($149 + [360]) = (int_64)0
	$69 = CALL strlen([2544])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$352 }
	$150 = [232]
	goto $label$46 
	
.LABEL $label$605
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$184 }
	$150 = [460]
	goto $label$46 
	
.LABEL $label$604
	*($149 + [360]) = ($69 << [1])
	$134 = $46
	if ( $69 ){ goto $label$182 }
	goto $label$183 
	
.LABEL $label$603
	$135 = (($69 + [16]) & [-16])
	$134 = CALL $128($135)
	*($115) = $134
	*($149 + [360]) = ($135 | [1])
	*($149 + [364]) = $69
	$150 = [234]
	goto $label$46 
	
.LABEL $label$602
	CALL memcpy($134, [2544], $69)
	$150 = [235]
	goto $label$46 
	
.LABEL $label$601
	*(($134 + $69)) = [0]
	$69 = *($149 + [360])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [664]), ( *($115) ? $46 : $134 ), ( *($149 + [364]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($101) = *($134)
	*($149 + [680]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	*($149 + [200]) = *($82)
	CALL $84(($149 + [344]), ($149 + [200]))
	$69 = *($149 + [344])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [680]), ( *($117) ? $47 : $134 ), ( *($149 + [348]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($102) = *($134)
	*($149 + [696]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	*($119) = [0]
	*($149 + [328]) = (int_64)0
	$69 = CALL strlen([2512])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$351 }
	$150 = [236]
	goto $label$46 
	
.LABEL $label$600
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$181 }
	$150 = [459]
	goto $label$46 
	
.LABEL $label$599
	*($149 + [328]) = ($69 << [1])
	$134 = $48
	if ( $69 ){ goto $label$179 }
	goto $label$180 
	
.LABEL $label$598
	$135 = (($69 + [16]) & [-16])
	$134 = CALL $128($135)
	*($119) = $134
	*($149 + [328]) = ($135 | [1])
	*($149 + [332]) = $69
	$150 = [238]
	goto $label$46 
	
.LABEL $label$597
	CALL memcpy($134, [2512], $69)
	$150 = [239]
	goto $label$46 
	
.LABEL $label$596
	*(($134 + $69)) = [0]
	$69 = *($149 + [328])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [696]), ( *($119) ? $48 : $134 ), ( *($149 + [332]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($104) = *($134)
	*($149 + [712]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	*($121) = [0]
	*($149 + [312]) = (int_64)0
	$69 = CALL strlen([2560])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$350 }
	$150 = [240]
	goto $label$46 
	
.LABEL $label$595
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$178 }
	$150 = [458]
	goto $label$46 
	
.LABEL $label$594
	*($149 + [312]) = ($69 << [1])
	$134 = $49
	if ( $69 ){ goto $label$176 }
	goto $label$177 
	
.LABEL $label$593
	$135 = (($69 + [16]) & [-16])
	$134 = CALL $128($135)
	*($121) = $134
	*($149 + [312]) = ($135 | [1])
	*($149 + [316]) = $69
	$150 = [242]
	goto $label$46 
	
.LABEL $label$592
	CALL memcpy($134, [2560], $69)
	$150 = [243]
	goto $label$46 
	
.LABEL $label$591
	*(($134 + $69)) = [0]
	$69 = *($149 + [312])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [712]), ( *($121) ? $49 : $134 ), ( *($149 + [316]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($106) = *($134)
	*($149 + [728]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	CALL _ZNSt3__19to_stringEf(($149 + [296]), (DEMOTE float_32)(float_64 *($149 + [984])))
	$69 = *($149 + [296])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [728]), ( *($123) ? $50 : $134 ), ( *($149 + [300]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($108) = *($134)
	*($149 + [744]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	*($125) = [0]
	*($149 + [280]) = (int_64)0
	$69 = CALL strlen([2576])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$349 }
	$150 = [244]
	goto $label$46 
	
.LABEL $label$590
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$175 }
	$150 = [457]
	goto $label$46 
	
.LABEL $label$589
	*($149 + [280]) = ($69 << [1])
	$134 = $51
	if ( $69 ){ goto $label$173 }
	goto $label$174 
	
.LABEL $label$588
	$135 = (($69 + [16]) & [-16])
	$134 = CALL $128($135)
	*($125) = $134
	*($149 + [280]) = ($135 | [1])
	*($149 + [284]) = $69
	$150 = [246]
	goto $label$46 
	
.LABEL $label$587
	CALL memcpy($134, [2576], $69)
	$150 = [247]
	goto $label$46 
	
.LABEL $label$586
	*(($134 + $69)) = [0]
	$69 = *($149 + [280])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [744]), ( *($125) ? $51 : $134 ), ( *($149 + [284]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($110) = *($134)
	*($149 + [760]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($149 + [264]), $149, ($149 + [968]))
	$69 = *($149 + [264])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [760]), ( *($127) ? $52 : $134 ), ( *($149 + [268]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($112) = *($134)
	*($149 + [776]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	*($129) = [0]
	*($149 + [248]) = (int_64)0
	$69 = CALL strlen([2512])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$348 }
	$150 = [248]
	goto $label$46 
	
.LABEL $label$585
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$172 }
	$150 = [456]
	goto $label$46 
	
.LABEL $label$584
	*($149 + [248]) = ($69 << [1])
	$134 = $53
	if ( $69 ){ goto $label$170 }
	goto $label$171 
	
.LABEL $label$583
	$135 = (($69 + [16]) & [-16])
	$134 = CALL $128($135)
	*($129) = $134
	*($149 + [248]) = ($135 | [1])
	*($149 + [252]) = $69
	$150 = [250]
	goto $label$46 
	
.LABEL $label$582
	CALL memcpy($134, [2512], $69)
	$150 = [251]
	goto $label$46 
	
.LABEL $label$581
	*(($134 + $69)) = [0]
	$69 = *($149 + [248])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [776]), ( *($129) ? $53 : $134 ), ( *($149 + [252]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($114) = *($134)
	*($149 + [792]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	*($130) = [0]
	*($149 + [232]) = (int_64)0
	$69 = CALL strlen([2592])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$347 }
	$150 = [252]
	goto $label$46 
	
.LABEL $label$580
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$169 }
	$150 = [455]
	goto $label$46 
	
.LABEL $label$579
	*($149 + [232]) = ($69 << [1])
	$134 = $54
	if ( $69 ){ goto $label$167 }
	goto $label$168 
	
.LABEL $label$578
	$135 = (($69 + [16]) & [-16])
	$134 = CALL $128($135)
	*($130) = $134
	*($149 + [232]) = ($135 | [1])
	*($149 + [236]) = $69
	$150 = [254]
	goto $label$46 
	
.LABEL $label$577
	CALL memcpy($134, [2592], $69)
	$150 = [255]
	goto $label$46 
	
.LABEL $label$576
	*(($134 + $69)) = [0]
	$69 = *($149 + [232])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [792]), ( *($130) ? $54 : $134 ), ( *($149 + [236]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($116) = *($134)
	*($149 + [808]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($149 + [216]), $149, ($149 + [952]))
	$69 = *($149 + [216])
	$134 = ($69 & [1])
	$69 = CALL $136(($149 + [808]), ( *($132) ? $55 : $134 ), ( *($149 + [220]) ? uint_32($69 >> [1]) : $134 ))
	$134 = ($69 + [8])
	*($118) = *($134)
	*($149 + [824]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($134) = [0]
	*(($134 = (($149 + [184]) + [8]))) = [0]
	*($149 + [184]) = (int_64)0
	$69 = CALL strlen([2512])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$346 }
	$150 = [256]
	goto $label$46 
	
.LABEL $label$575
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$166 }
	$150 = [454]
	goto $label$46 
	
.LABEL $label$574
	*($149 + [184]) = ($69 << [1])
	$135 = $56
	if ( $69 ){ goto $label$164 }
	goto $label$165 
	
.LABEL $label$573
	$137 = (($69 + [16]) & [-16])
	$135 = CALL $128($137)
	*($134) = $135
	*($149 + [184]) = ($137 | [1])
	*($149 + [188]) = $69
	$150 = [258]
	goto $label$46 
	
.LABEL $label$572
	CALL memcpy($135, [2512], $69)
	$150 = [259]
	goto $label$46 
	
.LABEL $label$571
	*(($135 + $69)) = [0]
	$69 = *($149 + [184])
	$135 = ($69 & [1])
	$69 = CALL $136(($149 + [824]), ( *($134) ? $56 : $135 ), ( *($149 + [188]) ? uint_32($69 >> [1]) : $135 ))
	$135 = ($69 + [8])
	*($120) = *($135)
	*($149 + [840]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($135) = [0]
	*(($135 = (($149 + [168]) + [8]))) = [0]
	*($149 + [168]) = (int_64)0
	$69 = CALL strlen([2640])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$345 }
	$150 = [260]
	goto $label$46 
	
.LABEL $label$570
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$163 }
	$150 = [453]
	goto $label$46 
	
.LABEL $label$569
	*($149 + [168]) = ($69 << [1])
	$137 = $57
	if ( $69 ){ goto $label$161 }
	goto $label$162 
	
.LABEL $label$568
	$138 = (($69 + [16]) & [-16])
	$137 = CALL $128($138)
	*($135) = $137
	*($149 + [168]) = ($138 | [1])
	*($149 + [172]) = $69
	$150 = [262]
	goto $label$46 
	
.LABEL $label$567
	CALL memcpy($137, [2640], $69)
	$150 = [263]
	goto $label$46 
	
.LABEL $label$566
	*(($137 + $69)) = [0]
	$69 = *($149 + [168])
	$137 = ($69 & [1])
	$69 = CALL $136(($149 + [840]), ( *($135) ? $57 : $137 ), ( *($149 + [172]) ? uint_32($69 >> [1]) : $137 ))
	$137 = ($69 + [8])
	*($122) = *($137)
	*($149 + [856]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($137) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($149 + [152]), $149, ($149 + [904]))
	$69 = *($149 + [152])
	$137 = ($69 & [1])
	$136 = (($149 + [152]) + [8])
	$69 = CALL $136(($149 + [856]), ( *($136) ? $58 : $137 ), ( *($149 + [156]) ? uint_32($69 >> [1]) : $137 ))
	$137 = ($69 + [8])
	*($126) = *($137)
	*($149 + [1360]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($137) = [0]
	*(($137 = (($149 + [136]) + [8]))) = [0]
	*($149 + [136]) = (int_64)0
	$69 = CALL strlen([2512])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$344 }
	$150 = [264]
	goto $label$46 
	
.LABEL $label$565
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$160 }
	$150 = [452]
	goto $label$46 
	
.LABEL $label$564
	*($149 + [136]) = ($69 << [1])
	$138 = $59
	if ( $69 ){ goto $label$158 }
	goto $label$159 
	
.LABEL $label$563
	$140 = (($69 + [16]) & [-16])
	$138 = CALL $128($140)
	*($137) = $138
	*($149 + [136]) = ($140 | [1])
	*($149 + [140]) = $69
	$150 = [266]
	goto $label$46 
	
.LABEL $label$562
	CALL memcpy($138, [2512], $69)
	$150 = [267]
	goto $label$46 
	
.LABEL $label$561
	*(($138 + $69)) = [0]
	$69 = *($149 + [136])
	$138 = ($69 & [1])
	$69 = CALL $136(($149 + [1360]), ( *($137) ? $59 : $138 ), ( *($149 + [140]) ? uint_32($69 >> [1]) : $138 ))
	$138 = ($69 + [8])
	*($128) = *($138)
	*($149 + [72]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($138) = [0]
	*(($138 = (($149 + [120]) + [8]))) = [0]
	*($149 + [120]) = (int_64)0
	$69 = CALL strlen([2608])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$343 }
	$150 = [268]
	goto $label$46 
	
.LABEL $label$560
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$157 }
	$150 = [451]
	goto $label$46 
	
.LABEL $label$559
	*($149 + [120]) = ($69 << [1])
	$140 = $60
	if ( $69 ){ goto $label$155 }
	goto $label$156 
	
.LABEL $label$558
	$148 = (($69 + [16]) & [-16])
	$140 = CALL $128($148)
	*($138) = $140
	*($149 + [120]) = ($148 | [1])
	*($149 + [124]) = $69
	$150 = [270]
	goto $label$46 
	
.LABEL $label$557
	CALL memcpy($140, [2608], $69)
	$150 = [271]
	goto $label$46 
	
.LABEL $label$556
	*(($140 + $69)) = [0]
	$69 = *($149 + [120])
	$140 = ($69 & [1])
	$69 = CALL $136(($149 + [72]), ( *($138) ? $60 : $140 ), ( *($149 + [124]) ? uint_32($69 >> [1]) : $140 ))
	$140 = ($69 + [8])
	*($7) = *($140)
	*($149 + [1320]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($140) = [0]
	CALL _ZNSt3__19to_stringEy(($149 + [104]), ((uint_64)CALL $fimport$14() / (uint_64)(int_64)1000))
	$69 = *($149 + [104])
	$140 = ($69 & [1])
	$139 = (($149 + [104]) + [8])
	$69 = CALL $136(($149 + [1320]), ( *($139) ? $61 : $140 ), ( *($149 + [108]) ? uint_32($69 >> [1]) : $140 ))
	$140 = ($69 + [8])
	*($131) = *($140)
	*($149 + [1248]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($140) = [0]
	*(($140 = (($149 + [88]) + [8]))) = [0]
	*($149 + [88]) = (int_64)0
	$69 = CALL strlen([2624])
	if ( ((uint_32)$69 >= (uint_32)[-16]) ){ goto $label$342 }
	$150 = [272]
	goto $label$46 
	
.LABEL $label$555
	if ( ((uint_32)$69 >= (uint_32)[11]) ){ goto $label$154 }
	$150 = [450]
	goto $label$46 
	
.LABEL $label$554
	*($149 + [88]) = ($69 << [1])
	$148 = $62
	if ( $69 ){ goto $label$152 }
	goto $label$153 
	
.LABEL $label$553
	$141 = (($69 + [16]) & [-16])
	$148 = CALL $128($141)
	*($140) = $148
	*($149 + [88]) = ($141 | [1])
	*($149 + [92]) = $69
	$150 = [274]
	goto $label$46 
	
.LABEL $label$552
	CALL memcpy($148, [2624], $69)
	$150 = [275]
	goto $label$46 
	
.LABEL $label$551
	*(($148 + $69)) = [0]
	$69 = *($149 + [88])
	$148 = ($69 & [1])
	$69 = CALL $136(($149 + [1248]), ( *($140) ? $62 : $148 ), ( *($149 + [92]) ? uint_32($69 >> [1]) : $148 ))
	$148 = ($69 + [8])
	*($124) = *($148)
	*($149 + [872]) = *($69)
	*($69) = [0]
	*(($69 + [4])) = [0]
	*($148) = [0]
	if ( ((*($149 + [88]) & [1]) == 0) ){ goto $label$151 }
	$150 = [276]
	goto $label$46 
	
.LABEL $label$550
	CALL $130(*($140))
	$150 = [277]
	goto $label$46 
	
.LABEL $label$549
	if ( ((*($149 + [1248]) & [1]) == 0) ){ goto $label$150 }
	$150 = [278]
	goto $label$46 
	
.LABEL $label$548
	CALL $130(*($131))
	$150 = [279]
	goto $label$46 
	
.LABEL $label$547
	if ( ((*($149 + [104]) & [1]) == 0) ){ goto $label$149 }
	$150 = [280]
	goto $label$46 
	
.LABEL $label$546
	CALL $130(*($139))
	$150 = [281]
	goto $label$46 
	
.LABEL $label$545
	if ( ((*($149 + [1320]) & [1]) == 0) ){ goto $label$148 }
	$150 = [282]
	goto $label$46 
	
.LABEL $label$544
	CALL $130(*($7))
	$150 = [283]
	goto $label$46 
	
.LABEL $label$543
	if ( ((*($149 + [120]) & [1]) == 0) ){ goto $label$147 }
	$150 = [284]
	goto $label$46 
	
.LABEL $label$542
	CALL $130(*($138))
	$150 = [285]
	goto $label$46 
	
.LABEL $label$541
	if ( ((*($149 + [72]) & [1]) == 0) ){ goto $label$146 }
	$150 = [286]
	goto $label$46 
	
.LABEL $label$540
	CALL $130(*($128))
	$150 = [287]
	goto $label$46 
	
.LABEL $label$539
	if ( ((*($149 + [136]) & [1]) == 0) ){ goto $label$145 }
	$150 = [288]
	goto $label$46 
	
.LABEL $label$538
	CALL $130(*($137))
	$150 = [289]
	goto $label$46 
	
.LABEL $label$537
	if ( ((*($149 + [1360]) & [1]) == 0) ){ goto $label$144 }
	$150 = [290]
	goto $label$46 
	
.LABEL $label$536
	CALL $130(*($126))
	$150 = [291]
	goto $label$46 
	
.LABEL $label$535
	if ( ((*($149 + [152]) & [1]) == 0) ){ goto $label$143 }
	$150 = [292]
	goto $label$46 
	
.LABEL $label$534
	CALL $130(*($136))
	$150 = [293]
	goto $label$46 
	
.LABEL $label$533
	if ( ((*($149 + [856]) & [1]) == 0) ){ goto $label$142 }
	$150 = [294]
	goto $label$46 
	
.LABEL $label$532
	CALL $130(*($122))
	$150 = [295]
	goto $label$46 
	
.LABEL $label$531
	if ( ((*($149 + [168]) & [1]) == 0) ){ goto $label$141 }
	$150 = [296]
	goto $label$46 
	
.LABEL $label$530
	CALL $130(*($135))
	$150 = [297]
	goto $label$46 
	
.LABEL $label$529
	if ( ((*($149 + [840]) & [1]) == 0) ){ goto $label$140 }
	$150 = [298]
	goto $label$46 
	
.LABEL $label$528
	CALL $130(*($120))
	$150 = [299]
	goto $label$46 
	
.LABEL $label$527
	if ( ((*($149 + [184]) & [1]) == 0) ){ goto $label$139 }
	$150 = [300]
	goto $label$46 
	
.LABEL $label$526
	CALL $130(*($134))
	$150 = [301]
	goto $label$46 
	
.LABEL $label$525
	if ( ((*($149 + [824]) & [1]) == 0) ){ goto $label$138 }
	$150 = [302]
	goto $label$46 
	
.LABEL $label$524
	CALL $130(*($118))
	$150 = [303]
	goto $label$46 
	
.LABEL $label$523
	if ( ((*($149 + [216]) & [1]) == 0) ){ goto $label$137 }
	$150 = [304]
	goto $label$46 
	
.LABEL $label$522
	CALL $130(*($132))
	$150 = [305]
	goto $label$46 
	
.LABEL $label$521
	if ( ((*($149 + [808]) & [1]) == 0) ){ goto $label$136 }
	$150 = [306]
	goto $label$46 
	
.LABEL $label$520
	CALL $130(*($116))
	$150 = [307]
	goto $label$46 
	
.LABEL $label$519
	if ( ((*($149 + [232]) & [1]) == 0) ){ goto $label$135 }
	$150 = [308]
	goto $label$46 
	
.LABEL $label$518
	CALL $130(*($130))
	$150 = [309]
	goto $label$46 
	
.LABEL $label$517
	if ( ((*($149 + [792]) & [1]) == 0) ){ goto $label$134 }
	$150 = [310]
	goto $label$46 
	
.LABEL $label$516
	CALL $130(*($114))
	$150 = [311]
	goto $label$46 
	
.LABEL $label$515
	if ( ((*($149 + [248]) & [1]) == 0) ){ goto $label$133 }
	$150 = [312]
	goto $label$46 
	
.LABEL $label$514
	CALL $130(*($129))
	$150 = [313]
	goto $label$46 
	
.LABEL $label$513
	if ( ((*($149 + [776]) & [1]) == 0) ){ goto $label$132 }
	$150 = [314]
	goto $label$46 
	
.LABEL $label$512
	CALL $130(*($112))
	$150 = [315]
	goto $label$46 
	
.LABEL $label$511
	if ( ((*($149 + [264]) & [1]) == 0) ){ goto $label$131 }
	$150 = [316]
	goto $label$46 
	
.LABEL $label$510
	CALL $130(*($127))
	$150 = [317]
	goto $label$46 
	
.LABEL $label$509
	if ( ((*($149 + [760]) & [1]) == 0) ){ goto $label$130 }
	$150 = [318]
	goto $label$46 
	
.LABEL $label$508
	CALL $130(*($110))
	$150 = [319]
	goto $label$46 
	
.LABEL $label$507
	if ( ((*($149 + [280]) & [1]) == 0) ){ goto $label$129 }
	$150 = [320]
	goto $label$46 
	
.LABEL $label$506
	CALL $130(*($125))
	$150 = [321]
	goto $label$46 
	
.LABEL $label$505
	if ( ((*($149 + [744]) & [1]) == 0) ){ goto $label$128 }
	$150 = [322]
	goto $label$46 
	
.LABEL $label$504
	CALL $130(*($108))
	$150 = [323]
	goto $label$46 
	
.LABEL $label$503
	if ( ((*($149 + [296]) & [1]) == 0) ){ goto $label$127 }
	$150 = [324]
	goto $label$46 
	
.LABEL $label$502
	CALL $130(*($123))
	$150 = [325]
	goto $label$46 
	
.LABEL $label$501
	if ( ((*($149 + [728]) & [1]) == 0) ){ goto $label$126 }
	$150 = [326]
	goto $label$46 
	
.LABEL $label$500
	CALL $130(*($106))
	$150 = [327]
	goto $label$46 
	
.LABEL $label$499
	if ( ((*($149 + [312]) & [1]) == 0) ){ goto $label$125 }
	$150 = [328]
	goto $label$46 
	
.LABEL $label$498
	CALL $130(*($121))
	$150 = [329]
	goto $label$46 
	
.LABEL $label$497
	if ( ((*($149 + [712]) & [1]) == 0) ){ goto $label$124 }
	$150 = [330]
	goto $label$46 
	
.LABEL $label$496
	CALL $130(*($104))
	$150 = [331]
	goto $label$46 
	
.LABEL $label$495
	if ( ((*($149 + [328]) & [1]) == 0) ){ goto $label$123 }
	$150 = [332]
	goto $label$46 
	
.LABEL $label$494
	CALL $130(*($119))
	$150 = [333]
	goto $label$46 
	
.LABEL $label$493
	if ( ((*($149 + [696]) & [1]) == 0) ){ goto $label$122 }
	$150 = [334]
	goto $label$46 
	
.LABEL $label$492
	CALL $130(*($102))
	$150 = [335]
	goto $label$46 
	
.LABEL $label$491
	if ( ((*($149 + [344]) & [1]) == 0) ){ goto $label$121 }
	$150 = [336]
	goto $label$46 
	
.LABEL $label$490
	CALL $130(*($117))
	$150 = [337]
	goto $label$46 
	
.LABEL $label$489
	if ( ((*($149 + [680]) & [1]) == 0) ){ goto $label$120 }
	$150 = [338]
	goto $label$46 
	
.LABEL $label$488
	CALL $130(*($101))
	$150 = [339]
	goto $label$46 
	
.LABEL $label$487
	if ( ((*($149 + [360]) & [1]) == 0) ){ goto $label$119 }
	$150 = [340]
	goto $label$46 
	
.LABEL $label$486
	CALL $130(*($115))
	$150 = [341]
	goto $label$46 
	
.LABEL $label$485
	if ( ((*($149 + [664]) & [1]) == 0) ){ goto $label$118 }
	$150 = [342]
	goto $label$46 
	
.LABEL $label$484
	CALL $130(*($99))
	$150 = [343]
	goto $label$46 
	
.LABEL $label$483
	if ( ((*($149 + [376]) & [1]) == 0) ){ goto $label$117 }
	$150 = [344]
	goto $label$46 
	
.LABEL $label$482
	CALL $130(*($113))
	$150 = [345]
	goto $label$46 
	
.LABEL $label$481
	if ( ((*($149 + [648]) & [1]) == 0) ){ goto $label$116 }
	$150 = [346]
	goto $label$46 
	
.LABEL $label$480
	CALL $130(*($98))
	$150 = [347]
	goto $label$46 
	
.LABEL $label$479
	if ( ((*($149 + [392]) & [1]) == 0) ){ goto $label$115 }
	$150 = [348]
	goto $label$46 
	
.LABEL $label$478
	CALL $130(*($111))
	$150 = [349]
	goto $label$46 
	
.LABEL $label$477
	if ( ((*($149 + [632]) & [1]) == 0) ){ goto $label$114 }
	$150 = [350]
	goto $label$46 
	
.LABEL $label$476
	CALL $130(*($96))
	$150 = [351]
	goto $label$46 
	
.LABEL $label$475
	if ( ((*($149 + [408]) & [1]) == 0) ){ goto $label$113 }
	$150 = [352]
	goto $label$46 
	
.LABEL $label$474
	CALL $130(*($109))
	$150 = [353]
	goto $label$46 
	
.LABEL $label$473
	if ( ((*($149 + [616]) & [1]) == 0) ){ goto $label$112 }
	$150 = [354]
	goto $label$46 
	
.LABEL $label$472
	CALL $130(*($94))
	$150 = [355]
	goto $label$46 
	
.LABEL $label$471
	if ( ((*($149 + [424]) & [1]) == 0) ){ goto $label$111 }
	$150 = [356]
	goto $label$46 
	
.LABEL $label$470
	CALL $130(*($107))
	$150 = [357]
	goto $label$46 
	
.LABEL $label$469
	if ( ((*($149 + [600]) & [1]) == 0) ){ goto $label$110 }
	$150 = [358]
	goto $label$46 
	
.LABEL $label$468
	CALL $130(*($92))
	$150 = [359]
	goto $label$46 
	
.LABEL $label$467
	if ( ((*($149 + [440]) & [1]) == 0) ){ goto $label$109 }
	$150 = [360]
	goto $label$46 
	
.LABEL $label$466
	CALL $130(*($105))
	$150 = [361]
	goto $label$46 
	
.LABEL $label$465
	if ( ((*($149 + [584]) & [1]) == 0) ){ goto $label$108 }
	$150 = [362]
	goto $label$46 
	
.LABEL $label$464
	CALL $130(*($90))
	$150 = [363]
	goto $label$46 
	
.LABEL $label$463
	if ( ((*($149 + [456]) & [1]) == 0) ){ goto $label$107 }
	$150 = [364]
	goto $label$46 
	
.LABEL $label$462
	CALL $130(*($103))
	$150 = [365]
	goto $label$46 
	
.LABEL $label$461
	if ( ((*($149 + [568]) & [1]) == 0) ){ goto $label$106 }
	$150 = [366]
	goto $label$46 
	
.LABEL $label$460
	CALL $130(*($91))
	$150 = [367]
	goto $label$46 
	
.LABEL $label$459
	if ( ((*($149 + [472]) & [1]) == 0) ){ goto $label$105 }
	$150 = [368]
	goto $label$46 
	
.LABEL $label$458
	CALL $130(*($68))
	$150 = [369]
	goto $label$46 
	
.LABEL $label$457
	if ( ((*($149 + [552]) & [1]) == 0) ){ goto $label$104 }
	$150 = [370]
	goto $label$46 
	
.LABEL $label$456
	CALL $130(*($93))
	$150 = [371]
	goto $label$46 
	
.LABEL $label$455
	if ( ((*($149 + [488]) & [1]) == 0) ){ goto $label$103 }
	$150 = [372]
	goto $label$46 
	
.LABEL $label$454
	CALL $130(*($100))
	$150 = [373]
	goto $label$46 
	
.LABEL $label$453
	if ( ((*($149 + [536]) & [1]) == 0) ){ goto $label$102 }
	$150 = [374]
	goto $label$46 
	
.LABEL $label$452
	CALL $130(*($95))
	$150 = [375]
	goto $label$46 
	
.LABEL $label$451
	if ( ((*($149 + [504]) & [1]) == 0) ){ goto $label$101 }
	$150 = [376]
	goto $label$46 
	
.LABEL $label$450
	CALL $130(*($146))
	$150 = [377]
	goto $label$46 
	
.LABEL $label$449
	if ( ((*($149 + [520]) & [1]) == 0) ){ goto $label$100 }
	$150 = [378]
	goto $label$46 
	
.LABEL $label$448
	CALL $130(*($97))
	$150 = [379]
	goto $label$46 
	
.LABEL $label$447
	$78 = *($149 + [904])
	$67 = *($149 + [952])
	if ( ((int_64)$67 <= (int_64)$78) ){ goto $label$99 }
	$150 = [421]
	goto $label$46 
	
.LABEL $label$446
	$70 = *($0)
	$147 = (int_64)0
	$2 = (int_64)59
	$146 = [1152]
	$1 = (int_64)0
	$150 = [422]
	goto $label$46 
	
.LABEL $label$445
	if ( ((uint_64)$147 > (uint_64)(int_64)5) ){ goto $label$72 }
	$150 = [446]
	goto $label$46 
	
.LABEL $label$444
	$68 = *($146)
	if ( ((uint_32)(($68 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$58 }
	$150 = [449]
	goto $label$46 
	
.LABEL $label$443
	$68 = ($68 + [165])
	goto $label$57 
	
.LABEL $label$442
	$4 = (int_64)0
	if ( ((uint_64)$147 <= (uint_64)(int_64)11) ){ goto $label$71 }
	goto $label$70 
	
.LABEL $label$441
	$68 = ( ($68 + [208]) ? [0] : ((($68 + [-49]) & [255]) <= [5]) )
	$150 = [448]
	goto $label$46 
	
.LABEL $label$440
	$4 = (int_64)((int_64)(CASTING uint_64)(uint_32 $68) << (int_64)56) >> (int_64)56)
	$150 = [445]
	goto $label$46 
	
.LABEL $label$439
	$4 = ((int_64)((int_64)$4 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	$150 = [424]
	goto $label$46 
	
.LABEL $label$438
	$146 = ($146 + [1])
	$147 = ((int_64)$147 + (int_64)1)
	$1 = ((int_64)$4 | (int_64)$1)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$73 }
	$150 = [425]
	goto $label$46 
	
.LABEL $label$437
	*($128) = $1
	*($149 + [72]) = $70
	$70 = *($89)
	$147 = (int_64)0
	$2 = (int_64)59
	$146 = [1168]
	$1 = (int_64)0
	$150 = [426]
	goto $label$46 
	
.LABEL $label$436
	if ( ((uint_64)$147 > (uint_64)(int_64)7) ){ goto $label$68 }
	$150 = [441]
	goto $label$46 
	
.LABEL $label$435
	$68 = *($146)
	if ( ((uint_32)(($68 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$60 }
	$150 = [444]
	goto $label$46 
	
.LABEL $label$434
	$68 = ($68 + [165])
	goto $label$59 
	
.LABEL $label$433
	$4 = (int_64)0
	if ( ((uint_64)$147 <= (uint_64)(int_64)11) ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$432
	$68 = ( ($68 + [208]) ? [0] : ((($68 + [-49]) & [255]) <= [5]) )
	$150 = [443]
	goto $label$46 
	
.LABEL $label$431
	$4 = (int_64)((int_64)(CASTING uint_64)(uint_32 $68) << (int_64)56) >> (int_64)56)
	$150 = [440]
	goto $label$46 
	
.LABEL $label$430
	$4 = ((int_64)((int_64)$4 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	$150 = [428]
	goto $label$46 
	
.LABEL $label$429
	$146 = ($146 + [1])
	$147 = ((int_64)$147 + (int_64)1)
	$1 = ((int_64)$4 | (int_64)$1)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$69 }
	$150 = [429]
	goto $label$46 
	
.LABEL $label$428
	$4 = *($76)
	CALL eosio_assert(((int_64)*($80) == (int_64)$4), [2336])
	$147 = (int_64)
	CALL eosio_assert(((int_64)$147($67 - $78)) > (int_64)-4611686018427387904), [2384])
	CALL eosio_assert(((int_64)$147 < (int_64)4611686018427387904), [2416])
	*($63) = $147
	*((($149 + [1248]) + [24])) = $4
	*($131) = *($82)
	*($149 + [1248]) = *($0)
	CALL $147($64, ($149 + [872]))
	CALL $36(($149 + [1360]), CALL $35(($149 + [1320]), ($149 + [72]), $70, $1, ($149 + [1248])))
	$146 = *($149 + [1360])
	CALL send_inline($146, (*($149 + [1364]) - $146))
	$146 = *($149 + [1360])
	if ( ($146 == 0) ){ goto $label$65 }
	$150 = [430]
	goto $label$46 
	
.LABEL $label$427
	*($149 + [1364]) = $146
	CALL $130($146)
	$150 = [431]
	goto $label$46 
	
.LABEL $label$426
	$146 = *($142)
	if ( ($146 == 0) ){ goto $label$64 }
	$150 = [432]
	goto $label$46 
	
.LABEL $label$425
	*($17) = $146
	CALL $130($146)
	$150 = [433]
	goto $label$46 
	
.LABEL $label$424
	$146 = *($18)
	if ( ($146 == 0) ){ goto $label$63 }
	$150 = [434]
	goto $label$46 
	
.LABEL $label$423
	*($143) = $146
	CALL $130($146)
	$150 = [435]
	goto $label$46 
	
.LABEL $label$422
	if ( ((*($64) & [1]) == 0) ){ goto $label$62 }
	$150 = [436]
	goto $label$46 
	
.LABEL $label$421
	CALL $130(*((($149 + [1248]) + [40])))
	$150 = [437]
	goto $label$46 
	
.LABEL $label$420
	$147 = CALL current_time()
	*($149 + [1248]) = ((uint_64)$147 / (uint_64)(int_64)1000)
	if ( ((uint_64)((uint_64)$147 / (uint_64)(int_64)86400000000) <= (uint_64)((uint_64)*($144) / (uint_64)(int_64)86400000)) ){ goto $label$61 }
	$150 = [439]
	goto $label$46 
	
.LABEL $label$419
	*($149 + [1324]) = ($149 + [1248])
	*($149 + [1320]) = ($149 + [984])
	CALL $102(($149 + [1200]), $8, ($149 + [1320]))
	goto $label$98 
	
.LABEL $label$418
	*($149 + [1320]) = ($149 + [984])
	CALL $103(($149 + [1200]), $8, ($149 + [1320]))
	$150 = [380]
	goto $label$46 
	
.LABEL $label$417
	if ( ((int_64)*($149 + [968]) < (int_64)1) ){ goto $label$97 }
	$150 = [395]
	goto $label$46 
	
.LABEL $label$416
	$67 = *($0)
	$147 = (int_64)0
	$2 = (int_64)59
	$146 = [1152]
	$1 = (int_64)0
	$150 = [396]
	goto $label$46 
	
.LABEL $label$415
	if ( ((uint_64)$147 > (uint_64)(int_64)5) ){ goto $label$87 }
	$150 = [417]
	goto $label$46 
	
.LABEL $label$414
	$68 = *($146)
	if ( ((uint_32)(($68 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$75 }
	$150 = [420]
	goto $label$46 
	
.LABEL $label$413
	$68 = ($68 + [165])
	goto $label$74 
	
.LABEL $label$412
	$4 = (int_64)0
	if ( ((uint_64)$147 <= (uint_64)(int_64)11) ){ goto $label$86 }
	goto $label$85 
	
.LABEL $label$411
	$68 = ( ($68 + [208]) ? [0] : ((($68 + [-49]) & [255]) <= [5]) )
	$150 = [419]
	goto $label$46 
	
.LABEL $label$410
	$4 = (int_64)((int_64)(CASTING uint_64)(uint_32 $68) << (int_64)56) >> (int_64)56)
	$150 = [416]
	goto $label$46 
	
.LABEL $label$409
	$4 = ((int_64)((int_64)$4 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	$150 = [398]
	goto $label$46 
	
.LABEL $label$408
	$146 = ($146 + [1])
	$147 = ((int_64)$147 + (int_64)1)
	$1 = ((int_64)$4 | (int_64)$1)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$88 }
	$150 = [399]
	goto $label$46 
	
.LABEL $label$407
	*($128) = $1
	*($149 + [72]) = $67
	$78 = *(($8 + [16]))
	$147 = (int_64)0
	$2 = (int_64)59
	$146 = [1168]
	$1 = (int_64)0
	$150 = [400]
	goto $label$46 
	
.LABEL $label$406
	if ( ((uint_64)$147 > (uint_64)(int_64)7) ){ goto $label$83 }
	$150 = [412]
	goto $label$46 
	
.LABEL $label$405
	$68 = *($146)
	if ( ((uint_32)(($68 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$77 }
	$150 = [415]
	goto $label$46 
	
.LABEL $label$404
	$68 = ($68 + [165])
	goto $label$76 
	
.LABEL $label$403
	$4 = (int_64)0
	if ( ((uint_64)$147 <= (uint_64)(int_64)11) ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$402
	$68 = ( ($68 + [208]) ? [0] : ((($68 + [-49]) & [255]) <= [5]) )
	$150 = [414]
	goto $label$46 
	
.LABEL $label$401
	$4 = (int_64)((int_64)(CASTING uint_64)(uint_32 $68) << (int_64)56) >> (int_64)56)
	$150 = [411]
	goto $label$46 
	
.LABEL $label$400
	$4 = ((int_64)((int_64)$4 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	$150 = [402]
	goto $label$46 
	
.LABEL $label$399
	$146 = ($146 + [1])
	$147 = ((int_64)$147 + (int_64)1)
	$1 = ((int_64)$4 | (int_64)$1)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$84 }
	$150 = [403]
	goto $label$46 
	
.LABEL $label$398
	*($131) = *($79)
	*(($63 + [4])) = *($149 + [972])
	*($149 + [1248]) = $67
	*($63) = *($149 + [968])
	*(($63 + [12])) = *((($149 + [968]) + [12]))
	*(($63 + [8])) = *($75)
	CALL $147($64, ($149 + [888]))
	CALL $36(($149 + [1360]), CALL $35(($149 + [1320]), ($149 + [72]), $78, $1, ($149 + [1248])))
	$146 = *($149 + [1360])
	CALL send_inline($146, (*($149 + [1364]) - $146))
	$146 = *($149 + [1360])
	if ( ($146 == 0) ){ goto $label$80 }
	$150 = [404]
	goto $label$46 
	
.LABEL $label$397
	*($149 + [1364]) = $146
	CALL $130($146)
	$150 = [405]
	goto $label$46 
	
.LABEL $label$396
	$146 = *($142)
	if ( ($146 == 0) ){ goto $label$79 }
	$150 = [406]
	goto $label$46 
	
.LABEL $label$395
	*($17) = $146
	CALL $130($146)
	$150 = [407]
	goto $label$46 
	
.LABEL $label$394
	$146 = *($18)
	if ( ($146 == 0) ){ goto $label$78 }
	$150 = [408]
	goto $label$46 
	
.LABEL $label$393
	*($143) = $146
	CALL $130($146)
	$150 = [409]
	goto $label$46 
	
.LABEL $label$392
	if ( ((*($64) & [1]) == 0) ){ goto $label$96 }
	$150 = [410]
	goto $label$46 
	
.LABEL $label$391
	CALL $130(*((($149 + [1248]) + [40])))
	$150 = [381]
	goto $label$46 
	
.LABEL $label$390
	*(($146 = (($149 + [56]) + [8]))) = *($80)
	*($149 + [56]) = *($149 + [904])
	$147 = *($82)
	$4 = *($145)
	$2 = *(($8 + [16]))
	$1 = *(($9 + [16]))
	$67 = *($89)
	$78 = *($9)
	*(($149 + [8])) = *($146)
	*($149) = *($149 + [56])
	CALL _ZN5eosio8exchange19deal_fee_processingENS_5assetEyyyyyyby($0, $149, $67, $78, $1, $2, $4, $147, $15, $3)
	$147 = *($6)
	*($149 + [1248]) = (int_64)-4503599627370497
	CALL $100(($149 + [48]), ($149 + [1000]), ($149 + [1248]))
	$4 = *(*($149 + [52]))
	if ( ((int_64)*($77) > (int_64)0) ){ goto $label$95 }
	$150 = [394]
	goto $label$46 
	
.LABEL $label$389
	*($149 + [1248]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $65))
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [384])
	CALL $104(($149 + [1248]))
	CALL $39(*($149 + [1000]), $6)
	$150 = [382]
	goto $label$46 
	
.LABEL $label$388
	if ( ((int_64)*($13) <= (int_64)0) ){ goto $label$94 }
	$150 = [383]
	goto $label$46 
	
.LABEL $label$387
	CALL $100(($149 + [1248]), ($149 + [1000]), ($149 + [992]))
	$2 = (int_64)0
	$65 = ($149 + [1000])
	$146 = *($149 + [1252])
	if ( ($146 == 0) ){ goto $label$93 }
	$150 = [384]
	goto $label$46 
	
.LABEL $label$386
	if ( ((float_64)*($149 + [992]) != (float_64)*($146 + [24])) ){ goto $label$92 }
	$150 = [385]
	goto $label$46 
	
.LABEL $label$385
	$1 = *($149 + [1248])
	$2 = ((int_64)$1 & (int_64)-4294967296)
	$65 = (CASTING uint_32)(uint_64 $1)
	$150 = [386]
	goto $label$46 
	
.LABEL $label$384
	$6 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32))
	$146 = [0]
	goto $label$91 
	
.LABEL $label$383
	CALL eosio_assert([1], [384])
	CALL eosio_assert([1], [432])
	$146 = CALL db_next_i64(*($83), ($149 + [1248]))
	if ( ((int_32)$146 < (int_32)[0]) ){ goto $label$89 }
	$150 = [392]
	goto $label$46 
	
.LABEL $label$382
	CALL $40(($149 + [1096]), $146)
	$150 = [393]
	goto $label$46 
	
.LABEL $label$381
	CALL $43(($149 + [1096]), $12)
	$146 = [1]
	$150 = [387]
	goto $label$46 
	
.LABEL $label$380
	if ( ((*($149 + [872]) & [1]) == 0) ){ goto $label$90 }
	$150 = [388]
	goto $label$46 
	
.LABEL $label$379
	CALL $130(*($124))
	$150 = [389]
	goto $label$46 
	
.LABEL $label$378
	$68 = ((int_64)$147 == (int_64)$4)
	if ( ((*($149 + [888]) & [1]) == 0) ){ goto $label$340 }
	$150 = [390]
	goto $label$46 
	
.LABEL $label$377
	CALL $130(*($133))
	$150 = [0]
	goto $label$46 
	
.LABEL $label$376
	$66 = ($66 | $68)
	if ( ($146 == 0) ){ goto $label$341 }
	goto $label$26 
	
.LABEL $label$375
	if ( ($66 & [1]) ){ goto $label$26 }
	$150 = [516]
	goto $label$46 
	
.LABEL $label$374
	*($149 + [1248]) = $71
	if ( ((float_64)*(*(CALL $101(($149 + [1248])) + [4]) + [24]) >= (float_64)*($72)) ){ goto $label$40 }
	goto $label$26 
	
.LABEL $label$373
	CALL $132(($149 + [584]))
	
.LABEL $label$372
	CALL $132(($149 + [568]))
	
.LABEL $label$371
	CALL $132(($149 + [536]))
	
.LABEL $label$370
	CALL $132(($149 + [504]))
	
.LABEL $label$369
	CALL $132(($149 + [472]))
	
.LABEL $label$368
	CALL $132(($149 + [456]))
	
.LABEL $label$367
	CALL $132(($149 + [424]))
	
.LABEL $label$366
	CALL $132(($149 + [392]))
	
.LABEL $label$365
	CALL $132(($149 + [376]))
	
.LABEL $label$364
	CALL $132(($149 + [344]))
	
.LABEL $label$363
	CALL $132(($149 + [312]))
	
.LABEL $label$362
	CALL $132(($149 + [296]))
	
.LABEL $label$361
	CALL $132(($149 + [264]))
	
.LABEL $label$360
	CALL $132(($149 + [248]))
	
.LABEL $label$359
	CALL $132(($149 + [216]))
	
.LABEL $label$358
	CALL $132(($149 + [520]))
	
.LABEL $label$357
	CALL $132(($149 + [504]))
	
.LABEL $label$356
	CALL $132(($149 + [472]))
	
.LABEL $label$355
	CALL $132(($149 + [440]))
	
.LABEL $label$354
	CALL $132(($149 + [408]))
	
.LABEL $label$353
	CALL $132(($149 + [392]))
	
.LABEL $label$352
	CALL $132(($149 + [360]))
	
.LABEL $label$351
	CALL $132(($149 + [328]))
	
.LABEL $label$350
	CALL $132(($149 + [312]))
	
.LABEL $label$349
	CALL $132(($149 + [280]))
	
.LABEL $label$348
	CALL $132(($149 + [248]))
	
.LABEL $label$347
	CALL $132(($149 + [232]))
	
.LABEL $label$346
	CALL $132(($149 + [184]))
	
.LABEL $label$345
	CALL $132(($149 + [168]))
	
.LABEL $label$344
	CALL $132(($149 + [136]))
	
.LABEL $label$343
	CALL $132(($149 + [120]))
	
.LABEL $label$342
	CALL $132(($149 + [88]))
	
.LABEL $label$341
	$150 = [1]
	goto $label$46 
	
.LABEL $label$340
	$150 = [0]
	goto $label$46 
	
.LABEL $label$339
	$150 = [515]
	goto $label$46 
	
.LABEL $label$338
	$150 = [3]
	goto $label$46 
	
.LABEL $label$337
	$150 = [5]
	goto $label$46 
	
.LABEL $label$336
	$150 = [4]
	goto $label$46 
	
.LABEL $label$335
	$150 = [4]
	goto $label$46 
	
.LABEL $label$334
	$150 = [6]
	goto $label$46 
	
.LABEL $label$333
	$150 = [8]
	goto $label$46 
	
.LABEL $label$332
	$150 = [7]
	goto $label$46 
	
.LABEL $label$331
	$150 = [7]
	goto $label$46 
	
.LABEL $label$330
	$150 = [9]
	goto $label$46 
	
.LABEL $label$329
	$150 = [11]
	goto $label$46 
	
.LABEL $label$328
	$150 = [10]
	goto $label$46 
	
.LABEL $label$327
	$150 = [10]
	goto $label$46 
	
.LABEL $label$326
	$150 = [12]
	goto $label$46 
	
.LABEL $label$325
	$150 = [13]
	goto $label$46 
	
.LABEL $label$324
	$150 = [15]
	goto $label$46 
	
.LABEL $label$323
	$150 = [18]
	goto $label$46 
	
.LABEL $label$322
	$150 = [17]
	goto $label$46 
	
.LABEL $label$321
	$150 = [21]
	goto $label$46 
	
.LABEL $label$320
	$150 = [20]
	goto $label$46 
	
.LABEL $label$319
	$150 = [24]
	goto $label$46 
	
.LABEL $label$318
	$150 = [23]
	goto $label$46 
	
.LABEL $label$317
	$150 = [27]
	goto $label$46 
	
.LABEL $label$316
	$150 = [26]
	goto $label$46 
	
.LABEL $label$315
	$150 = [30]
	goto $label$46 
	
.LABEL $label$314
	$150 = [29]
	goto $label$46 
	
.LABEL $label$313
	$150 = [32]
	goto $label$46 
	
.LABEL $label$312
	$150 = [35]
	goto $label$46 
	
.LABEL $label$311
	$150 = [34]
	goto $label$46 
	
.LABEL $label$310
	$150 = [38]
	goto $label$46 
	
.LABEL $label$309
	$150 = [37]
	goto $label$46 
	
.LABEL $label$308
	$150 = [41]
	goto $label$46 
	
.LABEL $label$307
	$150 = [40]
	goto $label$46 
	
.LABEL $label$306
	$150 = [44]
	goto $label$46 
	
.LABEL $label$305
	$150 = [43]
	goto $label$46 
	
.LABEL $label$304
	$150 = [47]
	goto $label$46 
	
.LABEL $label$303
	$150 = [46]
	goto $label$46 
	
.LABEL $label$302
	$150 = [48]
	goto $label$46 
	
.LABEL $label$301
	$150 = [50]
	goto $label$46 
	
.LABEL $label$300
	$150 = [49]
	goto $label$46 
	
.LABEL $label$299
	$150 = [49]
	goto $label$46 
	
.LABEL $label$298
	$150 = [51]
	goto $label$46 
	
.LABEL $label$297
	$150 = [52]
	goto $label$46 
	
.LABEL $label$296
	$150 = [483]
	goto $label$46 
	
.LABEL $label$295
	$150 = [53]
	goto $label$46 
	
.LABEL $label$294
	$150 = [55]
	goto $label$46 
	
.LABEL $label$293
	$150 = [57]
	goto $label$46 
	
.LABEL $label$292
	$150 = [59]
	goto $label$46 
	
.LABEL $label$291
	$150 = [58]
	goto $label$46 
	
.LABEL $label$290
	$150 = [61]
	goto $label$46 
	
.LABEL $label$289
	$150 = [63]
	goto $label$46 
	
.LABEL $label$288
	$150 = [62]
	goto $label$46 
	
.LABEL $label$287
	$150 = [65]
	goto $label$46 
	
.LABEL $label$286
	$150 = [67]
	goto $label$46 
	
.LABEL $label$285
	$150 = [66]
	goto $label$46 
	
.LABEL $label$284
	$150 = [69]
	goto $label$46 
	
.LABEL $label$283
	$150 = [71]
	goto $label$46 
	
.LABEL $label$282
	$150 = [70]
	goto $label$46 
	
.LABEL $label$281
	$150 = [73]
	goto $label$46 
	
.LABEL $label$280
	$150 = [75]
	goto $label$46 
	
.LABEL $label$279
	$150 = [74]
	goto $label$46 
	
.LABEL $label$278
	$150 = [77]
	goto $label$46 
	
.LABEL $label$277
	$150 = [79]
	goto $label$46 
	
.LABEL $label$276
	$150 = [78]
	goto $label$46 
	
.LABEL $label$275
	$150 = [81]
	goto $label$46 
	
.LABEL $label$274
	$150 = [83]
	goto $label$46 
	
.LABEL $label$273
	$150 = [82]
	goto $label$46 
	
.LABEL $label$272
	$150 = [85]
	goto $label$46 
	
.LABEL $label$271
	$150 = [87]
	goto $label$46 
	
.LABEL $label$270
	$150 = [86]
	goto $label$46 
	
.LABEL $label$269
	$150 = [89]
	goto $label$46 
	
.LABEL $label$268
	$150 = [91]
	goto $label$46 
	
.LABEL $label$267
	$150 = [90]
	goto $label$46 
	
.LABEL $label$266
	$150 = [93]
	goto $label$46 
	
.LABEL $label$265
	$150 = [95]
	goto $label$46 
	
.LABEL $label$264
	$150 = [94]
	goto $label$46 
	
.LABEL $label$263
	$150 = [97]
	goto $label$46 
	
.LABEL $label$262
	$150 = [99]
	goto $label$46 
	
.LABEL $label$261
	$150 = [98]
	goto $label$46 
	
.LABEL $label$260
	$150 = [101]
	goto $label$46 
	
.LABEL $label$259
	$150 = [103]
	goto $label$46 
	
.LABEL $label$258
	$150 = [102]
	goto $label$46 
	
.LABEL $label$257
	$150 = [105]
	goto $label$46 
	
.LABEL $label$256
	$150 = [107]
	goto $label$46 
	
.LABEL $label$255
	$150 = [106]
	goto $label$46 
	
.LABEL $label$254
	$150 = [109]
	goto $label$46 
	
.LABEL $label$253
	$150 = [111]
	goto $label$46 
	
.LABEL $label$252
	$150 = [110]
	goto $label$46 
	
.LABEL $label$251
	$150 = [113]
	goto $label$46 
	
.LABEL $label$250
	$150 = [115]
	goto $label$46 
	
.LABEL $label$249
	$150 = [114]
	goto $label$46 
	
.LABEL $label$248
	$150 = [117]
	goto $label$46 
	
.LABEL $label$247
	$150 = [119]
	goto $label$46 
	
.LABEL $label$246
	$150 = [121]
	goto $label$46 
	
.LABEL $label$245
	$150 = [123]
	goto $label$46 
	
.LABEL $label$244
	$150 = [125]
	goto $label$46 
	
.LABEL $label$243
	$150 = [127]
	goto $label$46 
	
.LABEL $label$242
	$150 = [129]
	goto $label$46 
	
.LABEL $label$241
	$150 = [131]
	goto $label$46 
	
.LABEL $label$240
	$150 = [133]
	goto $label$46 
	
.LABEL $label$239
	$150 = [135]
	goto $label$46 
	
.LABEL $label$238
	$150 = [137]
	goto $label$46 
	
.LABEL $label$237
	$150 = [139]
	goto $label$46 
	
.LABEL $label$236
	$150 = [141]
	goto $label$46 
	
.LABEL $label$235
	$150 = [143]
	goto $label$46 
	
.LABEL $label$234
	$150 = [145]
	goto $label$46 
	
.LABEL $label$233
	$150 = [147]
	goto $label$46 
	
.LABEL $label$232
	$150 = [149]
	goto $label$46 
	
.LABEL $label$231
	$150 = [151]
	goto $label$46 
	
.LABEL $label$230
	$150 = [153]
	goto $label$46 
	
.LABEL $label$229
	$150 = [155]
	goto $label$46 
	
.LABEL $label$228
	$150 = [157]
	goto $label$46 
	
.LABEL $label$227
	$150 = [159]
	goto $label$46 
	
.LABEL $label$226
	$150 = [161]
	goto $label$46 
	
.LABEL $label$225
	$150 = [163]
	goto $label$46 
	
.LABEL $label$224
	$150 = [165]
	goto $label$46 
	
.LABEL $label$223
	$150 = [167]
	goto $label$46 
	
.LABEL $label$222
	$150 = [169]
	goto $label$46 
	
.LABEL $label$221
	$150 = [171]
	goto $label$46 
	
.LABEL $label$220
	$150 = [173]
	goto $label$46 
	
.LABEL $label$219
	$150 = [175]
	goto $label$46 
	
.LABEL $label$218
	$150 = [177]
	goto $label$46 
	
.LABEL $label$217
	$150 = [179]
	goto $label$46 
	
.LABEL $label$216
	$150 = [181]
	goto $label$46 
	
.LABEL $label$215
	$150 = [183]
	goto $label$46 
	
.LABEL $label$214
	$150 = [185]
	goto $label$46 
	
.LABEL $label$213
	$150 = [187]
	goto $label$46 
	
.LABEL $label$212
	$150 = [189]
	goto $label$46 
	
.LABEL $label$211
	$150 = [191]
	goto $label$46 
	
.LABEL $label$210
	$150 = [193]
	goto $label$46 
	
.LABEL $label$209
	$150 = [195]
	goto $label$46 
	
.LABEL $label$208
	$150 = [197]
	goto $label$46 
	
.LABEL $label$207
	$150 = [199]
	goto $label$46 
	
.LABEL $label$206
	$150 = [201]
	goto $label$46 
	
.LABEL $label$205
	$150 = [203]
	goto $label$46 
	
.LABEL $label$204
	$150 = [205]
	goto $label$46 
	
.LABEL $label$203
	$150 = [207]
	goto $label$46 
	
.LABEL $label$202
	$150 = [209]
	goto $label$46 
	
.LABEL $label$201
	$150 = [211]
	goto $label$46 
	
.LABEL $label$200
	$150 = [210]
	goto $label$46 
	
.LABEL $label$199
	$150 = [213]
	goto $label$46 
	
.LABEL $label$198
	$150 = [215]
	goto $label$46 
	
.LABEL $label$197
	$150 = [214]
	goto $label$46 
	
.LABEL $label$196
	$150 = [217]
	goto $label$46 
	
.LABEL $label$195
	$150 = [219]
	goto $label$46 
	
.LABEL $label$194
	$150 = [218]
	goto $label$46 
	
.LABEL $label$193
	$150 = [221]
	goto $label$46 
	
.LABEL $label$192
	$150 = [223]
	goto $label$46 
	
.LABEL $label$191
	$150 = [222]
	goto $label$46 
	
.LABEL $label$190
	$150 = [225]
	goto $label$46 
	
.LABEL $label$189
	$150 = [227]
	goto $label$46 
	
.LABEL $label$188
	$150 = [226]
	goto $label$46 
	
.LABEL $label$187
	$150 = [229]
	goto $label$46 
	
.LABEL $label$186
	$150 = [231]
	goto $label$46 
	
.LABEL $label$185
	$150 = [230]
	goto $label$46 
	
.LABEL $label$184
	$150 = [233]
	goto $label$46 
	
.LABEL $label$183
	$150 = [235]
	goto $label$46 
	
.LABEL $label$182
	$150 = [234]
	goto $label$46 
	
.LABEL $label$181
	$150 = [237]
	goto $label$46 
	
.LABEL $label$180
	$150 = [239]
	goto $label$46 
	
.LABEL $label$179
	$150 = [238]
	goto $label$46 
	
.LABEL $label$178
	$150 = [241]
	goto $label$46 
	
.LABEL $label$177
	$150 = [243]
	goto $label$46 
	
.LABEL $label$176
	$150 = [242]
	goto $label$46 
	
.LABEL $label$175
	$150 = [245]
	goto $label$46 
	
.LABEL $label$174
	$150 = [247]
	goto $label$46 
	
.LABEL $label$173
	$150 = [246]
	goto $label$46 
	
.LABEL $label$172
	$150 = [249]
	goto $label$46 
	
.LABEL $label$171
	$150 = [251]
	goto $label$46 
	
.LABEL $label$170
	$150 = [250]
	goto $label$46 
	
.LABEL $label$169
	$150 = [253]
	goto $label$46 
	
.LABEL $label$168
	$150 = [255]
	goto $label$46 
	
.LABEL $label$167
	$150 = [254]
	goto $label$46 
	
.LABEL $label$166
	$150 = [257]
	goto $label$46 
	
.LABEL $label$165
	$150 = [259]
	goto $label$46 
	
.LABEL $label$164
	$150 = [258]
	goto $label$46 
	
.LABEL $label$163
	$150 = [261]
	goto $label$46 
	
.LABEL $label$162
	$150 = [263]
	goto $label$46 
	
.LABEL $label$161
	$150 = [262]
	goto $label$46 
	
.LABEL $label$160
	$150 = [265]
	goto $label$46 
	
.LABEL $label$159
	$150 = [267]
	goto $label$46 
	
.LABEL $label$158
	$150 = [266]
	goto $label$46 
	
.LABEL $label$157
	$150 = [269]
	goto $label$46 
	
.LABEL $label$156
	$150 = [271]
	goto $label$46 
	
.LABEL $label$155
	$150 = [270]
	goto $label$46 
	
.LABEL $label$154
	$150 = [273]
	goto $label$46 
	
.LABEL $label$153
	$150 = [275]
	goto $label$46 
	
.LABEL $label$152
	$150 = [274]
	goto $label$46 
	
.LABEL $label$151
	$150 = [277]
	goto $label$46 
	
.LABEL $label$150
	$150 = [279]
	goto $label$46 
	
.LABEL $label$149
	$150 = [281]
	goto $label$46 
	
.LABEL $label$148
	$150 = [283]
	goto $label$46 
	
.LABEL $label$147
	$150 = [285]
	goto $label$46 
	
.LABEL $label$146
	$150 = [287]
	goto $label$46 
	
.LABEL $label$145
	$150 = [289]
	goto $label$46 
	
.LABEL $label$144
	$150 = [291]
	goto $label$46 
	
.LABEL $label$143
	$150 = [293]
	goto $label$46 
	
.LABEL $label$142
	$150 = [295]
	goto $label$46 
	
.LABEL $label$141
	$150 = [297]
	goto $label$46 
	
.LABEL $label$140
	$150 = [299]
	goto $label$46 
	
.LABEL $label$139
	$150 = [301]
	goto $label$46 
	
.LABEL $label$138
	$150 = [303]
	goto $label$46 
	
.LABEL $label$137
	$150 = [305]
	goto $label$46 
	
.LABEL $label$136
	$150 = [307]
	goto $label$46 
	
.LABEL $label$135
	$150 = [309]
	goto $label$46 
	
.LABEL $label$134
	$150 = [311]
	goto $label$46 
	
.LABEL $label$133
	$150 = [313]
	goto $label$46 
	
.LABEL $label$132
	$150 = [315]
	goto $label$46 
	
.LABEL $label$131
	$150 = [317]
	goto $label$46 
	
.LABEL $label$130
	$150 = [319]
	goto $label$46 
	
.LABEL $label$129
	$150 = [321]
	goto $label$46 
	
.LABEL $label$128
	$150 = [323]
	goto $label$46 
	
.LABEL $label$127
	$150 = [325]
	goto $label$46 
	
.LABEL $label$126
	$150 = [327]
	goto $label$46 
	
.LABEL $label$125
	$150 = [329]
	goto $label$46 
	
.LABEL $label$124
	$150 = [331]
	goto $label$46 
	
.LABEL $label$123
	$150 = [333]
	goto $label$46 
	
.LABEL $label$122
	$150 = [335]
	goto $label$46 
	
.LABEL $label$121
	$150 = [337]
	goto $label$46 
	
.LABEL $label$120
	$150 = [339]
	goto $label$46 
	
.LABEL $label$119
	$150 = [341]
	goto $label$46 
	
.LABEL $label$118
	$150 = [343]
	goto $label$46 
	
.LABEL $label$117
	$150 = [345]
	goto $label$46 
	
.LABEL $label$116
	$150 = [347]
	goto $label$46 
	
.LABEL $label$115
	$150 = [349]
	goto $label$46 
	
.LABEL $label$114
	$150 = [351]
	goto $label$46 
	
.LABEL $label$113
	$150 = [353]
	goto $label$46 
	
.LABEL $label$112
	$150 = [355]
	goto $label$46 
	
.LABEL $label$111
	$150 = [357]
	goto $label$46 
	
.LABEL $label$110
	$150 = [359]
	goto $label$46 
	
.LABEL $label$109
	$150 = [361]
	goto $label$46 
	
.LABEL $label$108
	$150 = [363]
	goto $label$46 
	
.LABEL $label$107
	$150 = [365]
	goto $label$46 
	
.LABEL $label$106
	$150 = [367]
	goto $label$46 
	
.LABEL $label$105
	$150 = [369]
	goto $label$46 
	
.LABEL $label$104
	$150 = [371]
	goto $label$46 
	
.LABEL $label$103
	$150 = [373]
	goto $label$46 
	
.LABEL $label$102
	$150 = [375]
	goto $label$46 
	
.LABEL $label$101
	$150 = [377]
	goto $label$46 
	
.LABEL $label$100
	$150 = [379]
	goto $label$46 
	
.LABEL $label$99
	$150 = [380]
	goto $label$46 
	
.LABEL $label$98
	$150 = [380]
	goto $label$46 
	
.LABEL $label$97
	$150 = [381]
	goto $label$46 
	
.LABEL $label$96
	$150 = [381]
	goto $label$46 
	
.LABEL $label$95
	$150 = [382]
	goto $label$46 
	
.LABEL $label$94
	$150 = [391]
	goto $label$46 
	
.LABEL $label$93
	$150 = [386]
	goto $label$46 
	
.LABEL $label$92
	$150 = [386]
	goto $label$46 
	
.LABEL $label$91
	$150 = [387]
	goto $label$46 
	
.LABEL $label$90
	$150 = [389]
	goto $label$46 
	
.LABEL $label$89
	$150 = [393]
	goto $label$46 
	
.LABEL $label$88
	$150 = [396]
	goto $label$46 
	
.LABEL $label$87
	$150 = [397]
	goto $label$46 
	
.LABEL $label$86
	$150 = [416]
	goto $label$46 
	
.LABEL $label$85
	$150 = [398]
	goto $label$46 
	
.LABEL $label$84
	$150 = [400]
	goto $label$46 
	
.LABEL $label$83
	$150 = [401]
	goto $label$46 
	
.LABEL $label$82
	$150 = [411]
	goto $label$46 
	
.LABEL $label$81
	$150 = [402]
	goto $label$46 
	
.LABEL $label$80
	$150 = [405]
	goto $label$46 
	
.LABEL $label$79
	$150 = [407]
	goto $label$46 
	
.LABEL $label$78
	$150 = [409]
	goto $label$46 
	
.LABEL $label$77
	$150 = [413]
	goto $label$46 
	
.LABEL $label$76
	$150 = [414]
	goto $label$46 
	
.LABEL $label$75
	$150 = [418]
	goto $label$46 
	
.LABEL $label$74
	$150 = [419]
	goto $label$46 
	
.LABEL $label$73
	$150 = [422]
	goto $label$46 
	
.LABEL $label$72
	$150 = [423]
	goto $label$46 
	
.LABEL $label$71
	$150 = [445]
	goto $label$46 
	
.LABEL $label$70
	$150 = [424]
	goto $label$46 
	
.LABEL $label$69
	$150 = [426]
	goto $label$46 
	
.LABEL $label$68
	$150 = [427]
	goto $label$46 
	
.LABEL $label$67
	$150 = [440]
	goto $label$46 
	
.LABEL $label$66
	$150 = [428]
	goto $label$46 
	
.LABEL $label$65
	$150 = [431]
	goto $label$46 
	
.LABEL $label$64
	$150 = [433]
	goto $label$46 
	
.LABEL $label$63
	$150 = [435]
	goto $label$46 
	
.LABEL $label$62
	$150 = [437]
	goto $label$46 
	
.LABEL $label$61
	$150 = [438]
	goto $label$46 
	
.LABEL $label$60
	$150 = [442]
	goto $label$46 
	
.LABEL $label$59
	$150 = [443]
	goto $label$46 
	
.LABEL $label$58
	$150 = [447]
	goto $label$46 
	
.LABEL $label$57
	$150 = [448]
	goto $label$46 
	
.LABEL $label$56
	$150 = [485]
	goto $label$46 
	
.LABEL $label$55
	$150 = [486]
	goto $label$46 
	
.LABEL $label$54
	$150 = [490]
	goto $label$46 
	
.LABEL $label$53
	$150 = [489]
	goto $label$46 
	
.LABEL $label$52
	$150 = [505]
	goto $label$46 
	
.LABEL $label$51
	$150 = [504]
	goto $label$46 
	
.LABEL $label$50
	$150 = [509]
	goto $label$46 
	
.LABEL $label$49
	$150 = [508]
	goto $label$46 
	
.LABEL $label$48
	$150 = [513]
	goto $label$46 
	
.LABEL $label$47
	$150 = [512]
	goto $label$46 
	
.LABEL $label$26
	$6 = *($149 + [1032])
	if ( ($6 == 0) ){ goto $label$891 }
	$11 = ($149 + [1036])
	$146 = *($11)
	if ( ((int_32)$146 == (int_32)$6) ){ goto $label$893 }
	
.LOOP $label$894:
	$146 = ($146 + [-24])
	$68 = *($146)
	*($146) = [0]
	if ( ($68 == 0) ){ goto $label$895 }
	CALL $130($68)
	
.LABEL $label$895
	if ( ((int_32)$6 != (int_32)$146) ){ goto $label$894 }
	$146 = *(($149 + [1032]))
	goto $label$892 
	
.LABEL $label$893
	$146 = $6
	
.LABEL $label$892
	*($11) = $6
	CALL $130($146)
	
.LABEL $label$891
	$6 = *($149 + [1080])
	if ( ($6 == 0) ){ goto $label$896 }
	$11 = ($149 + [1084])
	$146 = *($11)
	if ( ((int_32)$146 == (int_32)$6) ){ goto $label$898 }
	
.LOOP $label$899:
	$146 = ($146 + [-24])
	$68 = *($146)
	*($146) = [0]
	if ( ($68 == 0) ){ goto $label$900 }
	CALL $130($68)
	
.LABEL $label$900
	if ( ((int_32)$6 != (int_32)$146) ){ goto $label$899 }
	$146 = *(($149 + [1080]))
	goto $label$897 
	
.LABEL $label$898
	$146 = $6
	
.LABEL $label$897
	*($11) = $6
	CALL $130($146)
	
.LABEL $label$896
	$6 = *($149 + [1120])
	if ( ($6 == 0) ){ goto $label$901 }
	$11 = ($149 + [1124])
	$146 = *($11)
	if ( ((int_32)$146 == (int_32)$6) ){ goto $label$903 }
	
.LOOP $label$904:
	$146 = ($146 + [-24])
	$68 = *($146)
	*($146) = [0]
	if ( ($68 == 0) ){ goto $label$905 }
	CALL $130($68)
	
.LABEL $label$905
	if ( ((int_32)$6 != (int_32)$146) ){ goto $label$904 }
	$146 = *(($149 + [1120]))
	goto $label$902 
	
.LABEL $label$903
	$146 = $6
	
.LABEL $label$902
	*($11) = $6
	CALL $130($146)
	
.LABEL $label$901
	$6 = *($149 + [1168])
	if ( ($6 == 0) ){ goto $label$906 }
	$11 = ($149 + [1172])
	$146 = *($11)
	if ( ((int_32)$146 == (int_32)$6) ){ goto $label$908 }
	
.LOOP $label$909:
	$146 = ($146 + [-24])
	$68 = *($146)
	*($146) = [0]
	if ( ($68 == 0) ){ goto $label$910 }
	if ( ((*($68 + [24]) & [1]) == 0) ){ goto $label$911 }
	CALL $130(*(($68 + [32])))
	
.LABEL $label$911
	CALL $130($68)
	
.LABEL $label$910
	if ( ((int_32)$6 != (int_32)$146) ){ goto $label$909 }
	$146 = *(($149 + [1168]))
	goto $label$907 
	
.LABEL $label$908
	$146 = $6
	
.LABEL $label$907
	*($11) = $6
	CALL $130($146)
	
.LABEL $label$906
	$6 = *($149 + [1224])
	if ( ($6 == 0) ){ goto $label$912 }
	$11 = ($149 + [1228])
	$146 = *($11)
	if ( ((int_32)$146 == (int_32)$6) ){ goto $label$914 }
	
.LOOP $label$915:
	$146 = ($146 + [-24])
	$68 = *($146)
	*($146) = [0]
	if ( ($68 == 0) ){ goto $label$916 }
	if ( ((*($68 + [32]) & [1]) == 0) ){ goto $label$917 }
	CALL $130(*(($68 + [40])))
	
.LABEL $label$917
	CALL $130($68)
	
.LABEL $label$916
	if ( ((int_32)$6 != (int_32)$146) ){ goto $label$915 }
	$146 = *(($149 + [1224]))
	goto $label$913 
	
.LABEL $label$914
	$146 = $6
	
.LABEL $label$913
	*($11) = $6
	CALL $130($146)
	
.LABEL $label$912
	*([0] + [4]) = ($149 + [1376])
	$150
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [208])
	CALL memcpy(*($2 + [4]), ($3 + [40]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [208])
	CALL memcpy(*($2 + [4]), ($3 + [48]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [208])
	CALL memcpy(*($2 + [4]), ($0 + [56]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [208])
	CALL memcpy(*($2 + [4]), ($0 + [64]), [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((int_32)(*($2 + [8]) - $1) > (int_32)[7]), [208])
	CALL memcpy(*($2 + [4]), ($0 + [72]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN5eosio8exchange19buy_by_market_priceEyyyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	int_32 $41
	int_32 $42
	int_32 $43
	int_32 $44
	int_32 $45
	int_32 $46
	int_32 $47
	int_32 $48
	int_32 $49
	int_32 $50
	int_32 $51
	int_32 $52
	int_32 $53
	int_32 $54
	int_32 $55
	int_32 $56
	int_32 $57
	int_32 $58
	int_32 $59
	int_32 $60
	int_32 $61
	int_64 $62
	int_32 $63
	int_32 $64
	int_64 $65
	float_64 $66
	int_32 $67
	int_32 $68
	int_64 $69
	int_32 $70
	int_32 $71
	int_32 $72
	int_32 $73
	int_32 $74
	int_32 $75
	int_32 $76
	int_32 $77
	int_32 $78
	int_32 $79
	int_32 $80
	int_32 $81
	int_32 $82
	int_32 $83
	int_32 $84
	int_32 $85
	int_32 $86
	int_32 $87
	int_32 $88
	int_32 $89
	int_32 $90
	int_32 $91
	int_32 $92
	int_32 $93
	int_32 $94
	int_32 $95
	int_32 $96
	int_32 $97
	int_32 $98
	int_32 $99
	int_32 $100
	int_32 $101
	int_32 $102
	int_32 $103
	int_32 $104
	int_32 $105
	int_32 $106
	int_32 $107
	int_32 $108
	int_32 $109
	int_32 $110
	int_32 $111
	int_32 $112
	int_32 $113
	int_32 $114
	int_32 $115
	int_32 $116
	int_32 $117
	int_32 $118
	int_32 $119
	int_32 $120
	int_32 $121
	int_32 $122
	int_32 $123
	int_32 $124
	int_32 $125
	int_32 $126
	int_32 $127
	int_64 $128
	int_64 $129
	int_64 $130
	int_32 $131
	int_32 $132
	$132 = (*([0] + [4]) - [1248])
	*([0] + [4]) = $132
	CALL eosio_assert(CALL $fimport$40($1), [1712])
	$63 = [0]
	*(($132 + [1112])) = [0]
	*($132 + [1096]) = (int_64)-1
	*($132 + [1104]) = (int_64)0
	$129 = *($0)
	*($132 + [1080]) = $129
	*($132 + [1088]) = $129
	*($132 + [1116]) = [0]
	*($132 + [1072]) = ($132 + [1080])
	$129 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($132 + [1016]) = $129)
	CALL $13(($132 + [1120]), ($132 + [1072]), ($132 + [1016]))
	$127 = *($132 + [1124])
	if ( ($127 == 0) ){ goto $label$3 }
	if ( ((int_64)*($132 + [1016]) != (int_64)*($127 + [16])) ){ goto $label$3 }
	$128 = *($132 + [1120])
	*($132 + [1064]) = $128
	$102 = (($132 + [1064]) | [4])
	$63 = [0]
	$127 = (CASTING uint_32)(uint_64 (uint_64)$128 >> (uint_64)(int_64)32)
	if ( ($127) == 0) ){ goto $label$1 }
	
.LOOP $label$4:
	if ( ((int_64)*($127 + [16]) != (int_64)$129) ){ goto $label$5 }
	if ( ((int_64)*($127 + [8]) == (int_64)$3) ){ goto $label$2 }
	
.LABEL $label$5
	CALL $14(($132 + [1064]))
	$127 = *($132 + [1068])
	if ( $127 ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	*($132 + [1068]) = [0]
	*($132 + [1064]) = ($132 + [1072])
	$102 = (($132 + [1064]) | [4])
	goto $label$1 
	
.LABEL $label$2
	$63 = [1]
	
.LABEL $label$1
	CALL eosio_assert($63, [1024])
	$7 = *($102)
	$63 = [0]
	*(($132 + [1048])) = [0]
	*($132 + [1032]) = (int_64)-1
	*($132 + [1040]) = (int_64)0
	$3 = *($0)
	*($132 + [1016]) = $3
	*($132 + [1024]) = $3
	*($132 + [1052 align=4]) = (int_64)0
	$8 = [0]
	$127 = CALL db_find_i64($3, $3, (int_64)-3665743365212864512, $4)
	if ( ((int_32)$127 < (int_32)[0]) ){ goto $label$6 }
	$8 = CALL $33(($132 + [1016]), $127)
	CALL eosio_assert(((int_32)*($8 + [104]) == (int_32)($132 + [1016])), [224])
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [1088])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)*($7)), [2176])
	$62 = *($5)
	if ( ((uint_64)((int_64)$62 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$127 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $129) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$129 = (uint_64)$129 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$129) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$129 = (uint_64)$129 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$129) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$127 = ($127 + [1])
	if ( ((int_32)$127 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$63 = [1]
	$127 = ($127 + [1])
	if ( ((int_32)$127 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$63 = [0]
	
.LABEL $label$7
	CALL eosio_assert($63, [2224])
	CALL eosio_assert(((int_64)$62 > (int_64)99), [2256])
	$63 = *($7 + [36])
	$127 = *($8 + [44])
	if ( ((uint_32)$127 <= (uint_32)$63) ){ goto $label$13 }
	$63 = ($127 - $63)
	$127 = [0]
	$66 = (float_64)1
	
.LOOP $label$14:
	$66 = ((float_64)$66 * (float_64)(float_64)10)
	$127 = ($127 + [1])
	if ( ((int_32)$127 < (int_32)$63) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$66 = (float_64)1
	if ( ((uint_32)$127 >= (uint_32)$63) ){ goto $label$12 }
	$63 = ($63 - $127)
	$127 = [0]
	$66 = (float_64)1
	
.LOOP $label$15:
	$66 = ((float_64)$66 / (float_64)(float_64)10)
	$127 = ($127 + [1])
	if ( ((int_32)$127 < (int_32)$63) ){ goto $label$15 }
	
.LABEL $label$12
	*(($132 + [1000])) = [0]
	*($132 + [976]) = $4
	*($132 + [984]) = (int_64)-1
	*($132 + [992]) = (int_64)0
	*($132 + [968]) = *($0)
	*(($132 + [1008])) = [0]
	*($132 + [1004]) = [0]
	*($132 + [960]) = ($132 + [968])
	*($132 + [1120]) = (int_64)-4503599627370497
	CALL $80(($132 + [952]), ($132 + [960]), ($132 + [1120]))
	$63 = *($6)
	$127 = ($63 & [1])
	if ( $127 ){ goto $label$21 }
	if ( uint_32($63 >> [1]) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	if ( (*($6 + [4]) == 0) ){ goto $label$19 }
	
.LABEL $label$20
	if ( $127 ){ goto $label$18 }
	$127 = ($6 + [1])
	goto $label$17 
	
.LABEL $label$19
	$10 = [0]
	$9 = (int_64)0
	goto $label$16 
	
.LABEL $label$18
	$127 = *($6 + [8])
	
.LABEL $label$17
	$63 = [-1]
	
.LOOP $label$22:
	$6 = ($127 + $63)
	$102 = ($63 + [1])
	$63 = $102
	if ( *(($6 + [1])) ){ goto $label$22 }
	$130 = (CASTING uint_64)(uint_32 $102)
	$129 = (int_64)0
	$3 = (int_64)59
	$9 = (int_64)0
	
.LOOP $label$23:
	$128 = (int_64)0
	if ( ((uint_64)$129 >= (uint_64)$130) ){ goto $label$24 }
	$63 = *($127)
	if ( ((uint_32)(($63 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$63 = ($63 + [165])
	goto $label$25 
	
.LABEL $label$26
	$63 = ( ($63 + [208]) ? [0] : ((($63 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$128 = (int_64)((int_64)(CASTING uint_64)(uint_32 $63) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	if ( ((uint_64)$129 > (uint_64)(int_64)11) ){ goto $label$28 }
	$128 = ((int_64)((int_64)$128 & (int_64)31) << (int_64)((int_64)$3 & (int_64)4294967295))
	goto $label$27 
	
.LABEL $label$28
	$128 = ((int_64)$128 & (int_64)15)
	
.LABEL $label$27
	$127 = ($127 + [1])
	$129 = ((int_64)$129 + (int_64)1)
	$9 = ((int_64)$128 | (int_64)$9)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$23 }
	$10 = CALL is_account($9)
	
.LABEL $label$16
	if ( ((int_64)$62 < (int_64)1) ){ goto $label$62 }
	$16 = (uint_64)(int_64)1397703936 >> (uint_64)(int_64)8)
	$61 = (($132 + [1120]) + [32])
	$60 = (($132 + [1120]) + [16])
	$59 = (($132 + [64]) | [1])
	$58 = (($132 + [80]) | [1])
	$57 = (($132 + [96]) | [1])
	$56 = (($132 + [112]) | [1])
	$55 = (($132 + [128]) | [1])
	$54 = (($132 + [144]) | [1])
	$53 = (($132 + [160]) | [1])
	$52 = (($132 + [192]) | [1])
	$51 = (($132 + [208]) | [1])
	$50 = (($132 + [224]) | [1])
	$49 = (($132 + [240]) | [1])
	$48 = (($132 + [256]) | [1])
	$47 = (($132 + [272]) | [1])
	$46 = (($132 + [288]) | [1])
	$45 = (($132 + [304]) | [1])
	$44 = (($132 + [320]) | [1])
	$43 = (($132 + [336]) | [1])
	$42 = (($132 + [352]) | [1])
	$41 = (($132 + [368]) | [1])
	$40 = (($132 + [384]) | [1])
	$39 = (($132 + [400]) | [1])
	$38 = (($132 + [416]) | [1])
	$37 = (($132 + [432]) | [1])
	$36 = (($132 + [448]) | [1])
	$35 = (($132 + [464]) | [1])
	$34 = (($132 + [480]) | [1])
	$33 = (($132 + [496]) | [1])
	$32 = (($132 + [208]) | [1])
	$31 = (($132 + [224]) | [1])
	$30 = (($132 + [256]) | [1])
	$29 = (($132 + [288]) | [1])
	$28 = (($132 + [304]) | [1])
	$27 = (($132 + [336]) | [1])
	$26 = (($132 + [368]) | [1])
	$25 = (($132 + [384]) | [1])
	$24 = (($132 + [416]) | [1])
	$23 = (($132 + [448]) | [1])
	$22 = (($132 + [480]) | [1])
	$21 = (($132 + [496]) | [1])
	$20 = (($132 + [512]) | [1])
	$19 = (($132 + [528]) | [1])
	$18 = (($132 + [544]) | [1])
	$17 = (($132 + [560]) | [1])
	$15 = (($132 + [1192]) + [16])
	$14 = (($132 + [1120]) + [72])
	$13 = (($132 + [1192]) + [32])
	$12 = (($132 + [1192]) + [24])
	$11 = (($132 + [1192]) + [8])
	$123 = ($132 + [1220])
	$125 = ($8 + [96])
	$124 = ($132 + [1212])
	$126 = ($8 + [48])
	
.LOOP $label$66:
	$127 = *($132 + [956])
	if ( ($127 == 0) ){ goto $label$65 }
	*($132 + [944]) = *($127 + [24])
	$128 = *(($127 + [40]))
	*(($67 = (($132 + [928]) + [8]))) = $128
	*($132 + [928]) = (int_64)0
	CALL eosio_assert([1], [960])
	$129 = (uint_64)$128 >> (uint_64)(int_64)8)
	$127 = [0]
	
.LOOP $label$69:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $129) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$68 }
	$129 = (uint_64)$129 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$129) & (int_64)255) != (int_64)0) ){ goto $label$70 }
	
.LOOP $label$71:
	$129 = (uint_64)$129 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$129) & (int_64)255) != (int_64)0) ){ goto $label$68 }
	$127 = ($127 + [1])
	if ( ((int_32)$127 < (int_32)[7]) ){ goto $label$71 }
	
.LABEL $label$70
	$63 = [1]
	$127 = ($127 + [1])
	if ( ((int_32)$127 < (int_32)[7]) ){ goto $label$69 }
	goto $label$67 
	
.LABEL $label$68
	$63 = [0]
	
.LABEL $label$67
	CALL eosio_assert($63, [672])
	$102 = ($5 + [8])
	$130 = *($102)
	*(($68 = (($132 + [912]) + [8]))) = $130
	*($132 + [912]) = (int_64)0
	CALL eosio_assert([1], [960])
	$127 = [0]
	$129 = (uint_64)$130 >> (uint_64)(int_64)8
	$3 = $129)
	
.LOOP $label$74:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$73 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$75 }
	
.LOOP $label$76:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$73 }
	$127 = ($127 + [1])
	if ( ((int_32)$127 < (int_32)[7]) ){ goto $label$76 }
	
.LABEL $label$75
	$63 = [1]
	$127 = ($127 + [1])
	if ( ((int_32)$127 < (int_32)[7]) ){ goto $label$74 }
	goto $label$72 
	
.LABEL $label$73
	$63 = [0]
	
.LABEL $label$72
	CALL eosio_assert($63, [672])
	$62 = (Rounds 0)(((float_64)*($132 + [944]) * (float_64)((float_64)(CASTING float_64)(int_64 *(*($132 + [956]) + [32])) / (float_64)$66)))
	CALL eosio_assert((uint_64)(((int_64)$62 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [960])
	$127 = [0]
	
.LOOP $label$79:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $129) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$78 }
	$129 = (uint_64)$129 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$129) & (int_64)255) != (int_64)0) ){ goto $label$80 }
	
.LOOP $label$81:
	$129 = (uint_64)$129 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$129) & (int_64)255) != (int_64)0) ){ goto $label$78 }
	$127 = ($127 + [1])
	if ( ((int_32)$127 < (int_32)[7]) ){ goto $label$81 }
	
.LABEL $label$80
	$63 = [1]
	$127 = ($127 + [1])
	if ( ((int_32)$127 < (int_32)[7]) ){ goto $label$79 }
	goto $label$77 
	
.LABEL $label$78
	$63 = [0]
	
.LABEL $label$77
	CALL eosio_assert($63, [672])
	$129 = *($5)
	if ( ((int_64)$62 >= (int_64)$129) ){ goto $label$83 }
	$127 = *($132 + [956])
	$3 = *($127 + [32])
	$129 = $62
	goto $label$82 
	
.LABEL $label$83
	$3 = (Rounds 0)(((float_64)((float_64)$66 * (float_64)(CASTING float_64)(int_64 $129)) / (float_64)*($132 + [944])))
	$127 = *($132 + [956])
	
.LABEL $label$82
	*($132 + [928]) = $3
	*($132 + [912]) = $129
	CALL eosio_assert(((int_32)$127 != (int_32)[0]), [1280])
	$63 = *($132 + [960])
	CALL eosio_assert(((int_32)*($127 + [72]) == (int_32)$63), [1408])
	CALL eosio_assert(((int_64)*($63) == (int_64)CALL $fimport$13()), [1456])
	$110 = ($127 + [8])
	*($132 + [1192]) = *($110)
	$64 = ($127 + [64])
	$129 = *($64)
	$6 = ($127 + [32])
	$62 = *($6)
	$73 = ($127 + [24])
	$69 = *($73)
	$77 = ($127 + [16])
	*($11) = *($77)
	*($15) = $69
	*($12) = $62
	*($13) = $129
	$129 = *($127)
	CALL eosio_assert(((int_64)$128 == (int_64)*(($127 + [40]))), [2336])
	$3 = (int_64)
	*($6) = $3(*($6) - $3))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [2384])
	CALL eosio_assert(((int_64)*($6) < (int_64)4611686018427387904), [2416])
	CALL eosio_assert(((int_64)$129 == (int_64)*($127)), [1520])
	*(($70 = (($132 + [880]) + [8]))) = $14
	*($132 + [884]) = ($132 + [1120])
	*($132 + [880]) = ($132 + [1120])
	CALL $81(($132 + [880]), $127)
	CALL db_update_i64(*($127 + [76]), (int_64)0, ($132 + [1120]), [72])
	if ( (uint_64)($129 <= *($63 + [16])) ){ goto $label$84 }
	*(($63 + [16])) = ( (int_64)-2 ? ((int_64)$129 + (int_64)1) : ((uint_64)$129 > (uint_64)(int_64)-3) )
	
.LABEL $label$84
	*($132 + [48]) = *($110)
	if ( (CALL memcmp(($132 + [1192]), ($132 + [48]), [8]) == 0) ){ goto $label$85 }
	$85 = ($127 + [80])
	$110 = *($85)
	if ( ((int_32)$110 > (int_32)[-1]) ){ goto $label$86 }
	$110 = CALL db_idx64_find_primary(*($63), *($63 + [8]), (int_64)-4421661421696319488, ($132 + [1232]), $129)
	*($85) = $110
	
.LABEL $label$86
	CALL db_idx64_update($110, (int_64)0, ($132 + [48]))
	
.LABEL $label$85
	*($132 + [48]) = *($77)
	if ( (CALL memcmp($11, ($132 + [48]), [8]) == 0) ){ goto $label$87 }
	$77 = ($127 + [84])
	$110 = *($77)
	if ( ((int_32)$110 > (int_32)[-1]) ){ goto $label$88 }
	$110 = CALL db_idx64_find_primary(*($63), *($63 + [8]), (int_64)-4421661421696319487, ($132 + [1232]), $129)
	*($77) = $110
	
.LABEL $label$88
	CALL db_idx64_update($110, (int_64)0, ($132 + [48]))
	
.LABEL $label$87
	*($132 + [48]) = *($73)
	if ( (CALL memcmp($15, ($132 + [48]), [8]) == 0) ){ goto $label$89 }
	$73 = ($127 + [88])
	$110 = *($73)
	if ( ((int_32)$110 > (int_32)[-1]) ){ goto $label$90 }
	$110 = CALL db_idx_double_find_primary(*($63), *($63 + [8]), (int_64)-4421661421696319486, ($132 + [1232]), $129)
	*($73) = $110
	
.LABEL $label$90
	CALL db_idx_double_update($110, (int_64)0, ($132 + [48]))
	
.LABEL $label$89
	*($132 + [48]) = *($6)
	if ( (CALL memcmp($12, ($132 + [48]), [8]) == 0) ){ goto $label$91 }
	$110 = ($127 + [92])
	$6 = *($110)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$92 }
	$6 = CALL db_idx64_find_primary(*($63), *($63 + [8]), (int_64)-4421661421696319485, ($132 + [1232]), $129)
	*($110) = $6
	
.LABEL $label$92
	CALL db_idx64_update($6, (int_64)0, ($132 + [48]))
	
.LABEL $label$91
	*($132 + [48]) = *($64)
	if ( (CALL memcmp($13, ($132 + [48]), [8]) == 0) ){ goto $label$93 }
	$6 = ($127 + [96])
	$127 = *($6)
	if ( ((int_32)$127 > (int_32)[-1]) ){ goto $label$94 }
	$127 = CALL db_idx64_find_primary(*($63), *($63 + [8]), (int_64)-4421661421696319484, ($132 + [1232]), $129)
	*($6) = $127
	
.LABEL $label$94
	CALL db_idx64_update($127, (int_64)0, ($132 + [48]))
	
.LABEL $label$93
	$127 = *($132 + [956])
	$129 = *($127)
	*(($63 = (($132 + [896]) + [8]))) = *(($127 + [40]))
	*($132 + [896]) = *($127 + [32])
	*($132 + [900]) = *(($127 + [36]))
	$3 = *($127 + [16])
	*((($132 + [16]) + [8])) = *($63)
	*($132 + [16]) = *($132 + [896])
	CALL _ZN5eosio8exchange19adjust_u_sell_orderEyyNS_5assetE($0, $3, $129, ($132 + [16]))
	CALL eosio_assert(((int_64)$130 == (int_64)*($102)), [2336])
	$62 = *($132 + [912])
	$129 = (int_64)
	*($5) = $129(*($5) - $62))
	CALL eosio_assert(((int_64)$129 > (int_64)-4611686018427387904), [2384])
	CALL eosio_assert(((int_64)$129 < (int_64)4611686018427387904), [2416])
	$129 = *($68)
	*($70) = $129
	*($132 + [880]) = (int_64)0
	CALL eosio_assert([1], [960])
	$129 = (uint_64)$129 >> (uint_64)(int_64)8)
	$127 = [0]
	
.LOOP $label$97:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $129) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$96 }
	$129 = (uint_64)$129 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$129) & (int_64)255) != (int_64)0) ){ goto $label$98 }
	
.LOOP $label$99:
	$129 = (uint_64)$129 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$129) & (int_64)255) != (int_64)0) ){ goto $label$96 }
	$127 = ($127 + [1])
	if ( ((int_32)$127 < (int_32)[7]) ){ goto $label$99 }
	
.LABEL $label$98
	$63 = [1]
	$127 = ($127 + [1])
	if ( ((int_32)$127 < (int_32)[7]) ){ goto $label$97 }
	goto $label$95 
	
.LABEL $label$96
	$63 = [0]
	
.LABEL $label$95
	CALL eosio_assert($63, [672])
	$71 = ($7 + [8])
	$69 = *($71)
	$129 = (int_64)0
	$128 = (int_64)59
	$127 = [2032]
	$130 = (int_64)0
	
.LOOP $label$100:
	if ( ((uint_64)$129 > (uint_64)(int_64)10) ){ goto $label$105 }
	$63 = *($127)
	if ( ((uint_32)(($63 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$104 }
	$63 = ($63 + [165])
	goto $label$103 
	
.LABEL $label$105
	$3 = (int_64)0
	if ( ((int_64)$129 == (int_64)11) ){ goto $label$102 }
	goto $label$101 
	
.LABEL $label$104
	$63 = ( ($63 + [208]) ? [0] : ((($63 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$103
	$3 = (int_64)((int_64)(CASTING uint_64)(uint_32 $63) << (int_64)56) >> (int_64)56)
	
.LABEL $label$102
	$3 = ((int_64)((int_64)$3 & (int_64)31) << (int_64)((int_64)$128 & (int_64)4294967295))
	
.LABEL $label$101
	$127 = ($127 + [1])
	$128 = ((int_64)$128 + (int_64)-5)
	$130 = ((int_64)$3 | (int_64)$130)
	$129 = ((int_64)$129 + (int_64)1)
	if ( ((int_64)$129 != (int_64)13) ){ goto $label$100 }
	$129 = (int_64)1
	if ( ((int_64)$69 != (int_64)$130) ){ goto $label$106 }
	$129 = ( (int_64)2 ? (int_64)1 : ((int_64)*(($7 + [16])) == (int_64)$16) )
	
.LABEL $label$106
	*($132 + [880]) = ((int_64)((int_64)$62 * (int_64)$129) / (int_64)1000)
	*(($72 = (($132 + [560]) + [8]))) = [0]
	*($132 + [560]) = (int_64)0
	$127 = CALL strlen([2448])
	if ( ((uint_32)$127 >= (uint_32)[-16]) ){ goto $label$61 }
	if ( ((uint_32)$127 >= (uint_32)[11]) ){ goto $label$109 }
	*($132 + [560]) = ($127 << [1])
	$63 = $17
	if ( $127 ){ goto $label$108 }
	goto $label$107 
	
.LABEL $label$109
	$6 = (($127 + [16]) & [-16])
	$63 = CALL $128($6)
	*($72) = $63
	*($132 + [560]) = ($6 | [1])
	*($132 + [564]) = $127
	
.LABEL $label$108
	CALL memcpy($63, [2448], $127)
	
.LABEL $label$107
	*(($63 + $127)) = [0]
	*(($73 = (($132 + [544]) + [8]))) = [0]
	*($132 + [544]) = (int_64)0
	$127 = CALL strlen([2464])
	if ( ((uint_32)$127 >= (uint_32)[-16]) ){ goto $label$60 }
	if ( ((uint_32)$127 >= (uint_32)[11]) ){ goto $label$112 }
	*($132 + [544]) = ($127 << [1])
	$63 = $18
	if ( $127 ){ goto $label$111 }
	goto $label$110 
	
.LABEL $label$112
	$6 = (($127 + [16]) & [-16])
	$63 = CALL $128($6)
	*($73) = $63
	*($132 + [544]) = ($6 | [1])
	*($132 + [548]) = $127
	
.LABEL $label$111
	CALL memcpy($63, [2464], $127)
	
.LABEL $label$110
	*(($63 + $127)) = [0]
	$127 = *($132 + [544])
	$63 = ($127 & [1])
	$127 = CALL $136(($132 + [560]), ( *($73) ? $18 : $63 ), ( *($132 + [548]) ? uint_32($127 >> [1]) : $63 ))
	$63 = ($127 + [8])
	*(($74 = (($132 + [576]) + [8]))) = *($63)
	*($132 + [576]) = *($127)
	*($127) = [0]
	*(($127 + [4])) = [0]
	*($63) = [0]
	CALL _ZNSt3__19to_stringEy(($132 + [528]), $4)
	$127 = *($132 + [528])
	$63 = ($127 & [1])
	$75 = (($132 + [528]) + [8])
	$127 = CALL $136(($132 + [576]), ( *($75) ? $19 : $63 ), ( *($132 + [532]) ? uint_32($127 >> [1]) : $63 ))
	$63 = ($127 + [8])
	*(($76 = (($132 + [592]) + [8]))) = *($63)
	*($132 + [592]) = *($127)
	*($127) = [0]
	*(($127 + [4])) = [0]
	*($63) = [0]
	*(($77 = (($132 + [512]) + [8]))) = [0]
	*($132 + [512]) = (int_64)0
	$127 = CALL strlen([2480])
	if ( ((uint_32)$127 >= (uint_32)[-16]) ){ goto $label$59 }
	if ( ((uint_32)$127 >= (uint_32)[11]) ){ goto $label$115 }
	*($132 + [512]) = ($127 << [1])
	$63 = $20
	if ( $127 ){ goto $label$114 }
	goto $label$113 
	
.LABEL $label$115
	$6 = (($127 + [16]) & [-16])
	$63 = CALL $128($6)
	*($77) = $63
	*($132 + [512]) = ($6 | [1])
	*($132 + [516]) = $127
	
.LABEL $label$114
	CALL memcpy($63, [2480], $127)
	
.LABEL $label$113
	*(($63 + $127)) = [0]
	$127 = *($132 + [512])
	$63 = ($127 & [1])
	$127 = CALL $136(($132 + [592]), ( *($77) ? $20 : $63 ), ( *($132 + [516]) ? uint_32($127 >> [1]) : $63 ))
	$63 = ($127 + [8])
	*(($78 = (($132 + [608]) + [8]))) = *($63)
	*($132 + [608]) = *($127)
	*($127) = [0]
	*(($127 + [4])) = [0]
	*($63) = [0]
	CALL _ZNSt3__19to_stringEy(($132 + [496]), $2)
	$127 = *($132 + [496])
	$63 = ($127 & [1])
	$79 = (($132 + [496]) + [8])
	$127 = CALL $136(($132 + [608]), ( *($79) ? $21 : $63 ), ( *($132 + [500]) ? uint_32($127 >> [1]) : $63 ))
	$63 = ($127 + [8])
	*(($80 = (($132 + [624]) + [8]))) = *($63)
	*($132 + [624]) = *($127)
	*($127) = [0]
	*(($127 + [4])) = [0]
	*($63) = [0]
	*(($127 = (($132 + [480]) + [8]))) = [0]
	*($132 + [480]) = (int_64)0
	$63 = CALL strlen([2496])
	if ( ((uint_32)$63 >= (uint_32)[-16]) ){ goto $label$58 }
	if ( ((uint_32)$63 >= (uint_32)[11]) ){ goto $label$118 }
	*($132 + [480]) = ($63 << [1])
	$6 = $22
	if ( $63 ){ goto $label$117 }
	goto $label$116 
	
.LABEL $label$118
	$102 = (($63 + [16]) & [-16])
	$6 = CALL $128($102)
	*($127) = $6
	*($132 + [480]) = ($102 | [1])
	*($132 + [484]) = $63
	
.LABEL $label$117
	CALL memcpy($6, [2496], $63)
	
.LABEL $label$116
	*(($6 + $63)) = [0]
	$63 = *($132 + [480])
	$6 = ($63 & [1])
	$63 = CALL $136(($132 + [624]), ( *($127) ? $22 : $6 ), ( *($132 + [484]) ? uint_32($63 >> [1]) : $6 ))
	$6 = ($63 + [8])
	*(($81 = (($132 + [640]) + [8]))) = *($6)
	*($132 + [640]) = *($63)
	*($63) = [0]
	*(($63 + [4])) = [0]
	*($6) = [0]
	*($132 + [160]) = $1
	CALL $84(($132 + [464]), ($132 + [160]))
	$63 = *($132 + [464])
	$6 = ($63 & [1])
	$82 = (($132 + [464]) + [8])
	$63 = CALL $136(($132 + [640]), ( *($82) ? $35 : $6 ), ( *($132 + [468]) ? uint_32($63 >> [1]) : $6 ))
	$6 = ($63 + [8])
	*(($83 = (($132 + [656]) + [8]))) = *($6)
	*($132 + [656]) = *($63)
	*($63) = [0]
	*(($63 + [4])) = [0]
	*($6) = [0]
	*(($63 = (($132 + [448]) + [8]))) = [0]
	*($132 + [448]) = (int_64)0
	$6 = CALL strlen([2512])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$57 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$121 }
	*($132 + [448]) = ($6 << [1])
	$102 = $23
	if ( $6 ){ goto $label$120 }
	goto $label$119 
	
.LABEL $label$121
	$110 = (($6 + [16]) & [-16])
	$102 = CALL $128($110)
	*($63) = $102
	*($132 + [448]) = ($110 | [1])
	*($132 + [452]) = $6
	
.LABEL $label$120
	CALL memcpy($102, [2512], $6)
	
.LABEL $label$119
	*(($102 + $6)) = [0]
	$6 = *($132 + [448])
	$102 = ($6 & [1])
	$6 = CALL $136(($132 + [656]), ( *($63) ? $23 : $102 ), ( *($132 + [452]) ? uint_32($6 >> [1]) : $102 ))
	$102 = ($6 + [8])
	*(($84 = (($132 + [672]) + [8]))) = *($102)
	*($132 + [672]) = *($6)
	*($6) = [0]
	*(($6 + [4])) = [0]
	*($102) = [0]
	*(($85 = (($132 + [432]) + [8]))) = [0]
	*($132 + [432]) = (int_64)0
	$6 = CALL strlen([2528])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$56 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$124 }
	*($132 + [432]) = ($6 << [1])
	$102 = $37
	if ( $6 ){ goto $label$123 }
	goto $label$122 
	
.LABEL $label$124
	$110 = (($6 + [16]) & [-16])
	$102 = CALL $128($110)
	*($85) = $102
	*($132 + [432]) = ($110 | [1])
	*($132 + [436]) = $6
	
.LABEL $label$123
	CALL memcpy($102, [2528], $6)
	
.LABEL $label$122
	*(($102 + $6)) = [0]
	$6 = *($132 + [432])
	$102 = ($6 & [1])
	$6 = CALL $136(($132 + [672]), ( *($85) ? $37 : $102 ), ( *($132 + [436]) ? uint_32($6 >> [1]) : $102 ))
	$102 = ($6 + [8])
	*(($86 = (($132 + [688]) + [8]))) = *($102)
	*($132 + [688]) = *($6)
	*($6) = [0]
	*(($6 + [4])) = [0]
	*($102) = [0]
	CALL _ZNSt3__19to_stringEy(($132 + [416]), *(*($132 + [956])))
	$6 = *($132 + [416])
	$102 = ($6 & [1])
	$87 = (($132 + [416]) + [8])
	$6 = CALL $136(($132 + [688]), ( *($87) ? $24 : $102 ), ( *($132 + [420]) ? uint_32($6 >> [1]) : $102 ))
	$102 = ($6 + [8])
	*(($88 = (($132 + [704]) + [8]))) = *($102)
	*($132 + [704]) = *($6)
	*($6) = [0]
	*(($6 + [4])) = [0]
	*($102) = [0]
	*(($89 = (($132 + [400]) + [8]))) = [0]
	*($132 + [400]) = (int_64)0
	$6 = CALL strlen([2544])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$55 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$127 }
	*($132 + [400]) = ($6 << [1])
	$102 = $39
	if ( $6 ){ goto $label$126 }
	goto $label$125 
	
.LABEL $label$127
	$110 = (($6 + [16]) & [-16])
	$102 = CALL $128($110)
	*($89) = $102
	*($132 + [400]) = ($110 | [1])
	*($132 + [404]) = $6
	
.LABEL $label$126
	CALL memcpy($102, [2544], $6)
	
.LABEL $label$125
	*(($102 + $6)) = [0]
	$6 = *($132 + [400])
	$102 = ($6 & [1])
	$6 = CALL $136(($132 + [704]), ( *($89) ? $39 : $102 ), ( *($132 + [404]) ? uint_32($6 >> [1]) : $102 ))
	$102 = ($6 + [8])
	*(($90 = (($132 + [720]) + [8]))) = *($102)
	*($132 + [720]) = *($6)
	*($6) = [0]
	*(($6 + [4])) = [0]
	*($102) = [0]
	*($132 + [144]) = *(*($132 + [956]) + [16])
	CALL $84(($132 + [384]), ($132 + [144]))
	$6 = *($132 + [384])
	$102 = ($6 & [1])
	$91 = (($132 + [384]) + [8])
	$6 = CALL $136(($132 + [720]), ( *($91) ? $25 : $102 ), ( *($132 + [388]) ? uint_32($6 >> [1]) : $102 ))
	$102 = ($6 + [8])
	*(($92 = (($132 + [736]) + [8]))) = *($102)
	*($132 + [736]) = *($6)
	*($6) = [0]
	*(($6 + [4])) = [0]
	*($102) = [0]
	*(($6 = (($132 + [368]) + [8]))) = [0]
	*($132 + [368]) = (int_64)0
	$102 = CALL strlen([2512])
	if ( ((uint_32)$102 >= (uint_32)[-16]) ){ goto $label$54 }
	if ( ((uint_32)$102 >= (uint_32)[11]) ){ goto $label$130 }
	*($132 + [368]) = ($102 << [1])
	$110 = $26
	if ( $102 ){ goto $label$129 }
	goto $label$128 
	
.LABEL $label$130
	$64 = (($102 + [16]) & [-16])
	$110 = CALL $128($64)
	*($6) = $110
	*($132 + [368]) = ($64 | [1])
	*($132 + [372]) = $102
	
.LABEL $label$129
	CALL memcpy($110, [2512], $102)
	
.LABEL $label$128
	*(($110 + $102)) = [0]
	$102 = *($132 + [368])
	$110 = ($102 & [1])
	$102 = CALL $136(($132 + [736]), ( *($6) ? $26 : $110 ), ( *($132 + [372]) ? uint_32($102 >> [1]) : $110 ))
	$110 = ($102 + [8])
	*(($93 = (($132 + [752]) + [8]))) = *($110)
	*($132 + [752]) = *($102)
	*($102) = [0]
	*(($102 + [4])) = [0]
	*($110) = [0]
	*(($94 = (($132 + [352]) + [8]))) = [0]
	*($132 + [352]) = (int_64)0
	$102 = CALL strlen([2560])
	if ( ((uint_32)$102 >= (uint_32)[-16]) ){ goto $label$53 }
	if ( ((uint_32)$102 >= (uint_32)[11]) ){ goto $label$133 }
	*($132 + [352]) = ($102 << [1])
	$110 = $42
	if ( $102 ){ goto $label$132 }
	goto $label$131 
	
.LABEL $label$133
	$64 = (($102 + [16]) & [-16])
	$110 = CALL $128($64)
	*($94) = $110
	*($132 + [352]) = ($64 | [1])
	*($132 + [356]) = $102
	
.LABEL $label$132
	CALL memcpy($110, [2560], $102)
	
.LABEL $label$131
	*(($110 + $102)) = [0]
	$102 = *($132 + [352])
	$110 = ($102 & [1])
	$102 = CALL $136(($132 + [752]), ( *($94) ? $42 : $110 ), ( *($132 + [356]) ? uint_32($102 >> [1]) : $110 ))
	$110 = ($102 + [8])
	*(($95 = (($132 + [768]) + [8]))) = *($110)
	*($132 + [768]) = *($102)
	*($102) = [0]
	*(($102 + [4])) = [0]
	*($110) = [0]
	CALL _ZNSt3__19to_stringEf(($132 + [336]), (DEMOTE float_32)(float_64 *($132 + [944])))
	$102 = *($132 + [336])
	$110 = ($102 & [1])
	$96 = (($132 + [336]) + [8])
	$102 = CALL $136(($132 + [768]), ( *($96) ? $27 : $110 ), ( *($132 + [340]) ? uint_32($102 >> [1]) : $110 ))
	$110 = ($102 + [8])
	*(($97 = (($132 + [784]) + [8]))) = *($110)
	*($132 + [784]) = *($102)
	*($102) = [0]
	*(($102 + [4])) = [0]
	*($110) = [0]
	*(($98 = (($132 + [320]) + [8]))) = [0]
	*($132 + [320]) = (int_64)0
	$102 = CALL strlen([2576])
	if ( ((uint_32)$102 >= (uint_32)[-16]) ){ goto $label$52 }
	if ( ((uint_32)$102 >= (uint_32)[11]) ){ goto $label$136 }
	*($132 + [320]) = ($102 << [1])
	$110 = $44
	if ( $102 ){ goto $label$135 }
	goto $label$134 
	
.LABEL $label$136
	$64 = (($102 + [16]) & [-16])
	$110 = CALL $128($64)
	*($98) = $110
	*($132 + [320]) = ($64 | [1])
	*($132 + [324]) = $102
	
.LABEL $label$135
	CALL memcpy($110, [2576], $102)
	
.LABEL $label$134
	*(($110 + $102)) = [0]
	$102 = *($132 + [320])
	$110 = ($102 & [1])
	$102 = CALL $136(($132 + [784]), ( *($98) ? $44 : $110 ), ( *($132 + [324]) ? uint_32($102 >> [1]) : $110 ))
	$110 = ($102 + [8])
	*(($99 = (($132 + [800]) + [8]))) = *($110)
	*($132 + [800]) = *($102)
	*($102) = [0]
	*(($102 + [4])) = [0]
	*($110) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($132 + [304]), $132, ($132 + [928]))
	$102 = *($132 + [304])
	$110 = ($102 & [1])
	$100 = (($132 + [304]) + [8])
	$102 = CALL $136(($132 + [800]), ( *($100) ? $28 : $110 ), ( *($132 + [308]) ? uint_32($102 >> [1]) : $110 ))
	$110 = ($102 + [8])
	*(($101 = (($132 + [816]) + [8]))) = *($110)
	*($132 + [816]) = *($102)
	*($102) = [0]
	*(($102 + [4])) = [0]
	*($110) = [0]
	*(($102 = (($132 + [288]) + [8]))) = [0]
	*($132 + [288]) = (int_64)0
	$110 = CALL strlen([2512])
	if ( ((uint_32)$110 >= (uint_32)[-16]) ){ goto $label$51 }
	if ( ((uint_32)$110 >= (uint_32)[11]) ){ goto $label$139 }
	*($132 + [288]) = ($110 << [1])
	$64 = $29
	if ( $110 ){ goto $label$138 }
	goto $label$137 
	
.LABEL $label$139
	$104 = (($110 + [16]) & [-16])
	$64 = CALL $128($104)
	*($102) = $64
	*($132 + [288]) = ($104 | [1])
	*($132 + [292]) = $110
	
.LABEL $label$138
	CALL memcpy($64, [2512], $110)
	
.LABEL $label$137
	*(($64 + $110)) = [0]
	$110 = *($132 + [288])
	$64 = ($110 & [1])
	$110 = CALL $136(($132 + [816]), ( *($102) ? $29 : $64 ), ( *($132 + [292]) ? uint_32($110 >> [1]) : $64 ))
	$64 = ($110 + [8])
	*(($103 = (($132 + [832]) + [8]))) = *($64)
	*($132 + [832]) = *($110)
	*($110) = [0]
	*(($110 + [4])) = [0]
	*($64) = [0]
	*(($104 = (($132 + [272]) + [8]))) = [0]
	*($132 + [272]) = (int_64)0
	$110 = CALL strlen([2592])
	if ( ((uint_32)$110 >= (uint_32)[-16]) ){ goto $label$50 }
	if ( ((uint_32)$110 >= (uint_32)[11]) ){ goto $label$142 }
	*($132 + [272]) = ($110 << [1])
	$64 = $47
	if ( $110 ){ goto $label$141 }
	goto $label$140 
	
.LABEL $label$142
	$108 = (($110 + [16]) & [-16])
	$64 = CALL $128($108)
	*($104) = $64
	*($132 + [272]) = ($108 | [1])
	*($132 + [276]) = $110
	
.LABEL $label$141
	CALL memcpy($64, [2592], $110)
	
.LABEL $label$140
	*(($64 + $110)) = [0]
	$110 = *($132 + [272])
	$64 = ($110 & [1])
	$110 = CALL $136(($132 + [832]), ( *($104) ? $47 : $64 ), ( *($132 + [276]) ? uint_32($110 >> [1]) : $64 ))
	$64 = ($110 + [8])
	*(($105 = (($132 + [848]) + [8]))) = *($64)
	*($132 + [848]) = *($110)
	*($110) = [0]
	*(($110 + [4])) = [0]
	*($64) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($132 + [256]), $132, ($132 + [912]))
	$110 = *($132 + [256])
	$64 = ($110 & [1])
	$106 = (($132 + [256]) + [8])
	$110 = CALL $136(($132 + [848]), ( *($106) ? $30 : $64 ), ( *($132 + [260]) ? uint_32($110 >> [1]) : $64 ))
	$64 = ($110 + [8])
	*(($107 = (($132 + [1232]) + [8]))) = *($64)
	*($132 + [1232]) = *($110)
	*($110) = [0]
	*(($110 + [4])) = [0]
	*($64) = [0]
	*(($108 = (($132 + [240]) + [8]))) = [0]
	*($132 + [240]) = (int_64)0
	$110 = CALL strlen([2512])
	if ( ((uint_32)$110 >= (uint_32)[-16]) ){ goto $label$49 }
	if ( ((uint_32)$110 >= (uint_32)[11]) ){ goto $label$145 }
	*($132 + [240]) = ($110 << [1])
	$64 = $49
	if ( $110 ){ goto $label$144 }
	goto $label$143 
	
.LABEL $label$145
	$113 = (($110 + [16]) & [-16])
	$64 = CALL $128($113)
	*($108) = $64
	*($132 + [240]) = ($113 | [1])
	*($132 + [244]) = $110
	
.LABEL $label$144
	CALL memcpy($64, [2512], $110)
	
.LABEL $label$143
	*(($64 + $110)) = [0]
	$110 = *($132 + [240])
	$64 = ($110 & [1])
	$110 = CALL $136(($132 + [1232]), ( *($108) ? $49 : $64 ), ( *($132 + [244]) ? uint_32($110 >> [1]) : $64 ))
	$64 = ($110 + [8])
	*(($109 = (($132 + [48]) + [8]))) = *($64)
	*($132 + [48]) = *($110)
	*($110) = [0]
	*(($110 + [4])) = [0]
	*($64) = [0]
	*(($110 = (($132 + [224]) + [8]))) = [0]
	*($132 + [224]) = (int_64)0
	$64 = CALL strlen([2608])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$48 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$148 }
	*($132 + [224]) = ($64 << [1])
	$113 = $31
	if ( $64 ){ goto $label$147 }
	goto $label$146 
	
.LABEL $label$148
	$111 = (($64 + [16]) & [-16])
	$113 = CALL $128($111)
	*($110) = $113
	*($132 + [224]) = ($111 | [1])
	*($132 + [228]) = $64
	
.LABEL $label$147
	CALL memcpy($113, [2608], $64)
	
.LABEL $label$146
	*(($113 + $64)) = [0]
	$64 = *($132 + [224])
	$113 = ($64 & [1])
	$64 = CALL $136(($132 + [48]), ( *($110) ? $31 : $113 ), ( *($132 + [228]) ? uint_32($64 >> [1]) : $113 ))
	$113 = ($64 + [8])
	*($11) = *($113)
	*($132 + [1192]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($113) = [0]
	CALL _ZNSt3__19to_stringEy(($132 + [208]), ((uint_64)CALL $fimport$14() / (uint_64)(int_64)1000))
	$64 = *($132 + [208])
	$113 = ($64 & [1])
	$111 = (($132 + [208]) + [8])
	$64 = CALL $136(($132 + [1192]), ( *($111) ? $32 : $113 ), ( *($132 + [212]) ? uint_32($64 >> [1]) : $113 ))
	$113 = ($64 + [8])
	*(($112 = (($132 + [1120]) + [8]))) = *($113)
	*($132 + [1120]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($113) = [0]
	*(($113 = (($132 + [192]) + [8]))) = [0]
	*($132 + [192]) = (int_64)0
	$64 = CALL strlen([2624])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$47 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$151 }
	*($132 + [192]) = ($64 << [1])
	$115 = $52
	if ( $64 ){ goto $label$150 }
	goto $label$149 
	
.LABEL $label$151
	$116 = (($64 + [16]) & [-16])
	$115 = CALL $128($116)
	*($113) = $115
	*($132 + [192]) = ($116 | [1])
	*($132 + [196]) = $64
	
.LABEL $label$150
	CALL memcpy($115, [2624], $64)
	
.LABEL $label$149
	*(($115 + $64)) = [0]
	$64 = *($132 + [192])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [1120]), ( *($113) ? $52 : $115 ), ( *($132 + [196]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*(($114 = (($132 + [864]) + [8]))) = *($115)
	*($132 + [864]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	if ( ((*($132 + [192]) & [1]) == 0) ){ goto $label$152 }
	CALL $130(*($113))
	
.LABEL $label$152
	if ( ((*($132 + [1120]) & [1]) == 0) ){ goto $label$153 }
	CALL $130(*($112))
	
.LABEL $label$153
	if ( ((*($132 + [208]) & [1]) == 0) ){ goto $label$154 }
	CALL $130(*($111))
	
.LABEL $label$154
	if ( ((*($132 + [1192]) & [1]) == 0) ){ goto $label$155 }
	CALL $130(*($11))
	
.LABEL $label$155
	if ( ((*($132 + [224]) & [1]) == 0) ){ goto $label$156 }
	CALL $130(*($110))
	
.LABEL $label$156
	if ( ((*($132 + [48]) & [1]) == 0) ){ goto $label$157 }
	CALL $130(*($109))
	
.LABEL $label$157
	if ( ((*($132 + [240]) & [1]) == 0) ){ goto $label$158 }
	CALL $130(*($108))
	
.LABEL $label$158
	if ( ((*($132 + [1232]) & [1]) == 0) ){ goto $label$159 }
	CALL $130(*($107))
	
.LABEL $label$159
	if ( ((*($132 + [256]) & [1]) == 0) ){ goto $label$160 }
	CALL $130(*($106))
	
.LABEL $label$160
	if ( ((*($132 + [848]) & [1]) == 0) ){ goto $label$161 }
	CALL $130(*($105))
	
.LABEL $label$161
	if ( ((*($132 + [272]) & [1]) == 0) ){ goto $label$162 }
	CALL $130(*($104))
	
.LABEL $label$162
	if ( ((*($132 + [832]) & [1]) == 0) ){ goto $label$163 }
	CALL $130(*($103))
	
.LABEL $label$163
	if ( ((*($132 + [288]) & [1]) == 0) ){ goto $label$164 }
	CALL $130(*($102))
	
.LABEL $label$164
	if ( ((*($132 + [816]) & [1]) == 0) ){ goto $label$165 }
	CALL $130(*($101))
	
.LABEL $label$165
	if ( ((*($132 + [304]) & [1]) == 0) ){ goto $label$166 }
	CALL $130(*($100))
	
.LABEL $label$166
	if ( ((*($132 + [800]) & [1]) == 0) ){ goto $label$167 }
	CALL $130(*($99))
	
.LABEL $label$167
	if ( ((*($132 + [320]) & [1]) == 0) ){ goto $label$168 }
	CALL $130(*($98))
	
.LABEL $label$168
	if ( ((*($132 + [784]) & [1]) == 0) ){ goto $label$169 }
	CALL $130(*($97))
	
.LABEL $label$169
	if ( ((*($132 + [336]) & [1]) == 0) ){ goto $label$170 }
	CALL $130(*($96))
	
.LABEL $label$170
	if ( ((*($132 + [768]) & [1]) == 0) ){ goto $label$171 }
	CALL $130(*($95))
	
.LABEL $label$171
	if ( ((*($132 + [352]) & [1]) == 0) ){ goto $label$172 }
	CALL $130(*($94))
	
.LABEL $label$172
	if ( ((*($132 + [752]) & [1]) == 0) ){ goto $label$173 }
	CALL $130(*($93))
	
.LABEL $label$173
	if ( ((*($132 + [368]) & [1]) == 0) ){ goto $label$174 }
	CALL $130(*($6))
	
.LABEL $label$174
	if ( ((*($132 + [736]) & [1]) == 0) ){ goto $label$175 }
	CALL $130(*($92))
	
.LABEL $label$175
	if ( ((*($132 + [384]) & [1]) == 0) ){ goto $label$176 }
	CALL $130(*($91))
	
.LABEL $label$176
	if ( ((*($132 + [720]) & [1]) == 0) ){ goto $label$177 }
	CALL $130(*($90))
	
.LABEL $label$177
	if ( ((*($132 + [400]) & [1]) == 0) ){ goto $label$178 }
	CALL $130(*($89))
	
.LABEL $label$178
	if ( ((*($132 + [704]) & [1]) == 0) ){ goto $label$179 }
	CALL $130(*($88))
	
.LABEL $label$179
	if ( ((*($132 + [416]) & [1]) == 0) ){ goto $label$180 }
	CALL $130(*($87))
	
.LABEL $label$180
	if ( ((*($132 + [688]) & [1]) == 0) ){ goto $label$181 }
	CALL $130(*($86))
	
.LABEL $label$181
	if ( ((*($132 + [432]) & [1]) == 0) ){ goto $label$182 }
	CALL $130(*($85))
	
.LABEL $label$182
	if ( ((*($132 + [672]) & [1]) == 0) ){ goto $label$183 }
	CALL $130(*($84))
	
.LABEL $label$183
	if ( ((*($132 + [448]) & [1]) == 0) ){ goto $label$184 }
	CALL $130(*($63))
	
.LABEL $label$184
	if ( ((*($132 + [656]) & [1]) == 0) ){ goto $label$185 }
	CALL $130(*($83))
	
.LABEL $label$185
	if ( ((*($132 + [464]) & [1]) == 0) ){ goto $label$186 }
	CALL $130(*($82))
	
.LABEL $label$186
	if ( ((*($132 + [640]) & [1]) == 0) ){ goto $label$187 }
	CALL $130(*($81))
	
.LABEL $label$187
	if ( ((*($132 + [480]) & [1]) == 0) ){ goto $label$188 }
	CALL $130(*($127))
	
.LABEL $label$188
	if ( ((*($132 + [624]) & [1]) == 0) ){ goto $label$189 }
	CALL $130(*($80))
	
.LABEL $label$189
	if ( ((*($132 + [496]) & [1]) == 0) ){ goto $label$190 }
	CALL $130(*($79))
	
.LABEL $label$190
	if ( ((*($132 + [608]) & [1]) == 0) ){ goto $label$191 }
	CALL $130(*($78))
	
.LABEL $label$191
	if ( ((*($132 + [512]) & [1]) == 0) ){ goto $label$192 }
	CALL $130(*($77))
	
.LABEL $label$192
	if ( ((*($132 + [592]) & [1]) == 0) ){ goto $label$193 }
	CALL $130(*($76))
	
.LABEL $label$193
	if ( ((*($132 + [528]) & [1]) == 0) ){ goto $label$194 }
	CALL $130(*($75))
	
.LABEL $label$194
	if ( ((*($132 + [576]) & [1]) == 0) ){ goto $label$195 }
	CALL $130(*($74))
	
.LABEL $label$195
	if ( ((*($132 + [544]) & [1]) == 0) ){ goto $label$196 }
	CALL $130(*($73))
	
.LABEL $label$196
	if ( ((*($132 + [560]) & [1]) == 0) ){ goto $label$197 }
	CALL $130(*($72))
	
.LABEL $label$197
	*($79) = [0]
	*($132 + [496]) = (int_64)0
	$64 = CALL strlen([2448])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$46 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$200 }
	*($132 + [496]) = ($64 << [1])
	$115 = $33
	if ( $64 ){ goto $label$199 }
	goto $label$198 
	
.LABEL $label$200
	$116 = (($64 + [16]) & [-16])
	$115 = CALL $128($116)
	*($79) = $115
	*($132 + [496]) = ($116 | [1])
	*($132 + [500]) = $64
	
.LABEL $label$199
	CALL memcpy($115, [2448], $64)
	
.LABEL $label$198
	*(($115 + $64)) = [0]
	*($127) = [0]
	*($132 + [480]) = (int_64)0
	$64 = CALL strlen([2464])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$45 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$203 }
	*($132 + [480]) = ($64 << [1])
	$115 = $34
	if ( $64 ){ goto $label$202 }
	goto $label$201 
	
.LABEL $label$203
	$116 = (($64 + [16]) & [-16])
	$115 = CALL $128($116)
	*($127) = $115
	*($132 + [480]) = ($116 | [1])
	*($132 + [484]) = $64
	
.LABEL $label$202
	CALL memcpy($115, [2464], $64)
	
.LABEL $label$201
	*(($115 + $64)) = [0]
	$64 = *($132 + [480])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [496]), ( *($127) ? $34 : $115 ), ( *($132 + [484]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($77) = *($115)
	*($132 + [512]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	CALL _ZNSt3__19to_stringEy(($132 + [464]), $4)
	$64 = *($132 + [464])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [512]), ( *($82) ? $35 : $115 ), ( *($132 + [468]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($75) = *($115)
	*($132 + [528]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	*($63) = [0]
	*($132 + [448]) = (int_64)0
	$64 = CALL strlen([2480])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$44 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$206 }
	*($132 + [448]) = ($64 << [1])
	$115 = $36
	if ( $64 ){ goto $label$205 }
	goto $label$204 
	
.LABEL $label$206
	$116 = (($64 + [16]) & [-16])
	$115 = CALL $128($116)
	*($63) = $115
	*($132 + [448]) = ($116 | [1])
	*($132 + [452]) = $64
	
.LABEL $label$205
	CALL memcpy($115, [2480], $64)
	
.LABEL $label$204
	*(($115 + $64)) = [0]
	$64 = *($132 + [448])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [528]), ( *($63) ? $36 : $115 ), ( *($132 + [452]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($73) = *($115)
	*($132 + [544]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	CALL _ZNSt3__19to_stringEy(($132 + [432]), $2)
	$64 = *($132 + [432])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [544]), ( *($85) ? $37 : $115 ), ( *($132 + [436]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($72) = *($115)
	*($132 + [560]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	*($87) = [0]
	*($132 + [416]) = (int_64)0
	$64 = CALL strlen([2496])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$43 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$209 }
	*($132 + [416]) = ($64 << [1])
	$115 = $38
	if ( $64 ){ goto $label$208 }
	goto $label$207 
	
.LABEL $label$209
	$116 = (($64 + [16]) & [-16])
	$115 = CALL $128($116)
	*($87) = $115
	*($132 + [416]) = ($116 | [1])
	*($132 + [420]) = $64
	
.LABEL $label$208
	CALL memcpy($115, [2496], $64)
	
.LABEL $label$207
	*(($115 + $64)) = [0]
	$64 = *($132 + [416])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [560]), ( *($87) ? $38 : $115 ), ( *($132 + [420]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($74) = *($115)
	*($132 + [576]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	*($132 + [184]) = $1
	CALL $84(($132 + [400]), ($132 + [184]))
	$64 = *($132 + [400])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [576]), ( *($89) ? $39 : $115 ), ( *($132 + [404]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($76) = *($115)
	*($132 + [592]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	*($91) = [0]
	*($132 + [384]) = (int_64)0
	$64 = CALL strlen([2512])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$42 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$212 }
	*($132 + [384]) = ($64 << [1])
	$115 = $40
	if ( $64 ){ goto $label$211 }
	goto $label$210 
	
.LABEL $label$212
	$116 = (($64 + [16]) & [-16])
	$115 = CALL $128($116)
	*($91) = $115
	*($132 + [384]) = ($116 | [1])
	*($132 + [388]) = $64
	
.LABEL $label$211
	CALL memcpy($115, [2512], $64)
	
.LABEL $label$210
	*(($115 + $64)) = [0]
	$64 = *($132 + [384])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [592]), ( *($91) ? $40 : $115 ), ( *($132 + [388]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($78) = *($115)
	*($132 + [608]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	*($6) = [0]
	*($132 + [368]) = (int_64)0
	$64 = CALL strlen([2528])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$41 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$215 }
	*($132 + [368]) = ($64 << [1])
	$115 = $41
	if ( $64 ){ goto $label$214 }
	goto $label$213 
	
.LABEL $label$215
	$116 = (($64 + [16]) & [-16])
	$115 = CALL $128($116)
	*($6) = $115
	*($132 + [368]) = ($116 | [1])
	*($132 + [372]) = $64
	
.LABEL $label$214
	CALL memcpy($115, [2528], $64)
	
.LABEL $label$213
	*(($115 + $64)) = [0]
	$64 = *($132 + [368])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [608]), ( *($6) ? $41 : $115 ), ( *($132 + [372]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($80) = *($115)
	*($132 + [624]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	CALL _ZNSt3__19to_stringEy(($132 + [352]), *(*($132 + [956])))
	$64 = *($132 + [352])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [624]), ( *($94) ? $42 : $115 ), ( *($132 + [356]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($81) = *($115)
	*($132 + [640]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	*($96) = [0]
	*($132 + [336]) = (int_64)0
	$64 = CALL strlen([2544])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$40 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$218 }
	*($132 + [336]) = ($64 << [1])
	$115 = $43
	if ( $64 ){ goto $label$217 }
	goto $label$216 
	
.LABEL $label$218
	$116 = (($64 + [16]) & [-16])
	$115 = CALL $128($116)
	*($96) = $115
	*($132 + [336]) = ($116 | [1])
	*($132 + [340]) = $64
	
.LABEL $label$217
	CALL memcpy($115, [2544], $64)
	
.LABEL $label$216
	*(($115 + $64)) = [0]
	$64 = *($132 + [336])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [640]), ( *($96) ? $43 : $115 ), ( *($132 + [340]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($83) = *($115)
	*($132 + [656]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	*($132 + [176]) = *(*($132 + [956]) + [16])
	CALL $84(($132 + [320]), ($132 + [176]))
	$64 = *($132 + [320])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [656]), ( *($98) ? $44 : $115 ), ( *($132 + [324]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($84) = *($115)
	*($132 + [672]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	*($100) = [0]
	*($132 + [304]) = (int_64)0
	$64 = CALL strlen([2512])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$39 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$221 }
	*($132 + [304]) = ($64 << [1])
	$115 = $45
	if ( $64 ){ goto $label$220 }
	goto $label$219 
	
.LABEL $label$221
	$116 = (($64 + [16]) & [-16])
	$115 = CALL $128($116)
	*($100) = $115
	*($132 + [304]) = ($116 | [1])
	*($132 + [308]) = $64
	
.LABEL $label$220
	CALL memcpy($115, [2512], $64)
	
.LABEL $label$219
	*(($115 + $64)) = [0]
	$64 = *($132 + [304])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [672]), ( *($100) ? $45 : $115 ), ( *($132 + [308]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($86) = *($115)
	*($132 + [688]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	*($102) = [0]
	*($132 + [288]) = (int_64)0
	$64 = CALL strlen([2560])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$38 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$224 }
	*($132 + [288]) = ($64 << [1])
	$115 = $46
	if ( $64 ){ goto $label$223 }
	goto $label$222 
	
.LABEL $label$224
	$116 = (($64 + [16]) & [-16])
	$115 = CALL $128($116)
	*($102) = $115
	*($132 + [288]) = ($116 | [1])
	*($132 + [292]) = $64
	
.LABEL $label$223
	CALL memcpy($115, [2560], $64)
	
.LABEL $label$222
	*(($115 + $64)) = [0]
	$64 = *($132 + [288])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [688]), ( *($102) ? $46 : $115 ), ( *($132 + [292]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($88) = *($115)
	*($132 + [704]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	CALL _ZNSt3__19to_stringEf(($132 + [272]), (DEMOTE float_32)(float_64 *($132 + [944])))
	$64 = *($132 + [272])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [704]), ( *($104) ? $47 : $115 ), ( *($132 + [276]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($90) = *($115)
	*($132 + [720]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	*($106) = [0]
	*($132 + [256]) = (int_64)0
	$64 = CALL strlen([2576])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$37 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$227 }
	*($132 + [256]) = ($64 << [1])
	$115 = $48
	if ( $64 ){ goto $label$226 }
	goto $label$225 
	
.LABEL $label$227
	$116 = (($64 + [16]) & [-16])
	$115 = CALL $128($116)
	*($106) = $115
	*($132 + [256]) = ($116 | [1])
	*($132 + [260]) = $64
	
.LABEL $label$226
	CALL memcpy($115, [2576], $64)
	
.LABEL $label$225
	*(($115 + $64)) = [0]
	$64 = *($132 + [256])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [720]), ( *($106) ? $48 : $115 ), ( *($132 + [260]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($92) = *($115)
	*($132 + [736]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($132 + [240]), $132, ($132 + [928]))
	$64 = *($132 + [240])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [736]), ( *($108) ? $49 : $115 ), ( *($132 + [244]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($93) = *($115)
	*($132 + [752]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	*($110) = [0]
	*($132 + [224]) = (int_64)0
	$64 = CALL strlen([2512])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$36 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$230 }
	*($132 + [224]) = ($64 << [1])
	$115 = $50
	if ( $64 ){ goto $label$229 }
	goto $label$228 
	
.LABEL $label$230
	$116 = (($64 + [16]) & [-16])
	$115 = CALL $128($116)
	*($110) = $115
	*($132 + [224]) = ($116 | [1])
	*($132 + [228]) = $64
	
.LABEL $label$229
	CALL memcpy($115, [2512], $64)
	
.LABEL $label$228
	*(($115 + $64)) = [0]
	$64 = *($132 + [224])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [752]), ( *($110) ? $50 : $115 ), ( *($132 + [228]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($95) = *($115)
	*($132 + [768]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	*($111) = [0]
	*($132 + [208]) = (int_64)0
	$64 = CALL strlen([2592])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$35 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$233 }
	*($132 + [208]) = ($64 << [1])
	$115 = $51
	if ( $64 ){ goto $label$232 }
	goto $label$231 
	
.LABEL $label$233
	$116 = (($64 + [16]) & [-16])
	$115 = CALL $128($116)
	*($111) = $115
	*($132 + [208]) = ($116 | [1])
	*($132 + [212]) = $64
	
.LABEL $label$232
	CALL memcpy($115, [2592], $64)
	
.LABEL $label$231
	*(($115 + $64)) = [0]
	$64 = *($132 + [208])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [768]), ( *($111) ? $51 : $115 ), ( *($132 + [212]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($97) = *($115)
	*($132 + [784]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($132 + [192]), $132, ($132 + [912]))
	$64 = *($132 + [192])
	$115 = ($64 & [1])
	$64 = CALL $136(($132 + [784]), ( *($113) ? $52 : $115 ), ( *($132 + [196]) ? uint_32($64 >> [1]) : $115 ))
	$115 = ($64 + [8])
	*($99) = *($115)
	*($132 + [800]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($115) = [0]
	*(($115 = (($132 + [160]) + [8]))) = [0]
	*($132 + [160]) = (int_64)0
	$64 = CALL strlen([2512])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$34 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$236 }
	*($132 + [160]) = ($64 << [1])
	$116 = $53
	if ( $64 ){ goto $label$235 }
	goto $label$234 
	
.LABEL $label$236
	$118 = (($64 + [16]) & [-16])
	$116 = CALL $128($118)
	*($115) = $116
	*($132 + [160]) = ($118 | [1])
	*($132 + [164]) = $64
	
.LABEL $label$235
	CALL memcpy($116, [2512], $64)
	
.LABEL $label$234
	*(($116 + $64)) = [0]
	$64 = *($132 + [160])
	$116 = ($64 & [1])
	$64 = CALL $136(($132 + [800]), ( *($115) ? $53 : $116 ), ( *($132 + [164]) ? uint_32($64 >> [1]) : $116 ))
	$116 = ($64 + [8])
	*($101) = *($116)
	*($132 + [816]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($116) = [0]
	*(($116 = (($132 + [144]) + [8]))) = [0]
	*($132 + [144]) = (int_64)0
	$64 = CALL strlen([2640])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$33 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$239 }
	*($132 + [144]) = ($64 << [1])
	$118 = $54
	if ( $64 ){ goto $label$238 }
	goto $label$237 
	
.LABEL $label$239
	$119 = (($64 + [16]) & [-16])
	$118 = CALL $128($119)
	*($116) = $118
	*($132 + [144]) = ($119 | [1])
	*($132 + [148]) = $64
	
.LABEL $label$238
	CALL memcpy($118, [2640], $64)
	
.LABEL $label$237
	*(($118 + $64)) = [0]
	$64 = *($132 + [144])
	$118 = ($64 & [1])
	$64 = CALL $136(($132 + [816]), ( *($116) ? $54 : $118 ), ( *($132 + [148]) ? uint_32($64 >> [1]) : $118 ))
	$118 = ($64 + [8])
	*($103) = *($118)
	*($132 + [832]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($118) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($132 + [128]), $132, ($132 + [880]))
	$64 = *($132 + [128])
	$118 = ($64 & [1])
	$117 = (($132 + [128]) + [8])
	$64 = CALL $136(($132 + [832]), ( *($117) ? $55 : $118 ), ( *($132 + [132]) ? uint_32($64 >> [1]) : $118 ))
	$118 = ($64 + [8])
	*($107) = *($118)
	*($132 + [1232]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($118) = [0]
	*(($118 = (($132 + [112]) + [8]))) = [0]
	*($132 + [112]) = (int_64)0
	$64 = CALL strlen([2512])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$32 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$242 }
	*($132 + [112]) = ($64 << [1])
	$119 = $56
	if ( $64 ){ goto $label$241 }
	goto $label$240 
	
.LABEL $label$242
	$121 = (($64 + [16]) & [-16])
	$119 = CALL $128($121)
	*($118) = $119
	*($132 + [112]) = ($121 | [1])
	*($132 + [116]) = $64
	
.LABEL $label$241
	CALL memcpy($119, [2512], $64)
	
.LABEL $label$240
	*(($119 + $64)) = [0]
	$64 = *($132 + [112])
	$119 = ($64 & [1])
	$64 = CALL $136(($132 + [1232]), ( *($118) ? $56 : $119 ), ( *($132 + [116]) ? uint_32($64 >> [1]) : $119 ))
	$119 = ($64 + [8])
	*($109) = *($119)
	*($132 + [48]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($119) = [0]
	*(($119 = (($132 + [96]) + [8]))) = [0]
	*($132 + [96]) = (int_64)0
	$64 = CALL strlen([2608])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$31 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$245 }
	*($132 + [96]) = ($64 << [1])
	$121 = $57
	if ( $64 ){ goto $label$244 }
	goto $label$243 
	
.LABEL $label$245
	$131 = (($64 + [16]) & [-16])
	$121 = CALL $128($131)
	*($119) = $121
	*($132 + [96]) = ($131 | [1])
	*($132 + [100]) = $64
	
.LABEL $label$244
	CALL memcpy($121, [2608], $64)
	
.LABEL $label$243
	*(($121 + $64)) = [0]
	$64 = *($132 + [96])
	$121 = ($64 & [1])
	$64 = CALL $136(($132 + [48]), ( *($119) ? $57 : $121 ), ( *($132 + [100]) ? uint_32($64 >> [1]) : $121 ))
	$121 = ($64 + [8])
	*($11) = *($121)
	*($132 + [1192]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($121) = [0]
	CALL _ZNSt3__19to_stringEy(($132 + [80]), ((uint_64)CALL $fimport$14() / (uint_64)(int_64)1000))
	$64 = *($132 + [80])
	$121 = ($64 & [1])
	$120 = (($132 + [80]) + [8])
	$64 = CALL $136(($132 + [1192]), ( *($120) ? $58 : $121 ), ( *($132 + [84]) ? uint_32($64 >> [1]) : $121 ))
	$121 = ($64 + [8])
	*($112) = *($121)
	*($132 + [1120]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($121) = [0]
	*(($121 = (($132 + [64]) + [8]))) = [0]
	*($132 + [64]) = (int_64)0
	$64 = CALL strlen([2624])
	if ( ((uint_32)$64 >= (uint_32)[-16]) ){ goto $label$30 }
	if ( ((uint_32)$64 >= (uint_32)[11]) ){ goto $label$248 }
	*($132 + [64]) = ($64 << [1])
	$131 = $59
	if ( $64 ){ goto $label$247 }
	goto $label$246 
	
.LABEL $label$248
	$122 = (($64 + [16]) & [-16])
	$131 = CALL $128($122)
	*($121) = $131
	*($132 + [64]) = ($122 | [1])
	*($132 + [68]) = $64
	
.LABEL $label$247
	CALL memcpy($131, [2624], $64)
	
.LABEL $label$246
	*(($131 + $64)) = [0]
	$64 = *($132 + [64])
	$131 = ($64 & [1])
	$64 = CALL $136(($132 + [1120]), ( *($121) ? $59 : $131 ), ( *($132 + [68]) ? uint_32($64 >> [1]) : $131 ))
	$131 = ($64 + [8])
	*($105) = *($131)
	*($132 + [848]) = *($64)
	*($64) = [0]
	*(($64 + [4])) = [0]
	*($131) = [0]
	if ( ((*($132 + [64]) & [1]) == 0) ){ goto $label$249 }
	CALL $130(*($121))
	
.LABEL $label$249
	if ( ((*($132 + [1120]) & [1]) == 0) ){ goto $label$250 }
	CALL $130(*($112))
	
.LABEL $label$250
	if ( ((*($132 + [80]) & [1]) == 0) ){ goto $label$251 }
	CALL $130(*($120))
	
.LABEL $label$251
	if ( ((*($132 + [1192]) & [1]) == 0) ){ goto $label$252 }
	CALL $130(*($11))
	
.LABEL $label$252
	if ( ((*($132 + [96]) & [1]) == 0) ){ goto $label$253 }
	CALL $130(*($119))
	
.LABEL $label$253
	if ( ((*($132 + [48]) & [1]) == 0) ){ goto $label$254 }
	CALL $130(*($109))
	
.LABEL $label$254
	if ( ((*($132 + [112]) & [1]) == 0) ){ goto $label$255 }
	CALL $130(*($118))
	
.LABEL $label$255
	if ( ((*($132 + [1232]) & [1]) == 0) ){ goto $label$256 }
	CALL $130(*($107))
	
.LABEL $label$256
	if ( ((*($132 + [128]) & [1]) == 0) ){ goto $label$257 }
	CALL $130(*($117))
	
.LABEL $label$257
	if ( ((*($132 + [832]) & [1]) == 0) ){ goto $label$258 }
	CALL $130(*($103))
	
.LABEL $label$258
	if ( ((*($132 + [144]) & [1]) == 0) ){ goto $label$259 }
	CALL $130(*($116))
	
.LABEL $label$259
	if ( ((*($132 + [816]) & [1]) == 0) ){ goto $label$260 }
	CALL $130(*($101))
	
.LABEL $label$260
	if ( ((*($132 + [160]) & [1]) == 0) ){ goto $label$261 }
	CALL $130(*($115))
	
.LABEL $label$261
	if ( ((*($132 + [800]) & [1]) == 0) ){ goto $label$262 }
	CALL $130(*($99))
	
.LABEL $label$262
	if ( ((*($132 + [192]) & [1]) == 0) ){ goto $label$263 }
	CALL $130(*($113))
	
.LABEL $label$263
	if ( ((*($132 + [784]) & [1]) == 0) ){ goto $label$264 }
	CALL $130(*($97))
	
.LABEL $label$264
	if ( ((*($132 + [208]) & [1]) == 0) ){ goto $label$265 }
	CALL $130(*($111))
	
.LABEL $label$265
	if ( ((*($132 + [768]) & [1]) == 0) ){ goto $label$266 }
	CALL $130(*($95))
	
.LABEL $label$266
	if ( ((*($132 + [224]) & [1]) == 0) ){ goto $label$267 }
	CALL $130(*($110))
	
.LABEL $label$267
	if ( ((*($132 + [752]) & [1]) == 0) ){ goto $label$268 }
	CALL $130(*($93))
	
.LABEL $label$268
	if ( ((*($132 + [240]) & [1]) == 0) ){ goto $label$269 }
	CALL $130(*($108))
	
.LABEL $label$269
	if ( ((*($132 + [736]) & [1]) == 0) ){ goto $label$270 }
	CALL $130(*($92))
	
.LABEL $label$270
	if ( ((*($132 + [256]) & [1]) == 0) ){ goto $label$271 }
	CALL $130(*($106))
	
.LABEL $label$271
	if ( ((*($132 + [720]) & [1]) == 0) ){ goto $label$272 }
	CALL $130(*($90))
	
.LABEL $label$272
	if ( ((*($132 + [272]) & [1]) == 0) ){ goto $label$273 }
	CALL $130(*($104))
	
.LABEL $label$273
	if ( ((*($132 + [704]) & [1]) == 0) ){ goto $label$274 }
	CALL $130(*($88))
	
.LABEL $label$274
	if ( ((*($132 + [288]) & [1]) == 0) ){ goto $label$275 }
	CALL $130(*($102))
	
.LABEL $label$275
	if ( ((*($132 + [688]) & [1]) == 0) ){ goto $label$276 }
	CALL $130(*($86))
	
.LABEL $label$276
	if ( ((*($132 + [304]) & [1]) == 0) ){ goto $label$277 }
	CALL $130(*($100))
	
.LABEL $label$277
	if ( ((*($132 + [672]) & [1]) == 0) ){ goto $label$278 }
	CALL $130(*($84))
	
.LABEL $label$278
	if ( ((*($132 + [320]) & [1]) == 0) ){ goto $label$279 }
	CALL $130(*($98))
	
.LABEL $label$279
	if ( ((*($132 + [656]) & [1]) == 0) ){ goto $label$280 }
	CALL $130(*($83))
	
.LABEL $label$280
	if ( ((*($132 + [336]) & [1]) == 0) ){ goto $label$281 }
	CALL $130(*($96))
	
.LABEL $label$281
	if ( ((*($132 + [640]) & [1]) == 0) ){ goto $label$282 }
	CALL $130(*($81))
	
.LABEL $label$282
	if ( ((*($132 + [352]) & [1]) == 0) ){ goto $label$283 }
	CALL $130(*($94))
	
.LABEL $label$283
	if ( ((*($132 + [624]) & [1]) == 0) ){ goto $label$284 }
	CALL $130(*($80))
	
.LABEL $label$284
	if ( ((*($132 + [368]) & [1]) == 0) ){ goto $label$285 }
	CALL $130(*($6))
	
.LABEL $label$285
	if ( ((*($132 + [608]) & [1]) == 0) ){ goto $label$286 }
	CALL $130(*($78))
	
.LABEL $label$286
	if ( ((*($132 + [384]) & [1]) == 0) ){ goto $label$287 }
	CALL $130(*($91))
	
.LABEL $label$287
	if ( ((*($132 + [592]) & [1]) == 0) ){ goto $label$288 }
	CALL $130(*($76))
	
.LABEL $label$288
	if ( ((*($132 + [400]) & [1]) == 0) ){ goto $label$289 }
	CALL $130(*($89))
	
.LABEL $label$289
	if ( ((*($132 + [576]) & [1]) == 0) ){ goto $label$290 }
	CALL $130(*($74))
	
.LABEL $label$290
	if ( ((*($132 + [416]) & [1]) == 0) ){ goto $label$291 }
	CALL $130(*($87))
	
.LABEL $label$291
	if ( ((*($132 + [560]) & [1]) == 0) ){ goto $label$292 }
	CALL $130(*($72))
	
.LABEL $label$292
	if ( ((*($132 + [432]) & [1]) == 0) ){ goto $label$293 }
	CALL $130(*($85))
	
.LABEL $label$293
	if ( ((*($132 + [544]) & [1]) == 0) ){ goto $label$294 }
	CALL $130(*($73))
	
.LABEL $label$294
	if ( ((*($132 + [448]) & [1]) == 0) ){ goto $label$295 }
	CALL $130(*($63))
	
.LABEL $label$295
	if ( ((*($132 + [528]) & [1]) == 0) ){ goto $label$296 }
	CALL $130(*($75))
	
.LABEL $label$296
	if ( ((*($132 + [464]) & [1]) == 0) ){ goto $label$297 }
	CALL $130(*($82))
	
.LABEL $label$297
	if ( ((*($132 + [512]) & [1]) == 0) ){ goto $label$298 }
	CALL $130(*($77))
	
.LABEL $label$298
	if ( ((*($132 + [480]) & [1]) == 0) ){ goto $label$299 }
	CALL $130(*($127))
	
.LABEL $label$299
	if ( ((*($132 + [496]) & [1]) == 0) ){ goto $label$300 }
	CALL $130(*($79))
	
.LABEL $label$300
	$69 = *($132 + [880])
	$62 = *($132 + [912])
	if ( ((int_64)$62 <= (int_64)$69) ){ goto $label$301 }
	$65 = *($0)
	$129 = (int_64)0
	$128 = (int_64)59
	$127 = [1152]
	$130 = (int_64)0
	
.LOOP $label$302:
	if ( ((uint_64)$129 > (uint_64)(int_64)5) ){ goto $label$307 }
	$63 = *($127)
	if ( ((uint_32)(($63 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$306 }
	$63 = ($63 + [165])
	goto $label$305 
	
.LABEL $label$307
	$3 = (int_64)0
	if ( ((uint_64)$129 <= (uint_64)(int_64)11) ){ goto $label$304 }
	goto $label$303 
	
.LABEL $label$306
	$63 = ( ($63 + [208]) ? [0] : ((($63 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$305
	$3 = (int_64)((int_64)(CASTING uint_64)(uint_32 $63) << (int_64)56) >> (int_64)56)
	
.LABEL $label$304
	$3 = ((int_64)((int_64)$3 & (int_64)31) << (int_64)((int_64)$128 & (int_64)4294967295))
	
.LABEL $label$303
	$127 = ($127 + [1])
	$129 = ((int_64)$129 + (int_64)1)
	$130 = ((int_64)$3 | (int_64)$130)
	$128 = ((int_64)$128 + (int_64)-5)
	if ( ((int_64)$128 != (int_64)-6) ){ goto $label$302 }
	*($109) = $130
	*($132 + [48]) = $65
	$65 = *($71)
	$129 = (int_64)0
	$128 = (int_64)59
	$127 = [1168]
	$130 = (int_64)0
	
.LOOP $label$308:
	if ( ((uint_64)$129 > (uint_64)(int_64)7) ){ goto $label$313 }
	$63 = *($127)
	if ( ((uint_32)(($63 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$312 }
	$63 = ($63 + [165])
	goto $label$311 
	
.LABEL $label$313
	$3 = (int_64)0
	if ( ((uint_64)$129 <= (uint_64)(int_64)11) ){ goto $label$310 }
	goto $label$309 
	
.LABEL $label$312
	$63 = ( ($63 + [208]) ? [0] : ((($63 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$311
	$3 = (int_64)((int_64)(CASTING uint_64)(uint_32 $63) << (int_64)56) >> (int_64)56)
	
.LABEL $label$310
	$3 = ((int_64)((int_64)$3 & (int_64)31) << (int_64)((int_64)$128 & (int_64)4294967295))
	
.LABEL $label$309
	$127 = ($127 + [1])
	$129 = ((int_64)$129 + (int_64)1)
	$130 = ((int_64)$3 | (int_64)$130)
	$128 = ((int_64)$128 + (int_64)-5)
	if ( ((int_64)$128 != (int_64)-6) ){ goto $label$308 }
	$127 = *($132 + [956])
	$3 = *($68)
	CALL eosio_assert(((int_64)*($70) == (int_64)$3), [2336])
	$129 = (int_64)
	CALL eosio_assert(((int_64)$129($62 - $69)) > (int_64)-4611686018427387904), [2384])
	CALL eosio_assert(((int_64)$129 < (int_64)4611686018427387904), [2416])
	$128 = *($127 + [16])
	*($60) = $129
	*((($132 + [1120]) + [24])) = $3
	*($112) = $128
	*($132 + [1120]) = *($0)
	CALL $147($61, ($132 + [848]))
	CALL $36(($132 + [1232]), CALL $35(($132 + [1192]), ($132 + [48]), $65, $130, ($132 + [1120])))
	$127 = *($132 + [1232])
	CALL send_inline($127, (*($132 + [1236]) - $127))
	$127 = *($132 + [1232])
	if ( ($127 == 0) ){ goto $label$314 }
	*($132 + [1236]) = $127
	CALL $130($127)
	
.LABEL $label$314
	$127 = *($123)
	if ( ($127 == 0) ){ goto $label$315 }
	*($13) = $127
	CALL $130($127)
	
.LABEL $label$315
	$127 = *($15)
	if ( ($127 == 0) ){ goto $label$316 }
	*($124) = $127
	CALL $130($127)
	
.LABEL $label$316
	if ( ((*($61) & [1]) == 0) ){ goto $label$317 }
	CALL $130(*((($132 + [1120]) + [40])))
	
.LABEL $label$317
	$129 = CALL current_time()
	*($132 + [1120]) = ((uint_64)$129 / (uint_64)(int_64)1000)
	if ( ((uint_64)((uint_64)$129 / (uint_64)(int_64)86400000000) <= (uint_64)((uint_64)*($125) / (uint_64)(int_64)86400000)) ){ goto $label$318 }
	*($132 + [1196]) = ($132 + [1120])
	*($132 + [1192]) = ($132 + [944])
	CALL $97(($132 + [1016]), $8, ($132 + [1192]))
	goto $label$301 
	
.LABEL $label$318
	*($132 + [1192]) = ($132 + [944])
	CALL $98(($132 + [1016]), $8, ($132 + [1192]))
	
.LABEL $label$301
	if ( ((int_64)*($132 + [928]) < (int_64)1) ){ goto $label$319 }
	$62 = *($0)
	$129 = (int_64)0
	$128 = (int_64)59
	$127 = [1152]
	$130 = (int_64)0
	
.LOOP $label$320:
	if ( ((uint_64)$129 > (uint_64)(int_64)5) ){ goto $label$325 }
	$63 = *($127)
	if ( ((uint_32)(($63 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$324 }
	$63 = ($63 + [165])
	goto $label$323 
	
.LABEL $label$325
	$3 = (int_64)0
	if ( ((uint_64)$129 <= (uint_64)(int_64)11) ){ goto $label$322 }
	goto $label$321 
	
.LABEL $label$324
	$63 = ( ($63 + [208]) ? [0] : ((($63 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$323
	$3 = (int_64)((int_64)(CASTING uint_64)(uint_32 $63) << (int_64)56) >> (int_64)56)
	
.LABEL $label$322
	$3 = ((int_64)((int_64)$3 & (int_64)31) << (int_64)((int_64)$128 & (int_64)4294967295))
	
.LABEL $label$321
	$127 = ($127 + [1])
	$129 = ((int_64)$129 + (int_64)1)
	$130 = ((int_64)$3 | (int_64)$130)
	$128 = ((int_64)$128 + (int_64)-5)
	if ( ((int_64)$128 != (int_64)-6) ){ goto $label$320 }
	*($109) = $130
	*($132 + [48]) = $62
	$69 = *(($8 + [16]))
	$129 = (int_64)0
	$128 = (int_64)59
	$127 = [1168]
	$130 = (int_64)0
	
.LOOP $label$326:
	if ( ((uint_64)$129 > (uint_64)(int_64)7) ){ goto $label$331 }
	$63 = *($127)
	if ( ((uint_32)(($63 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$330 }
	$63 = ($63 + [165])
	goto $label$329 
	
.LABEL $label$331
	$3 = (int_64)0
	if ( ((uint_64)$129 <= (uint_64)(int_64)11) ){ goto $label$328 }
	goto $label$327 
	
.LABEL $label$330
	$63 = ( ($63 + [208]) ? [0] : ((($63 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$329
	$3 = (int_64)((int_64)(CASTING uint_64)(uint_32 $63) << (int_64)56) >> (int_64)56)
	
.LABEL $label$328
	$3 = ((int_64)((int_64)$3 & (int_64)31) << (int_64)((int_64)$128 & (int_64)4294967295))
	
.LABEL $label$327
	$127 = ($127 + [1])
	$129 = ((int_64)$129 + (int_64)1)
	$130 = ((int_64)$3 | (int_64)$130)
	$128 = ((int_64)$128 + (int_64)-5)
	if ( ((int_64)$128 != (int_64)-6) ){ goto $label$326 }
	*($112) = $1
	*(($60 + [4])) = *($132 + [932])
	*($132 + [1120]) = $62
	*($60) = *($132 + [928])
	*(($60 + [12])) = *((($132 + [928]) + [12]))
	*(($60 + [8])) = *($67)
	CALL $147($61, ($132 + [864]))
	CALL $36(($132 + [1232]), CALL $35(($132 + [1192]), ($132 + [48]), $69, $130, ($132 + [1120])))
	$127 = *($132 + [1232])
	CALL send_inline($127, (*($132 + [1236]) - $127))
	$127 = *($132 + [1232])
	if ( ($127 == 0) ){ goto $label$332 }
	*($132 + [1236]) = $127
	CALL $130($127)
	
.LABEL $label$332
	$127 = *($123)
	if ( ($127 == 0) ){ goto $label$333 }
	*($13) = $127
	CALL $130($127)
	
.LABEL $label$333
	$127 = *($15)
	if ( ($127 == 0) ){ goto $label$334 }
	*($124) = $127
	CALL $130($127)
	
.LABEL $label$334
	if ( ((*($61) & [1]) == 0) ){ goto $label$319 }
	CALL $130(*((($132 + [1120]) + [40])))
	
.LABEL $label$319
	*(($127 = (($132 + [32]) + [8]))) = *($70)
	*($132 + [32]) = *($132 + [880])
	$129 = *($126)
	$3 = *(($8 + [16]))
	$128 = *(($7 + [16]))
	$130 = *($71)
	$62 = *(*($132 + [956]) + [16])
	$69 = *($7)
	*(($132 + [8])) = *($127)
	*($132) = *($132 + [32])
	CALL _ZN5eosio8exchange19deal_fee_processingENS_5assetEyyyyyyby($0, $132, $130, $69, $128, $3, $129, $62, $10, $9)
	if ( ((int_64)*(*($132 + [956]) + [32]) > (int_64)0) ){ goto $label$335 }
	$129 = *($132 + [952])
	*($132 + [1120]) = $129
	$127 = (CASTING uint_32)(uint_64 (uint_64)$129 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$127) != (int_32)[0]), [384])
	CALL $89(($132 + [1120]))
	CALL $43(*($132 + [960]), $127)
	
.LABEL $label$335
	$129 = *($5)
	if ( ((int_64)$129 < (int_64)1) ){ goto $label$64 }
	*($132 + [1120]) = (int_64)-4503599627370497
	CALL $80(($132 + [1192]), ($132 + [960]), ($132 + [1120]))
	*($132 + [952]) = *($132 + [1192])
	if ( ((*($132 + [848]) & [1]) == 0) ){ goto $label$336 }
	CALL $130(*($105))
	
.LABEL $label$336
	if ( ((*($132 + [864]) & [1]) == 0) ){ goto $label$337 }
	CALL $130(*($114))
	
.LABEL $label$337
	if ( ((int_64)$129 > (int_64)0) ){ goto $label$66 }
	goto $label$62 
	
.LABEL $label$65
	$129 = *($5)
	goto $label$63 
	
.LABEL $label$64
	if ( ((*($132 + [848]) & [1]) == 0) ){ goto $label$338 }
	CALL $130(*(($132 + [856])))
	
.LABEL $label$338
	if ( ((*($132 + [864]) & [1]) == 0) ){ goto $label$63 }
	CALL $130(*(($132 + [872])))
	
.LABEL $label$63
	if ( ((int_64)$129 < (int_64)1) ){ goto $label$62 }
	$9 = *($0)
	$129 = (int_64)0
	$128 = (int_64)59
	$127 = [1152]
	$130 = (int_64)0
	
.LOOP $label$339:
	if ( ((uint_64)$129 > (uint_64)(int_64)5) ){ goto $label$344 }
	$63 = *($127)
	if ( ((uint_32)(($63 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$343 }
	$63 = ($63 + [165])
	goto $label$342 
	
.LABEL $label$344
	$3 = (int_64)0
	if ( ((uint_64)$129 <= (uint_64)(int_64)11) ){ goto $label$341 }
	goto $label$340 
	
.LABEL $label$343
	$63 = ( ($63 + [208]) ? [0] : ((($63 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$342
	$3 = (int_64)((int_64)(CASTING uint_64)(uint_32 $63) << (int_64)56) >> (int_64)56)
	
.LABEL $label$341
	$3 = ((int_64)((int_64)$3 & (int_64)31) << (int_64)((int_64)$128 & (int_64)4294967295))
	
.LABEL $label$340
	$127 = ($127 + [1])
	$129 = ((int_64)$129 + (int_64)1)
	$130 = ((int_64)$3 | (int_64)$130)
	$128 = ((int_64)$128 + (int_64)-5)
	if ( ((int_64)$128 != (int_64)-6) ){ goto $label$339 }
	*($132 + [936]) = $130
	*($132 + [928]) = $9
	$9 = *(($7 + [8]))
	$129 = (int_64)0
	$128 = (int_64)59
	$127 = [1168]
	$130 = (int_64)0
	
.LOOP $label$345:
	if ( ((uint_64)$129 > (uint_64)(int_64)7) ){ goto $label$350 }
	$63 = *($127)
	if ( ((uint_32)(($63 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$349 }
	$63 = ($63 + [165])
	goto $label$348 
	
.LABEL $label$350
	$3 = (int_64)0
	if ( ((uint_64)$129 <= (uint_64)(int_64)11) ){ goto $label$347 }
	goto $label$346 
	
.LABEL $label$349
	$63 = ( ($63 + [208]) ? [0] : ((($63 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$348
	$3 = (int_64)((int_64)(CASTING uint_64)(uint_32 $63) << (int_64)56) >> (int_64)56)
	
.LABEL $label$347
	$3 = ((int_64)((int_64)$3 & (int_64)31) << (int_64)((int_64)$128 & (int_64)4294967295))
	
.LABEL $label$346
	$127 = ($127 + [1])
	$129 = ((int_64)$129 + (int_64)1)
	$130 = ((int_64)$3 | (int_64)$130)
	$128 = ((int_64)$128 + (int_64)-5)
	if ( ((int_64)$128 != (int_64)-6) ){ goto $label$345 }
	*(($132 + [888])) = [0]
	*($132 + [880]) = (int_64)0
	$127 = CALL strlen([2864])
	if ( ((uint_32)$127 >= (uint_32)[-16]) ){ goto $label$29 }
	if ( ((uint_32)$127 >= (uint_32)[11]) ){ goto $label$353 }
	*($132 + [880]) = ($127 << [1])
	$63 = (($132 + [880]) | [1])
	if ( $127 ){ goto $label$352 }
	goto $label$351 
	
.LABEL $label$353
	$6 = (($127 + [16]) & [-16])
	$63 = CALL $128($6)
	*($132 + [880]) = ($6 | [1])
	*($132 + [888]) = $63
	*($132 + [884]) = $127
	
.LABEL $label$352
	CALL memcpy($63, [2864], $127)
	
.LABEL $label$351
	*(($63 + $127)) = [0]
	*(($132 + [1148])) = *(($5 + [12]))
	*(($132 + [1144])) = *(($5 + [8]))
	*(($132 + [1140])) = *(($5 + [4]))
	*($132 + [1128]) = $1
	*($132 + [1120]) = *($0)
	*($132 + [1136]) = *($5)
	$127 = (($132 + [880]) + [8])
	*(($132 + [1160])) = *($127)
	*($132 + [1152]) = *($132 + [880])
	*($132 + [880]) = [0]
	*($132 + [884]) = [0]
	*($127) = [0]
	$127 = CALL $35(($132 + [1192]), ($132 + [928]), $9, $130, ($132 + [1120]))
	CALL $36(($132 + [912]), $127)
	$63 = *($132 + [912])
	CALL send_inline($63, (*($132 + [916]) - $63))
	$63 = *($132 + [912])
	if ( ($63 == 0) ){ goto $label$354 }
	*($132 + [916]) = $63
	CALL $130($63)
	
.LABEL $label$354
	$63 = *($127 + [28])
	if ( ($63 == 0) ){ goto $label$355 }
	*(($127 + [32])) = $63
	CALL $130($63)
	
.LABEL $label$355
	$63 = *($127 + [16])
	if ( ($63 == 0) ){ goto $label$356 }
	*(($127 + [20])) = $63
	CALL $130($63)
	
.LABEL $label$356
	if ( ((*(($132 + [1152])) & [1]) == 0) ){ goto $label$357 }
	CALL $130(*(($132 + [1160])))
	
.LABEL $label$357
	if ( ((*($132 + [880]) & [1]) == 0) ){ goto $label$62 }
	CALL $130(*(($132 + [888])))
	
.LABEL $label$62
	$6 = *($132 + [992])
	if ( ($6 == 0) ){ goto $label$358 }
	$102 = ($132 + [996])
	$127 = *($102)
	if ( ((int_32)$127 == (int_32)$6) ){ goto $label$360 }
	
.LOOP $label$361:
	$127 = ($127 + [-24])
	$63 = *($127)
	*($127) = [0]
	if ( ($63 == 0) ){ goto $label$362 }
	CALL $130($63)
	
.LABEL $label$362
	if ( ((int_32)$6 != (int_32)$127) ){ goto $label$361 }
	$127 = *(($132 + [992]))
	goto $label$359 
	
.LABEL $label$360
	$127 = $6
	
.LABEL $label$359
	*($102) = $6
	CALL $130($127)
	
.LABEL $label$358
	$6 = *($132 + [1040])
	if ( ($6 == 0) ){ goto $label$363 }
	$102 = ($132 + [1044])
	$127 = *($102)
	if ( ((int_32)$127 == (int_32)$6) ){ goto $label$365 }
	
.LOOP $label$366:
	$127 = ($127 + [-24])
	$63 = *($127)
	*($127) = [0]
	if ( ($63 == 0) ){ goto $label$367 }
	if ( ((*($63 + [32]) & [1]) == 0) ){ goto $label$368 }
	CALL $130(*(($63 + [40])))
	
.LABEL $label$368
	CALL $130($63)
	
.LABEL $label$367
	if ( ((int_32)$6 != (int_32)$127) ){ goto $label$366 }
	$127 = *(($132 + [1040]))
	goto $label$364 
	
.LABEL $label$365
	$127 = $6
	
.LABEL $label$364
	*($102) = $6
	CALL $130($127)
	
.LABEL $label$363
	$6 = *($132 + [1104])
	if ( ($6 == 0) ){ goto $label$369 }
	$102 = ($132 + [1108])
	$127 = *($102)
	if ( ((int_32)$127 == (int_32)$6) ){ goto $label$371 }
	
.LOOP $label$372:
	$127 = ($127 + [-24])
	$63 = *($127)
	*($127) = [0]
	if ( ($63 == 0) ){ goto $label$373 }
	if ( ((*($63 + [24]) & [1]) == 0) ){ goto $label$374 }
	CALL $130(*(($63 + [32])))
	
.LABEL $label$374
	CALL $130($63)
	
.LABEL $label$373
	if ( ((int_32)$6 != (int_32)$127) ){ goto $label$372 }
	$127 = *(($132 + [1104]))
	goto $label$370 
	
.LABEL $label$371
	$127 = $6
	
.LABEL $label$370
	*($102) = $6
	CALL $130($127)
	
.LABEL $label$369
	*([0] + [4]) = ($132 + [1248])
	return (unreachable)
	
.LABEL $label$61
	CALL $132(($132 + [560]))
	
.LABEL $label$60
	CALL $132(($132 + [544]))
	
.LABEL $label$59
	CALL $132(($132 + [512]))
	
.LABEL $label$58
	CALL $132(($132 + [480]))
	
.LABEL $label$57
	CALL $132(($132 + [448]))
	
.LABEL $label$56
	CALL $132(($132 + [432]))
	
.LABEL $label$55
	CALL $132(($132 + [400]))
	
.LABEL $label$54
	CALL $132(($132 + [368]))
	
.LABEL $label$53
	CALL $132(($132 + [352]))
	
.LABEL $label$52
	CALL $132(($132 + [320]))
	
.LABEL $label$51
	CALL $132(($132 + [288]))
	
.LABEL $label$50
	CALL $132(($132 + [272]))
	
.LABEL $label$49
	CALL $132(($132 + [240]))
	
.LABEL $label$48
	CALL $132(($132 + [224]))
	
.LABEL $label$47
	CALL $132(($132 + [192]))
	
.LABEL $label$46
	CALL $132(($132 + [496]))
	
.LABEL $label$45
	CALL $132(($132 + [480]))
	
.LABEL $label$44
	CALL $132(($132 + [448]))
	
.LABEL $label$43
	CALL $132(($132 + [416]))
	
.LABEL $label$42
	CALL $132(($132 + [384]))
	
.LABEL $label$41
	CALL $132(($132 + [368]))
	
.LABEL $label$40
	CALL $132(($132 + [336]))
	
.LABEL $label$39
	CALL $132(($132 + [304]))
	
.LABEL $label$38
	CALL $132(($132 + [288]))
	
.LABEL $label$37
	CALL $132(($132 + [256]))
	
.LABEL $label$36
	CALL $132(($132 + [224]))
	
.LABEL $label$35
	CALL $132(($132 + [208]))
	
.LABEL $label$34
	CALL $132(($132 + [160]))
	
.LABEL $label$33
	CALL $132(($132 + [144]))
	
.LABEL $label$32
	CALL $132(($132 + [112]))
	
.LABEL $label$31
	CALL $132(($132 + [96]))
	
.LABEL $label$30
	CALL $132(($132 + [64]))
	
.LABEL $label$29
	CALL $132(($132 + [880]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $97 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$15 = (*([0] + [4]) - [96])
	*([0] + [4]) = $15
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [1408])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1456])
	$6 = ($1 + [96])
	$14 = *($6)
	$7 = ($1 + [88])
	$5 = *($7)
	$8 = ($1 + [80])
	$9 = *($8)
	$10 = *(($1 + [56]))
	$11 = *(($1 + [48]))
	$12 = *(($1 + [24]))
	$13 = *(($1 + [16]))
	*(($16 = $15) + [16]) = *(($1 + [8]))
	*($16 + [24]) = $13
	*($16 + [32]) = $12
	*($16 + [40]) = $11
	*($16 + [48]) = $10
	*($16 + [56]) = $9
	*($16 + [64]) = $5
	*($16 + [72]) = $14
	$5 = *($1)
	*($8) = *(*($2))
	*($7) = *(*($2))
	*($6) = *(*($2 + [4]))
	CALL eosio_assert([1], [1520])
	$2 = *($1 + [32])
	$6 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($6 + [89])
	$14 = (CASTING uint_64)(uint_32 $6)
	$6 = (($16 + [16]) + [56])
	$7 = ($16 + [48])
	$8 = (($16 + [16]) + [24])
	$4 = (($16 + [16]) + [16])
	$3 = (($16 + [16]) + [8])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$15 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$15 = ($15 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $15
	
.LABEL $label$2
	*($16 + [4]) = $15
	*($16) = $15
	*($16 + [8]) = ($15 + $2)
	CALL $68($16, $1)
	CALL db_update_i64(*($1 + [108]), (int_64)0, $15, $2)
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL free($15)
	
.LABEL $label$4
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($16 + [88]) = *(($1 + [8]))
	if ( (CALL memcmp(($16 + [16]), ($16 + [88]), [8]) == 0) ){ goto $label$6 }
	$15 = ($1 + [112])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$7 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864512, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$7
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$6
	*($16 + [88]) = *(($1 + [16]))
	if ( (CALL memcmp($3, ($16 + [88]), [8]) == 0) ){ goto $label$8 }
	$15 = ($1 + [116])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864511, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$8
	*($16 + [88]) = *(($1 + [24]))
	if ( (CALL memcmp($4, ($16 + [88]), [8]) == 0) ){ goto $label$10 }
	$15 = ($1 + [120])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864510, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$10
	*($16 + [88]) = *(($1 + [48]))
	if ( (CALL memcmp($8, ($16 + [88]), [8]) == 0) ){ goto $label$12 }
	$15 = ($1 + [124])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864509, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$12
	*($16 + [88]) = *(($1 + [56]))
	if ( (CALL memcmp($7, ($16 + [88]), [8]) == 0) ){ goto $label$14 }
	$15 = ($1 + [128])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$15 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864508, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$15
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$14
	*($16 + [88]) = *(($1 + [80]))
	if ( (CALL memcmp(($16 + [56]), ($16 + [88]), [8]) == 0) ){ goto $label$16 }
	$15 = ($1 + [132])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$17 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864507, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$17
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$16
	*($16 + [88]) = *(($1 + [88]))
	if ( (CALL memcmp(($16 + [64]), ($16 + [88]), [8]) == 0) ){ goto $label$18 }
	$15 = ($1 + [136])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$19 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864506, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$19
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$18
	*($16 + [88]) = *(($1 + [96]))
	if ( (CALL memcmp($6, ($16 + [88]), [8]) == 0) ){ goto $label$20 }
	$1 = ($1 + [140])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$21 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864505, ($16 + [80]), $5)
	*($1) = $2
	
.LABEL $label$21
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$20
	*([0] + [4]) = ($16 + [96])
}

void .FUNC _ZN5eosio8exchange6miningEyNS_5assetEyyy (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	float_64 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	float_64 $20
	int_32 $21
	$21 = (*([0] + [4]) - [160])
	*([0] + [4]) = $21
	CALL eosio_assert([1], [960])
	$14 = [0]
	$15 = (int_64)21570
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [672])
	$15 = (int_64)0
	$18 = (int_64)59
	$14 = [1248]
	$16 = (int_64)0
	
.LOOP $label$6:
	$17 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$7 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$7 = ($7 + [165])
	goto $label$8 
	
.LABEL $label$9
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$17 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$7
	$14 = ($14 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$6 }
	*(($21 + [40])) = [0]
	*($21 + [8]) = $16
	*($21 + [24]) = (int_64)-1
	*($21 + [32]) = (int_64)0
	*($21 + [16]) = (int_64)21570
	$15 = *(CALL $12(($21 + [8]), (int_64)21570, [640]))
	$6 = *($21 + [32])
	if ( ($6 == 0) ){ goto $label$10 }
	$12 = ($21 + [36])
	$14 = *($12)
	if ( ((int_32)$14 == (int_32)$6) ){ goto $label$12 }
	
.LOOP $label$13:
	$14 = ($14 + [-24])
	$7 = *($14)
	*($14) = [0]
	if ( ($7 == 0) ){ goto $label$14 }
	CALL $130($7)
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)$14) ){ goto $label$13 }
	$14 = *(($21 + [32]))
	goto $label$11 
	
.LABEL $label$12
	$14 = $6
	
.LABEL $label$11
	*($12) = $6
	CALL $130($14)
	
.LABEL $label$10
	if ( ((int_64)$15 > (int_64)250000000000) ){ goto $label$16 }
	$20 = ((float_64)(CASTING float_64)(int_64 ((int_64)*($2) << (int_64)1)) / (float_64)(float_64)0.01)
	goto $label$15 
	
.LABEL $label$16
	if ( ((int_64)$15 > (int_64)500000000000) ){ goto $label$17 }
	$20 = ((float_64)(CASTING float_64)(int_64 *($2)) / (float_64)(float_64)0.01)
	goto $label$15 
	
.LABEL $label$17
	*(($21 + [40])) = [0]
	*($21 + [24]) = (int_64)-1
	$15 = (int_64)0
	*($21 + [32]) = (int_64)0
	$18 = *($0)
	*($21 + [8]) = $18
	*($21 + [16]) = $18
	*($21 + [44 align=4]) = (int_64)0
	*($21 + [152]) = ($21 + [8])
	$18 = (int_64)59
	$14 = [1248]
	$16 = (int_64)0
	
.LOOP $label$18:
	$17 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$19 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$7 = ($7 + [165])
	goto $label$20 
	
.LABEL $label$21
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$17 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$19
	$14 = ($14 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$18 }
	*($21 + [128]) = $16
	CALL $91(($21 + [88]), ($21 + [152]), ($21 + [128]))
	$14 = *($21 + [92])
	if ( ($14 == 0) ){ goto $label$24 }
	if ( ((int_64)*($21 + [128]) != (int_64)*($14 + [16])) ){ goto $label$24 }
	$15 = *($21 + [88])
	*($21 + [136]) = $15
	$12 = (($21 + [136]) | [4])
	$6 = (CASTING uint_32)(uint_64 (uint_64)$15 >> (uint_64)(int_64)32)
	if ( ($6) == 0) ){ goto $label$25 }
	
.LOOP $label$26:
	$19 = *($6 + [16])
	$15 = (int_64)0
	$18 = (int_64)59
	$14 = [1248]
	$16 = (int_64)0
	
.LOOP $label$27:
	$17 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$28 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$7 = ($7 + [165])
	goto $label$29 
	
.LABEL $label$30
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$17 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$28
	$14 = ($14 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$27 }
	if ( ((int_64)$19 != (int_64)$16) ){ goto $label$31 }
	if ( ((int_64)*($6 + [24]) != (int_64)21570) ){ goto $label$31 }
	if ( ((int_64)*($6 + [8]) == (int_64)$1) ){ goto $label$23 }
	
.LABEL $label$31
	CALL $92(($21 + [136]))
	$6 = *($21 + [140])
	if ( $6 ){ goto $label$26 }
	
.LABEL $label$25
	$14 = [0]
	goto $label$22 
	
.LABEL $label$24
	$14 = [0]
	*($21 + [140]) = [0]
	*($21 + [136]) = ($21 + [152])
	$12 = (($21 + [136]) | [4])
	goto $label$22 
	
.LABEL $label$23
	$14 = [1]
	
.LABEL $label$22
	CALL eosio_assert($14, [2720])
	$20 = (CASTING float_64)(int_64 *($2))
	$13 = *(*($12) + [80])
	$13 = ((float_64)$13 + (float_64)$13)
	$6 = *($21 + [32])
	if ( ($6 == 0) ){ goto $label$32 }
	$2 = ($21 + [36])
	$14 = *($2)
	if ( ((int_32)$14 == (int_32)$6) ){ goto $label$34 }
	
.LOOP $label$35:
	$14 = ($14 + [-24])
	$7 = *($14)
	*($14) = [0]
	if ( ($7 == 0) ){ goto $label$36 }
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$37 }
	CALL $130(*(($7 + [40])))
	
.LABEL $label$37
	CALL $130($7)
	
.LABEL $label$36
	if ( ((int_32)$6 != (int_32)$14) ){ goto $label$35 }
	$14 = *(($21 + [32]))
	goto $label$33 
	
.LABEL $label$34
	$14 = $6
	
.LABEL $label$33
	*($2) = $6
	CALL $130($14)
	
.LABEL $label$32
	$20 = ((float_64)$20 / (float_64)$13)
	
.LABEL $label$15
	$18 = (Rounds 0)($20)
	$11 = ((int_64)$18 / (int_64)10)
	CALL eosio_assert((uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [960])
	$15 = (int_64)21570
	$14 = [0]
	
.LOOP $label$40:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$39 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	
.LOOP $label$42:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$42 }
	
.LABEL $label$41
	$7 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	$7 = [0]
	
.LABEL $label$38
	CALL eosio_assert($7, [672])
	$10 = ((int_64)$18 / (int_64)5)
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [960])
	$15 = (int_64)21570
	$14 = [0]
	
.LOOP $label$45:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$44 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$46 }
	
.LOOP $label$47:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$44 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$47 }
	
.LABEL $label$46
	$7 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	$7 = [0]
	
.LABEL $label$43
	CALL eosio_assert($7, [672])
	$9 = ((int_64)((int_64)$18 * (int_64)7) / (int_64)10)
	CALL eosio_assert((uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [960])
	$15 = (int_64)21570
	$14 = [0]
	
.LOOP $label$50:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$49 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$51 }
	
.LOOP $label$52:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$49 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$52 }
	
.LABEL $label$51
	$7 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$50 }
	goto $label$48 
	
.LABEL $label$49
	$7 = [0]
	
.LABEL $label$48
	CALL eosio_assert($7, [672])
	$8 = *($0)
	$15 = (int_64)0
	$17 = (int_64)59
	$14 = [1152]
	$16 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$15 > (uint_64)(int_64)5) ){ goto $label$58 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$7 = ($7 + [165])
	goto $label$56 
	
.LABEL $label$58
	$18 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$54
	$14 = ($14 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$16 = ((int_64)$18 | (int_64)$16)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$53 }
	$15 = (int_64)0
	$18 = (int_64)59
	$14 = [1248]
	$19 = (int_64)0
	
.LOOP $label$59:
	$17 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$60 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$62 }
	$7 = ($7 + [165])
	goto $label$61 
	
.LABEL $label$62
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$61
	$17 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$60
	$14 = ($14 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$19 = ((int_64)$17 | (int_64)$19)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$59 }
	$15 = (int_64)0
	$18 = (int_64)59
	$14 = [2752]
	$1 = (int_64)0
	
.LOOP $label$63:
	$17 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$64 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$66 }
	$7 = ($7 + [165])
	goto $label$65 
	
.LABEL $label$66
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$65
	$17 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$64
	$14 = ($14 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$1 = ((int_64)$17 | (int_64)$1)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$63 }
	*((($21 + [8]) + [24])) = (int_64)5521924
	*(($21 + [56])) = (int_64)5521924
	*($21 + [16]) = $3
	*($21 + [8]) = $8
	*($21 + [24]) = $11
	*($21 + [40]) = $4
	*($21 + [48]) = $10
	*($21 + [64]) = $5
	*($21 + [72]) = $9
	*(($21 + [80])) = (int_64)5521924
	*($21 + [88]) = $19
	*($21 + [96]) = $1
	*(($14 = CALL $128([16]))) = $8
	*($14 + [8]) = $16
	*(($7 = ($21 + [120]))) = [0]
	$6 = ($14 + [16])
	*((($21 + [88]) + [24])) = $6
	*(($21 + [108])) = $6
	*($21 + [104]) = $14
	*($21 + [116]) = [0]
	*(($21 + [124])) = [0]
	CALL $24(($21 + [116]), [80])
	$14 = *($7)
	$7 = *($21 + [116])
	*($21 + [140]) = $7
	*($21 + [136]) = $7
	*($21 + [144]) = $14
	*($21 + [152]) = ($21 + [136])
	*($21 + [128]) = ($21 + [8])
	CALL $93(($21 + [128]), ($21 + [152]))
	CALL $36(($21 + [136]), ($21 + [88]))
	$14 = *($21 + [136])
	CALL send_inline($14, (*($21 + [140]) - $14))
	$14 = *($21 + [136])
	if ( ($14 == 0) ){ goto $label$67 }
	*($21 + [140]) = $14
	CALL $130($14)
	
.LABEL $label$67
	$14 = *($21 + [116])
	if ( ($14 == 0) ){ goto $label$68 }
	*(($21 + [120])) = $14
	CALL $130($14)
	
.LABEL $label$68
	$14 = *($21 + [104])
	if ( ($14 == 0) ){ goto $label$69 }
	*(($21 + [108])) = $14
	CALL $130($14)
	
.LABEL $label$69
	*([0] + [4]) = ($21 + [160])
}

void .FUNC $91 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-3665743365212864511, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [104]) == (int_32)$4), [224])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $33($4, CALL $fimport$16(*($4), *($4 + [8]), (int_64)-3665743365212864512, $5))
	CALL eosio_assert(((int_32)*($2 + [104]) == (int_32)$4), [224])
	
.LABEL $label$4
	*(($2 + [116])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $92 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [432])
	$6 = *($0 + [4])
	$7 = *(($6 + [116]))
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-3665743365212864511, ($9 + [8]), *($6))
	*((*(($0 + [4])) + [116])) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [104]) == (int_32)$2), [224])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $33($2, CALL $fimport$16(*($2), *($2 + [8]), (int_64)-3665743365212864512, $3))
	CALL eosio_assert(((int_32)*($7 + [104]) == (int_32)$2), [224])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [116])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [208])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [208])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [208])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [208])
	CALL memcpy(*($3 + [4]), ($0 + [32]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	*($4 + [8]) = $0
	CALL $94(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = *($0)
	$2 = ($4 & [1])
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = ((*($0) & [-2]) + [-1])
	$4 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = [10]
	$4 = uint_32($4 >> [1])
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $139($0, $3, [1], $3, $3, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($4 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($4 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $4)) + [1]) = [0]
	*($0) = $1
}

void .FUNC $139 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$8 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($0 + [8])
	
.LABEL $label$2
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$9 = [11]
	$2 = ($2 + $1)
	$7 = ($1 << [1])
	$2 = ( $7 ? $2 : ($2 <= $7) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $128($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $130($8)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $130 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC $131 (int_32 $0)
{
	CALL $130($0)
}

void .FUNC $132 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$4 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $4 )
	$5 = ($1 + [1])
	$6 = *($1 + [8])
	$1 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$3 = *($0)
	$1 = (($3 & [-2]) + [-1])
	
.LABEL $label$5
	$5 = ( $6 ? $5 : $4 )
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $4 ){ goto $label$7 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $4 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$3 = *($0 + [4])
	
.LABEL $label$6
	CALL $134($0, $1, ($2 - $1), $3, [0], $3, $2, $5)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $5, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $134 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $128($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $130($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $128(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $130($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $136 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $134($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

int_32 .FUNC $137 (int_32 $0, int_32 $1)
{
	return CALL $136($0, $1, CALL $177($1))
}

int_32 .FUNC __strchrnul (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	($0 + CALL strlen($0))
	$2 = ($1 & [255])
	if ( ($2 == 0) ){ goto $label$1 }
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$2 }
	if ( ((int_32)$3 == (int_32)($1 & [255])) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ($0 & [3]) ){ goto $label$4 }
	
.LABEL $label$3
	$3 = *($0)
	if ( ((((int_32)$3 ^ (int_32)[-1]) & ($3 + [-16843009])) & [-2139062144]) ){ goto $label$5 }
	$2 = ((int_32)$2 * (int_32)[16843009])
	
.LOOP $label$6:
	$3 = ((int_32)$3 ^ (int_32)$2)
	if ( ((((int_32)$3 ^ (int_32)[-1]) & ($3 + [-16843009])) & [-2139062144]) ){ goto $label$5 }
	$0 = ($0 + [4])
	$3 = *($0)
	if ( (((((int_32)$3 ^ (int_32)[-1]) & ($3 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$6 }
	
.LABEL $label$5
	$0 = ($0 + [-1])
	
.LOOP $label$7:
	$0 = ($0 + [1])
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$2 }
	if ( ((int_32)$3 != (int_32)($1 & [255])) ){ goto $label$7 }
	
.LABEL $label$2
	return $0
	return .LABEL $label$1
}

int_32 .FUNC $129 (int_32 $0)
{
	return CALL $128($0)
}

int_32 .FUNC $128 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [11756])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [288])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $128([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [320])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [320])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $7(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $130($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC _ZN5eosio8exchange12delblacklistEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$40($1), [16])
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [48])
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	*($6 + [24]) = (int_64)0
	$1 = *($0)
	*($6) = $1
	*($6 + [8]) = $1
	$0 = [0]
	$4 = CALL db_find_i64($1, $1, (int_64)4344997574077186048, $2)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $8($6, $4)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)$6), [224])
	
.LABEL $label$1
	$4 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($4, [336])
	CALL eosio_assert($4, [384])
	CALL eosio_assert($4, [432])
	$4 = CALL db_next_i64(*($0 + [20]), ($6 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL $8($6, $4)
	
.LABEL $label$2
	CALL $10($6, $0)
	$3 = *($6 + [24])
	if ( ($3 == 0) ){ goto $label$3 }
	$5 = ($6 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $130($4)
	
.LABEL $label$7
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($6 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $3
	
.LABEL $label$4
	*($5) = $3
	CALL $130($0)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	*($3 + [8]) = $0
	CALL _ZN5eosio8exchange5applyEyy(($3 + [8]), $1, $2)
	CALL eosio_exit([0])
	(unreachable)
}

void .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [320])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $22(*($1), *($0 + [12]))
}

void .FUNC $121 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)1398362884
	CALL eosio_assert([1], [960])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [672])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [12]) = $1
	*($6 + [8]) = $1
	*($6 + [16]) = ($1 + $2)
	*($6 + [24]) = ($6 + [8])
	*($6 + [36]) = ($0 + [8])
	*($6 + [32]) = $0
	*($6 + [40]) = ($0 + [16])
	*($6 + [44]) = ($0 + [32])
	CALL $122(($6 + [32]), ($6 + [24]))
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $120 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $147($5, ($1 + [16]))
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $147(($5 + [16]), $5)
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($5 + [16])), (int_32 $1))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $130(*($5 + [24]))
	
.LABEL $label$2
	if ( ((*($5) & [1]) == 0) ){ goto $label$3 }
	CALL $130(*($5 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [32])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC $126 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [11750]) == 0) ){ goto $label$2 }
	$7 = *([0] + [11752])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [11750]) = [1]
	$7 = ($7 << [16])
	*([0] + [11752]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [11752])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [11752]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [11750]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [11750]) = [1]
	$3 = ($3 << [16])
	*([0] + [11752]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [11752])
	
.LABEL $label$8
	*([0] + [11752]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $126($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [11664])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $125([3256], $0)
}

int_32 .FUNC $14 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$7 = [0]
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [432])
	$8 = *($0 + [4])
	$6 = *(($8 + [52]))
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$1 }
	$6 = *(*($0))
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)4157012474184204289, ($9 + [8]), *($8))
	*((*(($0 + [4])) + [52])) = $6
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($6, ($9 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$4:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$3 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)$2), [224])
	goto $label$5 
	
.LABEL $label$6
	$7 = [0]
	$6 = CALL db_find_i64(*($2), *($2 + [8]), (int_64)4157012474184204288, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $17($2, $6)
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)$2), [224])
	
.LABEL $label$5
	*(($7 + [52])) = $1
	
.LABEL $label$2
	*(($0 + [4])) = $7
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$6 = *($0 + [4])
	$8 = *($6)
	$7 = *($8 + [16])
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$3 = CALL db_lowerbound_i64(*($8), *($8 + [8]), (int_64)4157012474184204288, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	CALL $17($8, $3)
	*($9 + [12]) = [0]
	*($9 + [8]) = $8
	$7 = *(*(CALL $18(($9 + [8])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($8 + [16])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [768])
	*($1) = *(($8 + [16]))
	*($1 + [8]) = *(*($6 + [4]))
	*($1 + [16]) = (uint_64)*(*($6 + [8]) + [8]) >> (uint_64)(int_64)8)
	CALL $133(($1 + [24]), *($6 + [12]))
	*($1 + [36]) = *(*($6 + [8]) + [8])
	$6 = *($1 + [24])
	$8 = ( *(($1 + [28])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($8 + [25])
	$7 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ($6 <= [513]) ){ goto $label$5 }
	$8 = CALL malloc($6)
	goto $label$4 
	
.LABEL $label$5
	$8 = ($10 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$4
	*($9 + [12]) = $8
	*($9 + [8]) = $8
	*($9 + [16]) = ($8 + $6)
	CALL $19(($9 + [8]), $1)
	$7 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($2 + [8]), (int_64)4157012474184204288, *(*($0 + [8])), $7, $8, $6)
	if ( ($6 <= [513]) ){ goto $label$6 }
	CALL free($8)
	
.LABEL $label$6
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$7 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$6 = ($2 + [8])
	$7 = *($6)
	$8 = *(($0 + [8]))
	$4 = *($8)
	$5 = *($1)
	*($9 + [24]) = *(($1 + [8]))
	*($1 + [48]) = CALL db_idx64_store($7, (int_64)4157012474184204288, $4, $5, ($9 + [24]))
	$7 = *($8)
	$4 = *($6)
	$5 = *($1)
	*($9 + [24]) = *(($1 + [16]))
	*(($1 + [52])) = CALL db_idx64_store($4, (int_64)4157012474184204289, $7, $5, ($9 + [24]))
	*([0] + [4]) = ($9 + [32])
}

void .FUNC $16 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $128(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $146($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$11 }
	CALL $130(*(($1 + [32])))
	
.LABEL $label$11
	CALL $130($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $130($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [288])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $128([56])) + [32]) = [0]
	*($6 + [24 align=4]) = (int_64)0
	*($6 + [40]) = $0
	CALL $21(($8 + [32]), $6)
	*($6 + [48]) = [-1]
	*($6 + [44]) = $1
	*($6 + [52]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $16(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$10 }
	CALL $130(*(($4 + [32])))
	
.LABEL $label$10
	CALL $130($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $10 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $130($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $130($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC _ZN5eosio8exchange12newbasetokenEyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [144])
	*([0] + [4]) = $11
	*($11 + [56]) = $2
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$40($1), [16])
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [48])
	if ( (*($3) & [1]) ){ goto $label$2 }
	$8 = ($3 + [1])
	goto $label$1 
	
.LABEL $label$2
	$8 = *($3 + [8])
	
.LABEL $label$1
	$7 = [-1]
	
.LOOP $label$3:
	$5 = ($8 + $7)
	$4 = ($7 + [1])
	$7 = $4
	if ( *(($5 + [1])) ){ goto $label$3 }
	$10 = (int_64)0
	if ( ($4 == 0) ){ goto $label$4 }
	$9 = (CASTING uint_64)(uint_32 $4)
	$1 = (int_64)8
	$10 = (int_64)0
	
.LOOP $label$5:
	$7 = *($8)
	if ( ((uint_32)(($7 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$10 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$1 & (int_64)4294967288)) | (int_64)$10)
	
.LABEL $label$6
	$8 = ($8 + [1])
	$1 = ((int_64)$1 + (int_64)8)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)$9 != (int_64)0) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [0]
	*(($11 + [136])) = [0]
	*($11 + [104]) = $2
	*($11 + [120]) = (int_64)-1
	*($11 + [128]) = (int_64)0
	$1 = (uint_64)$10 >> (uint_64)(int_64)8
	*($11 + [112]) = $1)
	$8 = CALL $12(($11 + [104]), $1, [640])
	*((($11 + [40]) + [8])) = *(($8 + [8]))
	*($11 + [40]) = *($8)
	$4 = *($11 + [128])
	if ( ($4 == 0) ){ goto $label$7 }
	$6 = ($11 + [132])
	$8 = *($6)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL $130($5)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$10 }
	$8 = *(($11 + [128]))
	goto $label$8 
	
.LABEL $label$9
	$8 = $4
	
.LABEL $label$8
	*($6) = $4
	CALL $130($8)
	
.LABEL $label$7
	$9 = *($11 + [48])
	$10 = (uint_64)$9 >> (uint_64)(int_64)8
	$1 = $10)
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$8 = [0]
	
.LABEL $label$12
	CALL eosio_assert($8, [672])
	CALL eosio_assert(((int_64)*($11 + [40]) > (int_64)0), [704])
	*(($11 + [136])) = [0]
	*($11 + [120]) = (int_64)-1
	*($11 + [128]) = (int_64)0
	$1 = *($0)
	*($11 + [104]) = $1
	*($11 + [112]) = $1
	*($11 + [140]) = [0]
	*($11 + [32]) = ($11 + [104])
	*($11 + [72]) = $10
	CALL $13(($11 + [8]), ($11 + [32]), ($11 + [72]))
	$7 = *($11 + [12])
	if ( ($7 == 0) ){ goto $label$18 }
	if ( ((int_64)*($11 + [72]) != (int_64)*($7 + [16])) ){ goto $label$18 }
	$1 = *($11 + [8])
	*($11 + [24]) = $1
	$7 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ($7) == 0) ){ goto $label$17 }
	$5 = ($11 + [48])
	
.LOOP $label$19:
	$8 = [1]
	if ( ((int_64)*($7 + [16]) != (int_64)(uint_64)$9 >> (uint_64)(int_64)8)) ){ goto $label$20 }
	$8 = ((int_64)*($7 + [8]) != (int_64)*($11 + [56]))
	
.LABEL $label$20
	CALL eosio_assert($8, [736])
	CALL $14(($11 + [24]))
	$7 = *($11 + [28])
	if ( ($7 == 0) ){ goto $label$17 }
	$9 = *($5)
	goto $label$19 
	
.LABEL $label$18
	*($11 + [28]) = [0]
	*($11 + [24]) = ($11 + [32])
	
.LABEL $label$17
	$1 = *($0)
	*($11 + [20]) = $3
	*($11 + [12]) = ($11 + [56])
	*($11 + [8]) = ($11 + [104])
	*($11 + [16]) = ($11 + [40])
	*($11 + [96]) = $1
	CALL eosio_assert(((int_64)*($11 + [104]) == (int_64)CALL $fimport$13()), [144])
	*($11 + [76]) = ($11 + [8])
	*($11 + [72]) = ($11 + [104])
	*($11 + [80]) = ($11 + [96])
	*(($7 = CALL $128([56])) + [32]) = [0]
	*($7 + [24 align=4]) = (int_64)0
	*($7 + [40]) = ($11 + [104])
	CALL $15(($11 + [72]), $7)
	*($11 + [88]) = $7
	$1 = *($7)
	*($11 + [72]) = $1
	$5 = *($7 + [44])
	*($11 + [68]) = $5
	$4 = ($11 + [132])
	$8 = *($4)
	if ( ((uint_32)$8 >= (uint_32)*(($11 + [136]))) ){ goto $label$22 }
	*($8 + [8]) = $1
	*($8 + [16]) = $5
	*($11 + [88]) = [0]
	*($8) = $7
	*($4) = ($8 + [24])
	goto $label$21 
	
.LABEL $label$22
	CALL $16(($11 + [128]), ($11 + [88]), ($11 + [72]), ($11 + [68]))
	
.LABEL $label$21
	$7 = *($11 + [88])
	*($11 + [88]) = [0]
	if ( ($7 == 0) ){ goto $label$23 }
	if ( ((*($7 + [24]) & [1]) == 0) ){ goto $label$24 }
	CALL $130(*(($7 + [32])))
	
.LABEL $label$24
	CALL $130($7)
	
.LABEL $label$23
	$5 = *($11 + [128])
	if ( ($5 == 0) ){ goto $label$25 }
	$4 = ($11 + [132])
	$7 = *($4)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$27 }
	
.LOOP $label$28:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$29 }
	if ( ((*($8 + [24]) & [1]) == 0) ){ goto $label$30 }
	CALL $130(*(($8 + [32])))
	
.LABEL $label$30
	CALL $130($8)
	
.LABEL $label$29
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$28 }
	$7 = *(($11 + [128]))
	goto $label$26 
	
.LABEL $label$27
	$7 = $5
	
.LABEL $label$26
	*($4) = $5
	CALL $130($7)
	
.LABEL $label$25
	*([0] + [4]) = ($11 + [144])
}

int_32 .FUNC $12 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [224])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $25($0, $5)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [224])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $13 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)4157012474184204289, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [40]) == (int_32)$4), [224])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $17($4, CALL $fimport$16(*($4), *($4 + [8]), (int_64)4157012474184204288, $5))
	CALL eosio_assert(((int_32)*($2 + [40]) == (int_32)$4), [224])
	
.LABEL $label$4
	*(($2 + [52])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $18 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [44]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [896])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)4157012474184204288)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [832])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [832])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $17(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $20($0, ($1 + [24]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[0]), [208])
	CALL memcpy(*($0 + [4]), ($1 + [36]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

int_32 .FUNC strcspn (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	$3 = *($1)
	if ( ($3 == 0) ){ goto $label$2 }
	if ( (*($1 + [1]) == 0) ){ goto $label$2 }
	CALL memset($4, [0], [32])
	$3 = *($1)
	if ( ($3 == 0) ){ goto $label$3 }
	$1 = ($1 + [1])
	
.LOOP $label$4:
	*(($2 = ($4 + uint_32(($3 & [224]) >> [3])))) = (*($2) | ([1] << ($3 & [31])))
	$3 = *($1)
	$1 = ($1 + [1])
	if ( $3 ){ goto $label$4 }
	
.LABEL $label$3
	$1 = $0
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$1 }
	$1 = $0
	
.LOOP $label$5:
	if ( (*(($4 + uint_32(($3 & [224]) >> [3]))) & ([1] << ($3 & [31]))) ){ goto $label$1 }
	$1 = ($1 + [1])
	$3 = *($1)
	if ( $3 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$2
	$1 = CALL __strchrnul($0, $3)
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [32])
	return ($1 - $0)
}

int_32 .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [32])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = ($8 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	CALL read_action_data($8, $1)
	
.LABEL $label$1
	*($10 + [16]) = (int_64)0
	*($10 + [8]) = (int_64)0
	*($10 + [24]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [320])
	CALL memcpy(($10 + [8]), $8, [8])
	$6 = ($1 & [-8])
	CALL eosio_assert(((int_32)$6 != (int_32)[8]), [320])
	$7 = (($10 + [8]) + [8])
	CALL memcpy($7, ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[16]), [320])
	$6 = (($10 + [8]) + [16])
	CALL memcpy($6, ($8 + [16]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($6)
	$4 = *($7)
	$3 = *($10 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$9 = *((*($1) + $9))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $5), (int_64 $9))
	*([0] + [4]) = ($10 + [32])
	return [1]
}

int_32 .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($1 + [4])
	$8 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	*($9) = (int_64)0
	*($9 + [16]) = (int_64)0
	*($9 + [24]) = (int_64)0
	*($9 + [36]) = $1
	*($9 + [32]) = $1
	*($9 + [40]) = ($1 + $3)
	*($9 + [48]) = ($9 + [32])
	*($9 + [56]) = $9
	CALL $118(($9 + [56]), ($9 + [48]))
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$7 = *(($9 + [24]))
	$6 = *(($9 + [16]))
	$5 = *(($9 + [8]))
	$4 = *($9)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$8 = *((*($1) + $8))
	
.LABEL $label$6
	CALL void $1((int_32 $4), (int_64 $5), (int_64 $6), (int_64 $7), (int_64 $8))
	*([0] + [4]) = ($9 + [64])
	return [1]
}

int_32 .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [64])
	*([0] + [4]) = $4
	*(($3 = $4) + [44]) = $0
	*($3 + [32]) = *($1)
	*($3 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($4 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($3 + [24])) = [0]
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [48]) = $1
	$4 = ($1 + $0)
	*($3 + [56]) = $4
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [320])
	CALL memcpy($3, $1, [8])
	$2 = ($1 + [8])
	CALL eosio_assert(((uint_32)($4 - $2) > (uint_32)[7]), [320])
	CALL memcpy(($3 + [8]), $2, [8])
	*($3 + [52]) = ($1 + [16])
	CALL $22(($3 + [48]), ($3 + [16]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($3 + [52]) = ($3 + [32])
	*($3 + [48]) = ($3 + [44])
	CALL $120(($3 + [48]), $3)
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $130(*(($3 + [24])))
	
.LABEL $label$5
	*([0] + [4]) = ($3 + [64])
	return [1]
}

int_32 .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [96])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = [0]
	$6 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $3)
	
.LABEL $label$1
	*((($10 + [16]) + [24])) = (int_64)1398362884
	*($10 + [24]) = (int_64)0
	*($10 + [16]) = (int_64)0
	*($10 + [32]) = (int_64)0
	CALL eosio_assert([1], [960])
	$7 = (int_64)5462355
	
.LOOP $label$5:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($8, [672])
	*($10 + [84]) = $6
	*($10 + [80]) = $6
	*($10 + [88]) = ($6 + $3)
	*($10 + [48]) = ($10 + [80])
	*($10 + [64]) = ($10 + [16])
	CALL $119(($10 + [64]), ($10 + [48]))
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($6)
	
.LABEL $label$8
	$7 = *((($10 + [16]) + [8]))
	*(($10 + [60])) = *(($10 + [44]))
	*(($1 = (($10 + [48]) + [8]))) = *(($10 + [40]))
	$4 = *($10 + [16])
	*($10 + [48]) = *($10 + [32])
	*($10 + [52]) = *(($10 + [36]))
	*((($10 + [64]) + [8])) = *($1)
	*($10 + [64]) = *($10 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$9 = *((*($1) + $9))
	
.LABEL $label$9
	$5 = *((($10 + [64]) + [8]))
	*((($10 + [80]) + [8])) = $5
	*(($10 + [8])) = $5
	$5 = *($10 + [64])
	*($10 + [80]) = $5
	*($10) = $5
	CALL void $1((int_32 $4), (int_64 $7), (int_64 $10), (int_32 $9))
	*([0] + [4]) = ($10 + [96])
	return [1]
}

void .FUNC $112 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = *([0] + [4])
	$3 = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	CALL $121($0, $2, $1)
	*([0] + [4]) = $3
}

int_32 .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [320])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [320])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

int_32 .FUNC _ZN5eosio8exchange7is_uintERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = ($6 & [1])
	$6 = *($1)
	$3 = *($1 + [4])
	if ( ((int_32)( $3 ? uint_32($6 >> [1]) : $7 ) != (int_32)[1]) ){ goto $label$2 }
	$8 = [1]
	if ( CALL isdigit(*(( *($1 + [8]) ? ($1 + [1]) : $7 ))) ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$6 = *($1)
	
.LABEL $label$2
	$8 = [1]
	if ( (( $3 ? uint_32(($6 & [254]) >> [1]) : ($6 & [1]) ) == 0) ){ goto $label$1 }
	$2 = ($1 + [1])
	$3 = [0]
	$4 = ($1 + [8])
	$5 = ($1 + [4])
	
.LOOP $label$3:
	if ( ($3 == 0) ){ goto $label$5 }
	$7 = *($4)
	goto $label$4 
	
.LABEL $label$5
	$8 = [0]
	if ( (CALL isdigit(*(( *($4) ? $2 : ($6 & [1]) ))) == 0) ){ goto $label$1 }
	$6 = *($1)
	$7 = *($4)
	if ( ((int_32)*(( $7 ? $2 : ($6 & [1]) )) == (int_32)[48]) ){ goto $label$1 }
	
.LABEL $label$4
	if ( (CALL isdigit(*((( $7 ? $2 : ($6 & [1]) ) + $3))) == 0) ){ goto $label$6 }
	$8 = [1]
	$6 = *($1)
	$3 = ($3 + [1])
	if ( ($3 <= ( *($5) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$6
	$8 = [0]
	
.LABEL $label$1
	return $8
}

void .FUNC _ZN5eosio8exchange5applyEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	$18 = (*([0] + [4]) - [672])
	*([0] + [4]) = $18
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1168]
	$12 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$11 > (uint_64)(int_64)7) ){ goto $label$6 }
	$3 = *($9)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$2
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$12 != (int_64)$2) ){ goto $label$94 }
	CALL $112(($18 + [624]))
	if ( ((int_64)*($18 + [632]) != (int_64)*($0)) ){ goto $label$93 }
	*(($18 + [600])) = [0]
	*($18 + [592]) = (int_64)0
	$9 = CALL strlen([3056])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$18 }
	$4 = ($18 + [656])
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$92 }
	*($18 + [592]) = ($9 << [1])
	$3 = (($18 + [592]) | [1])
	if ( $9 ){ goto $label$91 }
	goto $label$90 
	
.LABEL $label$94
	if ( ((int_64)*($0) != (int_64)$1) ){ goto $label$7 }
	if ( ((int_64)$2 <= (int_64)3626093248789590415) ){ goto $label$89 }
	if ( ((int_64)$2 <= (int_64)5377987766986741039) ){ goto $label$85 }
	if ( ((int_64)$2 == (int_64)5377987766986741040) ){ goto $label$78 }
	if ( ((int_64)$2 == (int_64)5377993503836713360) ){ goto $label$77 }
	if ( ((int_64)$2 != (int_64)5378311985377680752) ){ goto $label$73 }
	*($18 + [252]) = [0]
	*($18 + [248]) = [1]
	*($18 + [176 align=4]) = *($18 + [248])
	CALL $113($0, ($18 + [176]))
	goto $label$7 
	
.LABEL $label$93
	$4 = ($18 + [656])
	goto $label$8 
	
.LABEL $label$92
	$14 = (($9 + [16]) & [-16])
	$3 = CALL $128($14)
	*($18 + [592]) = ($14 | [1])
	*($18 + [600]) = $3
	*($18 + [596]) = $9
	
.LABEL $label$91
	CALL memcpy($3, [3056], $9)
	
.LABEL $label$90
	*(($3 + $9)) = [0]
	CALL _ZN5eosio8exchange5splitERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(($18 + [608]), $9, $4, ($18 + [592]))
	if ( ((*($18 + [592]) & [1]) == 0) ){ goto $label$95 }
	CALL $130(*($18 + [600]))
	
.LABEL $label$95
	if ( ((int_32)(*($18 + [612]) - *($18 + [608])) != (int_32)[24]) ){ goto $label$21 }
	CALL eosio_assert(((int_32)CALL $6($0, *($18 + [624])) ^ (int_32)[1]), [3072])
	$14 = *($18 + [608])
	*(($18 + [600])) = [0]
	*($18 + [592]) = (int_64)0
	$9 = CALL strlen([3104])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$17 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$88 }
	*($18 + [592]) = ($9 << [1])
	$3 = (($18 + [592]) | [1])
	if ( $9 ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$89
	if ( ((int_64)$2 > (int_64)-4417016785015510673) ){ goto $label$84 }
	if ( ((int_64)$2 == (int_64)-7297956334200941264) ){ goto $label$76 }
	if ( ((int_64)$2 != (int_64)-4848822782482797056) ){ goto $label$73 }
	*($18 + [220]) = [0]
	*($18 + [216]) = [2]
	*($18 + [208 align=4]) = *($18 + [216])
	CALL $113($0, ($18 + [208]))
	goto $label$7 
	
.LABEL $label$88
	$15 = (($9 + [16]) & [-16])
	$3 = CALL $128($15)
	*($18 + [592]) = ($15 | [1])
	*($18 + [600]) = $3
	*($18 + [596]) = $9
	
.LABEL $label$87
	CALL memcpy($3, [3104], $9)
	
.LABEL $label$86
	$16 = [0]
	*(($3 + $9)) = [0]
	$9 = ($15 & [1])
	$15 = *($18 + [592])
	$5 = ($9 & [1])
	$9 = *($14)
	$6 = uint_32($9 >> [1])
	$7 = ( *($14 + [4]) ? $6 : $5 )
	if ( ((int_32)$7 != (int_32)( *($18 + [596]) ? uint_32($15 >> [1]) : $9 )) ){ goto $label$81 }
	$9 = ( *($18 + [600]) ? (($18 + [592]) | [1]) : $9 )
	$3 = ($14 + [1])
	if ( $5 ){ goto $label$83 }
	if ( ($7 == 0) ){ goto $label$82 }
	$16 = [0]
	$14 = ([0] - $6)
	
.LOOP $label$96:
	if ( ((int_32)*($3) != (int_32)*($9)) ){ goto $label$81 }
	$9 = ($9 + [1])
	$3 = ($3 + [1])
	$14 = ($14 + [1])
	if ( $14 ){ goto $label$96 }
	goto $label$82 
	
.LABEL $label$85
	if ( ((int_64)$2 == (int_64)3626093248789590416) ){ goto $label$75 }
	if ( ((int_64)$2 != (int_64)4730614996831743488) ){ goto $label$73 }
	*($18 + [228]) = [0]
	*($18 + [224]) = [3]
	*($18 + [200 align=4]) = *($18 + [224])
	CALL $117($0, ($18 + [200]))
	goto $label$7 
	
.LABEL $label$84
	if ( ((int_64)$2 == (int_64)-4417016785015510672) ){ goto $label$74 }
	if ( ((int_64)$2 != (int_64)-4417016564897082368) ){ goto $label$73 }
	*($18 + [244]) = [0]
	*($18 + [240]) = [4]
	*($18 + [184 align=4]) = *($18 + [240])
	CALL $115($0, ($18 + [184]))
	goto $label$7 
	
.LABEL $label$83
	if ( ($7 == 0) ){ goto $label$82 }
	$16 = (CALL memcmp(( *($14 + [8]) ? $3 : $5 ), $9, $7) == 0)
	if ( (*($18 + [592]) & [1]) ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$82
	$16 = [1]
	
.LABEL $label$81
	if ( (($15 & [1]) == 0) ){ goto $label$79 }
	
.LABEL $label$80
	CALL $130(*($18 + [600]))
	
.LABEL $label$79
	if ( ($16 == 0) ){ goto $label$105 }
	$3 = *($18 + [608])
	*(($18 + [584])) = [0]
	*($18 + [576]) = (int_64)0
	$9 = CALL strlen([3120])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$16 }
	$14 = ($3 + [12])
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$104 }
	*($18 + [576]) = ($9 << [1])
	$3 = (($18 + [576]) | [1])
	if ( $9 ){ goto $label$103 }
	goto $label$102 
	
.LABEL $label$105
	$14 = *($18 + [608])
	*(($18 + [600])) = [0]
	*($18 + [592]) = (int_64)0
	$9 = CALL strlen([3168])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$101 }
	*($18 + [592]) = ($9 << [1])
	$3 = (($18 + [592]) | [1])
	if ( $9 ){ goto $label$100 }
	goto $label$99 
	
.LABEL $label$104
	$15 = (($9 + [16]) & [-16])
	$3 = CALL $128($15)
	*($18 + [576]) = ($15 | [1])
	*($18 + [584]) = $3
	*($18 + [580]) = $9
	
.LABEL $label$103
	CALL memcpy($3, [3120], $9)
	
.LABEL $label$102
	*(($3 + $9)) = [0]
	CALL _ZN5eosio8exchange5splitERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(($18 + [592]), $9, $14, ($18 + [576]))
	if ( ((*($18 + [576]) & [1]) == 0) ){ goto $label$106 }
	CALL $130(*($18 + [584]))
	
.LABEL $label$106
	CALL eosio_assert(((((int_32)(*($18 + [596]) - *($18 + [592])) / (int_32)[12]) + [-3]) <= [4]), [3136])
	CALL eosio_assert(CALL $110($9, *($18 + [592])), [3136])
	$9 = *($18 + [592])
	if ( (*($9) & [1]) ){ goto $label$98 }
	$9 = ($9 + [1])
	goto $label$97 
	
.LABEL $label$101
	$15 = (($9 + [16]) & [-16])
	$3 = CALL $128($15)
	*($18 + [592]) = ($15 | [1])
	*($18 + [600]) = $3
	*($18 + [596]) = $9
	
.LABEL $label$100
	CALL memcpy($3, [3168], $9)
	
.LABEL $label$99
	$16 = [0]
	*(($3 + $9)) = [0]
	$9 = ($15 & [1])
	$15 = *($18 + [592])
	$5 = ($9 & [1])
	$9 = *($14)
	$6 = uint_32($9 >> [1])
	$7 = ( *($14 + [4]) ? $6 : $5 )
	if ( ((int_32)$7 != (int_32)( *($18 + [596]) ? uint_32($15 >> [1]) : $9 )) ){ goto $label$70 }
	$9 = ( *($18 + [600]) ? (($18 + [592]) | [1]) : $9 )
	$3 = ($14 + [1])
	if ( $5 ){ goto $label$72 }
	if ( ($7 == 0) ){ goto $label$71 }
	$16 = [0]
	$14 = ([0] - $6)
	
.LOOP $label$107:
	if ( ((int_32)*($3) != (int_32)*($9)) ){ goto $label$70 }
	$9 = ($9 + [1])
	$3 = ($3 + [1])
	$14 = ($14 + [1])
	if ( $14 ){ goto $label$107 }
	goto $label$71 
	
.LABEL $label$98
	$9 = *($9 + [8])
	
.LABEL $label$97
	$11 = ((int_64)CALL atoll($9) + (int_64)-1)
	CALL eosio_assert((uint_64)($11 <= (int_64)4), [3136])
	if ( ((uint_64)$11 > (uint_64)(int_64)3) ){ goto $label$23 }
	goto $label$108 
	
.LABEL $label$108
	CALL eosio_assert(CALL $110($9, (*($18 + [592]) + [12])), [3136])
	$9 = *($18 + [592])
	if ( (*($9 + [12]) & [1]) ){ goto $label$62 }
	$9 = (($9 + [12]) + [1])
	goto $label$61 
	
.LABEL $label$78
	*($18 + [260]) = [0]
	*($18 + [256]) = [5]
	*($18 + [168 align=4]) = *($18 + [256])
	CALL $113($0, ($18 + [168]))
	goto $label$7 
	
.LABEL $label$77
	*($18 + [276]) = [0]
	*($18 + [272]) = [6]
	*($18 + [152 align=4]) = *($18 + [272])
	CALL $113($0, ($18 + [152]))
	goto $label$7 
	
.LABEL $label$76
	*($18 + [268]) = [0]
	*($18 + [264]) = [7]
	*($18 + [160 align=4]) = *($18 + [264])
	CALL $114($0, ($18 + [160]))
	goto $label$7 
	
.LABEL $label$75
	*($18 + [284]) = [0]
	*($18 + [280]) = [8]
	*($18 + [144 align=4]) = *($18 + [280])
	CALL $113($0, ($18 + [144]))
	goto $label$7 
	
.LABEL $label$74
	*($18 + [236]) = [0]
	*($18 + [232]) = [9]
	*($18 + [192 align=4]) = *($18 + [232])
	CALL $116($0, ($18 + [192]))
	goto $label$7 
	
.LABEL $label$73
	CALL eosio_assert([0], [3232])
	goto $label$7 
	
.LABEL $label$72
	if ( ($7 == 0) ){ goto $label$71 }
	$16 = (CALL memcmp(( *($14 + [8]) ? $3 : $5 ), $9, $7) == 0)
	if ( (*($18 + [592]) & [1]) ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$71
	$16 = [1]
	
.LABEL $label$70
	if ( (($15 & [1]) == 0) ){ goto $label$68 }
	
.LABEL $label$69
	CALL $130(*($18 + [600]))
	
.LABEL $label$68
	if ( ($16 == 0) ){ goto $label$21 }
	$11 = (int_64)0
	$13 = (int_64)59
	$9 = [1248]
	$12 = (int_64)0
	
.LOOP $label$109:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$110 }
	$3 = *($9)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$112 }
	$3 = ($3 + [165])
	goto $label$111 
	
.LABEL $label$112
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$111
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$110
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$109 }
	if ( ((int_64)$12 != (int_64)$1) ){ goto $label$21 }
	if ( ((uint_64)((int_64)*(($18 + [648])) ^ (int_64)5521920) > (uint_64)(int_64)255) ){ goto $label$21 }
	$16 = ($18 + [640])
	CALL eosio_assert(((int_64)*($16) > (int_64)19999999), [3184])
	$3 = *($18 + [608])
	*(($18 + [584])) = [0]
	*($18 + [576]) = (int_64)0
	$9 = CALL strlen([3120])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$14 }
	$14 = ($3 + [12])
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$38 }
	*($18 + [576]) = ($9 << [1])
	$3 = (($18 + [576]) | [1])
	if ( $9 ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$67
	CALL eosio_assert(CALL $110($9, (*($18 + [592]) + [12])), [3136])
	$9 = *($18 + [592])
	if ( (*($9 + [12]) & [1]) ){ goto $label$64 }
	$9 = (($9 + [12]) + [1])
	goto $label$63 
	
.LABEL $label$66
	CALL eosio_assert(CALL $110($9, (*($18 + [592]) + [12])), [3136])
	$9 = *($18 + [592])
	if ( (*($9 + [12]) & [1]) ){ goto $label$60 }
	$9 = (($9 + [12]) + [1])
	goto $label$59 
	
.LABEL $label$65
	CALL eosio_assert(CALL $110($9, (*($18 + [592]) + [12])), [3136])
	$9 = *($18 + [592])
	if ( (*($9 + [12]) & [1]) ){ goto $label$58 }
	$9 = (($9 + [12]) + [1])
	goto $label$57 
	
.LABEL $label$64
	$9 = *(($9 + [20]))
	
.LABEL $label$63
	$11 = CALL atoll($9)
	CALL eosio_assert(CALL $110($9, (*($18 + [592]) + [24])), [3136])
	$9 = *($18 + [592])
	if ( (*($9 + [24]) & [1]) ){ goto $label$114 }
	$9 = (($9 + [24]) + [1])
	goto $label$113 
	
.LABEL $label$114
	$9 = *(($9 + [32]))
	
.LABEL $label$113
	$13 = CALL atoll($9)
	$14 = *($18 + [592])
	$9 = ((int_32)(*($18 + [596]) - $14) / (int_32)[12])
	if ( ((int_32)$9 == (int_32)[4]) ){ goto $label$42 }
	if ( ((int_32)$9 != (int_32)[3]) ){ goto $label$22 }
	*((($18 + [432]) + [8])) = *(($18 + [648]))
	*((($18 + [416]) + [8])) = [0]
	$10 = *($18 + [624])
	*($18 + [432]) = *($18 + [640])
	*($18 + [416]) = (int_64)0
	$9 = CALL strlen([2768])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$35 }
	*($18 + [416]) = ($9 << [1])
	$3 = (($18 + [416]) | [1])
	if ( $9 ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$62
	$9 = *(($9 + [20]))
	
.LABEL $label$61
	$10 = CALL atoll($9)
	CALL eosio_assert(CALL $110($9, (*($18 + [592]) + [24])), [3136])
	$9 = *($18 + [592])
	if ( (*($9 + [24]) & [1]) ){ goto $label$56 }
	$9 = (($9 + [24]) + [1])
	goto $label$55 
	
.LABEL $label$60
	$9 = *(($9 + [20]))
	
.LABEL $label$59
	$10 = CALL atoll($9)
	CALL eosio_assert(CALL $110($9, (*($18 + [592]) + [24])), [3136])
	$9 = *($18 + [592])
	if ( (*($9 + [24]) & [1]) ){ goto $label$54 }
	$9 = (($9 + [24]) + [1])
	goto $label$53 
	
.LABEL $label$58
	$9 = *(($9 + [20]))
	
.LABEL $label$57
	$11 = CALL atoll($9)
	CALL eosio_assert(CALL $110($9, (*($18 + [592]) + [24])), [3136])
	$9 = *($18 + [592])
	if ( (*($9 + [24]) & [1]) ){ goto $label$52 }
	$9 = (($9 + [24]) + [1])
	goto $label$51 
	
.LABEL $label$56
	$9 = *(($9 + [32]))
	
.LABEL $label$55
	$12 = CALL atoll($9)
	CALL eosio_assert(CALL $110($9, (*($18 + [592]) + [36])), [3136])
	$9 = *($18 + [592])
	if ( (*($9 + [36]) & [1]) ){ goto $label$50 }
	$9 = (($9 + [36]) + [1])
	goto $label$49 
	
.LABEL $label$54
	$9 = *(($9 + [32]))
	
.LABEL $label$53
	$12 = CALL atoll($9)
	CALL eosio_assert(CALL $110($9, (*($18 + [592]) + [36])), [3136])
	$9 = *($18 + [592])
	if ( (*($9 + [36]) & [1]) ){ goto $label$48 }
	$9 = (($9 + [36]) + [1])
	goto $label$47 
	
.LABEL $label$52
	$9 = *(($9 + [32]))
	
.LABEL $label$51
	$13 = CALL atoll($9)
	$14 = *($18 + [592])
	$9 = ((int_32)(*($18 + [596]) - $14) / (int_32)[12])
	if ( ((int_32)$9 == (int_32)[4]) ){ goto $label$41 }
	if ( ((int_32)$9 != (int_32)[3]) ){ goto $label$22 }
	*((($18 + [368]) + [8])) = *(($18 + [648]))
	*((($18 + [352]) + [8])) = [0]
	$10 = *($18 + [624])
	*($18 + [368]) = *($18 + [640])
	*($18 + [352]) = (int_64)0
	$9 = CALL strlen([2768])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$32 }
	*($18 + [352]) = ($9 << [1])
	$3 = (($18 + [352]) | [1])
	if ( $9 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$50
	$9 = *(($9 + [44]))
	
.LABEL $label$49
	$13 = CALL atoll($9)
	CALL eosio_assert(((int_64)$13 > (int_64)0), [3136])
	CALL eosio_assert(CALL $110($9, (*($18 + [592]) + [48])), [3136])
	$9 = *($18 + [592])
	if ( (*($9 + [48]) & [1]) ){ goto $label$46 }
	$9 = (($9 + [48]) + [1])
	goto $label$45 
	
.LABEL $label$48
	$9 = *(($9 + [44]))
	
.LABEL $label$47
	$13 = CALL atoll($9)
	CALL eosio_assert(((int_64)$13 > (int_64)0), [3136])
	CALL eosio_assert(CALL $110($9, (*($18 + [592]) + [48])), [3136])
	$9 = *($18 + [592])
	if ( (*($9 + [48]) & [1]) ){ goto $label$44 }
	$9 = (($9 + [48]) + [1])
	goto $label$43 
	
.LABEL $label$46
	$9 = *(($9 + [56]))
	
.LABEL $label$45
	$11 = CALL atoll($9)
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$11 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [3136])
	CALL eosio_assert(((int_64)$11 < (int_64)9), [3136])
	$17 = (CASTING float_64)(int_64 $13)
	if ( ((int_64)$11 < (int_64)1) ){ goto $label$115 }
	
.LOOP $label$116:
	$17 = ((float_64)$17 / (float_64)(float_64)10)
	$11 = ((int_64)$11 + (int_64)-1)
	if ( ((int_64)($11 == 0) == 0) ){ goto $label$116 }
	
.LABEL $label$115
	$14 = *($18 + [592])
	$9 = ((int_32)(*($18 + [596]) - $14) / (int_32)[12])
	if ( ((int_32)$9 == (int_32)[5]) ){ goto $label$40 }
	if ( ((int_32)$9 != (int_32)[6]) ){ goto $label$22 }
	CALL $147(($18 + [576]), ($14 + [60]))
	*(($9 = (($18 + [528]) + [8]))) = *(($18 + [648]))
	$11 = *($18 + [624])
	*($18 + [528]) = *($18 + [640])
	CALL $147(($18 + [512]), ($18 + [576]))
	*((($18 + [16]) + [8])) = *($9)
	*($18 + [16]) = *($18 + [528])
	CALL _ZN5eosio8exchange3buyEyyyydNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $11, $10, $1, $12, $17, ($18 + [16]), ($18 + [512]))
	if ( ((*($18 + [512]) & [1]) == 0) ){ goto $label$117 }
	CALL $130(*($18 + [520]))
	
.LABEL $label$117
	if ( ((*($18 + [576]) & [1]) == 0) ){ goto $label$23 }
	CALL $130(*($18 + [584]))
	goto $label$23 
	
.LABEL $label$44
	$9 = *(($9 + [56]))
	
.LABEL $label$43
	$11 = CALL atoll($9)
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$11 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [3136])
	CALL eosio_assert(((int_64)$11 < (int_64)9), [3136])
	$17 = (CASTING float_64)(int_64 $13)
	if ( ((int_64)$11 < (int_64)1) ){ goto $label$118 }
	
.LOOP $label$119:
	$17 = ((float_64)$17 / (float_64)(float_64)10)
	$11 = ((int_64)$11 + (int_64)-1)
	if ( ((int_64)($11 == 0) == 0) ){ goto $label$119 }
	
.LABEL $label$118
	$14 = *($18 + [592])
	$9 = ((int_32)(*($18 + [596]) - $14) / (int_32)[12])
	if ( ((int_32)$9 == (int_32)[5]) ){ goto $label$39 }
	if ( ((int_32)$9 != (int_32)[6]) ){ goto $label$22 }
	CALL $147(($18 + [576]), ($14 + [60]))
	*(($9 = (($18 + [464]) + [8]))) = *(($18 + [648]))
	$11 = *($18 + [624])
	*($18 + [464]) = *($18 + [640])
	CALL $147(($18 + [448]), ($18 + [576]))
	*((($18 + [48]) + [8])) = *($9)
	*($18 + [48]) = *($18 + [464])
	CALL _ZN5eosio8exchange4sellEyyyydNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $11, $10, $12, $1, $17, ($18 + [48]), ($18 + [448]))
	if ( ((*($18 + [448]) & [1]) == 0) ){ goto $label$120 }
	CALL $130(*($18 + [456]))
	
.LABEL $label$120
	if ( ((*($18 + [576]) & [1]) == 0) ){ goto $label$23 }
	CALL $130(*($18 + [584]))
	goto $label$23 
	
.LABEL $label$42
	CALL $147(($18 + [576]), ($14 + [36]))
	*(($9 = (($18 + [400]) + [8]))) = *(($18 + [648]))
	$10 = *($18 + [624])
	*($18 + [400]) = *($18 + [640])
	CALL $147(($18 + [384]), ($18 + [576]))
	*((($18 + [80]) + [8])) = *($9)
	*($18 + [80]) = *($18 + [400])
	CALL _ZN5eosio8exchange19buy_by_market_priceEyyyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $10, $11, $1, $13, ($18 + [80]), ($18 + [384]))
	if ( ((*($18 + [384]) & [1]) == 0) ){ goto $label$121 }
	CALL $130(*($18 + [392]))
	
.LABEL $label$121
	if ( ((*($18 + [576]) & [1]) == 0) ){ goto $label$23 }
	CALL $130(*($18 + [584]))
	goto $label$23 
	
.LABEL $label$41
	CALL $147(($18 + [576]), ($14 + [36]))
	*(($9 = (($18 + [336]) + [8]))) = *(($18 + [648]))
	$10 = *($18 + [624])
	*($18 + [336]) = *($18 + [640])
	CALL $147(($18 + [320]), ($18 + [576]))
	*((($18 + [112]) + [8])) = *($9)
	*($18 + [112]) = *($18 + [336])
	CALL _ZN5eosio8exchange20sell_by_market_priceEyyyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $10, $11, $13, $1, ($18 + [112]), ($18 + [320]))
	if ( ((*($18 + [320]) & [1]) == 0) ){ goto $label$122 }
	CALL $130(*($18 + [328]))
	
.LABEL $label$122
	if ( ((*($18 + [576]) & [1]) == 0) ){ goto $label$23 }
	CALL $130(*($18 + [584]))
	goto $label$23 
	
.LABEL $label$40
	*((($18 + [560]) + [8])) = *(($18 + [648]))
	*((($18 + [544]) + [8])) = [0]
	$11 = *($18 + [624])
	*($18 + [560]) = *($18 + [640])
	*($18 + [544]) = (int_64)0
	$9 = CALL strlen([2768])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$29 }
	*($18 + [544]) = ($9 << [1])
	$3 = (($18 + [544]) | [1])
	if ( $9 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$39
	*((($18 + [496]) + [8])) = *(($18 + [648]))
	*((($18 + [480]) + [8])) = [0]
	$11 = *($18 + [624])
	*($18 + [496]) = *($18 + [640])
	*($18 + [480]) = (int_64)0
	$9 = CALL strlen([2768])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$26 }
	*($18 + [480]) = ($9 << [1])
	$3 = (($18 + [480]) | [1])
	if ( $9 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$38
	$15 = (($9 + [16]) & [-16])
	$3 = CALL $128($15)
	*($18 + [576]) = ($15 | [1])
	*($18 + [584]) = $3
	*($18 + [580]) = $9
	
.LABEL $label$37
	CALL memcpy($3, [3120], $9)
	
.LABEL $label$36
	*(($3 + $9)) = [0]
	CALL _ZN5eosio8exchange5splitERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(($18 + [592]), $9, $14, ($18 + [576]))
	if ( ((*($18 + [576]) & [1]) == 0) ){ goto $label$123 }
	CALL $130(*($18 + [584]))
	
.LABEL $label$123
	CALL eosio_assert(((int_32)(*($18 + [596]) - *($18 + [592])) == (int_32)[48]), [3136])
	CALL eosio_assert(CALL $110($9, *($18 + [592])), [3136])
	$9 = *($18 + [592])
	if ( (*($9) & [1]) ){ goto $label$125 }
	$9 = ($9 + [1])
	goto $label$124 
	
.LABEL $label$125
	$9 = *($9 + [8])
	
.LABEL $label$124
	$1 = CALL atoll($9)
	CALL eosio_assert(CALL $110($9, (*($18 + [592]) + [12])), [3136])
	$9 = *($18 + [592])
	if ( (*($9 + [12]) & [1]) ){ goto $label$127 }
	$9 = (($9 + [12]) + [1])
	goto $label$126 
	
.LABEL $label$127
	$9 = *(($9 + [20]))
	
.LABEL $label$126
	$8 = CALL atoll($9)
	$5 = *($18 + [592])
	if ( (*($5 + [24]) & [1]) ){ goto $label$129 }
	$9 = (($5 + [24]) + [1])
	goto $label$128 
	
.LABEL $label$129
	$9 = *(($5 + [32]))
	
.LABEL $label$128
	$3 = [-1]
	
.LOOP $label$130:
	$14 = ($9 + $3)
	$15 = ($3 + [1])
	$3 = $15
	if ( *(($14 + [1])) ){ goto $label$130 }
	$2 = (CASTING uint_64)(uint_32 $15)
	$11 = (int_64)0
	$13 = (int_64)59
	$12 = (int_64)0
	
.LOOP $label$131:
	$10 = (int_64)0
	if ( ((uint_64)$11 >= (uint_64)$2) ){ goto $label$132 }
	$3 = *($9)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$134 }
	$3 = ($3 + [165])
	goto $label$133 
	
.LABEL $label$134
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$133
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$132
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$136 }
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	goto $label$135 
	
.LABEL $label$136
	$10 = ((int_64)$10 & (int_64)15)
	
.LABEL $label$135
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$131 }
	CALL $147(($18 + [576]), ($5 + [36]))
	$11 = *($18 + [624])
	CALL $147(($18 + [304]), ($18 + [576]))
	*(($9 = (($18 + [288]) + [8]))) = *(($16 + [8]))
	$13 = *($16)
	*((($18 + [128]) + [12])) = *((($18 + [288]) + [12]))
	*((($18 + [128]) + [8])) = *($9)
	*($18 + [288]) = $13
	*($18 + [132]) = *($18 + [292])
	*($18 + [128]) = *($18 + [288])
	CALL _ZN5eosio8exchange12newtokenpairEyyyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_5assetE($0, $11, $1, $8, $12, ($18 + [304]), ($18 + [128]))
	if ( ((*($18 + [304]) & [1]) == 0) ){ goto $label$137 }
	CALL $130(*($18 + [312]))
	
.LABEL $label$137
	if ( ((*($18 + [576]) & [1]) == 0) ){ goto $label$138 }
	CALL $130(*($18 + [584]))
	
.LABEL $label$138
	$0 = *($18 + [592])
	if ( ($0 == 0) ){ goto $label$21 }
	$9 = *($18 + [596])
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$20 }
	$3 = ([0] - $0)
	$9 = ($9 + [-12])
	
.LOOP $label$139:
	if ( ((*($9) & [1]) == 0) ){ goto $label$140 }
	CALL $130(*(($9 + [8])))
	
.LABEL $label$140
	$9 = ($9 + [-12])
	if ( ((int_32)($9 + $3) != (int_32)[-12]) ){ goto $label$139 }
	$9 = *($18 + [592])
	goto $label$19 
	
.LABEL $label$35
	$14 = (($9 + [16]) & [-16])
	$3 = CALL $128($14)
	*($18 + [416]) = ($14 | [1])
	*($18 + [424]) = $3
	*($18 + [420]) = $9
	
.LABEL $label$34
	CALL memcpy($3, [2768], $9)
	
.LABEL $label$33
	*(($3 + $9)) = [0]
	*((($18 + [64]) + [8])) = *((($18 + [432]) + [8]))
	*($18 + [64]) = *($18 + [432])
	CALL _ZN5eosio8exchange19buy_by_market_priceEyyyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $10, $11, $1, $13, ($18 + [64]), ($18 + [416]))
	if ( ((*($18 + [416]) & [1]) == 0) ){ goto $label$23 }
	CALL $130(*($18 + [424]))
	goto $label$23 
	
.LABEL $label$32
	$14 = (($9 + [16]) & [-16])
	$3 = CALL $128($14)
	*($18 + [352]) = ($14 | [1])
	*($18 + [360]) = $3
	*($18 + [356]) = $9
	
.LABEL $label$31
	CALL memcpy($3, [2768], $9)
	
.LABEL $label$30
	*(($3 + $9)) = [0]
	*((($18 + [96]) + [8])) = *((($18 + [368]) + [8]))
	*($18 + [96]) = *($18 + [368])
	CALL _ZN5eosio8exchange20sell_by_market_priceEyyyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $10, $11, $13, $1, ($18 + [96]), ($18 + [352]))
	if ( ((*($18 + [352]) & [1]) == 0) ){ goto $label$23 }
	CALL $130(*($18 + [360]))
	goto $label$23 
	
.LABEL $label$29
	$14 = (($9 + [16]) & [-16])
	$3 = CALL $128($14)
	*($18 + [544]) = ($14 | [1])
	*($18 + [552]) = $3
	*($18 + [548]) = $9
	
.LABEL $label$28
	CALL memcpy($3, [2768], $9)
	
.LABEL $label$27
	*(($3 + $9)) = [0]
	*(($18 + [8])) = *((($18 + [560]) + [8]))
	*($18) = *($18 + [560])
	CALL _ZN5eosio8exchange3buyEyyyydNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $11, $10, $1, $12, $17, $18, ($18 + [544]))
	if ( ((*($18 + [544]) & [1]) == 0) ){ goto $label$23 }
	CALL $130(*($18 + [552]))
	goto $label$23 
	
.LABEL $label$26
	$14 = (($9 + [16]) & [-16])
	$3 = CALL $128($14)
	*($18 + [480]) = ($14 | [1])
	*($18 + [488]) = $3
	*($18 + [484]) = $9
	
.LABEL $label$25
	CALL memcpy($3, [2768], $9)
	
.LABEL $label$24
	*(($3 + $9)) = [0]
	*((($18 + [32]) + [8])) = *((($18 + [496]) + [8]))
	*($18 + [32]) = *($18 + [496])
	CALL _ZN5eosio8exchange4sellEyyyydNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $11, $10, $12, $1, $17, ($18 + [32]), ($18 + [480]))
	if ( ((*($18 + [480]) & [1]) == 0) ){ goto $label$23 }
	CALL $130(*($18 + [488]))
	
.LABEL $label$23
	$14 = *($18 + [592])
	
.LABEL $label$22
	if ( ($14 == 0) ){ goto $label$21 }
	$9 = *($18 + [596])
	if ( ((int_32)$9 == (int_32)$14) ){ goto $label$142 }
	$3 = ([0] - $14)
	$9 = ($9 + [-12])
	
.LOOP $label$143:
	if ( ((*($9) & [1]) == 0) ){ goto $label$144 }
	CALL $130(*(($9 + [8])))
	
.LABEL $label$144
	$9 = ($9 + [-12])
	if ( ((int_32)($9 + $3) != (int_32)[-12]) ){ goto $label$143 }
	$9 = *($18 + [592])
	goto $label$141 
	
.LABEL $label$142
	$9 = $14
	
.LABEL $label$141
	*($18 + [596]) = $14
	CALL $130($9)
	
.LABEL $label$21
	$0 = *($18 + [608])
	if ( ($0 == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$20
	$9 = $0
	
.LABEL $label$19
	*($18 + [596]) = $0
	CALL $130($9)
	$0 = *($18 + [608])
	if ( $0 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$18
	CALL $132(($18 + [592]))
	
.LABEL $label$17
	CALL $132(($18 + [592]))
	
.LABEL $label$16
	CALL $132(($18 + [576]))
	
.LABEL $label$15
	CALL $132(($18 + [592]))
	
.LABEL $label$14
	CALL $132(($18 + [576]))
	
.LABEL $label$13
	CALL $132(($18 + [416]))
	
.LABEL $label$12
	CALL $132(($18 + [352]))
	
.LABEL $label$11
	CALL $132(($18 + [544]))
	
.LABEL $label$10
	CALL $132(($18 + [480]))
	
.LABEL $label$9
	$9 = *($18 + [612])
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$146 }
	$3 = ([0] - $0)
	$9 = ($9 + [-12])
	
.LOOP $label$147:
	if ( ((*($9) & [1]) == 0) ){ goto $label$148 }
	CALL $130(*(($9 + [8])))
	
.LABEL $label$148
	$9 = ($9 + [-12])
	if ( ((int_32)($9 + $3) != (int_32)[-12]) ){ goto $label$147 }
	$9 = *($18 + [608])
	goto $label$145 
	
.LABEL $label$146
	$9 = $0
	
.LABEL $label$145
	*($18 + [612]) = $0
	CALL $130($9)
	
.LABEL $label$8
	if ( ((*($4) & [1]) == 0) ){ goto $label$7 }
	CALL $130(*(($18 + [664])))
	
.LABEL $label$7
	*([0] + [4]) = ($18 + [672])
	(CASTING uint_32)(uint_64 $11)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [320])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [320])
	CALL memcpy(($0 + [16]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [320])
	CALL memcpy(($0 + [24]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [320])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [320])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$1 = (*($3 + [4]) + [8])
	*($3 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $1) > (uint_32)[7]), [320])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC _ZN5eosio8exchange12delbasetokenEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [112])
	*([0] + [4]) = $7
	*($7 + [96]) = $2
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$40($1), [16])
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [48])
	*((($7 + [56]) + [32])) = [0]
	*($7 + [72]) = (int_64)-1
	*($7 + [80]) = (int_64)0
	$5 = *($0)
	*($7 + [56]) = $5
	*($7 + [64]) = $5
	*($7 + [92]) = [0]
	$3 = [0]
	$6 = CALL db_find_i64($5, $5, (int_64)4157012474184204288, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $17(($7 + [56]), $6)
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)($7 + [56])), [224])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [1024])
	*((($7 + [8]) + [32])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($0)
	*($7 + [8]) = $5
	*($7 + [16]) = $5
	*($7 + [44 align=4]) = (int_64)0
	*($7) = ($7 + [8])
	CALL $30(($7 + [104]), $7, ($7 + [96]))
	$6 = *($7 + [108])
	if ( ($6 == 0) ){ goto $label$2 }
	if ( ((int_64)*($7 + [96]) != (int_64)*($6 + [8])) ){ goto $label$2 }
	if ( ($6 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	CALL _ZN5eosio8exchange12deltokenpairEyy($0, $1, *($6))
	CALL $30(($7 + [104]), $7, ($7 + [96]))
	$5 = (int_64)0
	$6 = *($7 + [108])
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((int_64)*($7 + [96]) != (int_64)*($6 + [8])) ){ goto $label$4 }
	$5 = *($7 + [108])
	
.LABEL $label$4
	$6 = (CASTING uint_32)(uint_64 $5)
	if ( $6 ){ goto $label$3 }
	
.LABEL $label$2
	CALL $32(($7 + [56]), $3)
	$3 = *($7 + [32])
	if ( ($3 == 0) ){ goto $label$5 }
	$4 = ($7 + [36])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	if ( ((*($0 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $130(*(($0 + [40])))
	
.LABEL $label$10
	CALL $130($0)
	
.LABEL $label$9
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$8 }
	$6 = *(($7 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$6 = $3
	
.LABEL $label$6
	*($4) = $3
	CALL $130($6)
	
.LABEL $label$5
	$3 = *($7 + [80])
	if ( ($3 == 0) ){ goto $label$11 }
	$4 = ($7 + [84])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	if ( ((*($0 + [24]) & [1]) == 0) ){ goto $label$16 }
	CALL $130(*(($0 + [32])))
	
.LABEL $label$16
	CALL $130($0)
	
.LABEL $label$15
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$6 = *(($7 + [80]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $3
	
.LABEL $label$12
	*($4) = $3
	CALL $130($6)
	
.LABEL $label$11
	*([0] + [4]) = ($7 + [112])
}

void .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $128(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $146($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $130($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $130($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $22($0, ($1 + [24]))
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [320])
	CALL memcpy(($1 + [36]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [208])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [208])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [944])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $24($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [320])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $23($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $135($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $128($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $135($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $130($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $132($7)
	return (unreachable)
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [288])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $128([56])
	CALL $26($6)
	*($6 + [40]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [16])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [32])
	CALL $27(($8 + [32]), ($8 + [24]))
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($8 + [32]) = $5)
	$7 = *($6 + [44])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $28(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $130($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $128($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $146($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $130($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [320])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [320])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $26 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [960])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [672])
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [960])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [672])
	return $0
}

int_32 .FUNC $101 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	*($9 + [8]) = (int_64)0
	$7 = *($0 + [4])
	if ( ($7 == 0) ){ goto $label$2 }
	$5 = *(($7 + [88]))
	if ( ((int_32)$5 != (int_32)[-1]) ){ goto $label$3 }
	$5 = *(*($0))
	$5 = CALL db_idx_double_find_primary(*($5), *($5 + [8]), (int_64)4520852774463733762, $9, *($7))
	*((*(($0 + [4])) + [88])) = $5
	
.LABEL $label$3
	$6 = CALL db_idx_double_previous($5, ($9 + [8]))
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [3008])
	goto $label$1 
	
.LABEL $label$2
	$7 = *(*($0))
	$7 = CALL db_idx_double_end(*($7), *($7 + [8]), (int_64)4520852774463733762)
	CALL eosio_assert(((int_32)$7 != (int_32)[-1]), [2944])
	$6 = CALL db_idx_double_previous($7, ($9 + [8]))
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2944])
	
.LABEL $label$1
	$2 = *($9 + [8])
	$3 = *($1 + [24])
	$1 = *(*($0))
	$8 = *(($1 + [28]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	$7 = ($8 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$5:
	if ( ((int_64)*(*($7)) == (int_64)$2) ){ goto $label$4 }
	$8 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$7 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)$1), [224])
	goto $label$6 
	
.LABEL $label$7
	$7 = CALL $34($1, CALL $fimport$16(*($1), *($1 + [8]), (int_64)4520852774463733760, $2))
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)$1), [224])
	
.LABEL $label$6
	*(($0 + [4])) = $7
	*(($7 + [88])) = $6
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $100 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx_double_lowerbound(*($8), *($8 + [8]), (int_64)4520852774463733762, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [72]) == (int_32)$4), [224])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $34($4, CALL $fimport$16(*($4), *($4 + [8]), (int_64)4520852774463733760, $5))
	CALL eosio_assert(((int_32)*($2 + [72]) == (int_32)$4), [224])
	
.LABEL $label$4
	*(($2 + [88])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $103 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$15 = (*([0] + [4]) - [96])
	*([0] + [4]) = $15
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [1408])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1456])
	$14 = *(($1 + [96]))
	$7 = *(($1 + [88]))
	$8 = ($1 + [80])
	$9 = *($8)
	$10 = *(($1 + [56]))
	$11 = *(($1 + [48]))
	$12 = *(($1 + [24]))
	$13 = *(($1 + [16]))
	*(($16 = $15) + [16]) = *(($1 + [8]))
	*($16 + [24]) = $13
	*($16 + [32]) = $12
	*($16 + [40]) = $11
	*($16 + [48]) = $10
	*($16 + [56]) = $9
	*($16 + [64]) = $7
	*($16 + [72]) = $14
	$7 = *($1)
	*($8) = *(*($2))
	CALL eosio_assert([1], [1520])
	$2 = *($1 + [32])
	$8 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($8 + [89])
	$14 = (CASTING uint_64)(uint_32 $8)
	$8 = (($16 + [16]) + [56])
	$6 = ($16 + [48])
	$5 = (($16 + [16]) + [24])
	$4 = (($16 + [16]) + [16])
	$3 = (($16 + [16]) + [8])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$15 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$15 = ($15 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $15
	
.LABEL $label$2
	*($16 + [4]) = $15
	*($16) = $15
	*($16 + [8]) = ($15 + $2)
	CALL $68($16, $1)
	CALL db_update_i64(*($1 + [108]), (int_64)0, $15, $2)
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL free($15)
	
.LABEL $label$4
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($16 + [88]) = *(($1 + [8]))
	if ( (CALL memcmp(($16 + [16]), ($16 + [88]), [8]) == 0) ){ goto $label$6 }
	$15 = ($1 + [112])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$7 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864512, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$7
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$6
	*($16 + [88]) = *(($1 + [16]))
	if ( (CALL memcmp($3, ($16 + [88]), [8]) == 0) ){ goto $label$8 }
	$15 = ($1 + [116])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864511, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$8
	*($16 + [88]) = *(($1 + [24]))
	if ( (CALL memcmp($4, ($16 + [88]), [8]) == 0) ){ goto $label$10 }
	$15 = ($1 + [120])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864510, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$10
	*($16 + [88]) = *(($1 + [48]))
	if ( (CALL memcmp($5, ($16 + [88]), [8]) == 0) ){ goto $label$12 }
	$15 = ($1 + [124])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864509, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$12
	*($16 + [88]) = *(($1 + [56]))
	if ( (CALL memcmp($6, ($16 + [88]), [8]) == 0) ){ goto $label$14 }
	$15 = ($1 + [128])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$15 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864508, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$15
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$14
	*($16 + [88]) = *(($1 + [80]))
	if ( (CALL memcmp(($16 + [56]), ($16 + [88]), [8]) == 0) ){ goto $label$16 }
	$15 = ($1 + [132])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$17 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864507, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$17
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$16
	*($16 + [88]) = *(($1 + [88]))
	if ( (CALL memcmp(($16 + [64]), ($16 + [88]), [8]) == 0) ){ goto $label$18 }
	$15 = ($1 + [136])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$19 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864506, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$19
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$18
	*($16 + [88]) = *(($1 + [96]))
	if ( (CALL memcmp($8, ($16 + [88]), [8]) == 0) ){ goto $label$20 }
	$1 = ($1 + [140])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$21 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864505, ($16 + [80]), $7)
	*($1) = $2
	
.LABEL $label$21
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$20
	*([0] + [4]) = ($16 + [96])
}

void .FUNC $102 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$15 = (*([0] + [4]) - [96])
	*([0] + [4]) = $15
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [1408])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1456])
	$6 = ($1 + [96])
	$14 = *($6)
	$7 = ($1 + [88])
	$5 = *($7)
	$8 = ($1 + [80])
	$9 = *($8)
	$10 = *(($1 + [56]))
	$11 = *(($1 + [48]))
	$12 = *(($1 + [24]))
	$13 = *(($1 + [16]))
	*(($16 = $15) + [16]) = *(($1 + [8]))
	*($16 + [24]) = $13
	*($16 + [32]) = $12
	*($16 + [40]) = $11
	*($16 + [48]) = $10
	*($16 + [56]) = $9
	*($16 + [64]) = $5
	*($16 + [72]) = $14
	$5 = *($1)
	*($8) = *(*($2))
	*($7) = *(*($2))
	*($6) = *(*($2 + [4]))
	CALL eosio_assert([1], [1520])
	$2 = *($1 + [32])
	$6 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($6 + [89])
	$14 = (CASTING uint_64)(uint_32 $6)
	$6 = (($16 + [16]) + [56])
	$7 = ($16 + [48])
	$8 = (($16 + [16]) + [24])
	$4 = (($16 + [16]) + [16])
	$3 = (($16 + [16]) + [8])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$15 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$15 = ($15 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $15
	
.LABEL $label$2
	*($16 + [4]) = $15
	*($16) = $15
	*($16 + [8]) = ($15 + $2)
	CALL $68($16, $1)
	CALL db_update_i64(*($1 + [108]), (int_64)0, $15, $2)
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL free($15)
	
.LABEL $label$4
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($16 + [88]) = *(($1 + [8]))
	if ( (CALL memcmp(($16 + [16]), ($16 + [88]), [8]) == 0) ){ goto $label$6 }
	$15 = ($1 + [112])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$7 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864512, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$7
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$6
	*($16 + [88]) = *(($1 + [16]))
	if ( (CALL memcmp($3, ($16 + [88]), [8]) == 0) ){ goto $label$8 }
	$15 = ($1 + [116])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864511, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$8
	*($16 + [88]) = *(($1 + [24]))
	if ( (CALL memcmp($4, ($16 + [88]), [8]) == 0) ){ goto $label$10 }
	$15 = ($1 + [120])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864510, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$10
	*($16 + [88]) = *(($1 + [48]))
	if ( (CALL memcmp($8, ($16 + [88]), [8]) == 0) ){ goto $label$12 }
	$15 = ($1 + [124])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864509, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$12
	*($16 + [88]) = *(($1 + [56]))
	if ( (CALL memcmp($7, ($16 + [88]), [8]) == 0) ){ goto $label$14 }
	$15 = ($1 + [128])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$15 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864508, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$15
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$14
	*($16 + [88]) = *(($1 + [80]))
	if ( (CALL memcmp(($16 + [56]), ($16 + [88]), [8]) == 0) ){ goto $label$16 }
	$15 = ($1 + [132])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$17 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864507, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$17
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$16
	*($16 + [88]) = *(($1 + [88]))
	if ( (CALL memcmp(($16 + [64]), ($16 + [88]), [8]) == 0) ){ goto $label$18 }
	$15 = ($1 + [136])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$19 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864506, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$19
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$18
	*($16 + [88]) = *(($1 + [96]))
	if ( (CALL memcmp($6, ($16 + [88]), [8]) == 0) ){ goto $label$20 }
	$1 = ($1 + [140])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$21 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864505, ($16 + [80]), $5)
	*($1) = $2
	
.LABEL $label$21
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$20
	*([0] + [4]) = ($16 + [96])
}

void .FUNC _ZN5eosio8exchange20sell_by_market_priceEyyyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	float_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	int_32 $41
	int_32 $42
	int_32 $43
	int_32 $44
	int_32 $45
	int_32 $46
	int_32 $47
	int_32 $48
	int_32 $49
	int_32 $50
	int_32 $51
	int_32 $52
	int_32 $53
	int_32 $54
	int_32 $55
	int_32 $56
	int_32 $57
	int_32 $58
	int_32 $59
	int_32 $60
	int_32 $61
	int_32 $62
	int_32 $63
	int_32 $64
	int_32 $65
	int_64 $66
	int_64 $67
	int_32 $68
	int_32 $69
	int_32 $70
	int_64 $71
	int_32 $72
	int_32 $73
	int_32 $74
	int_32 $75
	int_32 $76
	int_32 $77
	int_32 $78
	int_32 $79
	int_32 $80
	int_32 $81
	int_32 $82
	int_32 $83
	int_32 $84
	int_32 $85
	int_32 $86
	int_32 $87
	int_32 $88
	int_32 $89
	int_32 $90
	int_32 $91
	int_32 $92
	int_32 $93
	int_32 $94
	int_32 $95
	int_32 $96
	int_32 $97
	int_32 $98
	int_32 $99
	int_32 $100
	int_32 $101
	int_32 $102
	int_32 $103
	int_32 $104
	int_32 $105
	int_32 $106
	int_32 $107
	int_32 $108
	int_32 $109
	int_32 $110
	int_32 $111
	int_32 $112
	int_32 $113
	int_32 $114
	int_32 $115
	int_32 $116
	int_32 $117
	int_32 $118
	int_32 $119
	int_32 $120
	int_32 $121
	int_32 $122
	int_32 $123
	int_32 $124
	int_32 $125
	int_32 $126
	int_32 $127
	int_32 $128
	int_32 $129
	int_32 $130
	int_32 $131
	int_32 $132
	int_64 $133
	int_32 $134
	int_64 $135
	int_64 $136
	int_32 $137
	int_32 $138
	$138 = (*([0] + [4]) - [1264])
	*([0] + [4]) = $138
	CALL eosio_assert(CALL $fimport$40($1), [1712])
	$132 = [0]
	*(($138 + [1120])) = [0]
	*($138 + [1104]) = (int_64)-1
	*($138 + [1112]) = (int_64)0
	$135 = *($0)
	*($138 + [1088]) = $135
	*($138 + [1096]) = $135
	*($138 + [1124 align=4]) = (int_64)0
	*($138 + [1080]) = ($138 + [1088])
	$135 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($138 + [984]) = $135)
	CALL $74(($138 + [1136]), ($138 + [1080]), ($138 + [984]))
	$134 = *($138 + [1140])
	if ( ($134 == 0) ){ goto $label$3 }
	if ( ((int_64)*($138 + [984]) != (int_64)*($134 + [24])) ){ goto $label$3 }
	$136 = *($138 + [1136])
	*($138 + [1072]) = $136
	$70 = (($138 + [1072]) | [4])
	$132 = [0]
	$134 = (CASTING uint_32)(uint_64 (uint_64)$136 >> (uint_64)(int_64)32)
	if ( ($134) == 0) ){ goto $label$1 }
	
.LOOP $label$4:
	if ( ((int_64)*($134 + [24]) != (int_64)$135) ){ goto $label$5 }
	if ( ((int_64)*($134 + [16]) != (int_64)$4) ){ goto $label$5 }
	if ( ((int_64)*($134 + [8]) == (int_64)$3) ){ goto $label$2 }
	
.LABEL $label$5
	CALL $75(($138 + [1072]))
	$134 = *($138 + [1076])
	if ( $134 ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	*($138 + [1076]) = [0]
	*($138 + [1072]) = ($138 + [1080])
	$70 = (($138 + [1072]) | [4])
	goto $label$1 
	
.LABEL $label$2
	$132 = [1]
	
.LABEL $label$1
	CALL eosio_assert($132, [1088])
	$7 = *($70)
	$132 = [0]
	*(($138 + [1064])) = [0]
	*($138 + [1048]) = (int_64)-1
	*($138 + [1056]) = (int_64)0
	$4 = *($0)
	*($138 + [1032]) = $4
	*($138 + [1040]) = $4
	*($138 + [1068]) = [0]
	$8 = [0]
	$134 = CALL db_find_i64($4, $4, (int_64)4157012474184204288, *($7 + [8]))
	if ( ((int_32)$134 < (int_32)[0]) ){ goto $label$6 }
	$8 = CALL $17(($138 + [1032]), $134)
	CALL eosio_assert(((int_32)*($8 + [40]) == (int_32)($138 + [1032])), [224])
	
.LABEL $label$6
	$133 = *($5)
	if ( ((uint_64)((int_64)$133 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$134 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $135) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$135 = (uint_64)$135 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$135) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$135 = (uint_64)$135 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$135) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$134 = ($134 + [1])
	if ( ((int_32)$134 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$132 = [1]
	$134 = ($134 + [1])
	if ( ((int_32)$134 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$132 = [0]
	
.LABEL $label$7
	CALL eosio_assert($132, [2880])
	CALL eosio_assert(((int_64)$133 > (int_64)0), [2912])
	$132 = *($8 + [36])
	$134 = *($7 + [44])
	if ( ((uint_32)$134 <= (uint_32)$132) ){ goto $label$13 }
	$132 = ($134 - $132)
	$134 = [0]
	$9 = (float_64)1
	
.LOOP $label$14:
	$9 = ((float_64)$9 * (float_64)(float_64)10)
	$134 = ($134 + [1])
	if ( ((int_32)$134 < (int_32)$132) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$9 = (float_64)1
	if ( ((uint_32)$134 >= (uint_32)$132) ){ goto $label$12 }
	$132 = ($132 - $134)
	$134 = [0]
	$9 = (float_64)1
	
.LOOP $label$15:
	$9 = ((float_64)$9 / (float_64)(float_64)10)
	$134 = ($134 + [1])
	if ( ((int_32)$134 < (int_32)$132) ){ goto $label$15 }
	
.LABEL $label$12
	*($138 + [1000]) = (int_64)-1
	*($138 + [1008]) = [0]
	*($138 + [984]) = *($0)
	*($138 + [992]) = *($7)
	*(($138 + [1012])) = [0]
	*(($138 + [1016])) = [0]
	*(($138 + [1024])) = [0]
	*($138 + [1020]) = [0]
	*($138 + [976]) = ($138 + [984])
	*($138 + [1136]) = (int_64)-4503599627370497
	CALL $100(($138 + [1208]), ($138 + [976]), ($138 + [1136]))
	if ( (*($138 + [1212]) == 0) ){ goto $label$16 }
	$132 = *($6)
	$134 = ($132 & [1])
	if ( $134 ){ goto $label$22 }
	if ( uint_32($132 >> [1]) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	if ( (*($6 + [4]) == 0) ){ goto $label$20 }
	
.LABEL $label$21
	if ( $134 ){ goto $label$19 }
	$134 = ($6 + [1])
	goto $label$18 
	
.LABEL $label$20
	$11 = (int_64)0
	$10 = [0]
	goto $label$17 
	
.LABEL $label$19
	$134 = *($6 + [8])
	
.LABEL $label$18
	$132 = [-1]
	
.LOOP $label$23:
	$6 = ($134 + $132)
	$70 = ($132 + [1])
	$132 = $70
	if ( *(($6 + [1])) ){ goto $label$23 }
	$136 = (CASTING uint_64)(uint_32 $70)
	$135 = (int_64)0
	$4 = (int_64)59
	$11 = (int_64)0
	
.LOOP $label$24:
	$3 = (int_64)0
	if ( ((uint_64)$135 >= (uint_64)$136) ){ goto $label$25 }
	$132 = *($134)
	if ( ((uint_32)(($132 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$132 = ($132 + [165])
	goto $label$26 
	
.LABEL $label$27
	$132 = ( ($132 + [208]) ? [0] : ((($132 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$3 = (int_64)((int_64)(CASTING uint_64)(uint_32 $132) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	if ( ((uint_64)$135 > (uint_64)(int_64)11) ){ goto $label$29 }
	$3 = ((int_64)((int_64)$3 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	goto $label$28 
	
.LABEL $label$29
	$3 = ((int_64)$3 & (int_64)15)
	
.LABEL $label$28
	$134 = ($134 + [1])
	$135 = ((int_64)$135 + (int_64)1)
	$11 = ((int_64)$3 | (int_64)$11)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$24 }
	$10 = CALL is_account($11)
	
.LABEL $label$17
	if ( ((int_64)$133 < (int_64)1) ){ goto $label$16 }
	$67 = (CASTING uint_64)(uint_32 ($138 + [976]))
	$17 = (uint_64)(int_64)1397703936 >> (uint_64)(int_64)8)
	$62 = (($138 + [1136]) + [32])
	$61 = (($138 + [1136]) + [16])
	$60 = (($138 + [80]) | [1])
	$59 = (($138 + [96]) | [1])
	$58 = (($138 + [112]) | [1])
	$57 = (($138 + [128]) | [1])
	$56 = (($138 + [144]) | [1])
	$55 = (($138 + [160]) | [1])
	$54 = (($138 + [176]) | [1])
	$53 = (($138 + [208]) | [1])
	$52 = (($138 + [224]) | [1])
	$51 = (($138 + [240]) | [1])
	$50 = (($138 + [256]) | [1])
	$49 = (($138 + [272]) | [1])
	$48 = (($138 + [288]) | [1])
	$47 = (($138 + [304]) | [1])
	$46 = (($138 + [320]) | [1])
	$45 = (($138 + [336]) | [1])
	$44 = (($138 + [352]) | [1])
	$43 = (($138 + [368]) | [1])
	$42 = (($138 + [384]) | [1])
	$41 = (($138 + [400]) | [1])
	$40 = (($138 + [416]) | [1])
	$39 = (($138 + [432]) | [1])
	$38 = (($138 + [448]) | [1])
	$37 = (($138 + [464]) | [1])
	$36 = (($138 + [480]) | [1])
	$35 = (($138 + [496]) | [1])
	$34 = (($138 + [512]) | [1])
	$33 = (($138 + [224]) | [1])
	$32 = (($138 + [240]) | [1])
	$31 = (($138 + [272]) | [1])
	$30 = (($138 + [304]) | [1])
	$29 = (($138 + [320]) | [1])
	$28 = (($138 + [352]) | [1])
	$27 = (($138 + [384]) | [1])
	$26 = (($138 + [400]) | [1])
	$25 = (($138 + [432]) | [1])
	$24 = (($138 + [464]) | [1])
	$23 = (($138 + [496]) | [1])
	$22 = (($138 + [512]) | [1])
	$21 = (($138 + [528]) | [1])
	$20 = (($138 + [544]) | [1])
	$19 = (($138 + [560]) | [1])
	$18 = (($138 + [576]) | [1])
	$16 = (($138 + [1208]) + [16])
	$15 = (($138 + [1136]) + [72])
	$14 = (($138 + [1208]) + [32])
	$13 = (($138 + [1208]) + [24])
	$12 = (($138 + [1208]) + [8])
	$74 = (($138 + [912]) + [12])
	$128 = ($138 + [1236])
	$130 = ($7 + [96])
	$129 = ($138 + [1228])
	$131 = ($7 + [48])
	
.LOOP $label$30:
	*($138 + [1136]) = $67
	*($138 + [968]) = *(*(CALL $101(($138 + [1136])) + [4]) + [24])
	CALL $100(($138 + [1136]), ($138 + [976]), ($138 + [968]))
	$6 = *($138 + [1140])
	if ( ($6 == 0) ){ goto $label$32 }
	if ( ((float_64)*($138 + [968]) != (float_64)*($6 + [24])) ){ goto $label$32 }
	if ( ($6 == 0) ){ goto $label$32 }
	$64 = *($138 + [1136])
	$63 = [0]
	
.LOOP $label$68:
	*($138 + [960]) = *($6 + [24])
	$107 = ($5 + [8])
	$3 = *($107)
	*(($68 = (($138 + [944]) + [8]))) = $3
	*($138 + [944]) = (int_64)0
	CALL eosio_assert([1], [960])
	$135 = (uint_64)$3 >> (uint_64)(int_64)8)
	$132 = [0]
	
.LOOP $label$71:
	$134 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $135) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$70 }
	$135 = (uint_64)$135 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$135) & (int_64)255) != (int_64)0) ){ goto $label$72 }
	
.LOOP $label$73:
	$135 = (uint_64)$135 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$135) & (int_64)255) != (int_64)0) ){ goto $label$70 }
	$132 = ($132 + [1])
	if ( ((int_32)$132 < (int_32)[7]) ){ goto $label$73 }
	
.LABEL $label$72
	$70 = [1]
	$132 = ($132 + [1])
	if ( ((int_32)$132 < (int_32)[7]) ){ goto $label$71 }
	goto $label$69 
	
.LABEL $label$70
	$70 = [0]
	
.LABEL $label$69
	CALL eosio_assert($70, [672])
	$97 = ($6 + [40])
	$136 = *($97)
	*(($69 = (($138 + [928]) + [8]))) = $136
	*($138 + [928]) = (int_64)0
	CALL eosio_assert([1], [960])
	$135 = (uint_64)$136 >> (uint_64)(int_64)8)
	
.LOOP $label$76:
	$132 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $135) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$75 }
	$135 = (uint_64)$135 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$135) & (int_64)255) != (int_64)0) ){ goto $label$77 }
	
.LOOP $label$78:
	$135 = (uint_64)$135 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$135) & (int_64)255) != (int_64)0) ){ goto $label$75 }
	$134 = ($134 + [1])
	if ( ((int_32)$134 < (int_32)[7]) ){ goto $label$78 }
	
.LABEL $label$77
	$70 = [1]
	$134 = ($134 + [1])
	if ( ((int_32)$134 < (int_32)[7]) ){ goto $label$76 }
	goto $label$74 
	
.LABEL $label$75
	$70 = [0]
	
.LABEL $label$74
	CALL eosio_assert($70, [672])
	$135 = *($97)
	$133 = *($5)
	$4 = (Rounds 0)(((float_64)*($138 + [960]) * (float_64)((float_64)(CASTING float_64)(int_64 $133) / (float_64)$9)))
	CALL eosio_assert((uint_64)(((int_64)$4 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [960])
	$135 = (uint_64)$135 >> (uint_64)(int_64)8)
	
.LOOP $label$80:
	$134 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $135) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$79 }
	$135 = (uint_64)$135 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$135) & (int_64)255) != (int_64)0) ){ goto $label$81 }
	
.LOOP $label$82:
	$135 = (uint_64)$135 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$135) & (int_64)255) != (int_64)0) ){ goto $label$79 }
	$132 = ($132 + [1])
	if ( ((int_32)$132 < (int_32)[7]) ){ goto $label$82 }
	
.LABEL $label$81
	$134 = [1]
	$132 = ($132 + [1])
	if ( ((int_32)$132 < (int_32)[7]) ){ goto $label$80 }
	
.LABEL $label$79
	CALL eosio_assert($134, [672])
	$135 = *($6 + [32])
	if ( ((int_64)$4 < (int_64)$135) ){ goto $label$83 }
	$133 = (Rounds 0)(((float_64)((float_64)$9 * (float_64)(CASTING float_64)(int_64 $135)) / (float_64)*($138 + [960])))
	$4 = $135
	
.LABEL $label$83
	*($138 + [944]) = $133
	*($138 + [928]) = $4
	CALL eosio_assert([1], [1280])
	$134 = *($138 + [976])
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$134), [1408])
	CALL eosio_assert(((int_64)*($134) == (int_64)CALL $fimport$13()), [1456])
	$132 = ($6 + [8])
	*($138 + [1208]) = *($132)
	$115 = ($6 + [64])
	$135 = *($115)
	$70 = ($6 + [32])
	$133 = *($70)
	$65 = ($6 + [24])
	$71 = *($65)
	$72 = ($6 + [16])
	*($12) = *($72)
	*($16) = $71
	*($13) = $133
	*($14) = $135
	$135 = *($6)
	CALL eosio_assert(((int_64)$136 == (int_64)*($97)), [2336])
	$4 = (int_64)
	*($70) = $4(*($70) - $4))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [2384])
	CALL eosio_assert(((int_64)*($70) < (int_64)4611686018427387904), [2416])
	CALL eosio_assert(((int_64)$135 == (int_64)*($6)), [1520])
	*(($73 = (($138 + [896]) + [8]))) = $15
	*($138 + [900]) = ($138 + [1136])
	*($138 + [896]) = ($138 + [1136])
	CALL $78(($138 + [896]), $6)
	CALL db_update_i64(*($6 + [76]), (int_64)0, ($138 + [1136]), [72])
	if ( (uint_64)($135 <= *($134 + [16])) ){ goto $label$84 }
	*(($134 + [16])) = ( (int_64)-2 ? ((int_64)$135 + (int_64)1) : ((uint_64)$135 > (uint_64)(int_64)-3) )
	
.LABEL $label$84
	*($138 + [64]) = *($132)
	if ( (CALL memcmp(($138 + [1208]), ($138 + [64]), [8]) == 0) ){ goto $label$85 }
	$77 = ($6 + [80])
	$132 = *($77)
	if ( ((int_32)$132 > (int_32)[-1]) ){ goto $label$86 }
	$132 = CALL db_idx64_find_primary(*($134), *($134 + [8]), (int_64)4520852774463733760, ($138 + [1248]), $135)
	*($77) = $132
	
.LABEL $label$86
	CALL db_idx64_update($132, (int_64)0, ($138 + [64]))
	
.LABEL $label$85
	*($138 + [64]) = *($72)
	if ( (CALL memcmp($12, ($138 + [64]), [8]) == 0) ){ goto $label$87 }
	$77 = ($6 + [84])
	$132 = *($77)
	if ( ((int_32)$132 > (int_32)[-1]) ){ goto $label$88 }
	$132 = CALL db_idx64_find_primary(*($134), *($134 + [8]), (int_64)4520852774463733761, ($138 + [1248]), $135)
	*($77) = $132
	
.LABEL $label$88
	CALL db_idx64_update($132, (int_64)0, ($138 + [64]))
	
.LABEL $label$87
	*($138 + [64]) = *($65)
	if ( (CALL memcmp($16, ($138 + [64]), [8]) == 0) ){ goto $label$89 }
	$65 = ($6 + [88])
	$132 = *($65)
	if ( ((int_32)$132 > (int_32)[-1]) ){ goto $label$90 }
	$132 = CALL db_idx_double_find_primary(*($134), *($134 + [8]), (int_64)4520852774463733762, ($138 + [1248]), $135)
	*($65) = $132
	
.LABEL $label$90
	CALL db_idx_double_update($132, (int_64)0, ($138 + [64]))
	
.LABEL $label$89
	*($138 + [64]) = *($70)
	if ( (CALL memcmp($13, ($138 + [64]), [8]) == 0) ){ goto $label$91 }
	$65 = ($6 + [92])
	$132 = *($65)
	if ( ((int_32)$132 > (int_32)[-1]) ){ goto $label$92 }
	$132 = CALL db_idx64_find_primary(*($134), *($134 + [8]), (int_64)4520852774463733763, ($138 + [1248]), $135)
	*($65) = $132
	
.LABEL $label$92
	CALL db_idx64_update($132, (int_64)0, ($138 + [64]))
	
.LABEL $label$91
	*($138 + [64]) = *($115)
	if ( (CALL memcmp($14, ($138 + [64]), [8]) == 0) ){ goto $label$93 }
	$115 = ($6 + [96])
	$132 = *($115)
	if ( ((int_32)$132 > (int_32)[-1]) ){ goto $label$94 }
	$132 = CALL db_idx64_find_primary(*($134), *($134 + [8]), (int_64)4520852774463733764, ($138 + [1248]), $135)
	*($115) = $132
	
.LABEL $label$94
	CALL db_idx64_update($132, (int_64)0, ($138 + [64]))
	
.LABEL $label$93
	$135 = *($6)
	*($74) = *(($6 + [44]))
	*(($134 = (($138 + [912]) + [8]))) = *($97)
	*($138 + [916]) = *(($6 + [36]))
	*($138 + [912]) = *($6 + [32])
	$4 = *($6 + [16])
	*((($138 + [24]) + [8])) = *($134)
	*($138 + [24]) = *($138 + [912])
	CALL _ZN5eosio8exchange18adjust_u_buy_orderEyyNS_5assetE($0, $4, $135, ($138 + [24]))
	CALL eosio_assert(((int_64)$3 == (int_64)*($107)), [2336])
	$135 = (int_64)
	*($5) = $135(*($5) - *($138 + [944])))
	CALL eosio_assert(((int_64)$135 > (int_64)-4611686018427387904), [2384])
	CALL eosio_assert(((int_64)$135 < (int_64)4611686018427387904), [2416])
	$135 = *($69)
	*($73) = $135
	*($138 + [896]) = (int_64)0
	CALL eosio_assert([1], [960])
	$135 = (uint_64)$135 >> (uint_64)(int_64)8)
	$134 = [0]
	
.LOOP $label$97:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $135) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$96 }
	$135 = (uint_64)$135 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$135) & (int_64)255) != (int_64)0) ){ goto $label$98 }
	
.LOOP $label$99:
	$135 = (uint_64)$135 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$135) & (int_64)255) != (int_64)0) ){ goto $label$96 }
	$134 = ($134 + [1])
	if ( ((int_32)$134 < (int_32)[7]) ){ goto $label$99 }
	
.LABEL $label$98
	$132 = [1]
	$134 = ($134 + [1])
	if ( ((int_32)$134 < (int_32)[7]) ){ goto $label$97 }
	goto $label$95 
	
.LABEL $label$96
	$132 = [0]
	
.LABEL $label$95
	CALL eosio_assert($132, [672])
	$75 = ($8 + [8])
	$133 = *($75)
	$135 = (int_64)0
	$3 = (int_64)59
	$134 = [2032]
	$136 = (int_64)0
	
.LOOP $label$100:
	if ( ((uint_64)$135 > (uint_64)(int_64)10) ){ goto $label$105 }
	$132 = *($134)
	if ( ((uint_32)(($132 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$104 }
	$132 = ($132 + [165])
	goto $label$103 
	
.LABEL $label$105
	$4 = (int_64)0
	if ( ((int_64)$135 == (int_64)11) ){ goto $label$102 }
	goto $label$101 
	
.LABEL $label$104
	$132 = ( ($132 + [208]) ? [0] : ((($132 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$103
	$4 = (int_64)((int_64)(CASTING uint_64)(uint_32 $132) << (int_64)56) >> (int_64)56)
	
.LABEL $label$102
	$4 = ((int_64)((int_64)$4 & (int_64)31) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$101
	$134 = ($134 + [1])
	$3 = ((int_64)$3 + (int_64)-5)
	$136 = ((int_64)$4 | (int_64)$136)
	$135 = ((int_64)$135 + (int_64)1)
	if ( ((int_64)$135 != (int_64)13) ){ goto $label$100 }
	$135 = (int_64)1
	if ( ((int_64)$133 != (int_64)$136) ){ goto $label$106 }
	$135 = ( (int_64)2 ? (int_64)1 : ((int_64)*(($8 + [16])) == (int_64)$17) )
	
.LABEL $label$106
	*($138 + [896]) = ((int_64)((int_64)*($138 + [928]) * (int_64)$135) / (int_64)1000)
	*(($76 = (($138 + [576]) + [8]))) = [0]
	*($138 + [576]) = (int_64)0
	$134 = CALL strlen([2448])
	if ( ((uint_32)$134 >= (uint_32)[-16]) ){ goto $label$65 }
	if ( ((uint_32)$134 >= (uint_32)[11]) ){ goto $label$109 }
	*($138 + [576]) = ($134 << [1])
	$132 = $18
	if ( $134 ){ goto $label$108 }
	goto $label$107 
	
.LABEL $label$109
	$97 = (($134 + [16]) & [-16])
	$132 = CALL $128($97)
	*($76) = $132
	*($138 + [576]) = ($97 | [1])
	*($138 + [580]) = $134
	
.LABEL $label$108
	CALL memcpy($132, [2448], $134)
	
.LABEL $label$107
	*(($132 + $134)) = [0]
	*(($77 = (($138 + [560]) + [8]))) = [0]
	*($138 + [560]) = (int_64)0
	$134 = CALL strlen([2464])
	if ( ((uint_32)$134 >= (uint_32)[-16]) ){ goto $label$64 }
	if ( ((uint_32)$134 >= (uint_32)[11]) ){ goto $label$112 }
	*($138 + [560]) = ($134 << [1])
	$132 = $19
	if ( $134 ){ goto $label$111 }
	goto $label$110 
	
.LABEL $label$112
	$97 = (($134 + [16]) & [-16])
	$132 = CALL $128($97)
	*($77) = $132
	*($138 + [560]) = ($97 | [1])
	*($138 + [564]) = $134
	
.LABEL $label$111
	CALL memcpy($132, [2464], $134)
	
.LABEL $label$110
	*(($132 + $134)) = [0]
	$134 = *($138 + [560])
	$132 = ($134 & [1])
	$134 = CALL $136(($138 + [576]), ( *($77) ? $19 : $132 ), ( *($138 + [564]) ? uint_32($134 >> [1]) : $132 ))
	$132 = ($134 + [8])
	*(($78 = (($138 + [592]) + [8]))) = *($132)
	*($138 + [592]) = *($134)
	*($134) = [0]
	*(($134 + [4])) = [0]
	*($132) = [0]
	CALL _ZNSt3__19to_stringEy(($138 + [544]), *($7))
	$134 = *($138 + [544])
	$132 = ($134 & [1])
	$79 = (($138 + [544]) + [8])
	$134 = CALL $136(($138 + [592]), ( *($79) ? $20 : $132 ), ( *($138 + [548]) ? uint_32($134 >> [1]) : $132 ))
	$132 = ($134 + [8])
	*(($80 = (($138 + [608]) + [8]))) = *($132)
	*($138 + [608]) = *($134)
	*($134) = [0]
	*(($134 + [4])) = [0]
	*($132) = [0]
	*(($81 = (($138 + [528]) + [8]))) = [0]
	*($138 + [528]) = (int_64)0
	$134 = CALL strlen([2480])
	if ( ((uint_32)$134 >= (uint_32)[-16]) ){ goto $label$63 }
	if ( ((uint_32)$134 >= (uint_32)[11]) ){ goto $label$115 }
	*($138 + [528]) = ($134 << [1])
	$132 = $21
	if ( $134 ){ goto $label$114 }
	goto $label$113 
	
.LABEL $label$115
	$97 = (($134 + [16]) & [-16])
	$132 = CALL $128($97)
	*($81) = $132
	*($138 + [528]) = ($97 | [1])
	*($138 + [532]) = $134
	
.LABEL $label$114
	CALL memcpy($132, [2480], $134)
	
.LABEL $label$113
	*(($132 + $134)) = [0]
	$134 = *($138 + [528])
	$132 = ($134 & [1])
	$134 = CALL $136(($138 + [608]), ( *($81) ? $21 : $132 ), ( *($138 + [532]) ? uint_32($134 >> [1]) : $132 ))
	$132 = ($134 + [8])
	*(($82 = (($138 + [624]) + [8]))) = *($132)
	*($138 + [624]) = *($134)
	*($134) = [0]
	*(($134 + [4])) = [0]
	*($132) = [0]
	CALL _ZNSt3__19to_stringEy(($138 + [512]), *($6))
	$134 = *($138 + [512])
	$132 = ($134 & [1])
	$83 = (($138 + [512]) + [8])
	$134 = CALL $136(($138 + [624]), ( *($83) ? $22 : $132 ), ( *($138 + [516]) ? uint_32($134 >> [1]) : $132 ))
	$132 = ($134 + [8])
	*(($84 = (($138 + [640]) + [8]))) = *($132)
	*($138 + [640]) = *($134)
	*($134) = [0]
	*(($134 + [4])) = [0]
	*($132) = [0]
	*(($134 = (($138 + [496]) + [8]))) = [0]
	*($138 + [496]) = (int_64)0
	$132 = CALL strlen([2496])
	if ( ((uint_32)$132 >= (uint_32)[-16]) ){ goto $label$62 }
	if ( ((uint_32)$132 >= (uint_32)[11]) ){ goto $label$118 }
	*($138 + [496]) = ($132 << [1])
	$97 = $23
	if ( $132 ){ goto $label$117 }
	goto $label$116 
	
.LABEL $label$118
	$107 = (($132 + [16]) & [-16])
	$97 = CALL $128($107)
	*($134) = $97
	*($138 + [496]) = ($107 | [1])
	*($138 + [500]) = $132
	
.LABEL $label$117
	CALL memcpy($97, [2496], $132)
	
.LABEL $label$116
	*(($97 + $132)) = [0]
	$132 = *($138 + [496])
	$97 = ($132 & [1])
	$132 = CALL $136(($138 + [640]), ( *($134) ? $23 : $97 ), ( *($138 + [500]) ? uint_32($132 >> [1]) : $97 ))
	$97 = ($132 + [8])
	*(($85 = (($138 + [656]) + [8]))) = *($97)
	*($138 + [656]) = *($132)
	*($132) = [0]
	*(($132 + [4])) = [0]
	*($97) = [0]
	*($138 + [176]) = *($72)
	CALL $84(($138 + [480]), ($138 + [176]))
	$132 = *($138 + [480])
	$97 = ($132 & [1])
	$86 = (($138 + [480]) + [8])
	$132 = CALL $136(($138 + [656]), ( *($86) ? $36 : $97 ), ( *($138 + [484]) ? uint_32($132 >> [1]) : $97 ))
	$97 = ($132 + [8])
	*(($87 = (($138 + [672]) + [8]))) = *($97)
	*($138 + [672]) = *($132)
	*($132) = [0]
	*(($132 + [4])) = [0]
	*($97) = [0]
	*(($132 = (($138 + [464]) + [8]))) = [0]
	*($138 + [464]) = (int_64)0
	$97 = CALL strlen([2512])
	if ( ((uint_32)$97 >= (uint_32)[-16]) ){ goto $label$61 }
	if ( ((uint_32)$97 >= (uint_32)[11]) ){ goto $label$121 }
	*($138 + [464]) = ($97 << [1])
	$107 = $24
	if ( $97 ){ goto $label$120 }
	goto $label$119 
	
.LABEL $label$121
	$115 = (($97 + [16]) & [-16])
	$107 = CALL $128($115)
	*($132) = $107
	*($138 + [464]) = ($115 | [1])
	*($138 + [468]) = $97
	
.LABEL $label$120
	CALL memcpy($107, [2512], $97)
	
.LABEL $label$119
	*(($107 + $97)) = [0]
	$97 = *($138 + [464])
	$107 = ($97 & [1])
	$97 = CALL $136(($138 + [672]), ( *($132) ? $24 : $107 ), ( *($138 + [468]) ? uint_32($97 >> [1]) : $107 ))
	$107 = ($97 + [8])
	*(($88 = (($138 + [688]) + [8]))) = *($107)
	*($138 + [688]) = *($97)
	*($97) = [0]
	*(($97 + [4])) = [0]
	*($107) = [0]
	*(($89 = (($138 + [448]) + [8]))) = [0]
	*($138 + [448]) = (int_64)0
	$97 = CALL strlen([2528])
	if ( ((uint_32)$97 >= (uint_32)[-16]) ){ goto $label$60 }
	if ( ((uint_32)$97 >= (uint_32)[11]) ){ goto $label$124 }
	*($138 + [448]) = ($97 << [1])
	$107 = $38
	if ( $97 ){ goto $label$123 }
	goto $label$122 
	
.LABEL $label$124
	$115 = (($97 + [16]) & [-16])
	$107 = CALL $128($115)
	*($89) = $107
	*($138 + [448]) = ($115 | [1])
	*($138 + [452]) = $97
	
.LABEL $label$123
	CALL memcpy($107, [2528], $97)
	
.LABEL $label$122
	*(($107 + $97)) = [0]
	$97 = *($138 + [448])
	$107 = ($97 & [1])
	$97 = CALL $136(($138 + [688]), ( *($89) ? $38 : $107 ), ( *($138 + [452]) ? uint_32($97 >> [1]) : $107 ))
	$107 = ($97 + [8])
	*(($90 = (($138 + [704]) + [8]))) = *($107)
	*($138 + [704]) = *($97)
	*($97) = [0]
	*(($97 + [4])) = [0]
	*($107) = [0]
	CALL _ZNSt3__19to_stringEy(($138 + [432]), $2)
	$97 = *($138 + [432])
	$107 = ($97 & [1])
	$91 = (($138 + [432]) + [8])
	$97 = CALL $136(($138 + [704]), ( *($91) ? $25 : $107 ), ( *($138 + [436]) ? uint_32($97 >> [1]) : $107 ))
	$107 = ($97 + [8])
	*(($92 = (($138 + [720]) + [8]))) = *($107)
	*($138 + [720]) = *($97)
	*($97) = [0]
	*(($97 + [4])) = [0]
	*($107) = [0]
	*(($93 = (($138 + [416]) + [8]))) = [0]
	*($138 + [416]) = (int_64)0
	$97 = CALL strlen([2544])
	if ( ((uint_32)$97 >= (uint_32)[-16]) ){ goto $label$59 }
	if ( ((uint_32)$97 >= (uint_32)[11]) ){ goto $label$127 }
	*($138 + [416]) = ($97 << [1])
	$107 = $40
	if ( $97 ){ goto $label$126 }
	goto $label$125 
	
.LABEL $label$127
	$115 = (($97 + [16]) & [-16])
	$107 = CALL $128($115)
	*($93) = $107
	*($138 + [416]) = ($115 | [1])
	*($138 + [420]) = $97
	
.LABEL $label$126
	CALL memcpy($107, [2544], $97)
	
.LABEL $label$125
	*(($107 + $97)) = [0]
	$97 = *($138 + [416])
	$107 = ($97 & [1])
	$97 = CALL $136(($138 + [720]), ( *($93) ? $40 : $107 ), ( *($138 + [420]) ? uint_32($97 >> [1]) : $107 ))
	$107 = ($97 + [8])
	*(($94 = (($138 + [736]) + [8]))) = *($107)
	*($138 + [736]) = *($97)
	*($97) = [0]
	*(($97 + [4])) = [0]
	*($107) = [0]
	*($138 + [160]) = $1
	CALL $84(($138 + [400]), ($138 + [160]))
	$97 = *($138 + [400])
	$107 = ($97 & [1])
	$95 = (($138 + [400]) + [8])
	$97 = CALL $136(($138 + [736]), ( *($95) ? $26 : $107 ), ( *($138 + [404]) ? uint_32($97 >> [1]) : $107 ))
	$107 = ($97 + [8])
	*(($96 = (($138 + [752]) + [8]))) = *($107)
	*($138 + [752]) = *($97)
	*($97) = [0]
	*(($97 + [4])) = [0]
	*($107) = [0]
	*(($97 = (($138 + [384]) + [8]))) = [0]
	*($138 + [384]) = (int_64)0
	$107 = CALL strlen([2512])
	if ( ((uint_32)$107 >= (uint_32)[-16]) ){ goto $label$58 }
	if ( ((uint_32)$107 >= (uint_32)[11]) ){ goto $label$130 }
	*($138 + [384]) = ($107 << [1])
	$115 = $27
	if ( $107 ){ goto $label$129 }
	goto $label$128 
	
.LABEL $label$130
	$65 = (($107 + [16]) & [-16])
	$115 = CALL $128($65)
	*($97) = $115
	*($138 + [384]) = ($65 | [1])
	*($138 + [388]) = $107
	
.LABEL $label$129
	CALL memcpy($115, [2512], $107)
	
.LABEL $label$128
	*(($115 + $107)) = [0]
	$107 = *($138 + [384])
	$115 = ($107 & [1])
	$107 = CALL $136(($138 + [752]), ( *($97) ? $27 : $115 ), ( *($138 + [388]) ? uint_32($107 >> [1]) : $115 ))
	$115 = ($107 + [8])
	*(($98 = (($138 + [768]) + [8]))) = *($115)
	*($138 + [768]) = *($107)
	*($107) = [0]
	*(($107 + [4])) = [0]
	*($115) = [0]
	*(($99 = (($138 + [368]) + [8]))) = [0]
	*($138 + [368]) = (int_64)0
	$107 = CALL strlen([2560])
	if ( ((uint_32)$107 >= (uint_32)[-16]) ){ goto $label$57 }
	if ( ((uint_32)$107 >= (uint_32)[11]) ){ goto $label$133 }
	*($138 + [368]) = ($107 << [1])
	$115 = $43
	if ( $107 ){ goto $label$132 }
	goto $label$131 
	
.LABEL $label$133
	$65 = (($107 + [16]) & [-16])
	$115 = CALL $128($65)
	*($99) = $115
	*($138 + [368]) = ($65 | [1])
	*($138 + [372]) = $107
	
.LABEL $label$132
	CALL memcpy($115, [2560], $107)
	
.LABEL $label$131
	*(($115 + $107)) = [0]
	$107 = *($138 + [368])
	$115 = ($107 & [1])
	$107 = CALL $136(($138 + [768]), ( *($99) ? $43 : $115 ), ( *($138 + [372]) ? uint_32($107 >> [1]) : $115 ))
	$115 = ($107 + [8])
	*(($100 = (($138 + [784]) + [8]))) = *($115)
	*($138 + [784]) = *($107)
	*($107) = [0]
	*(($107 + [4])) = [0]
	*($115) = [0]
	CALL _ZNSt3__19to_stringEf(($138 + [352]), (DEMOTE float_32)(float_64 *($138 + [960])))
	$107 = *($138 + [352])
	$115 = ($107 & [1])
	$101 = (($138 + [352]) + [8])
	$107 = CALL $136(($138 + [784]), ( *($101) ? $28 : $115 ), ( *($138 + [356]) ? uint_32($107 >> [1]) : $115 ))
	$115 = ($107 + [8])
	*(($102 = (($138 + [800]) + [8]))) = *($115)
	*($138 + [800]) = *($107)
	*($107) = [0]
	*(($107 + [4])) = [0]
	*($115) = [0]
	*(($103 = (($138 + [336]) + [8]))) = [0]
	*($138 + [336]) = (int_64)0
	$107 = CALL strlen([2576])
	if ( ((uint_32)$107 >= (uint_32)[-16]) ){ goto $label$56 }
	if ( ((uint_32)$107 >= (uint_32)[11]) ){ goto $label$136 }
	*($138 + [336]) = ($107 << [1])
	$115 = $45
	if ( $107 ){ goto $label$135 }
	goto $label$134 
	
.LABEL $label$136
	$65 = (($107 + [16]) & [-16])
	$115 = CALL $128($65)
	*($103) = $115
	*($138 + [336]) = ($65 | [1])
	*($138 + [340]) = $107
	
.LABEL $label$135
	CALL memcpy($115, [2576], $107)
	
.LABEL $label$134
	*(($115 + $107)) = [0]
	$107 = *($138 + [336])
	$115 = ($107 & [1])
	$107 = CALL $136(($138 + [800]), ( *($103) ? $45 : $115 ), ( *($138 + [340]) ? uint_32($107 >> [1]) : $115 ))
	$115 = ($107 + [8])
	*(($104 = (($138 + [816]) + [8]))) = *($115)
	*($138 + [816]) = *($107)
	*($107) = [0]
	*(($107 + [4])) = [0]
	*($115) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($138 + [320]), $138, ($138 + [944]))
	$107 = *($138 + [320])
	$115 = ($107 & [1])
	$105 = (($138 + [320]) + [8])
	$107 = CALL $136(($138 + [816]), ( *($105) ? $29 : $115 ), ( *($138 + [324]) ? uint_32($107 >> [1]) : $115 ))
	$115 = ($107 + [8])
	*(($106 = (($138 + [832]) + [8]))) = *($115)
	*($138 + [832]) = *($107)
	*($107) = [0]
	*(($107 + [4])) = [0]
	*($115) = [0]
	*(($107 = (($138 + [304]) + [8]))) = [0]
	*($138 + [304]) = (int_64)0
	$115 = CALL strlen([2512])
	if ( ((uint_32)$115 >= (uint_32)[-16]) ){ goto $label$55 }
	if ( ((uint_32)$115 >= (uint_32)[11]) ){ goto $label$139 }
	*($138 + [304]) = ($115 << [1])
	$65 = $30
	if ( $115 ){ goto $label$138 }
	goto $label$137 
	
.LABEL $label$139
	$109 = (($115 + [16]) & [-16])
	$65 = CALL $128($109)
	*($107) = $65
	*($138 + [304]) = ($109 | [1])
	*($138 + [308]) = $115
	
.LABEL $label$138
	CALL memcpy($65, [2512], $115)
	
.LABEL $label$137
	*(($65 + $115)) = [0]
	$115 = *($138 + [304])
	$65 = ($115 & [1])
	$115 = CALL $136(($138 + [832]), ( *($107) ? $30 : $65 ), ( *($138 + [308]) ? uint_32($115 >> [1]) : $65 ))
	$65 = ($115 + [8])
	*(($108 = (($138 + [848]) + [8]))) = *($65)
	*($138 + [848]) = *($115)
	*($115) = [0]
	*(($115 + [4])) = [0]
	*($65) = [0]
	*(($109 = (($138 + [288]) + [8]))) = [0]
	*($138 + [288]) = (int_64)0
	$115 = CALL strlen([2592])
	if ( ((uint_32)$115 >= (uint_32)[-16]) ){ goto $label$54 }
	if ( ((uint_32)$115 >= (uint_32)[11]) ){ goto $label$142 }
	*($138 + [288]) = ($115 << [1])
	$65 = $48
	if ( $115 ){ goto $label$141 }
	goto $label$140 
	
.LABEL $label$142
	$113 = (($115 + [16]) & [-16])
	$65 = CALL $128($113)
	*($109) = $65
	*($138 + [288]) = ($113 | [1])
	*($138 + [292]) = $115
	
.LABEL $label$141
	CALL memcpy($65, [2592], $115)
	
.LABEL $label$140
	*(($65 + $115)) = [0]
	$115 = *($138 + [288])
	$65 = ($115 & [1])
	$115 = CALL $136(($138 + [848]), ( *($109) ? $48 : $65 ), ( *($138 + [292]) ? uint_32($115 >> [1]) : $65 ))
	$65 = ($115 + [8])
	*(($110 = (($138 + [864]) + [8]))) = *($65)
	*($138 + [864]) = *($115)
	*($115) = [0]
	*(($115 + [4])) = [0]
	*($65) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($138 + [272]), $138, ($138 + [928]))
	$115 = *($138 + [272])
	$65 = ($115 & [1])
	$111 = (($138 + [272]) + [8])
	$115 = CALL $136(($138 + [864]), ( *($111) ? $31 : $65 ), ( *($138 + [276]) ? uint_32($115 >> [1]) : $65 ))
	$65 = ($115 + [8])
	*(($112 = (($138 + [1248]) + [8]))) = *($65)
	*($138 + [1248]) = *($115)
	*($115) = [0]
	*(($115 + [4])) = [0]
	*($65) = [0]
	*(($113 = (($138 + [256]) + [8]))) = [0]
	*($138 + [256]) = (int_64)0
	$115 = CALL strlen([2512])
	if ( ((uint_32)$115 >= (uint_32)[-16]) ){ goto $label$53 }
	if ( ((uint_32)$115 >= (uint_32)[11]) ){ goto $label$145 }
	*($138 + [256]) = ($115 << [1])
	$65 = $50
	if ( $115 ){ goto $label$144 }
	goto $label$143 
	
.LABEL $label$145
	$118 = (($115 + [16]) & [-16])
	$65 = CALL $128($118)
	*($113) = $65
	*($138 + [256]) = ($118 | [1])
	*($138 + [260]) = $115
	
.LABEL $label$144
	CALL memcpy($65, [2512], $115)
	
.LABEL $label$143
	*(($65 + $115)) = [0]
	$115 = *($138 + [256])
	$65 = ($115 & [1])
	$115 = CALL $136(($138 + [1248]), ( *($113) ? $50 : $65 ), ( *($138 + [260]) ? uint_32($115 >> [1]) : $65 ))
	$65 = ($115 + [8])
	*(($114 = (($138 + [64]) + [8]))) = *($65)
	*($138 + [64]) = *($115)
	*($115) = [0]
	*(($115 + [4])) = [0]
	*($65) = [0]
	*(($115 = (($138 + [240]) + [8]))) = [0]
	*($138 + [240]) = (int_64)0
	$65 = CALL strlen([2608])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$52 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$148 }
	*($138 + [240]) = ($65 << [1])
	$118 = $32
	if ( $65 ){ goto $label$147 }
	goto $label$146 
	
.LABEL $label$148
	$116 = (($65 + [16]) & [-16])
	$118 = CALL $128($116)
	*($115) = $118
	*($138 + [240]) = ($116 | [1])
	*($138 + [244]) = $65
	
.LABEL $label$147
	CALL memcpy($118, [2608], $65)
	
.LABEL $label$146
	*(($118 + $65)) = [0]
	$65 = *($138 + [240])
	$118 = ($65 & [1])
	$65 = CALL $136(($138 + [64]), ( *($115) ? $32 : $118 ), ( *($138 + [244]) ? uint_32($65 >> [1]) : $118 ))
	$118 = ($65 + [8])
	*($12) = *($118)
	*($138 + [1208]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($118) = [0]
	CALL _ZNSt3__19to_stringEy(($138 + [224]), ((uint_64)CALL $fimport$14() / (uint_64)(int_64)1000))
	$65 = *($138 + [224])
	$118 = ($65 & [1])
	$116 = (($138 + [224]) + [8])
	$65 = CALL $136(($138 + [1208]), ( *($116) ? $33 : $118 ), ( *($138 + [228]) ? uint_32($65 >> [1]) : $118 ))
	$118 = ($65 + [8])
	*(($117 = (($138 + [1136]) + [8]))) = *($118)
	*($138 + [1136]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($118) = [0]
	*(($118 = (($138 + [208]) + [8]))) = [0]
	*($138 + [208]) = (int_64)0
	$65 = CALL strlen([2624])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$51 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$151 }
	*($138 + [208]) = ($65 << [1])
	$120 = $53
	if ( $65 ){ goto $label$150 }
	goto $label$149 
	
.LABEL $label$151
	$121 = (($65 + [16]) & [-16])
	$120 = CALL $128($121)
	*($118) = $120
	*($138 + [208]) = ($121 | [1])
	*($138 + [212]) = $65
	
.LABEL $label$150
	CALL memcpy($120, [2624], $65)
	
.LABEL $label$149
	*(($120 + $65)) = [0]
	$65 = *($138 + [208])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [1136]), ( *($118) ? $53 : $120 ), ( *($138 + [212]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*(($119 = (($138 + [880]) + [8]))) = *($120)
	*($138 + [880]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	if ( ((*($138 + [208]) & [1]) == 0) ){ goto $label$152 }
	CALL $130(*($118))
	
.LABEL $label$152
	if ( ((*($138 + [1136]) & [1]) == 0) ){ goto $label$153 }
	CALL $130(*($117))
	
.LABEL $label$153
	if ( ((*($138 + [224]) & [1]) == 0) ){ goto $label$154 }
	CALL $130(*($116))
	
.LABEL $label$154
	if ( ((*($138 + [1208]) & [1]) == 0) ){ goto $label$155 }
	CALL $130(*($12))
	
.LABEL $label$155
	if ( ((*($138 + [240]) & [1]) == 0) ){ goto $label$156 }
	CALL $130(*($115))
	
.LABEL $label$156
	if ( ((*($138 + [64]) & [1]) == 0) ){ goto $label$157 }
	CALL $130(*($114))
	
.LABEL $label$157
	if ( ((*($138 + [256]) & [1]) == 0) ){ goto $label$158 }
	CALL $130(*($113))
	
.LABEL $label$158
	if ( ((*($138 + [1248]) & [1]) == 0) ){ goto $label$159 }
	CALL $130(*($112))
	
.LABEL $label$159
	if ( ((*($138 + [272]) & [1]) == 0) ){ goto $label$160 }
	CALL $130(*($111))
	
.LABEL $label$160
	if ( ((*($138 + [864]) & [1]) == 0) ){ goto $label$161 }
	CALL $130(*($110))
	
.LABEL $label$161
	if ( ((*($138 + [288]) & [1]) == 0) ){ goto $label$162 }
	CALL $130(*($109))
	
.LABEL $label$162
	if ( ((*($138 + [848]) & [1]) == 0) ){ goto $label$163 }
	CALL $130(*($108))
	
.LABEL $label$163
	if ( ((*($138 + [304]) & [1]) == 0) ){ goto $label$164 }
	CALL $130(*($107))
	
.LABEL $label$164
	if ( ((*($138 + [832]) & [1]) == 0) ){ goto $label$165 }
	CALL $130(*($106))
	
.LABEL $label$165
	if ( ((*($138 + [320]) & [1]) == 0) ){ goto $label$166 }
	CALL $130(*($105))
	
.LABEL $label$166
	if ( ((*($138 + [816]) & [1]) == 0) ){ goto $label$167 }
	CALL $130(*($104))
	
.LABEL $label$167
	if ( ((*($138 + [336]) & [1]) == 0) ){ goto $label$168 }
	CALL $130(*($103))
	
.LABEL $label$168
	if ( ((*($138 + [800]) & [1]) == 0) ){ goto $label$169 }
	CALL $130(*($102))
	
.LABEL $label$169
	if ( ((*($138 + [352]) & [1]) == 0) ){ goto $label$170 }
	CALL $130(*($101))
	
.LABEL $label$170
	if ( ((*($138 + [784]) & [1]) == 0) ){ goto $label$171 }
	CALL $130(*($100))
	
.LABEL $label$171
	if ( ((*($138 + [368]) & [1]) == 0) ){ goto $label$172 }
	CALL $130(*($99))
	
.LABEL $label$172
	if ( ((*($138 + [768]) & [1]) == 0) ){ goto $label$173 }
	CALL $130(*($98))
	
.LABEL $label$173
	if ( ((*($138 + [384]) & [1]) == 0) ){ goto $label$174 }
	CALL $130(*($97))
	
.LABEL $label$174
	if ( ((*($138 + [752]) & [1]) == 0) ){ goto $label$175 }
	CALL $130(*($96))
	
.LABEL $label$175
	if ( ((*($138 + [400]) & [1]) == 0) ){ goto $label$176 }
	CALL $130(*($95))
	
.LABEL $label$176
	if ( ((*($138 + [736]) & [1]) == 0) ){ goto $label$177 }
	CALL $130(*($94))
	
.LABEL $label$177
	if ( ((*($138 + [416]) & [1]) == 0) ){ goto $label$178 }
	CALL $130(*($93))
	
.LABEL $label$178
	if ( ((*($138 + [720]) & [1]) == 0) ){ goto $label$179 }
	CALL $130(*($92))
	
.LABEL $label$179
	if ( ((*($138 + [432]) & [1]) == 0) ){ goto $label$180 }
	CALL $130(*($91))
	
.LABEL $label$180
	if ( ((*($138 + [704]) & [1]) == 0) ){ goto $label$181 }
	CALL $130(*($90))
	
.LABEL $label$181
	if ( ((*($138 + [448]) & [1]) == 0) ){ goto $label$182 }
	CALL $130(*($89))
	
.LABEL $label$182
	if ( ((*($138 + [688]) & [1]) == 0) ){ goto $label$183 }
	CALL $130(*($88))
	
.LABEL $label$183
	if ( ((*($138 + [464]) & [1]) == 0) ){ goto $label$184 }
	CALL $130(*($132))
	
.LABEL $label$184
	if ( ((*($138 + [672]) & [1]) == 0) ){ goto $label$185 }
	CALL $130(*($87))
	
.LABEL $label$185
	if ( ((*($138 + [480]) & [1]) == 0) ){ goto $label$186 }
	CALL $130(*($86))
	
.LABEL $label$186
	if ( ((*($138 + [656]) & [1]) == 0) ){ goto $label$187 }
	CALL $130(*($85))
	
.LABEL $label$187
	if ( ((*($138 + [496]) & [1]) == 0) ){ goto $label$188 }
	CALL $130(*($134))
	
.LABEL $label$188
	if ( ((*($138 + [640]) & [1]) == 0) ){ goto $label$189 }
	CALL $130(*($84))
	
.LABEL $label$189
	if ( ((*($138 + [512]) & [1]) == 0) ){ goto $label$190 }
	CALL $130(*($83))
	
.LABEL $label$190
	if ( ((*($138 + [624]) & [1]) == 0) ){ goto $label$191 }
	CALL $130(*($82))
	
.LABEL $label$191
	if ( ((*($138 + [528]) & [1]) == 0) ){ goto $label$192 }
	CALL $130(*($81))
	
.LABEL $label$192
	if ( ((*($138 + [608]) & [1]) == 0) ){ goto $label$193 }
	CALL $130(*($80))
	
.LABEL $label$193
	if ( ((*($138 + [544]) & [1]) == 0) ){ goto $label$194 }
	CALL $130(*($79))
	
.LABEL $label$194
	if ( ((*($138 + [592]) & [1]) == 0) ){ goto $label$195 }
	CALL $130(*($78))
	
.LABEL $label$195
	if ( ((*($138 + [560]) & [1]) == 0) ){ goto $label$196 }
	CALL $130(*($77))
	
.LABEL $label$196
	if ( ((*($138 + [576]) & [1]) == 0) ){ goto $label$197 }
	CALL $130(*($76))
	
.LABEL $label$197
	*($83) = [0]
	*($138 + [512]) = (int_64)0
	$65 = CALL strlen([2448])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$50 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$200 }
	*($138 + [512]) = ($65 << [1])
	$120 = $34
	if ( $65 ){ goto $label$199 }
	goto $label$198 
	
.LABEL $label$200
	$121 = (($65 + [16]) & [-16])
	$120 = CALL $128($121)
	*($83) = $120
	*($138 + [512]) = ($121 | [1])
	*($138 + [516]) = $65
	
.LABEL $label$199
	CALL memcpy($120, [2448], $65)
	
.LABEL $label$198
	*(($120 + $65)) = [0]
	*($134) = [0]
	*($138 + [496]) = (int_64)0
	$65 = CALL strlen([2464])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$49 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$203 }
	*($138 + [496]) = ($65 << [1])
	$120 = $35
	if ( $65 ){ goto $label$202 }
	goto $label$201 
	
.LABEL $label$203
	$121 = (($65 + [16]) & [-16])
	$120 = CALL $128($121)
	*($134) = $120
	*($138 + [496]) = ($121 | [1])
	*($138 + [500]) = $65
	
.LABEL $label$202
	CALL memcpy($120, [2464], $65)
	
.LABEL $label$201
	*(($120 + $65)) = [0]
	$65 = *($138 + [496])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [512]), ( *($134) ? $35 : $120 ), ( *($138 + [500]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($81) = *($120)
	*($138 + [528]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	CALL _ZNSt3__19to_stringEy(($138 + [480]), *($7))
	$65 = *($138 + [480])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [528]), ( *($86) ? $36 : $120 ), ( *($138 + [484]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($79) = *($120)
	*($138 + [544]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	*($132) = [0]
	*($138 + [464]) = (int_64)0
	$65 = CALL strlen([2480])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$48 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$206 }
	*($138 + [464]) = ($65 << [1])
	$120 = $37
	if ( $65 ){ goto $label$205 }
	goto $label$204 
	
.LABEL $label$206
	$121 = (($65 + [16]) & [-16])
	$120 = CALL $128($121)
	*($132) = $120
	*($138 + [464]) = ($121 | [1])
	*($138 + [468]) = $65
	
.LABEL $label$205
	CALL memcpy($120, [2480], $65)
	
.LABEL $label$204
	*(($120 + $65)) = [0]
	$65 = *($138 + [464])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [544]), ( *($132) ? $37 : $120 ), ( *($138 + [468]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($77) = *($120)
	*($138 + [560]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	CALL _ZNSt3__19to_stringEy(($138 + [448]), *($6))
	$65 = *($138 + [448])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [560]), ( *($89) ? $38 : $120 ), ( *($138 + [452]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($76) = *($120)
	*($138 + [576]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	*($91) = [0]
	*($138 + [432]) = (int_64)0
	$65 = CALL strlen([2496])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$47 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$209 }
	*($138 + [432]) = ($65 << [1])
	$120 = $39
	if ( $65 ){ goto $label$208 }
	goto $label$207 
	
.LABEL $label$209
	$121 = (($65 + [16]) & [-16])
	$120 = CALL $128($121)
	*($91) = $120
	*($138 + [432]) = ($121 | [1])
	*($138 + [436]) = $65
	
.LABEL $label$208
	CALL memcpy($120, [2496], $65)
	
.LABEL $label$207
	*(($120 + $65)) = [0]
	$65 = *($138 + [432])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [576]), ( *($91) ? $39 : $120 ), ( *($138 + [436]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($78) = *($120)
	*($138 + [592]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	*($138 + [200]) = *($72)
	CALL $84(($138 + [416]), ($138 + [200]))
	$65 = *($138 + [416])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [592]), ( *($93) ? $40 : $120 ), ( *($138 + [420]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($80) = *($120)
	*($138 + [608]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	*($95) = [0]
	*($138 + [400]) = (int_64)0
	$65 = CALL strlen([2512])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$46 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$212 }
	*($138 + [400]) = ($65 << [1])
	$120 = $41
	if ( $65 ){ goto $label$211 }
	goto $label$210 
	
.LABEL $label$212
	$121 = (($65 + [16]) & [-16])
	$120 = CALL $128($121)
	*($95) = $120
	*($138 + [400]) = ($121 | [1])
	*($138 + [404]) = $65
	
.LABEL $label$211
	CALL memcpy($120, [2512], $65)
	
.LABEL $label$210
	*(($120 + $65)) = [0]
	$65 = *($138 + [400])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [608]), ( *($95) ? $41 : $120 ), ( *($138 + [404]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($82) = *($120)
	*($138 + [624]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	*($97) = [0]
	*($138 + [384]) = (int_64)0
	$65 = CALL strlen([2528])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$45 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$215 }
	*($138 + [384]) = ($65 << [1])
	$120 = $42
	if ( $65 ){ goto $label$214 }
	goto $label$213 
	
.LABEL $label$215
	$121 = (($65 + [16]) & [-16])
	$120 = CALL $128($121)
	*($97) = $120
	*($138 + [384]) = ($121 | [1])
	*($138 + [388]) = $65
	
.LABEL $label$214
	CALL memcpy($120, [2528], $65)
	
.LABEL $label$213
	*(($120 + $65)) = [0]
	$65 = *($138 + [384])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [624]), ( *($97) ? $42 : $120 ), ( *($138 + [388]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($84) = *($120)
	*($138 + [640]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	CALL _ZNSt3__19to_stringEy(($138 + [368]), $2)
	$65 = *($138 + [368])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [640]), ( *($99) ? $43 : $120 ), ( *($138 + [372]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($85) = *($120)
	*($138 + [656]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	*($101) = [0]
	*($138 + [352]) = (int_64)0
	$65 = CALL strlen([2544])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$44 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$218 }
	*($138 + [352]) = ($65 << [1])
	$120 = $44
	if ( $65 ){ goto $label$217 }
	goto $label$216 
	
.LABEL $label$218
	$121 = (($65 + [16]) & [-16])
	$120 = CALL $128($121)
	*($101) = $120
	*($138 + [352]) = ($121 | [1])
	*($138 + [356]) = $65
	
.LABEL $label$217
	CALL memcpy($120, [2544], $65)
	
.LABEL $label$216
	*(($120 + $65)) = [0]
	$65 = *($138 + [352])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [656]), ( *($101) ? $44 : $120 ), ( *($138 + [356]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($87) = *($120)
	*($138 + [672]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	*($138 + [192]) = $1
	CALL $84(($138 + [336]), ($138 + [192]))
	$65 = *($138 + [336])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [672]), ( *($103) ? $45 : $120 ), ( *($138 + [340]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($88) = *($120)
	*($138 + [688]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	*($105) = [0]
	*($138 + [320]) = (int_64)0
	$65 = CALL strlen([2512])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$43 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$221 }
	*($138 + [320]) = ($65 << [1])
	$120 = $46
	if ( $65 ){ goto $label$220 }
	goto $label$219 
	
.LABEL $label$221
	$121 = (($65 + [16]) & [-16])
	$120 = CALL $128($121)
	*($105) = $120
	*($138 + [320]) = ($121 | [1])
	*($138 + [324]) = $65
	
.LABEL $label$220
	CALL memcpy($120, [2512], $65)
	
.LABEL $label$219
	*(($120 + $65)) = [0]
	$65 = *($138 + [320])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [688]), ( *($105) ? $46 : $120 ), ( *($138 + [324]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($90) = *($120)
	*($138 + [704]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	*($107) = [0]
	*($138 + [304]) = (int_64)0
	$65 = CALL strlen([2560])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$42 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$224 }
	*($138 + [304]) = ($65 << [1])
	$120 = $47
	if ( $65 ){ goto $label$223 }
	goto $label$222 
	
.LABEL $label$224
	$121 = (($65 + [16]) & [-16])
	$120 = CALL $128($121)
	*($107) = $120
	*($138 + [304]) = ($121 | [1])
	*($138 + [308]) = $65
	
.LABEL $label$223
	CALL memcpy($120, [2560], $65)
	
.LABEL $label$222
	*(($120 + $65)) = [0]
	$65 = *($138 + [304])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [704]), ( *($107) ? $47 : $120 ), ( *($138 + [308]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($92) = *($120)
	*($138 + [720]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	CALL _ZNSt3__19to_stringEf(($138 + [288]), (DEMOTE float_32)(float_64 *($138 + [960])))
	$65 = *($138 + [288])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [720]), ( *($109) ? $48 : $120 ), ( *($138 + [292]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($94) = *($120)
	*($138 + [736]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	*($111) = [0]
	*($138 + [272]) = (int_64)0
	$65 = CALL strlen([2576])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$41 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$227 }
	*($138 + [272]) = ($65 << [1])
	$120 = $49
	if ( $65 ){ goto $label$226 }
	goto $label$225 
	
.LABEL $label$227
	$121 = (($65 + [16]) & [-16])
	$120 = CALL $128($121)
	*($111) = $120
	*($138 + [272]) = ($121 | [1])
	*($138 + [276]) = $65
	
.LABEL $label$226
	CALL memcpy($120, [2576], $65)
	
.LABEL $label$225
	*(($120 + $65)) = [0]
	$65 = *($138 + [272])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [736]), ( *($111) ? $49 : $120 ), ( *($138 + [276]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($96) = *($120)
	*($138 + [752]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($138 + [256]), $138, ($138 + [944]))
	$65 = *($138 + [256])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [752]), ( *($113) ? $50 : $120 ), ( *($138 + [260]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($98) = *($120)
	*($138 + [768]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	*($115) = [0]
	*($138 + [240]) = (int_64)0
	$65 = CALL strlen([2512])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$40 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$230 }
	*($138 + [240]) = ($65 << [1])
	$120 = $51
	if ( $65 ){ goto $label$229 }
	goto $label$228 
	
.LABEL $label$230
	$121 = (($65 + [16]) & [-16])
	$120 = CALL $128($121)
	*($115) = $120
	*($138 + [240]) = ($121 | [1])
	*($138 + [244]) = $65
	
.LABEL $label$229
	CALL memcpy($120, [2512], $65)
	
.LABEL $label$228
	*(($120 + $65)) = [0]
	$65 = *($138 + [240])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [768]), ( *($115) ? $51 : $120 ), ( *($138 + [244]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($100) = *($120)
	*($138 + [784]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	*($116) = [0]
	*($138 + [224]) = (int_64)0
	$65 = CALL strlen([2592])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$39 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$233 }
	*($138 + [224]) = ($65 << [1])
	$120 = $52
	if ( $65 ){ goto $label$232 }
	goto $label$231 
	
.LABEL $label$233
	$121 = (($65 + [16]) & [-16])
	$120 = CALL $128($121)
	*($116) = $120
	*($138 + [224]) = ($121 | [1])
	*($138 + [228]) = $65
	
.LABEL $label$232
	CALL memcpy($120, [2592], $65)
	
.LABEL $label$231
	*(($120 + $65)) = [0]
	$65 = *($138 + [224])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [784]), ( *($116) ? $52 : $120 ), ( *($138 + [228]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($102) = *($120)
	*($138 + [800]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($138 + [208]), $138, ($138 + [928]))
	$65 = *($138 + [208])
	$120 = ($65 & [1])
	$65 = CALL $136(($138 + [800]), ( *($118) ? $53 : $120 ), ( *($138 + [212]) ? uint_32($65 >> [1]) : $120 ))
	$120 = ($65 + [8])
	*($104) = *($120)
	*($138 + [816]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($120) = [0]
	*(($120 = (($138 + [176]) + [8]))) = [0]
	*($138 + [176]) = (int_64)0
	$65 = CALL strlen([2512])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$38 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$236 }
	*($138 + [176]) = ($65 << [1])
	$121 = $54
	if ( $65 ){ goto $label$235 }
	goto $label$234 
	
.LABEL $label$236
	$123 = (($65 + [16]) & [-16])
	$121 = CALL $128($123)
	*($120) = $121
	*($138 + [176]) = ($123 | [1])
	*($138 + [180]) = $65
	
.LABEL $label$235
	CALL memcpy($121, [2512], $65)
	
.LABEL $label$234
	*(($121 + $65)) = [0]
	$65 = *($138 + [176])
	$121 = ($65 & [1])
	$65 = CALL $136(($138 + [816]), ( *($120) ? $54 : $121 ), ( *($138 + [180]) ? uint_32($65 >> [1]) : $121 ))
	$121 = ($65 + [8])
	*($106) = *($121)
	*($138 + [832]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($121) = [0]
	*(($121 = (($138 + [160]) + [8]))) = [0]
	*($138 + [160]) = (int_64)0
	$65 = CALL strlen([2640])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$37 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$239 }
	*($138 + [160]) = ($65 << [1])
	$123 = $55
	if ( $65 ){ goto $label$238 }
	goto $label$237 
	
.LABEL $label$239
	$124 = (($65 + [16]) & [-16])
	$123 = CALL $128($124)
	*($121) = $123
	*($138 + [160]) = ($124 | [1])
	*($138 + [164]) = $65
	
.LABEL $label$238
	CALL memcpy($123, [2640], $65)
	
.LABEL $label$237
	*(($123 + $65)) = [0]
	$65 = *($138 + [160])
	$123 = ($65 & [1])
	$65 = CALL $136(($138 + [832]), ( *($121) ? $55 : $123 ), ( *($138 + [164]) ? uint_32($65 >> [1]) : $123 ))
	$123 = ($65 + [8])
	*($108) = *($123)
	*($138 + [848]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($123) = [0]
	CALL _ZN5eosio8exchange15asset_to_stringERKNS_5assetE(($138 + [144]), $138, ($138 + [896]))
	$65 = *($138 + [144])
	$123 = ($65 & [1])
	$122 = (($138 + [144]) + [8])
	$65 = CALL $136(($138 + [848]), ( *($122) ? $56 : $123 ), ( *($138 + [148]) ? uint_32($65 >> [1]) : $123 ))
	$123 = ($65 + [8])
	*($112) = *($123)
	*($138 + [1248]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($123) = [0]
	*(($123 = (($138 + [128]) + [8]))) = [0]
	*($138 + [128]) = (int_64)0
	$65 = CALL strlen([2512])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$36 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$242 }
	*($138 + [128]) = ($65 << [1])
	$124 = $57
	if ( $65 ){ goto $label$241 }
	goto $label$240 
	
.LABEL $label$242
	$126 = (($65 + [16]) & [-16])
	$124 = CALL $128($126)
	*($123) = $124
	*($138 + [128]) = ($126 | [1])
	*($138 + [132]) = $65
	
.LABEL $label$241
	CALL memcpy($124, [2512], $65)
	
.LABEL $label$240
	*(($124 + $65)) = [0]
	$65 = *($138 + [128])
	$124 = ($65 & [1])
	$65 = CALL $136(($138 + [1248]), ( *($123) ? $57 : $124 ), ( *($138 + [132]) ? uint_32($65 >> [1]) : $124 ))
	$124 = ($65 + [8])
	*($114) = *($124)
	*($138 + [64]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($124) = [0]
	*(($124 = (($138 + [112]) + [8]))) = [0]
	*($138 + [112]) = (int_64)0
	$65 = CALL strlen([2608])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$35 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$245 }
	*($138 + [112]) = ($65 << [1])
	$126 = $58
	if ( $65 ){ goto $label$244 }
	goto $label$243 
	
.LABEL $label$245
	$137 = (($65 + [16]) & [-16])
	$126 = CALL $128($137)
	*($124) = $126
	*($138 + [112]) = ($137 | [1])
	*($138 + [116]) = $65
	
.LABEL $label$244
	CALL memcpy($126, [2608], $65)
	
.LABEL $label$243
	*(($126 + $65)) = [0]
	$65 = *($138 + [112])
	$126 = ($65 & [1])
	$65 = CALL $136(($138 + [64]), ( *($124) ? $58 : $126 ), ( *($138 + [116]) ? uint_32($65 >> [1]) : $126 ))
	$126 = ($65 + [8])
	*($12) = *($126)
	*($138 + [1208]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($126) = [0]
	CALL _ZNSt3__19to_stringEy(($138 + [96]), ((uint_64)CALL $fimport$14() / (uint_64)(int_64)1000))
	$65 = *($138 + [96])
	$126 = ($65 & [1])
	$125 = (($138 + [96]) + [8])
	$65 = CALL $136(($138 + [1208]), ( *($125) ? $59 : $126 ), ( *($138 + [100]) ? uint_32($65 >> [1]) : $126 ))
	$126 = ($65 + [8])
	*($117) = *($126)
	*($138 + [1136]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($126) = [0]
	*(($126 = (($138 + [80]) + [8]))) = [0]
	*($138 + [80]) = (int_64)0
	$65 = CALL strlen([2624])
	if ( ((uint_32)$65 >= (uint_32)[-16]) ){ goto $label$34 }
	if ( ((uint_32)$65 >= (uint_32)[11]) ){ goto $label$248 }
	*($138 + [80]) = ($65 << [1])
	$137 = $60
	if ( $65 ){ goto $label$247 }
	goto $label$246 
	
.LABEL $label$248
	$127 = (($65 + [16]) & [-16])
	$137 = CALL $128($127)
	*($126) = $137
	*($138 + [80]) = ($127 | [1])
	*($138 + [84]) = $65
	
.LABEL $label$247
	CALL memcpy($137, [2624], $65)
	
.LABEL $label$246
	*(($137 + $65)) = [0]
	$65 = *($138 + [80])
	$137 = ($65 & [1])
	$65 = CALL $136(($138 + [1136]), ( *($126) ? $60 : $137 ), ( *($138 + [84]) ? uint_32($65 >> [1]) : $137 ))
	$137 = ($65 + [8])
	*($110) = *($137)
	*($138 + [864]) = *($65)
	*($65) = [0]
	*(($65 + [4])) = [0]
	*($137) = [0]
	if ( ((*($138 + [80]) & [1]) == 0) ){ goto $label$249 }
	CALL $130(*($126))
	
.LABEL $label$249
	if ( ((*($138 + [1136]) & [1]) == 0) ){ goto $label$250 }
	CALL $130(*($117))
	
.LABEL $label$250
	if ( ((*($138 + [96]) & [1]) == 0) ){ goto $label$251 }
	CALL $130(*($125))
	
.LABEL $label$251
	if ( ((*($138 + [1208]) & [1]) == 0) ){ goto $label$252 }
	CALL $130(*($12))
	
.LABEL $label$252
	if ( ((*($138 + [112]) & [1]) == 0) ){ goto $label$253 }
	CALL $130(*($124))
	
.LABEL $label$253
	if ( ((*($138 + [64]) & [1]) == 0) ){ goto $label$254 }
	CALL $130(*($114))
	
.LABEL $label$254
	if ( ((*($138 + [128]) & [1]) == 0) ){ goto $label$255 }
	CALL $130(*($123))
	
.LABEL $label$255
	if ( ((*($138 + [1248]) & [1]) == 0) ){ goto $label$256 }
	CALL $130(*($112))
	
.LABEL $label$256
	if ( ((*($138 + [144]) & [1]) == 0) ){ goto $label$257 }
	CALL $130(*($122))
	
.LABEL $label$257
	if ( ((*($138 + [848]) & [1]) == 0) ){ goto $label$258 }
	CALL $130(*($108))
	
.LABEL $label$258
	if ( ((*($138 + [160]) & [1]) == 0) ){ goto $label$259 }
	CALL $130(*($121))
	
.LABEL $label$259
	if ( ((*($138 + [832]) & [1]) == 0) ){ goto $label$260 }
	CALL $130(*($106))
	
.LABEL $label$260
	if ( ((*($138 + [176]) & [1]) == 0) ){ goto $label$261 }
	CALL $130(*($120))
	
.LABEL $label$261
	if ( ((*($138 + [816]) & [1]) == 0) ){ goto $label$262 }
	CALL $130(*($104))
	
.LABEL $label$262
	if ( ((*($138 + [208]) & [1]) == 0) ){ goto $label$263 }
	CALL $130(*($118))
	
.LABEL $label$263
	if ( ((*($138 + [800]) & [1]) == 0) ){ goto $label$264 }
	CALL $130(*($102))
	
.LABEL $label$264
	if ( ((*($138 + [224]) & [1]) == 0) ){ goto $label$265 }
	CALL $130(*($116))
	
.LABEL $label$265
	if ( ((*($138 + [784]) & [1]) == 0) ){ goto $label$266 }
	CALL $130(*($100))
	
.LABEL $label$266
	if ( ((*($138 + [240]) & [1]) == 0) ){ goto $label$267 }
	CALL $130(*($115))
	
.LABEL $label$267
	if ( ((*($138 + [768]) & [1]) == 0) ){ goto $label$268 }
	CALL $130(*($98))
	
.LABEL $label$268
	if ( ((*($138 + [256]) & [1]) == 0) ){ goto $label$269 }
	CALL $130(*($113))
	
.LABEL $label$269
	if ( ((*($138 + [752]) & [1]) == 0) ){ goto $label$270 }
	CALL $130(*($96))
	
.LABEL $label$270
	if ( ((*($138 + [272]) & [1]) == 0) ){ goto $label$271 }
	CALL $130(*($111))
	
.LABEL $label$271
	if ( ((*($138 + [736]) & [1]) == 0) ){ goto $label$272 }
	CALL $130(*($94))
	
.LABEL $label$272
	if ( ((*($138 + [288]) & [1]) == 0) ){ goto $label$273 }
	CALL $130(*($109))
	
.LABEL $label$273
	if ( ((*($138 + [720]) & [1]) == 0) ){ goto $label$274 }
	CALL $130(*($92))
	
.LABEL $label$274
	if ( ((*($138 + [304]) & [1]) == 0) ){ goto $label$275 }
	CALL $130(*($107))
	
.LABEL $label$275
	if ( ((*($138 + [704]) & [1]) == 0) ){ goto $label$276 }
	CALL $130(*($90))
	
.LABEL $label$276
	if ( ((*($138 + [320]) & [1]) == 0) ){ goto $label$277 }
	CALL $130(*($105))
	
.LABEL $label$277
	if ( ((*($138 + [688]) & [1]) == 0) ){ goto $label$278 }
	CALL $130(*($88))
	
.LABEL $label$278
	if ( ((*($138 + [336]) & [1]) == 0) ){ goto $label$279 }
	CALL $130(*($103))
	
.LABEL $label$279
	if ( ((*($138 + [672]) & [1]) == 0) ){ goto $label$280 }
	CALL $130(*($87))
	
.LABEL $label$280
	if ( ((*($138 + [352]) & [1]) == 0) ){ goto $label$281 }
	CALL $130(*($101))
	
.LABEL $label$281
	if ( ((*($138 + [656]) & [1]) == 0) ){ goto $label$282 }
	CALL $130(*($85))
	
.LABEL $label$282
	if ( ((*($138 + [368]) & [1]) == 0) ){ goto $label$283 }
	CALL $130(*($99))
	
.LABEL $label$283
	if ( ((*($138 + [640]) & [1]) == 0) ){ goto $label$284 }
	CALL $130(*($84))
	
.LABEL $label$284
	if ( ((*($138 + [384]) & [1]) == 0) ){ goto $label$285 }
	CALL $130(*($97))
	
.LABEL $label$285
	if ( ((*($138 + [624]) & [1]) == 0) ){ goto $label$286 }
	CALL $130(*($82))
	
.LABEL $label$286
	if ( ((*($138 + [400]) & [1]) == 0) ){ goto $label$287 }
	CALL $130(*($95))
	
.LABEL $label$287
	if ( ((*($138 + [608]) & [1]) == 0) ){ goto $label$288 }
	CALL $130(*($80))
	
.LABEL $label$288
	if ( ((*($138 + [416]) & [1]) == 0) ){ goto $label$289 }
	CALL $130(*($93))
	
.LABEL $label$289
	if ( ((*($138 + [592]) & [1]) == 0) ){ goto $label$290 }
	CALL $130(*($78))
	
.LABEL $label$290
	if ( ((*($138 + [432]) & [1]) == 0) ){ goto $label$291 }
	CALL $130(*($91))
	
.LABEL $label$291
	if ( ((*($138 + [576]) & [1]) == 0) ){ goto $label$292 }
	CALL $130(*($76))
	
.LABEL $label$292
	if ( ((*($138 + [448]) & [1]) == 0) ){ goto $label$293 }
	CALL $130(*($89))
	
.LABEL $label$293
	if ( ((*($138 + [560]) & [1]) == 0) ){ goto $label$294 }
	CALL $130(*($77))
	
.LABEL $label$294
	if ( ((*($138 + [464]) & [1]) == 0) ){ goto $label$295 }
	CALL $130(*($132))
	
.LABEL $label$295
	if ( ((*($138 + [544]) & [1]) == 0) ){ goto $label$296 }
	CALL $130(*($79))
	
.LABEL $label$296
	if ( ((*($138 + [480]) & [1]) == 0) ){ goto $label$297 }
	CALL $130(*($86))
	
.LABEL $label$297
	if ( ((*($138 + [528]) & [1]) == 0) ){ goto $label$298 }
	CALL $130(*($81))
	
.LABEL $label$298
	if ( ((*($138 + [496]) & [1]) == 0) ){ goto $label$299 }
	CALL $130(*($134))
	
.LABEL $label$299
	if ( ((*($138 + [512]) & [1]) == 0) ){ goto $label$300 }
	CALL $130(*($83))
	
.LABEL $label$300
	$71 = *($138 + [896])
	$133 = *($138 + [928])
	if ( ((int_64)$133 <= (int_64)$71) ){ goto $label$301 }
	$66 = *($0)
	$135 = (int_64)0
	$3 = (int_64)59
	$134 = [1152]
	$136 = (int_64)0
	
.LOOP $label$302:
	if ( ((uint_64)$135 > (uint_64)(int_64)5) ){ goto $label$307 }
	$132 = *($134)
	if ( ((uint_32)(($132 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$306 }
	$132 = ($132 + [165])
	goto $label$305 
	
.LABEL $label$307
	$4 = (int_64)0
	if ( ((uint_64)$135 <= (uint_64)(int_64)11) ){ goto $label$304 }
	goto $label$303 
	
.LABEL $label$306
	$132 = ( ($132 + [208]) ? [0] : ((($132 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$305
	$4 = (int_64)((int_64)(CASTING uint_64)(uint_32 $132) << (int_64)56) >> (int_64)56)
	
.LABEL $label$304
	$4 = ((int_64)((int_64)$4 & (int_64)31) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$303
	$134 = ($134 + [1])
	$135 = ((int_64)$135 + (int_64)1)
	$136 = ((int_64)$4 | (int_64)$136)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$302 }
	*($114) = $136
	*($138 + [64]) = $66
	$66 = *($75)
	$135 = (int_64)0
	$3 = (int_64)59
	$134 = [1168]
	$136 = (int_64)0
	
.LOOP $label$308:
	if ( ((uint_64)$135 > (uint_64)(int_64)7) ){ goto $label$313 }
	$132 = *($134)
	if ( ((uint_32)(($132 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$312 }
	$132 = ($132 + [165])
	goto $label$311 
	
.LABEL $label$313
	$4 = (int_64)0
	if ( ((uint_64)$135 <= (uint_64)(int_64)11) ){ goto $label$310 }
	goto $label$309 
	
.LABEL $label$312
	$132 = ( ($132 + [208]) ? [0] : ((($132 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$311
	$4 = (int_64)((int_64)(CASTING uint_64)(uint_32 $132) << (int_64)56) >> (int_64)56)
	
.LABEL $label$310
	$4 = ((int_64)((int_64)$4 & (int_64)31) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$309
	$134 = ($134 + [1])
	$135 = ((int_64)$135 + (int_64)1)
	$136 = ((int_64)$4 | (int_64)$136)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$308 }
	$4 = *($69)
	CALL eosio_assert(((int_64)*($73) == (int_64)$4), [2336])
	$135 = (int_64)
	CALL eosio_assert(((int_64)$135($133 - $71)) > (int_64)-4611686018427387904), [2384])
	CALL eosio_assert(((int_64)$135 < (int_64)4611686018427387904), [2416])
	*($117) = $1
	*($61) = $135
	*((($138 + [1136]) + [24])) = $4
	*($138 + [1136]) = *($0)
	CALL $147($62, ($138 + [864]))
	CALL $36(($138 + [1248]), CALL $35(($138 + [1208]), ($138 + [64]), $66, $136, ($138 + [1136])))
	$134 = *($138 + [1248])
	CALL send_inline($134, (*($138 + [1252]) - $134))
	$134 = *($138 + [1248])
	if ( ($134 == 0) ){ goto $label$314 }
	*($138 + [1252]) = $134
	CALL $130($134)
	
.LABEL $label$314
	$134 = *($128)
	if ( ($134 == 0) ){ goto $label$315 }
	*($14) = $134
	CALL $130($134)
	
.LABEL $label$315
	$134 = *($16)
	if ( ($134 == 0) ){ goto $label$316 }
	*($129) = $134
	CALL $130($134)
	
.LABEL $label$316
	if ( ((*($62) & [1]) == 0) ){ goto $label$317 }
	CALL $130(*((($138 + [1136]) + [40])))
	
.LABEL $label$317
	$135 = CALL current_time()
	*($138 + [1136]) = ((uint_64)$135 / (uint_64)(int_64)1000)
	if ( ((uint_64)((uint_64)$135 / (uint_64)(int_64)86400000000) <= (uint_64)((uint_64)*($130) / (uint_64)(int_64)86400000)) ){ goto $label$318 }
	*($138 + [1212]) = ($138 + [1136])
	*($138 + [1208]) = ($138 + [960])
	CALL $106(($138 + [1088]), $7, ($138 + [1208]))
	goto $label$301 
	
.LABEL $label$318
	*($138 + [1208]) = ($138 + [960])
	CALL $107(($138 + [1088]), $7, ($138 + [1208]))
	
.LABEL $label$301
	if ( ((int_64)*($138 + [944]) < (int_64)1) ){ goto $label$319 }
	$133 = *($0)
	$135 = (int_64)0
	$3 = (int_64)59
	$134 = [1152]
	$136 = (int_64)0
	
.LOOP $label$320:
	if ( ((uint_64)$135 > (uint_64)(int_64)5) ){ goto $label$325 }
	$132 = *($134)
	if ( ((uint_32)(($132 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$324 }
	$132 = ($132 + [165])
	goto $label$323 
	
.LABEL $label$325
	$4 = (int_64)0
	if ( ((uint_64)$135 <= (uint_64)(int_64)11) ){ goto $label$322 }
	goto $label$321 
	
.LABEL $label$324
	$132 = ( ($132 + [208]) ? [0] : ((($132 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$323
	$4 = (int_64)((int_64)(CASTING uint_64)(uint_32 $132) << (int_64)56) >> (int_64)56)
	
.LABEL $label$322
	$4 = ((int_64)((int_64)$4 & (int_64)31) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$321
	$134 = ($134 + [1])
	$135 = ((int_64)$135 + (int_64)1)
	$136 = ((int_64)$4 | (int_64)$136)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$320 }
	*($114) = $136
	*($138 + [64]) = $133
	$71 = *(($7 + [16]))
	$135 = (int_64)0
	$3 = (int_64)59
	$134 = [1168]
	$136 = (int_64)0
	
.LOOP $label$326:
	if ( ((uint_64)$135 > (uint_64)(int_64)7) ){ goto $label$331 }
	$132 = *($134)
	if ( ((uint_32)(($132 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$330 }
	$132 = ($132 + [165])
	goto $label$329 
	
.LABEL $label$331
	$4 = (int_64)0
	if ( ((uint_64)$135 <= (uint_64)(int_64)11) ){ goto $label$328 }
	goto $label$327 
	
.LABEL $label$330
	$132 = ( ($132 + [208]) ? [0] : ((($132 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$329
	$4 = (int_64)((int_64)(CASTING uint_64)(uint_32 $132) << (int_64)56) >> (int_64)56)
	
.LABEL $label$328
	$4 = ((int_64)((int_64)$4 & (int_64)31) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$327
	$134 = ($134 + [1])
	$135 = ((int_64)$135 + (int_64)1)
	$136 = ((int_64)$4 | (int_64)$136)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$326 }
	*($117) = *($72)
	*(($61 + [4])) = *($138 + [948])
	*($138 + [1136]) = $133
	*($61) = *($138 + [944])
	*(($61 + [12])) = *((($138 + [944]) + [12]))
	*(($61 + [8])) = *($68)
	CALL $147($62, ($138 + [880]))
	CALL $36(($138 + [1248]), CALL $35(($138 + [1208]), ($138 + [64]), $71, $136, ($138 + [1136])))
	$134 = *($138 + [1248])
	CALL send_inline($134, (*($138 + [1252]) - $134))
	$134 = *($138 + [1248])
	if ( ($134 == 0) ){ goto $label$332 }
	*($138 + [1252]) = $134
	CALL $130($134)
	
.LABEL $label$332
	$134 = *($128)
	if ( ($134 == 0) ){ goto $label$333 }
	*($14) = $134
	CALL $130($134)
	
.LABEL $label$333
	$134 = *($16)
	if ( ($134 == 0) ){ goto $label$334 }
	*($129) = $134
	CALL $130($134)
	
.LABEL $label$334
	if ( ((*($62) & [1]) == 0) ){ goto $label$319 }
	CALL $130(*((($138 + [1136]) + [40])))
	
.LABEL $label$319
	*(($134 = (($138 + [48]) + [8]))) = *($73)
	*($138 + [48]) = *($138 + [896])
	$135 = *($131)
	$4 = *(($7 + [16]))
	$3 = *(($8 + [16]))
	$136 = *($75)
	$133 = *($8)
	*((($138 + [8]) + [8])) = *($134)
	*($138 + [8]) = *($138 + [48])
	CALL _ZN5eosio8exchange19deal_fee_processingENS_5assetEyyyyyyby($0, ($138 + [8]), $136, $133, $3, $4, $135, $1, $10, $11)
	$135 = *($6)
	*($138 + [1136]) = (int_64)-4503599627370497
	CALL $100(($138 + [40]), ($138 + [976]), ($138 + [1136]))
	$134 = ((int_64)$135 == (int_64)*(*($138 + [44])))
	if ( ((int_64)*($70) > (int_64)0) ){ goto $label$335 }
	*($138 + [1136]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $64))
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [384])
	CALL $104(($138 + [1136]))
	CALL $39(*($138 + [976]), $6)
	
.LABEL $label$335
	$63 = ($63 | $134)
	$4 = *($5)
	if ( ((int_64)$4 < (int_64)1) ){ goto $label$67 }
	CALL $100(($138 + [1136]), ($138 + [976]), ($138 + [968]))
	$135 = (int_64)0
	$64 = ($138 + [976])
	$134 = *($138 + [1140])
	if ( ($134 == 0) ){ goto $label$336 }
	if ( ((float_64)*($138 + [968]) != (float_64)*($134 + [24])) ){ goto $label$336 }
	$3 = *($138 + [1136])
	$135 = ((int_64)$3 & (int_64)-4294967296)
	$64 = (CASTING uint_32)(uint_64 $3)
	
.LABEL $label$336
	$135 = (uint_64)$135 >> (uint_64)(int_64)32)
	if ( ((*($138 + [864]) & [1]) == 0) ){ goto $label$337 }
	CALL $130(*($110))
	
.LABEL $label$337
	$6 = (CASTING uint_32)(uint_64 $135)
	if ( ((*($138 + [880]) & [1]) == 0) ){ goto $label$338 }
	CALL $130(*($119))
	
.LABEL $label$338
	if ( $6 ){ goto $label$68 }
	if ( (($63 & [1]) == 0) ){ goto $label$31 }
	goto $label$66 
	
.LABEL $label$67
	if ( ((*($138 + [864]) & [1]) == 0) ){ goto $label$339 }
	CALL $130(*($110))
	
.LABEL $label$339
	if ( ((*($138 + [880]) & [1]) == 0) ){ goto $label$340 }
	CALL $130(*($119))
	
.LABEL $label$340
	if ( (($63 & [1]) == 0) ){ goto $label$31 }
	
.LABEL $label$66
	if ( ((int_64)$4 < (int_64)1) ){ goto $label$16 }
	$133 = *($0)
	$135 = (int_64)0
	$3 = (int_64)59
	$134 = [1152]
	$136 = (int_64)0
	
.LOOP $label$341:
	if ( ((uint_64)$135 > (uint_64)(int_64)5) ){ goto $label$346 }
	$132 = *($134)
	if ( ((uint_32)(($132 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$345 }
	$132 = ($132 + [165])
	goto $label$344 
	
.LABEL $label$346
	$4 = (int_64)0
	if ( ((uint_64)$135 <= (uint_64)(int_64)11) ){ goto $label$343 }
	goto $label$342 
	
.LABEL $label$345
	$132 = ( ($132 + [208]) ? [0] : ((($132 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$344
	$4 = (int_64)((int_64)(CASTING uint_64)(uint_32 $132) << (int_64)56) >> (int_64)56)
	
.LABEL $label$343
	$4 = ((int_64)((int_64)$4 & (int_64)31) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$342
	$134 = ($134 + [1])
	$135 = ((int_64)$135 + (int_64)1)
	$136 = ((int_64)$4 | (int_64)$136)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$341 }
	*($138 + [952]) = $136
	*($138 + [944]) = $133
	$133 = *($7 + [16])
	$135 = (int_64)0
	$3 = (int_64)59
	$134 = [1168]
	$136 = (int_64)0
	
.LOOP $label$347:
	if ( ((uint_64)$135 > (uint_64)(int_64)7) ){ goto $label$352 }
	$132 = *($134)
	if ( ((uint_32)(($132 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$351 }
	$132 = ($132 + [165])
	goto $label$350 
	
.LABEL $label$352
	$4 = (int_64)0
	if ( ((uint_64)$135 <= (uint_64)(int_64)11) ){ goto $label$349 }
	goto $label$348 
	
.LABEL $label$351
	$132 = ( ($132 + [208]) ? [0] : ((($132 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$350
	$4 = (int_64)((int_64)(CASTING uint_64)(uint_32 $132) << (int_64)56) >> (int_64)56)
	
.LABEL $label$349
	$4 = ((int_64)((int_64)$4 & (int_64)31) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$348
	$134 = ($134 + [1])
	$135 = ((int_64)$135 + (int_64)1)
	$136 = ((int_64)$4 | (int_64)$136)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$347 }
	*(($138 + [904])) = [0]
	*($138 + [896]) = (int_64)0
	$134 = CALL strlen([2864])
	if ( ((uint_32)$134 >= (uint_32)[-16]) ){ goto $label$33 }
	if ( ((uint_32)$134 >= (uint_32)[11]) ){ goto $label$355 }
	*($138 + [896]) = ($134 << [1])
	$132 = (($138 + [896]) | [1])
	if ( $134 ){ goto $label$354 }
	goto $label$353 
	
.LABEL $label$355
	$6 = (($134 + [16]) & [-16])
	$132 = CALL $128($6)
	*($138 + [896]) = ($6 | [1])
	*($138 + [904]) = $132
	*($138 + [900]) = $134
	
.LABEL $label$354
	CALL memcpy($132, [2864], $134)
	
.LABEL $label$353
	*(($132 + $134)) = [0]
	*(($138 + [1164])) = *(($5 + [12]))
	*(($138 + [1160])) = *(($5 + [8]))
	*(($138 + [1156])) = *(($5 + [4]))
	*($138 + [1144]) = $1
	*($138 + [1136]) = *($0)
	*($138 + [1152]) = *($5)
	$134 = (($138 + [896]) + [8])
	*(($138 + [1176])) = *($134)
	*($138 + [1168]) = *($138 + [896])
	*($138 + [896]) = [0]
	*($138 + [900]) = [0]
	*($134) = [0]
	$134 = CALL $35(($138 + [1208]), ($138 + [944]), $133, $136, ($138 + [1136]))
	CALL $36(($138 + [928]), $134)
	$132 = *($138 + [928])
	CALL send_inline($132, (*($138 + [932]) - $132))
	$132 = *($138 + [928])
	if ( ($132 == 0) ){ goto $label$356 }
	*($138 + [932]) = $132
	CALL $130($132)
	
.LABEL $label$356
	$132 = *($134 + [28])
	if ( ($132 == 0) ){ goto $label$357 }
	*(($134 + [32])) = $132
	CALL $130($132)
	
.LABEL $label$357
	$132 = *($134 + [16])
	if ( ($132 == 0) ){ goto $label$358 }
	*(($134 + [20])) = $132
	CALL $130($132)
	
.LABEL $label$358
	if ( ((*(($138 + [1168])) & [1]) == 0) ){ goto $label$359 }
	CALL $130(*(($138 + [1176])))
	
.LABEL $label$359
	if ( ((*($138 + [896]) & [1]) == 0) ){ goto $label$16 }
	CALL $130(*(($138 + [904])))
	goto $label$16 
	
.LABEL $label$65
	CALL $132(($138 + [576]))
	
.LABEL $label$64
	CALL $132(($138 + [560]))
	
.LABEL $label$63
	CALL $132(($138 + [528]))
	
.LABEL $label$62
	CALL $132(($138 + [496]))
	
.LABEL $label$61
	CALL $132(($138 + [464]))
	
.LABEL $label$60
	CALL $132(($138 + [448]))
	
.LABEL $label$59
	CALL $132(($138 + [416]))
	
.LABEL $label$58
	CALL $132(($138 + [384]))
	
.LABEL $label$57
	CALL $132(($138 + [368]))
	
.LABEL $label$56
	CALL $132(($138 + [336]))
	
.LABEL $label$55
	CALL $132(($138 + [304]))
	
.LABEL $label$54
	CALL $132(($138 + [288]))
	
.LABEL $label$53
	CALL $132(($138 + [256]))
	
.LABEL $label$52
	CALL $132(($138 + [240]))
	
.LABEL $label$51
	CALL $132(($138 + [208]))
	
.LABEL $label$50
	CALL $132(($138 + [512]))
	
.LABEL $label$49
	CALL $132(($138 + [496]))
	
.LABEL $label$48
	CALL $132(($138 + [464]))
	
.LABEL $label$47
	CALL $132(($138 + [432]))
	
.LABEL $label$46
	CALL $132(($138 + [400]))
	
.LABEL $label$45
	CALL $132(($138 + [384]))
	
.LABEL $label$44
	CALL $132(($138 + [352]))
	
.LABEL $label$43
	CALL $132(($138 + [320]))
	
.LABEL $label$42
	CALL $132(($138 + [304]))
	
.LABEL $label$41
	CALL $132(($138 + [272]))
	
.LABEL $label$40
	CALL $132(($138 + [240]))
	
.LABEL $label$39
	CALL $132(($138 + [224]))
	
.LABEL $label$38
	CALL $132(($138 + [176]))
	
.LABEL $label$37
	CALL $132(($138 + [160]))
	
.LABEL $label$36
	CALL $132(($138 + [128]))
	
.LABEL $label$35
	CALL $132(($138 + [112]))
	
.LABEL $label$34
	CALL $132(($138 + [80]))
	
.LABEL $label$33
	CALL $132(($138 + [896]))
	
.LABEL $label$32
	$4 = *($5)
	
.LABEL $label$31
	if ( ((int_64)$4 >= (int_64)1) ){ goto $label$30 }
	
.LABEL $label$16
	$6 = *($138 + [1008])
	if ( ($6 == 0) ){ goto $label$360 }
	$70 = ($138 + [1012])
	$134 = *($70)
	if ( ((int_32)$134 == (int_32)$6) ){ goto $label$362 }
	
.LOOP $label$363:
	$134 = ($134 + [-24])
	$132 = *($134)
	*($134) = [0]
	if ( ($132 == 0) ){ goto $label$364 }
	CALL $130($132)
	
.LABEL $label$364
	if ( ((int_32)$6 != (int_32)$134) ){ goto $label$363 }
	$134 = *(($138 + [1008]))
	goto $label$361 
	
.LABEL $label$362
	$134 = $6
	
.LABEL $label$361
	*($70) = $6
	CALL $130($134)
	
.LABEL $label$360
	$6 = *($138 + [1056])
	if ( ($6 == 0) ){ goto $label$365 }
	$70 = ($138 + [1060])
	$134 = *($70)
	if ( ((int_32)$134 == (int_32)$6) ){ goto $label$367 }
	
.LOOP $label$368:
	$134 = ($134 + [-24])
	$132 = *($134)
	*($134) = [0]
	if ( ($132 == 0) ){ goto $label$369 }
	if ( ((*($132 + [24]) & [1]) == 0) ){ goto $label$370 }
	CALL $130(*(($132 + [32])))
	
.LABEL $label$370
	CALL $130($132)
	
.LABEL $label$369
	if ( ((int_32)$6 != (int_32)$134) ){ goto $label$368 }
	$134 = *(($138 + [1056]))
	goto $label$366 
	
.LABEL $label$367
	$134 = $6
	
.LABEL $label$366
	*($70) = $6
	CALL $130($134)
	
.LABEL $label$365
	$6 = *($138 + [1112])
	if ( ($6 == 0) ){ goto $label$371 }
	$70 = ($138 + [1116])
	$134 = *($70)
	if ( ((int_32)$134 == (int_32)$6) ){ goto $label$373 }
	
.LOOP $label$374:
	$134 = ($134 + [-24])
	$132 = *($134)
	*($134) = [0]
	if ( ($132 == 0) ){ goto $label$375 }
	if ( ((*($132 + [32]) & [1]) == 0) ){ goto $label$376 }
	CALL $130(*(($132 + [40])))
	
.LABEL $label$376
	CALL $130($132)
	
.LABEL $label$375
	if ( ((int_32)$6 != (int_32)$134) ){ goto $label$374 }
	$134 = *(($138 + [1112]))
	goto $label$372 
	
.LABEL $label$373
	$134 = $6
	
.LABEL $label$372
	*($70) = $6
	CALL $130($134)
	
.LABEL $label$371
	*([0] + [4]) = ($138 + [1264])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $104 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [432])
	$6 = *($0 + [4])
	$7 = *(($6 + [88]))
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx_double_find_primary(*($7), *($7 + [8]), (int_64)4520852774463733762, ($9 + [8]), *($6))
	*((*(($0 + [4])) + [88])) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx_double_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)$2), [224])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $34($2, CALL $fimport$16(*($2), *($2 + [8]), (int_64)4520852774463733760, $3))
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)$2), [224])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [88])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $107 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$15 = (*([0] + [4]) - [96])
	*([0] + [4]) = $15
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [1408])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1456])
	$14 = *(($1 + [96]))
	$7 = *(($1 + [88]))
	$8 = ($1 + [80])
	$9 = *($8)
	$10 = *(($1 + [56]))
	$11 = *(($1 + [48]))
	$12 = *(($1 + [24]))
	$13 = *(($1 + [16]))
	*(($16 = $15) + [16]) = *(($1 + [8]))
	*($16 + [24]) = $13
	*($16 + [32]) = $12
	*($16 + [40]) = $11
	*($16 + [48]) = $10
	*($16 + [56]) = $9
	*($16 + [64]) = $7
	*($16 + [72]) = $14
	$7 = *($1)
	*($8) = *(*($2))
	CALL eosio_assert([1], [1520])
	$2 = *($1 + [32])
	$8 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($8 + [89])
	$14 = (CASTING uint_64)(uint_32 $8)
	$8 = (($16 + [16]) + [56])
	$6 = ($16 + [48])
	$5 = (($16 + [16]) + [24])
	$4 = (($16 + [16]) + [16])
	$3 = (($16 + [16]) + [8])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$15 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$15 = ($15 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $15
	
.LABEL $label$2
	*($16 + [4]) = $15
	*($16) = $15
	*($16 + [8]) = ($15 + $2)
	CALL $68($16, $1)
	CALL db_update_i64(*($1 + [108]), (int_64)0, $15, $2)
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL free($15)
	
.LABEL $label$4
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($16 + [88]) = *(($1 + [8]))
	if ( (CALL memcmp(($16 + [16]), ($16 + [88]), [8]) == 0) ){ goto $label$6 }
	$15 = ($1 + [112])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$7 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864512, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$7
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$6
	*($16 + [88]) = *(($1 + [16]))
	if ( (CALL memcmp($3, ($16 + [88]), [8]) == 0) ){ goto $label$8 }
	$15 = ($1 + [116])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864511, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$8
	*($16 + [88]) = *(($1 + [24]))
	if ( (CALL memcmp($4, ($16 + [88]), [8]) == 0) ){ goto $label$10 }
	$15 = ($1 + [120])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864510, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$10
	*($16 + [88]) = *(($1 + [48]))
	if ( (CALL memcmp($5, ($16 + [88]), [8]) == 0) ){ goto $label$12 }
	$15 = ($1 + [124])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864509, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$12
	*($16 + [88]) = *(($1 + [56]))
	if ( (CALL memcmp($6, ($16 + [88]), [8]) == 0) ){ goto $label$14 }
	$15 = ($1 + [128])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$15 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864508, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$15
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$14
	*($16 + [88]) = *(($1 + [80]))
	if ( (CALL memcmp(($16 + [56]), ($16 + [88]), [8]) == 0) ){ goto $label$16 }
	$15 = ($1 + [132])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$17 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864507, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$17
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$16
	*($16 + [88]) = *(($1 + [88]))
	if ( (CALL memcmp(($16 + [64]), ($16 + [88]), [8]) == 0) ){ goto $label$18 }
	$15 = ($1 + [136])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$19 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864506, ($16 + [80]), $7)
	*($15) = $2
	
.LABEL $label$19
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$18
	*($16 + [88]) = *(($1 + [96]))
	if ( (CALL memcmp($8, ($16 + [88]), [8]) == 0) ){ goto $label$20 }
	$1 = ($1 + [140])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$21 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864505, ($16 + [80]), $7)
	*($1) = $2
	
.LABEL $label$21
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$20
	*([0] + [4]) = ($16 + [96])
}

void .FUNC $106 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$15 = (*([0] + [4]) - [96])
	*([0] + [4]) = $15
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [1408])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1456])
	$6 = ($1 + [96])
	$14 = *($6)
	$7 = ($1 + [88])
	$5 = *($7)
	$8 = ($1 + [80])
	$9 = *($8)
	$10 = *(($1 + [56]))
	$11 = *(($1 + [48]))
	$12 = *(($1 + [24]))
	$13 = *(($1 + [16]))
	*(($16 = $15) + [16]) = *(($1 + [8]))
	*($16 + [24]) = $13
	*($16 + [32]) = $12
	*($16 + [40]) = $11
	*($16 + [48]) = $10
	*($16 + [56]) = $9
	*($16 + [64]) = $5
	*($16 + [72]) = $14
	$5 = *($1)
	*($8) = *(*($2))
	*($7) = *(*($2))
	*($6) = *(*($2 + [4]))
	CALL eosio_assert([1], [1520])
	$2 = *($1 + [32])
	$6 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($6 + [89])
	$14 = (CASTING uint_64)(uint_32 $6)
	$6 = (($16 + [16]) + [56])
	$7 = ($16 + [48])
	$8 = (($16 + [16]) + [24])
	$4 = (($16 + [16]) + [16])
	$3 = (($16 + [16]) + [8])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$15 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$15 = ($15 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $15
	
.LABEL $label$2
	*($16 + [4]) = $15
	*($16) = $15
	*($16 + [8]) = ($15 + $2)
	CALL $68($16, $1)
	CALL db_update_i64(*($1 + [108]), (int_64)0, $15, $2)
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL free($15)
	
.LABEL $label$4
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($16 + [88]) = *(($1 + [8]))
	if ( (CALL memcmp(($16 + [16]), ($16 + [88]), [8]) == 0) ){ goto $label$6 }
	$15 = ($1 + [112])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$7 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864512, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$7
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$6
	*($16 + [88]) = *(($1 + [16]))
	if ( (CALL memcmp($3, ($16 + [88]), [8]) == 0) ){ goto $label$8 }
	$15 = ($1 + [116])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864511, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$8
	*($16 + [88]) = *(($1 + [24]))
	if ( (CALL memcmp($4, ($16 + [88]), [8]) == 0) ){ goto $label$10 }
	$15 = ($1 + [120])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864510, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$10
	*($16 + [88]) = *(($1 + [48]))
	if ( (CALL memcmp($8, ($16 + [88]), [8]) == 0) ){ goto $label$12 }
	$15 = ($1 + [124])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864509, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$12
	*($16 + [88]) = *(($1 + [56]))
	if ( (CALL memcmp($7, ($16 + [88]), [8]) == 0) ){ goto $label$14 }
	$15 = ($1 + [128])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$15 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864508, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$15
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$14
	*($16 + [88]) = *(($1 + [80]))
	if ( (CALL memcmp(($16 + [56]), ($16 + [88]), [8]) == 0) ){ goto $label$16 }
	$15 = ($1 + [132])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$17 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864507, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$17
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$16
	*($16 + [88]) = *(($1 + [88]))
	if ( (CALL memcmp(($16 + [64]), ($16 + [88]), [8]) == 0) ){ goto $label$18 }
	$15 = ($1 + [136])
	$2 = *($15)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$19 }
	$2 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864506, ($16 + [80]), $5)
	*($15) = $2
	
.LABEL $label$19
	CALL db_idx_double_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$18
	*($16 + [88]) = *(($1 + [96]))
	if ( (CALL memcmp($6, ($16 + [88]), [8]) == 0) ){ goto $label$20 }
	$1 = ($1 + [140])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$21 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3665743365212864505, ($16 + [80]), $5)
	*($1) = $2
	
.LABEL $label$21
	CALL db_idx64_update($2, (int_64)0, ($16 + [88]))
	
.LABEL $label$20
	*([0] + [4]) = ($16 + [96])
}

void .FUNC $109 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$7 = *($0 + [4])
	$8 = ((int_32)($7 - $4) / (int_32)[12])
	$6 = ($8 + [1])
	if ( ((uint_32)$6 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[12])
	if ( ((uint_32)$3 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($3 << [1])
	$5 = ( $6 ? $5 : ($5 <= $6) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $128(((int_32)$5 * (int_32)[12]))
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $146($0)
	
.LABEL $label$1
	$2 = *($1)
	*($1) = (int_64)0
	*(($8 = ($6 + ((int_32)$8 * (int_32)[12])))) = $2
	$1 = ($1 + [8])
	$3 = *($1)
	*($1) = [0]
	*(($8 + [8])) = $3
	$5 = ($6 + ((int_32)$5 * (int_32)[12]))
	$6 = ($8 + [12])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$6 }
	$1 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$7:
	*(($8 + [-12])) = *($7)
	$4 = ($7 + [8])
	*(($8 + [-4])) = *($4)
	*($7) = [0]
	*(($7 + [4])) = [0]
	*($4) = [0]
	$8 = ($8 + [-12])
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	$8 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$9:
	if ( ((*($7) & [1]) == 0) ){ goto $label$10 }
	CALL $130(*(($7 + [8])))
	
.LABEL $label$10
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $8) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $130($4)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN5eosio8exchange5splitERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_ (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	*([0] + [4]) = $12
	$10 = ($2 + [1])
	$4 = CALL strcpy(CALL $129((CALL $177(( *($2 + [8]) ? $10 : (*($2) & [1]) )) + [1])), ( *($2 + [8]) ? $10 : (*($2) & [1]) ))
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = ($3 + [1])
	$10 = CALL strtok($4, ( *($3 + [8]) ? $5 : (*($3) & [1]) ))
	if ( ($10 == 0) ){ goto $label$2 }
	$6 = ($12 | [1])
	$7 = ($12 + [8])
	$9 = ($0 + [4])
	
.LOOP $label$3:
	*($7) = [0]
	*($12) = (int_64)0
	$2 = CALL strlen($10)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($12) = ($2 << [1])
	$11 = $6
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$8 = (($2 + [16]) & [-16])
	$11 = CALL $128($8)
	*($7) = $11
	*($12) = ($8 | [1])
	*($12 + [4]) = $2
	
.LABEL $label$5
	CALL memcpy($11, $10, $2)
	
.LABEL $label$4
	*(($11 + $2)) = [0]
	$2 = *($9)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [8]))) ){ goto $label$8 }
	*($2) = *($12)
	*(($2 + [8])) = *($7)
	*($7) = [0]
	*($12) = [0]
	*($12 + [4]) = [0]
	*($9) = (*($9) + [12])
	goto $label$7 
	
.LABEL $label$8
	CALL $109($0, $12)
	if ( ((*($12) & [1]) == 0) ){ goto $label$7 }
	CALL $130(*($7))
	
.LABEL $label$7
	$10 = CALL strtok([0], ( *(($3 + [8])) ? $5 : (*($3) & [1]) ))
	if ( $10 ){ goto $label$3 }
	
.LABEL $label$2
	if ( ($4 == 0) ){ goto $label$9 }
	CALL $131($4)
	
.LABEL $label$9
	*([0] + [4]) = ($12 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $132($12)
}

void .FUNC $38 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $130($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $130($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
	$7 = *(($1 + [72]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3317487864618549248, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $39 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $130($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $130($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [76]))
	*($9 + [4]) = $1
	*($9) = $0
	*($9 + [8]) = $9
	CALL $53(($9 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]), ($0 + [39]), ($0 + [40]))
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $24($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [208])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [208])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $58(CALL $57($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [288])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $128([80])
	$4 = CALL $54($6)
	*($6 + [64]) = $0
	CALL $55(($8 + [32]), $4)
	*($6 + [72]) = [-1]
	*($6 + [68]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [68])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $56(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $130($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [288])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $128([104])
	$4 = CALL $60($6)
	*($6 + [72]) = $0
	CALL $61(($8 + [32]), $4)
	*($6 + [80]) = [-1]
	*($6 + [76]) = $1
	*($6 + [84]) = [-1]
	*($6 + [88]) = [-1]
	*($6 + [92]) = [-1]
	*($6 + [96]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [76])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $62(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $130($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $35 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $128([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $24($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $59(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$7 }
	CALL $130(*(($4 + [32])))
	
.LABEL $label$7
	CALL $130($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$10 }
	CALL $130(*(($4 + [32])))
	
.LABEL $label$10
	CALL $130($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
	$7 = *(($1 + [48]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4157012474184204288, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	$7 = *(($1 + [52]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$14 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4157012474184204289, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$13 }
	
.LABEL $label$14
	CALL db_idx64_remove($7)
	
.LABEL $label$13
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [288])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $128([144])
	$6 = CALL $63($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [108])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $64(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $130(*(($4 + [40])))
	
.LABEL $label$10
	CALL $130($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $30 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-3665743365212864512, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [104]) == (int_32)$4), [224])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $33($4, CALL $fimport$16(*($4), *($4 + [8]), (int_64)-3665743365212864512, $5))
	CALL eosio_assert(((int_32)*($2 + [104]) == (int_32)$4), [224])
	
.LABEL $label$4
	*(($2 + [112])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC _ZN5eosio8exchange12deltokenpairEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_32 $24
	$24 = (*([0] + [4]) - [320])
	*([0] + [4]) = $24
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$40($1), [1056])
	*(($24 + [288])) = [0]
	*($24 + [272]) = (int_64)-1
	*($24 + [280]) = (int_64)0
	$22 = *($0)
	*($24 + [256]) = $22
	*($24 + [264]) = $22
	*($24 + [292 align=4]) = (int_64)0
	$3 = [0]
	$19 = CALL db_find_i64($22, $22, (int_64)-3665743365212864512, $2)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $33(($24 + [256]), $19)
	CALL eosio_assert(((int_32)*($3 + [104]) == (int_32)($24 + [256])), [224])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [1088])
	$19 = [1]
	if ( ((int_64)*($3 + [16]) == (int_64)$1) ){ goto $label$2 }
	if ( ((int_64)*($3 + [48]) == (int_64)$1) ){ goto $label$2 }
	$19 = ((int_64)*($0) == (int_64)$1)
	
.LABEL $label$2
	CALL eosio_assert($19, [1120])
	*((($24 + [216]) + [32])) = [0]
	*($24 + [232]) = (int_64)-1
	*($24 + [240]) = (int_64)0
	$1 = *($0)
	*($24 + [216]) = $1
	*($24 + [224]) = $1
	*($24 + [252]) = [0]
	$17 = [0]
	$19 = CALL db_find_i64($1, $1, (int_64)4157012474184204288, *($3 + [8]))
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$3 }
	$17 = CALL $17(($24 + [216]), $19)
	CALL eosio_assert(((int_32)*($17 + [40]) == (int_32)($24 + [216])), [224])
	
.LABEL $label$3
	*((($24 + [168]) + [32])) = [0]
	*($24 + [184]) = (int_64)-1
	$1 = *($0)
	*($24 + [168]) = $1
	*($24 + [176]) = $2
	*($24 + [192]) = (int_64)0
	*((($24 + [168]) + [40])) = [0]
	*($24 + [204]) = [0]
	$19 = CALL db_lowerbound_i64($1, $2, (int_64)4520852774463733760, (int_64)0)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$7 }
	$5 = ($17 + [25])
	$6 = (($24 + [120]) + [16])
	$4 = (($24 + [304]) | [1])
	$18 = CALL $34(($24 + [168]), $19)
	$9 = ($17 + [24])
	$10 = ($17 + [28])
	$12 = ($24 + [156])
	$13 = (($24 + [120]) + [40])
	$14 = ($24 + [36])
	
.LOOP $label$8:
	if ( ((int_64)*($18 + [32]) <= (int_64)0) ){ goto $label$9 }
	$23 = *($0)
	$1 = (int_64)0
	$20 = (int_64)59
	$19 = [1152]
	$21 = (int_64)0
	
.LOOP $label$10:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$15 }
	$8 = *($19)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$8 = ($8 + [165])
	goto $label$13 
	
.LABEL $label$15
	$22 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$12
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$11
	$19 = ($19 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$10 }
	*((($24 + [80]) + [8])) = $21
	*($24 + [80]) = $23
	$23 = *(($17 + [8]))
	$1 = (int_64)0
	$20 = (int_64)59
	$19 = [1168]
	$21 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$21 }
	$8 = *($19)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$8 = ($8 + [165])
	goto $label$19 
	
.LABEL $label$21
	$22 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$17
	$19 = ($19 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$16 }
	*(($16 = (($24 + [304]) + [8]))) = [0]
	*($24 + [304]) = (int_64)0
	$19 = CALL strlen([1184])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$6 }
	$8 = ($18 + [32])
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$24 }
	*($24 + [304]) = ($19 << [1])
	$7 = $4
	if ( $19 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	$15 = (($19 + [16]) & [-16])
	$7 = CALL $128($15)
	*($16) = $7
	*($24 + [304]) = ($15 | [1])
	*($24 + [308]) = $19
	
.LABEL $label$23
	CALL memcpy($7, [1184], $19)
	
.LABEL $label$22
	*(($7 + $19)) = [0]
	$19 = *($9)
	$7 = ($19 & [1])
	$19 = CALL $136(($24 + [304]), ( *(($17 + [32])) ? $5 : $7 ), ( *($10) ? uint_32($19 >> [1]) : $7 ))
	$7 = *($19)
	*($19) = [0]
	$15 = *($19 + [4])
	*($19 + [4]) = [0]
	$11 = *($19 + [8])
	*($19 + [8]) = [0]
	*($24 + [120]) = *($0)
	*((($24 + [120]) + [8])) = *(($18 + [16]))
	*(($6 + [8])) = *(($8 + [8]))
	*($6) = *($8)
	*(($8 = (($24 + [120]) + [32]))) = $7
	*($12) = $15
	*($13) = $11
	CALL $36(($24 + [64]), CALL $35(($24 + [16]), ($24 + [80]), $23, $21, ($24 + [120])))
	$19 = *($24 + [64])
	CALL send_inline($19, (*($24 + [68]) - $19))
	$19 = *($24 + [64])
	if ( ($19 == 0) ){ goto $label$25 }
	*($24 + [68]) = $19
	CALL $130($19)
	
.LABEL $label$25
	$19 = *((($24 + [16]) + [28]))
	if ( ($19 == 0) ){ goto $label$26 }
	*((($24 + [16]) + [32])) = $19
	CALL $130($19)
	
.LABEL $label$26
	$19 = *((($24 + [16]) + [16]))
	if ( ($19 == 0) ){ goto $label$27 }
	*($14) = $19
	CALL $130($19)
	
.LABEL $label$27
	if ( ((*($8) & [1]) == 0) ){ goto $label$28 }
	CALL $130(*($13))
	
.LABEL $label$28
	if ( ((*($24 + [304]) & [1]) == 0) ){ goto $label$9 }
	CALL $130(*($16))
	
.LABEL $label$9
	*($6) = (int_64)-1
	*(($16 = (($24 + [120]) + [24]))) = [0]
	$1 = *(($18 + [16]))
	*((($24 + [120]) + [8])) = $1
	$22 = *($0)
	*($24 + [120]) = $22
	*(($15 = (($24 + [120]) + [28]))) = [0]
	*((($24 + [120]) + [32])) = [0]
	*($12) = [0]
	$19 = CALL db_find_i64($22, $1, (int_64)-3317487864618549248, *($18))
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$29 }
	$19 = CALL $37(($24 + [120]), $19)
	CALL eosio_assert(((int_32)*($19 + [64]) == (int_32)($24 + [120])), [224])
	CALL eosio_assert([1], [384])
	CALL eosio_assert([1], [432])
	$8 = CALL db_next_i64(*($19 + [68]), ($24 + [16]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$30 }
	CALL $37(($24 + [120]), $8)
	
.LABEL $label$30
	CALL $38(($24 + [120]), $19)
	
.LABEL $label$29
	$19 = ((int_32)$18 != (int_32)[0])
	CALL eosio_assert($19, [384])
	CALL eosio_assert($19, [432])
	$19 = CALL db_next_i64(*($18 + [76]), ($24 + [16]))
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$31 }
	CALL $34(($24 + [168]), $19)
	
.LABEL $label$31
	CALL $39(($24 + [168]), $18)
	$18 = [0]
	$19 = CALL db_lowerbound_i64(*($24 + [168]), *((($24 + [168]) + [8])), (int_64)4520852774463733760, (int_64)0)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$32 }
	$18 = CALL $34(($24 + [168]), $19)
	
.LABEL $label$32
	$7 = *($16)
	if ( ($7 == 0) ){ goto $label$33 }
	$19 = *($15)
	if ( ((int_32)$19 == (int_32)$7) ){ goto $label$35 }
	
.LOOP $label$36:
	$19 = ($19 + [-24])
	$8 = *($19)
	*($19) = [0]
	if ( ($8 == 0) ){ goto $label$37 }
	CALL $130($8)
	
.LABEL $label$37
	if ( ((int_32)$7 != (int_32)$19) ){ goto $label$36 }
	$19 = *($16)
	goto $label$34 
	
.LABEL $label$35
	$19 = $7
	
.LABEL $label$34
	*($15) = $7
	CALL $130($19)
	
.LABEL $label$33
	if ( $18 ){ goto $label$8 }
	
.LABEL $label$7
	*((($24 + [120]) + [32])) = [0]
	*($24 + [136]) = (int_64)-1
	$1 = *($0)
	*($24 + [120]) = $1
	*($24 + [128]) = $2
	*($24 + [144]) = (int_64)0
	*((($24 + [120]) + [40])) = [0]
	*($24 + [156]) = [0]
	$19 = CALL db_lowerbound_i64($1, $2, (int_64)-4421661421696319488, (int_64)0)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$38 }
	$13 = ($3 + [33])
	$6 = (($24 + [16]) + [16])
	$10 = ($24 | [1])
	$18 = CALL $40(($24 + [120]), $19)
	$11 = (($24 + [64]) + [8])
	$5 = (($24 + [80]) + [28])
	$9 = ($24 + [100])
	$16 = ($24 + [40])
	
.LOOP $label$39:
	if ( ((int_64)*($18 + [32]) <= (int_64)0) ){ goto $label$40 }
	$23 = *($0)
	$1 = (int_64)0
	$20 = (int_64)59
	$19 = [1152]
	$21 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$46 }
	$8 = *($19)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$8 = ($8 + [165])
	goto $label$44 
	
.LABEL $label$46
	$22 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$42
	$19 = ($19 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$41 }
	*($11) = $21
	*($24 + [64]) = $23
	$23 = *(($3 + [16]))
	$1 = (int_64)0
	$20 = (int_64)59
	$19 = [1168]
	$21 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$52 }
	$8 = *($19)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$8 = ($8 + [165])
	goto $label$50 
	
.LABEL $label$52
	$22 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$48
	$19 = ($19 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$47 }
	*(($15 = ($24 + [8]))) = [0]
	*($24) = (int_64)0
	$19 = CALL strlen([1184])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$5 }
	$8 = ($18 + [32])
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$55 }
	*($24) = ($19 << [1])
	$7 = $10
	if ( $19 ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$55
	$12 = (($19 + [16]) & [-16])
	$7 = CALL $128($12)
	*($15) = $7
	*($24) = ($12 | [1])
	*($24 + [4]) = $19
	
.LABEL $label$54
	CALL memcpy($7, [1184], $19)
	
.LABEL $label$53
	*(($7 + $19)) = [0]
	$19 = *(($3 + [32]))
	$7 = ($19 & [1])
	$19 = CALL $136($24, ( *(($3 + [40])) ? $13 : $7 ), ( *(($3 + [36])) ? uint_32($19 >> [1]) : $7 ))
	$7 = *($19)
	*($19) = [0]
	$12 = *($19 + [4])
	*($19 + [4]) = [0]
	$17 = *($19 + [8])
	*($19 + [8]) = [0]
	*($24 + [16]) = *($0)
	*((($24 + [16]) + [8])) = *(($18 + [16]))
	*(($6 + [8])) = *(($8 + [8]))
	*($6) = *($8)
	*(($8 = (($24 + [16]) + [32]))) = $7
	*((($24 + [16]) + [36])) = $12
	*(($7 = (($24 + [16]) + [40]))) = $17
	CALL $36(($24 + [304]), CALL $35(($24 + [80]), ($24 + [64]), $23, $21, ($24 + [16])))
	$19 = *($24 + [304])
	CALL send_inline($19, (*($24 + [308]) - $19))
	$19 = *($24 + [304])
	if ( ($19 == 0) ){ goto $label$56 }
	*($24 + [308]) = $19
	CALL $130($19)
	
.LABEL $label$56
	$19 = *($5)
	if ( ($19 == 0) ){ goto $label$57 }
	*((($24 + [80]) + [32])) = $19
	CALL $130($19)
	
.LABEL $label$57
	$19 = *((($24 + [80]) + [16]))
	if ( ($19 == 0) ){ goto $label$58 }
	*($9) = $19
	CALL $130($19)
	
.LABEL $label$58
	if ( ((*($8) & [1]) == 0) ){ goto $label$59 }
	CALL $130(*($7))
	
.LABEL $label$59
	if ( ((*($24) & [1]) == 0) ){ goto $label$40 }
	CALL $130(*($15))
	
.LABEL $label$40
	*($6) = (int_64)-1
	*($16) = [0]
	$1 = *(($18 + [16]))
	*((($24 + [16]) + [8])) = $1
	$22 = *($0)
	*($24 + [16]) = $22
	*(($15 = (($24 + [16]) + [28]))) = [0]
	*((($24 + [16]) + [32])) = [0]
	*((($24 + [16]) + [36])) = [0]
	$19 = CALL db_find_i64($22, $1, (int_64)-3020480680945127424, *($18))
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$60 }
	$19 = CALL $41(($24 + [16]), $19)
	CALL eosio_assert(((int_32)*($19 + [64]) == (int_32)($24 + [16])), [224])
	CALL eosio_assert([1], [384])
	CALL eosio_assert([1], [432])
	$8 = CALL db_next_i64(*($19 + [68]), ($24 + [80]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$61 }
	CALL $41(($24 + [16]), $8)
	
.LABEL $label$61
	CALL $42(($24 + [16]), $19)
	
.LABEL $label$60
	$19 = ((int_32)$18 != (int_32)[0])
	CALL eosio_assert($19, [384])
	CALL eosio_assert($19, [432])
	$19 = CALL db_next_i64(*($18 + [76]), ($24 + [80]))
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$62 }
	CALL $40(($24 + [120]), $19)
	
.LABEL $label$62
	CALL $43(($24 + [120]), $18)
	$18 = [0]
	$19 = CALL db_lowerbound_i64(*($24 + [120]), *((($24 + [120]) + [8])), (int_64)-4421661421696319488, (int_64)0)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$63 }
	$18 = CALL $40(($24 + [120]), $19)
	
.LABEL $label$63
	$7 = *($16)
	if ( ($7 == 0) ){ goto $label$64 }
	$19 = *($15)
	if ( ((int_32)$19 == (int_32)$7) ){ goto $label$66 }
	
.LOOP $label$67:
	$19 = ($19 + [-24])
	$8 = *($19)
	*($19) = [0]
	if ( ($8 == 0) ){ goto $label$68 }
	CALL $130($8)
	
.LABEL $label$68
	if ( ((int_32)$7 != (int_32)$19) ){ goto $label$67 }
	$19 = *($16)
	goto $label$65 
	
.LABEL $label$66
	$19 = $7
	
.LABEL $label$65
	*($15) = $7
	CALL $130($19)
	
.LABEL $label$64
	if ( $18 ){ goto $label$39 }
	
.LABEL $label$38
	if ( ((int_64)*($3 + [64]) < (int_64)1) ){ goto $label$69 }
	$7 = ($3 + [64])
	$1 = (int_64)0
	$22 = (int_64)59
	$19 = [1232]
	$21 = (int_64)0
	
.LOOP $label$70:
	$20 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$71 }
	$8 = *($19)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$73 }
	$8 = ($8 + [165])
	goto $label$72 
	
.LABEL $label$73
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$72
	$20 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$71
	$19 = ($19 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$21 = ((int_64)$20 | (int_64)$21)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$70 }
	$1 = (int_64)0
	$20 = (int_64)59
	$19 = [1152]
	$23 = (int_64)0
	
.LOOP $label$74:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$79 }
	$8 = *($19)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$78 }
	$8 = ($8 + [165])
	goto $label$77 
	
.LABEL $label$79
	$22 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$78
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$77
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$76
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$75
	$19 = ($19 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$23 = ((int_64)$22 | (int_64)$23)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$74 }
	*($24 + [72]) = $23
	*($24 + [64]) = $21
	$1 = (int_64)0
	$22 = (int_64)59
	$19 = [1248]
	$21 = (int_64)0
	
.LOOP $label$80:
	$20 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$81 }
	$8 = *($19)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$83 }
	$8 = ($8 + [165])
	goto $label$82 
	
.LABEL $label$83
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$82
	$20 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$81
	$19 = ($19 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$21 = ((int_64)$20 | (int_64)$21)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$80 }
	$1 = (int_64)0
	$20 = (int_64)59
	$19 = [1168]
	$23 = (int_64)0
	
.LOOP $label$84:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$89 }
	$8 = *($19)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$88 }
	$8 = ($8 + [165])
	goto $label$87 
	
.LABEL $label$89
	$22 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$86 }
	goto $label$85 
	
.LABEL $label$88
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$87
	$22 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$86
	$22 = ((int_64)((int_64)$22 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$85
	$19 = ($19 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$23 = ((int_64)$22 | (int_64)$23)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$84 }
	$1 = (int_64)0
	$22 = (int_64)59
	$19 = [1232]
	$2 = (int_64)0
	
.LOOP $label$90:
	$20 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$91 }
	$8 = *($19)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$93 }
	$8 = ($8 + [165])
	goto $label$92 
	
.LABEL $label$93
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$92
	$20 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$91
	$19 = ($19 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$2 = ((int_64)$20 | (int_64)$2)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$90 }
	*(($24 + [8])) = [0]
	*($24) = (int_64)0
	$19 = CALL strlen([1264])
	if ( ((uint_32)$19 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$19 >= (uint_32)[11]) ){ goto $label$96 }
	*($24) = ($19 << [1])
	$8 = ($24 | [1])
	if ( $19 ){ goto $label$95 }
	goto $label$94 
	
.LABEL $label$96
	$18 = (($19 + [16]) & [-16])
	$8 = CALL $128($18)
	*($24) = ($18 | [1])
	*($24 + [8]) = $8
	*($24 + [4]) = $19
	
.LABEL $label$95
	CALL memcpy($8, [1264], $19)
	
.LABEL $label$94
	*(($8 + $19)) = [0]
	$1 = *(($3 + [48]))
	*(($24 + [44])) = *(($7 + [12]))
	*(($24 + [40])) = *(($7 + [8]))
	*(($24 + [36])) = *(($7 + [4]))
	*($24 + [16]) = $2
	*($24 + [24]) = $1
	*($24 + [32]) = *($7)
	$19 = ($24 + [8])
	*(($24 + [56])) = *($19)
	*($24 + [48]) = *($24)
	*($24) = [0]
	*($24 + [4]) = [0]
	*($19) = [0]
	$19 = CALL $35(($24 + [80]), ($24 + [64]), $21, $23, ($24 + [16]))
	CALL $36(($24 + [304]), $19)
	$8 = *($24 + [304])
	CALL send_inline($8, (*($24 + [308]) - $8))
	$8 = *($24 + [304])
	if ( ($8 == 0) ){ goto $label$97 }
	*($24 + [308]) = $8
	CALL $130($8)
	
.LABEL $label$97
	$8 = *($19 + [28])
	if ( ($8 == 0) ){ goto $label$98 }
	*(($19 + [32])) = $8
	CALL $130($8)
	
.LABEL $label$98
	$8 = *($19 + [16])
	if ( ($8 == 0) ){ goto $label$99 }
	*(($19 + [20])) = $8
	CALL $130($8)
	
.LABEL $label$99
	if ( ((*(($24 + [48])) & [1]) == 0) ){ goto $label$100 }
	CALL $130(*(($24 + [56])))
	
.LABEL $label$100
	if ( ((*($24) & [1]) == 0) ){ goto $label$69 }
	CALL $130(*(($24 + [8])))
	
.LABEL $label$69
	CALL $44(($24 + [256]), $3)
	$7 = *($24 + [144])
	if ( ($7 == 0) ){ goto $label$101 }
	$18 = ($24 + [148])
	$19 = *($18)
	if ( ((int_32)$19 == (int_32)$7) ){ goto $label$103 }
	
.LOOP $label$104:
	$19 = ($19 + [-24])
	$8 = *($19)
	*($19) = [0]
	if ( ($8 == 0) ){ goto $label$105 }
	CALL $130($8)
	
.LABEL $label$105
	if ( ((int_32)$7 != (int_32)$19) ){ goto $label$104 }
	$19 = *(($24 + [144]))
	goto $label$102 
	
.LABEL $label$103
	$19 = $7
	
.LABEL $label$102
	*($18) = $7
	CALL $130($19)
	
.LABEL $label$101
	$7 = *($24 + [192])
	if ( ($7 == 0) ){ goto $label$106 }
	$18 = ($24 + [196])
	$19 = *($18)
	if ( ((int_32)$19 == (int_32)$7) ){ goto $label$108 }
	
.LOOP $label$109:
	$19 = ($19 + [-24])
	$8 = *($19)
	*($19) = [0]
	if ( ($8 == 0) ){ goto $label$110 }
	CALL $130($8)
	
.LABEL $label$110
	if ( ((int_32)$7 != (int_32)$19) ){ goto $label$109 }
	$19 = *(($24 + [192]))
	goto $label$107 
	
.LABEL $label$108
	$19 = $7
	
.LABEL $label$107
	*($18) = $7
	CALL $130($19)
	
.LABEL $label$106
	$7 = *($24 + [240])
	if ( ($7 == 0) ){ goto $label$111 }
	$18 = ($24 + [244])
	$19 = *($18)
	if ( ((int_32)$19 == (int_32)$7) ){ goto $label$113 }
	
.LOOP $label$114:
	$19 = ($19 + [-24])
	$8 = *($19)
	*($19) = [0]
	if ( ($8 == 0) ){ goto $label$115 }
	if ( ((*($8 + [24]) & [1]) == 0) ){ goto $label$116 }
	CALL $130(*(($8 + [32])))
	
.LABEL $label$116
	CALL $130($8)
	
.LABEL $label$115
	if ( ((int_32)$7 != (int_32)$19) ){ goto $label$114 }
	$19 = *(($24 + [240]))
	goto $label$112 
	
.LABEL $label$113
	$19 = $7
	
.LABEL $label$112
	*($18) = $7
	CALL $130($19)
	
.LABEL $label$111
	$7 = *($24 + [280])
	if ( ($7 == 0) ){ goto $label$117 }
	$18 = ($24 + [284])
	$19 = *($18)
	if ( ((int_32)$19 == (int_32)$7) ){ goto $label$119 }
	
.LOOP $label$120:
	$19 = ($19 + [-24])
	$8 = *($19)
	*($19) = [0]
	if ( ($8 == 0) ){ goto $label$121 }
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$122 }
	CALL $130(*(($8 + [40])))
	
.LABEL $label$122
	CALL $130($8)
	
.LABEL $label$121
	if ( ((int_32)$7 != (int_32)$19) ){ goto $label$120 }
	$19 = *(($24 + [280]))
	goto $label$118 
	
.LABEL $label$119
	$19 = $7
	
.LABEL $label$118
	*($18) = $7
	CALL $130($19)
	
.LABEL $label$117
	*([0] + [4]) = ($24 + [320])
	return (unreachable)
	
.LABEL $label$6
	CALL $132(($24 + [304]))
	
.LABEL $label$5
	CALL $132($24)
	
.LABEL $label$4
	CALL $132($24)
	(unreachable)
	(unreachable)
}