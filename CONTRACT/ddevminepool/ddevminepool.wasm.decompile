(data (i32.const 4) "@l\00\00")
(data (i32.const 16) "token apply: (receiver, code, action): (\00")
(data (i32.const 64) ",\00")
(data (i32.const 80) ")\n\00")
(data (i32.const 96) "onerror\00")
(data (i32.const 112) "eosio\00")
(data (i32.const 128) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 192) "clear\00")
(data (i32.const 208) "create\00")
(data (i32.const 224) "reducesupply\00")
(data (i32.const 240) "issue\00")
(data (i32.const 256) "destroytoken\00")
(data (i32.const 272) "candy\00")
(data (i32.const 288) "lockpledge\00")
(data (i32.const 304) "unlockpledge\00")
(data (i32.const 320) "mining\00")
(data (i32.const 336) "unpledgenow\00")
(data (i32.const 352) "arenapay\00")
(data (i32.const 368) "transfer\00")
(data (i32.const 384) "pledge\00")
(data (i32.const 400) "unpledge\00")
(data (i32.const 416) "fixpledge\00")
(data (i32.const 432) "unpledgedly\00")
(data (i32.const 448) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 512) "cannot pass end iterator to erase\00")
(data (i32.const 560) "cannot increment end iterator\00")
(data (i32.const 592) "object passed to erase is not in multi_index\00")
(data (i32.const 640) "cannot erase objects in table of another contract\00")
(data (i32.const 704) "attempt to remove object that was not in multi_index\00")
(data (i32.const 768) "error reading iterator\00")
(data (i32.const 800) "read\00")
(data (i32.const 816) "cannot create objects in table of another contract\00")
(data (i32.const 880) "write\00")
(data (i32.const 896) "invalid symbol name\00")
(data (i32.const 928) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 992) "cannot pass end iterator to modify\00")
(data (i32.const 1040) "object passed to modify is not in multi_index\00")
(data (i32.const 1088) "cannot modify objects in table of another contract\00")
(data (i32.const 1152) "attempt to add asset with different symbol\00")
(data (i32.const 1200) "addition underflow\00")
(data (i32.const 1232) "addition overflow\00")
(data (i32.const 1264) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1328) "no balance object found\00")
(data (i32.const 1360) "overdrawn balance\00")
(data (i32.const 1392) "attempt to subtract asset with different symbol\00")
(data (i32.const 1440) "subtraction underflow\00")
(data (i32.const 1472) "subtraction overflow\00")
(data (i32.const 1504) "active\00")
(data (i32.const 1536) "pledge function locked!\00")
(data (i32.const 1568) "unable to find key\00")
(data (i32.const 1600) "invalid quantity\00")
(data (i32.const 1632) "must unpledge more than 10000.0000 DBET\00")
(data (i32.const 1680) "symbol precision mismatch\00")
(data (i32.const 1712) "must transfer positive quantity\00")
(data (i32.const 1744) "memo has more than 256 bytes\00")
(data (i32.const 1776) "balance not found\00")
(data (i32.const 1808) "balance not enough\00")
(data (i32.const 1840) "time out of range\00")
(data (i32.const 1872) "unpledging: \00")
(data (i32.const 1888) " \00")
(data (i32.const 1904) "\n\00")
(data (i32.const 1920) ".\00")
(data (i32.const 1936) "get\00")
(data (i32.const 1952) "cannot transfer to self\00")
(data (i32.const 1984) "to account does not exist\00")
(data (i32.const 2016) "memo has more than 256 byte\00")
(data (i32.const 2048) "ddevactivity\00")
(data (i32.const 2064) "token with symbol does not exist, create token before issue\00")
(data (i32.const 2128) "from account not exists\00")
(data (i32.const 2160) "must destroy positive quantity\00")
(data (i32.const 2192) "quantity exceeds available supply\00")
(data (i32.const 2240) "to account not exists\00")
(data (i32.const 2272) "must issue positive quantity\00")
(data (i32.const 2304) "token with symbol does not exist, create token before reduce\00")
(data (i32.const 2368) "must reduce positive quantity\00")
(data (i32.const 2400) "invalid supply\00")
(data (i32.const 2416) "max-supply must be positive\00")
(data (i32.const 2448) "token with symbol already exists\00")
(data (i32.const 2496) "Launch cost\00")
(data (i32.const 2512) "\01\00\00\00\00\00\00\00ffffff\e6?\02\00\00\00\00\00\00\00\9a\99\99\99\99\99\b9?\04\00\00\00\00\00\00\00\9a\99\99\99\99\99\c9?")
(data (i32.const 2560) "\01\00\00\00\00\00\00\00\10)\adj:\b9UJ\02\00\00\00\00\00\00\00\80\a9\a2\86Q\13\a5q\04\00\00\00\00\00\00\00\10B\c6*S\c3\a8\89\03\00\00\00\00\00\00\00\90\a6Jn\bb\b4UJ\05\00\00\00\00\00\00\00@\0frXM\baUJ\06\00\00\00\00\00\00\00\80\a9\a2\86Q\13\a5q")
(data (i32.const 2656) "newdexpocket\00")
(data (i32.const 2672) "forbid exchange\00")
(data (i32.const 2688) "dexeoswallet\00")
(data (i32.const 2704) "btexexchange\00")
(data (i32.const 2720) "dex.io\00")
(data (i32.const 2736) "cointotheeos\00")
(data (i32.const 2752) "kyubeydex.bp\00")
(data (i32.const 2768) "findexfindex\00")
(data (i32.const 11184) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 11280) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 11296) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 11312) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "current_time" (func $fimport$3 (result i64)))
(import "env" "db_find_i64" (func $fimport$4 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "db_next_i64" (func $fimport$6 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$7 (param i32)))
(import "env" "db_store_i64" (func $fimport$8 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$9 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$10 (param i32 i32)))
(import "env" "is_account" (func $fimport$11 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$12 (param i32 i32 i32) (result i32)))
(import "env" "printi" (func $fimport$13 (param i64)))
(import "env" "printn" (func $fimport$14 (param i64)))
(import "env" "prints" (func $fimport$15 (param i32)))
(import "env" "prints_l" (func $fimport$16 (param i32 i32)))
(import "env" "printui" (func $fimport$17 (param i64)))
(import "env" "read_action_data" (func $fimport$18 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$19 (param i64)))
(import "env" "require_auth2" (func $fimport$20 (param i64 i64)))
(import "env" "require_recipient" (func $fimport$21 (param i64)))
(import "env" "send_deferred" (func $fimport$22 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$23 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "apply" (func $5))
(export "_ZN5eosio5token6createEyNS_5assetE" (func $7))
(export "_ZN5eosio5token12reducesupplyENS_5assetE" (func $9))
(export "_ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $11))
(export "_ZN5eosio5token12destroytokenEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $13))
(export "_ZN5eosio5token6miningEyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $14))
(export "_ZN5eosio5token8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $16))
(export "_ZN5eosio5token6pledgeEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $18))
(export "_ZN5eosio5token8unpledgeEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $19))
(export "_ZN5eosio5token9fixpledgeENS_5assetE" (func $20))
(export "_ZN5eosio5token11unpledgedlyEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $21))
(export "_ZN5eosio5token11unpledgenowEyNS_5assetE" (func $22))
(export "_ZN5eosio5token5candyEyNS_5assetE" (func $23))
(export "_ZN5eosio5token8arenapayEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $24))
(export "_ZN5eosio5token5clearEyNS_5assetE" (func $25))
(export "_ZN5eosio5token10lockpledgeEv" (func $26))
(export "_ZN5eosio5token12unlockpledgeEv" (func $28))
(export "_ZN5eosio5token11sub_balanceEyNS_5assetE" (func $40))
(export "_ZN5eosio5token11add_balanceEyNS_5assetEy" (func $41))
(export "_ZN5eosio5token19sub_pledged_balanceEyNS_5assetE" (func $55))
(export "_ZN5eosio5token22sub_unpledging_balanceEyNS_5assetE" (func $63))
(export "_ZN5eosio5token22add_unpledging_balanceEyNS_5assetE" (func $66))
(export "_ZN5eosio5token19add_pledged_balanceEyNS_5assetE" (func $74))
(export "_ZN5eosio5token19require_banexchangeEy" (func $84))
(export "malloc" (func $85))
(export "free" (func $88))
(export "pow" (func $95))
(export "sqrt" (func $96))
(export "fabs" (func $97))
(export "scalbn" (func $98))
(export "memcmp" (func $99))
(export "strlen" (func $100))
(table $0 17 17 anyfunc)
(elem (i32.const 0) $101 $14 $24 $28 $13 $9 $25 $21 $11 $26 $22 $16 $7 $18 $23 $19 $20)



int_64 .FUNC scalbn (float_64 $0, int_32 $1)
{
	int_32 $2
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	$2 = ($1 + [-1023])
	if ( ((int_32)$2 < (int_32)[1024]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	$2 = ($1 + [969])
	if ( ((int_32)$2 > (int_32)[-1023]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = $2
	goto $label$1 
	
.LABEL $label$2
	$1 = $2
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $89($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_64 .FUNC pow (float_64 $0, float_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	float_64 $10
	int_64 $11
	float_64 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	int_32 $19
	float_64 $20
	float_64 $21
	$21 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $4)
	$4 = (CASTING int_64)(float_64 $1)
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	$8 = ($5) & [2147483647]
	if ( (($8) | $6) == 0) ){ goto $label$1 }
	$11 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$11 >> (uint_64)(int_64)32))
	$3 = (CASTING uint_32)(uint_64 $11)
	if ( $3 ){ goto $label$2 }
	if ( ((int_32)$2 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 & [2147483647])
	if ( ((uint_32)$7 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$3 != (int_32)[0]) & ((int_32)$7 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$8 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$19 = [0]
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$19 = [2]
	if ( ((uint_32)$8 > (uint_32)[1128267775]) ){ goto $label$8 }
	$19 = [0]
	if ( ($8 <= [1072693248]) ){ goto $label$8 }
	$9 = uint_32($8 >> [20])
	if ( ((int_32)($9 + [-1023]) < (int_32)[21]) ){ goto $label$7 }
	$19 = ([1075] - $9)
	$9 = uint_32($6 >> $19)
	$19 = ( ([2] - ($9 & [1])) ? [0] : ((int_32)($9 << $19) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$19 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $9)
	$19 = uint_32($8 >> $6)
	$19 = ( ([2] - ($19 & [1])) ? [0] : ((int_32)($19 << $6) == (int_32)$8) )
	
.LABEL $label$6
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($7 + [-1072693248]) | $3) == 0) ){ goto $label$1 }
	if ( ($7 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$5 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL sqrt($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$21 = CALL fabs($0)
	if ( $3 ){ goto $label$18 }
	if ( ($7 == 0) ){ goto $label$17 }
	if ( ((int_32)($7 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$17 }
	
.LABEL $label$18
	$10 = (float_64)1
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$14 }
	if ( ((int_32)$19 == (int_32)[1]) ){ goto $label$16 }
	if ( $19 ){ goto $label$14 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$17
	$21 = ( ((float_64)(float_64)1 / (float_64)$21) ? $21 : ((int_32)$5 < (int_32)[0]) )
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($19 | ($7 + [-1072693248])) == 0) ){ goto $label$15 }
	return ( !(float_64)$21 ? $21 : ((int_32)$19 == (int_32)[1]) )
	
.LABEL $label$16
	$10 = (float_64)-1
	goto $label$14 
	
.LABEL $label$15
	$1 = (float_64)
	return ((float_64)$1($21 - $21)) / (float_64)$1)
	
.LABEL $label$14
	if ( ($8 <= [1105199105]) ){ goto $label$28 }
	if ( ($8 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$7 > (uint_32)[1072693247]) ){ goto $label$24 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 < (int_32)[0]) )
	
.LABEL $label$28
	$8 = [0]
	if ( ((uint_32)$7 > (uint_32)[1048575]) ){ goto $label$26 }
	$21 = ((float_64)$21 * (float_64)(float_64)9007199254740992)
	$7 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $21) >> (uint_64)(int_64)32))
	$5 = [-53]
	goto $label$25 
	
.LABEL $label$27
	if ( ((uint_32)$7 > (uint_32)[1072693246]) ){ goto $label$23 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 < (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$26
	$5 = [0]
	
.LABEL $label$25
	$6 = ($7 & [1048575])
	$2 = ($6 | [1072693248])
	$5 = ((int_32($7 >> [20]) + $5) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$21 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$22 }
	$8 = [1]
	goto $label$21 
	
.LABEL $label$24
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 > (int_32)[0]) )
	
.LABEL $label$23
	if ( ($7 <= [1072693249]) ){ goto $label$20 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 > (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$22
	$2 = ($2 + [-1048576])
	$5 = ($5 + [1])
	
.LABEL $label$21
	$13 = ((float_64)*(($6 + [11296])) + (float_64)((float_64)((float_64)(float_64))($21 - (float_64))($0 - $14)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$21 = ((float_64)((float_64)$12 * (float_64)$0) + (float_64)((float_64)$21 * (float_64)(float_64))($13 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $17))
	$0 = ((float_64)$21 * (float_64)$21)
	$16 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($2 >> [1]) | [536870912]) + ($8 << [18])) + [524288])) << (int_64)32))
	$12 = ((float_64)$15 * (float_64)(float_64))((float_64))($14 - ((float_64)$0 * (float_64)$16)) - ((float_64)$0 * (float_64)(float_64))($12 - (float_64))($16 - $13)
	$13 = ((float_64)((float_64)((float_64)$21 + (float_64)$0) * (float_64)$12))
	$17 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$17 + (float_64)(float_64)3) + (float_64)$13)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$15 = ((float_64)(float_64)1 / (float_64)((float_64)$13 + (float_64)$12))
	$13 = *(($6 + [11280]))
	$12 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $21) & (int_64)4294967295)))
	$14 = (float_64)
	$21 = ((float_64)$14($12 - $13)) * (float_64)$15
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $21)) & (int_64)-4294967296)
	$14 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$14 & (int_64)-4294967296))))
	$12 = ((float_64)$0 + (float_64)$21)
	$6 = ($8 << [3])
	$18 = *(($6 + [11312]))
	$20 = (CASTING float_64)(int_32 $5)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$20 + (float_64)((float_64)$18 + (float_64)((float_64)$12)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$20 = (float_64))((float_64))((float_64))($0 + (float_64)$13)))))) & (int_64)-4294967296))) - $20) - $18) - $12)
	goto $label$19 
	
.LABEL $label$20
	$13 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$21 + (float_64)(float_64)-1)
	$21 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$21 + (float_64)$13))) & (int_64)-4294967296)
	$20 = (float_64))($0) - $21)
	
.LABEL $label$19
	$1 = ((float_64)((float_64)(float_64))($1 - $12) * (float_64)$0) + (float_64)((float_64)(float_64))($13 - $20) * (float_64)$1
	$12 = (CASTING float_64)(int_64 ((int_64)$4 & (int_64)-4294967296))
	$21 = ((float_64)$12 * (float_64)$0)
	$0 = ((float_64)$21 + (float_64)$1)
	$4 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 $4)))
	$2 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ((int_32)$2) < (int_32)[1083179008]) ){ goto $label$33 }
	if ( ((($2 + [-1083179008]) | $8) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$33
	if ( (($2 & [2147482624]) <= [1083231232]) ){ goto $label$30 }
	if ( ((($2 + [1064252416]) | $8) == 0) ){ goto $label$31 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$32
	$0 = (float_64)
	$12 = ((float_64)$1 + (float_64)(float_64)8.008566259537294e-17)
	if ( (((float_64)$12 <= (float_64)$0($0 - $21))) | (((float_64)$12 != (float_64)$12) | ((float_64)$0 != (float_64)$0))) ){ goto $label$30 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$31
	$0 = (float_64)
	if ( ((((float_64)$1 > (float_64)$0($0 - $21))) | (((float_64)$1 != (float_64)$1) | ((float_64)$0 != (float_64)$0))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$8 = ($2 & [2147483647])
	if ( ($8 <= [1071644673]) ){ goto $label$35 }
	$6 = (uint_32($8 >> [20]) & [2047])
	$8 = (uint_32([1048576] >> (uint_32($8 >> [20]) + [-1022])) + $2)
	$5 = uint_32((($8 & [1048575]) | [1048576]) >> ([1043] - $6))
	$2 = ( ([0] - $5) ? $5 : ((int_32)$2 < (int_32)[0]) )
	$21 = (float_64))($21 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($8 & ((int_32)uint_32([1048575] >> ($6 + [-1023])) ^ (int_32)[-1]))) << (int_64)32)))
	goto $label$34 
	
.LABEL $label$35
	$2 = [0]
	
.LABEL $label$34
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$21 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $21)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$1 + (float_64)$21)) & (int_64)-4294967296))
	$12 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$12 + (float_64)$21 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = (float_64)
	$4 = (CASTING int_64)(float_64 $1((float_64)1 - (float_64))((float_64))(((float_64)((float_64)$1)) * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)
	$8 = ((CASTING uint_32)(uint_64 (uint_64)$4 - ((float_64)$0($21 - (float_64))($1 - $12))) + (float_64)((float_64)$1 * (float_64)$0))
	if ( ((int_32)int_32($8 - $1))))) >> (uint_64)(int_64)32)) + ($2 << [20]))) >> [20]) <= (int_32)[0]) ){ goto $label$36 }
	return ((float_64)$10 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$4 & (int_64)4294967295))))
	
.LABEL $label$36
	return ((float_64)$10 * (float_64)CALL scalbn($1, $2))
	
.LABEL $label$29
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $21
}

int_64 .FUNC sqrt (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$7 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($7) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$2 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$7 <= (int_32)[0]) ){ goto $label$6 }
	$8 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $8) ){ goto $label$4 }
	$8 = [1]
	$9 = $2
	goto $label$5 
	
.LABEL $label$6
	if ( ((($7 & [2147483647]) | $2) == 0) ){ goto $label$3 }
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = [1]
	
.LOOP $label$7:
	$8 = ($8 + [-21])
	$7 = uint_32($2 >> [11])
	$9 = ($2 << [21])
	$2 = $9
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$5
	$5 = [0]
	if ( ($7 & [1048576]) ){ goto $label$8 }
	$5 = [0]
	
.LOOP $label$9:
	$5 = ($5 + [1])
	$7 = ($7 << [1])
	if ( (($7 & [1048576]) == 0) ){ goto $label$9 }
	
.LABEL $label$8
	$2 = ($9 << $5)
	$8 = ($8 - $5)
	$7 = (uint_32($9 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$7 = (($7 & [1048575]) | [1048576])
	$10 = ($8 + [-1023])
	if ( (($10 & [1]) == 0) ){ goto $label$10 }
	$7 = (($7 << [1]) | uint_32($2 >> [31]))
	$2 = ($2 << [1])
	
.LABEL $label$10
	$7 = (uint_32($2 >> [31]) | ($7 << [1]))
	$5 = ($2 << [1])
	$4 = [0]
	$9 = [2097152]
	$8 = [0]
	
.LOOP $label$11:
	$6 = $5
	$5 = ($9 + $8)
	if ( ((int_32)$7 < (int_32)$5) ){ goto $label$12 }
	$4 = ($9 + $4)
	$7 = ($7 - $5)
	$8 = ($5 + $9)
	
.LABEL $label$12
	$7 = (($7 << [1]) | (uint_32($2 >> [30]) & [1]))
	$5 = ($6 << [1])
	$2 = $6
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$11 }
	$3 = uint_32($10 >> [1])
	$9 = [-2147483648]
	$10 = [0]
	$2 = [0]
	
.LOOP $label$13:
	$6 = ($2 + $9)
	if ( ((int_32)$7 > (int_32)$8) ){ goto $label$15 }
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$14 }
	if ( ($5 <= $6) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = (($7 - $8) + ( [-1] ? [0] : ($5 <= $6) ))
	$2 = ($6 + $9)
	$8 = ((((int_32)$6 < (int_32)[0]) & ((int_32)$2 > (int_32)[-1])) + $8)
	$10 = ($10 + $9)
	$5 = ($5 - $6)
	
.LABEL $label$14
	$7 = (uint_32($5 >> [31]) | ($7 << [1]))
	$5 = ($5 << [1])
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$13 }
	if ( (($5 | $7) == 0) ){ goto $label$16 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$17 }
	$10 = (($10 & [1]) + $10)
	goto $label$16 
	
.LABEL $label$17
	$4 = ($4 + [1])
	$10 = [0]
	
.LABEL $label$16
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($3 << [20]) + int_32($4 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($4 << [31])))))
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
}

int_64 .FUNC fabs (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

void .FUNC $90 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC $91 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $89(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $90($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $93 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $38 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $89(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $93($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $90($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $90($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $50($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [880])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [880])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $52(CALL $51($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [24])
	$5 = ( *(($1 + [28])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([-24] - $5)
	$4 = (CASTING uint_64)(uint_32 $5)
	$2 = ($1 + [24])
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	$5 = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $50($0, ([0] - $3))
	$5 = *(($0 + [4]))
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	
.LABEL $label$2
	*($6) = $3
	*($6 + [8]) = $5
	CALL eosio_assert(((int_32)($5 - $3) > (int_32)[7]), [880])
	CALL memcpy($3, $1, [8])
	$0 = ($3 + [8])
	CALL eosio_assert(((int_32)($5 - $0) > (int_32)[7]), [880])
	CALL memcpy($0, ($1 + [8]), [8])
	$0 = ($3 + [16])
	CALL eosio_assert(((int_32)($5 - $0) > (int_32)[7]), [880])
	CALL memcpy($0, ($1 + [16]), [8])
	*($6 + [4]) = ($3 + [24])
	CALL $53($6, $2)
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $43 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $89(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $93($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $90($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $90($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [768])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $89([32])
	$6 = CALL $44($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $43(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $90($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN5eosio5token11add_balanceEyNS_5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	$8 = [0]
	*((($9 + [8]) + [32])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$6 = *($0)
	*($9 + [8]) = $6
	*($9 + [16]) = $1
	$4 = *($2 + [8])
	$0 = CALL db_find_i64($6, $1, (int_64)3607749779137757184, (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $42(($9 + [8]), $0)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [8])), [448])
	CALL eosio_assert([1], [992])
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [8])), [1040])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$2()), [1088])
	$1 = *($8 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$1), [1152])
	$6 = ((int_64)*($8) + (int_64)*($2))
	*($8) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [1200])
	CALL eosio_assert(((int_64)*($8) < (int_64)4611686018427387904), [1232])
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$1) == (int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8)), [1264])
	CALL eosio_assert([1], [880])
	CALL memcpy(($9 + [64]), $8, [8])
	CALL eosio_assert([1], [880])
	CALL memcpy((($9 + [64]) | [8]), ($8 + [8]), [8])
	CALL db_update_i64(*($8 + [20]), (int_64)0, ($9 + [64]), [16])
	$8 = (($9 + [8]) + [16])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$3 }
	*($8) = ((int_64)$1 + (int_64)1)
	$2 = *($9 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$2()), [816])
	*(($0 = CALL $89([32])) + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [928])
	$5 = ($0 + [8])
	$1 = (int_64)5462355
	
.LOOP $label$6:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	CALL eosio_assert($7, [896])
	*($0 + [16]) = ($9 + [8])
	*(($8 = ($0 + [8]))) = *(($2 + [8]))
	*($0) = *($2)
	CALL eosio_assert([1], [880])
	CALL memcpy(($9 + [64]), $0, [8])
	CALL eosio_assert([1], [880])
	CALL memcpy((($9 + [64]) | [8]), $5, [8])
	$1 = (uint_64)*($8) >> (uint_64)(int_64)8
	$2 = CALL db_store_i64(*((($9 + [8]) + [8])), (int_64)3607749779137757184, $3, $1), ($9 + [64]), [16]
	*($0 + [20]) = $2)
	$7 = (($9 + [8]) + [16])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$9 }
	*($7) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$9
	*($9 + [56]) = $0
	$1 = (uint_64)*($8) >> (uint_64)(int_64)8
	*($9 + [64]) = $1)
	*($9 + [52]) = $2
	$7 = ($9 + [36])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($9 + [40]))) ){ goto $label$11 }
	*($8 + [8]) = $1
	*($8 + [16]) = $2
	*($9 + [56]) = [0]
	*($8) = $0
	*($7) = ($8 + [24])
	goto $label$10 
	
.LABEL $label$11
	CALL $43(($9 + [32]), ($9 + [56]), ($9 + [64]), ($9 + [52]))
	
.LABEL $label$10
	$8 = *($9 + [56])
	*($9 + [56]) = [0]
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $90($8)
	
.LABEL $label$3
	$2 = *($9 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($9 + [36])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$8 = ($8 + [-24])
	$0 = *($8)
	*($8) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	CALL $90($0)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$14 }
	$8 = *(($9 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$8 = $2
	
.LABEL $label$12
	*($7) = $2
	CALL $90($8)
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

void .FUNC _ZN5eosio5token11sub_balanceEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	*([0] + [4]) = $7
	*(($7 + [40])) = [0]
	*($7 + [16]) = $1
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	*($7 + [8]) = *($0)
	$1 = *($2)
	$3 = *($2 + [8])
	$0 = CALL $45(($7 + [8]), (uint_64)$3 >> (uint_64)(int_64)8), [1328]
	CALL eosio_assert(((int_64)*($0)) >= (int_64)$1), [1360])
	if ( ((int_64)$1 != (int_64)*($0)) ){ goto $label$3 }
	CALL $46(($7 + [8]), $0)
	$4 = *($7 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)($7 + [8])), [1040])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$2()), [1088])
	$5 = *($0 + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)$5), [1392])
	$1 = (int_64)
	*($0) = $1(*($0) - $1))
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [1440])
	CALL eosio_assert(((int_64)*($0) < (int_64)4611686018427387904), [1472])
	$1 = (uint_64)$5 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$1) == (int_64)(uint_64)*($0 + [8]) >> (uint_64)(int_64)8)), [1264])
	CALL eosio_assert([1], [880])
	CALL memcpy(($7 + [48]), $0, [8])
	CALL eosio_assert([1], [880])
	CALL memcpy((($7 + [48]) | [8]), ($0 + [8]), [8])
	CALL db_update_i64(*($0 + [20]), (int_64)0, ($7 + [48]), [16])
	$0 = (($7 + [8]) + [16])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$4 }
	*($0) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$4
	$4 = *($7 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($7 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	CALL $90($2)
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($7 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $4
	
.LABEL $label$5
	*($6) = $4
	CALL $90($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [64])
}

void .FUNC $47 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*($9 + [16]) = [0]
	*($9 + [8]) = (int_64)0
	$6 = [0]
	$7 = [0]
	$8 = [0]
	$4 = (*($2 + [4]) - *($2))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $89($4)
	$6 = ($8 + ($5 << [4]))
	*(($9 + [16])) = $6
	*($9 + [8]) = $8
	*($9 + [12]) = $8
	$7 = *($2)
	$2 = (*(($2 + [4])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $7, $2)
	$7 = ($8 + $2)
	*($9 + [12]) = $7
	goto $label$2 
	
.LABEL $label$3
	$7 = $8
	
.LABEL $label$2
	*(($9 + [44])) = $7
	*($9 + [32]) = $1
	*(($9 + [16])) = [0]
	*(($9 + [48])) = $6
	*($9 + [24]) = $0
	*($9 + [40]) = $8
	*($9 + [8]) = (int_64)0
	CALL $48(($9 + [52]), $3)
	CALL $49(($9 + [64]), ($9 + [24]))
	$8 = *($9 + [64])
	CALL send_inline($8, (*($9 + [68]) - $8))
	$8 = *($9 + [64])
	if ( ($8 == 0) ){ goto $label$4 }
	*($9 + [68]) = $8
	CALL $90($8)
	
.LABEL $label$4
	$8 = *($9 + [52])
	if ( ($8 == 0) ){ goto $label$5 }
	*(($9 + [56])) = $8
	CALL $90($8)
	
.LABEL $label$5
	$8 = *($9 + [40])
	if ( ($8 == 0) ){ goto $label$6 }
	*(($9 + [44])) = $8
	CALL $90($8)
	
.LABEL $label$6
	$8 = *($9 + [8])
	if ( ($8 == 0) ){ goto $label$7 }
	*($9 + [12]) = $8
	CALL $90($8)
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $93(($9 + [8]))
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [592])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [640])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [8])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( (uint_64)(((int_64)*(*($8) + [8]) ^ (int_64)$2) <= (int_64)256) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [704])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $90($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $90($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

int_32 .FUNC $45 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [448])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $42($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [448])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $44 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [928])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [896])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

int_32 .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [928])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [896])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [800])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [800])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [800])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

void .FUNC _ZN5eosio5token12reducesupplyENS_5assetE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	float_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	float_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [368])
	*([0] + [4]) = $15
	CALL require_auth(*($0))
	$6 = [0]
	$2 = *($1 + [8])
	$10 = (uint_64)$2 >> (uint_64)(int_64)8
	$9 = $10)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$13 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$13 = [0]
	
.LABEL $label$1
	CALL eosio_assert($13, [896])
	$14 = [0]
	*(($15 + [232])) = [0]
	*($15 + [216]) = (int_64)-1
	*($15 + [224]) = (int_64)0
	$9 = *($0)
	*($15 + [200]) = $9
	*($15 + [208]) = $10
	$13 = [0]
	$6 = CALL db_find_i64($9, $10, (int_64)-4157508551318700032, $10)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$13 = CALL $59(($15 + [200]), $6)
	CALL eosio_assert(((int_32)*($13 + [72]) == (int_32)($15 + [200])), [448])
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [2304])
	$3 = *($1)
	if ( ((uint_64)((int_64)$3 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$14 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$14 = [0]
	
.LABEL $label$7
	CALL eosio_assert($14, [1600])
	CALL eosio_assert(((int_64)$3 > (int_64)0), [2368])
	CALL eosio_assert(((int_64)$2 == (int_64)*($13 + [8])), [1680])
	$10 = *($13 + [16])
	CALL eosio_assert(((int_32)*($13 + [72]) == (int_32)($15 + [200])), [1040])
	CALL eosio_assert(((int_64)*($15 + [200]) == (int_64)CALL $fimport$2()), [1088])
	*(($13 + [28])) = *(($1 + [12]))
	*(($13 + [24])) = *(($1 + [8]))
	*(($13 + [20])) = *(($1 + [4]))
	*($13 + [16]) = *($1)
	$9 = *($13 + [8])
	CALL eosio_assert([1], [1264])
	*($15 + [328]) = (($15 + [240]) + [72])
	*($15 + [324]) = ($15 + [240])
	*($15 + [320]) = ($15 + [240])
	*($15 + [336]) = ($15 + [320])
	*($15 + [348]) = ($13 + [16])
	*($15 + [344]) = $13
	*($15 + [352]) = ($13 + [32])
	*($15 + [356]) = ($13 + [48])
	*($15 + [360]) = ($13 + [64])
	CALL $56(($15 + [344]), ($15 + [336]))
	CALL db_update_i64(*($13 + [76]), (int_64)0, ($15 + [240]), [72])
	$6 = (($15 + [200]) + [16])
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (uint_64)($9) <= *($6)) ){ goto $label$12 }
	*($6) = ((int_64)$9 + (int_64)1)
	
.LABEL $label$12
	CALL eosio_assert([1], [928])
	$9 = (int_64)5462355
	$6 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$13 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$13 = [0]
	
.LABEL $label$13
	CALL eosio_assert($13, [896])
	$13 = ($0 + [12])
	$6 = *($13)
	if ( ($6 == 0) ){ goto $label$20 }
	$14 = ($0 + [12])
	
.LOOP $label$21:
	$12 = *($6 + [16])
	if ( ((int_32)$12 < (int_32)[3]) ){ goto $label$23 }
	$12 = *($6)
	if ( $12 ){ goto $label$22 }
	goto $label$19 
	
.LABEL $label$23
	if ( ((int_32)$12 == (int_32)[2]) ){ goto $label$18 }
	$14 = ($6 + [4])
	$12 = *($6 + [4])
	if ( ($12 == 0) ){ goto $label$18 }
	$6 = $14
	
.LABEL $label$22
	$14 = $6
	$6 = $12
	goto $label$21 
	
.LABEL $label$20
	$6 = $13
	$14 = $13
	goto $label$18 
	
.LABEL $label$19
	$14 = $6
	
.LABEL $label$18
	$4 = (CASTING float_64)(int_64 $10)
	$12 = *($14)
	if ( $12 ){ goto $label$24 }
	*(($12 = CALL $89([32]))) = (int_64)0
	*($12 + [8]) = $6
	*($14) = $12
	*($12 + [24]) = (int_64)0
	*($12 + [16]) = [2]
	$6 = $12
	$11 = ($0 + [8])
	$5 = *(*($11))
	if ( ($5 == 0) ){ goto $label$25 }
	*($11) = $5
	$6 = *($14)
	
.LABEL $label$25
	CALL $39(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$24
	$8 = *(($12 + [24]))
	CALL eosio_assert([1], [928])
	$10 = (Rounds 0)(((float_64)$4 * (float_64)$8))
	$9 = (int_64)5462355
	$6 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$14 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$14 = [0]
	
.LABEL $label$26
	CALL eosio_assert($14, [896])
	$6 = *($13)
	if ( ($6 == 0) ){ goto $label$33 }
	$14 = ($0 + [12])
	
.LOOP $label$34:
	$12 = *($6 + [16])
	if ( ((int_32)$12 < (int_32)[3]) ){ goto $label$36 }
	$12 = *($6)
	if ( $12 ){ goto $label$35 }
	goto $label$32 
	
.LABEL $label$36
	if ( ((int_32)$12 == (int_32)[2]) ){ goto $label$31 }
	$14 = ($6 + [4])
	$12 = *($6 + [4])
	if ( ($12 == 0) ){ goto $label$31 }
	$6 = $14
	
.LABEL $label$35
	$14 = $6
	$6 = $12
	goto $label$34 
	
.LABEL $label$33
	$6 = $13
	$14 = $13
	goto $label$31 
	
.LABEL $label$32
	$14 = $6
	
.LABEL $label$31
	$8 = (CASTING float_64)(int_64 $3)
	$12 = *($14)
	if ( $12 ){ goto $label$37 }
	*(($12 = CALL $89([32]))) = (int_64)0
	*($12 + [8]) = $6
	*($14) = $12
	*($12 + [24]) = (int_64)0
	*($12 + [16]) = [2]
	$6 = $12
	$11 = ($0 + [8])
	$5 = *(*($11))
	if ( ($5 == 0) ){ goto $label$38 }
	*($11) = $5
	$6 = *($14)
	
.LABEL $label$38
	CALL $39(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$37
	$14 = ($0 + [24])
	$6 = *($14)
	$9 = (Rounds 0)(((float_64)$8 * (float_64)*(($12 + [24]))))
	if ( ((int_64)$9 <= (int_64)$10) ){ goto $label$54 }
	if ( ($6 == 0) ){ goto $label$53 }
	$12 = ($0 + [24])
	
.LOOP $label$55:
	$11 = *($6 + [16])
	if ( ((int_32)$11 < (int_32)[3]) ){ goto $label$57 }
	$11 = *($6)
	if ( $11 ){ goto $label$56 }
	goto $label$51 
	
.LABEL $label$57
	if ( ((int_32)$11 == (int_32)[2]) ){ goto $label$50 }
	$12 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$50 }
	$6 = $12
	
.LABEL $label$56
	$12 = $6
	$6 = $11
	goto $label$55 
	
.LABEL $label$54
	if ( ($6 == 0) ){ goto $label$52 }
	$12 = ($0 + [24])
	
.LOOP $label$58:
	$11 = *($6 + [16])
	if ( ((int_32)$11 < (int_32)[3]) ){ goto $label$60 }
	$11 = *($6)
	if ( $11 ){ goto $label$59 }
	goto $label$47 
	
.LABEL $label$60
	if ( ((int_32)$11 == (int_32)[2]) ){ goto $label$46 }
	$12 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$46 }
	$6 = $12
	
.LABEL $label$59
	$12 = $6
	$6 = $11
	goto $label$58 
	
.LABEL $label$53
	$6 = $14
	$12 = $14
	$11 = *($12)
	if ( $11 ){ goto $label$48 }
	goto $label$49 
	
.LABEL $label$52
	$6 = $14
	$12 = $14
	$11 = *($12)
	if ( $11 ){ goto $label$44 }
	goto $label$45 
	
.LABEL $label$51
	$12 = $6
	
.LABEL $label$50
	$11 = *($12)
	if ( $11 ){ goto $label$48 }
	
.LABEL $label$49
	*(($11 = CALL $89([32]))) = (int_64)0
	*($11 + [8]) = $6
	*($12) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = [2]
	$6 = $11
	$5 = ($0 + [20])
	$7 = *(*($5))
	if ( ($7 == 0) ){ goto $label$61 }
	*($5) = $7
	$6 = *($12)
	
.LABEL $label$61
	CALL $39(*(($0 + [24])), $6)
	*(($6 = ($0 + [28]))) = (*($6) + [1])
	
.LABEL $label$48
	*($15 + [192]) = $2
	$3 = *(($11 + [24]))
	CALL eosio_assert([1], [1392])
	$9 = (int_64)
	*($15 + [184]) = $9($9 - $10))
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [1440])
	CALL eosio_assert(((int_64)$9 < (int_64)4611686018427387904), [1472])
	*(($15 + [176])) = [0]
	*($15 + [168]) = (int_64)0
	$6 = CALL strlen([1520])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$42 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$64 }
	*($15 + [168]) = ($6 << [1])
	$12 = (($15 + [168]) | [1])
	if ( $6 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$64
	$11 = (($6 + [16]) & [-16])
	$12 = CALL $89($11)
	*($15 + [168]) = ($11 | [1])
	*($15 + [176]) = $12
	*($15 + [172]) = $6
	
.LABEL $label$63
	CALL memcpy($12, [1520], $6)
	
.LABEL $label$62
	*(($12 + $6)) = [0]
	*((($15 + [40]) + [8])) = *((($15 + [184]) + [8]))
	*($15 + [40]) = *($15 + [184])
	CALL _ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $3, ($15 + [40]), ($15 + [168]))
	if ( ((*($15 + [168]) & [1]) == 0) ){ goto $label$43 }
	CALL $90(*($15 + [176]))
	goto $label$43 
	
.LABEL $label$47
	$12 = $6
	
.LABEL $label$46
	$11 = *($12)
	if ( $11 ){ goto $label$44 }
	
.LABEL $label$45
	*(($11 = CALL $89([32]))) = (int_64)0
	*($11 + [8]) = $6
	*($12) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = [2]
	$6 = $11
	$5 = ($0 + [20])
	$7 = *(*($5))
	if ( ($7 == 0) ){ goto $label$65 }
	*($5) = $7
	$6 = *($12)
	
.LABEL $label$65
	CALL $39(*(($0 + [24])), $6)
	*(($6 = ($0 + [28]))) = (*($6) + [1])
	
.LABEL $label$44
	*($15 + [160]) = $2
	$3 = *(($11 + [24]))
	CALL eosio_assert([1], [1392])
	$9 = (int_64)
	*($15 + [152]) = $9($10 - $9))
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [1440])
	CALL eosio_assert(((int_64)$9 < (int_64)4611686018427387904), [1472])
	*(($15 + [144])) = [0]
	*($15 + [136]) = (int_64)0
	$6 = CALL strlen([1520])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$41 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$68 }
	*($15 + [136]) = ($6 << [1])
	$12 = (($15 + [136]) | [1])
	if ( $6 ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$68
	$11 = (($6 + [16]) & [-16])
	$12 = CALL $89($11)
	*($15 + [136]) = ($11 | [1])
	*($15 + [144]) = $12
	*($15 + [140]) = $6
	
.LABEL $label$67
	CALL memcpy($12, [1520], $6)
	
.LABEL $label$66
	*(($12 + $6)) = [0]
	*((($15 + [56]) + [8])) = *((($15 + [152]) + [8]))
	*($15 + [56]) = *($15 + [152])
	CALL _ZN5eosio5token12destroytokenEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $3, ($15 + [56]), ($15 + [136]))
	if ( ((*($15 + [136]) & [1]) == 0) ){ goto $label$43 }
	CALL $90(*($15 + [144]))
	
.LABEL $label$43
	CALL eosio_assert([1], [928])
	$9 = (int_64)5462355
	$6 = [0]
	
.LOOP $label$71:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$70 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$72 }
	
.LOOP $label$73:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$70 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$73 }
	
.LABEL $label$72
	$12 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$71 }
	goto $label$69 
	
.LABEL $label$70
	$12 = [0]
	
.LABEL $label$69
	CALL eosio_assert($12, [896])
	$6 = *($13)
	if ( ($6 == 0) ){ goto $label$78 }
	$12 = ($0 + [12])
	
.LOOP $label$79:
	$11 = *($6 + [16])
	if ( ((int_32)$11 < (int_32)[5]) ){ goto $label$81 }
	$11 = *($6)
	if ( $11 ){ goto $label$80 }
	goto $label$77 
	
.LABEL $label$81
	if ( ((int_32)$11 == (int_32)[4]) ){ goto $label$76 }
	$12 = ($6 + [4])
	$11 = *($6 + [4])
	if ( ($11 == 0) ){ goto $label$76 }
	$6 = $12
	
.LABEL $label$80
	$12 = $6
	$6 = $11
	goto $label$79 
	
.LABEL $label$78
	$6 = $13
	$12 = $13
	$11 = *($12)
	if ( $11 ){ goto $label$74 }
	goto $label$75 
	
.LABEL $label$77
	$12 = $6
	
.LABEL $label$76
	$11 = *($12)
	if ( $11 ){ goto $label$74 }
	
.LABEL $label$75
	*(($11 = CALL $89([32]))) = (int_64)0
	*($11 + [8]) = $6
	*($12) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = [4]
	$6 = $11
	$5 = ($0 + [8])
	$7 = *(*($5))
	if ( ($7 == 0) ){ goto $label$82 }
	*($5) = $7
	$6 = *($12)
	
.LABEL $label$82
	CALL $39(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$74
	$8 = *(($11 + [24]))
	CALL eosio_assert([1], [928])
	$10 = (Rounds 0)(((float_64)$4 * (float_64)$8))
	$9 = (int_64)5462355
	$6 = [0]
	
.LOOP $label$85:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$84 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$86 }
	
.LOOP $label$87:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$84 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$87 }
	
.LABEL $label$86
	$12 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$85 }
	goto $label$83 
	
.LABEL $label$84
	$12 = [0]
	
.LABEL $label$83
	CALL eosio_assert($12, [896])
	$9 = *($1)
	$6 = *($13)
	if ( ($6 == 0) ){ goto $label$90 }
	$13 = ($0 + [12])
	
.LOOP $label$91:
	$12 = *($6 + [16])
	if ( ((int_32)$12 < (int_32)[5]) ){ goto $label$93 }
	$12 = *($6)
	if ( $12 ){ goto $label$92 }
	goto $label$89 
	
.LABEL $label$93
	if ( ((int_32)$12 == (int_32)[4]) ){ goto $label$88 }
	$13 = ($6 + [4])
	$12 = *($6 + [4])
	if ( ($12 == 0) ){ goto $label$88 }
	$6 = $13
	
.LABEL $label$92
	$13 = $6
	$6 = $12
	goto $label$91 
	
.LABEL $label$90
	$6 = $13
	goto $label$88 
	
.LABEL $label$89
	$13 = $6
	
.LABEL $label$88
	$4 = (CASTING float_64)(int_64 $9)
	$12 = *($13)
	if ( $12 ){ goto $label$94 }
	*(($12 = CALL $89([32]))) = (int_64)0
	*($12 + [8]) = $6
	*($13) = $12
	*($12 + [24]) = (int_64)0
	*($12 + [16]) = [4]
	$6 = $12
	$11 = ($0 + [8])
	$1 = *(*($11))
	if ( ($1 == 0) ){ goto $label$95 }
	*($11) = $1
	$6 = *($13)
	
.LABEL $label$95
	CALL $39(*(($0 + [12])), $6)
	*(($6 = ($0 + [16]))) = (*($6) + [1])
	
.LABEL $label$94
	$6 = *($14)
	$9 = (Rounds 0)(((float_64)$4 * (float_64)*(($12 + [24]))))
	if ( ((int_64)$9 <= (int_64)$10) ){ goto $label$109 }
	if ( ($6 == 0) ){ goto $label$108 }
	$14 = ($0 + [24])
	
.LOOP $label$110:
	$13 = *($6 + [16])
	if ( ((int_32)$13 < (int_32)[5]) ){ goto $label$112 }
	$13 = *($6)
	if ( $13 ){ goto $label$111 }
	goto $label$106 
	
.LABEL $label$112
	if ( ((int_32)$13 == (int_32)[4]) ){ goto $label$105 }
	$14 = ($6 + [4])
	$13 = *($6 + [4])
	if ( ($13 == 0) ){ goto $label$105 }
	$6 = $14
	
.LABEL $label$111
	$14 = $6
	$6 = $13
	goto $label$110 
	
.LABEL $label$109
	if ( ($6 == 0) ){ goto $label$107 }
	$14 = ($0 + [24])
	
.LOOP $label$113:
	$13 = *($6 + [16])
	if ( ((int_32)$13 < (int_32)[5]) ){ goto $label$115 }
	$13 = *($6)
	if ( $13 ){ goto $label$114 }
	goto $label$102 
	
.LABEL $label$115
	if ( ((int_32)$13 == (int_32)[4]) ){ goto $label$101 }
	$14 = ($6 + [4])
	$13 = *($6 + [4])
	if ( ($13 == 0) ){ goto $label$101 }
	$6 = $14
	
.LABEL $label$114
	$14 = $6
	$6 = $13
	goto $label$113 
	
.LABEL $label$108
	$6 = $14
	$13 = *($14)
	if ( $13 ){ goto $label$103 }
	goto $label$104 
	
.LABEL $label$107
	$6 = $14
	$13 = *($14)
	if ( $13 ){ goto $label$99 }
	goto $label$100 
	
.LABEL $label$106
	$14 = $6
	
.LABEL $label$105
	$13 = *($14)
	if ( $13 ){ goto $label$103 }
	
.LABEL $label$104
	*(($13 = CALL $89([32]))) = (int_64)0
	*($13 + [8]) = $6
	*($14) = $13
	*($13 + [24]) = (int_64)0
	*($13 + [16]) = [4]
	$6 = $13
	$12 = ($0 + [20])
	$11 = *(*($12))
	if ( ($11 == 0) ){ goto $label$116 }
	*($12) = $11
	$6 = *($14)
	
.LABEL $label$116
	CALL $39(*(($0 + [24])), $6)
	*(($6 = ($0 + [28]))) = (*($6) + [1])
	
.LABEL $label$103
	*($15 + [128]) = $2
	$2 = *(($13 + [24]))
	CALL eosio_assert([1], [1392])
	$9 = (int_64)
	*($15 + [120]) = $9($9 - $10))
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [1440])
	CALL eosio_assert(((int_64)$9 < (int_64)4611686018427387904), [1472])
	*(($15 + [112])) = [0]
	*($15 + [104]) = (int_64)0
	$6 = CALL strlen([1520])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$40 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$119 }
	*($15 + [104]) = ($6 << [1])
	$13 = (($15 + [104]) | [1])
	if ( $6 ){ goto $label$118 }
	goto $label$117 
	
.LABEL $label$119
	$14 = (($6 + [16]) & [-16])
	$13 = CALL $89($14)
	*($15 + [104]) = ($14 | [1])
	*($15 + [112]) = $13
	*($15 + [108]) = $6
	
.LABEL $label$118
	CALL memcpy($13, [1520], $6)
	
.LABEL $label$117
	*(($13 + $6)) = [0]
	*((($15 + [8]) + [8])) = *((($15 + [120]) + [8]))
	*($15 + [8]) = *($15 + [120])
	CALL _ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $2, ($15 + [8]), ($15 + [104]))
	if ( ((*($15 + [104]) & [1]) == 0) ){ goto $label$98 }
	CALL $90(*($15 + [112]))
	$14 = *($15 + [224])
	if ( $14 ){ goto $label$97 }
	goto $label$96 
	
.LABEL $label$102
	$14 = $6
	
.LABEL $label$101
	$13 = *($14)
	if ( $13 ){ goto $label$99 }
	
.LABEL $label$100
	*(($13 = CALL $89([32]))) = (int_64)0
	*($13 + [8]) = $6
	*($14) = $13
	*($13 + [24]) = (int_64)0
	*($13 + [16]) = [4]
	$6 = $13
	$12 = ($0 + [20])
	$11 = *(*($12))
	if ( ($11 == 0) ){ goto $label$120 }
	*($12) = $11
	$6 = *($14)
	
.LABEL $label$120
	CALL $39(*(($0 + [24])), $6)
	*(($6 = ($0 + [28]))) = (*($6) + [1])
	
.LABEL $label$99
	*($15 + [96]) = $2
	$2 = *(($13 + [24]))
	CALL eosio_assert([1], [1392])
	$9 = (int_64)
	*($15 + [88]) = $9($10 - $9))
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [1440])
	CALL eosio_assert(((int_64)$9 < (int_64)4611686018427387904), [1472])
	*(($15 + [80])) = [0]
	*($15 + [72]) = (int_64)0
	$6 = CALL strlen([1520])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$39 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$123 }
	*($15 + [72]) = ($6 << [1])
	$13 = (($15 + [72]) | [1])
	if ( $6 ){ goto $label$122 }
	goto $label$121 
	
.LABEL $label$123
	$14 = (($6 + [16]) & [-16])
	$13 = CALL $89($14)
	*($15 + [72]) = ($14 | [1])
	*($15 + [80]) = $13
	*($15 + [76]) = $6
	
.LABEL $label$122
	CALL memcpy($13, [1520], $6)
	
.LABEL $label$121
	*(($13 + $6)) = [0]
	*((($15 + [24]) + [8])) = *((($15 + [88]) + [8]))
	*($15 + [24]) = *($15 + [88])
	CALL _ZN5eosio5token12destroytokenEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $2, ($15 + [24]), ($15 + [72]))
	if ( ((*($15 + [72]) & [1]) == 0) ){ goto $label$98 }
	CALL $90(*($15 + [80]))
	
.LABEL $label$98
	$14 = *($15 + [224])
	if ( ($14 == 0) ){ goto $label$96 }
	
.LABEL $label$97
	$12 = ($15 + [228])
	$6 = *($12)
	if ( ((int_32)$6 == (int_32)$14) ){ goto $label$125 }
	
.LOOP $label$126:
	$6 = ($6 + [-24])
	$13 = *($6)
	*($6) = [0]
	if ( ($13 == 0) ){ goto $label$127 }
	CALL $90($13)
	
.LABEL $label$127
	if ( ((int_32)$14 != (int_32)$6) ){ goto $label$126 }
	$6 = *(($15 + [224]))
	goto $label$124 
	
.LABEL $label$125
	$6 = $14
	
.LABEL $label$124
	*($12) = $14
	CALL $90($6)
	
.LABEL $label$96
	*([0] + [4]) = ($15 + [368])
	return (unreachable)
	
.LABEL $label$42
	CALL $91(($15 + [168]))
	
.LABEL $label$41
	CALL $91(($15 + [136]))
	
.LABEL $label$40
	CALL $91(($15 + [104]))
	
.LABEL $label$39
	CALL $91(($15 + [72]))
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $6 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	*($0) = $1
	$3 = [0]
	*(($2 = ($0 + [12]))) = [0]
	*(($7 = ($0 + [16]))) = [0]
	*($0 + [8]) = $2
	$8 = [2512]
	if ( ((int_32)$2 != (int_32)$2) ){ goto $label$2 }
	$11 = [24]
	goto $label$1 
	
.LABEL $label$2
	$11 = [3]
	
.LABEL $label$1
	
.LOOP $label$3:
	goto $label$93 
	
.LABEL $label$115
	$3 = *(($0 + [12]))
	if ( ((int_32)*(($0 + [8])) == (int_32)$2) ){ goto $label$52 }
	$11 = [3]
	goto $label$3 
	
.LABEL $label$114
	$9 = $3
	if ( ($3 == 0) ){ goto $label$34 }
	$11 = [4]
	goto $label$3 
	
.LABEL $label$113
	$10 = $9
	$9 = *($10 + [4])
	if ( $9 ){ goto $label$35 }
	goto $label$36 
	
.LABEL $label$112
	$10 = $2
	if ( $3 ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$111
	$9 = $2
	$11 = [23]
	goto $label$3 
	
.LABEL $label$110
	$10 = *($9 + [8])
	$4 = ((int_32)*($10) == (int_32)$9)
	$9 = $10
	if ( $4 ){ goto $label$33 }
	$11 = [5]
	goto $label$3 
	
.LABEL $label$109
	$9 = *($8)
	if ( ((int_32)*($10 + [16]) >= (int_32)$9) ){ goto $label$32 }
	$11 = [20]
	goto $label$3 
	
.LABEL $label$108
	if ( ($3 == 0) ){ goto $label$51 }
	$11 = [21]
	goto $label$3 
	
.LABEL $label$107
	$3 = ($10 + [4])
	if ( *($3) ){ goto $label$49 }
	goto $label$50 
	
.LABEL $label$106
	if ( ($3 == 0) ){ goto $label$48 }
	$11 = [7]
	goto $label$3 
	
.LABEL $label$105
	$4 = $2
	goto $label$31 
	
.LABEL $label$104
	$4 = $3
	$3 = $10
	$11 = [8]
	goto $label$3 
	
.LABEL $label$103
	$10 = *($3 + [16])
	if ( ((int_32)$9 >= (int_32)$10) ){ goto $label$30 }
	$11 = [18]
	goto $label$3 
	
.LABEL $label$102
	$10 = *($3)
	if ( $10 ){ goto $label$40 }
	goto $label$41 
	
.LABEL $label$101
	if ( ((int_32)$10 >= (int_32)$9) ){ goto $label$29 }
	$11 = [14]
	goto $label$3 
	
.LABEL $label$100
	$4 = ($3 + [4])
	$10 = *($3 + [4])
	if ( ($10 == 0) ){ goto $label$27 }
	$11 = [15]
	goto $label$3 
	
.LABEL $label$99
	$3 = $4
	goto $label$26 
	
.LABEL $label$98
	$10 = $2
	$3 = $2
	if ( *($3) ){ goto $label$39 }
	$11 = [11]
	goto $label$3 
	
.LABEL $label$97
	$9 = CALL $89([32])
	$1 = *(($8 + [8]))
	$5 = *($8)
	*($9) = (int_64)0
	*(($9 + [24])) = $1
	*($9 + [16]) = $5
	*($9 + [8]) = $10
	*($3) = $9
	$10 = ($0 + [8])
	$4 = *(*($10))
	if ( ($4 == 0) ){ goto $label$28 }
	$11 = [12]
	goto $label$3 
	
.LABEL $label$96
	*($10) = $4
	$9 = *($3)
	$11 = [13]
	goto $label$3 
	
.LABEL $label$95
	CALL $39(*(($0 + [12])), $9)
	*($7) = (*($7) + [1])
	$11 = [1]
	goto $label$3 
	
.LABEL $label$94
	$8 = ($8 + [16])
	if ( ((int_32)$8 != (int_32)[2560]) ){ goto $label$37 }
	goto $label$38 
	
.LABEL $label$93
	$10 = $3
	if ( *($3) ){ goto $label$42 }
	goto $label$43 
	
.LABEL $label$92
	$10 = $3
	$3 = $4
	if ( *($3) ){ goto $label$46 }
	goto $label$47 
	
.LABEL $label$91
	$10 = $3
	$3 = $4
	if ( *($3) ){ goto $label$44 }
	goto $label$45 
	
.LABEL $label$90
	$3 = [0]
	*(($6 = ($0 + [28]))) = [0]
	*(($2 = ($0 + [24]))) = [0]
	*($0 + [20]) = $2
	$8 = [2560]
	$7 = ($0 + [20])
	if ( ((int_32)$2 != (int_32)$2) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$89
	$3 = *(($0 + [24]))
	if ( ((int_32)*($7) == (int_32)$2) ){ goto $label$63 }
	$11 = [26]
	goto $label$3 
	
.LABEL $label$88
	$9 = $3
	if ( ($3 == 0) ){ goto $label$19 }
	$11 = [27]
	goto $label$3 
	
.LABEL $label$87
	$10 = $9
	$9 = *($10 + [4])
	if ( $9 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$86
	$10 = $2
	if ( $3 ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$85
	$9 = $2
	$11 = [51]
	goto $label$3 
	
.LABEL $label$84
	$10 = *($9 + [8])
	$4 = ((int_32)*($10) == (int_32)$9)
	$9 = $10
	if ( $4 ){ goto $label$18 }
	$11 = [28]
	goto $label$3 
	
.LABEL $label$83
	$9 = *($8)
	if ( ((int_32)*($10 + [16]) >= (int_32)$9) ){ goto $label$17 }
	$11 = [49]
	goto $label$3 
	
.LABEL $label$82
	if ( ($3 == 0) ){ goto $label$62 }
	$11 = [37]
	goto $label$3 
	
.LABEL $label$81
	$3 = ($10 + [4])
	if ( *($3) ){ goto $label$60 }
	goto $label$61 
	
.LABEL $label$80
	if ( ($3 == 0) ){ goto $label$59 }
	$11 = [30]
	goto $label$3 
	
.LABEL $label$79
	$4 = $2
	goto $label$16 
	
.LABEL $label$78
	$4 = $3
	$3 = $10
	$11 = [31]
	goto $label$3 
	
.LABEL $label$77
	$10 = *($3 + [16])
	if ( ((int_32)$9 >= (int_32)$10) ){ goto $label$15 }
	$11 = [47]
	goto $label$3 
	
.LABEL $label$76
	$10 = *($3)
	if ( $10 ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$75
	if ( ((int_32)$10 >= (int_32)$9) ){ goto $label$14 }
	$11 = [43]
	goto $label$3 
	
.LABEL $label$74
	$4 = ($3 + [4])
	$10 = *($3 + [4])
	if ( ($10 == 0) ){ goto $label$7 }
	$11 = [44]
	goto $label$3 
	
.LABEL $label$73
	$3 = $4
	goto $label$4 
	
.LABEL $label$72
	$10 = $2
	$3 = $2
	if ( *($3) ){ goto $label$13 }
	$11 = [38]
	goto $label$3 
	
.LABEL $label$71
	$9 = CALL $89([32])
	$1 = *(($8 + [8]))
	$5 = *($8)
	*($9) = (int_64)0
	*(($9 + [24])) = $1
	*($9 + [16]) = $5
	*($9 + [8]) = $10
	*($3) = $9
	$10 = *(*($7))
	if ( ($10 == 0) ){ goto $label$8 }
	$11 = [39]
	goto $label$3 
	
.LABEL $label$70
	*($7) = $10
	$9 = *($3)
	$11 = [40]
	goto $label$3 
	
.LABEL $label$69
	CALL $39(*(($0 + [24])), $9)
	*($6) = (*($6) + [1])
	$11 = [34]
	goto $label$3 
	
.LABEL $label$68
	$8 = ($8 + [16])
	if ( ((int_32)$8 != (int_32)[2656]) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$67
	$10 = $3
	if ( *($3) ){ goto $label$53 }
	goto $label$54 
	
.LABEL $label$66
	$10 = $3
	$3 = $4
	if ( *($3) ){ goto $label$57 }
	goto $label$58 
	
.LABEL $label$65
	$10 = $3
	$3 = $4
	if ( *($3) ){ goto $label$55 }
	goto $label$56 
	
.LABEL $label$64
	return $0
	
.LABEL $label$63
	$11 = [36]
	goto $label$3 
	
.LABEL $label$62
	$11 = [41]
	goto $label$3 
	
.LABEL $label$61
	$11 = [38]
	goto $label$3 
	
.LABEL $label$60
	$11 = [34]
	goto $label$3 
	
.LABEL $label$59
	$11 = [41]
	goto $label$3 
	
.LABEL $label$58
	$11 = [38]
	goto $label$3 
	
.LABEL $label$57
	$11 = [34]
	goto $label$3 
	
.LABEL $label$56
	$11 = [38]
	goto $label$3 
	
.LABEL $label$55
	$11 = [34]
	goto $label$3 
	
.LABEL $label$54
	$11 = [38]
	goto $label$3 
	
.LABEL $label$53
	$11 = [34]
	goto $label$3 
	
.LABEL $label$52
	$11 = [24]
	goto $label$3 
	
.LABEL $label$51
	$11 = [19]
	goto $label$3 
	
.LABEL $label$50
	$11 = [11]
	goto $label$3 
	
.LABEL $label$49
	$11 = [1]
	goto $label$3 
	
.LABEL $label$48
	$11 = [19]
	goto $label$3 
	
.LABEL $label$47
	$11 = [11]
	goto $label$3 
	
.LABEL $label$46
	$11 = [1]
	goto $label$3 
	
.LABEL $label$45
	$11 = [11]
	goto $label$3 
	
.LABEL $label$44
	$11 = [1]
	goto $label$3 
	
.LABEL $label$43
	$11 = [11]
	goto $label$3 
	
.LABEL $label$42
	$11 = [1]
	goto $label$3 
	
.LABEL $label$41
	$11 = [0]
	goto $label$3 
	
.LABEL $label$40
	$11 = [16]
	goto $label$3 
	
.LABEL $label$39
	$11 = [1]
	goto $label$3 
	
.LABEL $label$38
	$11 = [25]
	goto $label$3 
	
.LABEL $label$37
	$11 = [2]
	goto $label$3 
	
.LABEL $label$36
	$11 = [5]
	goto $label$3 
	
.LABEL $label$35
	$11 = [4]
	goto $label$3 
	
.LABEL $label$34
	$11 = [22]
	goto $label$3 
	
.LABEL $label$33
	$11 = [23]
	goto $label$3 
	
.LABEL $label$32
	$11 = [6]
	goto $label$3 
	
.LABEL $label$31
	$11 = [8]
	goto $label$3 
	
.LABEL $label$30
	$11 = [9]
	goto $label$3 
	
.LABEL $label$29
	$11 = [10]
	goto $label$3 
	
.LABEL $label$28
	$11 = [13]
	goto $label$3 
	
.LABEL $label$27
	$11 = [17]
	goto $label$3 
	
.LABEL $label$26
	$11 = [16]
	goto $label$3 
	
.LABEL $label$25
	$11 = [19]
	goto $label$3 
	
.LABEL $label$24
	$11 = [21]
	goto $label$3 
	
.LABEL $label$23
	$11 = [36]
	goto $label$3 
	
.LABEL $label$22
	$11 = [26]
	goto $label$3 
	
.LABEL $label$21
	$11 = [28]
	goto $label$3 
	
.LABEL $label$20
	$11 = [27]
	goto $label$3 
	
.LABEL $label$19
	$11 = [50]
	goto $label$3 
	
.LABEL $label$18
	$11 = [51]
	goto $label$3 
	
.LABEL $label$17
	$11 = [29]
	goto $label$3 
	
.LABEL $label$16
	$11 = [31]
	goto $label$3 
	
.LABEL $label$15
	$11 = [32]
	goto $label$3 
	
.LABEL $label$14
	$11 = [33]
	goto $label$3 
	
.LABEL $label$13
	$11 = [34]
	goto $label$3 
	
.LABEL $label$12
	$11 = [42]
	goto $label$3 
	
.LABEL $label$11
	$11 = [35]
	goto $label$3 
	
.LABEL $label$10
	$11 = [41]
	goto $label$3 
	
.LABEL $label$9
	$11 = [37]
	goto $label$3 
	
.LABEL $label$8
	$11 = [40]
	goto $label$3 
	
.LABEL $label$7
	$11 = [46]
	goto $label$3 
	
.LABEL $label$6
	$11 = [48]
	goto $label$3 
	
.LABEL $label$5
	$11 = [45]
	goto $label$3 
	
.LABEL $label$4
	$11 = [45]
	goto $label$3 
	return $11
}

void .FUNC _ZN5eosio5token6createEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	float_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [272])
	*([0] + [4]) = $15
	CALL require_auth(*($0))
	$7 = [0]
	$3 = *($2 + [8])
	$4 = (uint_64)$3 >> (uint_64)(int_64)8
	$11 = $4)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$10 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	
.LABEL $label$1
	CALL eosio_assert($10, [896])
	$14 = [0]
	$10 = [0]
	$5 = *($2)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$6 }
	$7 = [0]
	$11 = $4
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$10 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$10 = [0]
	
.LABEL $label$6
	CALL eosio_assert($10, [2400])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [2416])
	*((($15 + [104]) + [32])) = [0]
	*($15 + [120]) = (int_64)-1
	*($15 + [128]) = (int_64)0
	$11 = *($0)
	*($15 + [104]) = $11
	*($15 + [112]) = $4
	$7 = CALL db_find_i64($11, $4, (int_64)-4157508551318700032, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	$14 = CALL $59(($15 + [104]), $7)
	CALL eosio_assert(((int_32)*($14 + [72]) == (int_32)($15 + [104])), [448])
	
.LABEL $label$11
	CALL eosio_assert(($14 == 0), [2448])
	$4 = *($0)
	CALL eosio_assert(((int_64)*($15 + [104]) == (int_64)CALL $fimport$2()), [816])
	$7 = CALL $89([88])
	CALL $60($7)
	*($7 + [72]) = ($15 + [104])
	*($7 + [8]) = $3
	*(($7 + [28])) = *(($2 + [12]))
	*(($7 + [24])) = *(($2 + [8]))
	*(($7 + [20])) = *(($2 + [4]))
	*($7 + [16]) = *($2)
	*($7 + [40]) = $3
	*($7 + [56]) = $3
	*($7 + [48]) = (int_64)500000
	*($7 + [64]) = $1
	*($15 + [232]) = (($15 + [144]) + [72])
	*($15 + [228]) = ($15 + [144])
	*($15 + [224]) = ($15 + [144])
	*($15 + [240]) = ($15 + [224])
	*($15 + [252]) = ($7 + [16])
	*($15 + [248]) = $7
	*($15 + [256]) = ($7 + [32])
	*($15 + [260]) = ($7 + [48])
	*($15 + [264]) = ($7 + [64])
	CALL $56(($15 + [248]), ($15 + [240]))
	$11 = (uint_64)*($7 + [8]) >> (uint_64)(int_64)8
	$14 = CALL db_store_i64(*((($15 + [104]) + [8])), (int_64)-4157508551318700032, $4, $11), ($15 + [144]), [72]
	*($7 + [76]) = $14)
	$10 = (($15 + [104]) + [16])
	if ( (uint_64)($11 <= *($10)) ){ goto $label$12 }
	*($10) = ((int_64)$11 + (int_64)1)
	
.LABEL $label$12
	*($15 + [248]) = $7
	$11 = (uint_64)*(($7 + [8])) >> (uint_64)(int_64)8
	*($15 + [144]) = $11)
	*($15 + [224]) = $14
	$10 = *((($15 + [104]) + [28]))
	if ( ((uint_32)$10 >= (uint_32)*(($15 + [136]))) ){ goto $label$14 }
	*($10 + [8]) = $11
	*($10 + [16]) = $14
	*($15 + [248]) = [0]
	*($10) = $7
	*(($15 + [132])) = ($10 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $62(($15 + [128]), ($15 + [248]), ($15 + [144]), ($15 + [224]))
	
.LABEL $label$13
	$10 = *($15 + [248])
	$7 = [0]
	*($15 + [248]) = [0]
	if ( ($10 == 0) ){ goto $label$15 }
	CALL $90($10)
	
.LABEL $label$15
	CALL eosio_assert([1], [928])
	$11 = (int_64)5462355
	
.LOOP $label$17:
	$10 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$10 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	CALL eosio_assert($10, [896])
	$14 = ($0 + [12])
	$7 = *($14)
	if ( ($7 == 0) ){ goto $label$22 }
	$10 = ($0 + [12])
	
.LOOP $label$23:
	$13 = *($7 + [16])
	if ( ((int_32)$13 < (int_32)[3]) ){ goto $label$25 }
	$13 = *($7)
	if ( $13 ){ goto $label$24 }
	goto $label$21 
	
.LABEL $label$25
	if ( ((int_32)$13 == (int_32)[2]) ){ goto $label$20 }
	$10 = ($7 + [4])
	$13 = *($7 + [4])
	if ( ($13 == 0) ){ goto $label$20 }
	$7 = $10
	
.LABEL $label$24
	$10 = $7
	$7 = $13
	goto $label$23 
	
.LABEL $label$22
	$7 = $14
	$10 = $14
	goto $label$20 
	
.LABEL $label$21
	$10 = $7
	
.LABEL $label$20
	$6 = (CASTING float_64)(int_64 $5)
	$13 = *($10)
	if ( $13 ){ goto $label$26 }
	*(($13 = CALL $89([32]))) = (int_64)0
	*($13 + [8]) = $7
	*($10) = $13
	*($13 + [24]) = (int_64)0
	*($13 + [16]) = [2]
	$7 = $13
	$12 = ($0 + [8])
	$8 = *(*($12))
	if ( ($8 == 0) ){ goto $label$27 }
	*($12) = $8
	$7 = *($10)
	
.LABEL $label$27
	CALL $39(*(($0 + [12])), $7)
	*(($7 = ($0 + [16]))) = (*($7) + [1])
	
.LABEL $label$26
	$11 = (Rounds 0)(((float_64)$6 * (float_64)*(($13 + [24]))))
	$10 = ($0 + [24])
	$7 = *($10)
	if ( ($7 == 0) ){ goto $label$32 }
	$13 = ($0 + [24])
	
.LOOP $label$33:
	$12 = *($7 + [16])
	if ( ((int_32)$12 < (int_32)[3]) ){ goto $label$35 }
	$12 = *($7)
	if ( $12 ){ goto $label$34 }
	goto $label$31 
	
.LABEL $label$35
	if ( ((int_32)$12 == (int_32)[2]) ){ goto $label$30 }
	$13 = ($7 + [4])
	$12 = *($7 + [4])
	if ( ($12 == 0) ){ goto $label$30 }
	$7 = $13
	
.LABEL $label$34
	$13 = $7
	$7 = $12
	goto $label$33 
	
.LABEL $label$32
	$7 = $10
	$13 = $10
	$12 = *($13)
	if ( $12 ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$31
	$13 = $7
	
.LABEL $label$30
	$12 = *($13)
	if ( $12 ){ goto $label$28 }
	
.LABEL $label$29
	*(($12 = CALL $89([32]))) = (int_64)0
	*($12 + [8]) = $7
	*($13) = $12
	*($12 + [24]) = (int_64)0
	*($12 + [16]) = [2]
	$7 = $12
	$8 = ($0 + [20])
	$9 = *(*($8))
	if ( ($9 == 0) ){ goto $label$36 }
	*($8) = $9
	$7 = *($13)
	
.LABEL $label$36
	CALL $39(*(($0 + [24])), $7)
	*(($7 = ($0 + [28]))) = (*($7) + [1])
	
.LABEL $label$28
	*($15 + [96]) = $3
	*(($15 + [80])) = [0]
	*($15 + [88]) = $11
	*($15 + [72]) = (int_64)0
	$11 = *(($12 + [24]))
	$13 = CALL strlen([2496])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$38 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$41 }
	*($15 + [72]) = ($13 << [1])
	$12 = (($15 + [72]) | [1])
	if ( $13 ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$41
	$7 = (($13 + [16]) & [-16])
	$12 = CALL $89($7)
	*($15 + [72]) = ($7 | [1])
	*($15 + [80]) = $12
	*($15 + [76]) = $13
	
.LABEL $label$40
	CALL memcpy($12, [2496], $13)
	
.LABEL $label$39
	$7 = [0]
	*(($12 + $13)) = [0]
	*((($15 + [24]) + [8])) = *((($15 + [88]) + [8]))
	*($15 + [24]) = *($15 + [88])
	CALL _ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, _ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, ($15 + [24]), ($15 + [72]))
	if ( ((*($15 + [72]) & [1]) == 0) ){ goto $label$42 }
	CALL $90(*($15 + [80]))
	
.LABEL $label$42
	CALL eosio_assert([1], [928])
	$11 = (int_64)5462355
	
.LOOP $label$44:
	$13 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$43 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$45 }
	
.LOOP $label$46:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$43 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$46 }
	
.LABEL $label$45
	$13 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$44 }
	
.LABEL $label$43
	CALL eosio_assert($13, [896])
	$11 = *($2)
	$7 = *($14)
	if ( ($7 == 0) ){ goto $label$49 }
	$14 = ($0 + [12])
	
.LOOP $label$50:
	$13 = *($7 + [16])
	if ( ((int_32)$13 < (int_32)[5]) ){ goto $label$52 }
	$13 = *($7)
	if ( $13 ){ goto $label$51 }
	goto $label$48 
	
.LABEL $label$52
	if ( ((int_32)$13 == (int_32)[4]) ){ goto $label$47 }
	$14 = ($7 + [4])
	$13 = *($7 + [4])
	if ( ($13 == 0) ){ goto $label$47 }
	$7 = $14
	
.LABEL $label$51
	$14 = $7
	$7 = $13
	goto $label$50 
	
.LABEL $label$49
	$7 = $14
	goto $label$47 
	
.LABEL $label$48
	$14 = $7
	
.LABEL $label$47
	$6 = (CASTING float_64)(int_64 $11)
	$13 = *($14)
	if ( $13 ){ goto $label$53 }
	*(($13 = CALL $89([32]))) = (int_64)0
	*($13 + [8]) = $7
	*($14) = $13
	*($13 + [24]) = (int_64)0
	*($13 + [16]) = [4]
	$7 = $13
	$12 = ($0 + [8])
	$2 = *(*($12))
	if ( ($2 == 0) ){ goto $label$54 }
	*($12) = $2
	$7 = *($14)
	
.LABEL $label$54
	CALL $39(*(($0 + [12])), $7)
	*(($7 = ($0 + [16]))) = (*($7) + [1])
	
.LABEL $label$53
	$11 = (Rounds 0)(((float_64)$6 * (float_64)*(($13 + [24]))))
	$7 = *($10)
	if ( ($7 == 0) ){ goto $label$59 }
	$10 = ($0 + [24])
	
.LOOP $label$60:
	$14 = *($7 + [16])
	if ( ((int_32)$14 < (int_32)[5]) ){ goto $label$62 }
	$14 = *($7)
	if ( $14 ){ goto $label$61 }
	goto $label$58 
	
.LABEL $label$62
	if ( ((int_32)$14 == (int_32)[4]) ){ goto $label$57 }
	$10 = ($7 + [4])
	$14 = *($7 + [4])
	if ( ($14 == 0) ){ goto $label$57 }
	$7 = $10
	
.LABEL $label$61
	$10 = $7
	$7 = $14
	goto $label$60 
	
.LABEL $label$59
	$7 = $10
	$14 = *($10)
	if ( $14 ){ goto $label$55 }
	goto $label$56 
	
.LABEL $label$58
	$10 = $7
	
.LABEL $label$57
	$14 = *($10)
	if ( $14 ){ goto $label$55 }
	
.LABEL $label$56
	*(($14 = CALL $89([32]))) = (int_64)0
	*($14 + [8]) = $7
	*($10) = $14
	*($14 + [24]) = (int_64)0
	*($14 + [16]) = [4]
	$7 = $14
	$13 = ($0 + [20])
	$12 = *(*($13))
	if ( ($12 == 0) ){ goto $label$63 }
	*($13) = $12
	$7 = *($10)
	
.LABEL $label$63
	CALL $39(*(($0 + [24])), $7)
	*(($7 = ($0 + [28]))) = (*($7) + [1])
	
.LABEL $label$55
	*($15 + [64]) = $3
	*(($15 + [48])) = [0]
	*($15 + [56]) = $11
	*($15 + [40]) = (int_64)0
	$11 = *(($14 + [24]))
	$7 = CALL strlen([2496])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$37 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$66 }
	*($15 + [40]) = ($7 << [1])
	$10 = (($15 + [40]) | [1])
	if ( $7 ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$66
	$14 = (($7 + [16]) & [-16])
	$10 = CALL $89($14)
	*($15 + [40]) = ($14 | [1])
	*($15 + [48]) = $10
	*($15 + [44]) = $7
	
.LABEL $label$65
	CALL memcpy($10, [2496], $7)
	
.LABEL $label$64
	*(($10 + $7)) = [0]
	*((($15 + [8]) + [8])) = *((($15 + [56]) + [8]))
	*($15 + [8]) = *($15 + [56])
	CALL _ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, _ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, ($15 + [8]), ($15 + [40]))
	if ( ((*($15 + [40]) & [1]) == 0) ){ goto $label$67 }
	CALL $90(*($15 + [48]))
	
.LABEL $label$67
	$14 = *($15 + [128])
	if ( ($14 == 0) ){ goto $label$68 }
	$13 = ($15 + [132])
	$7 = *($13)
	if ( ((int_32)$7 == (int_32)$14) ){ goto $label$70 }
	
.LOOP $label$71:
	$7 = ($7 + [-24])
	$10 = *($7)
	*($7) = [0]
	if ( ($10 == 0) ){ goto $label$72 }
	CALL $90($10)
	
.LABEL $label$72
	if ( ((int_32)$14 != (int_32)$7) ){ goto $label$71 }
	$7 = *(($15 + [128]))
	goto $label$69 
	
.LABEL $label$70
	$7 = $14
	
.LABEL $label$69
	*($13) = $14
	CALL $90($7)
	
.LABEL $label$68
	*([0] + [4]) = ($15 + [272])
	return (unreachable)
	
.LABEL $label$38
	CALL $91(($15 + [72]))
	
.LABEL $label$37
	CALL $91(($15 + [40]))
	(unreachable)
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [288])
	*([0] + [4]) = $9
	CALL prints([16])
	CALL printn($0)
	CALL prints([64])
	CALL printn($1)
	CALL prints([64])
	CALL printn($2)
	CALL prints([80])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [96]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [112]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [128])
	
.LABEL $label$7
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$16 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [192]
	$7 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$22 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$3 = ($3 + [165])
	goto $label$20 
	
.LABEL $label$22
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$18
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$17 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [208]
	$7 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$28 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$3 = ($3 + [165])
	goto $label$26 
	
.LABEL $label$28
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$24
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$23 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [224]
	$7 = (int_64)0
	
.LOOP $label$29:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$30 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$3 = ($3 + [165])
	goto $label$31 
	
.LABEL $label$32
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$30
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$29 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [240]
	$7 = (int_64)0
	
.LOOP $label$33:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$38 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$3 = ($3 + [165])
	goto $label$36 
	
.LABEL $label$38
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$37
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$35
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$34
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$33 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [256]
	$7 = (int_64)0
	
.LOOP $label$39:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$40 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$3 = ($3 + [165])
	goto $label$41 
	
.LABEL $label$42
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$40
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$39 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [192]
	$7 = (int_64)0
	
.LOOP $label$43:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$48 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$3 = ($3 + [165])
	goto $label$46 
	
.LABEL $label$48
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$47
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$45
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$44
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$43 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [272]
	$7 = (int_64)0
	
.LOOP $label$49:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$54 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$53 }
	$3 = ($3 + [165])
	goto $label$52 
	
.LABEL $label$54
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$53
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$52
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$51
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$50
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$49 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [288]
	$7 = (int_64)0
	
.LOOP $label$55:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$60 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$3 = ($3 + [165])
	goto $label$58 
	
.LABEL $label$60
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$59
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$57
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$56
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$55 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [304]
	$7 = (int_64)0
	
.LOOP $label$61:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$62 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$64 }
	$3 = ($3 + [165])
	goto $label$63 
	
.LABEL $label$64
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$63
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$62
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$61 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [320]
	$7 = (int_64)0
	
.LOOP $label$65:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$70 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$69 }
	$3 = ($3 + [165])
	goto $label$68 
	
.LABEL $label$70
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$69
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$68
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$67
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$66
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$65 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [336]
	$7 = (int_64)0
	
.LOOP $label$71:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$76 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$75 }
	$3 = ($3 + [165])
	goto $label$74 
	
.LABEL $label$76
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$75
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$74
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$73
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$72
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$71 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$7 = (int_64)0
	
.LOOP $label$77:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$82 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$81 }
	$3 = ($3 + [165])
	goto $label$80 
	
.LABEL $label$82
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$79 }
	goto $label$78 
	
.LABEL $label$81
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$80
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$79
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$78
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$77 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	
.LABEL $label$16
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [368]
	$7 = (int_64)0
	
.LOOP $label$83:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$88 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$87 }
	$3 = ($3 + [165])
	goto $label$86 
	
.LABEL $label$88
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$85 }
	goto $label$84 
	
.LABEL $label$87
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$86
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$85
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$84
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$83 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [384]
	$7 = (int_64)0
	
.LOOP $label$89:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$94 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$93 }
	$3 = ($3 + [165])
	goto $label$92 
	
.LABEL $label$94
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$91 }
	goto $label$90 
	
.LABEL $label$93
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$92
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$91
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$90
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$89 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [400]
	$7 = (int_64)0
	
.LOOP $label$95:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$100 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$99 }
	$3 = ($3 + [165])
	goto $label$98 
	
.LABEL $label$100
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$97 }
	goto $label$96 
	
.LABEL $label$99
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$98
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$97
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$96
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$95 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [416]
	$7 = (int_64)0
	
.LOOP $label$101:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$106 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$105 }
	$3 = ($3 + [165])
	goto $label$104 
	
.LABEL $label$106
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$103 }
	goto $label$102 
	
.LABEL $label$105
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$104
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$103
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$102
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$101 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [432]
	$7 = (int_64)0
	
.LOOP $label$107:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$112 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$111 }
	$3 = ($3 + [165])
	goto $label$110 
	
.LABEL $label$112
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$109 }
	goto $label$108 
	
.LABEL $label$111
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$110
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$109
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$108
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$107 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$14 }
	
.LABEL $label$15
	$4 = CALL $6(($9 + [256]), $0)
	if ( ((int_64)$2 > (int_64)-3104364267158292481) ){ goto $label$128 }
	if ( ((int_64)$2 > (int_64)-3617168760277827585) ){ goto $label$127 }
	if ( ((int_64)$2 > (int_64)-6029028902599393281) ){ goto $label$125 }
	if ( ((int_64)$2 == (int_64)-8281826397301604352) ){ goto $label$121 }
	if ( ((int_64)$2 != (int_64)-7807295961876660224) ){ goto $label$113 }
	*($9 + [220]) = [0]
	*($9 + [216]) = [1]
	*($9 + [32 align=4]) = *($9 + [216])
	CALL $15($4, ($9 + [32]))
	goto $label$113 
	
.LABEL $label$128
	if ( ((int_64)$2 > (int_64)5031766152489992191) ){ goto $label$126 }
	if ( ((int_64)$2 > (int_64)4730643280948101119) ){ goto $label$124 }
	if ( ((int_64)$2 == (int_64)-3104364267158292480) ){ goto $label$120 }
	if ( ((int_64)$2 != (int_64)3879063093644361728) ){ goto $label$113 }
	*($9 + [156]) = [0]
	*($9 + [152]) = [2]
	*($9 + [96 align=4]) = *($9 + [152])
	CALL $12($4, ($9 + [96]))
	goto $label$113 
	
.LABEL $label$127
	if ( ((int_64)$2 > (int_64)-3104364267168595969) ){ goto $label$123 }
	if ( ((int_64)$2 == (int_64)-3617168760277827584) ){ goto $label$119 }
	if ( ((int_64)$2 != (int_64)-3106564264722016096) ){ goto $label$113 }
	*($9 + [132]) = [0]
	*($9 + [128]) = [3]
	*($9 + [120 align=4]) = *($9 + [128])
	CALL $27($4, ($9 + [120]))
	goto $label$113 
	
.LABEL $label$126
	if ( ((int_64)$2 > (int_64)6609974361712492543) ){ goto $label$122 }
	if ( ((int_64)$2 == (int_64)5031766152489992192) ){ goto $label$118 }
	if ( ((int_64)$2 != (int_64)5382254363876267312) ){ goto $label$113 }
	*($9 + [228]) = [0]
	*($9 + [224]) = [4]
	*($9 + [24 align=4]) = *($9 + [224])
	CALL $12($4, ($9 + [24]))
	goto $label$113 
	
.LABEL $label$125
	if ( ((int_64)$2 == (int_64)-6029028902599393280) ){ goto $label$117 }
	if ( ((int_64)$2 != (int_64)-5002474256040369184) ){ goto $label$113 }
	*($9 + [244]) = [0]
	*($9 + [240]) = [5]
	*($9 + [8 align=4]) = *($9 + [240])
	CALL $10($4, ($9 + [8]))
	goto $label$113 
	
.LABEL $label$124
	if ( ((int_64)$2 == (int_64)4730643280948101120) ){ goto $label$116 }
	if ( ((int_64)$2 != (int_64)4923678490122780672) ){ goto $label$113 }
	*($9 + [148]) = [0]
	*($9 + [144]) = [6]
	*($9 + [104 align=4]) = *($9 + [144])
	CALL $8($4, ($9 + [104]))
	goto $label$113 
	
.LABEL $label$123
	if ( ((int_64)$2 == (int_64)-3104364267168595968) ){ goto $label$115 }
	if ( ((int_64)$2 != (int_64)-3104364267163583488) ){ goto $label$113 }
	*($9 + [180]) = [0]
	*($9 + [176]) = [7]
	*($9 + [72 align=4]) = *($9 + [176])
	CALL $12($4, ($9 + [72]))
	goto $label$113 
	
.LABEL $label$122
	if ( ((int_64)$2 == (int_64)6609974361712492544) ){ goto $label$114 }
	if ( ((int_64)$2 != (int_64)8516769789752901632) ){ goto $label$113 }
	*($9 + [236]) = [0]
	*($9 + [232]) = [8]
	*($9 + [16 align=4]) = *($9 + [232])
	CALL $12($4, ($9 + [16]))
	goto $label$113 
	
.LABEL $label$121
	*($9 + [140]) = [0]
	*($9 + [136]) = [9]
	*($9 + [112 align=4]) = *($9 + [136])
	CALL $27($4, ($9 + [112]))
	goto $label$113 
	
.LABEL $label$120
	*($9 + [172]) = [0]
	*($9 + [168]) = [10]
	*($9 + [80 align=4]) = *($9 + [168])
	CALL $8($4, ($9 + [80]))
	goto $label$113 
	
.LABEL $label$119
	*($9 + [212]) = [0]
	*($9 + [208]) = [11]
	*($9 + [40 align=4]) = *($9 + [208])
	CALL $17($4, ($9 + [40]))
	goto $label$113 
	
.LABEL $label$118
	*($9 + [252]) = [0]
	*($9 + [248]) = [12]
	*($9) = *($9 + [248])
	CALL $8($4, $9)
	goto $label$113 
	
.LABEL $label$117
	*($9 + [204]) = [0]
	*($9 + [200]) = [13]
	*($9 + [48 align=4]) = *($9 + [200])
	CALL $12($4, ($9 + [48]))
	goto $label$113 
	
.LABEL $label$116
	*($9 + [164]) = [0]
	*($9 + [160]) = [14]
	*($9 + [88 align=4]) = *($9 + [160])
	CALL $8($4, ($9 + [88]))
	goto $label$113 
	
.LABEL $label$115
	*($9 + [196]) = [0]
	*($9 + [192]) = [15]
	*($9 + [56 align=4]) = *($9 + [192])
	CALL $12($4, ($9 + [56]))
	goto $label$113 
	
.LABEL $label$114
	*($9 + [188]) = [0]
	*($9 + [184]) = [16]
	*($9 + [64 align=4]) = *($9 + [184])
	CALL $10($4, ($9 + [64]))
	
.LABEL $label$113
	CALL $29(($4 + [20]), *(($4 + [24])))
	CALL $30(($4 + [8]), *(($4 + [12])))
	
.LABEL $label$14
	*([0] + [4]) = ($9 + [288])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC _ZN5eosio5token6miningEyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [144])
	*([0] + [4]) = $11
	$9 = (int_64)0
	$10 = (int_64)59
	$6 = [2048]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$2 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$4 = ($4 + [165])
	goto $label$3 
	
.LABEL $label$4
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($7)
	CALL eosio_assert([1], [928])
	$9 = (int_64)5462355
	$6 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$4 = [0]
	
.LABEL $label$5
	CALL eosio_assert($4, [896])
	*(($11 + [80])) = [0]
	*($11 + [64]) = (int_64)-1
	$9 = (int_64)0
	*($11 + [72]) = (int_64)0
	$10 = *($0)
	*($11 + [48]) = $10
	*($11 + [56]) = (int_64)1329745730
	$6 = [0]
	$4 = CALL db_find_i64($10, (int_64)1329745730, (int_64)-4157508551318700032, (int_64)1329745730)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$10 }
	$6 = CALL $59(($11 + [48]), $4)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)($11 + [48])), [448])
	
.LABEL $label$10
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [2064])
	$5 = ((uint_64)((int_64)*($6 + [48]) * (int_64)$2) / (uint_64)(int_64)10000)
	$2 = *($0)
	$8 = (int_64)59
	$6 = [1504]
	$7 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$16 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$4 = ($4 + [165])
	goto $label$14 
	
.LABEL $label$16
	$10 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$12
	$6 = ($6 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$7 = ((int_64)$10 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$11 }
	*(($4 = (($11 + [8]) + [16]))) = (int_64)340414906884
	*($11 + [16]) = $5
	*($11 + [8]) = $1
	CALL $94(($11 + [32]), $3)
	*(($6 = CALL $89([16]))) = $2
	*($6 + [8]) = $7
	*($11 + [128]) = $6
	$6 = ($6 + [16])
	*($11 + [136]) = $6
	*($11 + [132]) = $6
	*($11 + [88]) = *($11 + [8])
	*((($11 + [88]) + [16])) = *($4)
	*($11 + [96]) = *($11 + [16])
	$6 = (($11 + [8]) + [32])
	*(($4 = (($11 + [88]) + [32]))) = *($6)
	*($11 + [112]) = *($11 + [32])
	*($11 + [32]) = [0]
	*(($11 + [36])) = [0]
	*($6) = [0]
	CALL $47($2, (int_64)8516769789752901632, ($11 + [128]), ($11 + [88]))
	if ( ((*($11 + [112]) & [1]) == 0) ){ goto $label$17 }
	CALL $90(*($4))
	
.LABEL $label$17
	$6 = *($11 + [128])
	if ( ($6 == 0) ){ goto $label$18 }
	*($11 + [132]) = $6
	CALL $90($6)
	
.LABEL $label$18
	if ( ((*(($11 + [32])) & [1]) == 0) ){ goto $label$19 }
	CALL $90(*(($11 + [40])))
	
.LABEL $label$19
	$0 = *($11 + [72])
	if ( ($0 == 0) ){ goto $label$20 }
	$3 = ($11 + [76])
	$6 = *($3)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$22 }
	
.LOOP $label$23:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$24 }
	CALL $90($4)
	
.LABEL $label$24
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$23 }
	$6 = *(($11 + [72]))
	goto $label$21 
	
.LABEL $label$22
	$6 = $0
	
.LABEL $label$21
	*($3) = $0
	CALL $90($6)
	
.LABEL $label$20
	*([0] + [4]) = ($11 + [144])
}

int_32 .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [64])
	*([0] + [4]) = $4
	*(($3 = $4) + [44]) = $0
	*($3 + [32]) = *($1)
	*($3 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($4 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($3 + [24])) = [0]
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [48]) = $1
	$4 = ($1 + $0)
	*($3 + [56]) = $4
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [800])
	CALL memcpy($3, $1, [8])
	$2 = ($1 + [8])
	CALL eosio_assert(((uint_32)($4 - $2) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [8]), $2, [8])
	*($3 + [52]) = ($1 + [16])
	CALL $77(($3 + [48]), ($3 + [16]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($3 + [52]) = ($3 + [32])
	*($3 + [48]) = ($3 + [44])
	CALL $79(($3 + [48]), $3)
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $90(*(($3 + [24])))
	
.LABEL $label$5
	*([0] + [4]) = ($3 + [64])
	return [1]
}

void .FUNC _ZN5eosio5token8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [112])
	*([0] + [4]) = $11
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [1952])
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$11($2), [1984])
	$5 = *($3 + [8])
	$8 = [0]
	*(($11 + [104])) = [0]
	$9 = (uint_64)$5 >> (uint_64)(int_64)8
	*($11 + [80]) = $9)
	*($11 + [88]) = (int_64)-1
	*($11 + [96]) = (int_64)0
	*($11 + [72]) = *($0)
	$6 = CALL $54(($11 + [72]), $9, [1568])
	CALL require_recipient($1)
	CALL require_recipient($2)
	$7 = *($3)
	if ( ((uint_64)((int_64)$7 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$10 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [1600])
	CALL eosio_assert(((int_64)$7 > (int_64)0), [1712])
	CALL eosio_assert(((int_64)$5 == (int_64)*($6 + [8])), [1680])
	$10 = *($4)
	if ( ($10 & [1]) ){ goto $label$7 }
	$10 = uint_32($10 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$10 = *($4 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($10 <= [257]), [2016])
	$8 = ($3 + [8])
	*(($10 = (($11 + [56]) + [8]))) = *($8)
	$9 = *($3)
	*((($11 + [24]) + [12])) = *((($11 + [56]) + [12]))
	*((($11 + [24]) + [8])) = *($10)
	*($11 + [56]) = $9
	*($11 + [28]) = *($11 + [60])
	*($11 + [24]) = *($11 + [56])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, ($11 + [24]))
	*(($10 = (($11 + [40]) + [8]))) = *($8)
	$9 = *($3)
	*((($11 + [8]) + [12])) = *((($11 + [40]) + [12]))
	*((($11 + [8]) + [8])) = *($10)
	*($11 + [40]) = $9
	*($11 + [12]) = *($11 + [44])
	*($11 + [8]) = *($11 + [40])
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $2, ($11 + [8]), $1)
	$8 = *($11 + [96])
	if ( ($8 == 0) ){ goto $label$8 }
	$0 = ($11 + [100])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$10 }
	
.LOOP $label$11:
	$10 = ($10 + [-24])
	$3 = *($10)
	*($10) = [0]
	if ( ($3 == 0) ){ goto $label$12 }
	CALL $90($3)
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$11 }
	$10 = *(($11 + [96]))
	goto $label$9 
	
.LABEL $label$10
	$10 = $8
	
.LABEL $label$9
	*($0) = $8
	CALL $90($10)
	
.LABEL $label$8
	*([0] + [4]) = ($11 + [112])
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [928])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [896])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $75(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $76(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $90(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

int_32 .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [80])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	CALL $83(($6 + [16]), $4, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	*(($1 = (($6 + [32]) + [8]))) = *((($6 + [16]) + [8]))
	*($6 + [32]) = *($6 + [16])
	*((($6 + [48]) + [8])) = *($1)
	*($6 + [48]) = *($6 + [32])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	$3 = *((($6 + [48]) + [8]))
	*((($6 + [64]) + [8])) = $3
	*(($6 + [8])) = $3
	$3 = *($6 + [48])
	*($6 + [64]) = $3
	*($6) = $3
	CALL void $1((int_32 $6), (int_32 $5))
	*([0] + [4]) = ($6 + [80])
	return [1]
}

void .FUNC _ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [144])
	*([0] + [4]) = $11
	CALL eosio_assert(CALL $fimport$11($1), [2240])
	$9 = [0]
	$4 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$8 = $4)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [896])
	$9 = *($3)
	if ( ($9 & [1]) ){ goto $label$7 }
	$9 = uint_32($9 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$9 = *($3 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($9 <= [257]), [1744])
	$10 = [0]
	*(($11 + [136])) = [0]
	*($11 + [120]) = (int_64)-1
	*($11 + [128]) = (int_64)0
	$8 = *($0)
	*($11 + [104]) = $8
	*($11 + [112]) = $4
	$6 = [0]
	$9 = CALL db_find_i64($8, $4, (int_64)-4157508551318700032, $4)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$8 }
	$6 = CALL $59(($11 + [104]), $9)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)($11 + [104])), [448])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [2064])
	CALL require_auth(*($6 + [64]))
	$7 = ($2 + [8])
	$5 = *($7)
	$4 = *($2)
	if ( ((uint_64)((int_64)$4 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$10 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$10 = [0]
	
.LABEL $label$9
	CALL eosio_assert($10, [1600])
	CALL eosio_assert(((int_64)$4 > (int_64)0), [2272])
	CALL eosio_assert(((int_64)$5 == (int_64)*($6 + [8])), [1680])
	CALL eosio_assert(((int_64)$4 <= (int_64))(*($6 + [16]) - *($6))), [2192])
	*($11 + [92]) = $6
	*($11 + [96]) = $0
	*($11 + [88]) = $2
	CALL $82(($11 + [104]), $6, ($11 + [88]))
	$9 = ($6 + [64])
	$8 = *($9)
	*(($6 = (($11 + [72]) + [8]))) = *($7)
	*($11 + [72]) = *($2)
	*((($11 + [24]) + [8])) = *($6)
	*($11 + [24]) = *($11 + [72])
	*($11 + [28]) = *($11 + [76])
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $8, ($11 + [24]), $8)
	$8 = *($9)
	if ( ((int_64)$8 == (int_64)$1) ){ goto $label$14 }
	*(($9 = (($11 + [56]) + [8]))) = *(($2 + [8]))
	*($11 + [56]) = *($2)
	CALL $94(($11 + [40]), $3)
	*((($11 + [8]) + [8])) = *($9)
	*($11 + [8]) = *($11 + [56])
	CALL _ZN5eosio5token8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $8, $1, ($11 + [8]), ($11 + [40]))
	if ( ((*($11 + [40]) & [1]) == 0) ){ goto $label$14 }
	CALL $90(*($11 + [48]))
	
.LABEL $label$14
	$2 = *($11 + [128])
	if ( ($2 == 0) ){ goto $label$15 }
	$0 = ($11 + [132])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$17 }
	
.LOOP $label$18:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$19 }
	CALL $90($6)
	
.LABEL $label$19
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$18 }
	$9 = *(($11 + [128]))
	goto $label$16 
	
.LABEL $label$17
	$9 = $2
	
.LABEL $label$16
	*($0) = $2
	CALL $90($9)
	
.LABEL $label$15
	*([0] + [4]) = ($11 + [144])
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [928])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [896])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [64]) = $0
	$1 = ($0 + $2)
	*($5 + [72]) = $1
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [800])
	CALL memcpy(($5 + [8]), $0, [8])
	$4 = ($0 + [8])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [800])
	CALL memcpy((($5 + [8]) + [8]), $4, [8])
	$4 = ($0 + [16])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [800])
	CALL memcpy((($5 + [8]) + [16]), $4, [8])
	*($5 + [68]) = ($0 + [24])
	CALL $77(($5 + [64]), (($5 + [8]) + [24]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $81(($5 + [64]), ($5 + [8]))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $90(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [80])
	return [1]
}

void .FUNC _ZN5eosio5token12destroytokenEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [80])
	*([0] + [4]) = $10
	CALL require_auth(*($0))
	CALL eosio_assert(CALL $fimport$11($1), [2128])
	$9 = [0]
	$4 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$8 = $4)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [896])
	$9 = *($3)
	if ( ($9 & [1]) ){ goto $label$7 }
	$9 = uint_32($9 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$9 = *($3 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($9 <= [257]), [1744])
	$3 = [0]
	*(($10 + [72])) = [0]
	*($10 + [56]) = (int_64)-1
	*($10 + [64]) = (int_64)0
	$8 = *($0)
	*($10 + [40]) = $8
	*($10 + [48]) = $4
	$6 = [0]
	$9 = CALL db_find_i64($8, $4, (int_64)-4157508551318700032, $4)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$8 }
	$6 = CALL $59(($10 + [40]), $9)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)($10 + [40])), [448])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [2064])
	$7 = ($2 + [8])
	$5 = *($7)
	$4 = *($2)
	if ( ((uint_64)((int_64)$4 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$3 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$3 = [0]
	
.LABEL $label$9
	CALL eosio_assert($3, [1600])
	CALL eosio_assert(((int_64)$4 > (int_64)0), [2160])
	CALL eosio_assert(((int_64)$5 == (int_64)*($6 + [8])), [1680])
	CALL eosio_assert(((int_64)$4 <= (int_64)*($6)), [2192])
	*($10 + [36]) = $0
	*($10 + [32]) = $2
	CALL $80(($10 + [40]), $6, ($10 + [32]))
	*(($9 = (($10 + [16]) + [8]))) = *($7)
	$8 = *($2)
	*(($10 + [12])) = *((($10 + [16]) + [12]))
	*(($10 + [8])) = *($9)
	*($10 + [16]) = $8
	*($10 + [4]) = *($10 + [20])
	*($10) = *($10 + [16])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, $10)
	$6 = *($10 + [64])
	if ( ($6 == 0) ){ goto $label$14 }
	$0 = ($10 + [68])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$16 }
	
.LOOP $label$17:
	$9 = ($9 + [-24])
	$2 = *($9)
	*($9) = [0]
	if ( ($2 == 0) ){ goto $label$18 }
	CALL $90($2)
	
.LABEL $label$18
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$17 }
	$9 = *(($10 + [64]))
	goto $label$15 
	
.LABEL $label$16
	$9 = $6
	
.LABEL $label$15
	*($0) = $6
	CALL $90($9)
	
.LABEL $label$14
	*([0] + [4]) = ($10 + [80])
}

void .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [800])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $77(*($1), ($0 + [32]))
}

void .FUNC _ZN5eosio5token6pledgeEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [272])
	*([0] + [4]) = $10
	CALL require_auth($1)
	$8 = [0]
	*((($10 + [104]) + [32])) = [0]
	*($10 + [120]) = (int_64)-1
	$7 = *($0)
	*($10 + [104]) = $7
	*($10 + [112]) = $7
	*($10 + [128]) = (int_64)0
	$9 = CALL db_find_i64($7, $7, (int_64)-6027757892927488000, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $31(($10 + [104]), $9) + [16]) == (int_32)($10 + [104])), [448])
	$9 = [0]
	goto $label$1 
	
.LABEL $label$2
	$9 = [1]
	
.LABEL $label$1
	CALL eosio_assert($9, [1536])
	$4 = *($2 + [8])
	*((($10 + [64]) + [32])) = [0]
	$7 = (uint_64)$4 >> (uint_64)(int_64)8
	*($10 + [72]) = $7)
	*($10 + [80]) = (int_64)-1
	*($10 + [88]) = (int_64)0
	*($10 + [64]) = *($0)
	$6 = CALL $54(($10 + [64]), $7, [1568])
	CALL require_recipient($1)
	$5 = *($2)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$3 }
	$9 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	
.LABEL $label$3
	CALL eosio_assert($8, [1600])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [1712])
	CALL eosio_assert(((int_64)$4 == (int_64)*($6 + [8])), [1680])
	$9 = *($3)
	if ( ($9 & [1]) ){ goto $label$9 }
	$9 = uint_32($9 >> [1])
	goto $label$8 
	
.LABEL $label$9
	$9 = *($3 + [4])
	
.LABEL $label$8
	CALL eosio_assert(($9 <= [257]), [1744])
	$8 = ($2 + [8])
	*(($9 = (($10 + [48]) + [8]))) = *($8)
	$7 = *($2)
	*((($10 + [16]) + [12])) = *((($10 + [48]) + [12]))
	*((($10 + [16]) + [8])) = *($9)
	*($10 + [48]) = $7
	*($10 + [20]) = *($10 + [52])
	*($10 + [16]) = *($10 + [48])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, ($10 + [16]))
	*(($9 = (($10 + [32]) + [8]))) = *($8)
	$7 = *($2)
	*(($10 + [12])) = *((($10 + [32]) + [12]))
	*(($10 + [8])) = *($9)
	*($10 + [32]) = $7
	*($10 + [4]) = *($10 + [36])
	*($10) = *($10 + [32])
	CALL _ZN5eosio5token19add_pledged_balanceEyNS_5assetE($0, $1, $10)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)($10 + [64])), [1040])
	CALL eosio_assert(((int_64)*($10 + [64]) == (int_64)CALL $fimport$2()), [1088])
	$9 = ($6 + [8])
	$7 = *($9)
	CALL eosio_assert(((int_64)$4 == (int_64)*(($6 + [40]))), [1152])
	$1 = ((int_64)*($6 + [32]) + (int_64)$5)
	*($6 + [32]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [1200])
	CALL eosio_assert(((int_64)*($6 + [32]) < (int_64)4611686018427387904), [1232])
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$7) == (int_64)(uint_64)*($9) >> (uint_64)(int_64)8)), [1264])
	*($10 + [232]) = (($10 + [144]) + [72])
	*($10 + [228]) = ($10 + [144])
	*($10 + [224]) = ($10 + [144])
	*($10 + [240]) = ($10 + [224])
	*($10 + [252]) = ($6 + [16])
	*($10 + [248]) = $6
	*($10 + [256]) = ($6 + [32])
	*($10 + [260]) = ($6 + [48])
	*($10 + [264]) = ($6 + [64])
	CALL $56(($10 + [248]), ($10 + [240]))
	CALL db_update_i64(*($6 + [76]), (int_64)0, ($10 + [144]), [72])
	$9 = (($10 + [64]) + [16])
	if ( (uint_64)($7 <= *($9)) ){ goto $label$10 }
	*($9) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$10
	$2 = *($10 + [88])
	if ( ($2 == 0) ){ goto $label$11 }
	$0 = ($10 + [92])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$15 }
	CALL $90($6)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$14 }
	$9 = *(($10 + [88]))
	goto $label$12 
	
.LABEL $label$13
	$9 = $2
	
.LABEL $label$12
	*($0) = $2
	CALL $90($9)
	
.LABEL $label$11
	$2 = *($10 + [128])
	if ( ($2 == 0) ){ goto $label$16 }
	$0 = ($10 + [132])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$18 }
	
.LOOP $label$19:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$20 }
	CALL $90($6)
	
.LABEL $label$20
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$19 }
	$9 = *(($10 + [128]))
	goto $label$17 
	
.LABEL $label$18
	$9 = $2
	
.LABEL $label$17
	*($0) = $2
	CALL $90($9)
	
.LABEL $label$16
	*([0] + [4]) = ($10 + [272])
}

void .FUNC _ZN5eosio5token8unpledgeEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [400])
	*([0] + [4]) = $13
	CALL require_auth($1)
	$7 = [0]
	*((($13 + [280]) + [32])) = [0]
	*($13 + [296]) = (int_64)-1
	$10 = *($0)
	*($13 + [280]) = $10
	*($13 + [288]) = $10
	*($13 + [304]) = (int_64)0
	$8 = [0]
	$5 = CALL db_find_i64($10, $10, (int_64)-6027757892927488000, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $31(($13 + [280]), $5)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($13 + [280])), [448])
	
.LABEL $label$1
	CALL eosio_assert(($8 == 0), [1536])
	$12 = *($2 + [8])
	*((($13 + [240]) + [32])) = [0]
	$9 = (uint_64)$12 >> (uint_64)(int_64)8
	*($13 + [248]) = $9)
	*($13 + [256]) = (int_64)-1
	*($13 + [264]) = (int_64)0
	*($13 + [240]) = *($0)
	$5 = CALL $54(($13 + [240]), $9, [1568])
	$11 = *($2)
	if ( ((uint_64)((int_64)$11 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$8 = [0]
	$10 = $9
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$7 = [0]
	
.LABEL $label$2
	CALL eosio_assert($7, [1600])
	CALL eosio_assert(((int_64)$11 > (int_64)0), [1712])
	CALL eosio_assert(((int_64)$12 == (int_64)*($5 + [8])), [1680])
	$8 = *($3)
	if ( ($8 & [1]) ){ goto $label$8 }
	$8 = uint_32($8 >> [1])
	goto $label$7 
	
.LABEL $label$8
	$8 = *($3 + [4])
	
.LABEL $label$7
	CALL eosio_assert(($8 <= [257]), [1744])
	*((($13 + [200]) + [32])) = [0]
	*($13 + [208]) = $9
	*($13 + [216]) = (int_64)-1
	*($13 + [224]) = (int_64)0
	*($13 + [200]) = *($0)
	$8 = CALL $57(($13 + [200]), $1, [1776])
	$10 = *($8 + [24])
	if ( ((int_64)$10 < (int_64)1) ){ goto $label$9 }
	$9 = *(($8 + [32]))
	if ( ((uint_32)(*($8 + [40]) + [60]) >= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$9 }
	*($13 + [192]) = $9
	*((($13 + [48]) + [8])) = $9
	*($13 + [184]) = $10
	*($13 + [48]) = $10
	CALL _ZN5eosio5token22sub_unpledging_balanceEyNS_5assetE($0, $1, ($13 + [48]))
	*($13 + [176]) = $9
	$4 = *($0)
	*((($13 + [32]) + [8])) = $9
	*($13 + [168]) = $10
	*($13 + [32]) = $10
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $1, ($13 + [32]), $4)
	
.LABEL $label$9
	$7 = ($2 + [8])
	$10 = *($7)
	*((($13 + [152]) + [8])) = $10
	$9 = *($2)
	*((($13 + [16]) + [8])) = $10
	*($13 + [152]) = $9
	*($13 + [20]) = *($13 + [156])
	*($13 + [16]) = *($13 + [152])
	CALL _ZN5eosio5token19sub_pledged_balanceEyNS_5assetE($0, $1, ($13 + [16]))
	*(($6 = (($13 + [136]) + [8]))) = *($7)
	$10 = *($2)
	*(($13 + [12])) = *((($13 + [136]) + [12]))
	*(($13 + [8])) = *($6)
	*($13 + [136]) = $10
	*($13 + [4]) = *($13 + [140])
	*($13) = *($13 + [136])
	CALL _ZN5eosio5token22add_unpledging_balanceEyNS_5assetE($0, $1, $13)
	CALL eosio_assert(((int_32)*($5 + [72]) == (int_32)($13 + [240])), [1040])
	CALL eosio_assert(((int_64)*($13 + [240]) == (int_64)CALL $fimport$2()), [1088])
	$7 = ($5 + [8])
	$10 = *($7)
	CALL eosio_assert(((int_64)$12 == (int_64)*(($5 + [40]))), [1392])
	$12 = (int_64)
	*($5 + [32]) = $12(*($5 + [32]) - $11))
	CALL eosio_assert(((int_64)$12 > (int_64)-4611686018427387904), [1440])
	CALL eosio_assert(((int_64)*($5 + [32]) < (int_64)4611686018427387904), [1472])
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$10) == (int_64)(uint_64)*($7) >> (uint_64)(int_64)8)), [1264])
	*($13 + [128]) = (($13 + [320]) + [72])
	*($13 + [124]) = ($13 + [320])
	*($13 + [120]) = ($13 + [320])
	*($13 + [112]) = ($13 + [120])
	*($13 + [68]) = ($5 + [16])
	*($13 + [64]) = $5
	*($13 + [72]) = ($5 + [32])
	*($13 + [76]) = ($5 + [48])
	*($13 + [80]) = ($5 + [64])
	CALL $56(($13 + [64]), ($13 + [112]))
	CALL db_update_i64(*($5 + [76]), (int_64)0, ($13 + [320]), [72])
	$5 = (($13 + [240]) + [16])
	if ( (uint_64)($10 <= *($5)) ){ goto $label$10 }
	*($5) = ((int_64)$10 + (int_64)1)
	
.LABEL $label$10
	CALL eosio_assert(((int_32)*($8 + [44]) == (int_32)($13 + [200])), [1040])
	CALL eosio_assert(((int_64)*($13 + [200]) == (int_64)CALL $fimport$2()), [1088])
	$12 = *($8)
	*($8 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$12 == (int_64)*($8)), [1264])
	$5 = (($13 + [320]) + [44])
	*($13 + [128]) = $5
	*($13 + [124]) = ($13 + [320])
	*($13 + [120]) = ($13 + [320])
	*($13 + [112]) = ($13 + [120])
	*($13 + [68]) = ($8 + [8])
	*($13 + [64]) = $8
	*($13 + [72]) = ($8 + [24])
	*($13 + [76]) = ($8 + [40])
	CALL $58(($13 + [64]), ($13 + [112]))
	$10 = (int_64)0
	CALL db_update_i64(*($8 + [48]), (int_64)0, ($13 + [320]), [44])
	if ( (uint_64)($12 <= *((($13 + [200]) + [16]))) ){ goto $label$11 }
	*(($13 + [216])) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	$12 = CALL current_time()
	*(($13 + [348])) = [0]
	*(($13 + [352])) = [0]
	*($13 + [332]) = [0]
	*($13 + [336]) = [0]
	*($13 + [340]) = [0]
	*($13 + [344]) = [0]
	*($13 + [320]) = ((CASTING uint_32)(uint_64 ((uint_64)$12 / (uint_64)(int_64)1000000)) + [60])
	*($13 + [356]) = [0]
	*(($13 + [360])) = [0]
	*($5) = [0]
	*($13 + [368]) = [0]
	*(($13 + [372])) = [0]
	*(($13 + [376])) = [0]
	$7 = ($13 + [356])
	$4 = *($0)
	$9 = (int_64)59
	$8 = [1504]
	$11 = (int_64)0
	
.LOOP $label$12:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$17 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$5 = ($5 + [165])
	goto $label$15 
	
.LABEL $label$17
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$14
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$13
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$12 }
	*($13 + [128]) = $11
	*($13 + [120]) = $4
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [432]
	$11 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$10 > (uint_64)(int_64)10) ){ goto $label$23 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$5 = ($5 + [165])
	goto $label$21 
	
.LABEL $label$23
	$12 = (int_64)0
	if ( ((int_64)$10 == (int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$19
	$8 = ($8 + [1])
	$9 = ((int_64)$9 + (int_64)-5)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((int_64)$10 != (int_64)13) ){ goto $label$18 }
	*($13 + [112]) = $11
	*((($13 + [64]) + [20])) = *(($2 + [12]))
	*((($13 + [64]) + [16])) = *(($2 + [8]))
	*((($13 + [64]) + [12])) = *(($2 + [4]))
	*($13 + [64]) = $1
	*($13 + [72]) = *($2)
	CALL $94((($13 + [64]) + [24]), $3)
	$5 = (($13 + [320]) + [40])
	$8 = *($5)
	if ( ((uint_32)$8 >= (uint_32)*(($13 + [364]))) ){ goto $label$25 }
	*($8 + [16 align=4]) = (int_64)0
	$10 = *($0)
	*($8 + [8]) = *($13 + [112])
	*($8) = $10
	*(($0 = ($8 + [24]))) = [0]
	$2 = CALL $89([16])
	*($8 + [16]) = $2
	$7 = ($2 + [16])
	*($0) = $7
	*(($2 + [8])) = *((($13 + [120]) + [8]))
	*($2) = *($13 + [120])
	*(($8 + [20])) = $7
	CALL $48(($8 + [28]), ($13 + [64]))
	*($5) = (*($5) + [40])
	goto $label$24 
	
.LABEL $label$25
	CALL $67($7, ($13 + [120]), $0, ($13 + [112]), ($13 + [64]))
	
.LABEL $label$24
	if ( ((*($13 + [88]) & [1]) == 0) ){ goto $label$26 }
	CALL $90(*(($13 + [96])))
	
.LABEL $label$26
	*(($13 + [340])) = [60]
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [400]
	$11 = (int_64)0
	
.LOOP $label$27:
	if ( ((uint_64)$10 > (uint_64)(int_64)7) ){ goto $label$32 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$5 = ($5 + [165])
	goto $label$30 
	
.LABEL $label$32
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$31
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$29
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$28
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$27 }
	$10 = CALL current_time()
	*($13 + [72]) = ((int_64)$11 + (int_64)$1)
	*($13 + [64]) = ((int_64)((uint_64)$10 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL $68(($13 + [120]), ($13 + [320]))
	$8 = *($13 + [120])
	CALL send_deferred(($13 + [64]), $1, $8, (*($13 + [124]) - $8), [0])
	$8 = *($13 + [120])
	if ( ($8 == 0) ){ goto $label$33 }
	*($13 + [124]) = $8
	CALL $90($8)
	
.LABEL $label$33
	CALL $69(($13 + [320]))
	$2 = *($13 + [224])
	if ( ($2 == 0) ){ goto $label$34 }
	$0 = ($13 + [228])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$36 }
	
.LOOP $label$37:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$38 }
	CALL $90($5)
	
.LABEL $label$38
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$37 }
	$8 = *(($13 + [224]))
	goto $label$35 
	
.LABEL $label$36
	$8 = $2
	
.LABEL $label$35
	*($0) = $2
	CALL $90($8)
	
.LABEL $label$34
	$2 = *($13 + [264])
	if ( ($2 == 0) ){ goto $label$39 }
	$0 = ($13 + [268])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$41 }
	
.LOOP $label$42:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$43 }
	CALL $90($5)
	
.LABEL $label$43
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$42 }
	$8 = *(($13 + [264]))
	goto $label$40 
	
.LABEL $label$41
	$8 = $2
	
.LABEL $label$40
	*($0) = $2
	CALL $90($8)
	
.LABEL $label$39
	$2 = *($13 + [304])
	if ( ($2 == 0) ){ goto $label$44 }
	$0 = ($13 + [308])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$46 }
	
.LOOP $label$47:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$48 }
	CALL $90($5)
	
.LABEL $label$48
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$47 }
	$8 = *(($13 + [304]))
	goto $label$45 
	
.LABEL $label$46
	$8 = $2
	
.LABEL $label$45
	*($0) = $2
	CALL $90($8)
	
.LABEL $label$44
	*([0] + [4]) = ($13 + [400])
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [880])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [880])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [880])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [880])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [880])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [880])
	CALL memcpy(*($2 + [4]), $0, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [768])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [20]) = $4
	*($8 + [16]) = $4
	*($8 + [24]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $89([88])
	CALL $60($6)
	*($6 + [72]) = $0
	*($8 + [32]) = ($8 + [16])
	*($8 + [44]) = ($6 + [16])
	*($8 + [40]) = $6
	*($8 + [48]) = ($6 + [32])
	*($8 + [52]) = ($6 + [48])
	*($8 + [56]) = ($6 + [64])
	CALL $61(($8 + [40]), ($8 + [32]))
	*($6 + [76]) = $1
	*($8 + [32]) = $6
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($8 + [40]) = $5)
	$7 = *($6 + [76])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [32]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $62(($0 + [24]), ($8 + [32]), ($8 + [40]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [32])
	*($8 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $90($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $89($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $93($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $90($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [880])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [880])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [880])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [880])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [880])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [880])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [880])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $54 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$0), [448])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $59($0, $5)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$0), [448])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [768])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $89([56])
	CALL $36($6)
	*($6 + [44]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [24])
	*($8 + [44]) = ($6 + [40])
	CALL $37(($8 + [32]), ($8 + [24]))
	*($6 + [48]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [48])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $38(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $90($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [880])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [880])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [880])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [880])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [880])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [880])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [880])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [880])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [880])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $57 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [44]) == (int_32)$0), [448])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3665743359353290752, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $34($0, $5)
	CALL eosio_assert(((int_32)*($6 + [44]) == (int_32)$0), [448])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $35 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [44]) == (int_32)$0), [592])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [640])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [704])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $90($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $90($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [48]))
}

void .FUNC $29 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $29($0, *($1))
	CALL $29($0, *($1 + [4]))
	CALL $90($1)
	
.LABEL $label$1
}

void .FUNC _ZN5eosio5token12unlockpledgeEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL require_auth(*($0))
	*(($5 + [32])) = [0]
	*($5 + [16]) = (int_64)-1
	$3 = *($0)
	*($5) = $3
	*($5 + [8]) = $3
	*($5 + [24]) = (int_64)0
	$0 = CALL db_find_i64($3, $3, (int_64)-6027757892927488000, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $31($5, $0)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)$5), [448])
	CALL eosio_assert([1], [512])
	CALL eosio_assert([1], [560])
	$2 = CALL db_next_i64(*($0 + [20]), ($5 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	CALL $31($5, $2)
	
.LABEL $label$2
	CALL $32($5, $0)
	
.LABEL $label$1
	$1 = *($5 + [24])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($5 + [28])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $90($2)
	
.LABEL $label$7
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($5 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $1
	
.LABEL $label$4
	*($4) = $1
	CALL $90($0)
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN5eosio5token19sub_pledged_balanceEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [144])
	*([0] + [4]) = $7
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = [0]
	*($7 + [8]) = *($0)
	$4 = *($2 + [8])
	*($7 + [16]) = (uint_64)$4 >> (uint_64)(int_64)8)
	*(($7 + [36])) = [0]
	*(($7 + [40])) = [0]
	$5 = *($2)
	$0 = CALL $57(($7 + [8]), $1, [1328])
	CALL eosio_assert(((int_64)*($0 + [8]) >= (int_64)$5), [1360])
	CALL eosio_assert(((int_32)*($0 + [44]) == (int_32)($7 + [8])), [1040])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$2()), [1088])
	$1 = *($0)
	CALL eosio_assert(((int_64)$4 == (int_64)*(($0 + [16]))), [1392])
	$4 = (int_64)
	*($0 + [8]) = $4(*($0 + [8]) - $5))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1440])
	CALL eosio_assert(((int_64)*($0 + [8]) < (int_64)4611686018427387904), [1472])
	CALL eosio_assert(((int_64)$1 == (int_64)*($0)), [1264])
	*($7 + [112]) = (($7 + [48]) + [44])
	*($7 + [108]) = ($7 + [48])
	*($7 + [104]) = ($7 + [48])
	*($7 + [120]) = ($7 + [104])
	*($7 + [132]) = ($0 + [8])
	*($7 + [128]) = $0
	*($7 + [136]) = ($0 + [24])
	*($7 + [140]) = ($0 + [40])
	CALL $58(($7 + [128]), ($7 + [120]))
	CALL db_update_i64(*($0 + [48]), (int_64)0, ($7 + [48]), [44])
	if ( (uint_64)($1 <= *($7 + [24])) ){ goto $label$1 }
	*((($7 + [8]) + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$3 = *($7 + [32])
	if ( ($3 == 0) ){ goto $label$2 }
	$6 = ($7 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$6 }
	CALL $90($2)
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($7 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $3
	
.LABEL $label$3
	*($6) = $3
	CALL $90($0)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [144])
}

void .FUNC _ZN5eosio5token11unpledgedlyEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [128])
	*([0] + [4]) = $8
	CALL require_auth(*($0))
	$6 = [0]
	$4 = *($2)
	if ( ((uint_64)((int_64)$4 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [1600])
	CALL eosio_assert(((int_64)$4 > (int_64)0), [1712])
	$7 = *($3)
	if ( ($7 & [1]) ){ goto $label$7 }
	$7 = uint_32($7 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$7 = *($3 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($7 <= [257]), [1744])
	$5 = *($2 + [8])
	*((($8 + [88]) + [32])) = [0]
	*($8 + [96]) = (uint_64)$5 >> (uint_64)(int_64)8)
	*($8 + [104]) = (int_64)-1
	*($8 + [88]) = *($0)
	*($8 + [112]) = (int_64)0
	$7 = CALL $57(($8 + [88]), $1, [1776])
	CALL eosio_assert(((int_64)*($7 + [24]) > (int_64)0), [1808])
	CALL current_time()
	$5 = CALL current_time()
	CALL eosio_assert(((([-60] - *($7 + [40])) + (CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000))) <= [120]), [1840])
	$5 = *(($7 + [32]))
	*(($6 = (($8 + [72]) + [8]))) = $5
	*(($3 = (($8 + [56]) + [8]))) = $5
	$5 = *($7 + [24])
	*($8 + [72]) = $5
	*($8 + [56]) = $5
	*((($8 + [24]) + [8])) = *($3)
	*($8 + [24]) = *($8 + [56])
	CALL _ZN5eosio5token22sub_unpledging_balanceEyNS_5assetE($0, $1, ($8 + [24]))
	$5 = *($6)
	*((($8 + [40]) + [8])) = $5
	$4 = *($0)
	*((($8 + [8]) + [8])) = $5
	$5 = *($8 + [72])
	*($8 + [40]) = $5
	*($8 + [8]) = $5
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $1, ($8 + [8]), $4)
	CALL prints([1872])
	CALL printn($1)
	CALL prints([1888])
	CALL $64($2)
	CALL prints([1904])
	$2 = *($8 + [112])
	if ( ($2 == 0) ){ goto $label$8 }
	$6 = ($8 + [116])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$7 = ($7 + [-24])
	$0 = *($7)
	*($7) = [0]
	if ( ($0 == 0) ){ goto $label$12 }
	CALL $90($0)
	
.LABEL $label$12
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$11 }
	$7 = *(($8 + [112]))
	goto $label$9 
	
.LABEL $label$10
	$7 = $2
	
.LABEL $label$9
	*($6) = $2
	CALL $90($7)
	
.LABEL $label$8
	*([0] + [4]) = ($8 + [128])
}

void .FUNC _ZN5eosio5token9fixpledgeENS_5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [176])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	$3 = *($1 + [8])
	*((($6 + [8]) + [32])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	*($6 + [8]) = *($0)
	$4 = (uint_64)$3 >> (uint_64)(int_64)8
	*($6 + [16]) = $4)
	$0 = CALL $54(($6 + [8]), $4, [1568])
	CALL eosio_assert(((int_32)*($0 + [72]) == (int_32)($6 + [8])), [1040])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)CALL $fimport$2()), [1088])
	$4 = *($0 + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)*(($0 + [40]))), [1392])
	$3 = (int_64)
	*($0 + [32]) = $3(*($0 + [32]) - *($1)))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [1440])
	CALL eosio_assert(((int_64)*($0 + [32]) < (int_64)4611686018427387904), [1472])
	$3 = (uint_64)$4 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$3) == (int_64)(uint_64)*($0 + [8]) >> (uint_64)(int_64)8)), [1264])
	*($6 + [136]) = (($6 + [48]) + [72])
	*($6 + [132]) = ($6 + [48])
	*($6 + [128]) = ($6 + [48])
	*($6 + [144]) = ($6 + [128])
	*($6 + [156]) = ($0 + [16])
	*($6 + [152]) = $0
	*($6 + [160]) = ($0 + [32])
	*($6 + [164]) = ($0 + [48])
	*($6 + [168]) = ($0 + [64])
	CALL $56(($6 + [152]), ($6 + [144]))
	CALL db_update_i64(*($0 + [76]), (int_64)0, ($6 + [48]), [72])
	if ( (uint_64)($3 <= *($6 + [24])) ){ goto $label$1 }
	*((($6 + [8]) + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$1
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$5 = ($6 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $90($1)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($6 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($5) = $2
	CALL $90($0)
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [176])
}

void .FUNC _ZN5eosio5token5candyEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [96])
	*([0] + [4]) = $13
	$5 = ($0 + [24])
	$8 = *($5)
	if ( ($8 == 0) ){ goto $label$5 }
	$5 = ($0 + [24])
	
.LOOP $label$6:
	$7 = *($8 + [16])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$8 }
	$7 = *($8)
	if ( $7 ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$8
	if ( ((int_32)$7 == (int_32)[5]) ){ goto $label$3 }
	$5 = ($8 + [4])
	$7 = *($8 + [4])
	if ( ($7 == 0) ){ goto $label$3 }
	$8 = $5
	
.LABEL $label$7
	$5 = $8
	$8 = $7
	goto $label$6 
	
.LABEL $label$5
	$8 = $5
	$7 = *($5)
	if ( $7 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $8
	
.LABEL $label$3
	$7 = *($5)
	if ( $7 ){ goto $label$1 }
	
.LABEL $label$2
	*(($7 = CALL $89([32]))) = (int_64)0
	*($7 + [8]) = $8
	*($5) = $7
	*($7 + [24]) = (int_64)0
	*($7 + [16]) = [5]
	$8 = $7
	$6 = ($0 + [20])
	$3 = *(*($6))
	if ( ($3 == 0) ){ goto $label$9 }
	*($6) = $3
	$8 = *($5)
	
.LABEL $label$9
	CALL $39(*(($0 + [24])), $8)
	*(($8 = ($0 + [28]))) = (*($8) + [1])
	
.LABEL $label$1
	CALL require_auth(*(($7 + [24])))
	$4 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [1504]
	$11 = (int_64)0
	
.LOOP $label$10:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$15 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$5 = ($5 + [165])
	goto $label$13 
	
.LABEL $label$15
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$12
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$11
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$10 }
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$8 = CALL strlen([1520])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$19 }
	*($13 + [8]) = ($8 << [1])
	$5 = (($13 + [8]) | [1])
	if ( $8 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$7 = (($8 + [16]) & [-16])
	$5 = CALL $89($7)
	*($13 + [8]) = ($7 | [1])
	*($13 + [16]) = $5
	*($13 + [12]) = $8
	
.LABEL $label$18
	CALL memcpy($5, [1520], $8)
	
.LABEL $label$17
	*(($5 + $8)) = [0]
	*(($5 = (($13 + [24]) + [8]))) = *(($2 + [8]))
	*($13 + [24]) = *($2)
	$7 = *($13 + [8])
	*($13 + [8]) = [0]
	$0 = *($13 + [16])
	$2 = *($13 + [12])
	*($13 + [12]) = [0]
	*($13 + [16]) = [0]
	*(($8 = CALL $89([16]))) = $4
	*($8 + [8]) = $11
	*(($13 + [60])) = *((($13 + [24]) + [12]))
	*((($13 + [40]) + [12])) = *($13 + [28])
	$6 = ($8 + [16])
	*($13 + [88]) = $6
	*((($13 + [40]) + [16])) = *($5)
	*($13 + [80]) = $8
	*($13 + [40]) = $1
	*($13 + [84]) = $6
	*($13 + [48]) = *($13 + [24])
	*($13 + [64]) = $7
	*(($13 + [68])) = $2
	*(($8 = ($13 + [72]))) = $0
	CALL $47($4, (int_64)8516769789752901632, ($13 + [80]), ($13 + [40]))
	if ( ((*($13 + [64]) & [1]) == 0) ){ goto $label$20 }
	CALL $90(*($8))
	
.LABEL $label$20
	$8 = *($13 + [80])
	if ( ($8 == 0) ){ goto $label$21 }
	*($13 + [84]) = $8
	CALL $90($8)
	
.LABEL $label$21
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$22 }
	CALL $90(*(($13 + [16])))
	
.LABEL $label$22
	*([0] + [4]) = ($13 + [96])
	return (unreachable)
	
.LABEL $label$16
	CALL $91(($13 + [8]))
}

void .FUNC _ZN5eosio5token11unpledgenowEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [304])
	*([0] + [4]) = $16
	CALL require_auth($1)
	$8 = [0]
	*((($16 + [136]) + [32])) = [0]
	*($16 + [152]) = (int_64)-1
	$12 = *($0)
	*($16 + [136]) = $12
	*($16 + [144]) = $12
	*($16 + [160]) = (int_64)0
	$5 = [0]
	$13 = CALL db_find_i64($12, $12, (int_64)-6027757892927488000, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $31(($16 + [136]), $13)
	CALL eosio_assert(((int_32)*($5 + [16]) == (int_32)($16 + [136])), [448])
	
.LABEL $label$1
	CALL eosio_assert(($5 == 0), [1536])
	$14 = *($2 + [8])
	*((($16 + [96]) + [32])) = [0]
	$12 = (uint_64)$14 >> (uint_64)(int_64)8
	*($16 + [104]) = $12)
	*($16 + [112]) = (int_64)-1
	*($16 + [120]) = (int_64)0
	*($16 + [96]) = *($0)
	$3 = CALL $54(($16 + [96]), $12, [1568])
	$15 = *($2)
	if ( ((uint_64)((int_64)$15 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$5 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$8 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$8 = [0]
	
.LABEL $label$2
	CALL eosio_assert($8, [1600])
	CALL eosio_assert(((int_64)$15 > (int_64)99999999), [1632])
	CALL eosio_assert(((int_64)$14 == (int_64)*($3 + [8])), [1680])
	$4 = ($0 + [24])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$11 }
	$8 = ($0 + [24])
	
.LOOP $label$12:
	$13 = *($5 + [16])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$14 }
	$13 = *($5)
	if ( $13 ){ goto $label$13 }
	goto $label$10 
	
.LABEL $label$14
	if ( ((int_32)$13 == (int_32)[6]) ){ goto $label$9 }
	$8 = ($5 + [4])
	$13 = *($5 + [4])
	if ( ($13 == 0) ){ goto $label$9 }
	$5 = $8
	
.LABEL $label$13
	$8 = $5
	$5 = $13
	goto $label$12 
	
.LABEL $label$11
	$5 = $4
	$8 = $4
	$13 = *($8)
	if ( $13 ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$10
	$8 = $5
	
.LABEL $label$9
	$13 = *($8)
	if ( $13 ){ goto $label$7 }
	
.LABEL $label$8
	*(($13 = CALL $89([32]))) = (int_64)0
	*($13 + [8]) = $5
	*($8) = $13
	*($13 + [24]) = (int_64)0
	*($13 + [16]) = [6]
	$5 = $13
	$9 = ($0 + [20])
	$6 = *(*($9))
	if ( ($6 == 0) ){ goto $label$15 }
	*($9) = $6
	$5 = *($8)
	
.LABEL $label$15
	CALL $39(*(($0 + [24])), $5)
	*(($5 = ($0 + [28]))) = (*($5) + [1])
	$14 = *(($2 + [8]))
	$15 = *($2)
	
.LABEL $label$7
	CALL require_recipient(*(($13 + [24])))
	*(($5 = (($16 + [80]) + [8]))) = *(($2 + [8]))
	$12 = *($2)
	*((($16 + [32]) + [12])) = *((($16 + [80]) + [12]))
	*((($16 + [32]) + [8])) = *($5)
	*($16 + [80]) = $12
	*($16 + [36]) = *($16 + [84])
	*($16 + [32]) = *($16 + [80])
	CALL _ZN5eosio5token19sub_pledged_balanceEyNS_5assetE($0, $1, ($16 + [32]))
	$7 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $15) * (float_64)(float_64)0.15))
	$8 = ($0 + [24])
	$5 = *($8)
	if ( ($5 == 0) ){ goto $label$18 }
	
.LOOP $label$19:
	$13 = *($5 + [16])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$21 }
	$13 = *($5)
	if ( $13 ){ goto $label$20 }
	goto $label$17 
	
.LABEL $label$21
	if ( ((int_32)$13 == (int_32)[6]) ){ goto $label$16 }
	$8 = ($5 + [4])
	$13 = *($5 + [4])
	if ( ($13 == 0) ){ goto $label$16 }
	$5 = $8
	
.LABEL $label$20
	$8 = $5
	$5 = $13
	goto $label$19 
	
.LABEL $label$18
	$5 = $4
	$8 = $4
	goto $label$16 
	
.LABEL $label$17
	$8 = $5
	
.LABEL $label$16
	$12 = $14
	$13 = *($8)
	if ( $13 ){ goto $label$22 }
	*(($13 = CALL $89([32]))) = (int_64)0
	*($13 + [8]) = $5
	*($8) = $13
	*($13 + [24]) = (int_64)0
	*($13 + [16]) = [6]
	$5 = $13
	$4 = ($0 + [20])
	$9 = *(*($4))
	if ( ($9 == 0) ){ goto $label$23 }
	*($4) = $9
	$5 = *($8)
	
.LABEL $label$23
	CALL $39(*(($0 + [24])), $5)
	*(($5 = ($0 + [28]))) = (*($5) + [1])
	$12 = *(($2 + [8]))
	$15 = *($2)
	
.LABEL $label$22
	*($16 + [72]) = $14
	$10 = *(($13 + [24]))
	$11 = *($0)
	*((($16 + [16]) + [8])) = $14
	*($16 + [64]) = $7
	*($16 + [16]) = $7
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $10, ($16 + [16]), $11)
	*($16 + [56]) = $12
	*(($16 + [8])) = $12
	$14 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $15) * (float_64)(float_64)0.85))
	*($16 + [48]) = $14
	*($16) = $14
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $1, $16, $1)
	CALL eosio_assert(((int_32)*($3 + [72]) == (int_32)($16 + [96])), [1040])
	CALL eosio_assert(((int_64)*($16 + [96]) == (int_64)CALL $fimport$2()), [1088])
	$5 = ($3 + [8])
	$14 = *($5)
	CALL eosio_assert(((int_64)$12 == (int_64)*(($3 + [40]))), [1392])
	$12 = (int_64)
	*($3 + [32]) = $12(*($3 + [32]) - $15))
	CALL eosio_assert(((int_64)$12 > (int_64)-4611686018427387904), [1440])
	CALL eosio_assert(((int_64)*($3 + [32]) < (int_64)4611686018427387904), [1472])
	$12 = (uint_64)$14 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$12) == (int_64)(uint_64)*($5) >> (uint_64)(int_64)8)), [1264])
	*($16 + [264]) = (($16 + [176]) + [72])
	*($16 + [260]) = ($16 + [176])
	*($16 + [256]) = ($16 + [176])
	*($16 + [272]) = ($16 + [256])
	*($16 + [284]) = ($3 + [16])
	*($16 + [280]) = $3
	*($16 + [288]) = ($3 + [32])
	*($16 + [292]) = ($3 + [48])
	*($16 + [296]) = ($3 + [64])
	CALL $56(($16 + [280]), ($16 + [272]))
	CALL db_update_i64(*($3 + [76]), (int_64)0, ($16 + [176]), [72])
	$5 = (($16 + [96]) + [16])
	if ( (uint_64)($12 <= *($5)) ){ goto $label$24 }
	*($5) = ((int_64)$12 + (int_64)1)
	
.LABEL $label$24
	$13 = *($16 + [120])
	if ( ($13 == 0) ){ goto $label$25 }
	$3 = ($16 + [124])
	$5 = *($3)
	if ( ((int_32)$5 == (int_32)$13) ){ goto $label$27 }
	
.LOOP $label$28:
	$5 = ($5 + [-24])
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$29 }
	CALL $90($8)
	
.LABEL $label$29
	if ( ((int_32)$13 != (int_32)$5) ){ goto $label$28 }
	$5 = *(($16 + [120]))
	goto $label$26 
	
.LABEL $label$27
	$5 = $13
	
.LABEL $label$26
	*($3) = $13
	CALL $90($5)
	
.LABEL $label$25
	$13 = *($16 + [160])
	if ( ($13 == 0) ){ goto $label$30 }
	$3 = ($16 + [164])
	$5 = *($3)
	if ( ((int_32)$5 == (int_32)$13) ){ goto $label$32 }
	
.LOOP $label$33:
	$5 = ($5 + [-24])
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$34 }
	CALL $90($8)
	
.LABEL $label$34
	if ( ((int_32)$13 != (int_32)$5) ){ goto $label$33 }
	$5 = *(($16 + [160]))
	goto $label$31 
	
.LABEL $label$32
	$5 = $13
	
.LABEL $label$31
	*($3) = $13
	CALL $90($5)
	
.LABEL $label$30
	*([0] + [4]) = ($16 + [304])
}

void .FUNC _ZN5eosio5token5clearEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	*($7 + [16]) = (int_64)-1
	*($7 + [24]) = [0]
	$4 = *($0)
	*($7) = $4
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	*($7 + [8]) = $5)
	*(($7 + [28])) = [0]
	*(($7 + [32])) = [0]
	$0 = [0]
	$2 = CALL db_find_i64($4, $5, (int_64)-3665743359353290752, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $34($7, $2)
	CALL eosio_assert(((int_32)*($0 + [44]) == (int_32)$7), [448])
	
.LABEL $label$1
	$2 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($2, [512])
	CALL eosio_assert($2, [560])
	$2 = CALL db_next_i64(*($0 + [48]), ($7 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	CALL $34($7, $2)
	
.LABEL $label$2
	CALL $35($7, $0)
	$3 = *($7 + [24])
	if ( ($3 == 0) ){ goto $label$3 }
	$6 = ($7 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $90($2)
	
.LABEL $label$7
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($7 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $3
	
.LABEL $label$4
	*($6) = $3
	CALL $90($0)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC _ZN5eosio5token8arenapayEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [64])
	*([0] + [4]) = $11
	$4 = ($0 + [24])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$5 }
	$10 = ($0 + [24])
	
.LOOP $label$6:
	$9 = *($5 + [16])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$8 }
	$9 = *($5)
	if ( $9 ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$8
	if ( ((int_32)$9 == (int_32)[5]) ){ goto $label$3 }
	$10 = ($5 + [4])
	$9 = *($5 + [4])
	if ( ($9 == 0) ){ goto $label$3 }
	$5 = $10
	
.LABEL $label$7
	$10 = $5
	$5 = $9
	goto $label$6 
	
.LABEL $label$5
	$5 = $4
	$10 = $4
	$9 = *($10)
	if ( $9 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$10 = $5
	
.LABEL $label$3
	$9 = *($10)
	if ( $9 ){ goto $label$1 }
	
.LABEL $label$2
	*(($9 = CALL $89([32]))) = (int_64)0
	*($9 + [8]) = $5
	*($10) = $9
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = [5]
	$5 = $9
	$7 = ($0 + [20])
	$6 = *(*($7))
	if ( ($6 == 0) ){ goto $label$9 }
	*($7) = $6
	$5 = *($10)
	
.LABEL $label$9
	CALL $39(*(($0 + [24])), $5)
	*(($5 = ($0 + [28]))) = (*($5) + [1])
	
.LABEL $label$1
	CALL require_auth(*(($9 + [24])))
	*(($5 = (($11 + [48]) + [8]))) = *(($2 + [8]))
	$8 = *($2)
	*((($11 + [16]) + [12])) = *((($11 + [48]) + [12]))
	*((($11 + [16]) + [8])) = *($5)
	*($11 + [48]) = $8
	*($11 + [20]) = *($11 + [52])
	*($11 + [16]) = *($11 + [48])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, ($11 + [16]))
	$10 = ($0 + [24])
	$5 = *($10)
	if ( ($5 == 0) ){ goto $label$14 }
	
.LOOP $label$15:
	$9 = *($5 + [16])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$17 }
	$9 = *($5)
	if ( $9 ){ goto $label$16 }
	goto $label$13 
	
.LABEL $label$17
	if ( ((int_32)$9 == (int_32)[6]) ){ goto $label$12 }
	$10 = ($5 + [4])
	$9 = *($5 + [4])
	if ( ($9 == 0) ){ goto $label$12 }
	$5 = $10
	
.LABEL $label$16
	$10 = $5
	$5 = $9
	goto $label$15 
	
.LABEL $label$14
	$5 = $4
	$10 = $4
	$9 = *($10)
	if ( $9 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$13
	$10 = $5
	
.LABEL $label$12
	$9 = *($10)
	if ( $9 ){ goto $label$10 }
	
.LABEL $label$11
	*(($9 = CALL $89([32]))) = (int_64)0
	*($9 + [8]) = $5
	*($10) = $9
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = [6]
	$5 = $9
	$4 = ($0 + [20])
	$7 = *(*($4))
	if ( ($7 == 0) ){ goto $label$18 }
	*($4) = $7
	$5 = *($10)
	
.LABEL $label$18
	CALL $39(*(($0 + [24])), $5)
	*(($5 = ($0 + [28]))) = (*($5) + [1])
	
.LABEL $label$10
	*((($11 + [32]) + [12])) = *(($2 + [12]))
	*(($5 = (($11 + [32]) + [8]))) = *(($2 + [8]))
	*($11 + [32]) = *($2)
	*($11 + [36]) = *(($2 + [4]))
	$1 = *(($9 + [24]))
	$8 = *($0)
	*(($11 + [8])) = *($5)
	*($11) = *($11 + [32])
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $1, $11, $8)
	*([0] + [4]) = ($11 + [64])
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

void .FUNC _ZN5eosio5token10lockpledgeEv (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	*((($6 + [8]) + [32])) = [0]
	*($6 + [24]) = (int_64)-1
	$1 = *($0)
	*($6 + [8]) = $1
	*($6 + [16]) = $1
	*($6 + [32]) = (int_64)0
	$3 = CALL db_find_i64($1, $1, (int_64)-6027757892927488000, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $31(($6 + [8]), $3) + [16]) == (int_32)($6 + [8])), [448])
	$2 = *($6 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0)
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$2()), [816])
	*(($0 = CALL $89([32])) + [16]) = ($6 + [8])
	*($0 + [8]) = (int_64)1
	*($0) = (int_64)0
	CALL eosio_assert([1], [880])
	CALL memcpy(($6 + [64]), $0, [8])
	CALL eosio_assert([1], [880])
	CALL memcpy((($6 + [64]) | [8]), ($0 + [8]), [8])
	$1 = *($0)
	$2 = CALL db_store_i64(*((($6 + [8]) + [8])), (int_64)-6027757892927488000, $4, $1, ($6 + [64]), [16])
	*($0 + [20]) = $2
	$3 = (($6 + [8]) + [16])
	if ( (uint_64)($1 <= *($3)) ){ goto $label$4 }
	*($3) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($6 + [56]) = $0
	$1 = *($0)
	*($6 + [64]) = $1
	*($6 + [52]) = $2
	$5 = ($6 + [36])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($6 + [40]))) ){ goto $label$6 }
	*($3 + [8]) = $1
	*($3 + [16]) = $2
	*($6 + [56]) = [0]
	*($3) = $0
	*($5) = ($3 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $33(($6 + [32]), ($6 + [56]), ($6 + [64]), ($6 + [52]))
	
.LABEL $label$5
	$0 = *($6 + [56])
	*($6 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $90($0)
	
.LABEL $label$7
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($6 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $90($3)
	
.LABEL $label$11
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($6 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $2
	
.LABEL $label$8
	*($5) = $2
	CALL $90($0)
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [80])
}

int_32 .FUNC $69 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $90($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $90($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $90($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $90($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $90($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $90($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $90($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $90($5)
	
.LABEL $label$12
	return $0
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $70($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $50($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $71($4, $1)
	CALL $73(CALL $72(CALL $72($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $65 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	if ( ($1 == 0) ){ goto $label$1 }
	CALL printui(*($0))
	CALL prints([64])
	
.LABEL $label$1
	$2 = *($0)
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)8)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)16)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)24)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)40)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)56)
	*($3 + [15]) = $0)
	if ( ($0 == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	
.LABEL $label$2
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $64 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = *([0] + [4])
	$10 = $2
	$7 = (int_64)1
	$8 = *($0 + [8])
	$5 = (int_64)($8 == 0)
	if ( $5 ){ goto $label$1 }
	$9 = ((int_64)$8 + (int_64)1)
	$7 = (int_64)1
	
.LOOP $label$2:
	$7 = ((int_64)$7 * (int_64)10)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)$9 > (int_64)1) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [8])
	$2 = ($2 - (((CASTING uint_32)(uint_64 ((int_64)$8 + (int_64)1)) + [15]) & [1008]))
	*([0] + [4]) = $2
	*(($6 = ($2 + ($3 = (CASTING uint_32)(uint_64 $8))))) = [0]
	$4 = *($0)
	if ( $5 ){ goto $label$3 }
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$4 % (int_64)$7)
	$0 = ($6 + [-1])
	
.LOOP $label$4:
	*($0) = ((int_64)((int_64)$9 % (int_64)10) + (int_64)48)
	$0 = ($0 + [-1])
	$9 = ((int_64)$9 / (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$4 }
	
.LABEL $label$3
	CALL printi(((int_64)$4 / (int_64)$7))
	CALL prints([1920])
	CALL prints_l($2, $3)
	CALL prints([1888])
	CALL $65($1, [0])
	*([0] + [4]) = $10
}

void .FUNC $67 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $89(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $93($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $89([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	CALL $48(($8 + [28]), $4)
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $90($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $90($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $90($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC _ZN5eosio5token22add_unpledging_balanceEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [144])
	*([0] + [4]) = $8
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = [0]
	$5 = *($0)
	*($8 + [8]) = $5
	$3 = *($2 + [8])
	$6 = (uint_64)$3 >> (uint_64)(int_64)8
	*($8 + [16]) = $6)
	*(($8 + [36])) = [0]
	*((($8 + [8]) + [32])) = [0]
	$0 = [0]
	$4 = CALL db_find_i64($5, $6, (int_64)-3665743359353290752, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $34(($8 + [8]), $4)
	CALL eosio_assert(((int_32)*($0 + [44]) == (int_32)($8 + [8])), [448])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [992])
	CALL eosio_assert(((int_32)*($0 + [44]) == (int_32)($8 + [8])), [1040])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$2()), [1088])
	$1 = *($0)
	CALL eosio_assert(((int_64)$3 == (int_64)*(($0 + [32]))), [1152])
	$5 = ((int_64)*($0 + [24]) + (int_64)*($2))
	*($0 + [24]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1200])
	CALL eosio_assert(((int_64)*($0 + [24]) < (int_64)4611686018427387904), [1232])
	CALL eosio_assert(((int_64)$1 == (int_64)*($0)), [1264])
	*($8 + [112]) = (($8 + [48]) + [44])
	*($8 + [108]) = ($8 + [48])
	*($8 + [104]) = ($8 + [48])
	*($8 + [120]) = ($8 + [104])
	*($8 + [132]) = ($0 + [8])
	*($8 + [128]) = $0
	*($8 + [136]) = ($0 + [24])
	*($8 + [140]) = ($0 + [40])
	CALL $58(($8 + [128]), ($8 + [120]))
	CALL db_update_i64(*($0 + [48]), (int_64)0, ($8 + [48]), [44])
	$0 = ($8 + [24])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$2 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$4 = *($8 + [32])
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $90($2)
	
.LABEL $label$7
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($8 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $4
	
.LABEL $label$4
	*($7) = $4
	CALL $90($0)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [144])
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $60 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [928])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [896])
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [928])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [896])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [928])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [896])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [928])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [896])
	return $0
}

void .FUNC _ZN5eosio5token22sub_unpledging_balanceEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [144])
	*([0] + [4]) = $7
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = [0]
	*($7 + [8]) = *($0)
	$3 = *($2 + [8])
	*($7 + [16]) = (uint_64)$3 >> (uint_64)(int_64)8)
	*(($7 + [36])) = [0]
	*((($7 + [8]) + [32])) = [0]
	$4 = *($2)
	$0 = CALL $57(($7 + [8]), $1, [1328])
	CALL eosio_assert(((int_64)*($0 + [24]) >= (int_64)$4), [1360])
	if ( ((int_64)$4 != (int_64)*($0 + [24])) ){ goto $label$5 }
	if ( ((int_64)*($0 + [8]) == (int_64)0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert(((int_32)*($0 + [44]) == (int_32)($7 + [8])), [1040])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$2()), [1088])
	$1 = *($0)
	CALL eosio_assert(((int_64)$3 == (int_64)*(($0 + [32]))), [1392])
	$4 = (int_64)
	*(($2 = ($0 + [24]))) = $4(*($2) - $4))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1440])
	CALL eosio_assert(((int_64)*($2) < (int_64)4611686018427387904), [1472])
	CALL eosio_assert(((int_64)$1 == (int_64)*($0)), [1264])
	*($7 + [112]) = (($7 + [48]) + [44])
	*($7 + [108]) = ($7 + [48])
	*($7 + [104]) = ($7 + [48])
	*($7 + [120]) = ($7 + [104])
	*($7 + [132]) = ($0 + [8])
	*($7 + [128]) = $0
	*($7 + [136]) = $2
	*($7 + [140]) = ($0 + [40])
	CALL $58(($7 + [128]), ($7 + [120]))
	CALL db_update_i64(*($0 + [48]), (int_64)0, ($7 + [48]), [44])
	$0 = ($7 + [24])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$3 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$5 = *($7 + [32])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL $35(($7 + [8]), $0)
	
.LABEL $label$3
	$5 = *($7 + [32])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($7 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$9 }
	CALL $90($2)
	
.LABEL $label$9
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($7 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $5
	
.LABEL $label$6
	*($6) = $5
	CALL $90($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [144])
}

void .FUNC $62 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $89(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $93($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $90($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $90($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $101 ()
{
	(unreachable)
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC $89 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [11276])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [11168])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [10976]
	$1 = (((int_32)$2 * (int_32)[12]) + [10976])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $87 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [11270]) == 0) ){ goto $label$2 }
	$7 = *([0] + [11272])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [11270]) = [1]
	$7 = ($7 << [16])
	*([0] + [11272]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [11272])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [11272]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [11270]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [11270]) = [1]
	$3 = ($3 << [16])
	*([0] + [11272]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [11272])
	
.LABEL $label$8
	*([0] + [11272]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $87($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [11184])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $86([2784], $0)
}

void .FUNC _ZN5eosio5token19require_banexchangeEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$6 = (int_64)0
	$7 = (int_64)59
	$3 = [2656]
	$4 = (int_64)0
	
.LOOP $label$1:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$4 = ((int_64)$5 | (int_64)$4)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	CALL eosio_assert(((int_64)$4 != (int_64)$1), [2672])
	$6 = (int_64)0
	$7 = (int_64)59
	$3 = [2688]
	$4 = (int_64)0
	
.LOOP $label$5:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$6 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$2 = ($2 + [165])
	goto $label$7 
	
.LABEL $label$8
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$6
	$3 = ($3 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$4 = ((int_64)$5 | (int_64)$4)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$5 }
	CALL eosio_assert(((int_64)$4 != (int_64)$1), [2672])
	$6 = (int_64)0
	$7 = (int_64)59
	$3 = [2704]
	$4 = (int_64)0
	
.LOOP $label$9:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$10 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$2 = ($2 + [165])
	goto $label$11 
	
.LABEL $label$12
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$10
	$3 = ($3 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$4 = ((int_64)$5 | (int_64)$4)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$9 }
	CALL eosio_assert(((int_64)$4 != (int_64)$1), [2672])
	$6 = (int_64)0
	$5 = (int_64)59
	$3 = [2720]
	$4 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$18 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$2 = ($2 + [165])
	goto $label$16 
	
.LABEL $label$18
	$7 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$14
	$3 = ($3 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$4 = ((int_64)$7 | (int_64)$4)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$13 }
	CALL eosio_assert(((int_64)$4 != (int_64)$1), [2672])
	$6 = (int_64)0
	$7 = (int_64)59
	$3 = [2736]
	$4 = (int_64)0
	
.LOOP $label$19:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$20 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$2 = ($2 + [165])
	goto $label$21 
	
.LABEL $label$22
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$20
	$3 = ($3 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$4 = ((int_64)$5 | (int_64)$4)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$19 }
	CALL eosio_assert(((int_64)$4 != (int_64)$1), [2672])
	$6 = (int_64)0
	$7 = (int_64)59
	$3 = [2752]
	$4 = (int_64)0
	
.LOOP $label$23:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$24 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$2 = ($2 + [165])
	goto $label$25 
	
.LABEL $label$26
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$24
	$3 = ($3 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$4 = ((int_64)$5 | (int_64)$4)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$23 }
	CALL eosio_assert(((int_64)$4 != (int_64)$1), [2672])
	$6 = (int_64)0
	$7 = (int_64)59
	$3 = [2768]
	$4 = (int_64)0
	
.LOOP $label$27:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$28 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$2 = ($2 + [165])
	goto $label$29 
	
.LABEL $label$30
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$28
	$3 = ($3 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$4 = ((int_64)$5 | (int_64)$4)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$27 }
	CALL eosio_assert(((int_64)$4 != (int_64)$1), [2672])
}

void .FUNC $83 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [928])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [896])
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [800])
	CALL memcpy($0, $1, [8])
	CALL eosio_assert(((int_32)($2 & [-8]) != (int_32)[8]), [800])
	CALL memcpy(($0 + [8]), ($1 + [8]), [8])
}

void .FUNC $82 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	float_64 $7
	int_64 $8
	float_64 $9
	int_64 $10
	float_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [48])
	$15 = $16
	*([0] + [4]) = $16
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1040])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1088])
	$4 = *($2 + [8])
	$3 = *($1 + [8])
	$5 = *($2)
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)$3), [1152])
	$8 = ((int_64)*($1) + (int_64)*($5))
	*($1) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [1200])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1232])
	$2 = *($2 + [4])
	$8 = *($2 + [16])
	$10 = *($2)
	$14 = ($4 + [12])
	$2 = *($14)
	if ( ($2 == 0) ){ goto $label$5 }
	$13 = ($4 + [12])
	$5 = $2
	
.LOOP $label$6:
	$12 = *($5 + [16])
	if ( ((int_32)$12 < (int_32)[3]) ){ goto $label$8 }
	$12 = *($5)
	if ( $12 ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$8
	if ( ((int_32)$12 == (int_32)[2]) ){ goto $label$3 }
	$13 = ($5 + [4])
	$12 = *($5 + [4])
	if ( ($12 == 0) ){ goto $label$3 }
	$5 = $13
	
.LABEL $label$7
	$13 = $5
	$5 = $12
	goto $label$6 
	
.LABEL $label$5
	$5 = $14
	$13 = $14
	$12 = *($13)
	if ( $12 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$13 = $5
	
.LABEL $label$3
	$12 = *($13)
	if ( $12 ){ goto $label$1 }
	
.LABEL $label$2
	*(($12 = CALL $89([32]))) = (int_64)0
	*($12 + [8]) = $5
	*($13) = $12
	*($12 + [24]) = (int_64)0
	*($12 + [16]) = [2]
	$2 = $12
	$5 = ($4 + [8])
	$6 = *(*($5))
	if ( ($6 == 0) ){ goto $label$9 }
	*($5) = $6
	$2 = *($13)
	
.LABEL $label$9
	$5 = ($4 + [12])
	CALL $39(*($5), $2)
	*(($2 = ($4 + [16]))) = (*($2) + [1])
	$2 = *($5)
	
.LABEL $label$1
	$9 = (CASTING float_64)(int_64 $8)
	$11 = (CASTING float_64)(int_64 $10)
	$7 = *(($12 + [24]))
	if ( ($2 == 0) ){ goto $label$12 }
	$14 = ($4 + [12])
	
.LOOP $label$13:
	$5 = *($2 + [16])
	if ( ((int_32)$5 < (int_32)[5]) ){ goto $label$15 }
	$5 = *($2)
	if ( $5 ){ goto $label$14 }
	goto $label$11 
	
.LABEL $label$15
	if ( ((int_32)$5 == (int_32)[4]) ){ goto $label$10 }
	$14 = ($2 + [4])
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$10 }
	$2 = $14
	
.LABEL $label$14
	$14 = $2
	$2 = $5
	goto $label$13 
	
.LABEL $label$12
	$2 = $14
	goto $label$10 
	
.LABEL $label$11
	$14 = $2
	
.LABEL $label$10
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$9 = ((float_64)$11 / (float_64)$9)
	$5 = *($14)
	if ( $5 ){ goto $label$16 }
	*(($5 = CALL $89([32]))) = (int_64)0
	*($5 + [8]) = $2
	*($14) = $5
	*($5 + [24]) = (int_64)0
	*($5 + [16]) = [4]
	$2 = $5
	$13 = ($4 + [8])
	$12 = *(*($13))
	if ( ($12 == 0) ){ goto $label$17 }
	*($13) = $12
	$2 = *($14)
	
.LABEL $label$17
	CALL $39(*(($4 + [12])), $2)
	*(($2 = ($4 + [16]))) = (*($2) + [1])
	
.LABEL $label$16
	*($1 + [48]) = (Rounds 0)(((float_64)CALL pow((float_64)0.8, (CASTING float_64)(int_32 (CASTING int_32)(float_64 ((float_64)(float_64))($9 - ((float_64)((float_64)$7 + (float_64)*(($5 + [24]))) + (float_64)(float_64)0.05)) / (float_64)(float_64)0.1)))) * (float_64)(float_64)5e5))
	CALL eosio_assert(((int_64)$3 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)), [1264])
	$5 = $16
	$2 = ($5 + [-80])
	*([0] + [4]) = $2
	*($15 + [4]) = $2
	*($15) = $2
	*($15 + [8]) = ($5 + [-8])
	*($15 + [16]) = $15
	*($15 + [28]) = ($1 + [16])
	*($15 + [24]) = $1
	*($15 + [32]) = ($1 + [32])
	*($15 + [36]) = ($1 + [48])
	*($15 + [40]) = ($1 + [64])
	CALL $56(($15 + [24]), ($15 + [16]))
	CALL db_update_i64(*($1 + [76]), (int_64)0, $2, [72])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$18 }
	*(($0 + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$18
	*([0] + [4]) = ($15 + [48])
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*((($4 + [32]) + [12])) = *(($1 + [20]))
	*(($3 = (($4 + [32]) + [8]))) = *(($1 + [16]))
	*($4 + [32]) = *($1 + [8])
	*($4 + [36]) = *(($1 + [12]))
	$2 = *($1)
	CALL $94(($4 + [16]), ($1 + [24]))
	*((($4 + [48]) + [8])) = *($3)
	*($4 + [48]) = *($4 + [32])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($3 = (($4 + [80]) + [8]))) = *((($4 + [48]) + [8]))
	*($4 + [80]) = *($4 + [48])
	CALL $94(($4 + [64]), ($4 + [16]))
	*(($4 + [8])) = *($3)
	*($4) = *($4 + [80])
	CALL void $0((int_32 $2), (int_64 $4), (int_32 ($4 + [64])), (int_32 $1))
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $90(*($4 + [72]))
	
.LABEL $label$2
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $90(*($4 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [96])
}

void .FUNC $80 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	float_64 $7
	int_64 $8
	float_64 $9
	int_64 $10
	float_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [48])
	$15 = $16
	*([0] + [4]) = $16
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1040])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1088])
	$4 = *(($2 + [4]))
	$3 = *($1 + [8])
	$2 = *($2)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)$3), [1392])
	$8 = (int_64)
	*($1) = $8(*($1) - *($2)))
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [1440])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1472])
	$8 = *($1 + [16])
	$10 = *($1)
	$14 = ($4 + [12])
	$2 = *($14)
	if ( ($2 == 0) ){ goto $label$5 }
	$13 = ($4 + [12])
	$5 = $2
	
.LOOP $label$6:
	$12 = *($5 + [16])
	if ( ((int_32)$12 < (int_32)[3]) ){ goto $label$8 }
	$12 = *($5)
	if ( $12 ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$8
	if ( ((int_32)$12 == (int_32)[2]) ){ goto $label$3 }
	$13 = ($5 + [4])
	$12 = *($5 + [4])
	if ( ($12 == 0) ){ goto $label$3 }
	$5 = $13
	
.LABEL $label$7
	$13 = $5
	$5 = $12
	goto $label$6 
	
.LABEL $label$5
	$5 = $14
	$13 = $14
	$12 = *($13)
	if ( $12 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$13 = $5
	
.LABEL $label$3
	$12 = *($13)
	if ( $12 ){ goto $label$1 }
	
.LABEL $label$2
	*(($12 = CALL $89([32]))) = (int_64)0
	*($12 + [8]) = $5
	*($13) = $12
	*($12 + [24]) = (int_64)0
	*($12 + [16]) = [2]
	$2 = $12
	$5 = ($4 + [8])
	$6 = *(*($5))
	if ( ($6 == 0) ){ goto $label$9 }
	*($5) = $6
	$2 = *($13)
	
.LABEL $label$9
	$5 = ($4 + [12])
	CALL $39(*($5), $2)
	*(($2 = ($4 + [16]))) = (*($2) + [1])
	$2 = *($5)
	
.LABEL $label$1
	$9 = (CASTING float_64)(int_64 $8)
	$11 = (CASTING float_64)(int_64 $10)
	$7 = *(($12 + [24]))
	if ( ($2 == 0) ){ goto $label$12 }
	$14 = ($4 + [12])
	
.LOOP $label$13:
	$5 = *($2 + [16])
	if ( ((int_32)$5 < (int_32)[5]) ){ goto $label$15 }
	$5 = *($2)
	if ( $5 ){ goto $label$14 }
	goto $label$11 
	
.LABEL $label$15
	if ( ((int_32)$5 == (int_32)[4]) ){ goto $label$10 }
	$14 = ($2 + [4])
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$10 }
	$2 = $14
	
.LABEL $label$14
	$14 = $2
	$2 = $5
	goto $label$13 
	
.LABEL $label$12
	$2 = $14
	goto $label$10 
	
.LABEL $label$11
	$14 = $2
	
.LABEL $label$10
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$9 = ((float_64)$11 / (float_64)$9)
	$5 = *($14)
	if ( $5 ){ goto $label$16 }
	*(($5 = CALL $89([32]))) = (int_64)0
	*($5 + [8]) = $2
	*($14) = $5
	*($5 + [24]) = (int_64)0
	*($5 + [16]) = [4]
	$2 = $5
	$13 = ($4 + [8])
	$12 = *(*($13))
	if ( ($12 == 0) ){ goto $label$17 }
	*($13) = $12
	$2 = *($14)
	
.LABEL $label$17
	CALL $39(*(($4 + [12])), $2)
	*(($2 = ($4 + [16]))) = (*($2) + [1])
	
.LABEL $label$16
	*($1 + [48]) = (Rounds 0)(((float_64)CALL pow((float_64)0.8, (CASTING float_64)(int_32 (CASTING int_32)(float_64 ((float_64)(float_64))($9 - ((float_64)((float_64)$7 + (float_64)*(($5 + [24]))) + (float_64)(float_64)0.05)) / (float_64)(float_64)0.1)))) * (float_64)(float_64)5e5))
	CALL eosio_assert(((int_64)$3 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)), [1264])
	$5 = $16
	$2 = ($5 + [-80])
	*([0] + [4]) = $2
	*($15 + [4]) = $2
	*($15) = $2
	*($15 + [8]) = ($5 + [-8])
	*($15 + [16]) = $15
	*($15 + [28]) = ($1 + [16])
	*($15 + [24]) = $1
	*($15 + [32]) = ($1 + [32])
	*($15 + [36]) = ($1 + [48])
	*($15 + [40]) = ($1 + [64])
	CALL $56(($15 + [24]), ($15 + [16]))
	CALL db_update_i64(*($1 + [76]), (int_64)0, $2, [72])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$18 }
	*(($0 + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$18
	*([0] + [4]) = ($15 + [48])
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [880])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [880])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [880])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $52(CALL $51($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [880])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [880])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $52($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [880])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [880])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [880])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [880])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [880])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [880])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $94(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $94(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $90(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $90(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $78($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $92($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $89($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $92($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $90($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $91($7)
	return (unreachable)
}

void .FUNC _ZN5eosio5token19add_pledged_balanceEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [144])
	*([0] + [4]) = $8
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = [0]
	$5 = *($0)
	*($8 + [8]) = $5
	$3 = *($2 + [8])
	$6 = (uint_64)$3 >> (uint_64)(int_64)8
	*($8 + [16]) = $6)
	*(($8 + [36])) = [0]
	*(($8 + [40])) = [0]
	$0 = CALL db_find_i64($5, $6, (int_64)-3665743359353290752, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $34(($8 + [8]), $0)
	CALL eosio_assert(((int_32)*($0 + [44]) == (int_32)($8 + [8])), [448])
	CALL eosio_assert([1], [992])
	CALL eosio_assert(((int_32)*($0 + [44]) == (int_32)($8 + [8])), [1040])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$2()), [1088])
	$1 = *($0)
	CALL eosio_assert(((int_64)$3 == (int_64)*(($0 + [16]))), [1152])
	$5 = ((int_64)*($0 + [8]) + (int_64)*($2))
	*($0 + [8]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1200])
	CALL eosio_assert(((int_64)*($0 + [8]) < (int_64)4611686018427387904), [1232])
	CALL eosio_assert(((int_64)$1 == (int_64)*($0)), [1264])
	*($8 + [112]) = (($8 + [48]) + [44])
	*($8 + [108]) = ($8 + [48])
	*($8 + [104]) = ($8 + [48])
	*($8 + [120]) = ($8 + [104])
	*($8 + [132]) = ($0 + [8])
	*($8 + [128]) = $0
	*($8 + [136]) = ($0 + [24])
	*($8 + [140]) = ($0 + [40])
	CALL $58(($8 + [128]), ($8 + [120]))
	CALL db_update_i64(*($0 + [48]), (int_64)0, ($8 + [48]), [44])
	$0 = (($8 + [8]) + [16])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$3 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$4 = *($8 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$2()), [816])
	$0 = CALL $89([56])
	CALL $36($0)
	*($0 + [44]) = ($8 + [8])
	*($0) = $1
	*(($0 + [20])) = *(($2 + [12]))
	*(($0 + [16])) = *(($2 + [8]))
	*(($0 + [12])) = *(($2 + [4]))
	*($0 + [8]) = *($2)
	*($0 + [32]) = $3
	*($8 + [112]) = (($8 + [48]) + [44])
	*($8 + [108]) = ($8 + [48])
	*($8 + [104]) = ($8 + [48])
	*($8 + [120]) = ($8 + [104])
	*($8 + [132]) = ($0 + [8])
	*($8 + [128]) = $0
	*($8 + [136]) = ($0 + [24])
	*($8 + [140]) = ($0 + [40])
	CALL $58(($8 + [128]), ($8 + [120]))
	$5 = *($0)
	$4 = CALL db_store_i64(*((($8 + [8]) + [8])), (int_64)-3665743359353290752, $1, $5, ($8 + [48]), [44])
	*($0 + [48]) = $4
	$2 = (($8 + [8]) + [16])
	if ( (uint_64)($5 <= *($2)) ){ goto $label$5 }
	*($2) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($8 + [128]) = $0
	$1 = *($0)
	*($8 + [48]) = $1
	*($8 + [104]) = $4
	$7 = ($8 + [36])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($8 + [40]))) ){ goto $label$7 }
	*($2 + [8]) = $1
	*($2 + [16]) = $4
	*($8 + [128]) = [0]
	*($2) = $0
	*($7) = ($2 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $38(($8 + [32]), ($8 + [128]), ($8 + [48]), ($8 + [104]))
	
.LABEL $label$6
	$0 = *($8 + [128])
	*($8 + [128]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	CALL $90($0)
	
.LABEL $label$3
	$4 = *($8 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $90($2)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($8 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $4
	
.LABEL $label$8
	*($7) = $4
	CALL $90($0)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [144])
}

void .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $3
	if ( $3 ){ goto $label$3 }
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( *($2 + [12]) ){ goto $label$3 }
	$3 = *($2 + [8])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	if ( ($4 == 0) ){ goto $label$8 }
	if ( *($4 + [12]) ){ goto $label$8 }
	$4 = ($4 + [12])
	goto $label$9 
	
.LABEL $label$10
	$4 = *($3 + [4])
	if ( ($4 == 0) ){ goto $label$6 }
	if ( *($4 + [12]) ){ goto $label$6 }
	$4 = ($4 + [12])
	
.LABEL $label$9
	*(($2 + [12])) = [1]
	$2 = ((int_32)$3 == (int_32)$0)
	*($3 + [12]) = $2
	*($4) = [1]
	$1 = $3
	if ( ($2 == 0) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$8
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$5 }
	$4 = $2
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$2 }
	$4 = *($2 + [4])
	$1 = *($4)
	*($2 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$11
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*($4) = $2
	$3 = *($4 + [8])
	goto $label$1 
	
.LABEL $label$5
	$4 = *($2)
	$1 = *($4 + [4])
	*($2) = $1
	if ( ($1 == 0) ){ goto $label$12 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$12
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*(($4 + [4])) = $2
	$3 = *($4 + [8])
	
.LABEL $label$4
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3 + [4])
	$4 = *($2)
	*($3 + [4]) = $4
	if ( ($4 == 0) ){ goto $label$13 }
	*($4 + [8]) = $3
	
.LABEL $label$13
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*($2) = $3
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	$4 = $2
	
.LABEL $label$1
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3)
	$4 = *($2 + [4])
	*($3) = $4
	if ( ($4 == 0) ){ goto $label$14 }
	*($4 + [8]) = $3
	
.LABEL $label$14
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*(($2 + [4])) = $3
}

int_32 .FUNC $36 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [928])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [896])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [928])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [896])
	return $0
}

void .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [800])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [800])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [800])
	CALL memcpy($0, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1936])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $50($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [800])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $79 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $94($5, ($1 + [16]))
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $94(($5 + [16]), $5)
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($5 + [16])), (int_32 $1))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $90(*($5 + [24]))
	
.LABEL $label$2
	if ( ((*($5) & [1]) == 0) ){ goto $label$3 }
	CALL $90(*($5 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [592])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [640])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [704])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $90($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $90($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $33 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $89(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $93($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $90($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $90($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $30 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $30($0, *($1))
	CALL $30($0, *($1 + [4]))
	CALL $90($1)
	
.LABEL $label$1
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [768])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $89([32])) + [8]) = (int_64)0
	*($6) = (int_64)0
	*($6 + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [800])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [800])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $33(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $90($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}