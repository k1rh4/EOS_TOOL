(data (i32.const 8192) "eosio.token\00Assertion failed: %s (%s: %s: %d)\n\00.\00-+   0X0x\00\00\01\02\04\07\03\06\05\00")
(data (i32.const 8260) "transfer\00stoi\00\00(null)\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 8368) "timeforestct\00")
(data (i32.const 8381) "string is too long to be a valid name\00-0X+0X 0X-0x+0x 0x\00")
(data (i32.const 8438) "thirteenth character in name cannot be a letter that comes after j\00inf\00")
(data (i32.const 8509) "character is not in allowed character set for names\00INF\00")
(data (i32.const 8565) "invalid memo\00nan\00")
(data (i32.const 8582) "no id provided\00NAN\00")
(data (i32.const 8601) "no user name\00.\00")
(data (i32.const 8616) "no plant_id\00%d\00")
(data (i32.const 8631) "no amount\00%u\00")
(data (i32.const 8644) "Plant does not exist\00")
(data (i32.const 8665) "Plant price not equal quantity\00")
(data (i32.const 8696) "invalid first pos\00")
(data (i32.const 8714) "parse memo error\00")
(data (i32.const 8731) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 8782) "error reading iterator\00")
(data (i32.const 8805) "read\00")
(data (i32.const 8810) "get\00")
(data (i32.const 8814) "cannot create objects in table of another contract\00")
(data (i32.const 8865) "write\00")
(data (i32.const 8871) "cannot pass end iterator to modify\00")
(data (i32.const 8906) "object passed to modify is not in multi_index\00")
(data (i32.const 8952) "cannot modify objects in table of another contract\00")
(data (i32.const 9003) "updater cannot change primary key when modifying an object\00: no conversion\00")
(data (i32.const 9078) "activity_id\00: out of range\00")
(data (i32.const 9105) "config key rate does not exist\00")
(data (i32.const 9136) "before for loop\00")
(data (i32.const 9152) "%04d\00")
(data (i32.const 9157) "%10d\00")
(data (i32.const 9163) "object != nullptr\00")
(data (i32.const 9181) "json.hpp\00")
(data (i32.const 9190) "create\00")
(data (i32.const 9197) "m_type != value_t::object or m_value.object != nullptr\00")
(data (i32.const 9252) "assert_invariant\00")
(data (i32.const 9269) "m_type != value_t::array or m_value.array != nullptr\00")
(data (i32.const 9322) "m_type != value_t::string or m_value.string != nullptr\00")
(data (i32.const 9377) "loc != nullptr\00")
(data (i32.const 9392) "get_decimal_point\00")
(data (i32.const 9410) "invalid BOM; must be 0xEF 0xBB 0xBF if given\00")
(data (i32.const 9455) "true\00")
(data (i32.const 9460) "false\00")
(data (i32.const 9466) "null\00")
(data (i32.const 9471) "invalid literal\00")
(data (i32.const 9487) "token_string.size() != 0\00")
(data (i32.const 9512) "unget\00")
(data (i32.const 9518) "current == literal_text[0]\00")
(data (i32.const 9545) "scan_literal\00")
(data (i32.const 9558) "current == \'\\\"\'\00")
(data (i32.const 9574) "scan_string\00")
(data (i32.const 9586) "invalid string: missing closing quote\00")
(data (i32.const 9624) "invalid string: \'\\u\' must be followed by 4 hex digits\00")
(data (i32.const 9678) "invalid string: surrogate U+DC00..U+DFFF must be followed by U+DC00..U+DFFF\00")
(data (i32.const 9754) "invalid string: surrogate U+DC00..U+DFFF must follow U+D800..U+DBFF\00")
(data (i32.const 9822) "0x00 <= codepoint and codepoint <= 0x10FFFF\00")
(data (i32.const 9866) "invalid string: forbidden character after backslash\00")
(data (i32.const 9918) "invalid string: control character U+0000 (NUL) must be escaped to \\u0000\00")
(data (i32.const 9991) "invalid string: control character U+0001 (SOH) must be escaped to \\u0001\00")
(data (i32.const 10064) "invalid string: control character U+0002 (STX) must be escaped to \\u0002\00")
(data (i32.const 10137) "invalid string: control character U+0003 (ETX) must be escaped to \\u0003\00")
(data (i32.const 10210) "invalid string: control character U+0004 (EOT) must be escaped to \\u0004\00")
(data (i32.const 10283) "invalid string: control character U+0005 (ENQ) must be escaped to \\u0005\00")
(data (i32.const 10356) "invalid string: control character U+0006 (ACK) must be escaped to \\u0006\00")
(data (i32.const 10429) "invalid string: control character U+0007 (BEL) must be escaped to \\u0007\00")
(data (i32.const 10502) "invalid string: control character U+0008 (BS) must be escaped to \\u0008 or \\b\00")
(data (i32.const 10580) "invalid string: control character U+0009 (HT) must be escaped to \\u0009 or \\t\00")
(data (i32.const 10658) "invalid string: control character U+000A (LF) must be escaped to \\u000A or \\n\00")
(data (i32.const 10736) "invalid string: control character U+000B (VT) must be escaped to \\u000B\00")
(data (i32.const 10808) "invalid string: control character U+000C (FF) must be escaped to \\u000C or \\f\00")
(data (i32.const 10886) "invalid string: control character U+000D (CR) must be escaped to \\u000D or \\r\00")
(data (i32.const 10964) "invalid string: control character U+000E (SO) must be escaped to \\u000E\00")
(data (i32.const 11036) "invalid string: control character U+000F (SI) must be escaped to \\u000F\00")
(data (i32.const 11108) "invalid string: control character U+0010 (DLE) must be escaped to \\u0010\00")
(data (i32.const 11181) "invalid string: control character U+0011 (DC1) must be escaped to \\u0011\00")
(data (i32.const 11254) "invalid string: control character U+0012 (DC2) must be escaped to \\u0012\00")
(data (i32.const 11327) "invalid string: control character U+0013 (DC3) must be escaped to \\u0013\00")
(data (i32.const 11400) "invalid string: control character U+0014 (DC4) must be escaped to \\u0014\00")
(data (i32.const 11473) "invalid string: control character U+0015 (NAK) must be escaped to \\u0015\00")
(data (i32.const 11546) "invalid string: control character U+0016 (SYN) must be escaped to \\u0016\00")
(data (i32.const 11619) "invalid string: control character U+0017 (ETB) must be escaped to \\u0017\00")
(data (i32.const 11692) "invalid string: control character U+0018 (CAN) must be escaped to \\u0018\00")
(data (i32.const 11765) "invalid string: control character U+0019 (EM) must be escaped to \\u0019\00")
(data (i32.const 11837) "invalid string: control character U+001A (SUB) must be escaped to \\u001A\00")
(data (i32.const 11910) "invalid string: control character U+001B (ESC) must be escaped to \\u001B\00")
(data (i32.const 11983) "invalid string: control character U+001C (FS) must be escaped to \\u001C\00")
(data (i32.const 12055) "invalid string: control character U+001D (GS) must be escaped to \\u001D\00")
(data (i32.const 12127) "invalid string: control character U+001E (RS) must be escaped to \\u001E\00")
(data (i32.const 12199) "invalid string: control character U+001F (US) must be escaped to \\u001F\00")
(data (i32.const 12272) "\90\00\00\00\bf\00\00\00\80\00\00\00\bf\00\00\00\80\00\00\00\bf\00\00\00")
(data (i32.const 12296) "\80\00\00\00\bf\00\00\00\80\00\00\00\bf\00\00\00\80\00\00\00\bf\00\00\00")
(data (i32.const 12320) "\80\00\00\00\8f\00\00\00\80\00\00\00\bf\00\00\00\80\00\00\00\bf\00\00\00")
(data (i32.const 12344) "invalid string: ill-formed UTF-8 byte\00")
(data (i32.const 12382) "current == \'u\'\00")
(data (i32.const 12397) "get_codepoint\00")
(data (i32.const 12411) "0x0000 <= codepoint and codepoint <= 0xFFFF\00")
(data (i32.const 12455) "ranges.size() == 2 or ranges.size() == 4 or ranges.size() == 6\00")
(data (i32.const 12518) "next_byte_in_range\00")
(data (i32.const 12537) "scan_number\00")
(data (i32.const 12549) "invalid number; expected digit after \'-\'\00")
(data (i32.const 12590) "invalid number; expected digit after \'.\'\00")
(data (i32.const 12631) "invalid number; expected \'+\', \'-\', or digit after exponent\00")
(data (i32.const 12690) "invalid number; expected digit after exponent sign\00")
(data (i32.const 12741) "endptr == token_buffer.data() + token_buffer.size()\00")
(data (i32.const 12793) "value\00")
(data (i32.const 12799) "object key\00")
(data (i32.const 12810) "object separator\00")
(data (i32.const 12827) "number overflow parsing \'\00")
(data (i32.const 12853) "\'\00")
(data (i32.const 12855) "not states.empty()\00")
(data (i32.const 12874) "sax_parse_internal\00")
(data (i32.const 12893) "array\00")
(data (i32.const 12899) "object\00")
(data (i32.const 12906) "not keep_stack.empty()\00")
(data (i32.const 12929) "handle_value\00")
(data (i32.const 12942) "ref_stack.back()->is_array() or ref_stack.back()->is_object()\00")
(data (i32.const 13004) "not key_keep_stack.empty()\00")
(data (i32.const 13031) "object_element\00")
(data (i32.const 13046) "not ref_stack.empty()\00")
(data (i32.const 13068) "end_object\00")
(data (i32.const 13079) "m_object != nullptr\00")
(data (i32.const 13099) "iter_impl\00")
(data (i32.const 13109) "end_array\00")
(data (i32.const 13119) "out_of_range\00")
(data (i32.const 13132) "[json.exception.\00")
(data (i32.const 13149) ".\00")
(data (i32.const 13151) "] \00")
(data (i32.const 13156) "\00\00\00\00\00\00\00\00\10\00\00\00\11\00\00\00\12\00\00\00")
(data (i32.const 13176) "\00\00\00\00\00\00\00\00\10\00\00\00\13\00\00\00\12\00\00\00")
(data (i32.const 13196) "parse_error\00")
(data (i32.const 13208) "<U+%.4X>\00")
(data (i32.const 13217) "parse error\00")
(data (i32.const 13229) ": \00")
(data (i32.const 13232) " at line \00")
(data (i32.const 13242) ", column \00")
(data (i32.const 13252) "\00\00\00\00\00\00\00\00\10\00\00\00\14\00\00\00\12\00\00\00")
(data (i32.const 13272) "syntax error \00")
(data (i32.const 13286) "while parsing \00")
(data (i32.const 13301) " \00")
(data (i32.const 13303) "- \00")
(data (i32.const 13306) "; last read: \'\00")
(data (i32.const 13321) "unexpected \00")
(data (i32.const 13333) "; expected \00")
(data (i32.const 13345) "<uninitialized>\00")
(data (i32.const 13361) "true literal\00")
(data (i32.const 13374) "false literal\00")
(data (i32.const 13388) "null literal\00")
(data (i32.const 13401) "string literal\00")
(data (i32.const 13416) "number literal\00")
(data (i32.const 13431) "\'[\'\00")
(data (i32.const 13435) "\'{\'\00")
(data (i32.const 13439) "\']\'\00")
(data (i32.const 13443) "\'}\'\00")
(data (i32.const 13447) "\':\'\00")
(data (i32.const 13451) "\',\'\00")
(data (i32.const 13455) "<parse error>\00")
(data (i32.const 13469) "end of input\00")
(data (i32.const 13482) "\'[\', \'{\', or a literal\00")
(data (i32.const 13505) "unknown token\00")
(data (i32.const 13519) "is_contiguous\00")
(data (i32.const 13533) "input_adapter\00")
(data (i32.const 13548) "\00\00\00\00\00\00\00\00\15\00\00\00\16\00\00\00\17\00\00\00\18\00\00\00\19\00\00\00")
(data (i32.const 13576) "\00\00\00\00\00\00\00\00\1a\00\00\00\1b\00\00\00\1c\00\00\00")
(data (i32.const 13596) "Record does not exist\00")
(data (i32.const 13618) "failure plant.\00")
(data (i32.const 13633) "cannot pass end iterator to erase\00")
(data (i32.const 13667) "cannot increment end iterator\00")
(data (i32.const 13697) "object passed to erase is not in multi_index\00")
(data (i32.const 13742) "cannot erase objects in table of another contract\00")
(data (i32.const 13792) "attempt to remove object that was not in multi_index\00")
(data (i32.const 13845) "coupons does not exist\00")
(data (i32.const 13868) "account not match coupons user\00")
(data (i32.const 13899) "bet record does not exist\00")
(data (i32.const 13925) "this record already draw.\00")
(data (i32.const 13951) "hash mismatch\00")
(data (i32.const 13965) "----------\00")
(data (i32.const 13976) "no bet items available!\00")
(data (i32.const 14000) "bet item does not exist\00")
(data (i32.const 14024) "TREE\00")
(data (i32.const 14029) "TREE\n\00")
(data (i32.const 14035) "0123456789abcdef\00")
(data (i32.const 14052) "next primary key in table is at autoincrement limit\00")
(data (i32.const 14104) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 14158) "cannot decrement iterator at beginning of table\00")
(data (i32.const 14206) "total not enough!\00")
(data (i32.const 14224) "!4\00\0014\00\00>4\00\00L4\00\00Y4\00\00h4\00\00h4\00\00h4\00\00w4\00\00{4\00\00\7f4\00\00\834\00\00\874\00\00\8b4\00\00\c14\00\00\9d4\00\00\aa4\00\00")
(data (i32.const 14304) "14\00\00>4\00\00L4\00\00Y4\00\00h4\00\00h4\00\00h4\00\00w4\00\00{4\00\00\7f4\00\00\834\00\00\874\00\00\8b4\00\00\8f4\00\00\9d4\00\00\aa4\00\00")
(data (i32.const 14368) "\00\00\00\00UUU\05\ff\ff\ff\0f")
(data (i32.const 22820) "\00\00\00\00\00\00\00\00\1d\00\00\00\1e\00\00\00\1f\00\00\00")
(data (i32.const 22840) "/ \00\00R \00\00R \00\00R \00\00R \00\00R \00\00R \00\00R \00\00R \00\00R \00\00\7f\7f\7f\7f\7f\7f\7f\7f\7f\7f\7f\7f\7f\7f\00\00")
(data (i32.const 22896) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 22976) "\05\00\00\00\00\00\00\00\00\00\00\00\"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00#\00\00\00$\00\00\00P8\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
(data (i32.const 23120) "\c0Y\00\00")
(data (i32.const 23136) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 23232) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(data (i32.const 25040) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 25504) "0123456789ABCDEF")
(data (i32.const 25520) "\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05")
(data (i32.const 25552) "\18\00\00\005\00\00\00q\00\00\00")
(data (i32.const 25564) "k\ff\ff\ff\ce\fb\ff\ff\92\bf\ff\ff")
(data (i32.const 25584) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(import "env" "eosio_assert" (func $fimport$0 (param i32 i32)))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "read_action_data" (func $fimport$2 (param i32 i32) (result i32)))
(import "env" "db_find_i64" (func $fimport$3 (param i64 i64 i64 i64) (result i32)))
(import "env" "prints" (func $fimport$4 (param i32)))
(import "env" "current_time" (func $fimport$5 (result i64)))
(import "env" "memcpy" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "abort" (func $fimport$7))
(import "env" "printn" (func $fimport$8 (param i64)))
(import "env" "require_auth" (func $fimport$9 (param i64)))
(import "env" "db_next_i64" (func $fimport$10 (param i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$11 (param i32 i32)))
(import "env" "sha256" (func $fimport$12 (param i32 i32 i32)))
(import "env" "printhex" (func $fimport$13 (param i32 i32)))
(import "env" "prints_l" (func $fimport$14 (param i32 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$15 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$16 (result i64)))
(import "env" "db_get_i64" (func $fimport$17 (param i32 i32 i32) (result i32)))
(import "env" "db_store_i64" (func $fimport$18 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$19 (param i32 i64 i32 i32)))
(import "env" "db_idx64_store" (func $fimport$20 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "memmove" (func $fimport$21 (param i32 i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$22 (param i32)))
(import "env" "db_idx64_find_primary" (func $fimport$23 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$24 (param i32)))
(import "env" "db_idx64_update" (func $fimport$25 (param i32 i64 i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$26 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$27 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$28 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$29 (param i64 i64 i64) (result i32)))
(import "env" "memset" (func $fimport$30 (param i32 i32 i32) (result i32)))
(import "env" "__unordtf2" (func $fimport$31 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$32 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$33 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$34 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$35 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$36 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$37 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$38 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$39 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$40 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$41 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$42 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$43 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$44 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$45 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$46 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$47 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$48 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$49 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $1))
(export "_ZdlPv" (func $209))
(export "_Znwj" (func $207))
(export "_Znaj" (func $208))
(export "_ZdaPv" (func $210))
(export "_ZnwjSt11align_val_t" (func $211))
(export "_ZnajSt11align_val_t" (func $212))
(export "_ZdlPvSt11align_val_t" (func $213))
(export "_ZdaPvSt11align_val_t" (func $214))
(table $0 37 37 anyfunc)
(elem (i32.const 1) $3 $5 $6 $8 $10 $12 $13 $15 $16 $18 $20 $21 $22 $23 $25 $143 $152 $153 $154 $155 $163 $164 $165 $206 $166 $167 $169 $168 $216 $217 $218 $258 $261 $263 $264 $265)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 25841))
(global $global$2 i32 (i32.const 25841))


int_32 .FUNC $220 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $284 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	*($0) = $1
	*($0 + [8]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 (((CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)48)) & [32768]) | ((CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)) & [32767]))) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
}

void .FUNC $285 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$5 = ($global$0 - [128])
	$global$0 = $5
	if ( (CALL __eqtf2($3, $4, (int_64)0, (int_64)0) == 0) ){ goto $label$2 }
	$6 = CALL $269($3, $4)
	$7 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$8 = ($7) & [32767]
	if ( ((int_32)$8) == (int_32)[32767]) ){ goto $label$2 }
	if ( ($6 == 0) ){ goto $label$2 }
	$10 = ((int_64)$4 & (int_64)9223372036854775807)
	$9 = ((int_64)$2 & (int_64)9223372036854775807)
	if ( ((int_32)CALL __letf2($1, $9, $3, $10) <= (int_32)[0]) ){ goto $label$7 }
	$11 = ((CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)48)) & [32767])
	if ( ($8 == 0) ){ goto $label$6 }
	$4 = $1
	if ( $11 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$7
	if ( CALL __netf2($1, $9, $3, $10) ){ goto $label$5 }
	CALL __multf3(($5 + [112]), $1, $2, (int_64)0, (int_64)0)
	$2 = *(($5 + [120]))
	$4 = *($5 + [112])
	goto $label$1 
	
.LABEL $label$6
	CALL __multf3(($5 + [96]), $1, $9, (int_64)0, (int_64)4645181540655955968)
	$9 = *(($5 + [104]))
	$8 = ((CASTING uint_32)(uint_64 (uint_64)$9 >> (uint_64)(int_64)48)) + [-120])
	$4 = *($5 + [96])
	if ( $11 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$4 = $1
	goto $label$1 
	
.LABEL $label$4
	CALL __multf3(($5 + [80]), $3, $10, (int_64)0, (int_64)4645181540655955968)
	$10 = *(($5 + [88]))
	$11 = ((CASTING uint_32)(uint_64 (uint_64)$10 >> (uint_64)(int_64)48)) + [-120])
	$3 = *($5 + [80])
	
.LABEL $label$3
	$12 = ((int_64)((int_64)$10 & (int_64)281474976710655) | (int_64)281474976710656)
	$9 = ((int_64)((int_64)$9 & (int_64)281474976710655) | (int_64)281474976710656)
	$13 = (int_64)
	$6 = ((int_64)$13((int_64))($9 - $12) - (CASTING uint_64)(uint_32 ((uint_64)$3 > (uint_64)$4)))) > (int_64)-1)
	$10 = (int_64))($4 - $3)
	if ( ((int_32)$8 <= (int_32)$11) ){ goto $label$10 }
	
.LOOP $label$11:
	if ( (($6 & [1]) == 0) ){ goto $label$13 }
	if ( ((int_64)((int_64)$13 | (int_64)$10) == (int_64)0) ){ goto $label$9 }
	$9 = (uint_64)$10 >> (uint_64)(int_64)63)
	$13 = ((int_64)$13 << (int_64)1)
	goto $label$12 
	
.LABEL $label$13
	$13 = (uint_64)$4 >> (uint_64)(int_64)63)
	$9 = ((int_64)$9 << (int_64)1)
	$10 = $4
	
.LABEL $label$12
	$4 = ((int_64)$10 << (int_64)1)
	$9 = ((int_64)$13 | (int_64)$9)
	$13 = (int_64)
	$6 = ((int_64)$13((int_64))($9 - $12) - (CASTING uint_64)(uint_32 (uint_64)($4 <= $3)))) > (int_64)-1)
	$10 = (int_64))($4 - $3)
	$8 = ($8 + [-1])
	if ( ((int_32)$8 > (int_32)$11) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($6 == 0) ){ goto $label$14 }
	$9 = $13
	$4 = $10
	if ( ((int_64)((int_64)$13 | (int_64)$10) == (int_64)0) ){ goto $label$8 }
	
.LABEL $label$14
	if ( ((uint_64)$9 > (uint_64)(int_64)281474976710655) ){ goto $label$15 }
	
.LOOP $label$16:
	$3 = (uint_64)$4 >> (uint_64)(int_64)63)
	$8 = ($8 + [-1])
	$4 = ((int_64)$4 << (int_64)1)
	$9 = ((int_64)$3 | (int_64)((int_64)$9 << (int_64)1))
	if ( (uint_64)($9 <= (int_64)281474976710656) ){ goto $label$16 }
	
.LABEL $label$15
	$6 = ($7 & [32768])
	if ( ((int_32)$8 <= (int_32)[0]) ){ goto $label$17 }
	$2 = ((int_64)((int_64)$9 & (int_64)281474976710655) | (int_64)((int_64)(CASTING uint_64)(uint_32 ($8 | $6)) << (int_64)48))
	goto $label$1 
	
.LABEL $label$17
	CALL __multf3(($5 + [64]), $4, ((int_64)((int_64)$9 & (int_64)281474976710655) | (int_64)((int_64)(CASTING uint_64)(uint_32 (($8 + [120]) | $6)) << (int_64)48)), (int_64)0, (int_64)4577627546245398528)
	$2 = *(($5 + [72]))
	$4 = *($5 + [64])
	goto $label$1 
	
.LABEL $label$9
	CALL __multf3(($5 + [32]), $1, $2, (int_64)0, (int_64)0)
	$2 = *(($5 + [40]))
	$4 = *($5 + [32])
	goto $label$1 
	
.LABEL $label$8
	CALL __multf3(($5 + [48]), $1, $2, (int_64)0, (int_64)0)
	$2 = *(($5 + [56]))
	$4 = *($5 + [48])
	goto $label$1 
	
.LABEL $label$2
	CALL __multf3(($5 + [16]), $1, $2, $3, $4)
	$3 = *((($5 + [16]) + [8]))
	$4 = *($5 + [16])
	CALL __divtf3($5, $4, $3, $4, $3)
	$2 = *(($5 + [8]))
	$4 = *($5)
	
.LABEL $label$1
	*($0) = $4
	*($0 + [8]) = $2
	$global$0 = ($5 + [128])
}

int_32 .FUNC $174 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($6) - $5) > (int_32)[0]), [8865])
	CALL memcpy(*($3), ($2 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $8 ){ goto $label$1 }
	$7 = ($3 & [1])
	$3 = *($1)
	$3 = ( *(($1 + [4])) ? uint_32($3 >> [1]) : $7 )
	if ( ($3 == 0) ){ goto $label$2 }
	$8 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) >= (int_32)$3), [8865])
	$5 = ($0 + [4])
	CALL memcpy(*($5), ( $8 ? ($1 + [1]) : $7 ), $3)
	*($5) = (*($5) + $3)
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $6 (int_32 $0, int_64 $1)
{
	CALL printn($1)
}

void .FUNC $176 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $177 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $170 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [16])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $171 (int_32 $0, int_32 $1)
{
	int_32 $2
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $171($0, *($1))
	CALL $171($0, *($1 + [4]))
	$0 = *(($1 + [32]))
	if ( ((int_32)$0 == (int_32)[1]) ){ goto $label$4 }
	if ( ((int_32)$0 == (int_32)[2]) ){ goto $label$5 }
	if ( ((int_32)$0 != (int_32)[3]) ){ goto $label$3 }
	$2 = ($1 + [40])
	if ( *($2) ){ goto $label$2 }
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$5
	$2 = ($1 + [40])
	if ( *($2) ){ goto $label$2 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$4
	$2 = ($1 + [40])
	if ( *($2) ){ goto $label$2 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$3
	$2 = ($1 + [40])
	
.LABEL $label$2
	CALL $38($2, $0)
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*(($1 + [24])))
	
.LABEL $label$6
	CALL _ZdlPv($1)
	
.LABEL $label$1
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $172 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = ($1 + [8])
	CALL $222($6, *($4 + [4]))
	$7 = *($4 + [8])
	*($1 + [24]) = *($7)
	*(($1 + [32])) = *(($7 + [8]))
	*($1 + [40]) = *(*($4 + [12]))
	*($1 + [48]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$4 = *($1 + [8])
	$7 = ( *(($1 + [12])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($7 + [40])
	$8 = (CASTING uint_64)(uint_32 $7)
	$7 = ($1 + [48])
	$9 = ($1 + [40])
	$10 = ($1 + [24])
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$2 = CALL $303($4)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	*($3 + [16]) = $3
	*($3 + [28]) = $6
	*($3 + [24]) = $1
	*($3 + [32]) = $10
	*($3 + [36]) = $9
	*($3 + [40]) = $7
	CALL $173(($3 + [24]), ($3 + [16]))
	$8 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($5 + [8]), (int_64)-6031097805525745664, *(*($0 + [8])), $8, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$8 >= (uint_64)*($5 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $306($2)
	if ( (uint_64)($8 <= *($5 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [48])
}

int_32 .FUNC $7 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $303($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = (int_64)0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [8805])
	CALL memcpy(($4 + [40]), $2, [8])
	*(($4 + [28])) = ($2 + [8])
	*(($4 + [32])) = ($2 + $7)
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($4 + [40])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $306($2)
	
.LABEL $label$6
	$global$0 = ($4 + [48])
	return [1]
}

int_32 .FUNC $246 (int_32 $0)
{
	return (((int_32)$0 == (int_32)[32]) | (($0 + [-9]) <= [5]))
}

void .FUNC $178 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $4 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [192])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $303($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = (($4 + [80]) + [24]))) = (int_64)0
	*(($4 + [120])) = [0]
	*($4 + [88]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [68]) = $2
	*($4 + [64]) = $2
	*($4 + [72]) = ($2 + $7)
	*($4 + [176]) = ($4 + [64])
	*($4 + [32]) = ($4 + [80])
	CALL $27(($4 + [32]), ($4 + [176]))
	*(($9 = (($4 + [16]) + [8]))) = *($4 + [72])
	*($4 + [16]) = *($4 + [64])
	$10 = *($9)
	*(($3 = (($4 + [144]) + [8]))) = $10
	*(($9 = (($4 + [160]) + [8]))) = $10
	$11 = *($4 + [16])
	*($4 + [160]) = $11
	*($4 + [144]) = $11
	$10 = *($9)
	*((($4 + [176]) + [8])) = $10
	*((($4 + [32]) + [24])) = $10
	*($4 + [32]) = $0
	*($4 + [40]) = $1
	$0 = *($4 + [160])
	*($4 + [48]) = $0
	*($4 + [176]) = $0
	*($3) = *($8)
	*($4 + [144]) = *($4 + [96])
	$0 = *($4 + [88])
	$1 = *($4 + [80])
	$8 = CALL $220(($4 + [128]), ($4 + [112]))
	*($9) = *($3)
	*($4 + [160]) = *($4 + [144])
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$11 = *((($4 + [160]) + [8]))
	*((($4 + [176]) + [8])) = $11
	*(($4 + [8])) = $11
	$11 = *($4 + [160])
	*($4) = $11
	*($4 + [176]) = $11
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $4), (int_32 $8), (int_32 $6))
	if ( (*($4 + [128]) & [1]) ){ goto $label$9 }
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL _ZdlPv(*($8 + [8]))
	if ( ($7 <= [513]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $306($2)
	$2 = [1]
	if ( ((*($4 + [112]) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$2 = [1]
	if ( (*($4 + [112]) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	$global$0 = ($4 + [192])
	return $2
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [120])))
	$global$0 = ($4 + [192])
	return $2
}

int_32 .FUNC $276 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [288])
	$global$0 = $3
	*($3 + [284]) = $2
	*(($3 + [272])) = (int_64)0
	*(($3 + [264])) = (int_64)0
	*(($3 + [256])) = (int_64)0
	*($3 + [248]) = (int_64)0
	*($3 + [240]) = (int_64)0
	*($3 + [280]) = *($3 + [284])
	$4 = [0]
	$2 = [-1]
	if ( ((int_32)CALL $277([0], $1, ($3 + [280]), ($3 + [80]), ($3 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $251($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) <= (int_32)[0]) ){ goto $label$6 }
	$5 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	*($0) = ($2 & [-33])
	$5 = ($2 & [32])
	if ( *($0 + [48]) ){ goto $label$4 }
	
.LABEL $label$5
	*(($6 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($3 + [80])
	*($0 + [28]) = $3
	*($0 + [20]) = $3
	$7 = *($0 + [44])
	*($0 + [44]) = $3
	$2 = CALL $277($0, $1, ($3 + [280]), ($3 + [80]), ($3 + [240]))
	if ( ($7 == 0) ){ goto $label$3 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $7
	*($6) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$7 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $7 )
	goto $label$3 
	
.LABEL $label$4
	$2 = CALL $277($0, $1, ($3 + [280]), ($3 + [80]), ($3 + [240]))
	
.LABEL $label$3
	$1 = *($0)
	*($0) = ($1 | $5)
	$1 = ($1 & [32])
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $252($0)
	
.LABEL $label$7
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	$global$0 = ($3 + [288])
	return $2
}

int_32 .FUNC $221 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $5 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$5 = ($global$0 - [272])
	$global$0 = $5
	*($5 + [264]) = $1
	$6 = *($0)
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$7 }
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$7 }
	$7 = *($4)
	$8 = ($7 & [1])
	$9 = ( *($4 + [8]) ? ($4 + [1]) : $8 )
	$7 = CALL $33(($5 + [168]), $9, ($9 + ( *($4 + [4]) ? uint_32($7 >> [1]) : $8 )))
	*($5 + [240]) = [0]
	CALL $34(($5 + [248]), $7, ($5 + [224]), [1])
	$4 = *($5 + [240])
	if ( ((int_32)($5 + [224]) == (int_32)$4) ){ goto $label$10 }
	if ( ($4 == 0) ){ goto $label$11 }
	CALL void $4((int_32 *(*($4) + [20])))
	
.LABEL $label$11
	$4 = *($7 + [4])
	if ( $4 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL void $4((int_32 *(*($4) + [16])))
	$4 = *($7 + [4])
	if ( ($4 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	$7 = *($4 + [4])
	*($4 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	CALL void $4((int_32 *(*($4) + [8])))
	CALL $205($4)
	
.LABEL $label$8
	$7 = CALL $35(($5 + [248]), [9078])
	$4 = [0]
	*($5 + [216]) = [0]
	*($5 + [208]) = (int_64)0
	if ( ((int_32)*($7) != (int_32)[3]) ){ goto $label$4 }
	CALL $222(($5 + [208]), *($7 + [8]))
	*(($5 + [200])) = [0]
	*($5 + [184]) = (int_64)-1
	*($5 + [192]) = (int_64)0
	$1 = *($0)
	*($5 + [168]) = $1
	*($5 + [176]) = $1
	$7 = CALL db_find_i64($1, $1, (int_64)4982871454518345728, (int_64)-5065810708977942528)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$12 }
	$4 = CALL $36(($5 + [168]), $7)
	CALL eosio_assert(((int_32)*($4 + [20]) == (int_32)($5 + [168])), [8731])
	
.LABEL $label$12
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [9105])
	if ( (*($4 + [8]) & [1]) ){ goto $label$14 }
	$4 = (($4 + [8]) + [1])
	goto $label$13 
	
.LABEL $label$14
	$4 = *(($4 + [16]))
	
.LABEL $label$13
	$1 = CALL $292($4, [0], [0])
	$2 = *($3)
	CALL prints([9136])
	*($5 + [164]) = [0]
	$6 = ((int_64)$2 / (int_64)10000)
	$2 = ((uint_64)$6 / (uint_64)$1)
	if ( ((uint_64)$1 > (uint_64)$6) ){ goto $label$15 }
	$10 = (($5 + [40]) | [1])
	$11 = (($5 + [56]) | [1])
	$8 = (($5 + [56]) + [8])
	$12 = (($5 + [56]) + [16])
	$9 = ($5 + [80])
	$13 = ($5 + [88])
	$14 = ($5 + [92])
	$15 = ($5 + [52])
	$16 = ($5 + [84])
	
.LOOP $label$16:
	*($5 + [16]) = ((uint_64)((int_64)*($5 + [264]) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) % (uint_64)(int_64)10000)
	CALL $260(($5 + [144]), [9152], ($5 + [16]))
	*($5) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL $260(($5 + [112]), [9157], $5)
	*($8) = [0]
	*($5 + [56]) = (int_64)0
	$4 = CALL $297(($5 + [112]))
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$19 }
	*($5 + [56]) = ($4 << [1])
	$3 = $11
	if ( $4 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$7 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($7)
	*($8) = $3
	*($5 + [56]) = ($7 | [1])
	*($5 + [60]) = $4
	
.LABEL $label$18
	CALL memcpy($3, ($5 + [112]), $4)
	
.LABEL $label$17
	*(($3 + $4)) = [0]
	*(($3 = (($5 + [40]) + [8]))) = [0]
	*($5 + [40]) = (int_64)0
	$4 = CALL $297(($5 + [144]))
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$22 }
	*($5 + [40]) = ($4 << [1])
	$7 = $10
	if ( $4 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$17 = (($4 + [16]) & [-16])
	$7 = CALL _Znwj($17)
	*($3) = $7
	*($5 + [40]) = ($17 | [1])
	*($5 + [44]) = $4
	
.LABEL $label$21
	CALL memcpy($7, ($5 + [144]), $4)
	
.LABEL $label$20
	*(($7 + $4)) = [0]
	$4 = *($5 + [40])
	$7 = ($4 & [1])
	$4 = CALL $229(($5 + [56]), ( *($3) ? $10 : $7 ), ( *($5 + [44]) ? uint_32($4 >> [1]) : $7 ))
	$7 = ($4 + [8])
	*(($17 = (($5 + [96]) + [8]))) = *($7)
	*($5 + [96]) = *($4)
	*($4) = (int_64)0
	*($7) = [0]
	if ( ((*($5 + [40]) & [1]) == 0) ){ goto $label$23 }
	CALL _ZdlPv(*($3))
	
.LABEL $label$23
	if ( ((*($5 + [56]) & [1]) == 0) ){ goto $label$24 }
	CALL _ZdlPv(*($8))
	
.LABEL $label$24
	*($12) = (int_64)-1
	*($9) = (int_64)0
	*($13) = [0]
	*($14) = [0]
	$1 = *($0)
	*($8) = $1
	*($5 + [56]) = $1
	*($3) = ($5 + [96])
	*($15) = ($5 + [164])
	*($5 + [44]) = ($5 + [264])
	*($5 + [40]) = ($5 + [208])
	CALL $37(($5 + [32]), ($5 + [56]), $1, ($5 + [40]))
	$7 = *($9)
	if ( ($7 == 0) ){ goto $label$25 }
	$4 = *($16)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$27 }
	
.LOOP $label$28:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$29 }
	CALL _ZdlPv($3)
	
.LABEL $label$29
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$28 }
	$4 = *($9)
	goto $label$26 
	
.LABEL $label$27
	$4 = $7
	
.LABEL $label$26
	*($16) = $7
	CALL _ZdlPv($4)
	
.LABEL $label$25
	if ( ((*($5 + [96]) & [1]) == 0) ){ goto $label$30 }
	CALL _ZdlPv(*($17))
	
.LABEL $label$30
	$4 = (*($5 + [164]) + [1])
	*($5 + [164]) = $4
	if ( ((uint_64)$2 > (uint_64)(CASTING int_64)(int_32 $4)) ){ goto $label$16 }
	
.LABEL $label$15
	$7 = *($5 + [192])
	if ( ($7 == 0) ){ goto $label$31 }
	$8 = ($5 + [196])
	$4 = *($8)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$33 }
	
.LOOP $label$34:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$35 }
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$36 }
	CALL _ZdlPv(*(($3 + [16])))
	
.LABEL $label$36
	CALL _ZdlPv($3)
	
.LABEL $label$35
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$34 }
	$4 = *(($5 + [192]))
	goto $label$32 
	
.LABEL $label$33
	$4 = $7
	
.LABEL $label$32
	*($8) = $7
	CALL _ZdlPv($4)
	
.LABEL $label$31
	if ( ((*($5 + [208]) & [1]) == 0) ){ goto $label$37 }
	CALL _ZdlPv(*(($5 + [216])))
	
.LABEL $label$37
	$4 = *($5 + [248])
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$40 }
	if ( ((int_32)$4 == (int_32)[2]) ){ goto $label$41 }
	if ( ((int_32)$4 != (int_32)[3]) ){ goto $label$39 }
	if ( (*($5 + [256]) == 0) ){ goto $label$3 }
	$3 = ($5 + [256])
	goto $label$38 
	
.LABEL $label$41
	if ( (*($5 + [256]) == 0) ){ goto $label$2 }
	$3 = ($5 + [256])
	goto $label$38 
	
.LABEL $label$40
	if ( (*($5 + [256]) == 0) ){ goto $label$1 }
	$3 = ($5 + [256])
	goto $label$38 
	
.LABEL $label$39
	$3 = ($5 + [256])
	
.LABEL $label$38
	CALL $38($3, $4)
	
.LABEL $label$7
	$global$0 = ($5 + [272])
	return (unreachable)
	
.LABEL $label$6
	CALL $219(($5 + [40]))
	
.LABEL $label$5
	CALL $219(($5 + [56]))
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$2
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$1
	CALL $248([9197], [9181], [13422], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $127 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = ($global$0 - [64])
	$global$0 = $3
	CALL $235(($3 + [16]), [13132], $1)
	$1 = CALL $227(($3 + [16]), [13149])
	$4 = ($1 + [8])
	*((($3 + [32]) + [8])) = *($4)
	*($3 + [32]) = *($1)
	*($1) = (int_64)0
	*($4) = [0]
	CALL $239($3, $2)
	$1 = *($3)
	$2 = ($1 & [1])
	$1 = CALL $229(($3 + [32]), ( *($3 + [8]) ? ($3 | [1]) : $2 ), ( *($3 + [4]) ? uint_32($1 >> [1]) : $2 ))
	$2 = ($1 + [8])
	*((($3 + [48]) + [8])) = *($2)
	*($3 + [48]) = *($1)
	*($1) = (int_64)0
	*($2) = [0]
	$1 = CALL $227(($3 + [48]), [13151])
	$5 = *($1)
	*($1) = (int_64)0
	*($0) = $5
	$0 = ($1 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( (*($3 + [48]) & [1]) ){ goto $label$7 }
	if ( (*($3) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL _ZdlPv(*($3 + [56]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv(*(($3 + [8])))
	$0 = [1]
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$0 = [1]
	if ( (*($3 + [32]) & [1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( (*($3 + [16]) & $0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL _ZdlPv(*($3 + [40]))
	if ( ((*($3 + [16]) & $0) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*($3 + [24]))
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$1
	$global$0 = ($3 + [64])
}

void .FUNC $3 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [208])
	$global$0 = $5
	*($5 + [200]) = $1
	$6 = *($0)
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$1 }
	$9 = ( *($7 + [4]) ? uint_32($9 >> [1]) : $10 )
	$9 = *($5 + [184])
	$10 = ($9 & [1])
	$8 = ($7 + [1])
	$7 = CALL $220(($5 + [184]), $4)
	$11 = ( *($7 + [8]) ? $8 : $10 )
	$10 = ($11 + $9)
	if ( ($9 == 0) ){ goto $label$5 }
	
.LOOP $label$6:
	if ( CALL $246(*($11)) ){ goto $label$5 }
	$11 = ($11 + [1])
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$6 }
	$11 = $10
	$9 = [1]
	$10 = *($5 + [184])
	if ( (($10 & [1]) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$7 }
	$9 = ($11 + [1])
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$7 }
	
.LOOP $label$8:
	if ( (CALL $246(*($9)) == 0) ){ goto $label$9 }
	$9 = ($9 + [1])
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	*($11) = *($9)
	$11 = ($11 + [1])
	$9 = ($9 + [1])
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$8 }
	
.LABEL $label$7
	$9 = [1]
	$10 = *($5 + [184])
	if ( ($10 & [1]) ){ goto $label$3 }
	
.LABEL $label$4
	$9 = (($7 + uint_32($10 >> $9)) + $9)
	$10 = $8
	goto $label$2 
	
.LABEL $label$3
	$10 = *(($7 + [8]))
	$9 = ($10 + *(($7 + [4])))
	
.LABEL $label$2
	CALL $232($7, ($11 - $10), ($9 - $11))
	$12 = ($11 & [1])
	$11 = *($5 + [184])
	$10 = ( *(($7 + [4])) ? uint_32($11 >> [1]) : $12 )
	if ( ($10 == 0) ){ goto $label$10 }
	$11 = ( *(($7 + [8])) ? $8 : $12 )
	$9 = [0]
	
.LOOP $label$11:
	$9 = ($9 + ((int_32)*($11) == (int_32)[44]))
	$11 = ($11 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$11 }
	if ( ((int_32)$9 != (int_32)[4]) ){ goto $label$10 }
	CALL eosio_assert([1], [8565])
	*($5 + [168]) = (int_64)0
	*($5 + [176]) = [0]
	CALL eosio_assert([1], [8696])
	$11 = CALL $233($4, [44], [0])
	if ( ((int_32)$11 == (int_32)[-1]) ){ goto $label$15 }
	CALL $221(($5 + [104]), $4, [0], $11, $4)
	if ( (*($5 + [168]) & [1]) ){ goto $label$14 }
	*($5 + [168]) = [0]
	goto $label$13 
	
.LABEL $label$15
	CALL eosio_assert([0], [8714])
	goto $label$12 
	
.LABEL $label$14
	*(*(($5 + [176]))) = [0]
	*($5 + [172]) = [0]
	
.LABEL $label$13
	CALL $224(($5 + [168]), [0])
	*((($5 + [168]) + [8])) = *((($5 + [104]) + [8]))
	*($5 + [168]) = *($5 + [104])
	
.LABEL $label$12
	$9 = *($5 + [168])
	CALL eosio_assert(((int_32)( *($5 + [172]) ? uint_32($9 >> [1]) : ($9 & [1]) ) != (int_32)[0]), [8582])
	*($5 + [164]) = CALL $236(($5 + [168]), [0], [10])
	$11 = ($11 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [8696])
	$9 = CALL $233($4, [44], $11)
	if ( ((int_32)$9 == (int_32)[-1]) ){ goto $label$19 }
	CALL $221(($5 + [104]), $4, $11, ($9 - $11), $4)
	if ( (*($5 + [168]) & [1]) ){ goto $label$18 }
	*($5 + [168]) = [0]
	goto $label$17 
	
.LABEL $label$19
	CALL eosio_assert([0], [8714])
	goto $label$16 
	
.LABEL $label$18
	*(*(($5 + [176]))) = [0]
	*($5 + [172]) = [0]
	
.LABEL $label$17
	CALL $224(($5 + [168]), [0])
	*((($5 + [168]) + [8])) = *((($5 + [104]) + [8]))
	*($5 + [168]) = *($5 + [104])
	
.LABEL $label$16
	$11 = *($5 + [168])
	CALL eosio_assert(((int_32)( *($5 + [172]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [8601])
	$12 = CALL $220(($5 + [152]), ($5 + [168]))
	$11 = ($9 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [8696])
	$9 = CALL $233($4, [44], $11)
	if ( ((int_32)$9 == (int_32)[-1]) ){ goto $label$23 }
	CALL $221(($5 + [104]), $4, $11, ($9 - $11), $4)
	if ( (*($5 + [168]) & [1]) ){ goto $label$22 }
	*($5 + [168]) = [0]
	goto $label$21 
	
.LABEL $label$23
	CALL eosio_assert([0], [8714])
	goto $label$20 
	
.LABEL $label$22
	*(*(($5 + [176]))) = [0]
	*($5 + [172]) = [0]
	
.LABEL $label$21
	CALL $224(($5 + [168]), [0])
	*((($5 + [168]) + [8])) = *((($5 + [104]) + [8]))
	*($5 + [168]) = *($5 + [104])
	
.LABEL $label$20
	$11 = *($5 + [168])
	CALL eosio_assert(((int_32)( *($5 + [172]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [8616])
	*($5 + [148]) = CALL $236(($5 + [168]), [0], [10])
	$11 = ($9 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [8696])
	$9 = CALL $233($4, [44], $11)
	if ( ((int_32)$9 == (int_32)[-1]) ){ goto $label$27 }
	CALL $221(($5 + [104]), $4, $11, ($9 - $11), $4)
	if ( (*($5 + [168]) & [1]) ){ goto $label$26 }
	*($5 + [168]) = [0]
	goto $label$25 
	
.LABEL $label$27
	CALL eosio_assert([0], [8714])
	goto $label$24 
	
.LABEL $label$26
	*(*(($5 + [176]))) = [0]
	*($5 + [172]) = [0]
	
.LABEL $label$25
	CALL $224(($5 + [168]), [0])
	*((($5 + [168]) + [8])) = *((($5 + [104]) + [8]))
	*($5 + [168]) = *($5 + [104])
	
.LABEL $label$24
	$11 = *($5 + [168])
	CALL eosio_assert(((int_32)( *($5 + [172]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [8631])
	CALL $236(($5 + [168]), [0], [10])
	*((($5 + [104]) + [32])) = [0]
	*($5 + [120]) = (int_64)-1
	*($5 + [128]) = (int_64)0
	$1 = *($0)
	*($5 + [104]) = $1
	*($5 + [112]) = $1
	$11 = [0]
	$9 = CALL db_find_i64($1, $1, (int_64)-6031097805525745664, *($5 + [148]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$28 }
	$11 = CALL $28(($5 + [104]), $9)
	CALL eosio_assert(((int_32)*($11 + [56]) == (int_32)($5 + [104])), [8731])
	
.LABEL $label$28
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [8644])
	CALL eosio_assert(((int_64)*($11 + [24]) <= (int_64)*($3)), [8665])
	*((($5 + [64]) + [32])) = [0]
	*($5 + [80]) = (int_64)-1
	*($5 + [88]) = (int_64)0
	$1 = *($0)
	*($5 + [64]) = $1
	*($5 + [72]) = $1
	$11 = CALL db_find_i64($1, $1, (int_64)-7696768201719283712, *($5 + [164]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$30 }
	$11 = CALL $29(($5 + [64]), $11)
	CALL eosio_assert(((int_32)*($11 + [48]) == (int_32)($5 + [64])), [8731])
	$1 = *($0)
	*($5 + [32]) = $3
	*($5 + [28]) = ($5 + [148])
	*($5 + [24]) = ($5 + [200])
	CALL eosio_assert([1], [8871])
	CALL $30(($5 + [64]), $11, $1, ($5 + [24]))
	goto $label$29 
	
.LABEL $label$30
	$1 = *($0)
	*($5 + [36]) = $3
	*($5 + [28]) = ($5 + [200])
	*($5 + [24]) = ($5 + [164])
	*($5 + [32]) = ($5 + [148])
	CALL $31(($5 + [8]), ($5 + [64]), $1, ($5 + [24]))
	
.LABEL $label$29
	*(($5 + [56])) = [0]
	*($5 + [40]) = (int_64)-1
	*($5 + [48]) = (int_64)0
	*($5 + [60]) = [0]
	$1 = *($0)
	*($5 + [24]) = $1
	*($5 + [32]) = $1
	*($5 + [12]) = ($5 + [200])
	*($5 + [8]) = ($5 + [164])
	*($5 + [16]) = ($5 + [148])
	CALL $32($5, ($5 + [24]), $1, ($5 + [8]))
	$10 = *($5 + [48])
	if ( ($10 == 0) ){ goto $label$31 }
	$4 = ($5 + [52])
	$11 = *($4)
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$33 }
	
.LOOP $label$34:
	$11 = ($11 + [-24])
	$9 = *($11)
	*($11) = [0]
	if ( ($9 == 0) ){ goto $label$35 }
	CALL _ZdlPv($9)
	
.LABEL $label$35
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$34 }
	$11 = *(($5 + [48]))
	goto $label$32 
	
.LABEL $label$33
	$11 = $10
	
.LABEL $label$32
	*($4) = $10
	CALL _ZdlPv($11)
	
.LABEL $label$31
	$10 = *($5 + [88])
	if ( ($10 == 0) ){ goto $label$36 }
	$4 = ($5 + [92])
	$11 = *($4)
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$38 }
	
.LOOP $label$39:
	$11 = ($11 + [-24])
	$9 = *($11)
	*($11) = [0]
	if ( ($9 == 0) ){ goto $label$40 }
	CALL _ZdlPv($9)
	
.LABEL $label$40
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$39 }
	$11 = *(($5 + [88]))
	goto $label$37 
	
.LABEL $label$38
	$11 = $10
	
.LABEL $label$37
	*($4) = $10
	CALL _ZdlPv($11)
	
.LABEL $label$36
	$10 = *($5 + [128])
	if ( ($10 == 0) ){ goto $label$41 }
	$4 = ($5 + [132])
	$11 = *($4)
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$43 }
	
.LOOP $label$44:
	$11 = ($11 + [-24])
	$9 = *($11)
	*($11) = [0]
	if ( ($9 == 0) ){ goto $label$45 }
	if ( ((*($9 + [8]) & [1]) == 0) ){ goto $label$46 }
	CALL _ZdlPv(*(($9 + [16])))
	
.LABEL $label$46
	CALL _ZdlPv($9)
	
.LABEL $label$45
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$44 }
	$11 = *(($5 + [128]))
	goto $label$42 
	
.LABEL $label$43
	$11 = $10
	
.LABEL $label$42
	*($4) = $10
	CALL _ZdlPv($11)
	
.LABEL $label$41
	if ( ((*($5 + [152]) & [1]) == 0) ){ goto $label$47 }
	CALL _ZdlPv(*($12 + [8]))
	
.LABEL $label$47
	if ( ((*($5 + [168]) & [1]) == 0) ){ goto $label$48 }
	CALL _ZdlPv(*(($5 + [176])))
	
.LABEL $label$48
	$12 = (*($5 + [184]) & [1])
	
.LABEL $label$10
	if ( ($12 == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($7 + [8])))
	
.LABEL $label$1
	$global$0 = ($5 + [208])
}

void .FUNC $189 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	*($1 + [16]) = *(*($4 + [8]))
	$5 = *($0)
	$6 = ($1 + [32])
	CALL $222($6, *($4 + [12]))
	$4 = *($4 + [16])
	*($1 + [80]) = *($4)
	*(($1 + [104])) = *(($4 + [24]))
	*(($1 + [96])) = *(($4 + [16]))
	*(($1 + [88])) = *(($4 + [8]))
	$4 = *($1 + [32])
	$7 = ( *(($1 + [36])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($7 + [104])
	$8 = (CASTING uint_64)(uint_32 $7)
	$7 = ($1 + [80])
	$9 = ($1 + [8])
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$2 = CALL $303($4)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $9
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [24])
	*($3 + [48]) = $6
	*($3 + [52]) = ($1 + [48])
	*($3 + [56]) = $7
	*($3 + [60]) = ($1 + [112])
	CALL $192(($3 + [32]), ($3 + [24]))
	$8 = *($1)
	*($1 + [124]) = CALL db_store_i64(*($5 + [8]), (int_64)4229853266458443776, *(*($0 + [8])), $8, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$8 >= (uint_64)*($5 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $306($2)
	if ( (uint_64)($8 <= *($5 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [64])
}

void .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $174(*($1), *($0 + [16]))
	CALL $174(*($1), *($0 + [20]))
	$3 = *($0 + [24])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [28])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $174(*($1), *($0 + [32]))
	$3 = *($0 + [36])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0 + [40])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($0 + [4]), $4, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $245($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $48 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [8814])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([56])) + [40]) = $1
	*($3 + [8]) = (int_64)0
	CALL $175(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [44])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $176(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

int_32 .FUNC $264 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = *($0 + [28])
	CALL prints_l($3, (*($0 + [20]) - $3))
	CALL prints_l($1, $2)
	return ((*($0 + [20]) + $2) - *($0 + [28]))
}

void .FUNC memory ()
{
}

int_32 .FUNC $266 (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $236 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$global$0 = $3
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$4 = CALL $297([8269])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$6 }
	*($3) = ($4 << [1])
	$5 = ($3 | [1])
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3) = ($6 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $4
	
.LABEL $label$5
	CALL memcpy($5, [8269], $4)
	
.LABEL $label$4
	*(($5 + $4)) = [0]
	*($3 + [12]) = [0]
	$4 = *($0 + [8])
	$5 = *($0)
	$6 = *(CALL $247())
	*(CALL $247()) = [0]
	$4 = ( $4 ? ($0 + [1]) : ($5 & [1]) )
	$0 = CALL $294($4, ($3 + [12]), $2)
	$5 = CALL $247()
	$2 = *($5)
	*($5) = $6
	if ( ((int_32)$2 == (int_32)[34]) ){ goto $label$2 }
	$5 = *($3 + [12])
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($5 - $4)
	
.LABEL $label$7
	if ( ((*($3) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$8
	$global$0 = ($3 + [16])
	return $0
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $237($3)
	
.LABEL $label$1
	CALL $238($3)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($0 + [24]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC $42 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [8814])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([72])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [56]) = $1
	CALL $172(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [60])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $87(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*(($3 + [16])))
	
.LABEL $label$4
	CALL _ZdlPv($3)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $41 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [8906])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [8952])
	$6 = *($1)
	*($1) = *(*($3))
	$7 = ($1 + [8])
	CALL $222($7, *($3 + [4]))
	$8 = *($3 + [8])
	*($1 + [24]) = *($8)
	*(($1 + [32])) = *(($8 + [8]))
	*($1 + [40]) = *(*($3 + [12]))
	CALL eosio_assert(((int_64)$6 == (int_64)*($1)), [9003])
	$3 = *($1 + [8])
	$8 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [40])
	$9 = (CASTING uint_64)(uint_32 $8)
	$8 = ($1 + [40])
	$10 = ($1 + [24])
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$4 = CALL $303($3)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [16]) = $5
	*($5 + [28]) = $7
	*($5 + [32]) = $10
	*($5 + [36]) = $8
	*($5 + [24]) = $1
	*($5 + [40]) = ($1 + [48])
	CALL $173(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [60]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $306($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$4
	$global$0 = ($5 + [48])
}

void .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $220(($2 + [32]), ($1 + [8]))
	*(($5 = (($2 + [16]) + [8]))) = *(($1 + [32]))
	*($2 + [16]) = *($1 + [24])
	$6 = *($1 + [40])
	*((($2 + [48]) + [8])) = *($5)
	*($2 + [48]) = *($2 + [16])
	$1 = *($0 + [4])
	$5 = *($1 + [4])
	$0 = (*($0) + int_32($5 >> [1]))
	$1 = *($1)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$5 = CALL $220(($2 + [80]), $4)
	$7 = *((($2 + [48]) + [8]))
	*((($2 + [64]) + [8])) = $7
	*(($2 + [8])) = $7
	$7 = *($2 + [48])
	*($2) = $7
	*($2 + [64]) = $7
	CALL void $0((int_32 $3), (int_64 $5), (int_32 $2), (int_32 $6), (int_64 $1))
	if ( (*($2 + [80]) & [1]) ){ goto $label$4 }
	if ( (*($4) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($5 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($4 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [13697])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [13742])
	$3 = *($0 + [24])
	$4 = $3
	$5 = ($0 + [28])
	$6 = *($5)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$1 }
	$7 = *($1)
	if ( ((int_64)*(*(($6 + [-24]))) != (int_64)$7) ){ goto $label$2 }
	$4 = $6
	goto $label$1 
	
.LABEL $label$2
	$8 = ($3 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$3 }
	$9 = ($6 + [-48])
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_64)*(*($9)) != (int_64)$7) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$4 = $3
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)$3), [13792])
	$3 = *($5)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = $4
	
.LOOP $label$8:
	$9 = *($6)
	*($6) = [0]
	$8 = ($6 + [-24])
	$4 = *($8)
	*($8) = $9
	if ( ($4 == 0) ){ goto $label$9 }
	CALL _ZdlPv($4)
	
.LABEL $label$9
	*(($6 + [-8])) = *(($6 + [16]))
	*(($6 + [-16])) = *(($6 + [8]))
	$6 = ($6 + [24])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$8 }
	$9 = ($6 + [-24])
	$4 = *(($0 + [28]))
	if ( ((int_32)($4 + [24]) != (int_32)$6) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$9 = ($4 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	CALL _ZdlPv($6)
	
.LABEL $label$11
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $9
	CALL db_remove_i64(*($1 + [44]))
	$6 = *(($1 + [48]))
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$13 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6031097554559041536, ($2 + [8]), *($1))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	
.LABEL $label$13
	CALL db_idx64_remove($6)
	
.LABEL $label$12
	$global$0 = ($2 + [16])
}

int_32 .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8782])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $303($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $4)
	*(($5 = CALL _Znwj([56])) + [40]) = $0
	*($5 + [8]) = (int_64)0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	CALL $178(($3 + [40]), ($3 + [32]))
	*($5 + [48]) = [-1]
	*($5 + [44]) = $1
	*($3 + [32]) = $5
	$6 = *($5)
	*($3 + [40]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [32]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $85(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $306($2)
	
.LABEL $label$6
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $45 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [8906])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [8952])
	*($4 + [56]) = *($1 + [8])
	$5 = *($1)
	$6 = *(*($3))
	*($1) = $6
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [24]) = *(*($3 + [12]))
	CALL eosio_assert(((int_64)$5 == (int_64)$6), [9003])
	*($4 + [48]) = ($4 + [40])
	*($4 + [44]) = $4
	*($4 + [40]) = $4
	*($4 + [64]) = ($4 + [40])
	$3 = ($1 + [8])
	*($4 + [76]) = $3
	*($4 + [72]) = $1
	*($4 + [80]) = ($1 + [16])
	*($4 + [84]) = ($1 + [24])
	*($4 + [88]) = ($1 + [32])
	CALL $179(($4 + [72]), ($4 + [64]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($4 + [72]) = *($3)
	if ( (CALL $296(($4 + [56]), ($4 + [72]), [8]) == 0) ){ goto $label$2 }
	$3 = ($1 + [48])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$3 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6031097404874960384, ($4 + [64]), $5)
	*($3) = $1
	
.LABEL $label$3
	CALL db_idx64_update($1, $2, ($4 + [72]))
	
.LABEL $label$2
	$global$0 = ($4 + [96])
}

int_32 .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8782])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $303($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $4)
	*(($5 = CALL _Znwj([56])) + [40]) = $0
	*($5 + [8]) = (int_64)0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	CALL $177(($3 + [40]), ($3 + [32]))
	*($5 + [48]) = [-1]
	*($5 + [44]) = $1
	*($3 + [32]) = $5
	$6 = *($5)
	*($3 + [40]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [32]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $176(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $306($2)
	
.LABEL $label$6
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [64])
	return $5
}

int_32 .FUNC $222 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $223($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $267 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = *($2 + [20])
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = [0]
	if ( CALL $266($2) ){ goto $label$2 }
	$4 = *($2 + [20])
	if ( ((*(($2 + [16])) - $4) <= $1) ){ goto $label$1 }
	
.LABEL $label$3
	$6 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$5 }
	$6 = [0]
	$5 = $0
	$3 = [0]
	
.LOOP $label$6:
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$5 }
	$3 = ($3 + [1])
	$7 = ($5 + $1)
	$8 = ($5 + [-1])
	$5 = $8
	if ( ((int_32)*(($7 + [-1])) != (int_32)[10]) ){ goto $label$6 }
	$6 = (($1 - $3) + [1])
	$5 = CALL int_32 $2((int_32 $0), (int_32 $6), (int_32 *($2 + [36])))
	if ( ($5 <= $6) ){ goto $label$2 }
	$0 = (($8 + $1) + [1])
	$4 = *(($2 + [20]))
	$1 = ($3 + [-1])
	
.LABEL $label$5
	CALL memcpy($4, $0, $1)
	*(($3 = ($2 + [20]))) = (*($3) + $1)
	$5 = ($6 + $1)
	
.LABEL $label$2
	return $5
	return .LABEL $label$1
}

int_32 .FUNC $234 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $296(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

int_32 .FUNC $233 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$3 }
	$4 = ($0 + [1])
	$5 = [-1]
	$0 = uint_32($3 >> [1])
	if ( ((uint_32)$0 <= (uint_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [8])
	$5 = [-1]
	$0 = *($0 + [4])
	if ( ((uint_32)$0 > (uint_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	$0 = ($0 - $2)
	if ( ($0 == 0) ){ goto $label$4 }
	$0 = CALL $295(($4 + $2), ($1 & [255]), $0)
	return ( ($0 - $4) ? [-1] : $0 )
	
.LABEL $label$4
	return ( ([0] - $4) ? [-1] : [0] )
}

void .FUNC $249 (int_32 $0)
{
}

void .FUNC $226 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL _ZdlPv($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $167 (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [4])
	if ( ((uint_32)$1 >= (uint_32)*($0 + [8])) ){ goto $label$1 }
	*(($0 + [4])) = ($1 + [1])
	return *($1)
	
.LABEL $label$1
	return [-1]
}

void .FUNC $166 (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC $165 (int_32 $0)
{
	CALL int_32 ($0 + [12])((int_32 *(*($0 + [12]) + [4])))
}

void .FUNC $164 (int_32 $0)
{
	CALL $204($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $163 (int_32 $0)
{
	CALL $204($0)
	return $0
}

void .FUNC $162 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0)
	$4 = int_32((*($0 + [4]) - $3) >> [4])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	$6 = ($0 + [8])
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [4]) >= (uint_32)[134217727]) ){ goto $label$5 }
	*(($2 + [24])) = $6
	$3 = [0]
	*($2 + [20]) = [0]
	$6 = ($2 + [20])
	$7 = int_32($7 >> [3])
	$5 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ($5 <= [268435456]) ){ goto $label$4 }
	CALL abort()
	
.LABEL $label$5
	*(($2 + [24])) = $6
	*($2 + [20]) = [0]
	$6 = ($2 + [20])
	$5 = [268435455]
	
.LABEL $label$4
	$3 = CALL _Znwj(($5 << [4]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	*($2 + [8]) = $3
	*(($2 + [20])) = ($3 + ($5 << [4]))
	*(($5 = ($3 + ($4 << [4])))) = [6]
	*($5 + [8]) = *($1)
	*($2 + [12]) = $5
	$7 = ($5 + [16])
	*($2 + [16]) = $7
	$4 = *($0)
	$3 = *(($0 + [4]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$7 }
	$1 = *($2 + [12])
	
.LOOP $label$8:
	$3 = ($3 + [-16])
	CALL $144(($5 + [-16]), $3)
	$1 = ($1 + [-16])
	$5 = $1
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$8 }
	*($2 + [12]) = $1
	$3 = *(($0 + [4]))
	$4 = *($0)
	goto $label$6 
	
.LABEL $label$7
	$1 = *($2 + [12])
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*((($2 + [8]) + [8])) = $3
	*($2 + [12]) = $4
	$3 = ($0 + [8])
	$5 = *($3)
	*($3) = *($6)
	*($6) = $5
	*($2 + [8]) = $4
	CALL $146(($2 + [8]))
	$global$0 = ($2 + [32])
	(unreachable)
	(unreachable)
}

void .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0)
	$4 = int_32((*($0 + [4]) - $3) >> [4])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	$6 = ($0 + [8])
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [4]) >= (uint_32)[134217727]) ){ goto $label$5 }
	*(($2 + [24])) = $6
	$3 = [0]
	*($2 + [20]) = [0]
	$6 = ($2 + [20])
	$7 = int_32($7 >> [3])
	$5 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ($5 <= [268435456]) ){ goto $label$4 }
	CALL abort()
	
.LABEL $label$5
	*(($2 + [24])) = $6
	*($2 + [20]) = [0]
	$6 = ($2 + [20])
	$5 = [268435455]
	
.LABEL $label$4
	$3 = CALL _Znwj(($5 << [4]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	*($2 + [8]) = $3
	*((($2 + [8]) + [12])) = ($3 + ($5 << [4]))
	*(($3 = ($3 + ($4 << [4]))) + [8]) = (int_64)0
	*($3) = [3]
	*($2 + [16]) = $3
	*($2 + [12]) = $3
	$5 = CALL _Znwj([12])
	CALL $220($5, $1)
	if ( ($5 == 0) ){ goto $label$6 }
	*($3 + [8]) = $5
	$7 = (*($3) + [16])
	*(($3 = ($2 + [16]))) = $7
	$1 = *($0)
	$3 = *(($0 + [4]))
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	$5 = (*($2 + [12]) + [-16])
	
.LOOP $label$9:
	$3 = ($3 + [-16])
	$4 = CALL $144($5, $3)
	$5 = ($5 + [-16])
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$9 }
	*($2 + [12]) = $4
	$3 = *(($0 + [4]))
	$1 = *($0)
	goto $label$7 
	
.LABEL $label$8
	$4 = *($2 + [12])
	
.LABEL $label$7
	*($0) = $4
	*(($0 + [4])) = $7
	*((($2 + [8]) + [8])) = $3
	*($2 + [12]) = $1
	$3 = ($0 + [8])
	$5 = *($3)
	*($3) = *($6)
	*($6) = $5
	*($2 + [8]) = $1
	CALL $146(($2 + [8]))
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$6
	CALL $248([9163], [9181], [13215], [9190])
	(unreachable)
	(unreachable)
}

void .FUNC $160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0)
	$4 = int_32((*($0 + [4]) - $3) >> [4])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	$6 = ($0 + [8])
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [4]) >= (uint_32)[134217727]) ){ goto $label$5 }
	*(($2 + [24])) = $6
	$3 = [0]
	*($2 + [20]) = [0]
	$6 = ($2 + [20])
	$7 = int_32($7 >> [3])
	$5 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ($5 <= [268435456]) ){ goto $label$4 }
	CALL abort()
	
.LABEL $label$5
	*(($2 + [24])) = $6
	*($2 + [20]) = [0]
	$6 = ($2 + [20])
	$5 = [268435455]
	
.LABEL $label$4
	$3 = CALL _Znwj(($5 << [4]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	*($2 + [8]) = $3
	*(($2 + [20])) = ($3 + ($5 << [4]))
	*(($5 = ($3 + ($4 << [4])))) = [5]
	*($5 + [8]) = *($1)
	*($2 + [12]) = $5
	$7 = ($5 + [16])
	*($2 + [16]) = $7
	$4 = *($0)
	$3 = *(($0 + [4]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$7 }
	$1 = *($2 + [12])
	
.LOOP $label$8:
	$3 = ($3 + [-16])
	CALL $144(($5 + [-16]), $3)
	$1 = ($1 + [-16])
	$5 = $1
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$8 }
	*($2 + [12]) = $1
	$3 = *(($0 + [4]))
	$4 = *($0)
	goto $label$6 
	
.LABEL $label$7
	$1 = *($2 + [12])
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*((($2 + [8]) + [8])) = $3
	*($2 + [12]) = $4
	$3 = ($0 + [8])
	$5 = *($3)
	*($3) = *($6)
	*($6) = $5
	*($2 + [8]) = $4
	CALL $146(($2 + [8]))
	$global$0 = ($2 + [32])
	(unreachable)
	(unreachable)
}

int_64 .FUNC $289 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = *($0 + [4])
	if ( ((uint_32)$2 >= (uint_32)*($0 + [104])) ){ goto $label$7 }
	*(($0 + [4])) = ($2 + [1])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)[43]) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	$3 = CALL $282($0)
	if ( ((int_32)$3 == (int_32)[43]) ){ goto $label$5 }
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)[45]) ){ goto $label$5 }
	$4 = [0]
	$2 = $3
	$5 = [9]
	if ( ((uint_32)($3 + [-48]) > (uint_32)[9]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$6 = ($0 + [4])
	$2 = *($6)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [104]))) ){ goto $label$10 }
	*($6) = ($2 + [1])
	$4 = ((int_32)$3 == (int_32)[45])
	$2 = *($2)
	$3 = ($2 + [-48])
	if ( ($1 == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	$4 = ((int_32)$3 == (int_32)[45])
	$2 = CALL $282($0)
	$3 = ($2 + [-48])
	if ( ($1 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ($3 <= [10]) ){ goto $label$8 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$1 }
	*(($2 = ($0 + [4]))) = (*($2) + [-1])
	goto $label$4 
	
.LABEL $label$8
	$5 = [9]
	if ( ((uint_32)$3 <= (uint_32)[9]) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = (int_64)-9223372036854775808
	if ( (*(($0 + [104])) == 0) ){ goto $label$2 }
	*(($2 = ($0 + [4]))) = (*($2) + [-1])
	return (int_64)-9223372036854775808
	
.LABEL $label$3
	$3 = [0]
	$8 = ($0 + [104])
	$6 = ($0 + [4])
	
.LOOP $label$12:
	$2 = ($2 + ((int_32)$3 * (int_32)[10]))
	$1 = *($6)
	if ( ((uint_32)$1 >= (uint_32)*($8)) ){ goto $label$14 }
	*($6) = ($1 + [1])
	$3 = ($2 + [-48])
	$2 = *($1)
	$1 = ($2 + [-48])
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$11 }
	goto $label$13 
	
.LABEL $label$14
	$3 = ($2 + [-48])
	$2 = CALL $282($0)
	$1 = ($2 + [-48])
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$11 }
	
.LABEL $label$13
	if ( ((int_32)$3 < (int_32)[214748364]) ){ goto $label$12 }
	
.LABEL $label$11
	$7 = (CASTING int_64)(int_32 $3)
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$15 }
	$1 = ($0 + [104])
	$3 = ($0 + [4])
	
.LOOP $label$17:
	$7 = ((int_64)(CASTING int_64)(int_32 $2) + (int_64)((int_64)$7 * (int_64)10))
	$2 = *($3)
	if ( ((uint_32)$2 >= (uint_32)*($1)) ){ goto $label$19 }
	*($3) = ($2 + [1])
	$7 = ((int_64)$7 + (int_64)-48)
	$2 = *($2)
	$6 = ($2 + [-48])
	if ( ((uint_32)$6 > (uint_32)[9]) ){ goto $label$16 }
	goto $label$18 
	
.LABEL $label$19
	$7 = ((int_64)$7 + (int_64)-48)
	$2 = CALL $282($0)
	$6 = ($2 + [-48])
	if ( ((uint_32)$6 > (uint_32)[9]) ){ goto $label$16 }
	
.LABEL $label$18
	if ( ((int_64)$7 < (int_64)92233720368547758) ){ goto $label$17 }
	
.LABEL $label$16
	if ( ((uint_32)$6 > (uint_32)[9]) ){ goto $label$15 }
	$1 = ($0 + [104])
	$3 = ($0 + [4])
	
.LOOP $label$20:
	$2 = *($3)
	if ( ((uint_32)$2 >= (uint_32)*($1)) ){ goto $label$21 }
	*($3) = ($2 + [1])
	if ( ((*($2) + [-48]) <= [10]) ){ goto $label$20 }
	goto $label$15 
	
.LABEL $label$21
	if ( ((CALL $282($0) + [-48]) <= [10]) ){ goto $label$20 }
	
.LABEL $label$15
	if ( (*(($0 + [104])) == 0) ){ goto $label$22 }
	*(($2 = ($0 + [4]))) = (*($2) + [-1])
	
.LABEL $label$22
	$7 = ( (int_64))((int_64)0 - $7) ? $7 : $4 )
	
.LABEL $label$2
	return $7
	
.LABEL $label$1
	return (int_64)-9223372036854775808
}

int_32 .FUNC $230 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0)
	$5 = ($4 & [1])
	if ( $5 ){ goto $label$5 }
	$4 = uint_32($4 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = [10]
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$6
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$10 }
	CALL $223($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	goto $label$9 
	
.LABEL $label$10
	if ( ($3 == 0) ){ goto $label$9 }
	if ( $5 ){ goto $label$8 }
	$5 = ($0 + [1])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$7
	CALL memmove($6, $2, $3)
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL memmove(($6 + $3), $6, $1)
	CALL memmove($6, ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) ), $3)
	
.LABEL $label$1
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($3 << [1])
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$11
	*($0 + [4]) = $3
	*(($5 + $3)) = [0]
	(unreachable)
	return $0
}

int_32 .FUNC $244 (int_32 $0)
{
	return $0
}

int_32 .FUNC $169 (int_32 $0)
{
	return $0
}

void .FUNC $168 (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC $245 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $279 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

void .FUNC $175 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1) = *(*($3))
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [24]) = *(*($3 + [12]))
	$3 = *($0)
	*($1 + [32]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($2 + [56]) = ($2 + [40])
	*($2 + [52]) = $2
	*($2 + [48]) = $2
	*($2 + [64]) = ($2 + [48])
	$4 = ($1 + [8])
	*($2 + [76]) = $4
	*($2 + [72]) = $1
	*($2 + [80]) = ($1 + [16])
	*($2 + [84]) = ($1 + [24])
	*($2 + [88]) = ($1 + [32])
	CALL $179(($2 + [72]), ($2 + [64]))
	$5 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($3 + [8]), (int_64)-6031097404874960384, *(*($0 + [8])), $5, $2, [40])
	if ( (uint_64)($5 <= *($3 + [16])) ){ goto $label$1 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$5 = *(($3 + [8]))
	$6 = *(*(($0 + [8])))
	$7 = *($1)
	*($2 + [72]) = *($4)
	*($1 + [48]) = CALL db_idx64_store($5, (int_64)-6031097404874960384, $6, $7, ($2 + [72]))
	$global$0 = ($2 + [96])
}

void .FUNC $242 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC $288 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_64 $25
	int_64 $26
	int_64 $27
	int_64 $28
	int_64 $29
	float_64 $30
	$4 = ($global$0 - [9520])
	$global$0 = $4
	$5 = (int_64)0
	if ( ((uint_32)$2 > (uint_32)[2]) ){ goto $label$14 }
	$6 = ($1 + [104])
	$7 = ($1 + [4])
	$8 = ($2 << [2])
	$9 = *(($8 + [25564]))
	$10 = *(($8 + [25552]))
	
.LOOP $label$15:
	$8 = *($7)
	if ( ($8 <= *($6)) ){ goto $label$17 }
	$8 = CALL $282($1)
	if ( ((uint_32)($8 + [-9]) >= (uint_32)[5]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	*($7) = ($8 + [1])
	$8 = *($8)
	if ( (($8 + [-9]) <= [5]) ){ goto $label$15 }
	
.LABEL $label$16
	if ( ((int_32)$8 == (int_32)[32]) ){ goto $label$15 }
	$11 = ((int_32)$8 == (int_32)[45])
	if ( $11 ){ goto $label$21 }
	if ( ((int_32)$8 != (int_32)[43]) ){ goto $label$20 }
	
.LABEL $label$21
	$12 = ([1] - ($11 << [1]))
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$19 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$18 
	
.LABEL $label$20
	$12 = [1]
	goto $label$18 
	
.LABEL $label$19
	$8 = CALL $282($1)
	
.LABEL $label$18
	$11 = ($8 | [32])
	if ( ((int_32)$11 != (int_32)[105]) ){ goto $label$34 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$33 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$32 
	
.LABEL $label$34
	if ( ((int_32)$11 != (int_32)[110]) ){ goto $label$22 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$31 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$30 
	
.LABEL $label$33
	$8 = CALL $282($1)
	
.LABEL $label$32
	$11 = [1]
	if ( ((int_32)($8 | [32]) != (int_32)[110]) ){ goto $label$27 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$29 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$28 
	
.LABEL $label$31
	$8 = CALL $282($1)
	
.LABEL $label$30
	if ( ((int_32)($8 | [32]) != (int_32)[97]) ){ goto $label$4 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$26 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$25 
	
.LABEL $label$29
	$8 = CALL $282($1)
	
.LABEL $label$28
	$11 = [2]
	if ( ((int_32)($8 | [32]) != (int_32)[102]) ){ goto $label$27 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$24 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$23 
	
.LABEL $label$27
	$13 = ((int_32)$3 != (int_32)[0])
	if ( ($11 == 0) ){ goto $label$22 }
	goto $label$8 
	
.LABEL $label$26
	$8 = CALL $282($1)
	
.LABEL $label$25
	if ( ((int_32)($8 | [32]) != (int_32)[110]) ){ goto $label$4 }
	$13 = ((int_32)$3 != (int_32)[0])
	$8 = *($7)
	if ( ($8 <= *($6)) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$24
	$8 = CALL $282($1)
	
.LABEL $label$23
	$11 = [3]
	if ( ((int_32)($8 | [32]) != (int_32)[105]) ){ goto $label$37 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$39 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$38 
	
.LABEL $label$39
	$8 = CALL $282($1)
	
.LABEL $label$38
	$11 = [4]
	if ( ((int_32)($8 | [32]) != (int_32)[110]) ){ goto $label$40 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$42 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$41 
	
.LABEL $label$42
	$8 = CALL $282($1)
	
.LABEL $label$41
	$11 = [5]
	if ( ((int_32)($8 | [32]) != (int_32)[105]) ){ goto $label$40 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$44 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$43 
	
.LABEL $label$44
	$8 = CALL $282($1)
	
.LABEL $label$43
	$11 = [6]
	if ( ((int_32)($8 | [32]) != (int_32)[116]) ){ goto $label$40 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$46 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$45 
	
.LABEL $label$46
	$8 = CALL $282($1)
	
.LABEL $label$45
	$11 = [7]
	if ( ((int_32)($8 | [32]) == (int_32)[121]) ){ goto $label$36 }
	
.LABEL $label$40
	if ( ($3 == 0) ){ goto $label$35 }
	
.LABEL $label$37
	$8 = *($6)
	if ( ($8 == 0) ){ goto $label$47 }
	*($7) = (*($7) + [-1])
	
.LABEL $label$47
	if ( ($11 <= [4]) ){ goto $label$36 }
	if ( ($3 == 0) ){ goto $label$36 }
	if ( ($8 == 0) ){ goto $label$36 }
	$8 = *($7)
	
.LOOP $label$48:
	$8 = ($8 + [-1])
	$11 = ($11 + [-1])
	if ( ((uint_32)$11 > (uint_32)[3]) ){ goto $label$48 }
	*($7) = $8
	
.LABEL $label$36
	CALL __extendsftf2($4, ((float_32)(CASTING float_32)(int_32 $12) * (float_32)(float_32)inf))
	$14 = *(($4 + [8]))
	$5 = *($4)
	goto $label$13 
	
.LABEL $label$35
	$13 = ((int_32)$3 != (int_32)[0])
	if ( $11 ){ goto $label$8 }
	
.LABEL $label$22
	if ( ((int_32)$8 != (int_32)[48]) ){ goto $label$50 }
	$11 = *($7)
	if ( ((uint_32)$11 >= (uint_32)*($6)) ){ goto $label$52 }
	*($7) = ($11 + [1])
	$11 = *($11)
	goto $label$51 
	
.LABEL $label$52
	$11 = CALL $282($1)
	
.LABEL $label$51
	if ( ((int_32)($11 | [32]) != (int_32)[120]) ){ goto $label$53 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$49 }
	*($7) = ($8 + [1])
	$13 = [0]
	$11 = [48]
	$8 = *($8)
	if ( ((int_32)$8 != (int_32)[48]) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$53
	if ( (*($6) == 0) ){ goto $label$50 }
	*($7) = (*($7) + [-1])
	
.LABEL $label$50
	$11 = [0]
	$18 = ($9 + $10)
	$19 = ([0] - $18)
	if ( ((int_32)$8 != (int_32)[48]) ){ goto $label$54 }
	
.LOOP $label$55:
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$56 }
	$11 = [1]
	*($7) = ($8 + [1])
	$8 = *($8)
	if ( ((int_32)$8 == (int_32)[48]) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	$11 = [1]
	$8 = CALL $282($1)
	if ( ((int_32)$8 == (int_32)[48]) ){ goto $label$55 }
	
.LABEL $label$54
	if ( ((int_32)$8 != (int_32)[46]) ){ goto $label$59 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$58 }
	*($7) = ($8 + [1])
	$16 = [48]
	$8 = *($8)
	if ( ((int_32)$8 == (int_32)[48]) ){ goto $label$57 }
	goto $label$12 
	
.LABEL $label$59
	$20 = [0]
	$5 = (int_64)0
	goto $label$11 
	
.LABEL $label$58
	$16 = [48]
	$8 = CALL $282($1)
	if ( ((int_32)$8 != (int_32)[48]) ){ goto $label$12 }
	
.LABEL $label$57
	$5 = (int_64)0
	
.LOOP $label$61:
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$62 }
	*($7) = ($8 + [1])
	$5 = ((int_64)$5 + (int_64)-1)
	$8 = *($8)
	if ( ((int_32)$8 == (int_32)$16) ){ goto $label$61 }
	goto $label$60 
	
.LABEL $label$62
	$5 = ((int_64)$5 + (int_64)-1)
	$8 = CALL $282($1)
	if ( ((int_32)$8 == (int_32)$16) ){ goto $label$61 }
	
.LABEL $label$60
	$11 = [1]
	$20 = [1]
	goto $label$11 
	
.LABEL $label$49
	$13 = [0]
	$11 = [48]
	$8 = CALL $282($1)
	if ( ((int_32)$8 == (int_32)[48]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$14
	$15 = [7]
	goto $label$1 
	
.LABEL $label$13
	$15 = [8]
	goto $label$1 
	
.LABEL $label$12
	$20 = [1]
	$5 = (int_64)0
	
.LABEL $label$11
	$21 = [0]
	*($4 + [1328]) = [0]
	$13 = ($8 + [-48])
	$16 = ((int_32)$8 == (int_32)[46])
	if ( $16 ){ goto $label$81 }
	$14 = (int_64)0
	if ( ((uint_32)$13 <= (uint_32)[9]) ){ goto $label$81 }
	$17 = [0]
	$22 = [0]
	$5 = ( $5 ? (int_64)0 : $20 )
	if ( $11 ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$81
	$14 = (int_64)0
	$23 = ($4 + [9504])
	$22 = [0]
	$17 = [0]
	$21 = [0]
	
.LOOP $label$82:
	if ( ($16 & [1]) ){ goto $label$86 }
	$14 = ((int_64)$14 + (int_64)1)
	if ( ((int_32)$17 > (int_32)[2044]) ){ goto $label$87 }
	$16 = ((int_32)$8 != (int_32)[48])
	$24 = (CASTING uint_32)(uint_64 $14)
	$11 = (($4 + [1328]) + ($17 << [2]))
	if ( ($22 == 0) ){ goto $label$88 }
	$13 = (($8 + ((int_32)*($11) * (int_32)[10])) + [-48])
	
.LABEL $label$88
	$21 = ( $24 ? $21 : $16 )
	*($11) = $13
	$11 = [1]
	$8 = ((int_32)$8 == (int_32)[9])
	$8 = ($22 + [1])
	$22 = ( [0] ? $8 : $8 )
	$17 = ($17 + $8)
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$84 }
	goto $label$85 
	
.LABEL $label$87
	if ( ((int_32)$8 == (int_32)[48]) ){ goto $label$89 }
	*($23) = (*($23) | [1])
	$21 = [18396]
	
.LABEL $label$89
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$84 }
	goto $label$85 
	
.LABEL $label$86
	if ( $20 ){ goto $label$78 }
	$5 = $14
	$20 = [1]
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$84 }
	
.LABEL $label$85
	*($7) = ($8 + [1])
	$8 = *($8)
	$13 = ($8 + [-48])
	$16 = ((int_32)$8 == (int_32)[46])
	if ( ($16 == 0) ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$84
	$8 = CALL $282($1)
	$13 = ($8 + [-48])
	$16 = ((int_32)$8 == (int_32)[46])
	if ( $16 ){ goto $label$82 }
	
.LABEL $label$83
	if ( ($13 <= [10]) ){ goto $label$82 }
	$5 = ( $5 ? $14 : $20 )
	if ( ($11 == 0) ){ goto $label$79 }
	
.LABEL $label$80
	if ( ((int_32)($8 | [32]) != (int_32)[101]) ){ goto $label$79 }
	$25 = CALL $289($1, $3)
	if ( ((int_64)$25 != (int_64)-9223372036854775808) ){ goto $label$90 }
	if ( ($3 == 0) ){ goto $label$77 }
	$25 = (int_64)0
	if ( (*($6) == 0) ){ goto $label$90 }
	*($7) = (*($7) + [-1])
	
.LABEL $label$90
	$5 = ((int_64)$25 + (int_64)$5)
	$7 = *($4 + [1328])
	if ( $7 ){ goto $label$74 }
	goto $label$63 
	
.LABEL $label$79
	$11 = ((int_32)$11 != (int_32)[0])
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$75 }
	if ( (*($6) == 0) ){ goto $label$75 }
	goto $label$76 
	
.LABEL $label$78
	$11 = ((int_32)$11 != (int_32)[0])
	if ( *($6) ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$77
	$15 = [6]
	goto $label$1 
	
.LABEL $label$76
	*($7) = (*($7) + [-1])
	
.LABEL $label$75
	if ( ($11 == 0) ){ goto $label$73 }
	$7 = *($4 + [1328])
	if ( ($7 == 0) ){ goto $label$63 }
	
.LABEL $label$74
	if ( ((int_64)$14 > (int_64)9) ){ goto $label$91 }
	if ( ((int_64)$5 != (int_64)$14) ){ goto $label$91 }
	if ( (($2 + [-1]) <= [2]) ){ goto $label$71 }
	if ( (uint_32($7 >> $10) == 0) ){ goto $label$71 }
	
.LABEL $label$91
	if ( ((int_64)$5 <= (int_64)(CASTING int_64)(int_32 ((int_32)$9 / (int_32)[-2]))) ){ goto $label$72 }
	CALL __floatsitf(($4 + [544]), $12)
	CALL __multf3(($4 + [528]), *($4 + [544]), *((($4 + [544]) + [8])), (int_64)-1, (int_64)9223090561878065151)
	CALL __multf3(($4 + [512]), *($4 + [528]), *((($4 + [528]) + [8])), (int_64)-1, (int_64)9223090561878065151)
	*(CALL $247()) = [34]
	$14 = *((($4 + [512]) + [8]))
	$5 = *($4 + [512])
	goto $label$68 
	
.LABEL $label$73
	*(CALL $247()) = [22]
	$15 = [6]
	goto $label$1 
	
.LABEL $label$72
	if ( ((int_64)$5 >= (int_64)(CASTING int_64)(int_32 ($9 + [-226]))) ){ goto $label$70 }
	CALL __floatsitf(($4 + [592]), $12)
	CALL __multf3(($4 + [576]), *($4 + [592]), *((($4 + [592]) + [8])), (int_64)0, (int_64)281474976710656)
	CALL __multf3(($4 + [560]), *($4 + [576]), *((($4 + [576]) + [8])), (int_64)0, (int_64)281474976710656)
	*(CALL $247()) = [34]
	$14 = *((($4 + [560]) + [8]))
	$5 = *($4 + [560])
	goto $label$67 
	
.LABEL $label$71
	CALL __floatunsitf(($4 + [480]), $7)
	CALL __floatsitf(($4 + [496]), $12)
	CALL __multf3(($4 + [464]), *($4 + [496]), *((($4 + [496]) + [8])), *($4 + [480]), *((($4 + [480]) + [8])))
	$14 = *((($4 + [464]) + [8]))
	$5 = *($4 + [464])
	goto $label$69 
	
.LABEL $label$70
	if ( ($22 == 0) ){ goto $label$92 }
	if ( ((int_32)$22 > (int_32)[8]) ){ goto $label$93 }
	$8 = ($22 + [-1])
	$6 = (($4 + [1328]) + ($17 << [2]))
	$7 = *($6)
	
.LOOP $label$94:
	$7 = ((int_32)$7 * (int_32)[10])
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[8]) ){ goto $label$94 }
	*($6) = $7
	
.LABEL $label$93
	$17 = ($17 + [1])
	
.LABEL $label$92
	$13 = (CASTING uint_32)(uint_64 $5)
	if ( ((int_32)$21 >= (int_32)[9]) ){ goto $label$97 }
	if ( ((int_32)$21 > (int_32)$13) ){ goto $label$97 }
	if ( ((int_32)$13 > (int_32)[17]) ){ goto $label$97 }
	if ( ((int_32)$13 != (int_32)[9]) ){ goto $label$98 }
	CALL __floatunsitf(($4 + [624]), *($4 + [1328]))
	CALL __floatsitf(($4 + [640]), $12)
	CALL __multf3(($4 + [608]), *($4 + [640]), *((($4 + [640]) + [8])), *($4 + [624]), *((($4 + [624]) + [8])))
	$14 = *((($4 + [608]) + [8]))
	$5 = *($4 + [608])
	goto $label$66 
	
.LABEL $label$98
	if ( ((int_32)$13 > (int_32)[8]) ){ goto $label$99 }
	CALL __floatunsitf(($4 + [704]), *($4 + [1328]))
	CALL __floatsitf(($4 + [720]), $12)
	CALL __multf3(($4 + [688]), *($4 + [720]), *((($4 + [720]) + [8])), *($4 + [704]), *((($4 + [704]) + [8])))
	CALL __floatsitf(($4 + [672]), *(((([8] - $13) << [2]) + [25520])))
	CALL __divtf3(($4 + [656]), *($4 + [688]), *((($4 + [688]) + [8])), *($4 + [672]), *((($4 + [672]) + [8])))
	$14 = *((($4 + [656]) + [8]))
	$5 = *($4 + [656])
	goto $label$65 
	
.LABEL $label$99
	$7 = *($4 + [1328])
	$8 = (($10 + ((int_32)$13 * (int_32)[-3])) + [27])
	if ( ((int_32)$8 > (int_32)[30]) ){ goto $label$96 }
	if ( (uint_32($7 >> $8) == 0) ){ goto $label$96 }
	
.LABEL $label$97
	$8 = ($17 + [1])
	$7 = (($4 + [1328]) + ($8 << [2]))
	
.LOOP $label$100:
	$8 = ($8 + [-1])
	$6 = ($7 + [-8])
	$11 = ($7 + [-4])
	$7 = $11
	if ( (*($6) == 0) ){ goto $label$100 }
	$2 = [0]
	$7 = ((int_32)$13 % (int_32)[9])
	if ( ($7 == 0) ){ goto $label$104 }
	$24 = ( $7 ? ($7 + [9]) : ((int_32)$13 > (int_32)[-1]) )
	if ( ($8 == 0) ){ goto $label$103 }
	$17 = *(((([8] - $24) << [2]) + [25520]))
	$21 = ((int_32)[1000000000] / (int_32)$17)
	$16 = [0]
	$7 = ($4 + [1328])
	$1 = [0]
	$6 = [0]
	
.LOOP $label$105:
	$20 = *($7)
	$3 = ((uint_32)$20 / (uint_32)$17)
	$16 = ($3 + $16)
	*($7) = $16
	$22 = ((int_32)$1 == (int_32)$6)
	$16 = ($22 & ($16 == 0))
	$1 = ($1 + [1])
	$6 = ( ($1 & [2047]) ? $6 : $16 )
	$13 = ( ($13 + [-9]) ? $13 : $16 )
	$7 = ($7 + [4])
	$16 = ((int_32)($20 - ((int_32)$3 * (int_32)$17)) * (int_32)$21)
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$105 }
	if ( ($16 == 0) ){ goto $label$102 }
	*($11) = $16
	$8 = ($8 + [1])
	goto $label$102 
	
.LABEL $label$104
	$6 = [0]
	goto $label$101 
	
.LABEL $label$103
	$6 = [0]
	$8 = [0]
	
.LABEL $label$102
	$13 = (([9] - $24) + $13)
	
.LABEL $label$101
	
.LOOP $label$106:
	$17 = (($4 + [1328]) + ($6 << [2]))
	
.LOOP $label$107:
	if ( ((int_32)$13 < (int_32)[36]) ){ goto $label$108 }
	if ( ((int_32)$13 != (int_32)[36]) ){ goto $label$95 }
	if ( ((uint_32)*($17) > (uint_32)[10384592]) ){ goto $label$95 }
	
.LABEL $label$108
	$16 = ($8 + [2047])
	$1 = [0]
	$11 = $8
	
.LOOP $label$109:
	$8 = $11
	$7 = ($16 & [2047])
	$11 = (($4 + [1328]) + ($7 << [2]))
	$5 = ((int_64)((int_64)*($11) << (int_64)29) + (int_64)(CASTING uint_64)(uint_32 $1))
	if ( (uint_64)($5 <= (int_64)1000000001) ){ goto $label$111 }
	$14 = ((uint_64)$5 / (uint_64)(int_64)1000000000)
	$5 = (int_64))($5 - ((int_64)$14 * (int_64)1000000000))
	$1 = (CASTING uint_32)(uint_64 $14)
	goto $label$110 
	
.LABEL $label$111
	$1 = [0]
	
.LABEL $label$110
	$16 = (CASTING uint_32)(uint_64 $5)
	*($11) = $16
	$11 = ( $8 ? ( $8 ? ( $8 ? $7 : $16 ) : ((int_32)$7 == (int_32)$6) ) : ((int_32)$7 != (int_32)(($8 + [-1]) & [2047])) )
	$16 = ($7 + [-1])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$109 }
	$2 = ($2 + [-29])
	if ( ($1 == 0) ){ goto $label$107 }
	$6 = (($6 + [-1]) & [2047])
	if ( ((int_32)$6 != (int_32)$11) ){ goto $label$112 }
	$8 = (($11 + [-1]) & [2047])
	*(($7 = (($4 + [1328]) + ((($11 + [2046]) & [2047]) << [2])))) = (*($7) | *((($4 + [1328]) + ($8 << [2]))))
	
.LABEL $label$112
	$13 = ($13 + [9])
	*((($4 + [1328]) + ($6 << [2]))) = $1
	goto $label$106 
	
.LABEL $label$96
	CALL __floatunsitf(($4 + [784]), $7)
	CALL __floatsitf(($4 + [800]), $12)
	CALL __multf3(($4 + [768]), *($4 + [800]), *((($4 + [800]) + [8])), *($4 + [784]), *((($4 + [784]) + [8])))
	CALL __floatsitf(($4 + [752]), *((($13 << [2]) + [25480])))
	CALL __multf3(($4 + [736]), *($4 + [768]), *((($4 + [768]) + [8])), *($4 + [752]), *((($4 + [752]) + [8])))
	$14 = *((($4 + [736]) + [8]))
	$5 = *($4 + [736])
	goto $label$64 
	
.LABEL $label$95
	
.LOOP $label$113:
	$22 = (($8 + [1]) & [2047])
	$21 = (($4 + [1328]) + ((($8 + [-1]) & [2047]) << [2]))
	
.LOOP $label$117:
	$1 = ( [9] ? [1] : ((int_32)$13 > (int_32)[45]) )
	
.LOOP $label$119:
	$7 = $6
	$6 = ($7 & [2047])
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$121 }
	$11 = *((($4 + [1328]) + ($6 << [2])))
	if ( ($11 <= [10384593]) ){ goto $label$121 }
	if ( ((int_32)$11 != (int_32)[10384593]) ){ goto $label$120 }
	$11 = (($7 + [1]) & [2047])
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$121 }
	$11 = *((($4 + [1328]) + ($11 << [2])))
	if ( ($11 <= [717069655]) ){ goto $label$121 }
	if ( ((int_32)$11 != (int_32)[717069655]) ){ goto $label$120 }
	$11 = (($7 + [2]) & [2047])
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$121 }
	$11 = *((($4 + [1328]) + ($11 << [2])))
	if ( ($11 <= [257060992]) ){ goto $label$121 }
	if ( ((int_32)$11 != (int_32)[257060992]) ){ goto $label$120 }
	$11 = (($7 + [3]) & [2047])
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$121 }
	$11 = *((($4 + [1328]) + ($11 << [2])))
	if ( ($11 <= [658440191]) ){ goto $label$121 }
	if ( ((int_32)$13 != (int_32)[36]) ){ goto $label$120 }
	if ( ((int_32)$11 != (int_32)[658440191]) ){ goto $label$120 }
	goto $label$116 
	
.LABEL $label$121
	if ( ((int_32)$13 == (int_32)[36]) ){ goto $label$118 }
	
.LABEL $label$120
	$2 = ($2 + $1)
	$6 = $8
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$119 }
	$20 = uint_32([1000000000] >> $1)
	$3 = ((int_32)([-1] << $1) ^ (int_32)[-1])
	$11 = [0]
	$6 = $7
	
.LOOP $label$122:
	$16 = *($16)
	$11 = (uint_32($16 >> $1) + $11)
	*(($16 = (($4 + [1328]) + ($7 << [2])))) = $11
	$17 = ((int_32)$7 == (int_32)$6)
	$11 = ($17 & ($11 == 0))
	$7 = (($7 + [1]) & [2047])
	$6 = ( $7 ? $6 : $11 )
	$13 = ( ($13 + [-9]) ? $13 : $11 )
	$11 = ((int_32)($16 & $3) * (int_32)$20)
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$122 }
	if ( ($11 == 0) ){ goto $label$117 }
	if ( ((int_32)$22 != (int_32)$6) ){ goto $label$114 }
	*($21) = (*($21) | [1])
	$6 = $22
	goto $label$117 
	
.LABEL $label$118
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$116 }
	*(((($4 + [1328]) + ($22 << [2])) + [-4])) = [0]
	$6 = $8
	goto $label$115 
	
.LABEL $label$116
	$22 = $8
	
.LABEL $label$115
	CALL __floatunsitf(($4 + [1312]), *((($4 + [1328]) + ($6 << [2]))))
	$5 = *((($4 + [1312]) + [8]))
	$14 = *($4 + [1312])
	$8 = (($7 + [1]) & [2047])
	if ( ((int_32)$8 != (int_32)$22) ){ goto $label$123 }
	*(((($4 + [1328]) + (($22 = (($7 + [2]) & [2047])) << [2])) + [-4])) = [0]
	
.LABEL $label$123
	CALL __multf3(($4 + [1296]), $14, $5, (int_64)0, (int_64)4619810130798575616)
	CALL __floatunsitf(($4 + [1280]), *((($4 + [1328]) + ($8 << [2]))))
	CALL __addtf3(($4 + [1264]), *($4 + [1296]), *((($4 + [1296]) + [8])), *($4 + [1280]), *((($4 + [1280]) + [8])))
	$5 = *((($4 + [1264]) + [8]))
	$14 = *($4 + [1264])
	$8 = (($7 + [2]) & [2047])
	if ( ((int_32)$8 != (int_32)$22) ){ goto $label$124 }
	*(((($4 + [1328]) + (($22 = (($7 + [3]) & [2047])) << [2])) + [-4])) = [0]
	
.LABEL $label$124
	CALL __multf3(($4 + [1248]), $14, $5, (int_64)0, (int_64)4619810130798575616)
	CALL __floatunsitf(($4 + [1232]), *((($4 + [1328]) + ($8 << [2]))))
	CALL __addtf3(($4 + [1216]), *($4 + [1248]), *((($4 + [1248]) + [8])), *($4 + [1232]), *((($4 + [1232]) + [8])))
	$14 = *((($4 + [1216]) + [8]))
	$25 = *($4 + [1216])
	$8 = (($7 + [3]) & [2047])
	if ( ((int_32)$8 != (int_32)$22) ){ goto $label$125 }
	*(((($4 + [1328]) + (($22 = (($7 + [4]) & [2047])) << [2])) + [-4])) = [0]
	
.LABEL $label$125
	$5 = (int_64)0
	CALL __multf3(($4 + [1200]), $25, $14, (int_64)0, (int_64)4619810130798575616)
	CALL __floatunsitf(($4 + [1184]), *((($4 + [1328]) + ($8 << [2]))))
	CALL __addtf3(($4 + [1168]), *($4 + [1200]), *((($4 + [1200]) + [8])), *($4 + [1184]), *((($4 + [1184]) + [8])))
	CALL __floatsitf(($4 + [1152]), $12)
	CALL __multf3(($4 + [1136]), *($4 + [1168]), *((($4 + [1168]) + [8])), *($4 + [1152]), *((($4 + [1152]) + [8])))
	$14 = *((($4 + [1136]) + [8]))
	$25 = *($4 + [1136])
	$11 = ((int_32)$8 < (int_32)$10)
	$8 = (($2 - $9) + [113])
	$6 = ( ( $8 ? [0] : ((int_32)$8 > (int_32)[0]) ) ? $10 : $11 )
	if ( ((int_32)$6 >= (int_32)[113]) ){ goto $label$127 }
	CALL __extenddftf2(($4 + [1088]), CALL $283((float_64)1, ([225] - $6)))
	CALL $284(($4 + [1120]), *($4 + [1088]), *((($4 + [1088]) + [8])), $25, $14)
	$26 = *($4 + [1128])
	$28 = *($4 + [1120])
	CALL __extenddftf2(($4 + [1072]), CALL $283((float_64)1, ([113] - $6)))
	CALL $285(($4 + [1104]), $25, $14, *($4 + [1072]), *((($4 + [1072]) + [8])))
	$27 = *($4 + [1112])
	$5 = *($4 + [1104])
	CALL __subtf3(($4 + [1056]), $25, $14, $5, $27)
	CALL __addtf3(($4 + [1040]), $28, $26, *($4 + [1056]), *((($4 + [1056]) + [8])))
	$14 = *((($4 + [1040]) + [8]))
	$25 = *($4 + [1040])
	goto $label$126 
	
.LABEL $label$127
	$27 = (int_64)0
	$28 = (int_64)0
	$26 = (int_64)0
	
.LABEL $label$126
	$1 = ($2 + [113])
	$16 = (($7 + [4]) & [2047])
	if ( ((int_32)$16 == (int_32)$22) ){ goto $label$128 }
	$16 = *((($4 + [1328]) + ($16 << [2])))
	if ( ((uint_32)$16 > (uint_32)[499999999]) ){ goto $label$130 }
	if ( $16 ){ goto $label$131 }
	if ( ((int_32)(($7 + [5]) & [2047]) == (int_32)$22) ){ goto $label$129 }
	
.LABEL $label$131
	CALL __extenddftf2(($4 + [928]), ((float_64)(CASTING float_64)(int_32 $12) * (float_64)(float_64)0.25))
	CALL __addtf3(($4 + [912]), $5, $27, *($4 + [928]), *((($4 + [928]) + [8])))
	$27 = *((($4 + [912]) + [8]))
	$5 = *($4 + [912])
	goto $label$129 
	
.LABEL $label$130
	if ( ((int_32)$16 != (int_32)[500000000]) ){ goto $label$133 }
	$30 = (CASTING float_64)(int_32 $12)
	if ( ((int_32)(($7 + [5]) & [2047]) != (int_32)$22) ){ goto $label$132 }
	CALL __extenddftf2(($4 + [960]), ((float_64)$30 * (float_64)(float_64)0.5))
	CALL __addtf3(($4 + [944]), $5, $27, *($4 + [960]), *((($4 + [960]) + [8])))
	$27 = *((($4 + [944]) + [8]))
	$5 = *($4 + [944])
	goto $label$129 
	
.LABEL $label$133
	CALL __extenddftf2(($4 + [1024]), ((float_64)(CASTING float_64)(int_32 $12) * (float_64)(float_64)0.75))
	CALL __addtf3(($4 + [1008]), $5, $27, *($4 + [1024]), *((($4 + [1024]) + [8])))
	$27 = *((($4 + [1008]) + [8]))
	$5 = *($4 + [1008])
	goto $label$129 
	
.LABEL $label$132
	CALL __extenddftf2(($4 + [992]), ((float_64)$30 * (float_64)(float_64)0.75))
	CALL __addtf3(($4 + [976]), $5, $27, *($4 + [992]), *((($4 + [992]) + [8])))
	$27 = *((($4 + [976]) + [8]))
	$5 = *($4 + [976])
	
.LABEL $label$129
	if ( ((int_32)([113] - $6) < (int_32)[2]) ){ goto $label$128 }
	CALL $285(($4 + [896]), $5, $27, (int_64)0, (int_64)4611404543450677248)
	if ( CALL __netf2(*($4 + [896]), *($4 + [904]), (int_64)0, (int_64)0) ){ goto $label$128 }
	CALL __addtf3(($4 + [880]), $5, $27, (int_64)0, (int_64)4611404543450677248)
	$27 = *(($4 + [888]))
	$5 = *($4 + [880])
	
.LABEL $label$128
	CALL __addtf3(($4 + [864]), $25, $14, $5, $27)
	CALL __subtf3(($4 + [848]), *($4 + [864]), *((($4 + [864]) + [8])), $28, $26)
	$14 = *((($4 + [848]) + [8]))
	$25 = *($4 + [848])
	if ( ((int_32)($1 & [2147483647]) <= (int_32)([-2] - $18)) ){ goto $label$134 }
	if ( ((int_32)((float_64)CALL $286(CALL $fimport$45($25, $14)) >= (float_64)(float_64)1038459371706965525706099e10) ^ (int_32)[1]) ){ goto $label$135 }
	CALL __multf3(($4 + [832]), $25, $14, (int_64)0, (int_64)4611123068473966592)
	$11 = (((int_32)$8 < (int_32)$10) & ((int_32)(($6 + $9) + [-113]) != (int_32)$2))
	$2 = ($2 + [1])
	$14 = *(($4 + [840]))
	$25 = *($4 + [832])
	
.LABEL $label$135
	$7 = CALL __netf2($5, $27, (int_64)0, (int_64)0)
	if ( ((int_32)($2 + [110]) > (int_32)$19) ){ goto $label$136 }
	if ( ((((int_32)$7 != (int_32)[0]) & $11) == 0) ){ goto $label$134 }
	
.LABEL $label$136
	*(CALL $247()) = [34]
	
.LABEL $label$134
	CALL $287(($4 + [816]), $25, $14, $2)
	$14 = *($4 + [824])
	$5 = *($4 + [816])
	$15 = [8]
	goto $label$1 
	
.LABEL $label$114
	*((($4 + [1328]) + ($8 << [2]))) = $11
	$8 = $22
	goto $label$113 
	
.LABEL $label$69
	$15 = [8]
	goto $label$1 
	
.LABEL $label$68
	$15 = [8]
	goto $label$1 
	
.LABEL $label$67
	$15 = [8]
	goto $label$1 
	
.LABEL $label$66
	$15 = [8]
	goto $label$1 
	
.LABEL $label$65
	$15 = [8]
	goto $label$1 
	
.LABEL $label$64
	$15 = [8]
	goto $label$1 
	
.LABEL $label$63
	CALL __extenddftf2(($4 + [448]), ((float_64)(CASTING float_64)(int_32 $12) * (float_64)(float_64)0))
	$14 = *(($4 + [456]))
	$5 = *($4 + [448])
	$15 = [8]
	goto $label$1 
	
.LABEL $label$10
	
.LOOP $label$137:
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$138 }
	$13 = [1]
	*($7) = ($8 + [1])
	$8 = *($8)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$137 }
	goto $label$9 
	
.LABEL $label$138
	$13 = [1]
	$8 = CALL $282($1)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$137 }
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)[46]) ){ goto $label$143 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$142 }
	*($7) = ($8 + [1])
	$11 = [48]
	$14 = (int_64)0
	$8 = *($8)
	if ( ((int_32)$8 != (int_32)[48]) ){ goto $label$141 }
	goto $label$140 
	
.LABEL $label$143
	$14 = (int_64)0
	$17 = [0]
	goto $label$139 
	
.LABEL $label$142
	$11 = [48]
	$14 = (int_64)0
	$8 = CALL $282($1)
	if ( ((int_32)$8 == (int_32)[48]) ){ goto $label$140 }
	
.LABEL $label$141
	$17 = [1]
	goto $label$139 
	
.LABEL $label$140
	
.LOOP $label$145:
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$146 }
	*($7) = ($8 + [1])
	$14 = ((int_64)$14 + (int_64)-1)
	$8 = *($8)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$145 }
	goto $label$144 
	
.LABEL $label$146
	$14 = ((int_64)$14 + (int_64)-1)
	$8 = CALL $282($1)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$145 }
	
.LABEL $label$144
	$17 = [1]
	$13 = [1]
	
.LABEL $label$139
	$26 = (int_64)4611404543450677248
	$2 = [0]
	$25 = (int_64)0
	$27 = (int_64)0
	$28 = (int_64)0
	$20 = [0]
	$5 = (int_64)0
	$11 = ($8 | [32])
	$16 = ($8 + [-48])
	if ( ((uint_32)$16 >= (uint_32)[10]) ){ goto $label$147 }
	$15 = [20]
	goto $label$1 
	
.LABEL $label$147
	$15 = [27]
	goto $label$1 
	
.LABEL $label$8
	if ( ((int_32)$11 != (int_32)[3]) ){ goto $label$4 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$6 }
	
.LABEL $label$7
	*($7) = ($8 + [1])
	if ( ((int_32)*($8) == (int_32)[40]) ){ goto $label$5 }
	goto $label$2 
	
.LABEL $label$6
	if ( ((int_32)CALL $282($1) != (int_32)[40]) ){ goto $label$2 }
	
.LABEL $label$5
	$8 = [1]
	$11 = *($7)
	if ( ($11 <= *($6)) ){ goto $label$3 }
	$15 = [15]
	goto $label$1 
	
.LABEL $label$4
	if ( (*($6) == 0) ){ goto $label$148 }
	*($7) = (*($7) + [-1])
	
.LABEL $label$148
	*(CALL $247()) = [22]
	$15 = [6]
	goto $label$1 
	
.LABEL $label$3
	$15 = [18]
	goto $label$1 
	
.LABEL $label$2
	$14 = (int_64)9223231299366420480
	if ( (*($6) == 0) ){ goto $label$149 }
	*($7) = (*($7) + [-1])
	$15 = [8]
	goto $label$1 
	
.LABEL $label$149
	$15 = [8]
	
.LABEL $label$1
	
.LOOP $label$150:
	goto $label$276 
	
.LABEL $label$279
	$11 = CALL $282($1)
	$16 = ($11 + [-65])
	if ( (($11 + [-48]) <= [10]) ){ goto $label$203 }
	$15 = [16]
	goto $label$150 
	
.LABEL $label$278
	if ( ($16 <= [26]) ){ goto $label$202 }
	$15 = [17]
	goto $label$150 
	
.LABEL $label$277
	$16 = ($11 + [-97])
	if ( ((int_32)$11 == (int_32)[95]) ){ goto $label$201 }
	$15 = [0]
	goto $label$150 
	
.LABEL $label$276
	if ( ((uint_32)$16 >= (uint_32)[26]) ){ goto $label$200 }
	$15 = [14]
	goto $label$150 
	
.LABEL $label$275
	$8 = ($8 + [1])
	$11 = *($7)
	if ( ((uint_32)$11 >= (uint_32)*($6)) ){ goto $label$204 }
	$15 = [18]
	goto $label$150 
	
.LABEL $label$274
	*($7) = ($11 + [1])
	$11 = *($11)
	$16 = ($11 + [-65])
	if ( ((uint_32)($11 + [-48]) >= (uint_32)[10]) ){ goto $label$184 }
	goto $label$185 
	
.LABEL $label$273
	$14 = (int_64)9223231299366420480
	if ( ((int_32)$11 == (int_32)[41]) ){ goto $label$199 }
	$15 = [2]
	goto $label$150 
	
.LABEL $label$272
	$6 = *($6)
	if ( ($6 == 0) ){ goto $label$198 }
	$15 = [3]
	goto $label$150 
	
.LABEL $label$271
	*($7) = (*($7) + [-1])
	$15 = [4]
	goto $label$150 
	
.LABEL $label$270
	if ( ($13 == 0) ){ goto $label$197 }
	$15 = [9]
	goto $label$150 
	
.LABEL $label$269
	if ( ($8 == 0) ){ goto $label$188 }
	$15 = [10]
	goto $label$150 
	
.LABEL $label$268
	if ( ($6 == 0) ){ goto $label$187 }
	$15 = [11]
	goto $label$150 
	
.LABEL $label$267
	$1 = *($7)
	$6 = [0]
	$15 = [12]
	goto $label$150 
	
.LABEL $label$266
	$6 = ($6 + [1])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$186 }
	$15 = [13]
	goto $label$150 
	
.LABEL $label$265
	*($7) = ($1 - $6)
	goto $label$189 
	
.LABEL $label$264
	*(CALL $247()) = [22]
	goto $label$195 
	
.LABEL $label$263
	$5 = (int_64)0
	CALL $281($1, (int_64)0)
	$15 = [7]
	goto $label$150 
	
.LABEL $label$262
	$14 = (int_64)0
	$15 = [8]
	goto $label$150 
	
.LABEL $label$261
	*($0) = $5
	*($0 + [8]) = $14
	$global$0 = ($4 + [9520])
	return 
	
.LABEL $label$260
	if ( ((int_32)$8 != (int_32)[46]) ){ goto $label$205 }
	$15 = [69]
	goto $label$150 
	
.LABEL $label$259
	if ( $17 ){ goto $label$174 }
	$15 = [70]
	goto $label$150 
	
.LABEL $label$258
	$17 = [1]
	$14 = $5
	$8 = *($7)
	if ( ($8 <= *($6)) ){ goto $label$207 }
	$15 = [26]
	goto $label$150 
	
.LABEL $label$257
	$8 = CALL $282($1)
	$11 = ($8 | [32])
	$16 = ($8 + [-48])
	if ( ((uint_32)$16 >= (uint_32)[10]) ){ goto $label$206 }
	$15 = [20]
	goto $label$150 
	
.LABEL $label$256
	$8 = ( ($11 + [-87]) ? $16 : ((int_32)$8 > (int_32)[57]) )
	if ( ((int_64)$5 > (int_64)7) ){ goto $label$181 }
	$15 = [68]
	goto $label$150 
	
.LABEL $label$255
	$2 = ($8 + ($2 << [4]))
	goto $label$176 
	
.LABEL $label$254
	if ( ((int_64)$5 > (int_64)28) ){ goto $label$180 }
	$15 = [67]
	goto $label$150 
	
.LABEL $label$253
	CALL __multf3(($4 + [48]), $28, $26, (int_64)0, (int_64)4610278643543834624)
	CALL __floatsitf(($4 + [64]), $8)
	$26 = *((($4 + [48]) + [8]))
	$28 = *($4 + [48])
	CALL __multf3(($4 + [32]), $28, $26, *($4 + [64]), *((($4 + [64]) + [8])))
	CALL __addtf3(($4 + [16]), $25, $27, *($4 + [32]), *((($4 + [32]) + [8])))
	$27 = *((($4 + [16]) + [8]))
	$25 = *($4 + [16])
	goto $label$177 
	
.LABEL $label$252
	if ( $20 ){ goto $label$179 }
	$15 = [23]
	goto $label$150 
	
.LABEL $label$251
	if ( ($8 == 0) ){ goto $label$178 }
	$15 = [24]
	goto $label$150 
	
.LABEL $label$250
	CALL __multf3(($4 + [96]), $28, $26, (int_64)0, (int_64)4611123068473966592)
	CALL __addtf3(($4 + [80]), $25, $27, *($4 + [96]), *((($4 + [96]) + [8])))
	$27 = *((($4 + [80]) + [8]))
	$20 = [1]
	$25 = *($4 + [80])
	$15 = [25]
	goto $label$150 
	
.LABEL $label$249
	$5 = ((int_64)$5 + (int_64)1)
	$13 = [1]
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$175 }
	$15 = [66]
	goto $label$150 
	
.LABEL $label$248
	*($7) = ($8 + [1])
	$8 = *($8)
	$11 = ($8 | [32])
	$16 = ($8 + [-48])
	if ( ($16 <= [10]) ){ goto $label$208 }
	$15 = [27]
	goto $label$150 
	
.LABEL $label$247
	if ( ((int_32)$8 == (int_32)[46]) ){ goto $label$183 }
	$15 = [28]
	goto $label$150 
	
.LABEL $label$246
	if ( ((uint_32)($11 + [-97]) <= (uint_32)[5]) ){ goto $label$182 }
	$15 = [29]
	goto $label$150 
	
.LABEL $label$245
	if ( ($13 == 0) ){ goto $label$173 }
	$15 = [30]
	goto $label$150 
	
.LABEL $label$244
	if ( ((int_64)$5 > (int_64)7) ){ goto $label$171 }
	$15 = [56]
	goto $label$150 
	
.LABEL $label$243
	$26 = ((int_64)$5 + (int_64)-1)
	$15 = [57]
	goto $label$150 
	
.LABEL $label$242
	$2 = ($2 << [4])
	$26 = ((int_64)$26 + (int_64)1)
	if ( ((int_64)$26 < (int_64)7) ){ goto $label$172 }
	$15 = [31]
	goto $label$150 
	
.LABEL $label$241
	if ( ((int_32)$11 != (int_32)[112]) ){ goto $label$170 }
	$15 = [52]
	goto $label$150 
	
.LABEL $label$240
	$26 = CALL $289($1, $3)
	if ( ((int_64)$26 != (int_64)-9223372036854775808) ){ goto $label$168 }
	$15 = [53]
	goto $label$150 
	
.LABEL $label$239
	if ( ($3 == 0) ){ goto $label$196 }
	$15 = [54]
	goto $label$150 
	
.LABEL $label$238
	$26 = (int_64)0
	if ( (*($6) == 0) ){ goto $label$167 }
	$15 = [55]
	goto $label$150 
	
.LABEL $label$237
	*($7) = (*($7) + [-1])
	if ( $2 ){ goto $label$165 }
	$15 = [51]
	goto $label$150 
	
.LABEL $label$236
	CALL __extenddftf2(($4 + [128]), ((float_64)(CASTING float_64)(int_32 $12) * (float_64)(float_64)0))
	$14 = *(($4 + [136]))
	$5 = *($4 + [128])
	goto $label$191 
	
.LABEL $label$235
	$8 = *($6)
	if ( ($8 == 0) ){ goto $label$155 }
	$15 = [59]
	goto $label$150 
	
.LABEL $label$234
	*($7) = (*($7) + [-1])
	$15 = [60]
	goto $label$150 
	
.LABEL $label$233
	if ( ($3 == 0) ){ goto $label$154 }
	$15 = [61]
	goto $label$150 
	
.LABEL $label$232
	if ( ($8 == 0) ){ goto $label$153 }
	$15 = [62]
	goto $label$150 
	
.LABEL $label$231
	$8 = *($7)
	*($7) = ($8 + [-1])
	if ( ($17 == 0) ){ goto $label$152 }
	$15 = [63]
	goto $label$150 
	
.LABEL $label$230
	*($7) = ($8 + [-2])
	goto $label$151 
	
.LABEL $label$229
	$26 = (int_64)0
	if ( (*($6) == 0) ){ goto $label$169 }
	$15 = [33]
	goto $label$150 
	
.LABEL $label$228
	*($7) = (*($7) + [-1])
	$15 = [34]
	goto $label$150 
	
.LABEL $label$227
	if ( ($2 == 0) ){ goto $label$166 }
	$15 = [35]
	goto $label$150 
	
.LABEL $label$226
	$5 = ((int_64)((int_64)((int_64)( $14 ? $5 : $17 ) << (int_64)2) + (int_64)$26) + (int_64)-32)
	if ( ((int_64)$5 <= (int_64)(CASTING uint_64)(uint_32 ([0] - $9))) ){ goto $label$164 }
	$15 = [50]
	goto $label$150 
	
.LABEL $label$225
	CALL __floatsitf(($4 + [176]), $12)
	CALL __multf3(($4 + [160]), *($4 + [176]), *((($4 + [176]) + [8])), (int_64)-1, (int_64)9223090561878065151)
	CALL __multf3(($4 + [144]), *($4 + [160]), *((($4 + [160]) + [8])), (int_64)-1, (int_64)9223090561878065151)
	*(CALL $247()) = [34]
	$14 = *((($4 + [144]) + [8]))
	$5 = *($4 + [144])
	goto $label$192 
	
.LABEL $label$224
	if ( ((int_64)$5 >= (int_64)(CASTING int_64)(int_32 ($9 + [-226]))) ){ goto $label$163 }
	$15 = [49]
	goto $label$150 
	
.LABEL $label$223
	CALL __floatsitf(($4 + [224]), $12)
	CALL __multf3(($4 + [208]), *($4 + [224]), *((($4 + [224]) + [8])), (int_64)0, (int_64)281474976710656)
	CALL __multf3(($4 + [192]), *($4 + [208]), *((($4 + [208]) + [8])), (int_64)0, (int_64)281474976710656)
	*(CALL $247()) = [34]
	$14 = *((($4 + [192]) + [8]))
	$5 = *($4 + [192])
	goto $label$193 
	
.LABEL $label$222
	CALL $281($1, (int_64)0)
	$15 = [64]
	goto $label$150 
	
.LABEL $label$221
	CALL __extenddftf2(($4 + [112]), ((float_64)(CASTING float_64)(int_32 $12) * (float_64)(float_64)0))
	$14 = *(($4 + [120]))
	$5 = *($4 + [112])
	goto $label$190 
	
.LABEL $label$220
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$161 }
	$15 = [47]
	goto $label$150 
	
.LABEL $label$219
	$15 = [48]
	goto $label$150 
	
.LABEL $label$218
	CALL __addtf3(($4 + [432]), $25, $27, (int_64)0, (int_64)-4611967493404098560)
	$7 = CALL __getf2($25, $27, (int_64)0, (int_64)4611123068473966592)
	$8 = ((int_32)$7 < (int_32)[0])
	CALL __addtf3(($4 + [416]), $25, $27, ( $25 ? *($4 + [432]) : $8 ), ( $27 ? *((($4 + [432]) + [8])) : $8 ))
	$5 = ((int_64)$5 + (int_64)-1)
	$27 = *((($4 + [416]) + [8]))
	$25 = *($4 + [416])
	$2 = (($2 << [1]) | ((int_32)$7 > (int_32)[-1]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$162 }
	$15 = [38]
	goto $label$150 
	
.LABEL $label$217
	$14 = ((int_64)$5 + (int_64))((int_64)32 - (CASTING int_64)(int_32 $9))
	if ( ((int_64)$14) >= (int_64)(CASTING uint_64)(uint_32 $10)) ){ goto $label$160 }
	$15 = [45]
	goto $label$150 
	
.LABEL $label$216
	$10 = (CASTING uint_32)(uint_64 $14)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$159 }
	$15 = [39]
	goto $label$150 
	
.LABEL $label$215
	if ( ((int_32)$10 < (int_32)[113]) ){ goto $label$158 }
	$15 = [40]
	goto $label$150 
	
.LABEL $label$214
	CALL __floatsitf(($4 + [400]), $12)
	$14 = *(($4 + [408]))
	$26 = (int_64)0
	$28 = *($4 + [400])
	$29 = (int_64)0
	goto $label$157 
	
.LABEL $label$213
	$10 = [0]
	$15 = [44]
	goto $label$150 
	
.LABEL $label$212
	CALL __floatsitf(($4 + [352]), $12)
	CALL __extenddftf2(($4 + [368]), CALL $283((float_64)1, ([144] - $10)))
	$14 = *((($4 + [352]) + [8]))
	$28 = *($4 + [352])
	CALL $284(($4 + [384]), *($4 + [368]), *((($4 + [368]) + [8])), $28, $14)
	$29 = *($4 + [392])
	$26 = *($4 + [384])
	$15 = [41]
	goto $label$150 
	
.LABEL $label$211
	$7 = ((($2 & [1]) == 0) & (((int_32)CALL __netf2($25, $27, (int_64)0, (int_64)0) != (int_32)[0]) & ((int_32)$10 < (int_32)[32])))
	CALL __floatunsitf(($4 + [336]), ($2 + $7))
	CALL __multf3(($4 + [320]), $28, $14, *($4 + [336]), *((($4 + [336]) + [8])))
	CALL __multf3(($4 + [304]), $28, $14, ( (int_64)0 ? $25 : $7 ), ( (int_64)0 ? $27 : $7 ))
	CALL __addtf3(($4 + [288]), $26, $29, *($4 + [320]), *((($4 + [320]) + [8])))
	CALL __addtf3(($4 + [272]), *($4 + [304]), *((($4 + [304]) + [8])), *($4 + [288]), *((($4 + [288]) + [8])))
	CALL __subtf3(($4 + [256]), *($4 + [272]), *((($4 + [272]) + [8])), $26, $29)
	$25 = *((($4 + [256]) + [8]))
	$14 = *($4 + [256])
	if ( CALL __netf2($14, $25, (int_64)0, (int_64)0) ){ goto $label$156 }
	$15 = [42]
	goto $label$150 
	
.LABEL $label$210
	*(CALL $247()) = [34]
	$15 = [43]
	goto $label$150 
	
.LABEL $label$209
	CALL $287(($4 + [240]), $14, $25, (CASTING uint_32)(uint_64 $5))
	$14 = *($4 + [248])
	$5 = *($4 + [240])
	goto $label$194 
	
.LABEL $label$208
	$15 = [20]
	goto $label$150 
	
.LABEL $label$207
	$15 = [66]
	goto $label$150 
	
.LABEL $label$206
	$15 = [27]
	goto $label$150 
	
.LABEL $label$205
	$15 = [20]
	goto $label$150 
	
.LABEL $label$204
	$15 = [15]
	goto $label$150 
	
.LABEL $label$203
	$15 = [14]
	goto $label$150 
	
.LABEL $label$202
	$15 = [14]
	goto $label$150 
	
.LABEL $label$201
	$15 = [14]
	goto $label$150 
	
.LABEL $label$200
	$15 = [1]
	goto $label$150 
	
.LABEL $label$199
	$15 = [8]
	goto $label$150 
	
.LABEL $label$198
	$15 = [4]
	goto $label$150 
	
.LABEL $label$197
	$15 = [5]
	goto $label$150 
	
.LABEL $label$196
	$15 = [6]
	goto $label$150 
	
.LABEL $label$195
	$15 = [6]
	goto $label$150 
	
.LABEL $label$194
	$15 = [8]
	goto $label$150 
	
.LABEL $label$193
	$15 = [8]
	goto $label$150 
	
.LABEL $label$192
	$15 = [8]
	goto $label$150 
	
.LABEL $label$191
	$15 = [8]
	goto $label$150 
	
.LABEL $label$190
	$15 = [8]
	goto $label$150 
	
.LABEL $label$189
	$15 = [8]
	goto $label$150 
	
.LABEL $label$188
	$15 = [8]
	goto $label$150 
	
.LABEL $label$187
	$15 = [8]
	goto $label$150 
	
.LABEL $label$186
	$15 = [12]
	goto $label$150 
	
.LABEL $label$185
	$15 = [14]
	goto $label$150 
	
.LABEL $label$184
	$15 = [16]
	goto $label$150 
	
.LABEL $label$183
	$15 = [19]
	goto $label$150 
	
.LABEL $label$182
	$15 = [19]
	goto $label$150 
	
.LABEL $label$181
	$15 = [21]
	goto $label$150 
	
.LABEL $label$180
	$15 = [22]
	goto $label$150 
	
.LABEL $label$179
	$15 = [25]
	goto $label$150 
	
.LABEL $label$178
	$15 = [25]
	goto $label$150 
	
.LABEL $label$177
	$15 = [25]
	goto $label$150 
	
.LABEL $label$176
	$15 = [25]
	goto $label$150 
	
.LABEL $label$175
	$15 = [26]
	goto $label$150 
	
.LABEL $label$174
	$15 = [29]
	goto $label$150 
	
.LABEL $label$173
	$15 = [58]
	goto $label$150 
	
.LABEL $label$172
	$15 = [57]
	goto $label$150 
	
.LABEL $label$171
	$15 = [31]
	goto $label$150 
	
.LABEL $label$170
	$15 = [32]
	goto $label$150 
	
.LABEL $label$169
	$15 = [34]
	goto $label$150 
	
.LABEL $label$168
	$15 = [34]
	goto $label$150 
	
.LABEL $label$167
	$15 = [34]
	goto $label$150 
	
.LABEL $label$166
	$15 = [51]
	goto $label$150 
	
.LABEL $label$165
	$15 = [35]
	goto $label$150 
	
.LABEL $label$164
	$15 = [36]
	goto $label$150 
	
.LABEL $label$163
	$15 = [37]
	goto $label$150 
	
.LABEL $label$162
	$15 = [48]
	goto $label$150 
	
.LABEL $label$161
	$15 = [38]
	goto $label$150 
	
.LABEL $label$160
	$15 = [39]
	goto $label$150 
	
.LABEL $label$159
	$15 = [46]
	goto $label$150 
	
.LABEL $label$158
	$15 = [44]
	goto $label$150 
	
.LABEL $label$157
	$15 = [41]
	goto $label$150 
	
.LABEL $label$156
	$15 = [43]
	goto $label$150 
	
.LABEL $label$155
	$15 = [60]
	goto $label$150 
	
.LABEL $label$154
	$15 = [65]
	goto $label$150 
	
.LABEL $label$153
	$15 = [64]
	goto $label$150 
	
.LABEL $label$152
	$15 = [64]
	goto $label$150 
	
.LABEL $label$151
	$15 = [64]
	goto $label$150 
	$15
}

void .FUNC $243 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC $58 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$4 = ($global$0 - [80])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)$0), [8906])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [8952])
	*(($5 = $4) + [16]) = *($1 + [8])
	*($1 + [8]) = *(*($3))
	*($1 + [16]) = *(*($3 + [4]))
	*($1 + [24]) = *(*($3 + [8]))
	$6 = *($1)
	$7 = ($1 + [32])
	CALL $222($7, *($3 + [12]))
	$8 = ($1 + [44])
	CALL $222($8, *($3 + [16]))
	*($1 + [72]) = *(*($3 + [20]))
	$9 = ($1 + [80])
	CALL $222($9, *($3 + [24]))
	*($1 + [96]) = *(*($3 + [28]))
	*($1 + [104]) = *(*($3 + [32]))
	$3 = *($3 + [36])
	*(($1 + [64])) = *(($3 + [8]))
	*($1 + [56]) = *($3)
	CALL eosio_assert(((int_64)$6 == (int_64)*($1)), [9003])
	*($5 + [24]) = [0]
	*($5) = ($5 + [24])
	$10 = ($1 + [8])
	*($5 + [36]) = $10
	*($5 + [32]) = $1
	$11 = ($1 + [16])
	*($5 + [40]) = $11
	$12 = ($1 + [24])
	*($5 + [44]) = $12
	*($5 + [48]) = $7
	*($5 + [52]) = $8
	$13 = ($1 + [56])
	*($5 + [56]) = $13
	$14 = ($1 + [72])
	*($5 + [60]) = $14
	*($5 + [64]) = $9
	$15 = ($1 + [96])
	*($5 + [68]) = $15
	$16 = ($1 + [104])
	*($5 + [72]) = $16
	CALL $187(($5 + [32]), $5)
	$17 = *($5 + [24])
	if ( ($17 <= [513]) ){ goto $label$2 }
	$3 = CALL $303($17)
	goto $label$1 
	
.LABEL $label$2
	$3 = ($4 - (($17 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$1
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $17)
	*($5 + [24]) = $5
	*($5 + [36]) = $10
	*($5 + [40]) = $11
	*($5 + [44]) = $12
	*($5 + [48]) = $7
	*($5 + [52]) = $8
	*($5 + [56]) = $13
	*($5 + [60]) = $14
	*($5 + [64]) = $9
	*($5 + [68]) = $15
	*($5 + [72]) = $16
	*($5 + [32]) = $1
	CALL $188(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [116]), $2, $3, $17)
	if ( ($17 <= [513]) ){ goto $label$3 }
	CALL $306($3)
	
.LABEL $label$3
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($5 + [32]) = *($10)
	if ( (CALL $296(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [120])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$6 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4229703216016654336, ($5 + [24]), $6)
	*($3) = $1
	
.LABEL $label$6
	CALL db_idx64_update($1, $2, ($5 + [32]))
	
.LABEL $label$5
	$global$0 = ($5 + [80])
}

void .FUNC $59 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [8814])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([128])) + [32 align=4]) = (int_64)0
	*($3 + [40 align=4]) = (int_64)0
	*($3 + [48 align=4]) = (int_64)0
	*($3 + [56]) = (int_64)0
	*($3 + [64]) = (int_64)0
	*($3 + [80 align=4]) = (int_64)0
	*($3 + [88]) = [0]
	*($3 + [112]) = $1
	CALL $183(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [116])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $184(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	if ( (*($3 + [80]) & [1]) ){ goto $label$8 }
	if ( (*($3 + [44]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL _ZdlPv(*(($3 + [88])))
	if ( ((*($3 + [44]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*(($3 + [52])))
	if ( (*($3 + [32]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($3 + [40])))
	
.LABEL $label$4
	CALL _ZdlPv($3)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

int_32 .FUNC $271 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL $270($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $270 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL $247()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL $247()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $277 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_64 $29
	int_64 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	$5 = ($global$0 - [8128])
	$global$0 = $5
	$6 = (($5 + [704]) | [8])
	$7 = (($5 + [704]) | [9])
	$8 = ([-2] - ($5 + [704]))
	$9 = ($5 + [7664])
	$10 = (($5 + [692]) + [12])
	$11 = (($5 + [352]) + [54])
	$12 = (($5 + [352]) + [55])
	$13 = [0]
	$14 = [0]
	$15 = [0]
	
.LOOP $label$4:
	if ( ($0 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	$17 = $1
	if ( ((int_32)$15 > (int_32)([2147483647] - $14)) ){ goto $label$3 }
	$14 = ($15 + $14)
	$1 = *($17)
	if ( ($1 == 0) ){ goto $label$1 }
	$15 = $17
	$1 = ($1 & [255])
	if ( ($1 == 0) ){ goto $label$24 }
	
.LOOP $label$25:
	if ( ((int_32)$1 == (int_32)[37]) ){ goto $label$23 }
	$1 = *($15 + [1])
	$15 = ($15 + [1])
	$1 = ($1 & [255])
	if ( $1 ){ goto $label$25 }
	
.LABEL $label$24
	$1 = $15
	$18 = ([2147483647] - $14)
	$15 = ($15 - $17)
	if ( ((int_32)$15 <= (int_32)$18) ){ goto $label$22 }
	goto $label$3 
	
.LABEL $label$23
	$18 = $15
	
.LOOP $label$27:
	if ( ((int_32)*(($18 + [1])) != (int_32)[37]) ){ goto $label$26 }
	$15 = ($15 + [1])
	$19 = *($18 + [2])
	$1 = ($18 + [2])
	$18 = $1
	if ( ((int_32)$19 == (int_32)[37]) ){ goto $label$27 }
	$18 = ([2147483647] - $14)
	$15 = ($15 - $17)
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	goto $label$22 
	
.LABEL $label$26
	$1 = $18
	$18 = ([2147483647] - $14)
	$15 = ($15 - $17)
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	
.LABEL $label$22
	if ( (*($0) & [32]) ){ goto $label$28 }
	CALL $267($17, $15, $0)
	
.LABEL $label$28
	if ( $15 ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	
.LOOP $label$29:
	$17 = $1
	if ( ((int_32)$15 > (int_32)([2147483647] - $14)) ){ goto $label$3 }
	$14 = ($15 + $14)
	$15 = *($17)
	if ( ($15 == 0) ){ goto $label$31 }
	$1 = $17
	$15 = ($15 & [255])
	if ( ($15 == 0) ){ goto $label$33 }
	
.LOOP $label$34:
	if ( ((int_32)$15 == (int_32)[37]) ){ goto $label$32 }
	$15 = *($1 + [1])
	$1 = ($1 + [1])
	$15 = ($15 & [255])
	if ( $15 ){ goto $label$34 }
	
.LABEL $label$33
	$18 = ([2147483647] - $14)
	$15 = ($1 - $17)
	if ( ((int_32)$15 <= (int_32)$18) ){ goto $label$30 }
	goto $label$3 
	
.LABEL $label$32
	$18 = $1
	$15 = $1
	
.LOOP $label$36:
	if ( ((int_32)*(($15 + [1])) != (int_32)[37]) ){ goto $label$35 }
	$18 = ($18 + [1])
	$19 = *($15 + [2])
	$1 = ($15 + [2])
	$15 = $1
	if ( ((int_32)$19 == (int_32)[37]) ){ goto $label$36 }
	$18 = ([2147483647] - $14)
	$15 = ($18 - $17)
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	goto $label$30 
	
.LABEL $label$35
	$1 = $15
	$18 = ([2147483647] - $14)
	$15 = ($18 - $17)
	if ( ((int_32)$15 <= (int_32)$18) ){ goto $label$30 }
	goto $label$3 
	
.LABEL $label$31
	if ( $0 ){ goto $label$1 }
	if ( ($13 == 0) ){ goto $label$46 }
	$1 = [1]
	$15 = *($4 + [4])
	if ( ($15 == 0) ){ goto $label$37 }
	CALL $278(($3 + [16]), $15, $2)
	$15 = *($4 + [8])
	if ( ($15 == 0) ){ goto $label$45 }
	CALL $278(($3 + [32]), $15, $2)
	$15 = *($4 + [12])
	if ( ($15 == 0) ){ goto $label$44 }
	CALL $278(($3 + [48]), $15, $2)
	$15 = *($4 + [16])
	if ( ($15 == 0) ){ goto $label$43 }
	CALL $278(($3 + [64]), $15, $2)
	$15 = *($4 + [20])
	if ( ($15 == 0) ){ goto $label$42 }
	CALL $278(($3 + [80]), $15, $2)
	$15 = *($4 + [24])
	if ( ($15 == 0) ){ goto $label$41 }
	CALL $278(($3 + [96]), $15, $2)
	$15 = *($4 + [28])
	if ( ($15 == 0) ){ goto $label$40 }
	CALL $278(($3 + [112]), $15, $2)
	$15 = *($4 + [32])
	if ( ($15 == 0) ){ goto $label$39 }
	CALL $278(($3 + [128]), $15, $2)
	$15 = *($4 + [36])
	if ( ($15 == 0) ){ goto $label$38 }
	CALL $278(($3 + [144]), $15, $2)
	$global$0 = ($5 + [8128])
	return [1]
	
.LABEL $label$46
	$global$0 = ($5 + [8128])
	return [0]
	
.LABEL $label$45
	$1 = [2]
	goto $label$37 
	
.LABEL $label$44
	$1 = [3]
	goto $label$37 
	
.LABEL $label$43
	$1 = [4]
	goto $label$37 
	
.LABEL $label$42
	$1 = [5]
	goto $label$37 
	
.LABEL $label$41
	$1 = [6]
	goto $label$37 
	
.LABEL $label$40
	$1 = [7]
	goto $label$37 
	
.LABEL $label$39
	$1 = [8]
	goto $label$37 
	
.LABEL $label$38
	$1 = [9]
	
.LABEL $label$37
	$15 = ($4 + ($1 << [2]))
	
.LOOP $label$47:
	if ( *($15) ){ goto $label$18 }
	$15 = ($15 + [4])
	$14 = [1]
	$1 = ($1 + [1])
	if ( ((uint_32)$1 <= (uint_32)[9]) ){ goto $label$47 }
	goto $label$1 
	
.LABEL $label$30
	if ( $15 ){ goto $label$29 }
	
.LABEL $label$19
	$15 = ($1 + [1])
	$16 = *($1 + [1])
	$20 = ($16 + [-48])
	if ( ((uint_32)$20 > (uint_32)[9]) ){ goto $label$50 }
	$19 = ((int_32)*($1 + [2]) == (int_32)[36])
	$15 = ( ($1 + [3]) ? $15 : $19 )
	$21 = ( $20 ? [-1] : $19 )
	$13 = ( [1] ? $13 : $19 )
	$22 = [0]
	$16 = *(($1 + ( [3] ? [1] : $19 )))
	$1 = ($16 + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$48 }
	goto $label$49 
	
.LABEL $label$50
	$21 = [-1]
	$22 = [0]
	$1 = ($16 + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$48 }
	
.LABEL $label$49
	$1 = ([1] << $1)
	if ( (($1 & [75913]) == 0) ){ goto $label$48 }
	$19 = ($15 + [1])
	$22 = [0]
	
.LOOP $label$51:
	$22 = ($1 | $22)
	$15 = $19
	$16 = *($15)
	$1 = ($16 + [-32])
	if ( ((uint_32)$1 >= (uint_32)[32]) ){ goto $label$48 }
	$19 = ($15 + [1])
	$1 = ([1] << $1)
	if ( ($1 & [75913]) ){ goto $label$51 }
	
.LABEL $label$48
	if ( ((int_32)$16 != (int_32)[42]) ){ goto $label$57 }
	$1 = (*($15 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$56 }
	if ( ((int_32)*($15 + [2]) != (int_32)[36]) ){ goto $label$56 }
	*(($4 + ($1 << [2]))) = [10]
	$23 = ($15 + [3])
	$13 = [1]
	$20 = *((($3 + (*(($15 + [1])) << [4])) + [-768]))
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$52 }
	goto $label$55 
	
.LABEL $label$57
	$20 = [0]
	$19 = ($16 + [-48])
	if ( ((uint_32)$19 > (uint_32)[9]) ){ goto $label$54 }
	$1 = [0]
	
.LOOP $label$58:
	$20 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$59 }
	$1 = ((int_32)$1 * (int_32)[10])
	$20 = ( [-1] ? ($1 + $19) : ((int_32)$19 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$59
	$19 = *($15 + [1])
	$23 = ($15 + [1])
	$15 = $23
	$1 = $20
	$19 = ($19 + [-48])
	if ( ($19 <= [10]) ){ goto $label$58 }
	if ( ((int_32)$20 >= (int_32)[0]) ){ goto $label$52 }
	goto $label$3 
	
.LABEL $label$56
	if ( $13 ){ goto $label$18 }
	$23 = ($15 + [1])
	if ( ($0 == 0) ){ goto $label$53 }
	$15 = *($2)
	*($2) = ($15 + [4])
	$13 = [0]
	$20 = *($15)
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$52 }
	
.LABEL $label$55
	$20 = ([0] - $20)
	$22 = ($22 | [8192])
	goto $label$52 
	
.LABEL $label$54
	$23 = $15
	goto $label$52 
	
.LABEL $label$53
	$13 = [0]
	$20 = [0]
	
.LABEL $label$52
	$15 = [0]
	$16 = [-1]
	if ( ((int_32)*($23) != (int_32)[46]) ){ goto $label$66 }
	$19 = *($23 + [1])
	if ( ((int_32)$19 != (int_32)[42]) ){ goto $label$65 }
	$1 = (*($23 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$64 }
	if ( ((int_32)*($23 + [3]) != (int_32)[36]) ){ goto $label$64 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($23 + [4])
	$16 = *((($3 + (*(($23 + [2])) << [4])) + [-768]))
	goto $label$61 
	
.LABEL $label$66
	$1 = $23
	$24 = [0]
	goto $label$60 
	
.LABEL $label$65
	$1 = ($23 + [1])
	$25 = ($19 + [-48])
	if ( ((uint_32)$25 > (uint_32)[9]) ){ goto $label$63 }
	$23 = [0]
	$19 = $1
	
.LOOP $label$67:
	$16 = [-1]
	if ( ((uint_32)$23 > (uint_32)[214748364]) ){ goto $label$68 }
	$1 = ((int_32)$23 * (int_32)[10])
	$16 = ( [-1] ? ($1 + $25) : ((int_32)$25 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$68
	$24 = [1]
	$25 = *($19 + [1])
	$1 = ($19 + [1])
	$19 = $1
	$23 = $16
	$25 = ($25 + [-48])
	if ( ($25 <= [10]) ){ goto $label$67 }
	goto $label$60 
	
.LABEL $label$64
	if ( $13 ){ goto $label$18 }
	$1 = ($23 + [2])
	if ( ($0 == 0) ){ goto $label$62 }
	$19 = *($2)
	*($2) = ($19 + [4])
	$16 = *($19)
	goto $label$61 
	
.LABEL $label$63
	$24 = [1]
	$16 = [0]
	goto $label$60 
	
.LABEL $label$62
	$16 = [0]
	
.LABEL $label$61
	$24 = ((int_32)uint_32($16 >> [31]) ^ (int_32)[1])
	
.LABEL $label$60
	
.LOOP $label$69:
	$19 = $15
	$15 = (*($1) + [-65])
	if ( ((uint_32)$15 > (uint_32)[57]) ){ goto $label$18 }
	$1 = ($1 + [1])
	$15 = *(((((int_32)$19 * (int_32)[58]) + $15) + [25040]))
	if ( (($15 + [-1]) <= [8]) ){ goto $label$69 }
	if ( ($15 == 0) ){ goto $label$18 }
	if ( ((int_32)$15 != (int_32)[27]) ){ goto $label$72 }
	if ( ((int_32)$21 > (int_32)[-1]) ){ goto $label$18 }
	$15 = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	goto $label$71 
	
.LABEL $label$72
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$73 }
	*(($4 + ($21 << [2]))) = $15
	$15 = ($3 + ($21 << [4]))
	*($5 + [424]) = *(($15 + [8]))
	*($5 + [416]) = *($15)
	$15 = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	goto $label$71 
	
.LABEL $label$73
	if ( ($0 == 0) ){ goto $label$70 }
	CALL $278(($5 + [416]), $15, $2)
	
.LABEL $label$71
	$23 = ($22 & [-65537])
	$21 = ( $23 ? $22 : ($22 & [8192]) )
	$26 = [0]
	$27 = [8241]
	$15 = *(($1 + [-1]))
	$28 = ( ( ($15 & [-33]) ? $15 : ((int_32)($15 & [15]) == (int_32)[3]) ) ? $15 : $19 )
	$15 = ($28 + [-65])
	if ( ((uint_32)$15 > (uint_32)[55]) ){ goto $label$9 }
	$22 = $12
	goto $label$101 
	
.LABEL $label$101
	if ( ((int_32)$16 > (int_32)[-1]) ){ goto $label$102 }
	if ( $24 ){ goto $label$3 }
	
.LABEL $label$102
	$29 = *($5 + [424])
	$30 = *($5 + [416])
	*($5 + [748]) = [0]
	if ( (CALL $268($30, $29) == 0) ){ goto $label$103 }
	$31 = [1]
	$32 = [8419]
	$29 = ((int_64)$29 ^ (int_64)-9223372036854775808)
	if ( ((int_32)CALL $269($30, $29) <= (int_32)[1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$103
	if ( ($21 & [2048]) ){ goto $label$99 }
	$31 = ($21 & [1])
	$32 = ( [8425] ? [8420] : $31 )
	if ( ((int_32)CALL $269($30, $29) > (int_32)[1]) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$100
	$29 = *($5 + [416])
	if ( ((int_64)$29 <= (int_64)-1) ){ goto $label$86 }
	if ( ($21 & [2048]) ){ goto $label$84 }
	$26 = ($21 & [1])
	$27 = ( [8243] ? [8241] : $26 )
	if ( ((uint_64)$29 >= (uint_64)(int_64)4294967296) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$99
	$31 = [1]
	$32 = [8422]
	if ( ((int_32)CALL $269($30, $29) <= (int_32)[1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$98
	*((($5 + [344]) + [4])) = [0]
	*($5 + [344]) = *($5 + [416])
	*($5 + [416]) = ($5 + [344])
	$16 = [-1]
	$17 = ($5 + [344])
	goto $label$96 
	
.LABEL $label$97
	$17 = *($5 + [416])
	if ( ($16 == 0) ){ goto $label$80 }
	
.LABEL $label$96
	$15 = [0]
	$18 = $17
	
.LOOP $label$104:
	$19 = *($18)
	if ( ($19 == 0) ){ goto $label$82 }
	$19 = CALL $271(($5 + [340]), $19)
	$22 = ((int_32)$19 < (int_32)[0])
	if ( $22 ){ goto $label$83 }
	if ( ((uint_32)$19 > (uint_32)($16 - $15)) ){ goto $label$83 }
	$18 = ($18 + [4])
	$15 = ($19 + $15)
	if ( ((uint_32)$16 > (uint_32)$15) ){ goto $label$104 }
	goto $label$82 
	
.LABEL $label$95
	*((($5 + [352]) + [54])) = *($5 + [416])
	$16 = [1]
	$17 = $11
	$22 = $12
	$21 = $23
	goto $label$8 
	
.LABEL $label$94
	$17 = CALL $274(*(CALL $247()))
	goto $label$88 
	
.LABEL $label$93
	$15 = [0]
	$18 = ($19 & [255])
	if ( ((uint_32)$18 > (uint_32)[7]) ){ goto $label$4 }
	goto $label$105 
	
.LABEL $label$105
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$92
	$17 = $12
	$29 = *($5 + [416])
	if ( (int_64)($29 == 0) ){ goto $label$106 }
	$17 = $12
	
.LOOP $label$107:
	*(($17 = ($17 + [-1]))) = (((CASTING uint_32)(uint_64 $29) & [7]) | [48])
	$29 = (uint_64)$29 >> (uint_64)(int_64)3
	if ( ((int_64)$29) != (int_64)0) ){ goto $label$107 }
	
.LABEL $label$106
	if ( ($21 & [8]) ){ goto $label$81 }
	$26 = [0]
	$27 = [8241]
	if ( $24 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$91
	$16 = ( $16 ? [8] : ((uint_32)$16 > (uint_32)[8]) )
	$21 = ($21 | [8])
	$28 = [120]
	
.LABEL $label$90
	$26 = [0]
	$27 = [8241]
	$29 = *($5 + [416])
	if ( (int_64)($29 == 0) ){ goto $label$108 }
	$15 = ($28 & [32])
	$17 = $12
	
.LOOP $label$109:
	*(($17 = ($17 + [-1]))) = (*((((CASTING uint_32)(uint_64 $29) & [15]) + [25504])) | $15)
	$29 = (uint_64)$29 >> (uint_64)(int_64)4
	if ( ((int_64)$29) != (int_64)0) ){ goto $label$109 }
	if ( (($21 & [8]) == 0) ){ goto $label$12 }
	if ( (int_64)(*($5 + [416]) == 0) ){ goto $label$12 }
	$27 = (int_32($28 >> [4]) + [8241])
	$26 = [2]
	if ( $24 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$108
	$17 = $12
	if ( $24 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$89
	$15 = *($5 + [416])
	$17 = ( $15 ? [8275] : $15 )
	
.LABEL $label$88
	$26 = [0]
	$15 = CALL $298($17, ( [2147483647] ? $16 : ((int_32)$16 < (int_32)[0]) ))
	$22 = ($17 + $15)
	if ( ((int_32)$16 <= (int_32)[-1]) ){ goto $label$85 }
	$21 = $23
	$16 = $15
	goto $label$8 
	
.LABEL $label$87
	$26 = [0]
	$27 = [8241]
	$29 = *($5 + [416])
	if ( (uint_64)($29 <= (int_64)4294967296) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$86
	$29 = (int_64)
	*($5 + [416]) = $29((int_64)0 - $29))
	$26 = [1]
	$27 = [8241]
	if ( ((uint_64)$29 >= (uint_64)(int_64)4294967296) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$85
	$21 = $23
	$16 = $15
	if ( (*($22) == 0) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$84
	$26 = [1]
	$27 = [8242]
	if ( (uint_64)($29 <= (int_64)4294967296) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$83
	if ( $22 ){ goto $label$2 }
	
.LABEL $label$82
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$3 }
	$23 = ($21 & [73728])
	if ( $23 ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$81
	$15 = ($12 - $17)
	$27 = ( [8241] ? [8246] : ((int_32)$16 > (int_32)$15) )
	$26 = ((int_32)$16 <= (int_32)$15)
	goto $label$12 
	
.LABEL $label$80
	$15 = [0]
	$23 = ($21 & [73728])
	if ( ($23 == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$79
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$78
	*(*($5 + [416])) = (CASTING int_64)(int_32 $14)
	goto $label$4 
	
.LABEL $label$77
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$76
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$75
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$74
	*(*($5 + [416])) = (CASTING int_64)(int_32 $14)
	goto $label$4 
	
.LABEL $label$70
	$global$0 = ($5 + [8128])
	return [0]
	
.LABEL $label$18
	*(CALL $247()) = [22]
	goto $label$2 
	
.LABEL $label$17
	if ( ((int_32)$20 <= (int_32)$15) ){ goto $label$16 }
	$18 = ($25 <= [256])
	$25 = ($20 - $15)
	CALL memset(($5 + [432]), [32], ( $25 ? [256] : $18 ))
	$16 = *($0)
	$19 = ($16 & [32])
	if ( $18 ){ goto $label$111 }
	$18 = ($19 == 0)
	$19 = $25
	
.LOOP $label$112:
	if ( (($18 & [1]) == 0) ){ goto $label$113 }
	CALL $267(($5 + [432]), [256], $0)
	$16 = *($0)
	
.LABEL $label$113
	$22 = ($16 & [32])
	$18 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$112 }
	if ( $22 ){ goto $label$16 }
	$25 = ($25 & [255])
	goto $label$110 
	
.LABEL $label$111
	if ( $19 ){ goto $label$16 }
	
.LABEL $label$110
	CALL $267(($5 + [432]), $25, $0)
	
.LABEL $label$16
	if ( ($15 == 0) ){ goto $label$114 }
	$18 = [0]
	
.LOOP $label$115:
	$19 = *($17)
	if ( ($19 == 0) ){ goto $label$114 }
	$19 = CALL $271(($5 + [340]), $19)
	$18 = ($19 + $18)
	if ( ((uint_32)$18 > (uint_32)$15) ){ goto $label$114 }
	if ( (*($0) & [32]) ){ goto $label$116 }
	CALL $267(($5 + [340]), $19, $0)
	
.LABEL $label$116
	$17 = ($17 + [4])
	if ( ($18 <= $15) ){ goto $label$115 }
	
.LABEL $label$114
	if ( ((int_32)$23 != (int_32)[8192]) ){ goto $label$117 }
	if ( ((int_32)$20 <= (int_32)$15) ){ goto $label$117 }
	$18 = ($22 <= [256])
	$22 = ($20 - $15)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $18 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $18 ){ goto $label$119 }
	$18 = ($19 == 0)
	$19 = $22
	
.LOOP $label$120:
	if ( (($18 & [1]) == 0) ){ goto $label$121 }
	CALL $267(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$121
	$16 = ($17 & [32])
	$18 = ($16 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$120 }
	if ( $16 ){ goto $label$117 }
	$22 = ($22 & [255])
	goto $label$118 
	
.LABEL $label$119
	if ( $19 ){ goto $label$117 }
	
.LABEL $label$118
	CALL $267(($5 + [432]), $22, $0)
	
.LABEL $label$117
	$15 = ( $20 ? $15 : ((int_32)$20 > (int_32)$15) )
	goto $label$4 
	
.LABEL $label$15
	$30 = $29
	$17 = $12
	goto $label$13 
	
.LABEL $label$14
	$17 = $12
	
.LOOP $label$122:
	$30 = ((uint_64)$29 / (uint_64)(int_64)10)
	*(($17 = ($17 + [-1]))) = ((CASTING uint_32)(uint_64 (int_64))($29 - ((int_64)$30 * (int_64)10))) | [48])
	$15 = ((uint_64)$29 > (uint_64)(int_64)42949672959)
	$29 = $30
	if ( $15 ){ goto $label$122 }
	
.LABEL $label$13
	$15 = (CASTING uint_32)(uint_64 $30)
	if ( ($15 == 0) ){ goto $label$12 }
	
.LOOP $label$123:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(($17 = ($17 + [-1]))) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$22 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $22 ){ goto $label$123 }
	
.LABEL $label$12
	if ( ($24 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$10
	$21 = ( ($21 & [-65537]) ? $21 : ((int_32)$16 > (int_32)[-1]) )
	$29 = *($5 + [416])
	if ( $16 ){ goto $label$124 }
	if ( ((int_64)($29 == 0) == 0) ){ goto $label$124 }
	$17 = $12
	$22 = $12
	$16 = [0]
	goto $label$8 
	
.LABEL $label$124
	$15 = (($12 - $17) + (int_64)($29 == 0))
	$16 = ( $16 ? $15 : ((int_32)$16 > (int_32)$15) )
	
.LABEL $label$9
	$22 = $12
	
.LABEL $label$8
	$24 = ($22 - $17)
	$28 = ( $24 ? $16 : ((int_32)$16 < (int_32)$24) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$3 }
	$25 = ($26 + $28)
	$15 = ( $25 ? $20 : ((int_32)$20 < (int_32)$25) )
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	$21 = ($21 & [73728])
	if ( $21 ){ goto $label$125 }
	if ( ((int_32)$25 >= (int_32)$20) ){ goto $label$125 }
	$18 = ($36 <= [256])
	$36 = ($15 - $25)
	CALL memset(($5 + [432]), [32], ( $36 ? [256] : $18 ))
	$22 = *($0)
	$19 = ($22 & [32])
	if ( $18 ){ goto $label$127 }
	$18 = ($19 == 0)
	$19 = $36
	
.LOOP $label$128:
	if ( (($18 & [1]) == 0) ){ goto $label$129 }
	CALL $267(($5 + [432]), [256], $0)
	$22 = *($0)
	
.LABEL $label$129
	$23 = ($22 & [32])
	$18 = ($23 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$128 }
	if ( $23 ){ goto $label$125 }
	$36 = ($36 & [255])
	goto $label$126 
	
.LABEL $label$127
	if ( $19 ){ goto $label$125 }
	
.LABEL $label$126
	CALL $267(($5 + [432]), $36, $0)
	
.LABEL $label$125
	if ( (*($0) & [32]) ){ goto $label$130 }
	CALL $267($27, $26, $0)
	
.LABEL $label$130
	if ( ((int_32)$21 != (int_32)[65536]) ){ goto $label$131 }
	if ( ((int_32)$25 >= (int_32)$20) ){ goto $label$131 }
	$18 = ($26 <= [256])
	$26 = ($15 - $25)
	CALL memset(($5 + [432]), [48], ( $26 ? [256] : $18 ))
	$22 = *($0)
	$19 = ($22 & [32])
	if ( $18 ){ goto $label$133 }
	$18 = ($19 == 0)
	$19 = $26
	
.LOOP $label$134:
	if ( (($18 & [1]) == 0) ){ goto $label$135 }
	CALL $267(($5 + [432]), [256], $0)
	$22 = *($0)
	
.LABEL $label$135
	$23 = ($22 & [32])
	$18 = ($23 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$134 }
	if ( $23 ){ goto $label$131 }
	$26 = ($26 & [255])
	goto $label$132 
	
.LABEL $label$133
	if ( $19 ){ goto $label$131 }
	
.LABEL $label$132
	CALL $267(($5 + [432]), $26, $0)
	
.LABEL $label$131
	if ( ((int_32)$24 >= (int_32)$16) ){ goto $label$136 }
	$18 = ($23 <= [256])
	$23 = ($28 - $24)
	CALL memset(($5 + [432]), [48], ( $23 ? [256] : $18 ))
	$16 = *($0)
	$19 = ($16 & [32])
	if ( $18 ){ goto $label$138 }
	$18 = ($19 == 0)
	$19 = $23
	
.LOOP $label$139:
	if ( (($18 & [1]) == 0) ){ goto $label$140 }
	CALL $267(($5 + [432]), [256], $0)
	$16 = *($0)
	
.LABEL $label$140
	$22 = ($16 & [32])
	$18 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$139 }
	if ( $22 ){ goto $label$136 }
	$23 = ($23 & [255])
	goto $label$137 
	
.LABEL $label$138
	if ( $19 ){ goto $label$136 }
	
.LABEL $label$137
	CALL $267(($5 + [432]), $23, $0)
	
.LABEL $label$136
	if ( (*($0) & [32]) ){ goto $label$141 }
	CALL $267($17, $24, $0)
	
.LABEL $label$141
	if ( ((int_32)$21 != (int_32)[8192]) ){ goto $label$4 }
	if ( ((int_32)$25 >= (int_32)$20) ){ goto $label$4 }
	$18 = ($16 <= [256])
	$16 = ($15 - $25)
	CALL memset(($5 + [432]), [32], ( $16 ? [256] : $18 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $18 ){ goto $label$143 }
	$18 = ($19 == 0)
	$19 = $16
	
.LOOP $label$144:
	if ( (($18 & [1]) == 0) ){ goto $label$145 }
	CALL $267(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$145
	$20 = ($17 & [32])
	$18 = ($20 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$144 }
	if ( $20 ){ goto $label$4 }
	$16 = ($16 & [255])
	goto $label$142 
	
.LABEL $label$143
	if ( $19 ){ goto $label$4 }
	
.LABEL $label$142
	CALL $267(($5 + [432]), $16, $0)
	goto $label$4 
	
.LABEL $label$7
	$23 = CALL __unordtf2($30, $29, $30, $29)
	$16 = ($31 + [3])
	if ( ($21 & [8192]) ){ goto $label$146 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$146 }
	$15 = ($22 <= [256])
	$22 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$148 }
	$15 = ($18 == 0)
	$18 = $22
	
.LOOP $label$149:
	if ( (($15 & [1]) == 0) ){ goto $label$150 }
	CALL $267(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$150
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$149 }
	if ( $17 ){ goto $label$146 }
	$22 = ($22 & [255])
	goto $label$147 
	
.LABEL $label$148
	if ( $18 ){ goto $label$146 }
	
.LABEL $label$147
	CALL $267(($5 + [432]), $22, $0)
	
.LABEL $label$146
	$15 = *($0)
	if ( ($15 & [32]) ){ goto $label$155 }
	CALL $267($32, $31, $0)
	if ( ((*($0) & [32]) == 0) ){ goto $label$154 }
	goto $label$153 
	
.LABEL $label$155
	if ( ($15 & [32]) ){ goto $label$153 }
	
.LABEL $label$154
	$15 = uint_32(($28 & [32]) >> [5])
	CALL $267(( ( [8578] ? [8597] : $15 ) ? ( [8505] ? [8561] : $15 ) : $23 ), [3], $0)
	if ( ((int_32)($21 & [73728]) != (int_32)[8192]) ){ goto $label$151 }
	goto $label$152 
	
.LABEL $label$153
	if ( ((int_32)($21 & [73728]) != (int_32)[8192]) ){ goto $label$151 }
	
.LABEL $label$152
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$151 }
	$15 = ($22 <= [256])
	$22 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$157 }
	$15 = ($18 == 0)
	$18 = $22
	
.LOOP $label$158:
	if ( (($15 & [1]) == 0) ){ goto $label$159 }
	CALL $267(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$159
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$158 }
	if ( $17 ){ goto $label$151 }
	$22 = ($22 & [255])
	goto $label$156 
	
.LABEL $label$157
	if ( $18 ){ goto $label$151 }
	
.LABEL $label$156
	CALL $267(($5 + [432]), $22, $0)
	
.LABEL $label$151
	$15 = ( $20 ? $16 : ((int_32)$20 > (int_32)$16) )
	goto $label$5 
	
.LABEL $label$6
	CALL $275(($5 + [320]), $30, $29, ($5 + [748]))
	$30 = *($5 + [328])
	$29 = *($5 + [320])
	CALL __addtf3(($5 + [304]), $29, $30, $29, $30)
	$30 = *((($5 + [304]) + [8]))
	$29 = *($5 + [304])
	if ( (CALL __eqtf2($29, $30, (int_64)0, (int_64)0) == 0) ){ goto $label$160 }
	*($5 + [748]) = (*($5 + [748]) + [-1])
	
.LABEL $label$160
	$33 = ($28 | [32])
	if ( ((int_32)$33 != (int_32)[97]) ){ goto $label$173 }
	$22 = ($28 & [32])
	$26 = ( ($32 + [9]) ? $32 : $22 )
	if ( ((uint_32)$16 > (uint_32)[26]) ){ goto $label$171 }
	if ( (([27] - $16) == 0) ){ goto $label$171 }
	$15 = ($16 + [-27])
	$34 = (int_64)4612248968380809216
	$35 = (int_64)0
	
.LOOP $label$174:
	CALL __multf3(($5 + [208]), $35, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($5 + [208]) + [8]))
	$35 = *($5 + [208])
	$15 = ($15 + [1])
	if ( $15 ){ goto $label$174 }
	if ( ((int_32)*($26) != (int_32)[45]) ){ goto $label$172 }
	CALL __subtf3(($5 + [160]), $29, ((int_64)$30 ^ (int_64)-9223372036854775808), $35, $34)
	CALL __addtf3(($5 + [144]), $35, $34, *($5 + [160]), *((($5 + [160]) + [8])))
	$30 = ((int_64)*((($5 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$29 = *($5 + [144])
	goto $label$171 
	
.LABEL $label$173
	$15 = ((int_32)$16 < (int_32)[0])
	if ( (CALL __netf2($29, $30, (int_64)0, (int_64)0) == 0) ){ goto $label$176 }
	CALL __multf3(($5 + [288]), $29, $30, (int_64)0, (int_64)4619285842798575616)
	$22 = (*($5 + [748]) + [-28])
	*($5 + [748]) = $22
	$30 = *((($5 + [288]) + [8]))
	$29 = *($5 + [288])
	goto $label$175 
	
.LABEL $label$176
	$22 = *($5 + [748])
	
.LABEL $label$175
	$27 = ( [6] ? $16 : $15 )
	$36 = ( ($5 + [752]) ? $9 : ((int_32)$22 < (int_32)[0]) )
	$19 = $36
	
.LOOP $label$177:
	$15 = CALL __fixunstfsi($29, $30)
	CALL __floatunsitf(($5 + [272]), $15)
	CALL __subtf3(($5 + [256]), $29, $30, *($5 + [272]), *((($5 + [272]) + [8])))
	CALL __multf3(($5 + [240]), *($5 + [256]), *((($5 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($19) = $15
	$19 = ($19 + [4])
	$30 = *((($5 + [240]) + [8]))
	$29 = *($5 + [240])
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$177 }
	if ( ((int_32)$22 < (int_32)[1]) ){ goto $label$180 }
	$18 = $36
	
.LOOP $label$181:
	$17 = ( $22 ? [29] : ((int_32)$22 < (int_32)[29]) )
	$15 = ($19 + [-4])
	if ( ($15 <= $18) ){ goto $label$182 }
	$30 = (CASTING uint_64)(uint_32 $17)
	$29 = (int_64)0
	
.LOOP $label$183:
	$29 = ((uint_64)$29 / (uint_64)(int_64)1000000000)
	$29 = ((int_64)((int_64)*($15) << (int_64)$30) + (int_64)((int_64)$29 & (int_64)4294967295))
	*($15) = (int_64))($29 - ((int_64)$29 * (int_64)1000000000))
	$15 = ($15 + [-4])
	if ( ((uint_32)$15 >= (uint_32)$18) ){ goto $label$183 }
	$15 = (CASTING uint_32)(uint_64 $29)
	if ( ($15 == 0) ){ goto $label$182 }
	*(($18 = ($18 + [-4]))) = $15
	
.LABEL $label$182
	
.LOOP $label$185:
	$15 = $19
	if ( ((uint_32)$15 <= (uint_32)$18) ){ goto $label$184 }
	$19 = ($15 + [-4])
	if ( (*($19) == 0) ){ goto $label$185 }
	
.LABEL $label$184
	$19 = $15
	$22 = ($22 - $17)
	if ( ((int_32)$22 > (int_32)[0]) ){ goto $label$181 }
	*($5 + [748]) = $22
	if ( ((int_32)$22 > (int_32)[-1]) ){ goto $label$178 }
	goto $label$179 
	
.LABEL $label$180
	$15 = $19
	$18 = $36
	if ( ((int_32)$22 > (int_32)[-1]) ){ goto $label$178 }
	
.LABEL $label$179
	$26 = (((uint_32)($27 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$33 != (int_32)[102]) ){ goto $label$187 }
	$37 = ($36 + ($26 << [2]))
	
.LOOP $label$188:
	$19 = ([0] - $22)
	$23 = ( $19 ? [9] : ((int_32)$19 < (int_32)[9]) )
	if ( ((uint_32)$18 >= (uint_32)$15) ){ goto $label$190 }
	$25 = uint_32([1000000000] >> $23)
	$24 = ((int_32)([-1] << $23) ^ (int_32)[-1])
	$17 = [0]
	$19 = $18
	
.LOOP $label$191:
	$16 = *($19)
	*($19) = (uint_32($16 >> $23) + $17)
	$17 = ((int_32)($16 & $24) * (int_32)$25)
	$19 = ($19 + [4])
	if ( ($19 <= $15) ){ goto $label$191 }
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	if ( ($17 == 0) ){ goto $label$189 }
	*($15) = $17
	$15 = ($15 + [4])
	goto $label$189 
	
.LABEL $label$190
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	
.LABEL $label$189
	$15 = ( $37 ? $15 : ((int_32)int_32(($15 - $36) >> [2]) > (int_32)$26) )
	$22 = ($23 + $22)
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$188 }
	goto $label$186 
	
.LABEL $label$187
	
.LOOP $label$192:
	$19 = ([0] - $22)
	$23 = ( $19 ? [9] : ((int_32)$19 < (int_32)[9]) )
	if ( ((uint_32)$18 >= (uint_32)$15) ){ goto $label$194 }
	$25 = uint_32([1000000000] >> $23)
	$24 = ((int_32)([-1] << $23) ^ (int_32)[-1])
	$17 = [0]
	$19 = $18
	
.LOOP $label$195:
	$16 = *($19)
	*($19) = (uint_32($16 >> $23) + $17)
	$17 = ((int_32)($16 & $24) * (int_32)$25)
	$19 = ($19 + [4])
	if ( ($19 <= $15) ){ goto $label$195 }
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	if ( ($17 == 0) ){ goto $label$193 }
	*($15) = $17
	$15 = ($15 + [4])
	goto $label$193 
	
.LABEL $label$194
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	
.LABEL $label$193
	$15 = ( ($18 + ($26 << [2])) ? $15 : ((int_32)int_32(($15 - $18) >> [2]) > (int_32)$26) )
	$22 = ($23 + $22)
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$192 }
	
.LABEL $label$186
	*($5 + [748]) = $22
	
.LABEL $label$178
	$19 = [0]
	if ( ((uint_32)$18 >= (uint_32)$15) ){ goto $label$196 }
	$19 = ((int_32)int_32(($36 - $18) >> [2]) * (int_32)[9])
	$16 = *($18)
	if ( ($16 <= [10]) ){ goto $label$196 }
	$17 = [10]
	
.LOOP $label$197:
	$19 = ($19 + [1])
	$17 = ((int_32)$17 * (int_32)[10])
	if ( ((uint_32)$16 >= (uint_32)$17) ){ goto $label$197 }
	
.LABEL $label$196
	$23 = ((int_32)$33 == (int_32)[103])
	$25 = (((int_32)$27 != (int_32)[0]) & $23)
	$16 = ( [0] ? $19 : ((int_32)$33 == (int_32)[102]) )
	$17 = (($27 - $16) - $25)
	if ( ((int_32)$17 >= (int_32)(((int_32)int_32(($15 - $36) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$198 }
	$24 = ($17 + [147456])
	$26 = ((int_32)$24 / (int_32)[9])
	$37 = ($36 + ($26 << [2]))
	$22 = ($37 + [-65532])
	$17 = [10]
	$26 = ((int_32)$26 * (int_32)[9])
	if ( ((int_32)($24 - $26) > (int_32)[7]) ){ goto $label$199 }
	$16 = (((($27 + ([0] - $25)) + [147455]) - $16) - $26)
	$17 = [10]
	
.LOOP $label$200:
	$17 = ((int_32)$17 * (int_32)[10])
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$200 }
	
.LABEL $label$199
	$24 = ((uint_32)$25 / (uint_32)$17)
	$25 = *($22)
	$16 = ($25 - ((int_32)$24 * (int_32)$17))
	$26 = ($22 + [4])
	if ( ((int_32)$26 != (int_32)$15) ){ goto $label$202 }
	if ( ($16 == 0) ){ goto $label$201 }
	
.LABEL $label$202
	if ( ($24 & [1]) ){ goto $label$204 }
	$29 = (int_64)4643211215818981376
	$30 = (int_64)0
	if ( ((uint_32)$22 <= (uint_32)$18) ){ goto $label$203 }
	if ( ((int_32)$17 != (int_32)[1000000000]) ){ goto $label$203 }
	if ( ((*(($22 + [-4])) & [1]) == 0) ){ goto $label$203 }
	
.LABEL $label$204
	$29 = (int_64)4643211215818981376
	$30 = (int_64)1
	
.LABEL $label$203
	$34 = (int_64)4611123068473966592
	$24 = uint_32($17 >> [1])
	if ( ($16 <= $24) ){ goto $label$205 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$16 == (int_32)$24) ) ? (int_64)4611545280939032576 : ((int_32)$26 == (int_32)$15) )
	
.LABEL $label$205
	if ( ($31 == 0) ){ goto $label$206 }
	if ( ((int_32)*($32) != (int_32)[45]) ){ goto $label$206 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$29 = ((int_64)$29 ^ (int_64)-9223372036854775808)
	
.LABEL $label$206
	CALL __addtf3(($5 + [224]), $30, $29, (int_64)0, $34)
	$16 = ($25 - $16)
	*($22) = $16
	if ( (CALL __eqtf2(*($5 + [224]), *((($5 + [224]) + [8])), $30, $29) == 0) ){ goto $label$201 }
	$19 = ($16 + $17)
	*($22) = $19
	if ( ($19 <= [1000000000]) ){ goto $label$207 }
	$19 = ($37 + [-65536])
	
.LOOP $label$208:
	*(($19 + [4])) = [0]
	if ( ((uint_32)$19 >= (uint_32)$18) ){ goto $label$209 }
	*(($18 = ($18 + [-4]))) = [0]
	
.LABEL $label$209
	$17 = (*($19) + [1])
	*($19) = $17
	$19 = ($19 + [-4])
	if ( ((uint_32)$17 > (uint_32)[999999999]) ){ goto $label$208 }
	$22 = ($19 + [4])
	
.LABEL $label$207
	$19 = ((int_32)int_32(($36 - $18) >> [2]) * (int_32)[9])
	$16 = *($18)
	if ( ($16 <= [10]) ){ goto $label$201 }
	$17 = [10]
	
.LOOP $label$210:
	$19 = ($19 + [1])
	$17 = ((int_32)$17 * (int_32)[10])
	if ( ((uint_32)$16 >= (uint_32)$17) ){ goto $label$210 }
	
.LABEL $label$201
	$17 = ($22 + [4])
	$15 = ( $17 ? $15 : ((uint_32)$15 > (uint_32)$17) )
	
.LABEL $label$198
	$22 = ([0] - $19)
	
.LOOP $label$213:
	$16 = $15
	if ( ((uint_32)$16 <= (uint_32)$18) ){ goto $label$212 }
	$15 = ($16 + [-4])
	if ( (*($15) == 0) ){ goto $label$213 }
	$24 = [1]
	if ( $23 ){ goto $label$211 }
	goto $label$162 
	
.LABEL $label$212
	$24 = [0]
	if ( ($23 == 0) ){ goto $label$162 }
	
.LABEL $label$211
	$15 = ($27 + ($27 == 0))
	if ( ((int_32)$15 <= (int_32)$19) ){ goto $label$170 }
	if ( ((int_32)$19 < (int_32)[-4]) ){ goto $label$170 }
	$28 = ($28 + [-1])
	$27 = (($15 + [-1]) - $19)
	$23 = ($21 & [8])
	if ( ($23 == 0) ){ goto $label$169 }
	goto $label$161 
	
.LABEL $label$172
	CALL __addtf3(($5 + [192]), $29, $30, $35, $34)
	CALL __subtf3(($5 + [176]), *($5 + [192]), *((($5 + [192]) + [8])), $35, $34)
	$30 = *((($5 + [176]) + [8]))
	$29 = *($5 + [176])
	
.LABEL $label$171
	$19 = $10
	$15 = int_32($23 >> [31])
	$23 = *($5 + [748])
	$15 = ((int_32)($23 + $15) ^ (int_32)$15)
	if ( ($15 == 0) ){ goto $label$215 }
	$18 = [0]
	
.LOOP $label$216:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(((($5 + [692]) + $18) + [11])) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$18 = ($18 + [-1])
	$17 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $17 ){ goto $label$216 }
	$19 = ((($5 + [692]) + $18) + [12])
	if ( $18 ){ goto $label$214 }
	
.LABEL $label$215
	*(($19 = ($19 + [-1]))) = [48]
	
.LABEL $label$214
	$25 = ($31 | [2])
	*(($24 = ($19 + [-2]))) = ($28 + [15])
	*(($19 + [-1])) = ( [45] ? [43] : ((int_32)$23 < (int_32)[0]) )
	if ( ($21 & [8]) ){ goto $label$217 }
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$168 }
	$15 = ($5 + [704])
	
.LOOP $label$218:
	$18 = CALL __fixtfsi($29, $30)
	CALL __floatsitf(($5 + [80]), $18)
	CALL __subtf3(($5 + [64]), $29, $30, *($5 + [80]), *((($5 + [80]) + [8])))
	CALL __multf3(($5 + [48]), *($5 + [64]), *((($5 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($15) = (*(($18 + [25504])) | $22)
	$30 = *((($5 + [48]) + [8]))
	$29 = *($5 + [48])
	$18 = ($15 + [1])
	if ( ((int_32)($18 - ($5 + [704])) != (int_32)[1]) ){ goto $label$219 }
	*(($15 + [1])) = [46]
	$18 = ($15 + [2])
	
.LABEL $label$219
	$15 = $18
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$218 }
	goto $label$167 
	
.LABEL $label$217
	$15 = ($5 + [704])
	
.LOOP $label$220:
	$18 = CALL __fixtfsi($29, $30)
	CALL __floatsitf(($5 + [128]), $18)
	CALL __subtf3(($5 + [112]), $29, $30, *($5 + [128]), *((($5 + [128]) + [8])))
	CALL __multf3(($5 + [96]), *($5 + [112]), *((($5 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($15) = (*(($18 + [25504])) | $22)
	$30 = *((($5 + [96]) + [8]))
	$29 = *($5 + [96])
	$18 = ($15 + [1])
	if ( ((int_32)($18 - ($5 + [704])) != (int_32)[1]) ){ goto $label$221 }
	*(($15 + [1])) = [46]
	$18 = ($15 + [2])
	
.LABEL $label$221
	$15 = $18
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$220 }
	goto $label$167 
	
.LABEL $label$170
	$27 = ($15 + [-1])
	$28 = ($28 + [-2])
	$23 = ($21 & [8])
	if ( $23 ){ goto $label$161 }
	
.LABEL $label$169
	$15 = [9]
	if ( ($24 == 0) ){ goto $label$222 }
	$23 = *(($16 + [-4]))
	if ( ($23 == 0) ){ goto $label$222 }
	$15 = [0]
	if ( ((uint_32)$23 % (uint_32)[10]) ){ goto $label$222 }
	$17 = [10]
	$15 = [0]
	
.LOOP $label$223:
	$15 = ($15 + [1])
	$17 = ((int_32)$17 * (int_32)[10])
	if ( (((uint_32)$23 % (uint_32)$17) == 0) ){ goto $label$223 }
	
.LABEL $label$222
	$17 = (((int_32)int_32(($16 - $36) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($28 | [32]) != (int_32)[102]) ){ goto $label$166 }
	$23 = [0]
	$15 = ($17 - $15)
	$15 = ( $15 ? [0] : ((int_32)$15 > (int_32)[0]) )
	$27 = ( $27 ? $15 : ((int_32)$27 < (int_32)$15) )
	goto $label$161 
	
.LABEL $label$168
	$18 = ($5 + [704])
	
.LOOP $label$224:
	$19 = CALL __fixtfsi($29, $30)
	CALL __floatsitf(($5 + [32]), $19)
	CALL __subtf3(($5 + [16]), $29, $30, *($5 + [32]), *((($5 + [32]) + [8])))
	CALL __multf3($5, *($5 + [16]), *((($5 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($15 = $18)) = (*(($19 + [25504])) | $22)
	$30 = *(($5 + [8]))
	$29 = *($5)
	$18 = ($15 + [1])
	if ( ((int_32)($18 - ($5 + [704])) != (int_32)[1]) ){ goto $label$225 }
	if ( (CALL __eqtf2($29, $30, (int_64)0, (int_64)0) == 0) ){ goto $label$225 }
	*(($15 + [1])) = [46]
	$18 = ($15 + [2])
	
.LABEL $label$225
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$224 }
	
.LABEL $label$167
	$15 = [-1]
	$22 = ($10 - $24)
	if ( ((int_32)(([2147483645] - $25) - $22) < (int_32)$16) ){ goto $label$5 }
	$23 = ($18 - ($5 + [704]))
	$28 = ( ( ($16 + [2]) ? $23 : ((int_32)($8 + $18) < (int_32)$16) ) ? $23 : $16 )
	$16 = (($22 + $25) + $28)
	$21 = ($21 & [73728])
	if ( $21 ){ goto $label$163 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$163 }
	$15 = ($27 <= [256])
	$27 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $27 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$165 }
	$15 = ($18 == 0)
	$18 = $27
	
.LOOP $label$226:
	if ( (($15 & [1]) == 0) ){ goto $label$227 }
	CALL $267(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$227
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$226 }
	if ( $17 ){ goto $label$163 }
	$27 = ($27 & [255])
	goto $label$164 
	
.LABEL $label$166
	$23 = [0]
	$15 = (($17 + $19) - $15)
	$15 = ( $15 ? [0] : ((int_32)$15 > (int_32)[0]) )
	$27 = ( $27 ? $15 : ((int_32)$27 < (int_32)$15) )
	goto $label$161 
	
.LABEL $label$165
	if ( $18 ){ goto $label$163 }
	
.LABEL $label$164
	CALL $267(($5 + [432]), $27, $0)
	
.LABEL $label$163
	if ( (*($0) & [32]) ){ goto $label$228 }
	CALL $267($26, $25, $0)
	
.LABEL $label$228
	if ( ((int_32)$21 != (int_32)[65536]) ){ goto $label$229 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$229 }
	$15 = ($25 <= [256])
	$25 = ($20 - $16)
	CALL memset(($5 + [432]), [48], ( $25 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$231 }
	$15 = ($18 == 0)
	$18 = $25
	
.LOOP $label$232:
	if ( (($15 & [1]) == 0) ){ goto $label$233 }
	CALL $267(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$233
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$232 }
	if ( $17 ){ goto $label$229 }
	$25 = ($25 & [255])
	goto $label$230 
	
.LABEL $label$231
	if ( $18 ){ goto $label$229 }
	
.LABEL $label$230
	CALL $267(($5 + [432]), $25, $0)
	
.LABEL $label$229
	if ( (*($0) & [32]) ){ goto $label$234 }
	CALL $267(($5 + [704]), $23, $0)
	
.LABEL $label$234
	$23 = ($28 - $23)
	if ( ((int_32)$23 < (int_32)[1]) ){ goto $label$235 }
	$15 = ($23 <= [256])
	CALL memset(($5 + [432]), [48], ( $23 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$237 }
	$15 = ($18 == 0)
	$18 = $23
	
.LOOP $label$238:
	if ( (($15 & [1]) == 0) ){ goto $label$239 }
	CALL $267(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$239
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$238 }
	if ( $17 ){ goto $label$235 }
	$23 = ($23 & [255])
	goto $label$236 
	
.LABEL $label$237
	if ( $18 ){ goto $label$235 }
	
.LABEL $label$236
	CALL $267(($5 + [432]), $23, $0)
	
.LABEL $label$235
	if ( (*($0) & [32]) ){ goto $label$240 }
	CALL $267($24, $22, $0)
	
.LABEL $label$240
	if ( ((int_32)$21 != (int_32)[8192]) ){ goto $label$241 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$241 }
	$15 = ($22 <= [256])
	$22 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$243 }
	$15 = ($18 == 0)
	$18 = $22
	
.LOOP $label$244:
	if ( (($15 & [1]) == 0) ){ goto $label$245 }
	CALL $267(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$245
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$244 }
	if ( $17 ){ goto $label$241 }
	$22 = ($22 & [255])
	goto $label$242 
	
.LABEL $label$243
	if ( $18 ){ goto $label$241 }
	
.LABEL $label$242
	CALL $267(($5 + [432]), $22, $0)
	
.LABEL $label$241
	$15 = ( $20 ? $16 : ((int_32)$20 > (int_32)$16) )
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$162
	$23 = ($21 & [8])
	
.LABEL $label$161
	$15 = [-1]
	$25 = ($27 | $23)
	if ( ((int_32)$27 > (int_32)( [2147483645] ? [2147483646] : $25 )) ){ goto $label$5 }
	$26 = (($27 + ((int_32)$25 != (int_32)[0])) + [1])
	$33 = ((int_32)($28 | [32]) != (int_32)[102])
	if ( $33 ){ goto $label$247 }
	if ( ((int_32)$19 > (int_32)([2147483647] - $26)) ){ goto $label$5 }
	$19 = ( $19 ? [0] : ((int_32)$19 > (int_32)[0]) )
	goto $label$246 
	
.LABEL $label$247
	$17 = $10
	$38 = ((int_32)$19 < (int_32)[0])
	$15 = ( $22 ? $19 : $38 )
	if ( ($15 == 0) ){ goto $label$248 }
	
.LOOP $label$249:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(($17 = ($17 + [-1]))) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$22 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $22 ){ goto $label$249 }
	
.LABEL $label$248
	if ( ((int_32)($10 - $17) > (int_32)[1]) ){ goto $label$250 }
	$15 = ($17 + [-1])
	
.LOOP $label$251:
	*($15) = [48]
	$19 = ($10 - $15)
	$17 = ($15 + [-1])
	$15 = $17
	if ( ((int_32)$19 < (int_32)[2]) ){ goto $label$251 }
	$17 = ($17 + [1])
	
.LABEL $label$250
	*(($37 = ($17 + [-2]))) = $28
	$15 = [-1]
	*(($17 + [-1])) = ( [45] ? [43] : $38 )
	$19 = ($10 - $37)
	if ( ((int_32)$19 > (int_32)([2147483647] - $26)) ){ goto $label$5 }
	
.LABEL $label$246
	$15 = [-1]
	$19 = ($19 + $26)
	if ( ((int_32)$19 > (int_32)((int_32)$31 ^ (int_32)[2147483647])) ){ goto $label$5 }
	$26 = ($19 + $31)
	$21 = ($21 & [73728])
	if ( $21 ){ goto $label$252 }
	if ( ((int_32)$20 <= (int_32)$26) ){ goto $label$252 }
	$15 = ($28 <= [256])
	$28 = ($20 - $26)
	CALL memset(($5 + [432]), [32], ( $28 ? [256] : $15 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $15 ){ goto $label$254 }
	$15 = ($19 == 0)
	$19 = $28
	
.LOOP $label$255:
	if ( (($15 & [1]) == 0) ){ goto $label$256 }
	CALL $267(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$256
	$22 = ($17 & [32])
	$15 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$255 }
	if ( $22 ){ goto $label$252 }
	$28 = ($28 & [255])
	goto $label$253 
	
.LABEL $label$254
	if ( $19 ){ goto $label$252 }
	
.LABEL $label$253
	CALL $267(($5 + [432]), $28, $0)
	
.LABEL $label$252
	if ( (*($0) & [32]) ){ goto $label$257 }
	CALL $267($32, $31, $0)
	
.LABEL $label$257
	if ( ((int_32)$21 != (int_32)[65536]) ){ goto $label$258 }
	if ( ((int_32)$20 <= (int_32)$26) ){ goto $label$258 }
	$15 = ($28 <= [256])
	$28 = ($20 - $26)
	CALL memset(($5 + [432]), [48], ( $28 ? [256] : $15 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $15 ){ goto $label$260 }
	$15 = ($19 == 0)
	$19 = $28
	
.LOOP $label$261:
	if ( (($15 & [1]) == 0) ){ goto $label$262 }
	CALL $267(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$262
	$22 = ($17 & [32])
	$15 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$261 }
	if ( $22 ){ goto $label$258 }
	$28 = ($28 & [255])
	goto $label$259 
	
.LABEL $label$260
	if ( $19 ){ goto $label$258 }
	
.LABEL $label$259
	CALL $267(($5 + [432]), $28, $0)
	
.LABEL $label$258
	if ( $33 ){ goto $label$273 }
	$23 = ( $36 ? $18 : ((uint_32)$18 > (uint_32)$36) )
	$22 = $23
	
.LOOP $label$274:
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$276 }
	$18 = [0]
	
.LOOP $label$277:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(($6 + $18)) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$18 = ($18 + [-1])
	$17 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $17 ){ goto $label$277 }
	goto $label$275 
	
.LABEL $label$276
	$18 = [0]
	
.LABEL $label$275
	$15 = ($7 + $18)
	if ( ((int_32)$22 == (int_32)$23) ){ goto $label$281 }
	if ( ((uint_32)$15 <= (uint_32)($5 + [704])) ){ goto $label$280 }
	
.LOOP $label$282:
	*(($15 = ($15 + [-1]))) = [48]
	if ( ((uint_32)$15 > (uint_32)($5 + [704])) ){ goto $label$282 }
	$15 = ($5 + [704])
	if ( ((*($0) & [32]) == 0) ){ goto $label$279 }
	goto $label$278 
	
.LABEL $label$281
	if ( $18 ){ goto $label$280 }
	*(($15 = ($15 + [-1]))) = [48]
	
.LABEL $label$280
	if ( (*($0) & [32]) ){ goto $label$278 }
	
.LABEL $label$279
	CALL $267($15, ($7 - $15), $0)
	
.LABEL $label$278
	$22 = ($22 + [4])
	if ( ((uint_32)$22 <= (uint_32)$36) ){ goto $label$274 }
	if ( ($25 == 0) ){ goto $label$283 }
	if ( (*($0) & [32]) ){ goto $label$283 }
	CALL $267([8614], [1], $0)
	
.LABEL $label$283
	if ( ((int_32)$27 < (int_32)[1]) ){ goto $label$272 }
	if ( ((uint_32)$22 >= (uint_32)$16) ){ goto $label$271 }
	
.LOOP $label$284:
	$15 = $7
	$18 = *($22)
	if ( ($18 == 0) ){ goto $label$286 }
	$15 = $7
	
.LOOP $label$287:
	$19 = ((uint_32)$18 / (uint_32)[10])
	*(($15 = ($15 + [-1]))) = (($18 - ((int_32)$19 * (int_32)[10])) | [48])
	$17 = ((uint_32)$18 > (uint_32)[9])
	$18 = $19
	if ( $17 ){ goto $label$287 }
	if ( ((uint_32)$15 <= (uint_32)($5 + [704])) ){ goto $label$285 }
	
.LABEL $label$286
	
.LOOP $label$288:
	*(($15 = ($15 + [-1]))) = [48]
	if ( ((uint_32)$15 > (uint_32)($5 + [704])) ){ goto $label$288 }
	
.LABEL $label$285
	if ( (*($0) & [32]) ){ goto $label$289 }
	CALL $267($15, ( $27 ? [9] : ((int_32)$27 < (int_32)[9]) ), $0)
	
.LABEL $label$289
	$15 = ($27 + [-9])
	if ( ((int_32)$27 < (int_32)[10]) ){ goto $label$270 }
	$27 = $15
	$22 = ($22 + [4])
	if ( ($22 <= $16) ){ goto $label$284 }
	goto $label$270 
	
.LABEL $label$273
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$266 }
	$25 = ( $16 ? ($18 + [4]) : $24 )
	if ( ($23 == 0) ){ goto $label$268 }
	$22 = $18
	
.LOOP $label$290:
	$17 = $7
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$292 }
	$19 = [0]
	
.LOOP $label$293:
	$17 = ((uint_32)$15 / (uint_32)[10])
	*(((($5 + [704]) + $19) + [8])) = (($15 - ((int_32)$17 * (int_32)[10])) | [48])
	$19 = ($19 + [-1])
	$16 = ((uint_32)$15 > (uint_32)[9])
	$15 = $17
	if ( $16 ){ goto $label$293 }
	$17 = ((($5 + [704]) + $19) + [9])
	if ( $19 ){ goto $label$291 }
	
.LABEL $label$292
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$291
	if ( ((int_32)$22 == (int_32)$18) ){ goto $label$295 }
	if ( ((uint_32)$17 <= (uint_32)($5 + [704])) ){ goto $label$294 }
	
.LOOP $label$296:
	*(($17 = ($17 + [-1]))) = [48]
	if ( ((uint_32)$17 > (uint_32)($5 + [704])) ){ goto $label$296 }
	goto $label$294 
	
.LABEL $label$295
	$15 = *($0)
	if ( ($15 & [32]) ){ goto $label$297 }
	CALL $267($17, [1], $0)
	$15 = *($0)
	
.LABEL $label$297
	$17 = ($17 + [1])
	if ( ($15 & [32]) ){ goto $label$294 }
	CALL $267([8614], [1], $0)
	
.LABEL $label$294
	$15 = ($7 - $17)
	if ( (*($0) & [32]) ){ goto $label$298 }
	CALL $267($17, ( $15 ? $27 : ((int_32)$27 > (int_32)$15) ), $0)
	
.LABEL $label$298
	$27 = ($27 - $15)
	$22 = ($22 + [4])
	if ( ((uint_32)$22 >= (uint_32)$25) ){ goto $label$267 }
	if ( ((int_32)$27 > (int_32)[-1]) ){ goto $label$290 }
	goto $label$267 
	
.LABEL $label$272
	$15 = $27
	if ( ((int_32)$15 >= (int_32)[1]) ){ goto $label$269 }
	goto $label$265 
	
.LABEL $label$271
	$15 = $27
	
.LABEL $label$270
	if ( ((int_32)$15 < (int_32)[1]) ){ goto $label$265 }
	
.LABEL $label$269
	$18 = ($15 <= [256])
	CALL memset(($5 + [432]), [48], ( $15 ? [256] : $18 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $18 ){ goto $label$300 }
	$18 = ($19 == 0)
	$19 = $15
	
.LOOP $label$301:
	if ( (($18 & [1]) == 0) ){ goto $label$302 }
	CALL $267(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$302
	$16 = ($17 & [32])
	$18 = ($16 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$301 }
	if ( $16 ){ goto $label$265 }
	$15 = ($15 & [255])
	goto $label$299 
	
.LABEL $label$300
	if ( $19 ){ goto $label$265 }
	
.LABEL $label$299
	CALL $267(($5 + [432]), $15, $0)
	if ( ((int_32)$21 == (int_32)[8192]) ){ goto $label$264 }
	goto $label$263 
	
.LABEL $label$268
	$22 = $18
	
.LOOP $label$303:
	$17 = $7
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$305 }
	$19 = [0]
	
.LOOP $label$306:
	$17 = ((uint_32)$15 / (uint_32)[10])
	*(((($5 + [704]) + $19) + [8])) = (($15 - ((int_32)$17 * (int_32)[10])) | [48])
	$19 = ($19 + [-1])
	$16 = ((uint_32)$15 > (uint_32)[9])
	$15 = $17
	if ( $16 ){ goto $label$306 }
	$17 = ((($5 + [704]) + $19) + [9])
	if ( $19 ){ goto $label$304 }
	
.LABEL $label$305
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$304
	if ( ((int_32)$22 == (int_32)$18) ){ goto $label$308 }
	if ( ((uint_32)$17 <= (uint_32)($5 + [704])) ){ goto $label$307 }
	
.LOOP $label$309:
	*(($17 = ($17 + [-1]))) = [48]
	if ( ((uint_32)$17 > (uint_32)($5 + [704])) ){ goto $label$309 }
	goto $label$307 
	
.LABEL $label$308
	if ( (*($0) & [32]) ){ goto $label$310 }
	CALL $267($17, [1], $0)
	
.LABEL $label$310
	$17 = ($17 + [1])
	if ( ((int_32)$27 < (int_32)[1]) ){ goto $label$307 }
	if ( (*($0) & [32]) ){ goto $label$307 }
	CALL $267([8614], [1], $0)
	
.LABEL $label$307
	$15 = ($7 - $17)
	if ( (*($0) & [32]) ){ goto $label$311 }
	CALL $267($17, ( $15 ? $27 : ((int_32)$27 > (int_32)$15) ), $0)
	
.LABEL $label$311
	$27 = ($27 - $15)
	$22 = ($22 + [4])
	if ( ((uint_32)$22 >= (uint_32)$25) ){ goto $label$267 }
	if ( ((int_32)$27 > (int_32)[-1]) ){ goto $label$303 }
	
.LABEL $label$267
	if ( ((int_32)$27 < (int_32)[1]) ){ goto $label$266 }
	$18 = ($27 <= [256])
	CALL memset(($5 + [432]), [48], ( $27 ? [256] : $18 ))
	$19 = *($0)
	$15 = ($19 & [32])
	if ( $18 ){ goto $label$313 }
	$15 = ($15 == 0)
	$18 = $27
	
.LOOP $label$314:
	if ( (($15 & [1]) == 0) ){ goto $label$315 }
	CALL $267(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$315
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$314 }
	if ( $17 ){ goto $label$266 }
	$27 = ($27 & [255])
	goto $label$312 
	
.LABEL $label$313
	if ( $15 ){ goto $label$266 }
	
.LABEL $label$312
	CALL $267(($5 + [432]), $27, $0)
	
.LABEL $label$266
	if ( (*($0) & [32]) ){ goto $label$265 }
	CALL $267($37, ($10 - $37), $0)
	
.LABEL $label$265
	if ( ((int_32)$21 != (int_32)[8192]) ){ goto $label$263 }
	
.LABEL $label$264
	if ( ((int_32)$20 <= (int_32)$26) ){ goto $label$263 }
	$15 = ($16 <= [256])
	$16 = ($20 - $26)
	CALL memset(($5 + [432]), [32], ( $16 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$317 }
	$15 = ($18 == 0)
	$18 = $16
	
.LOOP $label$318:
	if ( (($15 & [1]) == 0) ){ goto $label$319 }
	CALL $267(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$319
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$318 }
	if ( $17 ){ goto $label$263 }
	$16 = ($16 & [255])
	goto $label$316 
	
.LABEL $label$317
	if ( $18 ){ goto $label$263 }
	
.LABEL $label$316
	CALL $267(($5 + [432]), $16, $0)
	
.LABEL $label$263
	$15 = ( $20 ? $26 : ((int_32)$20 > (int_32)$26) )
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$4 }
	
.LABEL $label$3
	*(CALL $247()) = [75]
	
.LABEL $label$2
	$14 = [-1]
	
.LABEL $label$1
	$global$0 = ($5 + [8128])
	$15
	$18
	return $14
}

void .FUNC $240 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $225(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $262(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8641], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $225(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $225(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $275 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$6 = ($5) & [32767]
	if ( ((int_32)$6) == (int_32)[32767]) ){ goto $label$1 }
	if ( $6 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($4, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL $275(($4 + [16]), *($4), *(($4 + [8])), $3)
	$5 = (*($3) + [-120])
	$2 = *($4 + [24])
	$1 = *($4 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($5 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($5 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	
.LABEL $label$2
	*($3) = $5
	
.LABEL $label$1
	*($0) = $1
	*($0 + [8]) = $2
	$global$0 = ($4 + [32])
}

int_32 .FUNC $274 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL $273([23232], *([0] + [20]))
	$1 = [0]
	
.LOOP $label$4:
	if ( ((int_32)*(($1 + [23136])) == (int_32)$0) ){ goto $label$3 }
	$2 = [87]
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[87]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$2 = $1
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = [23232]
	
.LOOP $label$5:
	$0 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $0 ){ goto $label$5 }
	$1 = $3
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$5 }
	return CALL $273($3, *([0] + [20]))
	return .LABEL $label$1
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), ($0 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), ($0 + [16]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	*($2 + [8]) = *(($0 + [24]))
	CALL eosio_assert(((int_32)(*($4 + [8]) - $3) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $174(*($1), ($0 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = [16]
	$4 = ($1 + [16])
	$6 = *($1 + [16])
	$5 = *(($1 + [20]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [4]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = (($7 & [-16]) + $3)
	
.LABEL $label$2
	$6 = *(($1 + [32]))
	$5 = *($1 + [28])
	$3 = (($5 - $3) - $6)
	$7 = ($1 + [28])
	$8 = (CASTING uint_64)(uint_32 ($6 - $5))
	
.LOOP $label$3:
	$3 = ($3 + [-1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	$5 = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $49($0, ([0] - $3))
	$5 = *(($0 + [4]))
	$3 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$3 = [0]
	
.LABEL $label$4
	*($2) = $3
	*($2 + [8]) = $5
	$0 = ($5 - $3)
	CALL eosio_assert(((int_32)$0 > (int_32)[7]), [8865])
	CALL memcpy($3, $1, [8])
	CALL eosio_assert(((int_32)($0 + [-8]) > (int_32)[7]), [8865])
	CALL memcpy(($3 + [8]), ($1 + [8]), [8])
	*($2 + [4]) = ($3 + [16])
	CALL $181(CALL $180($2, $4), $7)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $88($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $224($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $224($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $219($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $53 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [8906])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [8952])
	$6 = *($1)
	$7 = ($1 + [8])
	CALL $222($7, *($3))
	CALL eosio_assert(((int_64)$6 == (int_64)*($1)), [9003])
	$3 = *($1 + [8])
	$8 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [8])
	$9 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$4 = CALL $303($3)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [8865])
	CALL memcpy($4, $1, [8])
	*($5 + [4]) = ($4 + [8])
	CALL $174($5, $7)
	CALL db_update_i64(*($1 + [24]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $306($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$4
	$global$0 = ($5 + [16])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [8814])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([32]))) = (int_64)0
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [16]) = [0]
	*($3 + [20]) = $1
	CALL $182(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [24])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $170(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*(($3 + [16])))
	
.LABEL $label$4
	CALL _ZdlPv($3)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($4 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($4 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($4 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($2 + [8]) = $4
	CALL $202(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *($1 + [24])
	$4 = *($1 + [16])
	$5 = *($1 + [8])
	$6 = *($1)
	$7 = CALL $220(($2 + [64]), ($1 + [32]))
	$8 = CALL $220(($2 + [48]), ($1 + [44]))
	*(($9 = (($2 + [32]) + [8]))) = *(($1 + [64]))
	*($2 + [32]) = *($1 + [56])
	$10 = *($1 + [72])
	$11 = CALL $220(($2 + [16]), ($1 + [80]))
	$12 = *($1 + [104])
	$13 = *($1 + [96])
	*(($2 + [8])) = *($9)
	*($2) = *($2 + [32])
	CALL $203($0, $6, $5, $4, $3, $7, $8, $2, $10, $11, $13, $12)
	if ( (*($11) & [1]) ){ goto $label$5 }
	if ( (*($8) & [1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL _ZdlPv(*($11 + [8]))
	if ( ((*($8) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL _ZdlPv(*($8 + [8]))
	if ( ((*($7) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($7) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($2 + [80])
	return 
	
.LABEL $label$1
	CALL _ZdlPv(*($7 + [8]))
	$global$0 = ($2 + [80])
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8782])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $303($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	*(($5 = CALL _Znwj([128])) + [32 align=4]) = (int_64)0
	*($5 + [40 align=4]) = (int_64)0
	*($5 + [48 align=4]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [80 align=4]) = (int_64)0
	*($5 + [88]) = [0]
	*($5 + [112]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [44])
	*($3 + [56]) = ($5 + [56])
	*($3 + [60]) = ($5 + [72])
	*($3 + [64]) = ($5 + [80])
	*($3 + [68]) = ($5 + [96])
	*($3 + [72]) = ($5 + [104])
	CALL $185(($3 + [32]), ($3 + [24]))
	*($5 + [120]) = [-1]
	*($5 + [116]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [32]) = $6
	*($3 + [4]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $184(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $306($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	if ( (*($1 + [80]) & [1]) ){ goto $label$14 }
	if ( (*($1 + [44]) & [1]) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL _ZdlPv(*(($1 + [88])))
	if ( ((*($1 + [44]) & [1]) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL _ZdlPv(*(($1 + [52])))
	if ( (*($1 + [32]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL _ZdlPv(*(($1 + [40])))
	
.LABEL $label$10
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [80])
	return $5
}

int_32 .FUNC $247 ()
{
	return [14384]
}

void .FUNC $173 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $174(*($1), *($0 + [4]))
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $0, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $152 (int_32 $0)
{
	*($0) = [13184]
	CALL $216(($0 + [8]))
	CALL $244($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $153 (int_32 $0)
{
	return CALL $218(($0 + [8]))
}

int_32 .FUNC $150 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($0 + [4])
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$2 }
	$6 = ($1 + [16])
	$10 = ($9 & [1])
	$9 = *($4)
	$9 = ( *($4 + [4]) ? uint_32($9 >> [1]) : $10 )
	$8 = ($7 & [1])
	$7 = *($1 + [16])
	$7 = ( *($1 + [20]) ? uint_32($7 >> [1]) : $8 )
	$11 = ( $7 ? $9 : ($7 <= $9) )
	if ( ($11 == 0) ){ goto $label$3 }
	$8 = CALL $296(( *($4 + [8]) ? ($4 + [1]) : $10 ), ( *($1 + [24]) ? ($6 + [1]) : $8 ), $11)
	if ( ($8 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((uint_32)$9 >= (uint_32)$7) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)$1) ){ goto $label$9 }
	$9 = *($1)
	if ( ($9 == 0) ){ goto $label$8 }
	
.LOOP $label$10:
	$7 = $9
	$9 = *($7 + [4])
	if ( $9 ){ goto $label$10 }
	goto $label$7 
	
.LABEL $label$9
	$7 = $1
	if ( *($1) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$9 = $1
	
.LOOP $label$11:
	$7 = *($9 + [8])
	$3 = ((int_32)*($7) == (int_32)$9)
	$9 = $7
	if ( $3 ){ goto $label$11 }
	
.LABEL $label$7
	$5 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *(($7 + [20])) ? uint_32($3 >> [1]) : $5 )
	$6 = ($9 & [1])
	$9 = *($4)
	$9 = ( *($4 + [4]) ? uint_32($9 >> [1]) : $6 )
	$8 = ( $9 ? $3 : ($9 <= $3) )
	if ( ($8 == 0) ){ goto $label$13 }
	$6 = CALL $296(( *(($7 + [24])) ? (($7 + [16]) + [1]) : $5 ), ( *($4 + [8]) ? ($4 + [1]) : $6 ), $8)
	if ( ($6 == 0) ){ goto $label$13 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$12 }
	goto $label$4 
	
.LABEL $label$13
	if ( ((uint_32)$3 >= (uint_32)$9) ){ goto $label$4 }
	
.LABEL $label$12
	if ( (*($1) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*($2) = $7
	return ($7 + [4])
	
.LABEL $label$5
	*($2) = $1
	return $1
	
.LABEL $label$4
	return CALL $94($0, $2, $4)
	
.LABEL $label$1
	$10 = ($9 & [1])
	$9 = *(($1 + [16]))
	$9 = ( *(($1 + [20])) ? uint_32($9 >> [1]) : $10 )
	$8 = ($7 & [1])
	$7 = *($4)
	$7 = ( *(($4 + [4])) ? uint_32($7 >> [1]) : $8 )
	$11 = ( $7 ? $9 : ($7 <= $9) )
	if ( ($11 == 0) ){ goto $label$16 }
	$6 = CALL $296(( *($1 + [24]) ? ($6 + [1]) : $10 ), ( *($4 + [8]) ? ($4 + [1]) : $8 ), $11)
	if ( ($6 == 0) ){ goto $label$16 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( ((uint_32)$9 >= (uint_32)$7) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = *($1 + [4])
	if ( ($7 == 0) ){ goto $label$18 }
	
.LOOP $label$19:
	$9 = $7
	$7 = *($9)
	if ( $7 ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	$9 = *($1 + [8])
	if ( ((int_32)*($9) == (int_32)$1) ){ goto $label$17 }
	$3 = ($1 + [8])
	
.LOOP $label$20:
	$7 = *($3)
	$3 = ($7 + [8])
	$9 = *($7 + [8])
	if ( ((int_32)$7 != (int_32)*($9)) ){ goto $label$20 }
	
.LABEL $label$17
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$22 }
	$5 = ($3 & [1])
	$3 = *($4)
	$3 = ( *(($4 + [4])) ? uint_32($3 >> [1]) : $5 )
	$6 = ($7 & [1])
	$7 = *($9 + [16])
	$7 = ( *($9 + [20]) ? uint_32($7 >> [1]) : $6 )
	$8 = ( $7 ? $3 : ($7 <= $3) )
	if ( ($8 == 0) ){ goto $label$23 }
	$6 = CALL $296(( *($4 + [8]) ? ($4 + [1]) : $5 ), ( *($9 + [24]) ? (($9 + [16]) + [1]) : $6 ), $8)
	if ( ($6 == 0) ){ goto $label$23 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	if ( ((uint_32)$3 >= (uint_32)$7) ){ goto $label$21 }
	
.LABEL $label$22
	$7 = ($1 + [4])
	if ( (*($7) == 0) ){ goto $label$24 }
	*($2) = $9
	return $9
	
.LABEL $label$24
	*($2) = $1
	return $7
	
.LABEL $label$21
	return CALL $94($0, $2, $4)
	
.LABEL $label$14
	*($2) = $1
	*($3) = $1
	return $3
}

void .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = $1
	$3 = *($1)
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = *($1 + [4])
	if ( ($4 == 0) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = $4
	$4 = *($2)
	if ( $4 ){ goto $label$5 }
	
.LABEL $label$4
	$3 = *($2 + [4])
	if ( $3 ){ goto $label$2 }
	$5 = ($2 + [8])
	$6 = [0]
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = $1
	
.LABEL $label$2
	*($3 + [8]) = *($2 + [8])
	$5 = ($2 + [8])
	$6 = [1]
	
.LABEL $label$1
	$7 = *(($2 + [8]))
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	*($7 + [4]) = $3
	$7 = *($2 + [12])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	*($7) = $3
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$11 }
	$4 = *($7 + [4])
	$7 = *($2 + [12])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$4 = [0]
	$0 = $3
	$7 = *($2 + [12])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$8 }
	
.LABEL $label$9
	$8 = *($1 + [8])
	*($5) = $8
	*(($8 + ( [0] ? [4] : ((int_32)*(*($1 + [8])) == (int_32)$1) ))) = $2
	*(($5 = *($1)) + [8]) = $2
	*($2) = $5
	$5 = *($1 + [4])
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*(($2 + [12])) = *($1 + [12])
	$0 = ( $2 ? $0 : ((int_32)$0 == (int_32)$1) )
	if ( ($7 & [255]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( (($7 & [255]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ($0 == 0) ){ goto $label$6 }
	if ( ($6 == 0) ){ goto $label$13 }
	*($3 + [12]) = [1]
	return 
	
.LABEL $label$13
	
.LOOP $label$21:
	$1 = *($4 + [12])
	$2 = *($4 + [8])
	if ( ((int_32)*($2) == (int_32)$4) ){ goto $label$33 }
	if ( (($1 & [255]) == 0) ){ goto $label$32 }
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$33
	if ( (($1 & [255]) == 0) ){ goto $label$31 }
	$1 = $4
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$32
	*(($4 + [12])) = [1]
	*($2 + [12]) = [0]
	$1 = *($2 + [4])
	$3 = *($1)
	*($2 + [4]) = $3
	if ( ($3 == 0) ){ goto $label$34 }
	*($3 + [8]) = $2
	
.LABEL $label$34
	*($1 + [8]) = *($2 + [8])
	*((($3 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($3) == (int_32)$2) ))) = $1
	*($1) = $2
	*($2 + [8]) = $1
	$2 = *($4)
	$0 = ( $4 ? $0 : ((int_32)$0 == (int_32)$2) )
	$4 = *($2 + [4])
	$2 = *($4)
	if ( $2 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$31
	*(($4 + [12])) = [1]
	$1 = *($4 + [4])
	*($2) = $1
	*($2 + [12]) = [0]
	if ( ($1 == 0) ){ goto $label$35 }
	*($1 + [8]) = $2
	
.LABEL $label$35
	*(($4 + [8])) = *($2 + [8])
	$3 = *($2 + [8])
	if ( ((int_32)*($3) == (int_32)$2) ){ goto $label$37 }
	*($3 + [4]) = $4
	goto $label$36 
	
.LABEL $label$37
	*($3) = $4
	$1 = *($2)
	
.LABEL $label$36
	*(($2 + [8])) = $4
	*(($4 + [4])) = $2
	$0 = ( $4 ? $0 : ((int_32)$0 == (int_32)$2) )
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$29 }
	
.LABEL $label$30
	if ( (*($2 + [12]) == 0) ){ goto $label$28 }
	
.LABEL $label$29
	$4 = *($1 + [4])
	if ( ($4 == 0) ){ goto $label$38 }
	if ( (*($4 + [12]) == 0) ){ goto $label$27 }
	
.LABEL $label$38
	*($1 + [12]) = [0]
	$4 = *($1 + [8])
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$39 }
	if ( (*($4 + [12]) & [255]) ){ goto $label$22 }
	
.LABEL $label$39
	*($4 + [12]) = [1]
	return 
	
.LABEL $label$28
	$3 = ($2 + [12])
	goto $label$26 
	
.LABEL $label$27
	if ( ($2 == 0) ){ goto $label$41 }
	if ( (*($2 + [12]) == 0) ){ goto $label$40 }
	$4 = *($1 + [4])
	
.LABEL $label$41
	*($4 + [12]) = [1]
	*($1 + [12]) = [0]
	$2 = *($4)
	*(($1 + [4])) = $2
	if ( ($2 == 0) ){ goto $label$42 }
	*($2 + [8]) = $1
	
.LABEL $label$42
	$3 = ($1 + [12])
	$2 = ($4 + [12])
	*($4 + [8]) = *($1 + [8])
	*((($0 = *($1 + [8])) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$1) ))) = $4
	*($1 + [8]) = $4
	*($4) = $1
	$4 = ($4 + [8])
	goto $label$25 
	
.LABEL $label$40
	$3 = ($2 + [12])
	
.LABEL $label$26
	$2 = ($1 + [12])
	$4 = ($1 + [8])
	
.LABEL $label$25
	$4 = *($4)
	*($2) = *($4 + [12])
	*($4 + [12]) = [1]
	$2 = *($4)
	$0 = *($2 + [4])
	*($4) = $0
	*($3) = [1]
	if ( ($0 == 0) ){ goto $label$43 }
	*($0 + [8]) = $4
	
.LABEL $label$43
	*($2 + [8]) = *($4 + [8])
	*((($0 = *($4 + [8])) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$4) ))) = $2
	*($4 + [8]) = $2
	*(($2 + [4])) = $4
	return 
	
.LABEL $label$24
	if ( (*($2 + [12]) == 0) ){ goto $label$18 }
	
.LABEL $label$23
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$44 }
	if ( (*($1 + [12]) == 0) ){ goto $label$17 }
	
.LABEL $label$44
	*($4 + [12]) = [0]
	$4 = *($4 + [8])
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$20 }
	if ( (*($4 + [12]) == 0) ){ goto $label$19 }
	
.LABEL $label$22
	$2 = *($4 + [8])
	$4 = *(($2 + (((int_32)*($2) == (int_32)$4) << [2])))
	goto $label$21 
	
.LABEL $label$20
	$4 = $0
	
.LABEL $label$19
	*($4 + [12]) = [1]
	return 
	
.LABEL $label$18
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	if ( (*($1 + [12]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	*($2 + [12]) = [1]
	*($4 + [12]) = [0]
	$0 = *($2 + [4])
	*($4) = $0
	if ( ($0 == 0) ){ goto $label$45 }
	*($0 + [8]) = $4
	
.LABEL $label$45
	$1 = ($4 + [12])
	$0 = ($2 + [12])
	*($2 + [8]) = *($4 + [8])
	*((($3 = *($4 + [8])) + ( [0] ? [4] : ((int_32)*($3) == (int_32)$4) ))) = $2
	*($4 + [8]) = $2
	*(($2 + [4])) = $4
	$4 = ($2 + [8])
	goto $label$14 
	
.LABEL $label$15
	$1 = ($1 + [12])
	$0 = ($4 + [12])
	$4 = ($4 + [8])
	
.LABEL $label$14
	$4 = *($4)
	*($0) = *($4 + [12])
	*($4 + [12]) = [1]
	$2 = *($4 + [4])
	$0 = *($2)
	*($4 + [4]) = $0
	*($1) = [1]
	if ( ($0 == 0) ){ goto $label$46 }
	*($0 + [8]) = $4
	
.LABEL $label$46
	*($2 + [8]) = *($4 + [8])
	*((($0 = *($4 + [8])) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$4) ))) = $2
	*($4 + [8]) = $2
	*($2) = $4
	return 
	
.LABEL $label$6
}

void .FUNC $156 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0)
	$4 = int_32((*($0 + [4]) - $3) >> [4])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	$6 = ($0 + [8])
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [4]) >= (uint_32)[134217727]) ){ goto $label$5 }
	*(($2 + [24])) = $6
	$3 = [0]
	*($2 + [20]) = [0]
	$6 = ($2 + [20])
	$7 = int_32($7 >> [3])
	$5 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ($5 <= [268435456]) ){ goto $label$4 }
	CALL abort()
	
.LABEL $label$5
	*(($2 + [24])) = $6
	*($2 + [20]) = [0]
	$6 = ($2 + [20])
	$5 = [268435455]
	
.LABEL $label$4
	$3 = CALL _Znwj(($5 << [4]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	*($2 + [8]) = $3
	*(($2 + [20])) = ($3 + ($5 << [4]))
	$5 = *($1)
	*(($3 = ($3 + ($4 << [4])))) = $5
	*($2 + [16]) = $3
	*($2 + [12]) = $3
	$5 = CALL $105(($3 + [8]), $5)
	$3 = *($3)
	if ( ((int_32)$3 == (int_32)[3]) ){ goto $label$8 }
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$9 }
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$7 }
	if ( *($5) ){ goto $label$7 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$9
	if ( *($5) ){ goto $label$7 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$8
	if ( (*($5) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$7 = (*($3) + [16])
	*(($3 = ($2 + [16]))) = $7
	$1 = *($0)
	$3 = *(($0 + [4]))
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$11 }
	$5 = (*($2 + [12]) + [-16])
	
.LOOP $label$12:
	$3 = ($3 + [-16])
	$4 = CALL $144($5, $3)
	$5 = ($5 + [-16])
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$12 }
	*($2 + [12]) = $4
	$3 = *(($0 + [4]))
	$1 = *($0)
	goto $label$10 
	
.LABEL $label$11
	$4 = *($2 + [12])
	
.LABEL $label$10
	*($0) = $4
	*(($0 + [4])) = $7
	*((($2 + [8]) + [8])) = $3
	*($2 + [12]) = $1
	$3 = ($0 + [8])
	$5 = *($3)
	*($3) = *($6)
	*($6) = $5
	*($2 + [8]) = $1
	CALL $146(($2 + [8]))
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$6
	CALL $248([9322], [9181], [13424], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0)
	$4 = int_32((*($0 + [4]) - $3) >> [4])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	$6 = ($0 + [8])
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [4]) >= (uint_32)[134217727]) ){ goto $label$5 }
	*(($2 + [24])) = $6
	$3 = [0]
	*($2 + [20]) = [0]
	$6 = ($2 + [20])
	$7 = int_32($7 >> [3])
	$5 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ($5 <= [268435456]) ){ goto $label$4 }
	CALL abort()
	
.LABEL $label$5
	*(($2 + [24])) = $6
	*($2 + [20]) = [0]
	$6 = ($2 + [20])
	$5 = [268435455]
	
.LABEL $label$4
	$3 = CALL _Znwj(($5 << [4]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	*($2 + [8]) = $3
	*(($2 + [20])) = ($3 + ($5 << [4]))
	*(($5 = ($3 + ($4 << [4])))) = [7]
	*($5 + [8]) = *($1)
	*($2 + [12]) = $5
	$7 = ($5 + [16])
	*($2 + [16]) = $7
	$4 = *($0)
	$3 = *(($0 + [4]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$7 }
	$1 = *($2 + [12])
	
.LOOP $label$8:
	$3 = ($3 + [-16])
	CALL $144(($5 + [-16]), $3)
	$1 = ($1 + [-16])
	$5 = $1
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$8 }
	*($2 + [12]) = $1
	$3 = *(($0 + [4]))
	$4 = *($0)
	goto $label$6 
	
.LABEL $label$7
	$1 = *($2 + [12])
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*((($2 + [8]) + [8])) = $3
	*($2 + [12]) = $4
	$3 = ($0 + [8])
	$5 = *($3)
	*($3) = *($6)
	*($6) = $5
	*($2 + [8]) = $4
	CALL $146(($2 + [8]))
	$global$0 = ($2 + [32])
	(unreachable)
	(unreachable)
}

void .FUNC $154 (int_32 $0)
{
	*($0) = [13184]
	CALL $216(($0 + [8]))
	CALL $244($0)
	CALL _ZdlPv($0)
}

void .FUNC $155 (int_32 $0)
{
	*($0) = [13184]
	CALL $216(($0 + [8]))
	CALL $244($0)
	CALL _ZdlPv($0)
}

void .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0)
	$4 = int_32((*($0 + [4]) - $3) >> [4])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	$6 = ($0 + [8])
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [4]) >= (uint_32)[134217727]) ){ goto $label$5 }
	*(($2 + [24])) = $6
	$3 = [0]
	*($2 + [20]) = [0]
	$6 = ($2 + [20])
	$7 = int_32($7 >> [3])
	$5 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ($5 <= [268435456]) ){ goto $label$4 }
	CALL abort()
	
.LABEL $label$5
	*(($2 + [24])) = $6
	*($2 + [20]) = [0]
	$6 = ($2 + [20])
	$5 = [268435455]
	
.LABEL $label$4
	$3 = CALL _Znwj(($5 << [4]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	*($2 + [8]) = $3
	*(($2 + [20])) = ($3 + ($5 << [4]))
	*(($5 = ($3 + ($4 << [4])))) = [4]
	*($5 + [8]) = *($1)
	*($2 + [12]) = $5
	$7 = ($5 + [16])
	*($2 + [16]) = $7
	$4 = *($0)
	$3 = *(($0 + [4]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$7 }
	$1 = *($2 + [12])
	
.LOOP $label$8:
	$3 = ($3 + [-16])
	CALL $144(($5 + [-16]), $3)
	$1 = ($1 + [-16])
	$5 = $1
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$8 }
	*($2 + [12]) = $1
	$3 = *(($0 + [4]))
	$4 = *($0)
	goto $label$6 
	
.LABEL $label$7
	$1 = *($2 + [12])
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*((($2 + [8]) + [8])) = $3
	*($2 + [12]) = $4
	$3 = ($0 + [8])
	$5 = *($3)
	*($3) = *($6)
	*($6) = $5
	*($2 + [8]) = $4
	CALL $146(($2 + [8]))
	$global$0 = ($2 + [32])
	(unreachable)
	(unreachable)
}

void .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0)
	$4 = int_32((*($0 + [4]) - $3) >> [4])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	$6 = ($0 + [8])
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [4]) >= (uint_32)[134217727]) ){ goto $label$5 }
	*(($2 + [24])) = $6
	$3 = [0]
	*($2 + [20]) = [0]
	$8 = ($2 + [20])
	$6 = int_32($7 >> [3])
	$5 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ($5 <= [268435456]) ){ goto $label$4 }
	CALL abort()
	
.LABEL $label$5
	*(($2 + [24])) = $6
	*($2 + [20]) = [0]
	$8 = ($2 + [20])
	$5 = [268435455]
	
.LABEL $label$4
	$3 = CALL _Znwj(($5 << [4]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	*($2 + [8]) = $3
	*(($2 + [20])) = ($3 + ($5 << [4]))
	*(($5 = ($3 + ($4 << [4])))) = [0]
	*($5 + [8]) = [0]
	*($2 + [12]) = $5
	$7 = ($5 + [16])
	*($2 + [16]) = $7
	$6 = *($0)
	$3 = *(($0 + [4]))
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$4 = *($2 + [12])
	
.LOOP $label$8:
	$3 = ($3 + [-16])
	CALL $144(($5 + [-16]), $3)
	$4 = ($4 + [-16])
	$5 = $4
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$8 }
	*($2 + [12]) = $4
	$3 = *(($0 + [4]))
	$6 = *($0)
	goto $label$6 
	
.LABEL $label$7
	$4 = *($2 + [12])
	
.LABEL $label$6
	*($0) = $4
	*(($0 + [4])) = $7
	*((($2 + [8]) + [8])) = $3
	*($2 + [12]) = $6
	$3 = ($0 + [8])
	$5 = *($3)
	*($3) = *($8)
	*($8) = $5
	*($2 + [8]) = $6
	CALL $146(($2 + [8]))
	$global$0 = ($2 + [32])
	(unreachable)
	(unreachable)
}

int_32 .FUNC $273 (int_32 $0, int_32 $1)
{
	return CALL $272($0, $1)
}

int_32 .FUNC $272 (int_32 $0, int_32 $1)
{
	return $0
}

void .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($0 + [4]), $3, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $224 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $183 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	int_64 $18
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1) = *(*($3))
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [24]) = *(*($3 + [12]))
	$4 = *($0)
	$5 = ($1 + [32])
	CALL $222($5, *($3 + [16]))
	$6 = ($1 + [44])
	CALL $222($6, *($3 + [20]))
	*($1 + [72]) = *(*($3 + [24]))
	$7 = ($1 + [80])
	CALL $222($7, *($3 + [28]))
	*($1 + [96]) = *(*($3 + [32]))
	*($1 + [104]) = *(*($3 + [36]))
	$3 = *($3 + [40])
	*(($1 + [64])) = *(($3 + [8]))
	*($1 + [56]) = *($3)
	*(($3 = $2) + [24]) = [0]
	*($3 + [8]) = ($3 + [24])
	$8 = ($1 + [8])
	*($3 + [36]) = $8
	*($3 + [32]) = $1
	$9 = ($1 + [16])
	*($3 + [40]) = $9
	$10 = ($1 + [24])
	*($3 + [44]) = $10
	*($3 + [48]) = $5
	*($3 + [52]) = $6
	$11 = ($1 + [56])
	*($3 + [56]) = $11
	$12 = ($1 + [72])
	*($3 + [60]) = $12
	*($3 + [64]) = $7
	$13 = ($1 + [96])
	*($3 + [68]) = $13
	$14 = ($1 + [104])
	*($3 + [72]) = $14
	CALL $187(($3 + [32]), ($3 + [8]))
	$15 = *($3 + [24])
	if ( ($15 <= [513]) ){ goto $label$2 }
	$2 = CALL $303($15)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($15 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$1
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $15)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $8
	*($3 + [32]) = $1
	*($3 + [40]) = $9
	*($3 + [44]) = $10
	*($3 + [48]) = $5
	*($3 + [52]) = $6
	*($3 + [56]) = $11
	*($3 + [60]) = $12
	*($3 + [64]) = $7
	*($3 + [68]) = $13
	*($3 + [72]) = $14
	CALL $188(($3 + [32]), ($3 + [24]))
	$16 = *($1)
	*($1 + [116]) = CALL db_store_i64(*($4 + [8]), (int_64)4229703216016654336, *(*($0 + [8])), $16, $2, $15)
	if ( ($15 <= [513]) ){ goto $label$3 }
	CALL $306($2)
	
.LABEL $label$3
	if ( (uint_64)($16 <= *($4 + [16])) ){ goto $label$4 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$16 + (int_64)1) : ((uint_64)$16 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$16 = *(($4 + [8]))
	$17 = *(*(($0 + [8])))
	$18 = *($1)
	*($3 + [32]) = *(($1 + [8]))
	*($1 + [120]) = CALL db_idx64_store($16, (int_64)4229703216016654336, $17, $18, ($3 + [32]))
	$global$0 = ($3 + [80])
}

int_32 .FUNC $69 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [13667])
	$2 = *($0 + [4])
	$3 = *($2 + [120])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)4229703216016654336, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [120]) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = *($1 + [8])
	$2 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$6:
	$3 = ($2 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$4 }
	$2 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($8 + [112]) == (int_32)$6), [8731])
	goto $label$2 
	
.LABEL $label$3
	$8 = CALL $57($6, CALL $fimport$3(*($6), *($6 + [8]), (int_64)4229703216016654336, $5))
	CALL eosio_assert(((int_32)*($8 + [112]) == (int_32)$6), [8731])
	
.LABEL $label$2
	*(($0 + [4])) = $8
	*(($8 + [120])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [2])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$6 = [1073741823]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [2]) > (uint_32)[536870910]) ){ goto $label$5 }
	$6 = int_32($7 >> [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[1073741824]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL _Znwj(($6 << [2]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $245($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [2])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [2]))
	$5 = ($4 + [4])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL _ZdlPv($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $248 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $2
	*($4 + [8]) = $3
	*($4 + [4]) = $1
	*($4) = $0
	CALL $254(*([0] + [23120]), [8204], $4)
	CALL $253([0])
	CALL abort()
	(unreachable)
}

void .FUNC $225 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$5 }
	$5 = uint_32($3 >> [1])
	if ( ($5 <= $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$3 }
	
.LABEL $label$4
	$1 = ($1 - $5)
	if ( ($1 == 0) ){ goto $label$2 }
	if ( $4 ){ goto $label$8 }
	$5 = [10]
	$4 = uint_32($3 >> [1])
	if ( (([10] - $4) <= $1) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = *($0 + [4])
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	if ( ((uint_32)($5 - $4) >= (uint_32)$1) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $226($0, $5, (($4 + $1) - $5), $4, $4, [0], [0])
	$3 = *($0)
	
.LABEL $label$6
	if ( ($3 & [1]) ){ goto $label$10 }
	$3 = ($0 + [1])
	goto $label$9 
	
.LABEL $label$10
	$3 = *($0 + [8])
	
.LABEL $label$9
	CALL memset(($3 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$11
	*($0 + [4]) = $1
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$3
	if ( $4 ){ goto $label$1 }
	*((($0 + $1) + [1])) = [0]
	*($0) = ($1 << [1])
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*((*($0 + [8]) + $1)) = [0]
	*($0 + [4]) = $1
}

void .FUNC $65 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [8814])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([144])) + [16]) = (int_64)0
	*($3 + [32 align=4]) = (int_64)0
	*($3 + [40]) = [0]
	*($3 + [120]) = $1
	CALL $189(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [124])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $190(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*(($3 + [40])))
	
.LABEL $label$4
	CALL _ZdlPv($3)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8782])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $303($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	*(($5 = CALL _Znwj([144])) + [16]) = (int_64)0
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [40]) = [0]
	*($5 + [120]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [48])
	*($3 + [56]) = ($5 + [80])
	*($3 + [60]) = ($5 + [112])
	CALL $191(($3 + [32]), ($3 + [24]))
	*($5 + [124]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [32]) = $6
	*($3 + [4]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $190(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $306($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($1 + [40])))
	
.LABEL $label$10
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $67 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)4229703216016654336, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$7), [8731])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $57($7, CALL $fimport$3(*($7), *($7 + [8]), (int_64)4229703216016654336, $6))
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$7), [8731])
	
.LABEL $label$2
	*(($4 + [120])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [13697])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [13742])
	$3 = *($0 + [24])
	$4 = $3
	$5 = ($0 + [28])
	$6 = *($5)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$1 }
	$7 = *($1)
	if ( ((int_64)*(*(($6 + [-24]))) != (int_64)$7) ){ goto $label$2 }
	$4 = $6
	goto $label$1 
	
.LABEL $label$2
	$8 = ($3 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$3 }
	$9 = ($6 + [-48])
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_64)*(*($9)) != (int_64)$7) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$4 = $3
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)$3), [13792])
	$3 = *($5)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = $4
	
.LOOP $label$8:
	$9 = *($6)
	*($6) = [0]
	$8 = ($6 + [-24])
	$4 = *($8)
	*($8) = $9
	if ( ($4 == 0) ){ goto $label$9 }
	CALL _ZdlPv($4)
	
.LABEL $label$9
	*(($6 + [-8])) = *(($6 + [16]))
	*(($6 + [-16])) = *(($6 + [8]))
	$6 = ($6 + [24])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$8 }
	$9 = ($6 + [-24])
	$4 = *(($0 + [28]))
	if ( ((int_32)($4 + [24]) != (int_32)$6) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$9 = ($4 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	CALL _ZdlPv($6)
	
.LABEL $label$11
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $9
	CALL db_remove_i64(*($1 + [28]))
	$6 = *(($1 + [32]))
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$13 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4986991444846706688, ($2 + [8]), *($1))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	
.LABEL $label$13
	CALL db_idx64_remove($6)
	
.LABEL $label$12
	$6 = *(($1 + [36]))
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$15 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4986991444846706689, ($2 + [8]), *($1))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$14 }
	
.LABEL $label$15
	CALL db_idx64_remove($6)
	
.LABEL $label$14
	$global$0 = ($2 + [16])
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($3 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($3 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL $52(*($1), ($3 + [24]))
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($3 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[31]), [8805])
	CALL memcpy(($3 + [48]), *($1 + [4]), [32])
	*($1 + [4]) = (*($1 + [4]) + [32])
}

int_32 .FUNC $60 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($3 + [88])))
	if ( ((*($3 + [44]) & [1]) == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((*($3 + [44]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL _ZdlPv(*(($3 + [52])))
	if ( (*($3 + [32]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*(($3 + [40])))
	
.LABEL $label$6
	CALL _ZdlPv($3)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$4 }
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8782])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $303($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([40])) + [24]) = $0
	*($5 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [8805])
	CALL memcpy($5, $2, [8])
	$6 = ($4 & [-8])
	CALL eosio_assert(((int_32)$6 != (int_32)[8]), [8805])
	CALL memcpy(($5 + [8]), ($2 + [8]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[16]), [8805])
	CALL memcpy(($5 + [16]), ($2 + [16]), [8])
	*($5 + [28]) = $1
	*($5 + [32 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$6 = *($8)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($6 + [8]) = $7
	*($6 + [16]) = $1
	*($3 + [24]) = [0]
	*($6) = $5
	*($8) = ($6 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $97(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $306($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [160])
	$global$0 = $2
	$3 = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$6 = CALL $220(($2 + [64]), ($1 + [24]))
	*(($7 = (($2 + [32]) + [16]))) = *(($1 + [64]))
	*(($8 = (($2 + [32]) + [24]))) = *(($1 + [72]))
	*($2 + [32]) = *($1 + [48])
	*($2 + [40]) = *(($1 + [56]))
	$9 = *($1 + [40])
	*((($2 + [80]) + [24])) = *($8)
	*((($2 + [80]) + [16])) = *($7)
	*($2 + [88]) = *($2 + [40])
	*($2 + [80]) = *($2 + [32])
	$1 = *($0 + [4])
	$7 = *($1 + [4])
	$0 = (*($0) + int_32($7 >> [1]))
	$1 = *($1)
	if ( (($7 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$7 = CALL $220(($2 + [144]), $6)
	$10 = *((($2 + [80]) + [24]))
	*((($2 + [112]) + [24])) = $10
	$11 = *((($2 + [80]) + [16]))
	*((($2 + [112]) + [16])) = $11
	*(($2 + [16])) = $11
	*(($2 + [24])) = $10
	$10 = *($2 + [88])
	*($2 + [120]) = $10
	$11 = *($2 + [80])
	*($2) = $11
	*($2 + [112]) = $11
	*($2 + [8]) = $10
	CALL void $0((int_32 $5), (int_64 $4), (int_64 $3), (int_64 $7), (int_32 $9), (int_64 $2), (int_32 $1))
	if ( (*($2 + [144]) & [1]) ){ goto $label$4 }
	if ( (*($6) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($7 + [8]))
	if ( ((*($6) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($6 + [8]))
	$global$0 = ($2 + [160])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [160])
}

void .FUNC apply (int_64 $0, int_64 apply, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [320])
	$global$0 = $3
	CALL memory()
	*($3 + [304]) = [8192]
	*($3 + [308]) = CALL $297([8192])
	*($3 + [144]) = *($3 + [304])
	CALL $2(($3 + [312]), ($3 + [144]))
	if ( ((int_64)$1 != (int_64)6138663591592764928) ){ goto $label$2 }
	*($3 + [288]) = [8260]
	*($3 + [292]) = CALL $297([8260])
	*($3 + [136]) = *($3 + [288])
	CALL $2(($3 + [296]), ($3 + [136]))
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$2 }
	*($3 + [284]) = [0]
	*($3 + [280]) = [1]
	*($3) = *($3 + [280])
	CALL $4($0, (int_64)6138663591592764928, $3)
	goto $label$1 
	
.LABEL $label$2
	*($3 + [272]) = [8368]
	*($3 + [276]) = CALL $297([8368])
	*($3 + [128]) = *($3 + [272])
	CALL $2(($3 + [312]), ($3 + [128]))
	if ( ((int_64)$1 != (int_64)-3772708262529052272) ){ goto $label$3 }
	*($3 + [264]) = [8260]
	*($3 + [268]) = CALL $297([8260])
	*($3 + [120]) = *($3 + [264])
	CALL $2(($3 + [296]), ($3 + [120]))
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$3 }
	*($3 + [260]) = [0]
	*($3 + [256]) = [2]
	*($3 + [8]) = *($3 + [256])
	CALL $4($0, (int_64)-3772708262529052272, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$1 }
	if ( ((int_64)$2 <= (int_64)4923678639197679247) ){ goto $label$15 }
	if ( ((int_64)$2 <= (int_64)4923678860458463743) ){ goto $label$14 }
	if ( ((int_64)$2 > (int_64)6291155395238952959) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)4923678860458463744) ){ goto $label$11 }
	if ( ((int_64)$2 != (int_64)5606348217378668544) ){ goto $label$1 }
	*($3 + [252]) = [0]
	*($3 + [248]) = [3]
	*($3 + [16]) = *($3 + [248])
	CALL $7($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$15
	if ( ((int_64)$2 > (int_64)-3068326984390684161) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)-6031097404874960384) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)-3076331829691678720) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)-3075596059716616192) ){ goto $label$1 }
	*($3 + [228]) = [0]
	*($3 + [224]) = [4]
	*($3 + [40]) = *($3 + [224])
	CALL $9($1, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$14
	if ( ((int_64)$2 == (int_64)4923678639197679248) ){ goto $label$8 }
	if ( ((int_64)$2 == (int_64)4923678810299170816) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)4923678860453928336) ){ goto $label$1 }
	*($3 + [188]) = [0]
	*($3 + [184]) = [5]
	*($3 + [80]) = *($3 + [184])
	CALL $11($1, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$13
	if ( ((int_64)$2 == (int_64)-3068326984390684160) ){ goto $label$6 }
	if ( ((int_64)$2 == (int_64)-3066762338935442944) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)4923678639197674896) ){ goto $label$1 }
	*($3 + [164]) = [0]
	*($3 + [160]) = [6]
	*($3 + [104]) = *($3 + [160])
	CALL $11($1, $1, ($3 + [104]))
	goto $label$1 
	
.LABEL $label$12
	if ( ((int_64)$2 == (int_64)6291155395238952960) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)6291155649356103680) ){ goto $label$1 }
	*($3 + [220]) = [0]
	*($3 + [216]) = [7]
	*($3 + [48]) = *($3 + [216])
	CALL $14($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$11
	*($3 + [180]) = [0]
	*($3 + [176]) = [8]
	*($3 + [88]) = *($3 + [176])
	CALL $11($1, $1, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$10
	*($3 + [236]) = [0]
	*($3 + [232]) = [9]
	*($3 + [32]) = *($3 + [232])
	CALL $17($1, $1, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [204]) = [0]
	*($3 + [200]) = [10]
	*($3 + [64]) = *($3 + [200])
	CALL $19($1, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [156]) = [0]
	*($3 + [152]) = [11]
	*($3 + [112]) = *($3 + [152])
	CALL $11($1, $1, ($3 + [112]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [172]) = [0]
	*($3 + [168]) = [12]
	*($3 + [96]) = *($3 + [168])
	CALL $11($1, $1, ($3 + [96]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [196]) = [0]
	*($3 + [192]) = [13]
	*($3 + [72]) = *($3 + [192])
	CALL $17($1, $1, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [244]) = [0]
	*($3 + [240]) = [14]
	*($3 + [24]) = *($3 + [240])
	CALL $24($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [212]) = [0]
	*($3 + [208]) = [15]
	*($3 + [56]) = *($3 + [208])
	CALL $26($1, $1, ($3 + [56]))
	
.LABEL $label$1
	CALL $249([0])
	$global$0 = ($3 + [320])
}

int_32 .FUNC $227 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $297($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $223($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $228 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$3 = ($2 & [1])
	if ( ($3 == 0) ){ goto $label$6 }
	$4 = ((*($0) & [-2]) + [-1])
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = [10]
	$2 = uint_32($2 >> [1])
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $226($0, $4, [1], $4, $4, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($2 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($2 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $2)) + [1]) = [0]
	*($0) = $1
}

int_32 .FUNC $229 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $223($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [8805])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($0, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = [0]
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($2 <= *($5)), [8810])
	$2 = *($6)
	$7 = *($2)
	$2 = ($2 + [1])
	*($6) = $2
	$3 = ($3 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $3)))
	$3 = ($3 + [7])
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $4)
	$7 = *($1)
	$3 = *($1 + [4])
	$5 = ($3 - $7)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$3 }
	CALL $49($1, ($6 - $5))
	$2 = *(($0 + [4]))
	$3 = *(($1 + [4]))
	$7 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$2 }
	$3 = ($7 + $6)
	*(($1 + [4])) = $3
	
.LABEL $label$2
	$2 = ($3 - $7)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $2) >= (uint_32)$2), [8805])
	$3 = ($0 + [4])
	CALL memcpy($7, *($3), $2)
	*($3) = (*($3) + $2)
	return $0
}

void .FUNC $87 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [16])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $52(*($1), *($0 + [4]))
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [8805])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($0, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $85 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1) = *(*($3))
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [24]) = (int_64)0
	$3 = *($0)
	*($1 + [32]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($2 + [56]) = ($2 + [40])
	*($2 + [52]) = $2
	*($2 + [48]) = $2
	*($2 + [64]) = ($2 + [48])
	$4 = ($1 + [8])
	*($2 + [76]) = $4
	*($2 + [72]) = $1
	*($2 + [80]) = ($1 + [16])
	*($2 + [84]) = ($1 + [24])
	*($2 + [88]) = ($1 + [32])
	CALL $91(($2 + [72]), ($2 + [64]))
	$5 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($3 + [8]), (int_64)-6031097554559041536, *(*($0 + [8])), $5, $2, [40])
	if ( (uint_64)($5 <= *($3 + [16])) ){ goto $label$1 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$5 = *(($3 + [8]))
	$6 = *(*(($0 + [8])))
	$7 = *($1)
	*($2 + [72]) = *($4)
	*($1 + [48]) = CALL db_idx64_store($5, (int_64)-6031097554559041536, $6, $7, ($2 + [72]))
	$global$0 = ($2 + [96])
}

void .FUNC $83 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $82 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [96])
	$global$0 = $3
	*($0 + [24]) = (int_64)0
	*($0 + [8]) = (int_64)0
	*($0 + [48]) = $1
	*(($4 = ($0 + [32]))) = (int_64)0
	$1 = *($2 + [4])
	*($0) = *(*($1))
	*($0 + [8]) = *(*($1 + [4]))
	*($0 + [16]) = *(*($1 + [8]))
	$5 = *($2)
	$1 = *($1 + [12])
	*($0 + [24]) = *($1)
	*($4) = *(($1 + [8]))
	*($0 + [40]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($3 + [56]) = ($3 + [48])
	*($3 + [52]) = $3
	*($3 + [48]) = $3
	*($3 + [64]) = ($3 + [48])
	*($3 + [76]) = ($0 + [8])
	*($3 + [72]) = $0
	*($3 + [80]) = ($0 + [16])
	*($3 + [84]) = ($0 + [24])
	*($3 + [88]) = ($0 + [40])
	CALL $90(($3 + [72]), ($3 + [64]))
	$6 = *($0)
	*($0 + [52]) = CALL db_store_i64(*($5 + [8]), (int_64)-7696768201719283712, *(*($2 + [8])), $6, $3, [48])
	if ( (uint_64)($6 <= *($5 + [16])) ){ goto $label$1 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($3 + [96])
	return $0
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [13697])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [13742])
	$3 = *($0 + [24])
	$4 = $3
	$5 = ($0 + [28])
	$6 = *($5)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$1 }
	$7 = *($1)
	if ( ((int_64)*(*(($6 + [-24]))) != (int_64)$7) ){ goto $label$2 }
	$4 = $6
	goto $label$1 
	
.LABEL $label$2
	$8 = ($3 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$3 }
	$9 = ($6 + [-48])
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_64)*(*($9)) != (int_64)$7) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$4 = $3
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)$3), [13792])
	$3 = *($5)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = $4
	
.LOOP $label$8:
	$9 = *($6)
	*($6) = [0]
	$8 = ($6 + [-24])
	$4 = *($8)
	*($8) = $9
	if ( ($4 == 0) ){ goto $label$9 }
	CALL _ZdlPv($4)
	
.LABEL $label$9
	*(($6 + [-8])) = *(($6 + [16]))
	*(($6 + [-16])) = *(($6 + [8]))
	$6 = ($6 + [24])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$8 }
	$9 = ($6 + [-24])
	$4 = *(($0 + [28]))
	if ( ((int_32)($4 + [24]) != (int_32)$6) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$9 = ($4 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	CALL _ZdlPv($6)
	
.LABEL $label$11
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $9
	CALL db_remove_i64(*($1 + [44]))
	$6 = *(($1 + [48]))
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$13 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5002123547857244672, ($2 + [8]), *($1))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	
.LABEL $label$13
	CALL db_idx64_remove($6)
	
.LABEL $label$12
	$global$0 = ($2 + [16])
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [13697])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [13742])
	$2 = *($0 + [24])
	$3 = $2
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$1 }
	$6 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) != (int_64)$6) ){ goto $label$2 }
	$3 = $5
	goto $label$1 
	
.LABEL $label$2
	$7 = ($2 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($5 + [-48])
	$3 = ($5 + [-24])
	$5 = $3
	if ( ((int_64)*(*($8)) != (int_64)$6) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$3 = $2
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)$2), [13792])
	$2 = *($4)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$7 }
	$5 = $3
	
.LOOP $label$8:
	$8 = *($5)
	*($5) = [0]
	$7 = ($5 + [-24])
	$3 = *($7)
	*($7) = $8
	if ( ($3 == 0) ){ goto $label$9 }
	CALL _ZdlPv($3)
	
.LABEL $label$9
	*(($5 + [-8])) = *(($5 + [16]))
	*(($5 + [-16])) = *(($5 + [8]))
	$5 = ($5 + [24])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = ($3 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL _ZdlPv($5)
	
.LABEL $label$11
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [52]))
}

void .FUNC $182 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = ($1 + [8])
	CALL $222($6, *($4 + [4]))
	$4 = *($1 + [8])
	$7 = ( *(($1 + [12])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($7 + [8])
	$8 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$2 = CALL $303($4)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	CALL eosio_assert(((int_32)$4 > (int_32)[7]), [8865])
	CALL memcpy($2, $1, [8])
	*($3 + [4]) = ($2 + [8])
	CALL $174($3, $6)
	$8 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($5 + [8]), (int_64)4982871454518345728, *(*($0 + [8])), $8, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$8 >= (uint_64)*($5 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $306($2)
	if ( (uint_64)($8 <= *($5 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [16])
}

int_32 .FUNC $149 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [16])
	$global$0 = $4
	$2 = CALL $150($0, $1, ($4 + [12]), ($4 + [8]), $2)
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$1 }
	$global$0 = ($4 + [16])
	return $1
	
.LABEL $label$1
	$1 = CALL _Znwj([48])
	CALL $220(($1 + [16]), $3)
	CALL $141(($1 + [32]), ($3 + [16]))
	*($1) = (int_64)0
	*($1 + [8]) = *($4 + [12])
	*($2) = $1
	$3 = $1
	$5 = *(*($0))
	if ( ($5 == 0) ){ goto $label$2 }
	*($0) = $5
	$3 = *($2)
	
.LABEL $label$2
	CALL $95(*($0 + [4]), $3)
	*($0 + [8]) = (*($0 + [8]) + [1])
	$global$0 = ($4 + [16])
	return $1
}

int_32 .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($1 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$3 = $2
	$2 = *($3)
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = *($1 + [8])
	if ( ((int_32)*($3) == (int_32)$1) ){ goto $label$1 }
	$4 = ($1 + [8])
	
.LOOP $label$4:
	$2 = *($4)
	$4 = ($2 + [8])
	$3 = *($2 + [8])
	if ( ((int_32)$2 != (int_32)*($3)) ){ goto $label$4 }
	
.LABEL $label$1
	if ( ((int_32)*($0) != (int_32)$1) ){ goto $label$5 }
	*($0) = $3
	
.LABEL $label$5
	*($0 + [8]) = (*($0 + [8]) + [-1])
	CALL $151(*($0 + [4]), $1)
	$2 = *($1 + [32])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$11 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$12 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$10 }
	if ( (*($1 + [40]) == 0) ){ goto $label$8 }
	$4 = ($1 + [40])
	goto $label$9 
	
.LABEL $label$12
	if ( (*($1 + [40]) == 0) ){ goto $label$7 }
	$4 = ($1 + [40])
	goto $label$9 
	
.LABEL $label$11
	if ( (*($1 + [40]) == 0) ){ goto $label$6 }
	$4 = ($1 + [40])
	goto $label$9 
	
.LABEL $label$10
	$4 = ($1 + [40])
	
.LABEL $label$9
	CALL $38($4, $2)
	if ( ((*(($1 + [16])) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*($1 + [24]))
	
.LABEL $label$13
	CALL _ZdlPv($1)
	return $3
	
.LABEL $label$8
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$7
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$6
	CALL $248([9197], [9181], [13422], [9252])
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0)
	$4 = int_32((*($0 + [4]) - $3) >> [4])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	$6 = ($0 + [8])
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [4]) >= (uint_32)[134217727]) ){ goto $label$5 }
	*(($2 + [24])) = $6
	$3 = [0]
	*($2 + [20]) = [0]
	$6 = ($2 + [20])
	$7 = int_32($7 >> [3])
	$5 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ($5 <= [268435456]) ){ goto $label$4 }
	CALL abort()
	
.LABEL $label$5
	*(($2 + [24])) = $6
	*($2 + [20]) = [0]
	$6 = ($2 + [20])
	$5 = [268435455]
	
.LABEL $label$4
	$3 = CALL _Znwj(($5 << [4]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	*($2 + [8]) = $3
	*(($2 + [20])) = ($3 + ($5 << [4]))
	$3 = ($3 + ($4 << [4]))
	*($2 + [16]) = $3
	*($2 + [12]) = $3
	CALL $144($3, $1)
	$7 = (*($2 + [16]) + [16])
	*($2 + [16]) = $7
	$1 = *($0)
	$3 = *(($0 + [4]))
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$7 }
	$5 = (*($2 + [12]) + [-16])
	
.LOOP $label$8:
	$3 = ($3 + [-16])
	$4 = CALL $144($5, $3)
	$5 = ($5 + [-16])
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$8 }
	*($2 + [12]) = $4
	$3 = *(($0 + [4]))
	$1 = *($0)
	goto $label$6 
	
.LABEL $label$7
	$4 = *($2 + [12])
	
.LABEL $label$6
	*($0) = $4
	*(($0 + [4])) = $7
	*((($2 + [8]) + [8])) = $3
	*($2 + [12]) = $1
	$3 = ($0 + [8])
	$5 = *($3)
	*($3) = *($6)
	*($6) = $5
	*($2 + [8]) = $1
	CALL $146(($2 + [8]))
	$global$0 = ($2 + [32])
	(unreachable)
	(unreachable)
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	*($0) = *($1)
	*($0 + [8]) = *($1 + [8])
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)[3]) ){ goto $label$4 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$5 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$3 }
	if ( *(($1 + [8])) ){ goto $label$3 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$5
	if ( *(($1 + [8])) ){ goto $label$3 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$4
	if ( (*(($1 + [8])) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($1 + [8]) = (int_64)0
	*($1) = [0]
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)[3]) ){ goto $label$7 }
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$8 }
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$6 }
	if ( *($0 + [8]) ){ goto $label$6 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$8
	if ( *($0 + [8]) ){ goto $label$6 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$7
	if ( (*($0 + [8]) == 0) ){ goto $label$1 }
	
.LABEL $label$6
	return $0
	
.LABEL $label$2
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$1
	CALL $248([9322], [9181], [13424], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $147 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*(($1 = CALL _Znwj([12])) + [4 align=4]) = (int_64)0
	$2 = ($1 + [4])
	*($1) = $2
	$4 = ($0 + [4])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$2:
	$5 = $3
	$0 = ($5 + [16])
	CALL $149($1, $2, $0, $0)
	$0 = *($5 + [4])
	if ( ($0 == 0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = $0
	$0 = *($3)
	if ( $0 ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$3 = *($5 + [8])
	if ( ((int_32)*($3) == (int_32)$5) ){ goto $label$3 }
	$5 = ($5 + [8])
	
.LOOP $label$6:
	$0 = *($5)
	$5 = ($0 + [8])
	$3 = *($0 + [8])
	if ( ((int_32)$0 != (int_32)*($3)) ){ goto $label$6 }
	
.LABEL $label$3
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ($1 == 0) ){ goto $label$7 }
	return $1
	
.LABEL $label$7
	CALL $248([9163], [9181], [13215], [9190])
	return (unreachable)
}

int_32 .FUNC $146 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [8])
	
.LOOP $label$5:
	$4 = ($1 + [-16])
	*($3) = $4
	$4 = *($4)
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$8 }
	if ( ((int_32)$4 == (int_32)[2]) ){ goto $label$9 }
	if ( ((int_32)$4 != (int_32)[3]) ){ goto $label$6 }
	$1 = ($1 + [-8])
	if ( *($1) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$9
	$1 = ($1 + [-8])
	if ( *($1) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$8
	$1 = ($1 + [-8])
	if ( (*($1) == 0) ){ goto $label$1 }
	
.LABEL $label$7
	CALL $38($1, $4)
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $38(($1 + [-8]), $4)
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = *($0)
	if ( ($4 == 0) ){ goto $label$10 }
	CALL _ZdlPv($4)
	
.LABEL $label$10
	return $0
	
.LABEL $label$3
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$2
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$1
	CALL $248([9197], [9181], [13422], [9252])
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = *($1)
	*($0 + [8]) = (int_64)0
	*($0) = $2
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)[3]) ){ goto $label$9 }
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$10 }
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$8 }
	if ( *($1 + [8]) ){ goto $label$8 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$10
	if ( *($1 + [8]) ){ goto $label$8 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$9
	if ( (*($1 + [8]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$2 = ($2 + [-1])
	if ( ((uint_32)$2 > (uint_32)[6]) ){ goto $label$16 }
	goto $label$20 
	
.LABEL $label$20
	$4 = CALL $147(*($1 + [8]))
	*(($0 + [8])) = $4
	$1 = *($0)
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$19
	$5 = *($1 + [8])
	*(($0 + [8])) = $5
	$4 = (CASTING uint_32)(uint_64 $5)
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)[3]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$18
	$1 = *($1 + [8])
	$4 = CALL _Znwj([12])
	CALL $220($4, $1)
	if ( ($4 == 0) ){ goto $label$6 }
	*(($0 + [8])) = $4
	$1 = *($0)
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$17
	$4 = *($1 + [8])
	*(($0 + [8])) = (CASTING uint_64)(uint_32 $4)
	$1 = *($0)
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$16
	$4 = [0]
	$1 = *($0)
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$15
	$6 = *($1 + [8])
	*(($4 = CALL _Znwj([12]))) = (int_64)0
	*($4 + [8]) = [0]
	$1 = (*($6 + [4]) - *($6))
	if ( ($1 == 0) ){ goto $label$12 }
	$7 = int_32($1 >> [4])
	if ( ((uint_32)$7 >= (uint_32)[268435456]) ){ goto $label$5 }
	$2 = CALL _Znwj($1)
	*(($3 = ($4 + [4]))) = $2
	*(($4 + [8])) = ($2 + ($7 << [4]))
	*($4) = $2
	$6 = *(($6 + [4]))
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$11 }
	
.LOOP $label$21:
	CALL $141($2, $1)
	$2 = (*($3) + [16])
	*($3) = $2
	$1 = ($1 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$21 }
	goto $label$11 
	
.LABEL $label$14
	$5 = *($1 + [8])
	*(($0 + [8])) = $5
	$4 = (CASTING uint_32)(uint_64 $5)
	$1 = *($0)
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$13
	$5 = *($1 + [8])
	*(($0 + [8])) = $5
	$4 = (CASTING uint_32)(uint_64 $5)
	$1 = *($0)
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$12
	if ( ($4 == 0) ){ goto $label$4 }
	
.LABEL $label$11
	*(($0 + [8])) = $4
	$1 = *($0)
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$7
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$6
	CALL $248([9163], [9181], [13215], [9190])
	
.LABEL $label$5
	CALL $245($4)
	
.LABEL $label$4
	CALL $248([9163], [9181], [13215], [9190])
	
.LABEL $label$3
	if ( $4 ){ goto $label$1 }
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$2
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$22 }
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$1 }
	if ( $4 ){ goto $label$1 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$22
	if ( $4 ){ goto $label$1 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$1
	(unreachable)
	(unreachable)
	$2
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return $0
}

void .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [2])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$6 = [1073741823]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [2]) > (uint_32)[536870910]) ){ goto $label$5 }
	$6 = int_32($7 >> [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[1073741824]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL _Znwj(($6 << [2]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $245($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [2])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [2]))
	$5 = ($4 + [4])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL _ZdlPv($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $143 (int_32 $0)
{
	*($0) = [13184]
	CALL $216(($0 + [8]))
	CALL $244($0)
	return $0
}

void .FUNC $142 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$global$0 = $3
	if ( ((int_32)*($2) != (int_32)$1) ){ goto $label$2 }
	*($0) = $1
	*($0 + [4 align=4]) = (int_64)0
	*(($0 + [12])) = [-2147483648]
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)[2]) ){ goto $label$13 }
	if ( ((int_32)$4 != (int_32)[1]) ){ goto $label$12 }
	*(($0 + [4])) = CALL $148(*($1 + [8]), *($2 + [4]))
	$global$0 = ($3 + [16])
	return (unreachable)
	
.LABEL $label$13
	$5 = *($1 + [8])
	$1 = *($5 + [4])
	*(($0 + [8])) = $1
	$6 = *(($2 + [8]))
	$4 = ($6 + [16])
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$11 }
	$7 = ($1 + [-16])
	$4 = ($3 + [8])
	$1 = $6
	
.LOOP $label$14:
	$1 = ($1 + [16])
	$1 = $1
	CALL $103($1, CALL $144($3, $1))
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)[3]) ){ goto $label$16 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$17 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$15 }
	if ( *($4) ){ goto $label$15 }
	goto $label$5 
	
.LABEL $label$17
	if ( *($4) ){ goto $label$15 }
	goto $label$4 
	
.LABEL $label$16
	if ( (*($4) == 0) ){ goto $label$3 }
	
.LABEL $label$15
	CALL $38($4, $2)
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$14 }
	$4 = *(($5 + [4]))
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	*(($0 + [12])) = [1]
	if ( ((uint_32)(($4 + [-3]) & [255]) > (uint_32)[4]) ){ goto $label$2 }
	if ( *(($2 + [12])) ){ goto $label$2 }
	if ( ((int_32)$4 != (int_32)[3]) ){ goto $label$18 }
	$2 = *($1 + [8])
	if ( ((*($2) & [1]) == 0) ){ goto $label$19 }
	CALL _ZdlPv(*($2 + [8]))
	$2 = *(($1 + [8]))
	
.LABEL $label$19
	CALL _ZdlPv($2)
	*(($1 + [8])) = [0]
	
.LABEL $label$18
	*($1) = [0]
	$global$0 = ($3 + [16])
	return (unreachable)
	
.LABEL $label$11
	$1 = $6
	
.LABEL $label$10
	
.LOOP $label$20:
	$7 = $4
	$4 = ($7 + [-16])
	$2 = *($4)
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$23 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$24 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$21 }
	$7 = ($7 + [-8])
	if ( *($7) ){ goto $label$22 }
	goto $label$8 
	
.LABEL $label$24
	$7 = ($7 + [-8])
	if ( *($7) ){ goto $label$22 }
	goto $label$7 
	
.LABEL $label$23
	$7 = ($7 + [-8])
	if ( (*($7) == 0) ){ goto $label$6 }
	
.LABEL $label$22
	CALL $38($7, $2)
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$20 }
	goto $label$9 
	
.LABEL $label$21
	CALL $38(($7 + [-8]), $2)
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$20 }
	
.LABEL $label$9
	*(($0 + [8])) = $6
	*(($5 + [4])) = $1
	$global$0 = ($3 + [16])
	return (unreachable)
	
.LABEL $label$8
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$7
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$6
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$5
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$4
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$3
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	CALL $248([13079], [9181], [5677], [13099])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $72 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [120]) == (int_32)$0), [8906])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [8952])
	$6 = *($3)
	*($1 + [48]) = *($6)
	*(($1 + [72])) = *(($6 + [24]))
	*(($1 + [64])) = *(($6 + [16]))
	*(($1 + [56])) = *(($6 + [8]))
	*($1 + [112]) = (int_64)1
	*($1 + [24]) = *(*($3 + [4]))
	$7 = *($1)
	CALL eosio_assert([1], [9003])
	$6 = *($1 + [32])
	$3 = ( *(($1 + [36])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($3 + [104])
	$8 = (CASTING uint_64)(uint_32 $3)
	$9 = ($1 + [32])
	$10 = ($1 + [112])
	$11 = ($1 + [24])
	$12 = ($1 + [48])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($6 <= [513]) ){ goto $label$3 }
	$3 = CALL $303($6)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $6)
	*($5 + [24]) = ($5 + [8])
	*($5 + [44]) = $11
	*($5 + [48]) = $9
	*($5 + [52]) = $12
	*($5 + [60]) = $10
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [56]) = ($1 + [80])
	CALL $192(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*(($1 + [124])), $2, $3, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$7 >= (uint_64)*($0 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $306($3)
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$4
	$global$0 = ($5 + [64])
}

void .FUNC $73 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$4 = ($global$0 - [80])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)$0), [8906])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [8952])
	*(($5 = $4) + [16]) = *($1 + [8])
	$6 = *($1)
	CALL eosio_assert(((uint_64)*($1 + [96]) >= (uint_64)*($1 + [72])), [14206])
	*($1 + [96]) = (int_64))(*($1 + [96]) - *($1 + [72]))
	CALL eosio_assert(((int_64)$6 == (int_64)*($1)), [9003])
	*($5 + [24]) = [0]
	*($5) = ($5 + [24])
	$7 = ($1 + [8])
	*($5 + [36]) = $7
	*($5 + [32]) = $1
	$8 = ($1 + [16])
	*($5 + [40]) = $8
	$9 = ($1 + [24])
	*($5 + [44]) = $9
	$10 = ($1 + [32])
	*($5 + [48]) = $10
	$11 = ($1 + [44])
	*($5 + [52]) = $11
	$12 = ($1 + [56])
	*($5 + [56]) = $12
	$13 = ($1 + [72])
	*($5 + [60]) = $13
	$14 = ($1 + [80])
	*($5 + [64]) = $14
	$15 = ($1 + [96])
	*($5 + [68]) = $15
	$16 = ($1 + [104])
	*($5 + [72]) = $16
	CALL $187(($5 + [32]), $5)
	$17 = *($5 + [24])
	if ( ($17 <= [513]) ){ goto $label$2 }
	$4 = CALL $303($17)
	goto $label$1 
	
.LABEL $label$2
	$4 = ($4 - (($17 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$1
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $17)
	*($5 + [24]) = $5
	*($5 + [36]) = $7
	*($5 + [40]) = $8
	*($5 + [44]) = $9
	*($5 + [48]) = $10
	*($5 + [52]) = $11
	*($5 + [56]) = $12
	*($5 + [60]) = $13
	*($5 + [64]) = $14
	*($5 + [68]) = $15
	*($5 + [72]) = $16
	*($5 + [32]) = $1
	CALL $188(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [116]), $2, $4, $17)
	if ( ($17 <= [513]) ){ goto $label$3 }
	CALL $306($4)
	
.LABEL $label$3
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($5 + [32]) = *($7)
	if ( (CALL $296(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$5 }
	$4 = ($1 + [120])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$6 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4229703216016654336, ($5 + [24]), $6)
	*($4) = $1
	
.LABEL $label$6
	CALL db_idx64_update($1, $2, ($5 + [32]))
	
.LABEL $label$5
	$global$0 = ($5 + [80])
}

int_32 .FUNC $70 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	
.LOOP $label$1:
	$6 = *(($1 + $5))
	CALL $228($4, *((uint_32($6 >> [4]) + [14035])))
	CALL $228($4, *((($6 & [15]) + [14035])))
	$5 = ($5 + [1])
	if ( ((int_32)$5 != (int_32)[32]) ){ goto $label$1 }
	$5 = *($4)
	$6 = ($5 & [1])
	$7 = ( *(($4 + [8])) ? ($4 | [1]) : $6 )
	$8 = ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($8 <= [4]) ){ goto $label$5 }
	$1 = $8
	$5 = $7
	$6 = $8
	
.LOOP $label$6:
	CALL memcpy(($4 + [12]), $5, [4])
	$9 = ((int_32)*($4 + [12]) * (int_32)[1540483477])
	$6 = ((int_32)((int_32)((int_32)uint_32($9 >> [24]) ^ (int_32)$9) * (int_32)[1540483477]) ^ (int_32)((int_32)$6 * (int_32)[1540483477]))
	$5 = ($5 + [4])
	$1 = ($1 + [-4])
	if ( ((uint_32)$1 > (uint_32)[3]) ){ goto $label$6 }
	$5 = ($8 + [-4])
	$1 = ($5 & [-4])
	$7 = (($7 + $1) + [4])
	$8 = ($5 - $1)
	if ( ((int_32)$8 == (int_32)[1]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = $8
	if ( ((int_32)$8 == (int_32)[1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)[2]) ){ goto $label$7 }
	if ( ((int_32)$8 != (int_32)[3]) ){ goto $label$2 }
	$6 = ((int_32)(*($7 + [2]) << [16]) ^ (int_32)$6)
	
.LABEL $label$7
	$6 = ((int_32)(*($7 + [1]) << [8]) ^ (int_32)$6)
	
.LABEL $label$3
	$6 = ((int_32)((int_32)$6 ^ (int_32)*($7)) * (int_32)[1540483477])
	
.LABEL $label$2
	$5 = ((int_32)((int_32)uint_32($6 >> [13]) ^ (int_32)$6) * (int_32)[1540483477])
	$5 = ((int_32)uint_32($5 >> [15]) ^ (int_32)$5)
	if ( ((*($4) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$8
	$8 = ($5 + [-1640531527])
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	
.LOOP $label$9:
	$6 = *(($2 + $5))
	CALL $228($4, *((uint_32($6 >> [4]) + [14035])))
	CALL $228($4, *((($6 & [15]) + [14035])))
	$5 = ($5 + [1])
	if ( ((int_32)$5 != (int_32)[32]) ){ goto $label$9 }
	$5 = *($4)
	$6 = ($5 & [1])
	$7 = ( *(($4 + [8])) ? ($4 | [1]) : $6 )
	$9 = ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($9 <= [4]) ){ goto $label$13 }
	$1 = $9
	$5 = $7
	$6 = $9
	
.LOOP $label$14:
	CALL memcpy(($4 + [12]), $5, [4])
	$2 = ((int_32)*($4 + [12]) * (int_32)[1540483477])
	$6 = ((int_32)((int_32)((int_32)uint_32($2 >> [24]) ^ (int_32)$2) * (int_32)[1540483477]) ^ (int_32)((int_32)$6 * (int_32)[1540483477]))
	$5 = ($5 + [4])
	$1 = ($1 + [-4])
	if ( ((uint_32)$1 > (uint_32)[3]) ){ goto $label$14 }
	$5 = ($9 + [-4])
	$1 = ($5 & [-4])
	$7 = (($7 + $1) + [4])
	$9 = ($5 - $1)
	if ( ((int_32)$9 == (int_32)[1]) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$13
	$6 = $9
	if ( ((int_32)$9 == (int_32)[1]) ){ goto $label$11 }
	
.LABEL $label$12
	if ( ((int_32)$9 == (int_32)[2]) ){ goto $label$15 }
	if ( ((int_32)$9 != (int_32)[3]) ){ goto $label$10 }
	$6 = ((int_32)(*($7 + [2]) << [16]) ^ (int_32)$6)
	
.LABEL $label$15
	$6 = ((int_32)(*($7 + [1]) << [8]) ^ (int_32)$6)
	
.LABEL $label$11
	$6 = ((int_32)((int_32)$6 ^ (int_32)*($7)) * (int_32)[1540483477])
	
.LABEL $label$10
	$5 = ((int_32)((int_32)uint_32($6 >> [13]) ^ (int_32)$6) * (int_32)[1540483477])
	$5 = ((int_32)(((($8 << [6]) + uint_32($8 >> [2])) + ((int_32)uint_32($5 >> [15]) ^ (int_32)$5)) + [-1640531527]) ^ (int_32)$8)
	if ( ((*($4) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$16
	$global$0 = ($4 + [16])
	return ((CASTING uint_32)(uint_64 ((uint_64)(CASTING uint_64)(uint_32 $5) % (uint_64)$3)) & [255])
}

void .FUNC $71 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [8814])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([56])) + [40]) = $1
	*($3 + [8]) = (int_64)0
	CALL $193(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [44])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $194(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

int_32 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8782])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $303($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $4)
	*(($5 = CALL _Znwj([56])) + [40]) = $0
	*($5 + [8]) = (int_64)0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	CALL $197(($3 + [40]), ($3 + [32]))
	*($5 + [48]) = [-1]
	*($5 + [44]) = $1
	*($3 + [32]) = $5
	$6 = *($5)
	*($3 + [40]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [32]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $194(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $306($2)
	
.LABEL $label$6
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $77 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [8814])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([56])) + [40]) = $1
	*($3 + [8]) = (int_64)0
	CALL $198(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [44])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $199(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8782])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $303($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $4)
	*(($5 = CALL _Znwj([56])) + [40]) = $0
	*($5 + [8]) = (int_64)0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	CALL $200(($3 + [40]), ($3 + [32]))
	*($5 + [48]) = [-1]
	*($5 + [44]) = $1
	*($3 + [32]) = $5
	$6 = *($5)
	*($3 + [40]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [32]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $199(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $306($2)
	
.LABEL $label$6
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $75 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [8906])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [8952])
	*($4 + [56]) = *($1 + [8])
	$5 = *($1)
	$6 = *(*($3))
	*($1) = $6
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [24]) = *(*($3 + [12]))
	CALL eosio_assert(((int_64)$5 == (int_64)$6), [9003])
	*($4 + [48]) = ($4 + [40])
	*($4 + [44]) = $4
	*($4 + [40]) = $4
	*($4 + [64]) = ($4 + [40])
	$3 = ($1 + [8])
	*($4 + [76]) = $3
	*($4 + [72]) = $1
	*($4 + [80]) = ($1 + [16])
	*($4 + [84]) = ($1 + [24])
	*($4 + [88]) = ($1 + [32])
	CALL $201(($4 + [72]), ($4 + [64]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($4 + [72]) = *($3)
	if ( (CALL $296(($4 + [56]), ($4 + [72]), [8]) == 0) ){ goto $label$2 }
	$3 = ($1 + [48])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$3 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5002123547857244672, ($4 + [64]), $5)
	*($3) = $1
	
.LABEL $label$3
	CALL db_idx64_update($1, $2, ($4 + [72]))
	
.LABEL $label$2
	$global$0 = ($4 + [96])
}

void .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [13697])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [13742])
	$3 = *($0 + [24])
	$4 = $3
	$5 = ($0 + [28])
	$6 = *($5)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$1 }
	$7 = *($1)
	if ( ((int_64)*(*(($6 + [-24]))) != (int_64)$7) ){ goto $label$2 }
	$4 = $6
	goto $label$1 
	
.LABEL $label$2
	$8 = ($3 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$3 }
	$9 = ($6 + [-48])
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_64)*(*($9)) != (int_64)$7) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$4 = $3
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)$3), [13792])
	$3 = *($5)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = $4
	
.LOOP $label$8:
	$9 = *($6)
	*($6) = [0]
	$8 = ($6 + [-24])
	$4 = *($8)
	*($8) = $9
	if ( ($4 == 0) ){ goto $label$9 }
	CALL _ZdlPv($4)
	
.LABEL $label$9
	*(($6 + [-8])) = *(($6 + [16]))
	*(($6 + [-16])) = *(($6 + [8]))
	$6 = ($6 + [24])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$8 }
	$9 = ($6 + [-24])
	$4 = *(($0 + [28]))
	if ( ((int_32)($4 + [24]) != (int_32)$6) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$9 = ($4 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	CALL _ZdlPv($6)
	
.LABEL $label$11
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $9
	CALL db_remove_i64(*($1 + [44]))
	$6 = *(($1 + [48]))
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$13 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5002113041930367488, ($2 + [8]), *($1))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	
.LABEL $label$13
	CALL db_idx64_remove($6)
	
.LABEL $label$12
	$global$0 = ($2 + [16])
}

void .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [13697])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [13742])
	$3 = *($0 + [24])
	$4 = $3
	$5 = ($0 + [28])
	$6 = *($5)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$1 }
	$7 = *($1)
	if ( ((int_64)*(*(($6 + [-24]))) != (int_64)$7) ){ goto $label$2 }
	$4 = $6
	goto $label$1 
	
.LABEL $label$2
	$8 = ($3 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$3 }
	$9 = ($6 + [-48])
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_64)*(*($9)) != (int_64)$7) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$4 = $3
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)$3), [13792])
	$3 = *($5)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = $4
	
.LOOP $label$8:
	$9 = *($6)
	*($6) = [0]
	$8 = ($6 + [-24])
	$4 = *($8)
	*($8) = $9
	if ( ($4 == 0) ){ goto $label$9 }
	CALL _ZdlPv($4)
	
.LABEL $label$9
	*(($6 + [-8])) = *(($6 + [16]))
	*(($6 + [-16])) = *(($6 + [8]))
	$6 = ($6 + [24])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$8 }
	$9 = ($6 + [-24])
	$4 = *(($0 + [28]))
	if ( ((int_32)($4 + [24]) != (int_32)$6) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$9 = ($4 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	CALL _ZdlPv($6)
	
.LABEL $label$11
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $9
	CALL db_remove_i64(*($1 + [44]))
	$6 = *(($1 + [48]))
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$13 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6031097404874960384, ($2 + [8]), *($1))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	
.LABEL $label$13
	CALL db_idx64_remove($6)
	
.LABEL $label$12
	$global$0 = ($2 + [16])
}

void .FUNC $241 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL $297($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $4)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$4 }
	$6 = *($1)
	$7 = *($1 + [8])
	if ( ((uint_32)$5 > (uint_32)[10]) ){ goto $label$7 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = (($5 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*(($0 + [8])) = $5
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL memcpy($5, ( $7 ? ($1 + [1]) : ($6 & [1]) ), $3)
	
.LABEL $label$5
	*(($5 + $3)) = [0]
	$1 = *($0)
	$5 = ($1 & [1])
	if ( $5 ){ goto $label$9 }
	$3 = [10]
	$1 = uint_32($1 >> [1])
	if ( (([10] - $1) <= $4) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$9
	$1 = *(($0 + [4]))
	$3 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($3 - $1) >= (uint_32)$4) ){ goto $label$3 }
	
.LABEL $label$8
	CALL $223($0, $3, (($1 + $4) - $3), $1, $1, [0], $4, $2)
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	if ( ($4 == 0) ){ goto $label$2 }
	$3 = ( *(($0 + [8])) ? ($0 + [1]) : $5 )
	CALL memcpy(($3 + $1), $2, $4)
	$1 = ($1 + $4)
	if ( (*($0) & [1]) ){ goto $label$1 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($0 + [4])) = $1
	*(($3 + $1)) = [0]
	(unreachable)
}

int_32 .FUNC $259 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

void .FUNC $258 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

void .FUNC $223 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL _ZdlPv($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $268 (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

int_32 .FUNC $251 (int_32 $0)
{
	int_32 $1
	return $1
}

int_32 .FUNC $250 ()
{
	return [22840]
}

int_32 .FUNC $253 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = [0]
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$5 }
	$1 = CALL $251($0)
	
.LABEL $label$5
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$6 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	if ( (*(($0 + [20])) == 0) ){ goto $label$3 }
	
.LABEL $label$6
	$3 = *($0 + [8])
	$2 = *($0 + [4])
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$7 }
	CALL int_64 $0((int_32 (CASTING int_64)(int_32 ($2 - $3))), (int_64 [1]), (int_32 *($0 + [40])))
	
.LABEL $label$7
	*($0 + [16]) = (int_64)0
	$2 = [0]
	*(($0 + [28])) = [0]
	*(($0 + [4])) = (int_64)0
	if ( ($1 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	if ( (*([0] + [14392]) == 0) ){ goto $label$8 }
	$4 = CALL $253(*([0] + [14392]))
	
.LABEL $label$8
	$0 = *(CALL $255())
	if ( ($0 == 0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = [0]
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$11 }
	$1 = CALL $251($0)
	
.LABEL $label$11
	$3 = *($0 + [28])
	$2 = *($0 + [20])
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$12 }
	$5 = [0]
	if ( ((int_32)*(($0 + [76])) < (int_32)[0]) ){ goto $label$13 }
	$5 = CALL $251($0)
	$3 = *(($0 + [28]))
	$2 = *(($0 + [20]))
	
.LABEL $label$13
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$16 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	if ( *(($0 + [20])) ){ goto $label$16 }
	$2 = [-1]
	if ( $5 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$3 = *($0 + [8])
	$2 = *($0 + [4])
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$17 }
	CALL int_64 $0((int_32 (CASTING int_64)(int_32 ($2 - $3))), (int_64 [1]), (int_32 *($0 + [40])))
	
.LABEL $label$17
	*($0 + [16]) = (int_64)0
	$2 = [0]
	*(($0 + [28])) = [0]
	*(($0 + [4])) = (int_64)0
	if ( ($5 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $252($0)
	
.LABEL $label$14
	$4 = ($2 | $4)
	
.LABEL $label$12
	if ( ($1 == 0) ){ goto $label$18 }
	CALL $252($0)
	
.LABEL $label$18
	$0 = *($0 + [56])
	if ( $0 ){ goto $label$10 }
	
.LABEL $label$9
	CALL $256()
	return $4
	
.LABEL $label$3
	$2 = [-1]
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $252($0)
	
.LABEL $label$1
	return $2
}

void .FUNC $252 (int_32 $0)
{
}

int_32 .FUNC $255 ()
{
	CALL $299([14396])
	return [14404]
}

int_32 .FUNC $254 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [12]) = $2
	$2 = CALL $276($0, $1, $2)
	$global$0 = ($3 + [16])
	return $2
}

int_32 .FUNC $257 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [32] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $259($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $259($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $259($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $259($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [22896]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $259($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $259($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $259($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

void .FUNC $256 ()
{
	CALL $300([14396])
}

int_32 .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	float_64 $16
	$2 = ($global$0 - [256])
	$global$0 = $2
	*($2 + [248]) = [0]
	*($2 + [240]) = (int_64)0
	$3 = ($1 + [4])
	$4 = ($0 + [32])
	$5 = ($0 + [72])
	$6 = ($1 + [8])
	$7 = ($0 + [96])
	$8 = ($0 + [88])
	$9 = ($0 + [104])
	$10 = ($0 + [24])
	$11 = (*($10) + [-1])
	if ( ((uint_32)$11 > (uint_32)[13]) ){ goto $label$27 }
	
.LOOP $label$28:
	goto $label$98 
	
.LABEL $label$98
	*($2 + [200]) = [1]
	CALL $129($1, ($2 + [200]))
	$12 = [1]
	$11 = *($2 + [244])
	if ( $11 ){ goto $label$85 }
	goto $label$1 
	
.LABEL $label$97
	CALL $130($1, $5)
	$12 = [1]
	$11 = *($2 + [244])
	if ( $11 ){ goto $label$85 }
	goto $label$1 
	
.LABEL $label$96
	*($2 + [200]) = [0]
	CALL $131($1, ($2 + [200]))
	$12 = [1]
	$11 = *($2 + [244])
	if ( $11 ){ goto $label$85 }
	goto $label$1 
	
.LABEL $label$95
	*($2 + [224]) = [1]
	$11 = CALL $132($1, ($2 + [224]))
	*($2 + [200]) = $11
	$13 = *($6)
	if ( ((uint_32)$13 >= (uint_32)*(($1 + [12]))) ){ goto $label$89 }
	*($13) = $11
	*($6) = (*($6) + [4])
	$11 = CALL $92($4)
	*($10) = $11
	if ( ((int_32)$11 == (int_32)[11]) ){ goto $label$88 }
	goto $label$29 
	
.LABEL $label$94
	*($2 + [200]) = [0]
	CALL $129($1, ($2 + [200]))
	$12 = [1]
	$11 = *($2 + [244])
	if ( $11 ){ goto $label$85 }
	goto $label$1 
	
.LABEL $label$93
	*($2 + [200]) = *($7)
	CALL $133($1, ($2 + [200]))
	$12 = [1]
	$11 = *($2 + [244])
	if ( $11 ){ goto $label$85 }
	goto $label$1 
	
.LABEL $label$92
	$16 = *($9)
	if ( ((int_64)((int_64)(CASTING int_64)(float_64 $16) & (int_64)9218868437227405312) == (int_64)9218868437227405312) ){ goto $label$73 }
	*($2 + [200]) = $16
	CALL $134($1, ($2 + [200]))
	$12 = [1]
	$11 = *($2 + [244])
	if ( $11 ){ goto $label$85 }
	goto $label$1 
	
.LABEL $label$91
	*($2 + [200]) = *($8)
	CALL $135($1, ($2 + [200]))
	$12 = [1]
	$11 = *($2 + [244])
	if ( $11 ){ goto $label$85 }
	goto $label$1 
	
.LABEL $label$90
	*($2 + [224]) = [2]
	$11 = CALL $132($1, ($2 + [224]))
	*($2 + [200]) = $11
	$13 = *($6)
	if ( ((uint_32)$13 >= (uint_32)*(($1 + [12]))) ){ goto $label$87 }
	*($13) = $11
	*($6) = (*($6) + [4])
	$11 = CALL $92($4)
	*($10) = $11
	if ( ((int_32)$11 == (int_32)[10]) ){ goto $label$86 }
	goto $label$30 
	
.LABEL $label$89
	CALL $136($3, ($2 + [200]))
	$11 = CALL $92($4)
	*($10) = $11
	if ( ((int_32)$11 != (int_32)[11]) ){ goto $label$29 }
	
.LABEL $label$88
	*($6) = (*($6) + [-4])
	$12 = [1]
	$11 = *($2 + [244])
	if ( $11 ){ goto $label$85 }
	goto $label$1 
	
.LABEL $label$87
	CALL $136($3, ($2 + [200]))
	$11 = CALL $92($4)
	*($10) = $11
	if ( ((int_32)$11 != (int_32)[10]) ){ goto $label$30 }
	
.LABEL $label$86
	*($6) = (*($6) + [-4])
	$12 = [1]
	$11 = *($2 + [244])
	if ( ($11 == 0) ){ goto $label$1 }
	
.LABEL $label$85
	
.LOOP $label$101:
	$13 = ($11 + [-1])
	$14 = *((*($2 + [240]) + (uint_32($13 >> [3]) & [536870908])))
	$11 = CALL $92($4)
	*($10) = $11
	if ( (($14 & ([1] << ($13 & [31]))) == 0) ){ goto $label$103 }
	if ( ((int_32)$11 == (int_32)[13]) ){ goto $label$100 }
	if ( ((int_32)$11 != (int_32)[10]) ){ goto $label$83 }
	*($6) = (*($6) + [-4])
	$11 = *($2 + [244])
	if ( $11 ){ goto $label$102 }
	goto $label$63 
	
.LABEL $label$103
	if ( ((int_32)$11 == (int_32)[13]) ){ goto $label$99 }
	if ( ((int_32)$11 != (int_32)[11]) ){ goto $label$82 }
	*($6) = (*($6) + [-4])
	$11 = *($2 + [244])
	if ( ($11 == 0) ){ goto $label$62 }
	
.LABEL $label$102
	$11 = ($11 + [-1])
	*($2 + [244]) = $11
	if ( $11 ){ goto $label$101 }
	goto $label$1 
	
.LABEL $label$100
	*($10) = CALL $92($4)
	$11 = (*($10) + [-1])
	if ( ((uint_32)$11 <= (uint_32)[13]) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$99
	$11 = CALL $92($4)
	*($10) = $11
	if ( ((int_32)$11 != (int_32)[4]) ){ goto $label$75 }
	$13 = *(*((*($6) + [-4])) + [8])
	$14 = CALL $94($13, ($2 + [200]), $5)
	$11 = *($14)
	if ( $11 ){ goto $label$104 }
	$11 = CALL _Znwj([48])
	CALL $220(($11 + [16]), $5)
	*($11 + [40]) = [0]
	*($11) = (int_64)0
	*($11 + [8]) = *($2 + [200])
	*($14) = $11
	*($11 + [32]) = [0]
	$12 = $11
	$15 = *(*($13))
	if ( ($15 == 0) ){ goto $label$105 }
	*($13) = $15
	$12 = *($14)
	
.LABEL $label$105
	CALL $95(*($13 + [4]), $12)
	*($13 + [8]) = (*($13 + [8]) + [1])
	
.LABEL $label$104
	*(($1 + [16])) = ($11 + [32])
	$11 = CALL $92($4)
	*($10) = $11
	if ( ((int_32)$11 != (int_32)[12]) ){ goto $label$74 }
	*($10) = CALL $92($4)
	$11 = (*($10) + [-1])
	if ( ((uint_32)$11 <= (uint_32)[13]) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$84
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$13 = *(($0 + [64]))
	$11 = *(($0 + [60]))
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$106 }
	
.LOOP $label$107:
	$6 = *($11)
	if ( ((uint_32)$6 > (uint_32)[31]) ){ goto $label$108 }
	*($2 + [144]) = $6
	CALL $262(($2 + [200]), [9], [13208], ($2 + [144]))
	CALL $227(($2 + [224]), ($2 + [200]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$107 }
	goto $label$106 
	
.LABEL $label$108
	CALL $228(($2 + [224]), int_32(($6 << [24]) >> [24]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$107 }
	
.LABEL $label$106
	*((($2 + [184]) + [8])) = *(($0 + [56]))
	*($2 + [184]) = *(($0 + [48]))
	*((($2 + [152]) + [8])) = [0]
	*($2 + [152]) = (int_64)0
	$11 = CALL $297([12793])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$61 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$111 }
	*($2 + [152]) = ($11 << [1])
	$6 = (($2 + [152]) | [1])
	if ( $11 ){ goto $label$110 }
	goto $label$109 
	
.LABEL $label$111
	$13 = (($11 + [16]) & [-16])
	$6 = CALL _Znwj($13)
	*($2 + [152]) = ($13 | [1])
	*($2 + [160]) = $6
	*($2 + [156]) = $11
	
.LABEL $label$110
	CALL memcpy($6, [12793], $11)
	
.LABEL $label$109
	*(($6 + $11)) = [0]
	CALL $101(($2 + [168]), $0, [0], ($2 + [152]))
	CALL $102(($2 + [200]), [101], ($2 + [184]), ($2 + [168]))
	*($1 + [20]) = [1]
	if ( *($1 + [21]) ){ goto $label$60 }
	*($2 + [200]) = [13184]
	CALL $216(($2 + [208]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [168]) & [1]) ){ goto $label$113 }
	$11 = [1]
	if ( (*($2 + [152]) & [1]) ){ goto $label$112 }
	goto $label$32 
	
.LABEL $label$113
	CALL _ZdlPv(*($2 + [176]))
	$11 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$32 }
	
.LABEL $label$112
	CALL _ZdlPv(*($2 + [160]))
	if ( ((*($2 + [224]) & $11) == 0) ){ goto $label$2 }
	goto $label$31 
	
.LABEL $label$83
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$13 = *(($0 + [64]))
	$11 = *(($0 + [60]))
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$114 }
	
.LOOP $label$115:
	$6 = *($11)
	if ( ((uint_32)$6 > (uint_32)[31]) ){ goto $label$116 }
	*($2 + [80]) = $6
	CALL $262(($2 + [200]), [9], [13208], ($2 + [80]))
	CALL $227(($2 + [224]), ($2 + [200]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$115 }
	goto $label$114 
	
.LABEL $label$116
	CALL $228(($2 + [224]), int_32(($6 << [24]) >> [24]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$115 }
	
.LABEL $label$114
	*((($2 + [184]) + [8])) = *(($0 + [56]))
	*($2 + [184]) = *(($0 + [48]))
	*((($2 + [152]) + [8])) = [0]
	*($2 + [152]) = (int_64)0
	$11 = CALL $297([12893])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$59 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$81 }
	*($2 + [152]) = ($11 << [1])
	$6 = (($2 + [152]) | [1])
	if ( $11 ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$82
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$13 = *(($0 + [64]))
	$11 = *(($0 + [60]))
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$117 }
	
.LOOP $label$118:
	$6 = *($11)
	if ( ((uint_32)$6 > (uint_32)[31]) ){ goto $label$119 }
	*($2 + [64]) = $6
	CALL $262(($2 + [200]), [9], [13208], ($2 + [64]))
	CALL $227(($2 + [224]), ($2 + [200]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$118 }
	goto $label$117 
	
.LABEL $label$119
	CALL $228(($2 + [224]), int_32(($6 << [24]) >> [24]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$118 }
	
.LABEL $label$117
	*((($2 + [184]) + [8])) = *(($0 + [56]))
	*($2 + [184]) = *(($0 + [48]))
	*((($2 + [152]) + [8])) = [0]
	*($2 + [152]) = (int_64)0
	$11 = CALL $297([12899])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$56 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$78 }
	*($2 + [152]) = ($11 << [1])
	$6 = (($2 + [152]) | [1])
	if ( $11 ){ goto $label$77 }
	goto $label$76 
	
.LABEL $label$81
	$13 = (($11 + [16]) & [-16])
	$6 = CALL _Znwj($13)
	*($2 + [152]) = ($13 | [1])
	*($2 + [160]) = $6
	*($2 + [156]) = $11
	
.LABEL $label$80
	CALL memcpy($6, [12893], $11)
	
.LABEL $label$79
	*(($6 + $11)) = [0]
	CALL $101(($2 + [168]), $0, [10], ($2 + [152]))
	CALL $102(($2 + [200]), [101], ($2 + [184]), ($2 + [168]))
	*($1 + [20]) = [1]
	if ( *($1 + [21]) ){ goto $label$58 }
	*($2 + [200]) = [13184]
	CALL $216(($2 + [208]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [168]) & [1]) ){ goto $label$121 }
	$11 = [1]
	if ( (*($2 + [152]) & [1]) ){ goto $label$120 }
	goto $label$34 
	
.LABEL $label$121
	CALL _ZdlPv(*($2 + [176]))
	$11 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$34 }
	
.LABEL $label$120
	CALL _ZdlPv(*($2 + [160]))
	if ( ((*($2 + [224]) & $11) == 0) ){ goto $label$2 }
	goto $label$33 
	
.LABEL $label$78
	$13 = (($11 + [16]) & [-16])
	$6 = CALL _Znwj($13)
	*($2 + [152]) = ($13 | [1])
	*($2 + [160]) = $6
	*($2 + [156]) = $11
	
.LABEL $label$77
	CALL memcpy($6, [12899], $11)
	
.LABEL $label$76
	*(($6 + $11)) = [0]
	CALL $101(($2 + [168]), $0, [11], ($2 + [152]))
	CALL $102(($2 + [200]), [101], ($2 + [184]), ($2 + [168]))
	*($1 + [20]) = [1]
	if ( *($1 + [21]) ){ goto $label$55 }
	*($2 + [200]) = [13184]
	CALL $216(($2 + [208]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [168]) & [1]) ){ goto $label$123 }
	$11 = [1]
	if ( (*($2 + [152]) & [1]) ){ goto $label$122 }
	goto $label$36 
	
.LABEL $label$123
	CALL _ZdlPv(*($2 + [176]))
	$11 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$36 }
	
.LABEL $label$122
	CALL _ZdlPv(*($2 + [160]))
	if ( ((*($2 + [224]) & $11) == 0) ){ goto $label$2 }
	goto $label$35 
	
.LABEL $label$75
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$13 = *(($0 + [64]))
	$11 = *(($0 + [60]))
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$124 }
	
.LOOP $label$125:
	$6 = *($11)
	if ( ((uint_32)$6 > (uint_32)[31]) ){ goto $label$126 }
	*($2 + [48]) = $6
	CALL $262(($2 + [200]), [9], [13208], ($2 + [48]))
	CALL $227(($2 + [224]), ($2 + [200]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$125 }
	goto $label$124 
	
.LABEL $label$126
	CALL $228(($2 + [224]), int_32(($6 << [24]) >> [24]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$125 }
	
.LABEL $label$124
	*((($2 + [184]) + [8])) = *(($0 + [56]))
	*($2 + [184]) = *(($0 + [48]))
	*((($2 + [152]) + [8])) = [0]
	*($2 + [152]) = (int_64)0
	$11 = CALL $297([12799])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$52 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$72 }
	*($2 + [152]) = ($11 << [1])
	$6 = (($2 + [152]) | [1])
	if ( $11 ){ goto $label$71 }
	goto $label$70 
	
.LABEL $label$74
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$13 = *(($0 + [64]))
	$11 = *(($0 + [60]))
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$127 }
	
.LOOP $label$128:
	$6 = *($11)
	if ( ((uint_32)$6 > (uint_32)[31]) ){ goto $label$129 }
	*($2 + [32]) = $6
	CALL $262(($2 + [200]), [9], [13208], ($2 + [32]))
	CALL $227(($2 + [224]), ($2 + [200]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$128 }
	goto $label$127 
	
.LABEL $label$129
	CALL $228(($2 + [224]), int_32(($6 << [24]) >> [24]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$128 }
	
.LABEL $label$127
	*((($2 + [184]) + [8])) = *(($0 + [56]))
	*($2 + [184]) = *(($0 + [48]))
	*((($2 + [152]) + [8])) = [0]
	*($2 + [152]) = (int_64)0
	$11 = CALL $297([12810])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$51 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$69 }
	*($2 + [152]) = ($11 << [1])
	$6 = (($2 + [152]) | [1])
	if ( $11 ){ goto $label$68 }
	goto $label$67 
	
.LABEL $label$73
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$13 = *(($0 + [64]))
	$11 = *(($0 + [60]))
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$66 }
	
.LOOP $label$131:
	$6 = *($11)
	if ( ((uint_32)$6 > (uint_32)[31]) ){ goto $label$132 }
	*($2 + [128]) = $6
	CALL $262(($2 + [200]), [9], [13208], ($2 + [128]))
	CALL $227(($2 + [224]), ($2 + [200]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$131 }
	goto $label$130 
	
.LABEL $label$132
	CALL $228(($2 + [224]), int_32(($6 << [24]) >> [24]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$131 }
	
.LABEL $label$130
	$11 = *(($0 + [64]))
	$6 = *(($0 + [60]))
	*($2 + [160]) = [0]
	*($2 + [152]) = (int_64)0
	if ( ((int_32)$6 != (int_32)$11) ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$72
	$13 = (($11 + [16]) & [-16])
	$6 = CALL _Znwj($13)
	*($2 + [152]) = ($13 | [1])
	*($2 + [160]) = $6
	*($2 + [156]) = $11
	
.LABEL $label$71
	CALL memcpy($6, [12799], $11)
	
.LABEL $label$70
	*(($6 + $11)) = [0]
	CALL $101(($2 + [168]), $0, [4], ($2 + [152]))
	CALL $102(($2 + [200]), [101], ($2 + [184]), ($2 + [168]))
	*($1 + [20]) = [1]
	if ( *($1 + [21]) ){ goto $label$50 }
	*($2 + [200]) = [13184]
	CALL $216(($2 + [208]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [168]) & [1]) ){ goto $label$134 }
	$11 = [1]
	if ( (*($2 + [152]) & [1]) ){ goto $label$133 }
	goto $label$38 
	
.LABEL $label$134
	CALL _ZdlPv(*($2 + [176]))
	$11 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$38 }
	
.LABEL $label$133
	CALL _ZdlPv(*($2 + [160]))
	if ( ((*($2 + [224]) & $11) == 0) ){ goto $label$2 }
	goto $label$37 
	
.LABEL $label$69
	$13 = (($11 + [16]) & [-16])
	$6 = CALL _Znwj($13)
	*($2 + [152]) = ($13 | [1])
	*($2 + [160]) = $6
	*($2 + [156]) = $11
	
.LABEL $label$68
	CALL memcpy($6, [12810], $11)
	
.LABEL $label$67
	*(($6 + $11)) = [0]
	CALL $101(($2 + [168]), $0, [12], ($2 + [152]))
	CALL $102(($2 + [200]), [101], ($2 + [184]), ($2 + [168]))
	*($1 + [20]) = [1]
	if ( *($1 + [21]) ){ goto $label$49 }
	*($2 + [200]) = [13184]
	CALL $216(($2 + [208]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [168]) & [1]) ){ goto $label$136 }
	$11 = [1]
	if ( (*($2 + [152]) & [1]) ){ goto $label$135 }
	goto $label$40 
	
.LABEL $label$136
	CALL _ZdlPv(*($2 + [176]))
	$11 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$40 }
	
.LABEL $label$135
	CALL _ZdlPv(*($2 + [160]))
	if ( ((*($2 + [224]) & $11) == 0) ){ goto $label$2 }
	goto $label$39 
	
.LABEL $label$66
	*($2 + [160]) = [0]
	*($2 + [152]) = (int_64)0
	$6 = $11
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$64 }
	
.LABEL $label$65
	
.LOOP $label$137:
	$13 = *($6)
	if ( ((uint_32)$13 > (uint_32)[31]) ){ goto $label$138 }
	*($2 + [112]) = $13
	CALL $262(($2 + [200]), [9], [13208], ($2 + [112]))
	CALL $227(($2 + [152]), ($2 + [200]))
	$6 = ($6 + [1])
	if ( ((int_32)$11 != (int_32)$6) ){ goto $label$137 }
	goto $label$64 
	
.LABEL $label$138
	CALL $228(($2 + [152]), int_32(($13 << [24]) >> [24]))
	$6 = ($6 + [1])
	if ( ((int_32)$11 != (int_32)$6) ){ goto $label$137 }
	
.LABEL $label$64
	$11 = CALL $231(($2 + [152]), [0], [12827])
	$6 = ($11 + [8])
	*((($2 + [168]) + [8])) = *($6)
	*($2 + [168]) = *($11)
	*($11) = (int_64)0
	*($6) = [0]
	$11 = CALL $227(($2 + [168]), [12853])
	$6 = ($11 + [8])
	*((($2 + [184]) + [8])) = *($6)
	*($2 + [184]) = *($11)
	*($11) = (int_64)0
	*($6) = [0]
	CALL $126(($2 + [200]), [406], ($2 + [184]))
	*($1 + [20]) = [1]
	if ( *($1 + [21]) ){ goto $label$48 }
	*($2 + [200]) = [13184]
	CALL $216((($2 + [200]) + [8]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [184]) & [1]) ){ goto $label$140 }
	$11 = [1]
	if ( (*($2 + [168]) & [1]) ){ goto $label$139 }
	goto $label$44 
	
.LABEL $label$140
	CALL _ZdlPv(*($2 + [192]))
	$11 = [1]
	if ( ((*($2 + [168]) & [1]) == 0) ){ goto $label$44 }
	
.LABEL $label$139
	CALL _ZdlPv(*($2 + [176]))
	if ( ((*($2 + [152]) & $11) == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$63
	CALL $248([12855], [9181], [5309], [12874])
	
.LABEL $label$62
	CALL $248([12855], [9181], [5369], [12874])
	
.LABEL $label$61
	CALL $219(($2 + [152]))
	
.LABEL $label$60
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$57 }
	goto $label$9 
	
.LABEL $label$59
	CALL $219(($2 + [152]))
	
.LABEL $label$58
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$54 }
	goto $label$9 
	
.LABEL $label$57
	CALL $248([9460], [9181], [4500], [13196])
	
.LABEL $label$56
	CALL $219(($2 + [152]))
	
.LABEL $label$55
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$53 }
	goto $label$9 
	
.LABEL $label$54
	CALL $248([9460], [9181], [4500], [13196])
	
.LABEL $label$53
	CALL $248([9460], [9181], [4500], [13196])
	
.LABEL $label$52
	CALL $219(($2 + [152]))
	
.LABEL $label$51
	CALL $219(($2 + [152]))
	
.LABEL $label$50
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$47 }
	goto $label$9 
	
.LABEL $label$49
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$46 }
	goto $label$9 
	
.LABEL $label$48
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$45 }
	goto $label$9 
	
.LABEL $label$47
	CALL $248([9460], [9181], [4500], [13196])
	
.LABEL $label$46
	CALL $248([9460], [9181], [4500], [13196])
	
.LABEL $label$45
	CALL $248([9460], [9181], [4500], [13196])
	
.LABEL $label$44
	if ( (*($2 + [152]) & $11) ){ goto $label$42 }
	
.LABEL $label$43
	if ( ((*($2 + [224]) & [1]) == 0) ){ goto $label$2 }
	goto $label$41 
	
.LABEL $label$42
	CALL _ZdlPv(*(($2 + [160])))
	if ( ((*($2 + [224]) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$41
	CALL _ZdlPv(*(($2 + [232])))
	goto $label$2 
	
.LABEL $label$40
	if ( ((*($2 + [224]) & $11) == 0) ){ goto $label$2 }
	
.LABEL $label$39
	CALL _ZdlPv(*(($2 + [232])))
	goto $label$2 
	
.LABEL $label$38
	if ( ((*($2 + [224]) & $11) == 0) ){ goto $label$2 }
	
.LABEL $label$37
	CALL _ZdlPv(*(($2 + [232])))
	goto $label$2 
	
.LABEL $label$36
	if ( ((*($2 + [224]) & $11) == 0) ){ goto $label$2 }
	
.LABEL $label$35
	CALL _ZdlPv(*(($2 + [232])))
	goto $label$2 
	
.LABEL $label$34
	if ( ((*($2 + [224]) & $11) == 0) ){ goto $label$2 }
	
.LABEL $label$33
	CALL _ZdlPv(*(($2 + [232])))
	goto $label$2 
	
.LABEL $label$32
	if ( ((*($2 + [224]) & $11) == 0) ){ goto $label$2 }
	
.LABEL $label$31
	CALL _ZdlPv(*(($2 + [232])))
	goto $label$2 
	
.LABEL $label$30
	$13 = *((($2 + [240]) + [8]))
	$11 = *($2 + [244])
	if ( ((int_32)$11 != (int_32)($13 << [5])) ){ goto $label$142 }
	if ( ((int_32)($11 + [1]) <= (int_32)[-1]) ){ goto $label$141 }
	$14 = [2147483647]
	if ( ((uint_32)$11 > (uint_32)[1073741822]) ){ goto $label$143 }
	$13 = ($13 << [6])
	$11 = (($11 + [32]) & [-32])
	$14 = ( $11 ? $13 : ($13 <= $11) )
	
.LABEL $label$143
	CALL $114(($2 + [240]), $14)
	$11 = *($2 + [244])
	
.LABEL $label$142
	*($2 + [244]) = ($11 + [1])
	*(($13 = (*($2 + [240]) + (uint_32($11 >> [3]) & [536870908])))) = (*($13) | ([1] << ($11 & [31])))
	$11 = (*($10) + [-1])
	if ( ((uint_32)$11 <= (uint_32)[13]) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$141
	CALL $245(($2 + [240]))
	
.LABEL $label$29
	if ( ((int_32)$11 != (int_32)[4]) ){ goto $label$26 }
	$13 = *(*((*($6) + [-4])) + [8])
	$14 = CALL $94($13, ($2 + [200]), $5)
	$11 = *($14)
	if ( $11 ){ goto $label$144 }
	$11 = CALL _Znwj([48])
	CALL $220(($11 + [16]), $5)
	*($11 + [40]) = [0]
	*($11) = (int_64)0
	*($11 + [8]) = *($2 + [200])
	*($14) = $11
	*($11 + [32]) = [0]
	$12 = $11
	$15 = *(*($13))
	if ( ($15 == 0) ){ goto $label$145 }
	*($13) = $15
	$12 = *($14)
	
.LABEL $label$145
	CALL $95(*($13 + [4]), $12)
	*($13 + [8]) = (*($13 + [8]) + [1])
	
.LABEL $label$144
	*(($1 + [16])) = ($11 + [32])
	$11 = CALL $92($4)
	*($10) = $11
	if ( ((int_32)$11 != (int_32)[12]) ){ goto $label$25 }
	$13 = *((($2 + [240]) + [8]))
	$11 = *($2 + [244])
	if ( ((int_32)$11 != (int_32)($13 << [5])) ){ goto $label$146 }
	if ( ((int_32)($11 + [1]) <= (int_32)[-1]) ){ goto $label$18 }
	$14 = [2147483647]
	if ( ((uint_32)$11 > (uint_32)[1073741822]) ){ goto $label$147 }
	$13 = ($13 << [6])
	$11 = (($11 + [32]) & [-32])
	$14 = ( $11 ? $13 : ($13 <= $11) )
	
.LABEL $label$147
	CALL $114(($2 + [240]), $14)
	$11 = *($2 + [244])
	
.LABEL $label$146
	*($2 + [244]) = ($11 + [1])
	*(($13 = (*($2 + [240]) + (uint_32($11 >> [3]) & [536870908])))) = (*($13) & (rotl((int_32) [-2])))
	*($10) = CALL $92($4)
	$11 = (*($10) + [-1])
	if ( ((uint_32)$11 <= (uint_32)[13]) ){ goto $label$28 }
	
.LABEL $label$27
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$13 = *(($0 + [64]))
	$11 = *(($0 + [60]))
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$148 }
	
.LOOP $label$149:
	$6 = *($11)
	if ( ((uint_32)$6 > (uint_32)[31]) ){ goto $label$150 }
	*($2) = $6
	CALL $262(($2 + [200]), [9], [13208], $2)
	CALL $227(($2 + [224]), ($2 + [200]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$149 }
	goto $label$148 
	
.LABEL $label$150
	CALL $228(($2 + [224]), int_32(($6 << [24]) >> [24]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$149 }
	
.LABEL $label$148
	*((($2 + [184]) + [8])) = *(($0 + [56]))
	*($2 + [184]) = *(($0 + [48]))
	*((($2 + [152]) + [8])) = [0]
	*($2 + [152]) = (int_64)0
	$11 = CALL $297([12793])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$17 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$153 }
	*($2 + [152]) = ($11 << [1])
	$6 = (($2 + [152]) | [1])
	if ( $11 ){ goto $label$152 }
	goto $label$151 
	
.LABEL $label$153
	$13 = (($11 + [16]) & [-16])
	$6 = CALL _Znwj($13)
	*($2 + [152]) = ($13 | [1])
	*($2 + [160]) = $6
	*($2 + [156]) = $11
	
.LABEL $label$152
	CALL memcpy($6, [12793], $11)
	
.LABEL $label$151
	*(($6 + $11)) = [0]
	CALL $101(($2 + [168]), $0, [16], ($2 + [152]))
	CALL $102(($2 + [200]), [101], ($2 + [184]), ($2 + [168]))
	*($1 + [20]) = [1]
	if ( *($1 + [21]) ){ goto $label$16 }
	*($2 + [200]) = [13184]
	CALL $216(($2 + [208]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [168]) & [1]) ){ goto $label$155 }
	$11 = [1]
	if ( (*($2 + [152]) & [1]) ){ goto $label$154 }
	goto $label$4 
	
.LABEL $label$155
	CALL _ZdlPv(*($2 + [176]))
	$11 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$154
	CALL _ZdlPv(*($2 + [160]))
	if ( ((*($2 + [224]) & $11) == 0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$26
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$13 = *(($0 + [64]))
	$11 = *(($0 + [60]))
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$156 }
	
.LOOP $label$157:
	$6 = *($11)
	if ( ((uint_32)$6 > (uint_32)[31]) ){ goto $label$158 }
	*($2 + [16]) = $6
	CALL $262(($2 + [200]), [9], [13208], ($2 + [16]))
	CALL $227(($2 + [224]), ($2 + [200]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$157 }
	goto $label$156 
	
.LABEL $label$158
	CALL $228(($2 + [224]), int_32(($6 << [24]) >> [24]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$157 }
	
.LABEL $label$156
	*((($2 + [184]) + [8])) = *(($0 + [56]))
	*($2 + [184]) = *(($0 + [48]))
	*((($2 + [152]) + [8])) = [0]
	*($2 + [152]) = (int_64)0
	$11 = CALL $297([12799])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$24 }
	*($2 + [152]) = ($11 << [1])
	$6 = (($2 + [152]) | [1])
	if ( $11 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$13 = *(($0 + [64]))
	$11 = *(($0 + [60]))
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$159 }
	
.LOOP $label$160:
	$6 = *($11)
	if ( ((uint_32)$6 > (uint_32)[31]) ){ goto $label$161 }
	*($2 + [96]) = $6
	CALL $262(($2 + [200]), [9], [13208], ($2 + [96]))
	CALL $227(($2 + [224]), ($2 + [200]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$160 }
	goto $label$159 
	
.LABEL $label$161
	CALL $228(($2 + [224]), int_32(($6 << [24]) >> [24]))
	$11 = ($11 + [1])
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$160 }
	
.LABEL $label$159
	*((($2 + [184]) + [8])) = *(($0 + [56]))
	*($2 + [184]) = *(($0 + [48]))
	*((($2 + [152]) + [8])) = [0]
	*($2 + [152]) = (int_64)0
	$11 = CALL $297([12810])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$21 }
	*($2 + [152]) = ($11 << [1])
	$6 = (($2 + [152]) | [1])
	if ( $11 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$24
	$13 = (($11 + [16]) & [-16])
	$6 = CALL _Znwj($13)
	*($2 + [152]) = ($13 | [1])
	*($2 + [160]) = $6
	*($2 + [156]) = $11
	
.LABEL $label$23
	CALL memcpy($6, [12799], $11)
	
.LABEL $label$22
	*(($6 + $11)) = [0]
	CALL $101(($2 + [168]), $0, [4], ($2 + [152]))
	CALL $102(($2 + [200]), [101], ($2 + [184]), ($2 + [168]))
	*($1 + [20]) = [1]
	if ( *($1 + [21]) ){ goto $label$14 }
	*($2 + [200]) = [13184]
	CALL $216(($2 + [208]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [168]) & [1]) ){ goto $label$163 }
	$11 = [1]
	if ( (*($2 + [152]) & [1]) ){ goto $label$162 }
	goto $label$6 
	
.LABEL $label$163
	CALL _ZdlPv(*($2 + [176]))
	$11 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$162
	CALL _ZdlPv(*($2 + [160]))
	if ( ((*($2 + [224]) & $11) == 0) ){ goto $label$2 }
	goto $label$5 
	
.LABEL $label$21
	$13 = (($11 + [16]) & [-16])
	$6 = CALL _Znwj($13)
	*($2 + [152]) = ($13 | [1])
	*($2 + [160]) = $6
	*($2 + [156]) = $11
	
.LABEL $label$20
	CALL memcpy($6, [12810], $11)
	
.LABEL $label$19
	*(($6 + $11)) = [0]
	CALL $101(($2 + [168]), $0, [12], ($2 + [152]))
	CALL $102(($2 + [200]), [101], ($2 + [184]), ($2 + [168]))
	*($1 + [20]) = [1]
	if ( *($1 + [21]) ){ goto $label$12 }
	*($2 + [200]) = [13184]
	CALL $216(($2 + [208]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [168]) & [1]) ){ goto $label$165 }
	$11 = [1]
	if ( (*($2 + [152]) & [1]) ){ goto $label$164 }
	goto $label$8 
	
.LABEL $label$165
	CALL _ZdlPv(*($2 + [176]))
	$11 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$164
	CALL _ZdlPv(*($2 + [160]))
	if ( ((*($2 + [224]) & $11) == 0) ){ goto $label$2 }
	goto $label$7 
	
.LABEL $label$18
	CALL $245(($2 + [240]))
	
.LABEL $label$17
	CALL $219(($2 + [152]))
	
.LABEL $label$16
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$166 }
	goto $label$9 
	
.LABEL $label$166
	CALL $248([9460], [9181], [4500], [13196])
	
.LABEL $label$15
	CALL $219(($2 + [152]))
	
.LABEL $label$14
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$13
	CALL $219(($2 + [152]))
	
.LABEL $label$12
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $248([9460], [9181], [4500], [13196])
	
.LABEL $label$10
	CALL $248([9460], [9181], [4500], [13196])
	
.LABEL $label$9
	CALL abort()
	
.LABEL $label$8
	if ( ((*($2 + [224]) & $11) == 0) ){ goto $label$2 }
	
.LABEL $label$7
	CALL _ZdlPv(*(($2 + [232])))
	goto $label$2 
	
.LABEL $label$6
	if ( ((*($2 + [224]) & $11) == 0) ){ goto $label$2 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($2 + [232])))
	goto $label$2 
	
.LABEL $label$4
	if ( ((*($2 + [224]) & $11) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*(($2 + [232])))
	
.LABEL $label$2
	$12 = [0]
	
.LABEL $label$1
	$11 = *($2 + [240])
	if ( ($11 == 0) ){ goto $label$167 }
	CALL _ZdlPv($11)
	
.LABEL $label$167
	$global$0 = ($2 + [256])
	$11
	(unreachable)
	(unreachable)
	(unreachable)
	$2
	(unreachable)
	$2
	(unreachable)
	(unreachable)
	$2
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	$2
	$2
	$2
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	$11
	(unreachable)
	(unreachable)
	$2
	(unreachable)
	(unreachable)
	$2
	(unreachable)
	$2
	(unreachable)
	(unreachable)
	(unreachable)
	return $12
}

int_32 .FUNC $99 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	*($0) = $1
	*($0 + [4 align=4]) = (int_64)0
	*($0 + [28 align=4]) = (int_64)0
	*($0 + [44]) = [0]
	*(($0 + [12])) = (int_64)0
	*(($0 + [20])) = (int_64)0
	*(($0 + [36])) = (int_64)0
	$1 = *($2 + [16])
	if ( ($1 == 0) ){ goto $label$3 }
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$2 }
	*(($0 + [64])) = CALL int_32 $1((int_32 *(*($1) + [8])))
	goto $label$1 
	
.LABEL $label$3
	*(($0 + [64])) = [0]
	goto $label$1 
	
.LABEL $label$2
	$1 = ($0 + [48])
	*(($0 + [64])) = $1
	$2 = *(($2 + [16]))
	CALL void $2((int_32 $1), (int_32 *(*($2) + [12])))
	
.LABEL $label$1
	*($0 + [80]) = [8]
	*($0 + [72]) = $3
	*(($0 + [88])) = [0]
	$3 = *(($0 + [24]))
	$1 = ($0 + [20])
	$2 = *($1)
	if ( ((int_32)$2 != (int_32)($3 << [5])) ){ goto $label$5 }
	$4 = ($0 + [16])
	if ( ((int_32)($2 + [1]) <= (int_32)[-1]) ){ goto $label$4 }
	$5 = [2147483647]
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$3 = ($3 << [6])
	$2 = (($2 + [32]) & [-32])
	$5 = ( $2 ? $3 : ($3 <= $2) )
	
.LABEL $label$6
	CALL $114($4, $5)
	$2 = *(($0 + [20]))
	
.LABEL $label$5
	*($1) = ($2 + [1])
	*(($1 = (*(($0 + [16])) + (uint_32($2 >> [3]) & [536870908])))) = (*($1) | ([1] << ($2 & [31])))
	return $0
	
.LABEL $label$4
	CALL $245($4)
	return (unreachable)
}

void .FUNC $239 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $225(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $262(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8628], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $225(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $225(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $238 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $241($1, $0, [9062])
	CALL $243()
	(unreachable)
}

int_32 .FUNC $94 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = ($0 + [4])
	$0 = *($0 + [4])
	if ( ($0 == 0) ){ goto $label$1 }
	$4 = ($2 + [1])
	$5 = ($2 + [8])
	
.LOOP $label$3:
	$7 = ($0 + [16])
	$12 = ($11 & [1])
	$11 = *($2)
	$10 = ($2 + [4])
	$11 = ( *($10) ? uint_32($11 >> [1]) : $12 )
	$9 = ($6 & [1])
	$6 = *($0 + [16])
	$8 = ($0 + [20])
	$6 = ( *($8) ? uint_32($6 >> [1]) : $9 )
	$13 = ( $6 ? $11 : ($6 <= $11) )
	if ( ($13 == 0) ){ goto $label$7 }
	$9 = CALL $296(( *($5) ? $4 : $12 ), ( *(($0 + [24])) ? ($7 + [1]) : $9 ), $13)
	if ( ($9 == 0) ){ goto $label$7 }
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((uint_32)$11 >= (uint_32)$6) ){ goto $label$5 }
	
.LABEL $label$6
	$6 = *($0)
	if ( $6 ){ goto $label$4 }
	*($1) = $0
	return $0
	
.LABEL $label$5
	$12 = ($11 & [1])
	$11 = *($7)
	$11 = ( *($8) ? uint_32($11 >> [1]) : $12 )
	$9 = ($6 & [1])
	$6 = *($2)
	$6 = ( *($10) ? uint_32($6 >> [1]) : $9 )
	$13 = ( $6 ? $11 : ($6 <= $11) )
	if ( ($13 == 0) ){ goto $label$9 }
	$7 = CALL $296(( *(($0 + [24])) ? ($7 + [1]) : $12 ), ( *($5) ? $4 : $9 ), $13)
	if ( ($7 == 0) ){ goto $label$9 }
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((uint_32)$11 >= (uint_32)$6) ){ goto $label$2 }
	
.LABEL $label$8
	$3 = ($0 + [4])
	$6 = *($0 + [4])
	if ( ($6 == 0) ){ goto $label$2 }
	$0 = $3
	
.LABEL $label$4
	$3 = $0
	$0 = $6
	goto $label$3 
	
.LABEL $label$2
	*($1) = $0
	return $3
	
.LABEL $label$1
	*($1) = $3
	return $3
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $2
	if ( $2 ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($1 + [8])
	if ( *($3 + [12]) ){ goto $label$3 }
	$4 = ($3 + [12])
	$2 = *($3 + [8])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$2 }
	if ( *($5 + [12]) ){ goto $label$2 }
	$3 = ($5 + [12])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [12]) ){ goto $label$1 }
	$3 = ($5 + [12])
	
.LABEL $label$5
	*($4) = [1]
	*($2 + [12]) = ((int_32)$2 == (int_32)$0)
	*($3) = [1]
	$1 = $2
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	if ( ((int_32)*($3) != (int_32)$1) ){ goto $label$7 }
	$5 = *($1 + [4])
	*($3) = $5
	if ( ($5 == 0) ){ goto $label$8 }
	*($5 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$8
	*(($5 = ($1 + [8]))) = $2
	*((($0 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$3) ))) = $1
	*($2) = $1
	*(($1 + [4])) = $3
	$4 = ($1 + [12])
	$2 = *($5)
	
.LABEL $label$7
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2 + [4])
	$5 = *($3)
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$9 }
	*($5 + [8]) = $2
	
.LABEL $label$9
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*($3) = $2
	return 
	
.LABEL $label$1
	if ( ((int_32)*($3) == (int_32)$1) ){ goto $label$10 }
	$5 = *($3 + [4])
	$1 = *($5)
	*($3 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$11
	*($5 + [8]) = $2
	*((($1 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($1) == (int_32)$3) ))) = $5
	*($2) = $5
	*($5) = $3
	$4 = ($5 + [12])
	$2 = *($5 + [8])
	
.LABEL $label$10
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2)
	$5 = *($3 + [4])
	*($2) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*(($3 + [4])) = $2
}

void .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	if ( (*($6) & [1]) ){ goto $label$2 }
	$6 = ($6 + [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($6 + [8])
	
.LABEL $label$1
	*($1 + [16]) = CALL $292($6, [0], [0])
	*($1 + [8]) = *(*($5 + [4]))
	$6 = ($1 + [16])
	$7 = *($5 + [8])
	if ( (*($7) & [1]) ){ goto $label$4 }
	$7 = ($7 + [1])
	goto $label$3 
	
.LABEL $label$4
	$7 = *($7 + [8])
	
.LABEL $label$3
	*($1) = ((int_64)CALL $292($7, [0], [0]) + (int_64)*(*($5 + [12])))
	$5 = $2
	$2 = ($5 + [-32])
	$global$0 = $2
	CALL eosio_assert([1], [8865])
	CALL memcpy($2, $1, [8])
	CALL eosio_assert([1], [8865])
	$7 = ($1 + [8])
	CALL memcpy(($5 + [-24]), $7, [8])
	CALL eosio_assert([1], [8865])
	CALL memcpy(($5 + [-16]), $6, [8])
	$8 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($4 + [8]), (int_64)4986991444846706688, *(*($0 + [8])), $8, $2, [24])
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$4 = ($4 + [8])
	$8 = *($4)
	$0 = *(($0 + [8]))
	$9 = *($0)
	$10 = *($1)
	*($3 + [8]) = *(($1 + [16]))
	*($1 + [32]) = CALL db_idx64_store($8, (int_64)4986991444846706688, $9, $10, ($3 + [8]))
	$8 = *($0)
	$9 = *($4)
	$10 = *($1)
	*($3 + [8]) = *($7)
	*(($1 + [36])) = CALL db_idx64_store($9, (int_64)4986991444846706689, $8, $10, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $97 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($4 + [4]), $0, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($0 + [4]), $3, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $92 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$1 = ($global$0 - [16])
	$global$0 = $1
	if ( *($0 + [16]) ){ goto $label$2 }
	if ( (CALL $107($0) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$2 = ($0 + [28])
	$3 = ($0 + [16])
	$4 = ($0 + [20])
	$5 = ($0 + [12])
	$6 = ($0 + [8])
	$7 = ($0 + [36])
	$8 = ($0 + [32])
	$9 = ($0 + [24])
	
.LOOP $label$15:
	*($3) = (*($3) + [1])
	*($4) = (*($4) + [1])
	if ( (*($5) == 0) ){ goto $label$17 }
	*($5) = [0]
	$10 = [15]
	$11 = *($6)
	if ( ((int_32)$11 != (int_32)[-1]) ){ goto $label$16 }
	goto $label$13 
	
.LABEL $label$17
	$11 = *($0)
	$11 = CALL int_32 $11((int_32 *(*($11))))
	*($6) = $11
	$10 = [15]
	if ( ((int_32)$11 == (int_32)[-1]) ){ goto $label$13 }
	
.LABEL $label$16
	*($1 + [15]) = $11
	$12 = *($8)
	if ( ((uint_32)$12 >= (uint_32)*($7)) ){ goto $label$20 }
	*($12) = $11
	*($8) = (*($8) + [1])
	$11 = (*($6) + [1])
	if ( ((uint_32)$11 > (uint_32)[126]) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$20
	CALL $108($2, ($1 + [15]))
	$11 = (*($6) + [1])
	if ( ((uint_32)$11 > (uint_32)[126]) ){ goto $label$18 }
	
.LABEL $label$19
	goto $label$13 
	
.LABEL $label$21
	*($4) = [0]
	*($9) = (*($9) + [1])
	goto $label$15 
	
.LABEL $label$18
	*($0 + [52]) = [9471]
	$global$0 = ($1 + [16])
	return [14]
	
.LABEL $label$14
	$10 = CALL $109($0)
	
.LABEL $label$13
	$global$0 = ($1 + [16])
	return $10
	
.LABEL $label$12
	$11 = CALL $110($0)
	$global$0 = ($1 + [16])
	return $11
	
.LABEL $label$11
	$global$0 = ($1 + [16])
	return [13]
	
.LABEL $label$10
	$global$0 = ($1 + [16])
	return [12]
	
.LABEL $label$9
	$global$0 = ($1 + [16])
	return [8]
	
.LABEL $label$8
	$global$0 = ($1 + [16])
	return [10]
	
.LABEL $label$7
	$11 = CALL $111($0, [9460], [5], [2])
	$global$0 = ($1 + [16])
	return $11
	
.LABEL $label$6
	$11 = CALL $111($0, [9466], [4], [3])
	$global$0 = ($1 + [16])
	return $11
	
.LABEL $label$5
	$11 = CALL $111($0, [9455], [4], [1])
	$global$0 = ($1 + [16])
	return $11
	
.LABEL $label$4
	$global$0 = ($1 + [16])
	return [9]
	
.LABEL $label$3
	$global$0 = ($1 + [16])
	return [11]
	
.LABEL $label$1
	*($0 + [52]) = [9410]
	$global$0 = ($1 + [16])
	$11
	return [14]
}

void .FUNC $93 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [288])
	$global$0 = $3
	$4 = *($0 + [16])
	if ( ($4 == 0) ){ goto $label$27 }
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$26 }
	*($3 + [184]) = CALL int_32 $4((int_32 *(*($4) + [8])))
	goto $label$25 
	
.LABEL $label$27
	*(($3 + [204])) = (int_64)0
	*($3 + [196 align=4]) = (int_64)0
	*($3 + [212]) = [0]
	*($3 + [213]) = *($0 + [120])
	*($3 + [192]) = $2
	CALL $98($0, ($3 + [192]))
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)[3]) ){ goto $label$23 }
	if ( ((int_32)$4 == (int_32)[2]) ){ goto $label$24 }
	if ( ((int_32)$4 != (int_32)[1]) ){ goto $label$22 }
	if ( *($2 + [8]) ){ goto $label$22 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$26
	*($3 + [184]) = ($3 + [168])
	CALL void $4((int_32 ($3 + [168])), (int_32 *(*($4) + [12])))
	
.LABEL $label$25
	$5 = CALL $99(($3 + [192]), $2, ($3 + [168]), *($0 + [120]))
	$4 = *(($3 + [184]))
	if ( ((int_32)($3 + [168]) == (int_32)$4) ){ goto $label$29 }
	if ( ($4 == 0) ){ goto $label$28 }
	CALL void $4((int_32 *(*($4) + [20])))
	goto $label$28 
	
.LABEL $label$29
	CALL void $4((int_32 *(*($4) + [16])))
	
.LABEL $label$28
	CALL $100($0, $5)
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)[3]) ){ goto $label$31 }
	if ( ((int_32)$4 == (int_32)[2]) ){ goto $label$32 }
	if ( ((int_32)$4 != (int_32)[1]) ){ goto $label$30 }
	if ( *($2 + [8]) ){ goto $label$30 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$32
	if ( *($2 + [8]) ){ goto $label$30 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$31
	if ( (*($2 + [8]) == 0) ){ goto $label$15 }
	
.LABEL $label$30
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = CALL $92(($0 + [32]))
	*($0 + [24]) = $4
	if ( ((int_32)$4 == (int_32)[15]) ){ goto $label$1 }
	*($3 + [160]) = [0]
	*($3 + [152]) = (int_64)0
	$6 = *(($0 + [64]))
	$4 = *(($0 + [60]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$33 }
	
.LOOP $label$34:
	$1 = *($4)
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$35 }
	*($3 + [16]) = $1
	CALL $262(($3 + [128]), [9], [13208], ($3 + [16]))
	CALL $227(($3 + [152]), ($3 + [128]))
	$4 = ($4 + [1])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	CALL $228(($3 + [152]), int_32(($1 << [24]) >> [24]))
	$4 = ($4 + [1])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$34 }
	
.LABEL $label$33
	*((($3 + [112]) + [8])) = *(($0 + [56]))
	*($3 + [112]) = *(($0 + [48]))
	*((($3 + [80]) + [8])) = [0]
	*($3 + [80]) = (int_64)0
	$4 = CALL $297([12793])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$21 }
	*($3 + [80]) = ($4 << [1])
	$1 = (($3 + [80]) | [1])
	if ( $4 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$24
	if ( *($2 + [8]) ){ goto $label$22 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$23
	if ( (*($2 + [8]) == 0) ){ goto $label$12 }
	
.LABEL $label$22
	if ( ($1 == 0) ){ goto $label$4 }
	$4 = CALL $92(($0 + [32]))
	*($0 + [24]) = $4
	if ( ((int_32)$4 == (int_32)[15]) ){ goto $label$4 }
	*($3 + [160]) = [0]
	*($3 + [152]) = (int_64)0
	$6 = *(($0 + [64]))
	$4 = *(($0 + [60]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$36 }
	
.LOOP $label$37:
	$1 = *($4)
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$38 }
	*($3) = $1
	CALL $262(($3 + [128]), [9], [13208], $3)
	CALL $227(($3 + [152]), ($3 + [128]))
	$4 = ($4 + [1])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$38
	CALL $228(($3 + [152]), int_32(($1 << [24]) >> [24]))
	$4 = ($4 + [1])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$37 }
	
.LABEL $label$36
	*((($3 + [112]) + [8])) = *(($0 + [56]))
	*($3 + [112]) = *(($0 + [48]))
	*((($3 + [80]) + [8])) = [0]
	*($3 + [80]) = (int_64)0
	$4 = CALL $297([12793])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$18 }
	*($3 + [80]) = ($4 << [1])
	$1 = (($3 + [80]) | [1])
	if ( $4 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$21
	$6 = (($4 + [16]) & [-16])
	$1 = CALL _Znwj($6)
	*($3 + [80]) = ($6 | [1])
	*($3 + [88]) = $1
	*($3 + [84]) = $4
	
.LABEL $label$20
	CALL memcpy($1, [12793], $4)
	
.LABEL $label$19
	*(($1 + $4)) = [0]
	CALL $101(($3 + [96]), $0, [15], ($3 + [80]))
	CALL $102(($3 + [128]), [101], ($3 + [112]), ($3 + [96]))
	*($5 + [44]) = [1]
	if ( *($5 + [72]) ){ goto $label$13 }
	*($3 + [128]) = [13184]
	CALL $216(($3 + [136]))
	CALL $244(($3 + [128]))
	if ( (*($3 + [96]) & [1]) ){ goto $label$40 }
	$4 = [1]
	if ( (*($3 + [80]) & [1]) ){ goto $label$39 }
	goto $label$3 
	
.LABEL $label$40
	CALL _ZdlPv(*($3 + [104]))
	$4 = [1]
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$39
	CALL _ZdlPv(*($3 + [88]))
	if ( (*($3 + [152]) & $4) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$18
	$6 = (($4 + [16]) & [-16])
	$1 = CALL _Znwj($6)
	*($3 + [80]) = ($6 | [1])
	*($3 + [88]) = $1
	*($3 + [84]) = $4
	
.LABEL $label$17
	CALL memcpy($1, [12793], $4)
	
.LABEL $label$16
	*(($1 + $4)) = [0]
	CALL $101(($3 + [96]), $0, [15], ($3 + [80]))
	CALL $102(($3 + [128]), [101], ($3 + [112]), ($3 + [96]))
	*(($3 + [212])) = [1]
	if ( *(($3 + [213])) ){ goto $label$10 }
	*($3 + [128]) = [13184]
	CALL $216(($3 + [136]))
	CALL $244(($3 + [128]))
	if ( (*($3 + [96]) & [1]) ){ goto $label$42 }
	$4 = [1]
	if ( (*($3 + [80]) & [1]) ){ goto $label$41 }
	goto $label$6 
	
.LABEL $label$42
	CALL _ZdlPv(*($3 + [104]))
	$4 = [1]
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$41
	CALL _ZdlPv(*($3 + [88]))
	if ( (*($3 + [152]) & $4) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$15
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$14
	CALL $219(($3 + [80]))
	
.LABEL $label$13
	$3 = (((int_32)((int_32)*($3 + [132]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$3 > (uint_32)[4]) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$12
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$11
	CALL $219(($3 + [80]))
	
.LABEL $label$10
	$3 = (((int_32)((int_32)*($3 + [132]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$3 > (uint_32)[4]) ){ goto $label$7 }
	goto $label$9 
	
.LABEL $label$9
	CALL abort()
	
.LABEL $label$8
	CALL $248([9460], [9181], [4757], [13196])
	
.LABEL $label$7
	CALL $248([9460], [9181], [4500], [13196])
	
.LABEL $label$6
	if ( ((*($3 + [152]) & $4) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($3 + [160])))
	
.LABEL $label$4
	if ( (*(($3 + [212])) == 0) ){ goto $label$44 }
	*($3 + [40]) = [0]
	*($3 + [32]) = [8]
	CALL $103($2, ($3 + [32]))
	$0 = (($3 + [32]) + [8])
	$4 = *($3 + [32])
	if ( ((int_32)$4 == (int_32)[3]) ){ goto $label$46 }
	if ( ((int_32)$4 == (int_32)[2]) ){ goto $label$47 }
	if ( ((int_32)$4 != (int_32)[1]) ){ goto $label$45 }
	if ( *(($3 + [40])) ){ goto $label$45 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$47
	if ( *(($3 + [40])) ){ goto $label$45 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$46
	if ( (*($0) == 0) ){ goto $label$43 }
	
.LABEL $label$45
	CALL $38($0, $4)
	
.LABEL $label$44
	$4 = *($3 + [196])
	if ( ($4 == 0) ){ goto $label$48 }
	*(($3 + [200])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$48
	$global$0 = ($3 + [288])
	return (unreachable)
	
.LABEL $label$43
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$3
	if ( ((*($3 + [152]) & $4) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*(($3 + [160])))
	
.LABEL $label$1
	if ( (*($5 + [44]) == 0) ){ goto $label$58 }
	*($3 + [72]) = [0]
	*($3 + [64]) = [8]
	CALL $103($2, ($3 + [64]))
	$0 = (($3 + [64]) + [8])
	$4 = *($3 + [64])
	if ( ((int_32)$4 == (int_32)[3]) ){ goto $label$56 }
	if ( ((int_32)$4 == (int_32)[2]) ){ goto $label$57 }
	if ( ((int_32)$4 != (int_32)[1]) ){ goto $label$55 }
	if ( *(($3 + [72])) ){ goto $label$55 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$58
	if ( ((int_32)*($2) != (int_32)[8]) ){ goto $label$51 }
	*($3 + [56]) = [0]
	*($3 + [48]) = [0]
	CALL $103($2, ($3 + [48]))
	$4 = *($3 + [48])
	if ( ((int_32)$4 == (int_32)[3]) ){ goto $label$53 }
	if ( ((int_32)$4 == (int_32)[2]) ){ goto $label$54 }
	if ( ((int_32)$4 != (int_32)[1]) ){ goto $label$52 }
	if ( *(($3 + [56])) ){ goto $label$52 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$57
	if ( *(($3 + [72])) ){ goto $label$55 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$56
	if ( (*($0) == 0) ){ goto $label$50 }
	
.LABEL $label$55
	CALL $38($0, $4)
	goto $label$51 
	
.LABEL $label$54
	if ( *(($3 + [56])) ){ goto $label$52 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$53
	if ( (*(($3 + [56])) == 0) ){ goto $label$49 }
	
.LABEL $label$52
	CALL $38((($3 + [48]) + [8]), $4)
	
.LABEL $label$51
	CALL $104($5)
	$global$0 = ($3 + [288])
	return (unreachable)
	
.LABEL $label$50
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$49
	CALL $248([9322], [9181], [13424], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	$3
	(unreachable)
	(unreachable)
	$3
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $138 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$2 = *($1 + [4])
	$4 = *($1)
	$5 = ((((*($2) - $4) << [3]) + *($2 + [4])) - $2)
	if ( ((int_32)$5 <= (int_32)[0]) ){ goto $label$1 }
	if ( ($2 == 0) ){ goto $label$4 }
	$6 = *($4)
	$9 = ([32] - $2)
	$10 = ( $5 ? $9 : ((int_32)$5 < (int_32)$9) )
	$8 = ( $8 ? $10 : ($8 <= $10) )
	$7 = *($3 + [4])
	$8 = ([32] - $7)
	$7 = (*($4) & ((int_32)(uint_32([-1] >> ($8 - $8)) & ([-1] << $7)) ^ (int_32)[-1]))
	*(($4 = *($3))) = $7
	$11 = ($1 + [4])
	$9 = *($11)
	$2 = *($3 + [4])
	$6 = ($6 & (uint_32([-1] >> ($9 - $10)) & ([-1] << $2)))
	*($4) = (( ($6 << ($2 - $9)) ? uint_32($6 >> ($9 - $2)) : ((uint_32)$2 > (uint_32)$9) ) | $7)
	$9 = (*($3 + [4]) + $8)
	$2 = ($9 & [31])
	*($3 + [4]) = $2
	$4 = ($4 + (uint_32($9 >> [3]) & [536870908]))
	*($3) = $4
	$12 = ($3 + [4])
	$9 = ($10 - $8)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$5 }
	$2 = (*($4) & ((int_32)uint_32([-1] >> ([32] - $9)) ^ (int_32)[-1]))
	*($4) = $2
	*($4) = (uint_32($6 >> (*($11) + $8)) | $2)
	*($12) = $9
	$2 = $9
	
.LABEL $label$5
	$4 = (*($1) + [4])
	*($1) = $4
	$8 = [32]
	$7 = ([32] - $2)
	$5 = ($5 - $10)
	if ( ((int_32)$5 >= (int_32)[32]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$12 = ($3 + [4])
	$8 = [32]
	$2 = *($3 + [4])
	$7 = ([32] - $2)
	if ( ((int_32)$5 < (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$3
	$10 = ((int_32)$5 ^ (int_32)[-1])
	$13 = ((($5 + ( $10 ? [-64] : ((int_32)$10 > (int_32)[-64]) )) + $8) & [-32])
	$8 = ($5 + $8)
	$11 = ([-1] << $2)
	$14 = ((int_32)$11 ^ (int_32)[-1])
	
.LOOP $label$6:
	$10 = *($4)
	$9 = (*($2) & $14)
	*(($2 = *($3))) = $9
	*($3) = ($2 + [4])
	$6 = *(($3 + [4]))
	*($2 + [4]) = ((*($2 + [4]) & $11) | uint_32($10 >> $7))
	$4 = (*($1) + [4])
	*($1) = $4
	*($2) = (($10 << $6) | $9)
	$8 = ($8 + [-32])
	if ( ((int_32)$8 > (int_32)[63]) ){ goto $label$6 }
	$5 = (($5 + [-32]) - $13)
	
.LABEL $label$2
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$1 }
	$4 = *($4)
	$1 = ( $7 ? $5 : ((int_32)$7 < (int_32)$5) )
	$10 = ($3 + [4])
	$8 = (*($2) & ((int_32)(([-1] << *($10)) & uint_32([-1] >> ($7 - $1))) ^ (int_32)[-1]))
	*(($2 = *($3))) = $8
	$9 = ($4 & uint_32([-1] >> ([32] - $5)))
	*($2) = (($9 << *($10)) | $8)
	$4 = (*($10) + $1)
	*($10) = ($4 & [31])
	$2 = ($2 + (uint_32($4 >> [3]) & [536870908]))
	*($3) = $2
	$10 = ($5 - $1)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$1 }
	*($2) = ((*($2) & ((int_32)uint_32([-1] >> ([32] - $10)) ^ (int_32)[-1])) | uint_32($9 >> $1))
	*($12) = $10
	
.LABEL $label$1
	*($0) = *($3)
}

void .FUNC $139 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [64])
	$global$0 = $4
	$5 = *(($1 + [20]))
	if ( ($5 == 0) ){ goto $label$15 }
	$5 = ($5 + [-1])
	if ( ((*((*($1 + [16]) + (uint_32($5 >> [3]) & [536870908]))) & ([1] << ($5 & [31]))) == 0) ){ goto $label$19 }
	$5 = *($2)
	*($4 + [40]) = $5
	$5 = CALL $105(($4 + [48]), $5)
	$2 = *($4 + [40])
	if ( ((int_32)$2 == (int_32)[3]) ){ goto $label$17 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$18 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$16 }
	if ( *($5) ){ goto $label$16 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$19
	*($0 + [4]) = [0]
	*($0) = [0]
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$18
	if ( *($5) ){ goto $label$16 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$17
	if ( (*($5) == 0) ){ goto $label$12 }
	
.LABEL $label$16
	if ( ($3 == 0) ){ goto $label$35 }
	$3 = ($1 + [8])
	goto $label$34 
	
.LABEL $label$35
	$3 = ($1 + [8])
	$2 = *($3)
	$6 = *($1 + [4])
	*($4 + [59]) = [5]
	*($4 + [60]) = int_32(($2 - $6) >> [2])
	$2 = *(($1 + [64]))
	if ( ($2 == 0) ){ goto $label$14 }
	if ( (CALL int_32 $2((int_32 ($4 + [60])), (int_32 ($4 + [59])), (int_32 ($4 + [40])), (int_32 *(*($2) + [24]))) == 0) ){ goto $label$33 }
	
.LABEL $label$34
	$2 = *(($1 + [8]))
	if ( ((int_32)*($1 + [4]) == (int_32)$2) ){ goto $label$36 }
	$2 = *(($2 + [-4]))
	if ( ($2 == 0) ){ goto $label$32 }
	$6 = *($2)
	if ( ((int_32)$6 == (int_32)[1]) ){ goto $label$31 }
	if ( ((int_32)$6 != (int_32)[2]) ){ goto $label$13 }
	$1 = *($2 + [8])
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)*($1 + [8])) ){ goto $label$30 }
	CALL $144($2, ($4 + [40]))
	*(($1 = ($1 + [4]))) = (*($1) + [16])
	goto $label$29 
	
.LABEL $label$36
	$2 = CALL $144(($4 + [24]), ($4 + [40]))
	CALL $103(*($1), $2)
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$27 }
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$28 }
	if ( ((int_32)$3 != (int_32)[3]) ){ goto $label$26 }
	if ( (*($2 + [8]) == 0) ){ goto $label$9 }
	$2 = ($2 + [8])
	goto $label$25 
	
.LABEL $label$33
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$32
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 == (int_32)[3]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$31
	$3 = ($1 + [32])
	$2 = *($3)
	if ( ($2 == 0) ){ goto $label$11 }
	$2 = ($2 + [-1])
	$6 = *((*($1 + [28]) + (uint_32($2 >> [3]) & [536870908])))
	*($3) = $2
	if ( (($6 & ([1] << ($2 & [31]))) == 0) ){ goto $label$24 }
	if ( (*($1 + [40]) == 0) ){ goto $label$10 }
	$2 = CALL $144(($4 + [8]), ($4 + [40]))
	CALL $103(*(($1 + [40])), $2)
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$22 }
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$23 }
	if ( ((int_32)$3 != (int_32)[3]) ){ goto $label$21 }
	if ( (*($2 + [8]) == 0) ){ goto $label$6 }
	$2 = ($2 + [8])
	goto $label$20 
	
.LABEL $label$30
	CALL $145($1, ($4 + [40]))
	
.LABEL $label$29
	*($0) = [1]
	*($0 + [4]) = (*(*(*((*($3) + [-4])) + [8]) + [4]) + [-16])
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$28
	if ( (*($2 + [8]) == 0) ){ goto $label$8 }
	$2 = ($2 + [8])
	goto $label$25 
	
.LABEL $label$27
	if ( (*($2 + [8]) == 0) ){ goto $label$7 }
	$2 = ($2 + [8])
	goto $label$25 
	
.LABEL $label$26
	$2 = ($2 + [8])
	
.LABEL $label$25
	CALL $38($2, $3)
	*($0) = [1]
	*($0 + [4]) = *($1)
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$24
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$23
	if ( (*($2 + [8]) == 0) ){ goto $label$5 }
	$2 = ($2 + [8])
	goto $label$20 
	
.LABEL $label$22
	if ( (*($2 + [8]) == 0) ){ goto $label$4 }
	$2 = ($2 + [8])
	goto $label$20 
	
.LABEL $label$21
	$2 = ($2 + [8])
	
.LABEL $label$20
	CALL $38($2, $3)
	*($0) = [1]
	*($0 + [4]) = *(($1 + [40]))
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$15
	CALL $248([12906], [9181], [4788], [12929])
	
.LABEL $label$14
	CALL abort()
	
.LABEL $label$13
	CALL $248([12942], [9181], [4823], [12929])
	
.LABEL $label$12
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$11
	CALL $248([13004], [9181], [4833], [12929])
	
.LABEL $label$10
	CALL $248([13031], [9181], [4842], [12929])
	
.LABEL $label$9
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$8
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$7
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$6
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$5
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$4
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$37 }
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$1 }
	if ( *($5) ){ goto $label$1 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$37
	if ( *($5) ){ goto $label$1 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$2
	if ( *($5) ){ goto $label$1 }
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$1
	CALL $38($5, $1)
	$global$0 = ($4 + [64])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $269 (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [2] ? [3] : (int_64)(((int_64)$2 | (int_64)$0) == 0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

int_32 .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *(($0 + [8]))
	if ( ((int_32)*($0 + [4]) == (int_32)$3) ){ goto $label$17 }
	$3 = *(($3 + [-4]))
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$16 }
	if ( ((int_32)$4 != (int_32)[2]) ){ goto $label$7 }
	$3 = *($3 + [8])
	$4 = *($3 + [4])
	if ( ((uint_32)$4 >= (uint_32)*($3 + [8])) ){ goto $label$15 }
	*($4) = [3]
	*($4 + [8]) = (int_64)0
	$5 = CALL _Znwj([12])
	CALL $220($5, $1)
	if ( ($5 == 0) ){ goto $label$3 }
	*($4 + [8]) = $5
	*(($1 = ($3 + [4]))) = (*($1) + [16])
	goto $label$14 
	
.LABEL $label$17
	*($2 + [16]) = [3]
	*($2 + [24]) = (int_64)0
	$3 = CALL _Znwj([12])
	CALL $220($3, $1)
	if ( ($3 == 0) ){ goto $label$6 }
	*($2 + [24]) = $3
	CALL $103(*($0), ($2 + [16]))
	$3 = ($2 + [24])
	$1 = *($2 + [16])
	if ( ((int_32)$1 == (int_32)[3]) ){ goto $label$12 }
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$13 }
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$11 }
	if ( *(($2 + [24])) ){ goto $label$11 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$16
	if ( (*($0 + [16]) == 0) ){ goto $label$5 }
	*($2) = [3]
	*($2 + [8]) = (int_64)0
	$3 = CALL _Znwj([12])
	CALL $220($3, $1)
	if ( ($3 == 0) ){ goto $label$4 }
	*($2 + [8]) = $3
	CALL $103(*(($0 + [16])), $2)
	$3 = ($2 + [8])
	$1 = *($2)
	if ( ((int_32)$1 == (int_32)[3]) ){ goto $label$9 }
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$10 }
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$8 }
	if ( *(($2 + [8])) ){ goto $label$8 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$15
	CALL $161($3, $1)
	
.LABEL $label$14
	$0 = *(*(*((*(($0 + [8])) + [-4])) + [8]) + [4])
	$global$0 = ($2 + [32])
	return ($0 + [-16])
	
.LABEL $label$13
	if ( *(($2 + [24])) ){ goto $label$11 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$12
	if ( (*($3) == 0) ){ goto $label$2 }
	
.LABEL $label$11
	CALL $38($3, $1)
	$0 = *($0)
	$global$0 = ($2 + [32])
	return $0
	
.LABEL $label$10
	if ( *(($2 + [8])) ){ goto $label$8 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$9
	if ( (*($3) == 0) ){ goto $label$1 }
	
.LABEL $label$8
	CALL $38($3, $1)
	$0 = *(($0 + [16]))
	$global$0 = ($2 + [32])
	return $0
	
.LABEL $label$7
	CALL $248([12942], [9181], [4528], [12929])
	
.LABEL $label$6
	CALL $248([9163], [9181], [13215], [9190])
	
.LABEL $label$5
	CALL $248([13031], [9181], [4537], [12929])
	
.LABEL $label$4
	CALL $248([9163], [9181], [13215], [9190])
	
.LABEL $label$3
	CALL $248([9163], [9181], [13215], [9190])
	
.LABEL $label$2
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$1
	CALL $248([9322], [9181], [13424], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *(($0 + [8]))
	if ( ((int_32)*($0 + [4]) == (int_32)$3) ){ goto $label$14 }
	$3 = *(($3 + [-4]))
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$13 }
	if ( ((int_32)$4 != (int_32)[2]) ){ goto $label$4 }
	$3 = *($3 + [8])
	$4 = *($3 + [4])
	if ( ((uint_32)$4 >= (uint_32)*($3 + [8])) ){ goto $label$12 }
	*($4 + [8]) = [0]
	*($4) = [0]
	*(($3 = ($3 + [4]))) = (*($3) + [16])
	goto $label$11 
	
.LABEL $label$14
	*($2 + [24]) = [0]
	*($2 + [16]) = [0]
	CALL $103(*($0), ($2 + [16]))
	$3 = *($2 + [16])
	if ( ((int_32)$3 == (int_32)[3]) ){ goto $label$9 }
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$10 }
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$8 }
	if ( *(($2 + [24])) ){ goto $label$8 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$13
	$3 = *($0 + [16])
	if ( ($3 == 0) ){ goto $label$3 }
	*($2 + [8]) = [0]
	*($2) = [0]
	CALL $103($3, $2)
	$1 = ($2 + [8])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)[3]) ){ goto $label$6 }
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$7 }
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$5 }
	if ( *(($2 + [8])) ){ goto $label$5 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$12
	CALL $159($3, $1)
	
.LABEL $label$11
	$0 = *(*(*((*(($0 + [8])) + [-4])) + [8]) + [4])
	$global$0 = ($2 + [32])
	return ($0 + [-16])
	
.LABEL $label$10
	if ( *(($2 + [24])) ){ goto $label$8 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$9
	if ( (*(($2 + [24])) == 0) ){ goto $label$2 }
	
.LABEL $label$8
	CALL $38((($2 + [16]) + [8]), $3)
	$0 = *($0)
	$global$0 = ($2 + [32])
	return $0
	
.LABEL $label$7
	if ( *(($2 + [8])) ){ goto $label$5 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$6
	if ( (*($1) == 0) ){ goto $label$1 }
	
.LABEL $label$5
	CALL $38($1, $3)
	$0 = *(($0 + [16]))
	$global$0 = ($2 + [32])
	return $0
	
.LABEL $label$4
	CALL $248([12942], [9181], [4528], [12929])
	
.LABEL $label$3
	CALL $248([13031], [9181], [4537], [12929])
	
.LABEL $label$2
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$1
	CALL $248([9322], [9181], [13424], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *(($0 + [8]))
	if ( ((int_32)*($0 + [4]) == (int_32)$3) ){ goto $label$20 }
	$3 = *(($3 + [-4]))
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$19 }
	if ( ((int_32)$4 != (int_32)[2]) ){ goto $label$7 }
	$3 = *($3 + [8])
	$4 = *($3 + [4])
	if ( ((uint_32)$4 >= (uint_32)*($3 + [8])) ){ goto $label$18 }
	$1 = *($1)
	*($4) = $1
	$5 = CALL $105(($4 + [8]), $1)
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)[3]) ){ goto $label$10 }
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$11 }
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$9 }
	if ( *($5) ){ goto $label$9 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$20
	$1 = *($1)
	*($2 + [16]) = $1
	$1 = CALL $105((($2 + [16]) + [8]), $1)
	$3 = *($2 + [16])
	if ( ((int_32)$3 == (int_32)[3]) ){ goto $label$16 }
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$17 }
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$15 }
	if ( *($1) ){ goto $label$15 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$19
	if ( (*($0 + [16]) == 0) ){ goto $label$6 }
	$1 = *($1)
	*($2) = $1
	$1 = CALL $105(($2 + [8]), $1)
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)[3]) ){ goto $label$13 }
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$14 }
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$12 }
	if ( *($1) ){ goto $label$12 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$18
	CALL $156($3, $1)
	goto $label$8 
	
.LABEL $label$17
	if ( *($1) ){ goto $label$15 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$16
	if ( (*($1) == 0) ){ goto $label$5 }
	
.LABEL $label$15
	CALL $103(*($0), ($2 + [16]))
	$3 = *($2 + [16])
	if ( ((int_32)$3 == (int_32)[3]) ){ goto $label$22 }
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$23 }
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$21 }
	if ( *($1) ){ goto $label$21 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$23
	if ( *($1) ){ goto $label$21 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$22
	if ( (*($1) == 0) ){ goto $label$4 }
	
.LABEL $label$21
	CALL $38($1, $3)
	$0 = *($0)
	$global$0 = ($2 + [32])
	return $0
	
.LABEL $label$14
	if ( *($1) ){ goto $label$12 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$13
	if ( (*($1) == 0) ){ goto $label$3 }
	
.LABEL $label$12
	CALL $103(*(($0 + [16])), $2)
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)[3]) ){ goto $label$25 }
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$26 }
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$24 }
	if ( *($1) ){ goto $label$24 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$26
	if ( *($1) ){ goto $label$24 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$25
	if ( (*($1) == 0) ){ goto $label$2 }
	
.LABEL $label$24
	CALL $38($1, $3)
	$0 = *(($0 + [16]))
	$global$0 = ($2 + [32])
	return $0
	
.LABEL $label$11
	if ( *($5) ){ goto $label$9 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$10
	if ( (*($5) == 0) ){ goto $label$1 }
	
.LABEL $label$9
	*(($1 = ($3 + [4]))) = (*($1) + [16])
	
.LABEL $label$8
	$0 = *(*(*((*(($0 + [8])) + [-4])) + [8]) + [4])
	$global$0 = ($2 + [32])
	return ($0 + [-16])
	
.LABEL $label$7
	CALL $248([12942], [9181], [4528], [12929])
	
.LABEL $label$6
	CALL $248([13031], [9181], [4537], [12929])
	
.LABEL $label$5
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$4
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$3
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$2
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$1
	CALL $248([9322], [9181], [13424], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *(($0 + [8]))
	if ( ((int_32)*($0 + [4]) == (int_32)$3) ){ goto $label$20 }
	$3 = *(($3 + [-4]))
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$19 }
	if ( ((int_32)$4 != (int_32)[2]) ){ goto $label$8 }
	$3 = *($3 + [8])
	$4 = *($3 + [4])
	if ( ((uint_32)$4 >= (uint_32)*($3 + [8])) ){ goto $label$18 }
	*($4 + [8]) = (int_64)0
	*($4 + [8]) = *($1)
	*($4) = [6]
	*(($1 = ($3 + [4]))) = (*($1) + [16])
	goto $label$17 
	
.LABEL $label$20
	*($2 + [16]) = [6]
	*($2 + [24]) = *($1)
	CALL $103(*($0), ($2 + [16]))
	$1 = *($2 + [16])
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$15 }
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$16 }
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$14 }
	if ( (*($2 + [24]) == 0) ){ goto $label$6 }
	$3 = ($2 + [24])
	goto $label$13 
	
.LABEL $label$19
	$3 = *($0 + [16])
	if ( ($3 == 0) ){ goto $label$7 }
	*($2) = [6]
	*($2 + [8]) = *($1)
	CALL $103($3, $2)
	$1 = *($2)
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$11 }
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$12 }
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$10 }
	if ( (*($2 + [8]) == 0) ){ goto $label$3 }
	$3 = ($2 + [8])
	goto $label$9 
	
.LABEL $label$18
	CALL $162($3, $1)
	
.LABEL $label$17
	$0 = *(*(*((*(($0 + [8])) + [-4])) + [8]) + [4])
	$global$0 = ($2 + [32])
	return ($0 + [-16])
	
.LABEL $label$16
	if ( (*($2 + [24]) == 0) ){ goto $label$5 }
	$3 = ($2 + [24])
	goto $label$13 
	
.LABEL $label$15
	if ( (*($2 + [24]) == 0) ){ goto $label$4 }
	$3 = ($2 + [24])
	goto $label$13 
	
.LABEL $label$14
	$3 = ($2 + [24])
	
.LABEL $label$13
	CALL $38($3, $1)
	$0 = *($0)
	$global$0 = ($2 + [32])
	return $0
	
.LABEL $label$12
	if ( (*($2 + [8]) == 0) ){ goto $label$2 }
	$3 = ($2 + [8])
	goto $label$9 
	
.LABEL $label$11
	if ( (*($2 + [8]) == 0) ){ goto $label$1 }
	$3 = ($2 + [8])
	goto $label$9 
	
.LABEL $label$10
	$3 = ($2 + [8])
	
.LABEL $label$9
	CALL $38($3, $1)
	$0 = *(($0 + [16]))
	$global$0 = ($2 + [32])
	return $0
	
.LABEL $label$8
	CALL $248([12942], [9181], [4528], [12929])
	
.LABEL $label$7
	CALL $248([13031], [9181], [4537], [12929])
	
.LABEL $label$6
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$5
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$4
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$3
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$2
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$1
	CALL $248([9197], [9181], [13422], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *(($0 + [8]))
	if ( ((int_32)*($0 + [4]) == (int_32)$3) ){ goto $label$20 }
	$3 = *(($3 + [-4]))
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$19 }
	if ( ((int_32)$4 != (int_32)[2]) ){ goto $label$8 }
	$3 = *($3 + [8])
	$4 = *($3 + [4])
	if ( ((uint_32)$4 >= (uint_32)*($3 + [8])) ){ goto $label$18 }
	*($4 + [8]) = (int_64)0
	*($4 + [8]) = *($1)
	*($4) = [7]
	*(($1 = ($3 + [4]))) = (*($1) + [16])
	goto $label$17 
	
.LABEL $label$20
	*($2 + [16]) = [7]
	*($2 + [24]) = *($1)
	CALL $103(*($0), ($2 + [16]))
	$1 = *($2 + [16])
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$15 }
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$16 }
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$14 }
	if ( (*($2 + [24]) == 0) ){ goto $label$6 }
	$3 = ($2 + [24])
	goto $label$13 
	
.LABEL $label$19
	$3 = *($0 + [16])
	if ( ($3 == 0) ){ goto $label$7 }
	*($2) = [7]
	*($2 + [8]) = *($1)
	CALL $103($3, $2)
	$1 = *($2)
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$11 }
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$12 }
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$10 }
	if ( (*($2 + [8]) == 0) ){ goto $label$3 }
	$3 = ($2 + [8])
	goto $label$9 
	
.LABEL $label$18
	CALL $157($3, $1)
	
.LABEL $label$17
	$0 = *(*(*((*(($0 + [8])) + [-4])) + [8]) + [4])
	$global$0 = ($2 + [32])
	return ($0 + [-16])
	
.LABEL $label$16
	if ( (*($2 + [24]) == 0) ){ goto $label$5 }
	$3 = ($2 + [24])
	goto $label$13 
	
.LABEL $label$15
	if ( (*($2 + [24]) == 0) ){ goto $label$4 }
	$3 = ($2 + [24])
	goto $label$13 
	
.LABEL $label$14
	$3 = ($2 + [24])
	
.LABEL $label$13
	CALL $38($3, $1)
	$0 = *($0)
	$global$0 = ($2 + [32])
	return $0
	
.LABEL $label$12
	if ( (*($2 + [8]) == 0) ){ goto $label$2 }
	$3 = ($2 + [8])
	goto $label$9 
	
.LABEL $label$11
	if ( (*($2 + [8]) == 0) ){ goto $label$1 }
	$3 = ($2 + [8])
	goto $label$9 
	
.LABEL $label$10
	$3 = ($2 + [8])
	
.LABEL $label$9
	CALL $38($3, $1)
	$0 = *(($0 + [16]))
	$global$0 = ($2 + [32])
	return $0
	
.LABEL $label$8
	CALL $248([12942], [9181], [4528], [12929])
	
.LABEL $label$7
	CALL $248([13031], [9181], [4537], [12929])
	
.LABEL $label$6
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$5
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$4
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$3
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$2
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$1
	CALL $248([9197], [9181], [13422], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *(($0 + [8]))
	if ( ((int_32)*($0 + [4]) == (int_32)$3) ){ goto $label$20 }
	$3 = *(($3 + [-4]))
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$19 }
	if ( ((int_32)$4 != (int_32)[2]) ){ goto $label$8 }
	$3 = *($3 + [8])
	$4 = *($3 + [4])
	if ( ((uint_32)$4 >= (uint_32)*($3 + [8])) ){ goto $label$18 }
	*($4 + [8]) = (int_64)0
	*($4 + [8]) = *($1)
	*($4) = [5]
	*(($1 = ($3 + [4]))) = (*($1) + [16])
	goto $label$17 
	
.LABEL $label$20
	*($2 + [16]) = [5]
	*($2 + [24]) = *($1)
	CALL $103(*($0), ($2 + [16]))
	$1 = *($2 + [16])
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$15 }
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$16 }
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$14 }
	if ( (*($2 + [24]) == 0) ){ goto $label$6 }
	$3 = ($2 + [24])
	goto $label$13 
	
.LABEL $label$19
	$3 = *($0 + [16])
	if ( ($3 == 0) ){ goto $label$7 }
	*($2) = [5]
	*($2 + [8]) = *($1)
	CALL $103($3, $2)
	$1 = *($2)
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$11 }
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$12 }
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$10 }
	if ( (*($2 + [8]) == 0) ){ goto $label$3 }
	$3 = ($2 + [8])
	goto $label$9 
	
.LABEL $label$18
	CALL $160($3, $1)
	
.LABEL $label$17
	$0 = *(*(*((*(($0 + [8])) + [-4])) + [8]) + [4])
	$global$0 = ($2 + [32])
	return ($0 + [-16])
	
.LABEL $label$16
	if ( (*($2 + [24]) == 0) ){ goto $label$5 }
	$3 = ($2 + [24])
	goto $label$13 
	
.LABEL $label$15
	if ( (*($2 + [24]) == 0) ){ goto $label$4 }
	$3 = ($2 + [24])
	goto $label$13 
	
.LABEL $label$14
	$3 = ($2 + [24])
	
.LABEL $label$13
	CALL $38($3, $1)
	$0 = *($0)
	$global$0 = ($2 + [32])
	return $0
	
.LABEL $label$12
	if ( (*($2 + [8]) == 0) ){ goto $label$2 }
	$3 = ($2 + [8])
	goto $label$9 
	
.LABEL $label$11
	if ( (*($2 + [8]) == 0) ){ goto $label$1 }
	$3 = ($2 + [8])
	goto $label$9 
	
.LABEL $label$10
	$3 = ($2 + [8])
	
.LABEL $label$9
	CALL $38($3, $1)
	$0 = *(($0 + [16]))
	$global$0 = ($2 + [32])
	return $0
	
.LABEL $label$8
	CALL $248([12942], [9181], [4528], [12929])
	
.LABEL $label$7
	CALL $248([13031], [9181], [4537], [12929])
	
.LABEL $label$6
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$5
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$4
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$3
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$2
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$1
	CALL $248([9197], [9181], [13422], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [2])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$6 = [1073741823]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [2]) > (uint_32)[536870910]) ){ goto $label$5 }
	$6 = int_32($7 >> [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[1073741824]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL _Znwj(($6 << [2]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $245($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [2])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [2]))
	$5 = ($4 + [4])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL _ZdlPv($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $137 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	$2 = *($0 + [4])
	$7 = *($1)
	$6 = *($2)
	$5 = *($1 + [4])
	$4 = *($2 + [4])
	$1 = (($4 - $5) + (($6 - $7) << [3]))
	*($0 + [4]) = ($1 + $2)
	$0 = (*($0) + (uint_32($2 >> [3]) & [536870908]))
	$2 = ($2 & [31])
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$4 }
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$1 }
	if ( ($5 == 0) ){ goto $label$3 }
	$2 = ( $1 ? $2 : ((int_32)$1 < (int_32)$2) )
	$2 = ([32] - $5)
	$4 = (uint_32([-1] >> ($2 - $2)) & ([-1] << $5))
	*($0) = ((*($0) & ((int_32)$4 ^ (int_32)[-1])) | (*($7) & $4))
	$1 = ($1 - $2)
	$5 = ($2 + $5)
	$4 = ($5 & [31])
	$0 = ($0 + (uint_32($5 >> [3]) & [536870908]))
	$7 = ($7 + [4])
	goto $label$2 
	
.LABEL $label$4
	*($3 + [28]) = $5
	*($3 + [24]) = $7
	*($3 + [16]) = $6
	*($3 + [20]) = $4
	*($3 + [8]) = $0
	*($3 + [12]) = $2
	CALL $138($3, ($3 + [24]), ($3 + [16]), ($3 + [8]))
	$global$0 = ($3 + [32])
	return 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	$5 = ((int_32)$1 / (int_32)[32])
	$2 = ($5 << [2])
	CALL memmove($0, $7, $2)
	$0 = ($0 + $2)
	$5 = ($1 - ($5 << [5]))
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	$1 = uint_32([-1] >> ([32] - $5))
	*($0) = ((*($0) & ((int_32)$1 ^ (int_32)[-1])) | (*(($7 + $2)) & $1))
	goto $label$1 
	
.LABEL $label$5
	$5 = $4
	
.LABEL $label$1
	*($3 + [4]) = $5
	*($3) = $0
	$global$0 = ($3 + [32])
}

int_32 .FUNC $260 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [12]) = $2
	$2 = CALL $257([33], $0, [-1], $1, $2)
	$global$0 = ($3 + [16])
	return $2
}

void .FUNC $261 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $306($0)
	
.LABEL $label$1
}

int_32 .FUNC $262 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $257([33], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

int_64 .FUNC $283 (float_64 $0, int_32 $1)
{
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	if ( ((int_32)$1 < (int_32)[2047]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	if ( ((int_32)$1 > (int_32)[-1992]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($1 + [-1023])
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 + [969])
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

int_32 .FUNC $303 (int_32 $0)
{
	return CALL $304([14424], $0)
}

int_32 .FUNC $302 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $303($1)
	
.LABEL $label$2
	*(CALL $247()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $303(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $306($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $301 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $247())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $302($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $263 (int_32 $0)
{
	return [0]
}

void .FUNC $306 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [22808])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [22616]
	$3 = (((int_32)$1 * (int_32)[12]) + [22616])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

int_32 .FUNC $305 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [14416]) == 0) ){ goto $label$2 }
	$2 = *([0] + [14420])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [14416]) = [1]
	$2 = ($2 << [16])
	*([0] + [14420]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [14420])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [14420]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [14416]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [14416]) = [1]
	$3 = ($3 << [16])
	*([0] + [14420]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [14420])
	
.LABEL $label$10
	*([0] + [14420]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

int_32 .FUNC $304 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $305($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($9)), [8282])
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$10:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$12 }
	
.LOOP $label$13:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$12 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$13 }
	
.LABEL $label$12
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$14 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$11
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$10 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

int_64 .FUNC $265 (int_32 $0, int_64 $1, int_32 $2)
{
	return (int_64)-1
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $306($0)
	
.LABEL $label$1
}

void .FUNC $202 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $52(*($1), (*($0) + [32]))
	$3 = *($0)
	CALL $52(*($1), ($3 + [44]))
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($3 + [56]), *($0 + [4]), [8])
	$4 = (*($0 + [4]) + [8])
	*($0 + [4]) = $4
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]), [8805])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*(($3 + [64])) = *($2 + [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($3 + [72]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL $52(*($1), ($3 + [80]))
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($3 + [96]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($3 + [104]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $203 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6, int_32 $7, int_64 $8, int_32 $9, int_64 $10, int_64 $11)
{
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$12 = ($global$0 - [80])
	$global$0 = $12
	$0 = *($0 + [4])
	$13 = *($0 + [4])
	$14 = (*($0) + int_32($13 >> [1]))
	$15 = *($0)
	if ( (($13 & [1]) == 0) ){ goto $label$1 }
	$15 = *((*($14) + $15))
	
.LABEL $label$1
	$0 = CALL $220(($12 + [64]), $5)
	$5 = CALL $220(($12 + [48]), $6)
	*(($6 = (($12 + [32]) + [8]))) = *(($7 + [8]))
	*($12 + [32]) = *($7)
	$7 = CALL $220(($12 + [16]), $9)
	*(($12 + [8])) = *($6)
	*($12) = *($12 + [32])
	CALL void $14((int_32 $1), (int_64 $2), (int_64 $3), (int_64 $4), (int_64 $0), (int_32 $5), (int_32 $12), (int_32 $8), (int_64 $7), (int_32 $10), (int_64 $11), (int_64 $15))
	if ( (*($7) & [1]) ){ goto $label$6 }
	if ( (*($5) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL _ZdlPv(*($7 + [8]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*($5 + [8]))
	if ( ((*($0) & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( (*($0) & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($12 + [80])
	return 
	
.LABEL $label$2
	CALL _ZdlPv(*($0 + [8]))
	$global$0 = ($12 + [80])
}

void .FUNC $200 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $201 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($0 + [4]), $3, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $206 (int_32 $0, int_32 $1)
{
	return [0]
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $303($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [14380])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $303($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $204 (int_32 $0)
{
	return $0
}

void .FUNC $205 (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [8])
	if ( ($1 == 0) ){ goto $label$1 }
	*(($0 + [8])) = ($1 + [-1])
	return 
	
.LABEL $label$1
	CALL void $0((int_32 *(*($0) + [16])))
}

int_32 .FUNC $282 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$6 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = CALL $280($0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($0 + [8])
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$7 }
	$4 = *($0 + [4])
	$1 = (int_64)
	if ( ((int_64)$1($1 - *($0 + [120]))) <= (int_64)(CASTING int_64)(int_32 ($3 - $4))) ){ goto $label$4 }
	
.LABEL $label$7
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$4
	*($0 + [104]) = (($4 + (CASTING uint_32)(uint_64 $1)) + [-1])
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)*($0 + [120]) + (int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)$2 == (int_32)*($0)) ){ goto $label$8 }
	*($0) = $2
	
.LABEL $label$8
	return $2
}

int_32 .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [8865])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $4) >= (int_32)$6), [8865])
	$4 = ($0 + [4])
	CALL memcpy(*($4), $7, $6)
	*($4) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *(($0 + [8]))
	if ( ((int_32)*($0 + [4]) == (int_32)$3) ){ goto $label$20 }
	$3 = *(($3 + [-4]))
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$19 }
	if ( ((int_32)$4 != (int_32)[2]) ){ goto $label$8 }
	$3 = *($3 + [8])
	$4 = *($3 + [4])
	if ( ((uint_32)$4 >= (uint_32)*($3 + [8])) ){ goto $label$18 }
	*($4 + [8]) = (int_64)0
	*($4 + [8]) = *($1)
	*($4) = [4]
	*(($1 = ($3 + [4]))) = (*($1) + [16])
	goto $label$17 
	
.LABEL $label$20
	*($2 + [16]) = [4]
	*($2 + [24]) = *($1)
	CALL $103(*($0), ($2 + [16]))
	$1 = *($2 + [16])
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$15 }
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$16 }
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$14 }
	if ( (*($2 + [24]) == 0) ){ goto $label$6 }
	$3 = ($2 + [24])
	goto $label$13 
	
.LABEL $label$19
	$3 = *($0 + [16])
	if ( ($3 == 0) ){ goto $label$7 }
	*($2) = [4]
	*($2 + [8]) = *($1)
	CALL $103($3, $2)
	$1 = *($2)
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$11 }
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$12 }
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$10 }
	if ( (*($2 + [8]) == 0) ){ goto $label$3 }
	$3 = ($2 + [8])
	goto $label$9 
	
.LABEL $label$18
	CALL $158($3, $1)
	
.LABEL $label$17
	$0 = *(*(*((*(($0 + [8])) + [-4])) + [8]) + [4])
	$global$0 = ($2 + [32])
	return ($0 + [-16])
	
.LABEL $label$16
	if ( (*($2 + [24]) == 0) ){ goto $label$5 }
	$3 = ($2 + [24])
	goto $label$13 
	
.LABEL $label$15
	if ( (*($2 + [24]) == 0) ){ goto $label$4 }
	$3 = ($2 + [24])
	goto $label$13 
	
.LABEL $label$14
	$3 = ($2 + [24])
	
.LABEL $label$13
	CALL $38($3, $1)
	$0 = *($0)
	$global$0 = ($2 + [32])
	return $0
	
.LABEL $label$12
	if ( (*($2 + [8]) == 0) ){ goto $label$2 }
	$3 = ($2 + [8])
	goto $label$9 
	
.LABEL $label$11
	if ( (*($2 + [8]) == 0) ){ goto $label$1 }
	$3 = ($2 + [8])
	goto $label$9 
	
.LABEL $label$10
	$3 = ($2 + [8])
	
.LABEL $label$9
	CALL $38($3, $1)
	$0 = *(($0 + [16]))
	$global$0 = ($2 + [32])
	return $0
	
.LABEL $label$8
	CALL $248([12942], [9181], [4528], [12929])
	
.LABEL $label$7
	CALL $248([13031], [9181], [4537], [12929])
	
.LABEL $label$6
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$5
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$4
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$3
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$2
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$1
	CALL $248([9197], [9181], [13422], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [64])
	$global$0 = $2
	CALL $240(($2 + [16]), (*($1 + [8]) + [1]))
	$3 = CALL $231(($2 + [16]), [0], [13232])
	$4 = ($3 + [8])
	*((($2 + [32]) + [8])) = *($4)
	*($2 + [32]) = *($3)
	*($3) = (int_64)0
	*($4) = [0]
	$3 = CALL $227(($2 + [32]), [13242])
	$4 = ($3 + [8])
	*((($2 + [48]) + [8])) = *($4)
	*($2 + [48]) = *($3)
	*($3) = (int_64)0
	*($4) = [0]
	CALL $240($2, *($1 + [4]))
	$1 = *($2)
	$3 = ($1 & [1])
	$1 = CALL $229(($2 + [48]), ( *($2 + [8]) ? ($2 | [1]) : $3 ), ( *($2 + [4]) ? uint_32($1 >> [1]) : $3 ))
	$5 = *($1)
	*($1) = (int_64)0
	*($0) = $5
	$0 = ($1 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( (*($2) & [1]) ){ goto $label$7 }
	if ( (*($2 + [48]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL _ZdlPv(*(($2 + [8])))
	if ( ((*($2 + [48]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv(*($2 + [56]))
	$0 = [1]
	if ( ((*($2 + [32]) & [1]) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$0 = [1]
	if ( (*($2 + [32]) & [1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( (*($2 + [16]) & $0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL _ZdlPv(*($2 + [40]))
	if ( ((*($2 + [16]) & $0) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*($2 + [24]))
	$global$0 = ($2 + [64])
	return 
	
.LABEL $label$1
	$global$0 = ($2 + [64])
}

int_64 .FUNC $286 (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

void .FUNC $287 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [80])
	$global$0 = $4
	if ( ((int_32)$3 < (int_32)[16384]) ){ goto $label$4 }
	CALL __multf3(($4 + [32]), $1, $2, (int_64)0, (int_64)9222809086901354496)
	$2 = *((($4 + [32]) + [8]))
	$1 = *($4 + [32])
	if ( ((int_32)$3 < (int_32)[32767]) ){ goto $label$3 }
	CALL __multf3(($4 + [16]), $1, $2, (int_64)0, (int_64)9222809086901354496)
	$3 = ($3 + [-32766])
	$3 = ( $3 ? [16383] : ((int_32)$3 < (int_32)[16383]) )
	$2 = *((($4 + [16]) + [8]))
	$1 = *($4 + [16])
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$3 > (int_32)[-16383]) ){ goto $label$1 }
	CALL __multf3(($4 + [64]), $1, $2, (int_64)0, (int_64)32088147345014784)
	$2 = *((($4 + [64]) + [8]))
	$1 = *($4 + [64])
	if ( ((int_32)$3 > (int_32)[-32652]) ){ goto $label$2 }
	CALL __multf3(($4 + [48]), $1, $2, (int_64)0, (int_64)32088147345014784)
	$3 = ($3 + [32538])
	$3 = ( $3 ? [-16382] : ((int_32)$3 > (int_32)[-16382]) )
	$2 = *((($4 + [48]) + [8]))
	$1 = *($4 + [48])
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 + [-16383])
	goto $label$1 
	
.LABEL $label$2
	$3 = ($3 + [16269])
	
.LABEL $label$1
	CALL __multf3($4, $1, $2, (int_64)0, ((int_64)(CASTING uint_64)(uint_32 ($3 + [16383])) << (int_64)48))
	*($0 + [8]) = *(($4 + [8]))
	*($0) = *($4)
	$global$0 = ($4 + [80])
}

void .FUNC $8 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [64])
	$global$0 = $3
	*($3 + [56]) = $1
	CALL require_auth(*($0))
	*(($3 + [48])) = [0]
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	$4 = *($0)
	*($3 + [16]) = $4
	*($3 + [24]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)4982871454518345728, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $36(($3 + [16]), $5)
	CALL eosio_assert(((int_32)*($5 + [20]) == (int_32)($3 + [16])), [8731])
	$4 = *($0)
	*($3 + [8]) = $2
	CALL eosio_assert([1], [8871])
	CALL $53(($3 + [16]), $5, $4, ($3 + [8]))
	$5 = *($3 + [40])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0)
	*($3 + [12]) = $2
	*($3 + [8]) = ($3 + [56])
	CALL $54($3, ($3 + [16]), $4, ($3 + [8]))
	$5 = *($3 + [40])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($3 + [44])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*(($2 + [16])))
	
.LABEL $label$8
	CALL _ZdlPv($2)
	
.LABEL $label$7
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($3 + [40]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $5
	
.LABEL $label$4
	*($6) = $5
	CALL _ZdlPv($0)
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$1
	$global$0 = ($3 + [64])
}

int_32 .FUNC $9 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $303($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [88])) = [0]
	*($4 + [72]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [64]) = ($2 + $7)
	*($4 + [56]) = $2
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [8805])
	CALL memcpy(($4 + [72]), $2, [8])
	*($4 + [60]) = ($2 + [8])
	$8 = (($4 + [72]) + [8])
	CALL $52(($4 + [56]), $8)
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	$3 = *($3)
	*((($4 + [96]) + [8])) = $3
	*(($9 = (($4 + [112]) + [8]))) = $3
	$10 = *($4 + [8])
	*($4 + [112]) = $10
	*($4 + [96]) = $10
	$3 = *($9)
	*((($4 + [128]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [112])
	*($4 + [40]) = $0
	*($4 + [128]) = $0
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [72])
	$8 = CALL $220(($4 + [112]), $8)
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$5 = CALL $220(($4 + [128]), $8)
	CALL void $3((int_32 $0), (int_64 $5), (int_32 $6))
	if ( (*($4 + [128]) & [1]) ){ goto $label$11 }
	if ( (*($4 + [112]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL _ZdlPv(*($5 + [8]))
	if ( ((*($4 + [112]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL _ZdlPv(*($8 + [8]))
	if ( ($7 <= [513]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$7 }
	
.LABEL $label$8
	$2 = [1]
	if ( (*($4 + [80]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $306($2)
	$2 = [1]
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv(*(($4 + [88])))
	$global$0 = ($4 + [144])
	return $2
	
.LABEL $label$5
	$global$0 = ($4 + [144])
	return $2
}

int_32 .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *(($0 + [8]))
	$4 = *($0 + [4])
	*($2 + [27]) = [2]
	*($2 + [28]) = int_32(($3 - $4) >> [2])
	$3 = *(($0 + [64]))
	if ( ($3 == 0) ){ goto $label$1 }
	$5 = CALL int_32 $3((int_32 ($2 + [28])), (int_32 ($2 + [27])), (int_32 ($0 + [80])), (int_32 *(*($3) + [24])))
	$4 = ($0 + [16])
	$7 = *(($0 + [24]))
	$6 = ($0 + [20])
	$3 = *($6)
	if ( ((int_32)$3 != (int_32)($7 << [5])) ){ goto $label$5 }
	if ( ((int_32)($3 + [1]) <= (int_32)[-1]) ){ goto $label$4 }
	$8 = [2147483647]
	if ( ((uint_32)$3 > (uint_32)[1073741822]) ){ goto $label$6 }
	$7 = ($7 << [6])
	$3 = (($3 + [32]) & [-32])
	$8 = ( $3 ? $7 : ($7 <= $3) )
	
.LABEL $label$6
	CALL $114($4, $8)
	$3 = *(($0 + [20]))
	
.LABEL $label$5
	*($6) = ($3 + [1])
	$4 = (*($4) + (uint_32($3 >> [3]) & [536870908]))
	$3 = ([1] << ($3 & [31]))
	if ( ($5 == 0) ){ goto $label$8 }
	$3 = (*($4) | $3)
	goto $label$7 
	
.LABEL $label$8
	$3 = (*($4) & ((int_32)$3 ^ (int_32)[-1]))
	
.LABEL $label$7
	*($4) = $3
	*($2 + [15]) = [2]
	CALL $139(($2 + [16]), $0, ($2 + [15]), [1])
	$3 = ($0 + [8])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)*(($0 + [12]))) ){ goto $label$9 }
	*($4) = *($2 + [20])
	$0 = (*($3) + [4])
	*($3) = $0
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$9
	CALL $140(($0 + [4]), (($2 + [16]) | [4]))
	$0 = *($3)
	if ( ((int_32)$1 != (int_32)[-1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $245($4)
	
.LABEL $label$3
	$0 = *(($0 + [-4]))
	if ( ($0 == 0) ){ goto $label$2 }
	$3 = [1]
	$0 = *($0)
	if ( ((uint_32)$0 > (uint_32)[2]) ){ goto $label$10 }
	$3 = *((($0 << [2]) + [14368]))
	
.LABEL $label$10
	if ( ($3 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($2 + [32])
	return [1]
	
.LABEL $label$1
	CALL abort()
	(unreachable)
	return (unreachable)
}

void .FUNC $122 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [64])
	$global$0 = $4
	$5 = *(($1 + [20]))
	if ( ($5 == 0) ){ goto $label$15 }
	$5 = ($5 + [-1])
	if ( ((*((*($1 + [16]) + (uint_32($5 >> [3]) & [536870908]))) & ([1] << ($5 & [31]))) == 0) ){ goto $label$32 }
	*($4 + [40]) = [5]
	*($4 + [48]) = *($2)
	if ( ($3 == 0) ){ goto $label$31 }
	$2 = ($1 + [8])
	goto $label$30 
	
.LABEL $label$32
	*($0 + [4]) = [0]
	*($0) = [0]
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$31
	$2 = ($1 + [8])
	$5 = *($2)
	$3 = *($1 + [4])
	*($4 + [59]) = [5]
	*($4 + [60]) = int_32(($5 - $3) >> [2])
	$5 = *(($1 + [64]))
	if ( ($5 == 0) ){ goto $label$14 }
	if ( (CALL int_32 $5((int_32 ($4 + [60])), (int_32 ($4 + [59])), (int_32 ($4 + [40])), (int_32 *(*($5) + [24]))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$5 = *(($1 + [8]))
	if ( ((int_32)*($1 + [4]) == (int_32)$5) ){ goto $label$33 }
	$5 = *(($5 + [-4]))
	if ( ($5 == 0) ){ goto $label$28 }
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$27 }
	if ( ((int_32)$3 != (int_32)[2]) ){ goto $label$13 }
	$1 = *($5 + [8])
	$5 = *($1 + [4])
	if ( ((uint_32)$5 >= (uint_32)*($1 + [8])) ){ goto $label$26 }
	CALL $144($5, ($4 + [40]))
	*(($1 = ($1 + [4]))) = (*($1) + [16])
	goto $label$25 
	
.LABEL $label$33
	$5 = CALL $144(($4 + [24]), ($4 + [40]))
	CALL $103(*($1), $5)
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$23 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$24 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$22 }
	if ( (*($5 + [8]) == 0) ){ goto $label$10 }
	$5 = ($5 + [8])
	goto $label$21 
	
.LABEL $label$29
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$28
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$27
	$2 = ($1 + [32])
	$5 = *($2)
	if ( ($5 == 0) ){ goto $label$12 }
	$5 = ($5 + [-1])
	$3 = *((*($1 + [28]) + (uint_32($5 >> [3]) & [536870908])))
	*($2) = $5
	if ( (($3 & ([1] << ($5 & [31]))) == 0) ){ goto $label$20 }
	if ( (*($1 + [40]) == 0) ){ goto $label$11 }
	$5 = CALL $144(($4 + [8]), ($4 + [40]))
	CALL $103(*(($1 + [40])), $5)
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$18 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$19 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$17 }
	if ( (*($5 + [8]) == 0) ){ goto $label$7 }
	$5 = ($5 + [8])
	goto $label$16 
	
.LABEL $label$26
	CALL $145($1, ($4 + [40]))
	
.LABEL $label$25
	*($0) = [1]
	*($0 + [4]) = (*(*(*((*($2) + [-4])) + [8]) + [4]) + [-16])
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$24
	if ( (*($5 + [8]) == 0) ){ goto $label$9 }
	$5 = ($5 + [8])
	goto $label$21 
	
.LABEL $label$23
	if ( (*($5 + [8]) == 0) ){ goto $label$8 }
	$5 = ($5 + [8])
	goto $label$21 
	
.LABEL $label$22
	$5 = ($5 + [8])
	
.LABEL $label$21
	CALL $38($5, $2)
	*($0) = [1]
	*($0 + [4]) = *($1)
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$20
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$19
	if ( (*($5 + [8]) == 0) ){ goto $label$6 }
	$5 = ($5 + [8])
	goto $label$16 
	
.LABEL $label$18
	if ( (*($5 + [8]) == 0) ){ goto $label$5 }
	$5 = ($5 + [8])
	goto $label$16 
	
.LABEL $label$17
	$5 = ($5 + [8])
	
.LABEL $label$16
	CALL $38($5, $2)
	*($0) = [1]
	*($0 + [4]) = *(($1 + [40]))
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	CALL $248([12906], [9181], [4788], [12929])
	
.LABEL $label$14
	CALL abort()
	
.LABEL $label$13
	CALL $248([12942], [9181], [4823], [12929])
	
.LABEL $label$12
	CALL $248([13004], [9181], [4833], [12929])
	
.LABEL $label$11
	CALL $248([13031], [9181], [4842], [12929])
	
.LABEL $label$10
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$9
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$8
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$7
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$6
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$5
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$4
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$37 }
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$36 }
	if ( (*($4 + [48]) == 0) ){ goto $label$35 }
	$0 = ($4 + [48])
	goto $label$2 
	
.LABEL $label$37
	if ( (*($4 + [48]) == 0) ){ goto $label$34 }
	$0 = ($4 + [48])
	goto $label$2 
	
.LABEL $label$36
	$0 = ($4 + [48])
	goto $label$2 
	
.LABEL $label$35
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$34
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$3
	if ( (*($4 + [48]) == 0) ){ goto $label$1 }
	$0 = ($4 + [48])
	
.LABEL $label$2
	CALL $38($0, $1)
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $248([9197], [9181], [13422], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $121 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [64])
	$global$0 = $4
	$5 = *(($1 + [20]))
	if ( ($5 == 0) ){ goto $label$15 }
	$5 = ($5 + [-1])
	if ( ((*((*($1 + [16]) + (uint_32($5 >> [3]) & [536870908]))) & ([1] << ($5 & [31]))) == 0) ){ goto $label$32 }
	*($4 + [40]) = [7]
	*($4 + [48]) = *($2)
	if ( ($3 == 0) ){ goto $label$31 }
	$2 = ($1 + [8])
	goto $label$30 
	
.LABEL $label$32
	*($0 + [4]) = [0]
	*($0) = [0]
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$31
	$2 = ($1 + [8])
	$5 = *($2)
	$3 = *($1 + [4])
	*($4 + [59]) = [5]
	*($4 + [60]) = int_32(($5 - $3) >> [2])
	$5 = *(($1 + [64]))
	if ( ($5 == 0) ){ goto $label$14 }
	if ( (CALL int_32 $5((int_32 ($4 + [60])), (int_32 ($4 + [59])), (int_32 ($4 + [40])), (int_32 *(*($5) + [24]))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$5 = *(($1 + [8]))
	if ( ((int_32)*($1 + [4]) == (int_32)$5) ){ goto $label$33 }
	$5 = *(($5 + [-4]))
	if ( ($5 == 0) ){ goto $label$28 }
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$27 }
	if ( ((int_32)$3 != (int_32)[2]) ){ goto $label$13 }
	$1 = *($5 + [8])
	$5 = *($1 + [4])
	if ( ((uint_32)$5 >= (uint_32)*($1 + [8])) ){ goto $label$26 }
	CALL $144($5, ($4 + [40]))
	*(($1 = ($1 + [4]))) = (*($1) + [16])
	goto $label$25 
	
.LABEL $label$33
	$5 = CALL $144(($4 + [24]), ($4 + [40]))
	CALL $103(*($1), $5)
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$23 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$24 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$22 }
	if ( (*($5 + [8]) == 0) ){ goto $label$10 }
	$5 = ($5 + [8])
	goto $label$21 
	
.LABEL $label$29
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$28
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$27
	$2 = ($1 + [32])
	$5 = *($2)
	if ( ($5 == 0) ){ goto $label$12 }
	$5 = ($5 + [-1])
	$3 = *((*($1 + [28]) + (uint_32($5 >> [3]) & [536870908])))
	*($2) = $5
	if ( (($3 & ([1] << ($5 & [31]))) == 0) ){ goto $label$20 }
	if ( (*($1 + [40]) == 0) ){ goto $label$11 }
	$5 = CALL $144(($4 + [8]), ($4 + [40]))
	CALL $103(*(($1 + [40])), $5)
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$18 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$19 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$17 }
	if ( (*($5 + [8]) == 0) ){ goto $label$7 }
	$5 = ($5 + [8])
	goto $label$16 
	
.LABEL $label$26
	CALL $145($1, ($4 + [40]))
	
.LABEL $label$25
	*($0) = [1]
	*($0 + [4]) = (*(*(*((*($2) + [-4])) + [8]) + [4]) + [-16])
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$24
	if ( (*($5 + [8]) == 0) ){ goto $label$9 }
	$5 = ($5 + [8])
	goto $label$21 
	
.LABEL $label$23
	if ( (*($5 + [8]) == 0) ){ goto $label$8 }
	$5 = ($5 + [8])
	goto $label$21 
	
.LABEL $label$22
	$5 = ($5 + [8])
	
.LABEL $label$21
	CALL $38($5, $2)
	*($0) = [1]
	*($0 + [4]) = *($1)
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$20
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$19
	if ( (*($5 + [8]) == 0) ){ goto $label$6 }
	$5 = ($5 + [8])
	goto $label$16 
	
.LABEL $label$18
	if ( (*($5 + [8]) == 0) ){ goto $label$5 }
	$5 = ($5 + [8])
	goto $label$16 
	
.LABEL $label$17
	$5 = ($5 + [8])
	
.LABEL $label$16
	CALL $38($5, $2)
	*($0) = [1]
	*($0 + [4]) = *(($1 + [40]))
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	CALL $248([12906], [9181], [4788], [12929])
	
.LABEL $label$14
	CALL abort()
	
.LABEL $label$13
	CALL $248([12942], [9181], [4823], [12929])
	
.LABEL $label$12
	CALL $248([13004], [9181], [4833], [12929])
	
.LABEL $label$11
	CALL $248([13031], [9181], [4842], [12929])
	
.LABEL $label$10
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$9
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$8
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$7
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$6
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$5
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$4
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$37 }
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$36 }
	if ( (*($4 + [48]) == 0) ){ goto $label$35 }
	$0 = ($4 + [48])
	goto $label$2 
	
.LABEL $label$37
	if ( (*($4 + [48]) == 0) ){ goto $label$34 }
	$0 = ($4 + [48])
	goto $label$2 
	
.LABEL $label$36
	$0 = ($4 + [48])
	goto $label$2 
	
.LABEL $label$35
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$34
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$3
	if ( (*($4 + [48]) == 0) ){ goto $label$1 }
	$0 = ($4 + [48])
	
.LABEL $label$2
	CALL $38($0, $1)
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $248([9197], [9181], [13422], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $120 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [64])
	$global$0 = $4
	$5 = *(($1 + [20]))
	if ( ($5 == 0) ){ goto $label$15 }
	$5 = ($5 + [-1])
	if ( ((*((*($1 + [16]) + (uint_32($5 >> [3]) & [536870908]))) & ([1] << ($5 & [31]))) == 0) ){ goto $label$32 }
	*($4 + [40]) = [6]
	*($4 + [48]) = *($2)
	if ( ($3 == 0) ){ goto $label$31 }
	$2 = ($1 + [8])
	goto $label$30 
	
.LABEL $label$32
	*($0 + [4]) = [0]
	*($0) = [0]
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$31
	$2 = ($1 + [8])
	$5 = *($2)
	$3 = *($1 + [4])
	*($4 + [59]) = [5]
	*($4 + [60]) = int_32(($5 - $3) >> [2])
	$5 = *(($1 + [64]))
	if ( ($5 == 0) ){ goto $label$14 }
	if ( (CALL int_32 $5((int_32 ($4 + [60])), (int_32 ($4 + [59])), (int_32 ($4 + [40])), (int_32 *(*($5) + [24]))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$5 = *(($1 + [8]))
	if ( ((int_32)*($1 + [4]) == (int_32)$5) ){ goto $label$33 }
	$5 = *(($5 + [-4]))
	if ( ($5 == 0) ){ goto $label$28 }
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$27 }
	if ( ((int_32)$3 != (int_32)[2]) ){ goto $label$13 }
	$1 = *($5 + [8])
	$5 = *($1 + [4])
	if ( ((uint_32)$5 >= (uint_32)*($1 + [8])) ){ goto $label$26 }
	CALL $144($5, ($4 + [40]))
	*(($1 = ($1 + [4]))) = (*($1) + [16])
	goto $label$25 
	
.LABEL $label$33
	$5 = CALL $144(($4 + [24]), ($4 + [40]))
	CALL $103(*($1), $5)
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$23 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$24 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$22 }
	if ( (*($5 + [8]) == 0) ){ goto $label$10 }
	$5 = ($5 + [8])
	goto $label$21 
	
.LABEL $label$29
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$28
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$27
	$2 = ($1 + [32])
	$5 = *($2)
	if ( ($5 == 0) ){ goto $label$12 }
	$5 = ($5 + [-1])
	$3 = *((*($1 + [28]) + (uint_32($5 >> [3]) & [536870908])))
	*($2) = $5
	if ( (($3 & ([1] << ($5 & [31]))) == 0) ){ goto $label$20 }
	if ( (*($1 + [40]) == 0) ){ goto $label$11 }
	$5 = CALL $144(($4 + [8]), ($4 + [40]))
	CALL $103(*(($1 + [40])), $5)
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$18 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$19 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$17 }
	if ( (*($5 + [8]) == 0) ){ goto $label$7 }
	$5 = ($5 + [8])
	goto $label$16 
	
.LABEL $label$26
	CALL $145($1, ($4 + [40]))
	
.LABEL $label$25
	*($0) = [1]
	*($0 + [4]) = (*(*(*((*($2) + [-4])) + [8]) + [4]) + [-16])
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$24
	if ( (*($5 + [8]) == 0) ){ goto $label$9 }
	$5 = ($5 + [8])
	goto $label$21 
	
.LABEL $label$23
	if ( (*($5 + [8]) == 0) ){ goto $label$8 }
	$5 = ($5 + [8])
	goto $label$21 
	
.LABEL $label$22
	$5 = ($5 + [8])
	
.LABEL $label$21
	CALL $38($5, $2)
	*($0) = [1]
	*($0 + [4]) = *($1)
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$20
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$19
	if ( (*($5 + [8]) == 0) ){ goto $label$6 }
	$5 = ($5 + [8])
	goto $label$16 
	
.LABEL $label$18
	if ( (*($5 + [8]) == 0) ){ goto $label$5 }
	$5 = ($5 + [8])
	goto $label$16 
	
.LABEL $label$17
	$5 = ($5 + [8])
	
.LABEL $label$16
	CALL $38($5, $2)
	*($0) = [1]
	*($0 + [4]) = *(($1 + [40]))
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	CALL $248([12906], [9181], [4788], [12929])
	
.LABEL $label$14
	CALL abort()
	
.LABEL $label$13
	CALL $248([12942], [9181], [4823], [12929])
	
.LABEL $label$12
	CALL $248([13004], [9181], [4833], [12929])
	
.LABEL $label$11
	CALL $248([13031], [9181], [4842], [12929])
	
.LABEL $label$10
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$9
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$8
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$7
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$6
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$5
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$4
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$37 }
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$36 }
	if ( (*($4 + [48]) == 0) ){ goto $label$35 }
	$0 = ($4 + [48])
	goto $label$2 
	
.LABEL $label$37
	if ( (*($4 + [48]) == 0) ){ goto $label$34 }
	$0 = ($4 + [48])
	goto $label$2 
	
.LABEL $label$36
	$0 = ($4 + [48])
	goto $label$2 
	
.LABEL $label$35
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$34
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$3
	if ( (*($4 + [48]) == 0) ){ goto $label$1 }
	$0 = ($4 + [48])
	
.LABEL $label$2
	CALL $38($0, $1)
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $248([9197], [9181], [13422], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $2 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$4 }
	CALL eosio_assert([0], [8381])
	$3 = [12]
	goto $label$3 
	
.LABEL $label$4
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$5:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$7 }
	$7 = [0]
	goto $label$6 
	
.LABEL $label$7
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$8 }
	$7 = ($7 + [-48])
	goto $label$6 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$7 = ($7 + [-91])
	goto $label$6 
	
.LABEL $label$9
	$7 = [0]
	CALL eosio_assert([0], [8509])
	$4 = *($0)
	
.LABEL $label$6
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$1
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$10 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [8438])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [8509])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$10
	return $0
}

void .FUNC $126 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$4 = CALL $297([13119])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3) = ($4 << [1])
	$5 = ($3 | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3) = ($6 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $4
	
.LABEL $label$3
	CALL memcpy($5, [13119], $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $127(($3 + [16]), $3, $1)
	$4 = *($2)
	$5 = ($4 & [1])
	$4 = CALL $229(($3 + [16]), ( *($2 + [8]) ? ($2 + [1]) : $5 ), ( *($2 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$2 = ($4 + [8])
	*((($3 + [32]) + [8])) = *($2)
	*($3 + [32]) = *($4)
	*($4) = (int_64)0
	*($2) = [0]
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$5
	if ( ((*($3) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$6
	*($0) = [13184]
	*($0 + [4]) = $1
	CALL $215(($0 + [8]), ( *($3 + [40]) ? (($3 + [32]) | [1]) : (*($3 + [32]) & [1]) ))
	*($0) = [13164]
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*((($3 + [32]) + [8])))
	
.LABEL $label$7
	$global$0 = ($3 + [48])
	return (unreachable)
	
.LABEL $label$1
	CALL $219($3)
}

int_32 .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	*($2 + [24]) = [3]
	*($2 + [32]) = (int_64)0
	$3 = CALL _Znwj([12])
	CALL $220($3, $1)
	if ( ($3 == 0) ){ goto $label$9 }
	*($2 + [32]) = $3
	$3 = *(($0 + [8]))
	$4 = *($0 + [4])
	*($2 + [43]) = [4]
	*($2 + [44]) = int_32(($3 - $4) >> [2])
	$3 = *(($0 + [64]))
	if ( ($3 == 0) ){ goto $label$8 }
	$5 = CALL int_32 $3((int_32 ($2 + [44])), (int_32 ($2 + [43])), (int_32 ($2 + [24])), (int_32 *(*($3) + [24])))
	$4 = ($0 + [28])
	$7 = *(($0 + [36]))
	$6 = ($0 + [32])
	$3 = *($6)
	if ( ((int_32)$3 != (int_32)($7 << [5])) ){ goto $label$10 }
	if ( ((int_32)($3 + [1]) <= (int_32)[-1]) ){ goto $label$7 }
	$8 = [2147483647]
	if ( ((uint_32)$3 > (uint_32)[1073741822]) ){ goto $label$11 }
	$7 = ($7 << [6])
	$3 = (($3 + [32]) & [-32])
	$8 = ( $3 ? $7 : ($7 <= $3) )
	
.LABEL $label$11
	CALL $114($4, $8)
	$3 = *(($0 + [32]))
	
.LABEL $label$10
	*($6) = ($3 + [1])
	$4 = (*($4) + (uint_32($3 >> [3]) & [536870908]))
	$3 = ([1] << ($3 & [31]))
	if ( ($5 == 0) ){ goto $label$18 }
	*($4) = (*($4) | $3)
	$4 = ($0 + [8])
	if ( (*((*($4) + [-4])) == 0) ){ goto $label$17 }
	$3 = CALL $141(($2 + [8]), ($0 + [80]))
	$5 = *(*((*($4) + [-4])) + [8])
	$6 = CALL $94($5, ($2 + [44]), $1)
	$4 = *($6)
	if ( $4 ){ goto $label$19 }
	$4 = CALL _Znwj([48])
	CALL $220(($4 + [16]), $1)
	*($4 + [40]) = [0]
	*($4) = (int_64)0
	*($4 + [8]) = *($2 + [44])
	*($6) = $4
	*($4 + [32]) = [0]
	$1 = $4
	$7 = *(*($5))
	if ( ($7 == 0) ){ goto $label$20 }
	*($5) = $7
	$1 = *($6)
	
.LABEL $label$20
	CALL $95(*($5 + [4]), $1)
	*($5 + [8]) = (*($5 + [8]) + [1])
	
.LABEL $label$19
	*($0 + [40]) = CALL $103(($4 + [32]), $3)
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)[1]) ){ goto $label$15 }
	if ( ((int_32)$0 == (int_32)[2]) ){ goto $label$16 }
	if ( ((int_32)$0 != (int_32)[3]) ){ goto $label$14 }
	if ( (*($3 + [8]) == 0) ){ goto $label$5 }
	$3 = ($3 + [8])
	goto $label$13 
	
.LABEL $label$18
	*($4) = (*($4) & ((int_32)$3 ^ (int_32)[-1]))
	
.LABEL $label$17
	$0 = *($2 + [24])
	if ( ((int_32)$0 == (int_32)[3]) ){ goto $label$12 }
	goto $label$2 
	
.LABEL $label$16
	if ( (*($3 + [8]) == 0) ){ goto $label$4 }
	$3 = ($3 + [8])
	goto $label$13 
	
.LABEL $label$15
	if ( (*($3 + [8]) == 0) ){ goto $label$3 }
	$3 = ($3 + [8])
	goto $label$13 
	
.LABEL $label$14
	$3 = ($3 + [8])
	
.LABEL $label$13
	CALL $38($3, $0)
	$0 = *($2 + [24])
	if ( ((int_32)$0 != (int_32)[3]) ){ goto $label$2 }
	
.LABEL $label$12
	if ( (*(($2 + [32])) == 0) ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$9
	CALL $248([9163], [9181], [13215], [9190])
	
.LABEL $label$8
	CALL abort()
	
.LABEL $label$7
	CALL $245($4)
	
.LABEL $label$6
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$5
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$4
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$3
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$2
	if ( ((int_32)$0 == (int_32)[2]) ){ goto $label$21 }
	if ( ((int_32)$0 != (int_32)[1]) ){ goto $label$1 }
	if ( *(($2 + [32])) ){ goto $label$1 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$21
	if ( *(($2 + [32])) ){ goto $label$1 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$1
	CALL $38((($2 + [24]) + [8]), $0)
	$global$0 = ($2 + [48])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return [1]
}

int_32 .FUNC $124 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	$2 = [1]
	$3 = ($0 + [8])
	$4 = *($3)
	$5 = *(($4 + [-4]))
	if ( ($5 == 0) ){ goto $label$5 }
	$6 = *(($0 + [4]))
	*($1 + [27]) = [3]
	*($1 + [28]) = (int_32(($4 - $6) >> [2]) + [-1])
	$4 = *(($0 + [64]))
	if ( ($4 == 0) ){ goto $label$4 }
	if ( CALL int_32 $4((int_32 ($1 + [28])), (int_32 ($1 + [27])), (int_32 $5), (int_32 *(*($4) + [24]))) ){ goto $label$5 }
	$2 = CALL $141(($1 + [8]), ($0 + [80]))
	CALL $103(*((*(($0 + [8])) + [-4])), $2)
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$8 }
	if ( ((int_32)$4 == (int_32)[2]) ){ goto $label$9 }
	if ( ((int_32)$4 != (int_32)[3]) ){ goto $label$7 }
	if ( (*($2 + [8]) == 0) ){ goto $label$3 }
	$2 = ($2 + [8])
	goto $label$6 
	
.LABEL $label$9
	if ( (*($2 + [8]) == 0) ){ goto $label$2 }
	$2 = ($2 + [8])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($2 + [8]) == 0) ){ goto $label$1 }
	$2 = ($2 + [8])
	goto $label$6 
	
.LABEL $label$7
	$2 = ($2 + [8])
	
.LABEL $label$6
	CALL $38($2, $4)
	$2 = [0]
	
.LABEL $label$5
	$3 = *($3)
	$4 = *(($0 + [4]))
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$11 }
	$5 = ($0 + [20])
	$6 = *($5)
	if ( ($6 == 0) ){ goto $label$10 }
	*($5) = ($6 + [-1])
	$0 = ($3 + [-4])
	*(($0 + [8])) = $0
	if ( ($2 | ((int_32)$4 == (int_32)$0)) ){ goto $label$12 }
	$0 = *(($3 + [-8]))
	if ( ((int_32)*($0) != (int_32)[2]) ){ goto $label$12 }
	$3 = *($0 + [8])
	$2 = *($3 + [4])
	$4 = ($2 + [-16])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)[1]) ){ goto $label$15 }
	if ( ((int_32)$0 == (int_32)[2]) ){ goto $label$16 }
	if ( ((int_32)$0 != (int_32)[3]) ){ goto $label$14 }
	$2 = ($2 + [-8])
	if ( *($2) ){ goto $label$13 }
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$16
	$2 = ($2 + [-8])
	if ( *($2) ){ goto $label$13 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$15
	$2 = ($2 + [-8])
	if ( *($2) ){ goto $label$13 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$14
	$2 = ($2 + [-8])
	
.LABEL $label$13
	CALL $38($2, $0)
	*(($3 + [4])) = $4
	
.LABEL $label$12
	$global$0 = ($1 + [32])
	return [1]
	
.LABEL $label$11
	CALL $248([13046], [9181], [4719], [13109])
	
.LABEL $label$10
	CALL $248([12906], [9181], [4720], [13109])
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$2
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$1
	CALL $248([9197], [9181], [13422], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $14 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [240])
	$global$0 = $3
	*(($4 = $3) + [184]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $303($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = (int_64)0
	*(($4 + [136])) = (int_64)0
	*(($4 + [160])) = [0]
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [128]) = (int_64)0
	*($4 + [144]) = (int_64)0
	*($4 + [152]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	*($4 + [224]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $55(($4 + [24]), ($4 + [224]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	$3 = *($3)
	*((($4 + [192]) + [8])) = $3
	*(($6 = (($4 + [208]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [208]) = $7
	*($4 + [192]) = $7
	$3 = *($6)
	*((($4 + [224]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [208])
	*($4 + [40]) = $0
	*($4 + [224]) = $0
	*($4 + [228]) = ($4 + [184])
	*($4 + [224]) = ($4 + [24])
	CALL $56(($4 + [224]), ($4 + [72]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$10 }
	$2 = [1]
	if ( (*($4 + [152]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $306($2)
	$2 = [1]
	if ( ((*($4 + [152]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL _ZdlPv(*(($4 + [160])))
	if ( ((*($4 + [116]) & $2) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( (*($4 + [116]) & $2) ){ goto $label$6 }
	
.LABEL $label$7
	$2 = [1]
	if ( (*($4 + [104]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL _ZdlPv(*(($4 + [124])))
	$2 = [1]
	if ( ((*($4 + [104]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [112])))
	$global$0 = ($4 + [240])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [240])
	return $2
}

void .FUNC $15 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [48])
	$global$0 = $1
	CALL require_auth(*($0))
	*(($1 + [32])) = [0]
	*($1 + [16]) = (int_64)-1
	*($1 + [36]) = [0]
	$2 = *($0)
	*($1) = $2
	*($1 + [8]) = $2
	*($1 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($2, $2, (int_64)-6031097404874960384, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $44($1, $0)
	
.LOOP $label$2:
	CALL eosio_assert([1], [13633])
	CALL eosio_assert([1], [13667])
	$0 = [0]
	$4 = CALL db_next_i64(*($3 + [44]), ($1 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $44($1, $4)
	
.LABEL $label$3
	CALL $79($1, $3)
	$3 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	$4 = *($1 + [24])
	if ( ($4 == 0) ){ goto $label$4 }
	$5 = ($1 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL _ZdlPv($3)
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($1 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $4
	
.LABEL $label$5
	*($5) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$4
	$global$0 = ($1 + [48])
}

void .FUNC $16 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [256])
	$global$0 = $5
	*($5 + [208]) = $1
	*($5 + [216]) = $2
	*($5 + [200]) = $3
	*($5 + [192]) = $4
	CALL require_auth(*($0))
	$6 = [0]
	*((($5 + [152]) + [32])) = [0]
	*($5 + [168]) = (int_64)-1
	*($5 + [176]) = (int_64)0
	*($5 + [188]) = [0]
	$4 = *($0 + [8])
	*($5 + [152]) = $4
	*($5 + [160]) = $4
	$7 = CALL db_find_i64($4, $4, (int_64)-6031097404874960384, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$13 }
	$6 = CALL $44(($5 + [152]), $7)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($5 + [152])), [8731])
	$4 = *($0)
	*($5 + [28]) = ($5 + [216])
	*($5 + [24]) = ($5 + [208])
	*($5 + [32]) = ($5 + [200])
	*($5 + [36]) = ($5 + [192])
	CALL eosio_assert([1], [8871])
	CALL $45(($5 + [152]), $6, $4, ($5 + [24]))
	if ( ((int_64)*($5 + [192]) != (int_64)3) ){ goto $label$4 }
	*(($5 + [144])) = [0]
	*($5 + [128]) = (int_64)-1
	*($5 + [136]) = (int_64)0
	$4 = *($0)
	*($5 + [112]) = $4
	*($5 + [120]) = $4
	$6 = CALL db_find_i64($4, $4, (int_64)-7696768201719283712, *($5 + [208]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $29(($5 + [112]), $6)
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)($5 + [112])), [8731])
	$4 = *($0)
	*(($5 + [16])) = [0]
	*($5 + [8]) = (int_64)0
	$6 = CALL $297([13618])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	$8 = ($7 + [24])
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$12 }
	*($5 + [8]) = ($6 << [1])
	$7 = (($5 + [8]) | [1])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	*((($5 + [24]) + [32])) = [0]
	*($5 + [40]) = (int_64)-1
	*($5 + [48]) = (int_64)0
	*($5 + [60]) = [0]
	$4 = *($0)
	*($5 + [24]) = $4
	*($5 + [32]) = $4
	$7 = CALL db_find_i64($4, $4, (int_64)-6031097554559041536, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$14 }
	$6 = CALL $46(($5 + [24]), $7)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($5 + [24])), [8731])
	
.LABEL $label$14
	$7 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($7, [13596])
	CALL eosio_assert($7, [13633])
	CALL eosio_assert($7, [13667])
	$7 = CALL db_next_i64(*($6 + [44]), ($5 + [112]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$15 }
	CALL $46(($5 + [24]), $7)
	
.LABEL $label$15
	CALL $47(($5 + [24]), $6)
	$4 = *($0)
	*($5 + [116]) = ($5 + [216])
	*($5 + [112]) = ($5 + [208])
	*($5 + [120]) = ($5 + [200])
	*($5 + [124]) = ($5 + [192])
	CALL $48(($5 + [72]), ($5 + [152]), $4, ($5 + [112]))
	$7 = *($5 + [48])
	if ( ($7 == 0) ){ goto $label$4 }
	$8 = ($5 + [52])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$9 }
	
.LOOP $label$16:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$17 }
	CALL _ZdlPv($6)
	
.LABEL $label$17
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$16 }
	$0 = *(($5 + [48]))
	goto $label$8 
	
.LABEL $label$12
	$9 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($9)
	*($5 + [8]) = ($9 | [1])
	*($5 + [16]) = $7
	*($5 + [12]) = $6
	
.LABEL $label$11
	CALL memcpy($7, [13618], $6)
	
.LABEL $label$10
	*(($7 + $6)) = [0]
	*((($5 + [24]) + [24])) = *(($8 + [8]))
	$1 = *($8)
	$6 = (($5 + [8]) + [8])
	*(($5 + [64])) = *($6)
	*($6) = [0]
	*($5 + [32]) = (int_64)-3772708262529050720
	*($5 + [72]) = (int_64)6138663591592764928
	*($5 + [80]) = (int_64)-3617168760277827584
	*($5 + [24]) = *($0)
	*($5 + [40]) = $1
	*($5 + [56]) = *($5 + [8])
	*($5 + [8]) = (int_64)0
	*(($0 = CALL _Znwj([16]))) = $4
	*($0 + [8]) = (int_64)3617214756542218240
	*((($5 + [72]) + [36])) = [0]
	$6 = ($0 + [16])
	*((($5 + [72]) + [24])) = $6
	*(($5 + [92])) = $6
	*($5 + [88]) = $0
	*($5 + [100 align=4]) = (int_64)0
	$0 = *($5 + [56])
	$6 = ( *((($5 + [24]) + [36])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	$0 = ($6 + [32])
	$4 = (CASTING uint_64)(uint_32 $6)
	$6 = ($5 + [100])
	
.LOOP $label$18:
	$0 = ($0 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$18 }
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $49($6, $0)
	$6 = *(($5 + [104]))
	$0 = *(($5 + [100]))
	goto $label$6 
	
.LABEL $label$9
	$0 = $7
	
.LABEL $label$8
	*($8) = $7
	CALL _ZdlPv($0)
	$7 = *($5 + [176])
	if ( $7 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$7
	$6 = [0]
	$0 = [0]
	
.LABEL $label$6
	*($5 + [244]) = $0
	*($5 + [240]) = $0
	*($5 + [248]) = $6
	*($5 + [224]) = ($5 + [240])
	*($5 + [232]) = ($5 + [24])
	CALL $50(($5 + [232]), ($5 + [224]))
	CALL $51(($5 + [240]), ($5 + [72]))
	$0 = *($5 + [240])
	CALL send_inline($0, (*($5 + [244]) - $0))
	$0 = *($5 + [240])
	if ( ($0 == 0) ){ goto $label$19 }
	*($5 + [244]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$19
	$0 = *($5 + [100])
	if ( ($0 == 0) ){ goto $label$20 }
	*(($5 + [104])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$20
	$0 = *($5 + [88])
	if ( ($0 == 0) ){ goto $label$21 }
	*(($5 + [92])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$21
	if ( ((*(($5 + [56])) & [1]) == 0) ){ goto $label$22 }
	CALL _ZdlPv(*(($5 + [64])))
	
.LABEL $label$22
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($5 + [16])))
	
.LABEL $label$5
	$7 = *($5 + [136])
	if ( ($7 == 0) ){ goto $label$4 }
	$8 = ($5 + [140])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$24 }
	
.LOOP $label$25:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$26 }
	CALL _ZdlPv($6)
	
.LABEL $label$26
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$25 }
	$0 = *(($5 + [136]))
	goto $label$23 
	
.LABEL $label$24
	$0 = $7
	
.LABEL $label$23
	*($8) = $7
	CALL _ZdlPv($0)
	
.LABEL $label$4
	$7 = *($5 + [176])
	if ( ($7 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = ($5 + [180])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$28 }
	
.LOOP $label$29:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$30 }
	CALL _ZdlPv($6)
	
.LABEL $label$30
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$29 }
	$0 = *(($5 + [176]))
	goto $label$27 
	
.LABEL $label$28
	$0 = $7
	
.LABEL $label$27
	*($8) = $7
	CALL _ZdlPv($0)
	
.LABEL $label$2
	$global$0 = ($5 + [256])
	return (unreachable)
	
.LABEL $label$1
	CALL $219(($5 + [8]))
}

int_32 .FUNC $17 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $303($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [72]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $7)
	*($4 + [128]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $43(($4 + [16]), ($4 + [128]))
	*(($3 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	$3 = *($3)
	*((($4 + [96]) + [8])) = $3
	*(($8 = (($4 + [112]) + [8]))) = $3
	$9 = *($4)
	*($4 + [112]) = $9
	*($4 + [96]) = $9
	$3 = *($8)
	*((($4 + [128]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [112])
	*($4 + [32]) = $0
	*($4 + [128]) = $0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [88])
	$1 = *($4 + [80])
	$9 = *($4 + [72])
	$10 = *($4 + [64])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $306($2)
	
.LABEL $label$6
	$global$0 = ($4 + [144])
	return [1]
}

void .FUNC $10 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [48])
	$global$0 = $1
	CALL require_auth(*($0))
	*(($1 + [32])) = [0]
	*($1 + [16]) = (int_64)-1
	*($1 + [36]) = [0]
	$2 = *($0)
	*($1) = $2
	*($1 + [8]) = $2
	*($1 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($2, $2, (int_64)-6031097554559041536, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $46($1, $0)
	
.LOOP $label$2:
	CALL eosio_assert([1], [13633])
	CALL eosio_assert([1], [13667])
	$0 = [0]
	$4 = CALL db_next_i64(*($3 + [44]), ($1 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $46($1, $4)
	
.LABEL $label$3
	CALL $47($1, $3)
	$3 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	$4 = *($1 + [24])
	if ( ($4 == 0) ){ goto $label$4 }
	$5 = ($1 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL _ZdlPv($3)
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($1 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $4
	
.LABEL $label$5
	*($5) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$4
	$global$0 = ($1 + [48])
}

int_32 .FUNC $11 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [32])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $303($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [20])) = $2
	*(($4 + [24])) = ($2 + $7)
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	$3 = ($4 + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $306($2)
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return [1]
}

void .FUNC $12 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [48])
	$global$0 = $1
	CALL require_auth(*($0))
	*(($1 + [32])) = [0]
	*($1 + [16]) = (int_64)-1
	*($1 + [36]) = [0]
	$2 = *($0)
	*($1) = $2
	*($1 + [8]) = $2
	*($1 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($2, $2, (int_64)5002113041930367488, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $76($1, $0)
	
.LOOP $label$2:
	CALL eosio_assert([1], [13633])
	CALL eosio_assert([1], [13667])
	$0 = [0]
	$4 = CALL db_next_i64(*($3 + [44]), ($1 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $76($1, $4)
	
.LABEL $label$3
	CALL $78($1, $3)
	$3 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	$4 = *($1 + [24])
	if ( ($4 == 0) ){ goto $label$4 }
	$5 = ($1 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL _ZdlPv($3)
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($1 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $4
	
.LABEL $label$5
	*($5) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$4
	$global$0 = ($1 + [48])
}

void .FUNC $13 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6, int_32 $7, int_64 $8, int_32 $9, int_64 $10, int_64 $11)
{
	int_32 $12
	int_32 $13
	$12 = ($global$0 - [160])
	$global$0 = $12
	*($12 + [144]) = $2
	*($12 + [136]) = $3
	*($12 + [128]) = $4
	*($12 + [120]) = $8
	*($12 + [112]) = $10
	*($12 + [104]) = $11
	*($12 + [152]) = $1
	CALL require_auth(*($0))
	*(($12 + [96])) = [0]
	*($12 + [80]) = (int_64)-1
	*($12 + [88]) = (int_64)0
	*($12 + [100]) = [0]
	$11 = *($0)
	*($12 + [64]) = $11
	*($12 + [72]) = $11
	$13 = CALL db_find_i64($11, $11, (int_64)4229703216016654336, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$2 }
	$13 = CALL $57(($12 + [64]), $13)
	CALL eosio_assert(((int_32)*($13 + [112]) == (int_32)($12 + [64])), [8731])
	$11 = *($0)
	*($12 + [28]) = $5
	*($12 + [32]) = $6
	*($12 + [40]) = $9
	*($12 + [52]) = $7
	*($12 + [20]) = ($12 + [136])
	*($12 + [16]) = ($12 + [144])
	*($12 + [24]) = ($12 + [128])
	*($12 + [36]) = ($12 + [120])
	*($12 + [44]) = ($12 + [112])
	*($12 + [48]) = ($12 + [104])
	CALL eosio_assert([1], [8871])
	CALL $58(($12 + [64]), $13, $11, ($12 + [16]))
	goto $label$1 
	
.LABEL $label$2
	$11 = *($0)
	*($12 + [32]) = $5
	*($12 + [36]) = $6
	*($12 + [44]) = $9
	*($12 + [56]) = $7
	*($12 + [20]) = ($12 + [144])
	*($12 + [16]) = ($12 + [152])
	*($12 + [24]) = ($12 + [136])
	*($12 + [28]) = ($12 + [128])
	*($12 + [40]) = ($12 + [120])
	*($12 + [48]) = ($12 + [112])
	*($12 + [52]) = ($12 + [104])
	CALL $59(($12 + [8]), ($12 + [64]), $11, ($12 + [16]))
	
.LABEL $label$1
	CALL $60(($12 + [88]))
	$global$0 = ($12 + [160])
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $52(*($1), *($0 + [16]))
	CALL $52(*($1), *($0 + [20]))
	$3 = *($0 + [24])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [8805])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [28])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $52(*($1), *($0 + [32]))
	$3 = *($0 + [36])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0 + [40])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($4, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $281 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($2 - $3))
	*($0 + [120]) = $4
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	if ( ((int_64)$4 <= (int_64)$1) ){ goto $label$1 }
	*($0 + [104]) = ($3 + (CASTING uint_32)(uint_64 $1))
	return 
	
.LABEL $label$1
	*($0 + [104]) = $2
}

void .FUNC $18 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [240])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	*((($3 + [200]) + [32])) = [0]
	*($3 + [216]) = (int_64)-1
	*($3 + [224]) = (int_64)0
	$5 = *($0)
	*($3 + [200]) = $5
	*($3 + [208]) = $5
	$6 = [0]
	$7 = CALL db_find_i64($5, $5, (int_64)4229853266458443776, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $64(($3 + [200]), $7)
	CALL eosio_assert(((int_32)*($6 + [120]) == (int_32)($3 + [200])), [8731])
	
.LABEL $label$1
	*($3 + [196]) = $6
	*($3 + [192]) = ($3 + [200])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13899])
	CALL eosio_assert((*($6 + [112]) == 0), [13925])
	CALL sha256($2, [32], ($3 + [160]))
	CALL printhex(($3 + [160]), [32])
	*($3 + [112]) = [0]
	*($3 + [104]) = (int_64)0
	
.LOOP $label$2:
	$7 = *((($3 + [160]) + $4))
	CALL $228(($3 + [104]), *((uint_32($7 >> [4]) + [14035])))
	CALL $228(($3 + [104]), *((($7 & [15]) + [14035])))
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$2 }
	$8 = [0]
	$4 = ($4 & [1])
	$4 = *($6 + [32])
	$10 = ($4 & [1])
	$4 = *($3 + [104])
	$9 = uint_32($4 >> [1])
	$11 = ( *($3 + [108]) ? $9 : $10 )
	if ( ((int_32)$11 != (int_32)( *(($6 + [36])) ? uint_32($4 >> [1]) : $4 )) ){ goto $label$3 }
	$4 = ( *(($6 + [40])) ? (($6 + [32]) + [1]) : $4 )
	$7 = (($3 + [104]) | [1])
	if ( $10 ){ goto $label$6 }
	if ( ($11 == 0) ){ goto $label$5 }
	$6 = ([0] - $9)
	
.LOOP $label$7:
	if ( ((int_32)*($7) != (int_32)*($4)) ){ goto $label$4 }
	$8 = [1]
	$4 = ($4 + [1])
	$7 = ($7 + [1])
	$6 = ($6 + [1])
	if ( $6 ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$6
	if ( ($11 == 0) ){ goto $label$5 }
	$8 = (CALL $296(( *(($3 + [112])) ? $7 : $10 ), $4, $11) == 0)
	goto $label$3 
	
.LABEL $label$5
	$8 = [1]
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	
.LABEL $label$3
	CALL eosio_assert($8, [13951])
	if ( ((*($3 + [104]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*(($3 + [112])))
	
.LABEL $label$8
	*($3 + [152]) = [0]
	*($3 + [144]) = (int_64)0
	*(($3 + [136])) = [0]
	*($3 + [120]) = (int_64)-1
	*($3 + [128]) = (int_64)0
	*($3 + [140]) = [0]
	$5 = *($0)
	*($3 + [104]) = $5
	*($3 + [112]) = $5
	*($3 + [96]) = ($3 + [104])
	$7 = *($3 + [196])
	CALL $67(($3 + [88]), ($3 + [96]), ($7 + [8]))
	$4 = *($3 + [92])
	if ( ($4 == 0) ){ goto $label$9 }
	$8 = (($3 + [144]) + [8])
	
.LOOP $label$10:
	$7 = *($4 + [32])
	$6 = ($7 & [1])
	CALL prints_l(( *(($4 + [40])) ? ($4 + [33]) : $6 ), ( *(($4 + [36])) ? uint_32($7 >> [1]) : $6 ))
	CALL prints([13965])
	$4 = *($3 + [92])
	if ( ((int_64)*($4 + [8]) != (int_64)*(*($3 + [196]) + [8])) ){ goto $label$11 }
	$5 = *($4 + [96])
	if ( (int_64)($5 == 0) ){ goto $label$11 }
	if ( (uint_64)($5 <= *($4 + [72])) ){ goto $label$11 }
	$7 = *($3 + [148])
	if ( ((uint_32)$7 >= (uint_32)*($8)) ){ goto $label$12 }
	*($7) = *($4)
	*($3 + [148]) = ($7 + [4])
	goto $label$11 
	
.LABEL $label$12
	CALL $68(($3 + [144]), $4)
	
.LABEL $label$11
	CALL $69(($3 + [88]))
	$4 = *($3 + [92])
	if ( $4 ){ goto $label$10 }
	$7 = *($3 + [196])
	
.LABEL $label$9
	CALL eosio_assert(((int_32)*($3 + [148]) != (int_32)*($3 + [144])), [13976])
	$4 = CALL $70($0, $2, ($7 + [80]), (CASTING uint_64)(uint_32 int_32((*($3 + [148]) - *($3 + [144])) >> [2])))
	$4 = *((*($3 + [144]) + ($4 << [2])))
	*($3 + [84]) = $4
	$5 = (CASTING int_64)(int_32 $4)
	$7 = *(($3 + [132]))
	$8 = *(($3 + [128]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$14 }
	
.LOOP $label$16:
	$4 = ($7 + [-24])
	$6 = *($4)
	if ( ((int_64)*($6) == (int_64)$5) ){ goto $label$15 }
	$7 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$14 }
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)($3 + [104])), [8731])
	*($3 + [76]) = $6
	*($3 + [72]) = ($3 + [104])
	goto $label$13 
	
.LABEL $label$14
	$4 = CALL db_find_i64(*($3 + [104]), *(($3 + [112])), (int_64)4229703216016654336, $5)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$17 }
	$6 = CALL $57(($3 + [104]), $4)
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)($3 + [104])), [8731])
	*($3 + [76]) = $6
	*($3 + [72]) = ($3 + [104])
	goto $label$13 
	
.LABEL $label$17
	$6 = [0]
	*($3 + [76]) = [0]
	*($3 + [72]) = ($3 + [104])
	
.LABEL $label$13
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [14000])
	$4 = *($6 + [32])
	$7 = CALL $297([14024])
	if ( ((int_32)$7 != (int_32)( *(($6 + [36])) ? uint_32($4 >> [1]) : ($4 & [1]) )) ){ goto $label$18 }
	if ( CALL $234(($6 + [32]), [0], [-1], [14024], $7) ){ goto $label$18 }
	CALL prints([14029])
	*(($3 + [64])) = [0]
	*($3 + [48]) = (int_64)-1
	*($3 + [56]) = (int_64)0
	*($3 + [68]) = [0]
	$5 = *($0)
	*($3 + [32]) = $5
	*($3 + [40]) = $5
	*($3 + [20]) = ($3 + [192])
	*($3 + [16]) = ($3 + [32])
	*($3 + [24]) = ($3 + [72])
	CALL $71(($3 + [8]), ($3 + [32]), $5, ($3 + [16]))
	$6 = *($3 + [56])
	if ( ($6 == 0) ){ goto $label$18 }
	$8 = ($3 + [60])
	$4 = *($8)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$20 }
	
.LOOP $label$21:
	$4 = ($4 + [-24])
	$7 = *($4)
	*($4) = [0]
	if ( ($7 == 0) ){ goto $label$22 }
	CALL _ZdlPv($7)
	
.LABEL $label$22
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$21 }
	$4 = *(($3 + [56]))
	goto $label$19 
	
.LABEL $label$20
	$4 = $6
	
.LABEL $label$19
	*($8) = $6
	CALL _ZdlPv($4)
	
.LABEL $label$18
	$5 = *($0)
	$4 = *($3 + [196])
	*($3 + [32]) = $2
	*($3 + [36]) = ($3 + [84])
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [8871])
	CALL $72(($3 + [200]), $4, $5, ($3 + [32]))
	$5 = *($0)
	$4 = *($3 + [76])
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [8871])
	CALL $73(($3 + [104]), $4, $5, ($3 + [32]))
	CALL $60(($3 + [128]))
	$4 = *($3 + [144])
	if ( ($4 == 0) ){ goto $label$23 }
	*($3 + [148]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$23
	$6 = *($3 + [224])
	if ( ($6 == 0) ){ goto $label$24 }
	$8 = ($3 + [228])
	$4 = *($8)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$26 }
	
.LOOP $label$27:
	$4 = ($4 + [-24])
	$7 = *($4)
	*($4) = [0]
	if ( ($7 == 0) ){ goto $label$28 }
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$29 }
	CALL _ZdlPv(*(($7 + [40])))
	
.LABEL $label$29
	CALL _ZdlPv($7)
	
.LABEL $label$28
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$27 }
	$4 = *(($3 + [224]))
	goto $label$25 
	
.LABEL $label$26
	$4 = $6
	
.LABEL $label$25
	*($8) = $6
	CALL _ZdlPv($4)
	
.LABEL $label$24
	$global$0 = ($3 + [240])
}

int_32 .FUNC $19 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $303($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = (($4 + [32]) + [40]))) = (int_64)0
	*(($8 = (($4 + [32]) + [32]))) = (int_64)0
	*(($9 = (($4 + [32]) + [24]))) = (int_64)0
	*($4 + [48]) = (int_64)0
	*($4 + [32]) = (int_64)0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [8805])
	CALL memcpy(($4 + [32]), $2, [8])
	CALL eosio_assert(((uint_32)($7 + [-8]) > (uint_32)[31]), [8805])
	CALL memcpy((($4 + [32]) + [16]), ($2 + [8]), [32])
	*(($4 + [20])) = ($2 + [40])
	*(($4 + [24])) = ($2 + $7)
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*(($10 = (($4 + [80]) + [16]))) = *($8)
	*(($8 = (($4 + [80]) + [24]))) = *($3)
	*($4 + [80]) = *($4 + [48])
	*($4 + [88]) = *($9)
	$0 = *($4 + [32])
	*((($4 + [112]) + [24])) = *($8)
	*((($4 + [112]) + [16])) = *($10)
	*($4 + [120]) = *($4 + [88])
	*($4 + [112]) = *($4 + [80])
	$3 = ($4 + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $0), (int_64 ($4 + [112])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $306($2)
	
.LABEL $label$6
	$global$0 = ($4 + [144])
	return [1]
}

void .FUNC $184 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$8 = ($0 + [8])
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($4 + [24])) = $8
	$8 = [0]
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$5 = ($5 << [1])
	$5 = ( $7 ? $5 : ($5 <= $7) )
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = $5
	goto $label$4 
	
.LABEL $label$5
	*(($4 + [24])) = $8
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$8 = [178956970]
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$8 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*($4 + [8]) = $5
	*(($4 + [20])) = ($5 + ((int_32)$8 * (int_32)[24]))
	*(($5 = ($5 + ((int_32)$6 * (int_32)[24])))) = $7
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($4 + [12]) = $5
	$1 = ($5 + [24])
	*($4 + [16]) = $1
	$3 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$8 = *($4 + [12])
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$2 = *($1)
	*($1) = [0]
	*(($8 + [-24])) = $2
	*(($8 + [-8])) = *(($5 + [-8]))
	*(($8 + [-16])) = *(($5 + [-16]))
	$8 = (*($4 + [12]) + [-24])
	*($4 + [12]) = $8
	$5 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$8 }
	$5 = *(($0 + [4]))
	$3 = *($0)
	$1 = *(($4 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$8 = *($4 + [12])
	
.LABEL $label$6
	*($0) = $8
	*(($0 + [4])) = $1
	*((($4 + [8]) + [8])) = $5
	*($4 + [12]) = $3
	$5 = ($0 + [8])
	$8 = *($5)
	*($5) = *($9)
	*($9) = $8
	*($4 + [8]) = $3
	CALL $186(($4 + [8]))
	$global$0 = ($4 + [32])
	(unreachable)
}

void .FUNC $187 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$1 = (*($2) + [32])
	*(($2 = *($1))) = $1
	$4 = *($3)
	$3 = *($0 + [16])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$2
	$4 = *($3)
	$3 = *($0 + [20])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$4
	$1 = ($1 + [24])
	*($2) = $1
	$3 = *($0)
	$0 = *($0 + [32])
	$5 = (CASTING uint_64)(uint_32 ( *($0 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	*($2) = $1
	$0 = *($0)
	$0 = ( *(($0 + [4])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	if ( ($0 == 0) ){ goto $label$6 }
	$1 = ($0 + $1)
	*($2) = $1
	
.LABEL $label$6
	*($2) = ($1 + [16])
}

int_32 .FUNC $218 (int_32 $0)
{
	return *($0 + [4])
}

int_32 .FUNC $186 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$3 = ($0 + [8])
	
.LOOP $label$2:
	$4 = ($1 + [-24])
	*($3) = $4
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	if ( ((*($1 + [80]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*(($1 + [88])))
	if ( ((*($1 + [44]) & [1]) == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((*($1 + [44]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*(($1 + [52])))
	if ( (*($1 + [32]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($1 + [40])))
	
.LABEL $label$4
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	return $0
}

int_32 .FUNC $180 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [8865])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$2 }
	$6 = ($0 + [4])
	
.LOOP $label$3:
	$5 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[7]), [8865])
	CALL memcpy(*($6), $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[7]), [8865])
	CALL memcpy(*($6), ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $116 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [64])
	$global$0 = $4
	$5 = *(($1 + [20]))
	if ( ($5 == 0) ){ goto $label$15 }
	$5 = ($5 + [-1])
	if ( ((*((*($1 + [16]) + (uint_32($5 >> [3]) & [536870908]))) & ([1] << ($5 & [31]))) == 0) ){ goto $label$32 }
	*($4 + [40]) = [3]
	*($4 + [48]) = (int_64)0
	$5 = CALL _Znwj([12])
	CALL $220($5, $2)
	if ( ($5 == 0) ){ goto $label$14 }
	*($4 + [48]) = $5
	if ( ($3 == 0) ){ goto $label$31 }
	$2 = ($1 + [8])
	goto $label$30 
	
.LABEL $label$32
	*($0 + [4]) = [0]
	*($0) = [0]
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$31
	$2 = ($1 + [8])
	$5 = *($2)
	$3 = *($1 + [4])
	*($4 + [59]) = [5]
	*($4 + [60]) = int_32(($5 - $3) >> [2])
	$5 = *(($1 + [64]))
	if ( ($5 == 0) ){ goto $label$13 }
	if ( (CALL int_32 $5((int_32 ($4 + [60])), (int_32 ($4 + [59])), (int_32 ($4 + [40])), (int_32 *(*($5) + [24]))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$5 = *(($1 + [8]))
	if ( ((int_32)*($1 + [4]) == (int_32)$5) ){ goto $label$33 }
	$5 = *(($5 + [-4]))
	if ( ($5 == 0) ){ goto $label$28 }
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$27 }
	if ( ((int_32)$3 != (int_32)[2]) ){ goto $label$12 }
	$1 = *($5 + [8])
	$5 = *($1 + [4])
	if ( ((uint_32)$5 >= (uint_32)*($1 + [8])) ){ goto $label$26 }
	CALL $144($5, ($4 + [40]))
	*(($1 = ($1 + [4]))) = (*($1) + [16])
	goto $label$25 
	
.LABEL $label$33
	$5 = CALL $144(($4 + [24]), ($4 + [40]))
	CALL $103(*($1), $5)
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$23 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$24 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$22 }
	if ( (*($5 + [8]) == 0) ){ goto $label$9 }
	$5 = ($5 + [8])
	goto $label$21 
	
.LABEL $label$29
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$28
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 == (int_32)[3]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$27
	$2 = ($1 + [32])
	$5 = *($2)
	if ( ($5 == 0) ){ goto $label$11 }
	$5 = ($5 + [-1])
	$3 = *((*($1 + [28]) + (uint_32($5 >> [3]) & [536870908])))
	*($2) = $5
	if ( (($3 & ([1] << ($5 & [31]))) == 0) ){ goto $label$20 }
	if ( (*($1 + [40]) == 0) ){ goto $label$10 }
	$5 = CALL $144(($4 + [8]), ($4 + [40]))
	CALL $103(*(($1 + [40])), $5)
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$18 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$19 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$17 }
	if ( (*($5 + [8]) == 0) ){ goto $label$6 }
	$5 = ($5 + [8])
	goto $label$16 
	
.LABEL $label$26
	CALL $145($1, ($4 + [40]))
	
.LABEL $label$25
	*($0) = [1]
	*($0 + [4]) = (*(*(*((*($2) + [-4])) + [8]) + [4]) + [-16])
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$24
	if ( (*($5 + [8]) == 0) ){ goto $label$8 }
	$5 = ($5 + [8])
	goto $label$21 
	
.LABEL $label$23
	if ( (*($5 + [8]) == 0) ){ goto $label$7 }
	$5 = ($5 + [8])
	goto $label$21 
	
.LABEL $label$22
	$5 = ($5 + [8])
	
.LABEL $label$21
	CALL $38($5, $2)
	*($0) = [1]
	*($0 + [4]) = *($1)
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$20
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$19
	if ( (*($5 + [8]) == 0) ){ goto $label$5 }
	$5 = ($5 + [8])
	goto $label$16 
	
.LABEL $label$18
	if ( (*($5 + [8]) == 0) ){ goto $label$4 }
	$5 = ($5 + [8])
	goto $label$16 
	
.LABEL $label$17
	$5 = ($5 + [8])
	
.LABEL $label$16
	CALL $38($5, $2)
	*($0) = [1]
	*($0 + [4]) = *(($1 + [40]))
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$15
	CALL $248([12906], [9181], [4788], [12929])
	
.LABEL $label$14
	CALL $248([9163], [9181], [13215], [9190])
	
.LABEL $label$13
	CALL abort()
	
.LABEL $label$12
	CALL $248([12942], [9181], [4823], [12929])
	
.LABEL $label$11
	CALL $248([13004], [9181], [4833], [12929])
	
.LABEL $label$10
	CALL $248([13031], [9181], [4842], [12929])
	
.LABEL $label$9
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$8
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$7
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$6
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$5
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$4
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$34 }
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$1 }
	if ( *(($4 + [48])) ){ goto $label$1 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$34
	if ( *(($4 + [48])) ){ goto $label$1 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$2
	if ( *(($4 + [48])) ){ goto $label$1 }
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$1
	CALL $38((($4 + [40]) + [8]), $1)
	$global$0 = ($4 + [64])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $117 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [64])
	$global$0 = $4
	$5 = *(($1 + [20]))
	if ( ($5 == 0) ){ goto $label$14 }
	$5 = ($5 + [-1])
	if ( ((*((*($1 + [16]) + (uint_32($5 >> [3]) & [536870908]))) & ([1] << ($5 & [31]))) == 0) ){ goto $label$31 }
	*($4 + [48]) = [0]
	*($4 + [40]) = [0]
	if ( ($3 == 0) ){ goto $label$30 }
	$3 = ($1 + [8])
	goto $label$29 
	
.LABEL $label$31
	*($0 + [4]) = [0]
	*($0) = [0]
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$30
	$3 = ($1 + [8])
	$5 = *($3)
	$6 = *($1 + [4])
	*($4 + [59]) = [5]
	*($4 + [60]) = int_32(($5 - $6) >> [2])
	$5 = *(($1 + [64]))
	if ( ($5 == 0) ){ goto $label$13 }
	if ( (CALL int_32 $5((int_32 ($4 + [60])), (int_32 ($4 + [59])), (int_32 ($4 + [40])), (int_32 *(*($5) + [24]))) == 0) ){ goto $label$28 }
	
.LABEL $label$29
	$5 = *(($1 + [8]))
	if ( ((int_32)*($1 + [4]) == (int_32)$5) ){ goto $label$32 }
	$5 = *(($5 + [-4]))
	if ( ($5 == 0) ){ goto $label$27 }
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)[1]) ){ goto $label$26 }
	if ( ((int_32)$6 != (int_32)[2]) ){ goto $label$12 }
	$1 = *($5 + [8])
	$5 = *($1 + [4])
	if ( ((uint_32)$5 >= (uint_32)*($1 + [8])) ){ goto $label$25 }
	CALL $144($5, ($4 + [40]))
	*(($1 = ($1 + [4]))) = (*($1) + [16])
	goto $label$24 
	
.LABEL $label$32
	$5 = CALL $144(($4 + [24]), ($4 + [40]))
	CALL $103(*($1), $5)
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$22 }
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$23 }
	if ( ((int_32)$3 != (int_32)[3]) ){ goto $label$21 }
	if ( (*($5 + [8]) == 0) ){ goto $label$9 }
	$5 = ($5 + [8])
	goto $label$20 
	
.LABEL $label$28
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$27
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 == (int_32)[3]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$26
	$3 = ($1 + [32])
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$11 }
	$5 = ($5 + [-1])
	$6 = *((*($1 + [28]) + (uint_32($5 >> [3]) & [536870908])))
	*($3) = $5
	if ( (($6 & ([1] << ($5 & [31]))) == 0) ){ goto $label$19 }
	if ( (*($1 + [40]) == 0) ){ goto $label$10 }
	$5 = CALL $144(($4 + [8]), ($4 + [40]))
	CALL $103(*(($1 + [40])), $5)
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$17 }
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$18 }
	if ( ((int_32)$3 != (int_32)[3]) ){ goto $label$16 }
	if ( (*($5 + [8]) == 0) ){ goto $label$6 }
	$5 = ($5 + [8])
	goto $label$15 
	
.LABEL $label$25
	CALL $145($1, ($4 + [40]))
	
.LABEL $label$24
	*($0) = [1]
	*($0 + [4]) = (*(*(*((*($3) + [-4])) + [8]) + [4]) + [-16])
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$23
	if ( (*($5 + [8]) == 0) ){ goto $label$8 }
	$5 = ($5 + [8])
	goto $label$20 
	
.LABEL $label$22
	if ( (*($5 + [8]) == 0) ){ goto $label$7 }
	$5 = ($5 + [8])
	goto $label$20 
	
.LABEL $label$21
	$5 = ($5 + [8])
	
.LABEL $label$20
	CALL $38($5, $3)
	*($0) = [1]
	*($0 + [4]) = *($1)
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$19
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$18
	if ( (*($5 + [8]) == 0) ){ goto $label$5 }
	$5 = ($5 + [8])
	goto $label$15 
	
.LABEL $label$17
	if ( (*($5 + [8]) == 0) ){ goto $label$4 }
	$5 = ($5 + [8])
	goto $label$15 
	
.LABEL $label$16
	$5 = ($5 + [8])
	
.LABEL $label$15
	CALL $38($5, $3)
	*($0) = [1]
	*($0 + [4]) = *(($1 + [40]))
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$14
	CALL $248([12906], [9181], [4788], [12929])
	
.LABEL $label$13
	CALL abort()
	
.LABEL $label$12
	CALL $248([12942], [9181], [4823], [12929])
	
.LABEL $label$11
	CALL $248([13004], [9181], [4833], [12929])
	
.LABEL $label$10
	CALL $248([13031], [9181], [4842], [12929])
	
.LABEL $label$9
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$8
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$7
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$6
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$5
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$4
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$33 }
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$1 }
	if ( *(($4 + [48])) ){ goto $label$1 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$33
	if ( *(($4 + [48])) ){ goto $label$1 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$2
	if ( *(($4 + [48])) ){ goto $label$1 }
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$1
	CALL $38((($4 + [40]) + [8]), $1)
	$global$0 = ($4 + [64])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	$2 = ($global$0 - [32])
	$global$0 = $2
	if ( ((uint_32)(*($0 + [8]) << [5]) >= (uint_32)$1) ){ goto $label$2 }
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$1 }
	$1 = (uint_32(($1 + [-1]) >> [5]) + [1])
	$3 = CALL _Znwj(($1 << [2]))
	*(($2 + [24])) = $1
	*($2 + [20]) = [0]
	*($2 + [16]) = $3
	*($2 + [12]) = [0]
	$1 = *($0)
	*($2 + [8]) = $1
	$3 = *($0 + [4])
	*($2 + [4]) = ($3 & [31])
	*($2) = ($1 + (uint_32($3 >> [3]) & [536870908]))
	CALL $137(($2 + [16]), ($2 + [8]), $2)
	$1 = *($0)
	*($0) = *($2 + [16])
	$4 = *($0 + [4 align=4])
	*($0 + [4 align=4]) = *($2 + [20 align=4])
	*($2 + [16]) = $1
	*($2 + [20 align=4]) = $4
	if ( ($1 == 0) ){ goto $label$2 }
	CALL _ZdlPv($1)
	
.LABEL $label$2
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $245(($2 + [16]))
}

void .FUNC $115 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [64])
	$global$0 = $4
	$5 = *(($1 + [20]))
	if ( ($5 == 0) ){ goto $label$15 }
	$5 = ($5 + [-1])
	if ( ((*((*($1 + [16]) + (uint_32($5 >> [3]) & [536870908]))) & ([1] << ($5 & [31]))) == 0) ){ goto $label$32 }
	*($4 + [40]) = [4]
	*($4 + [48]) = *($2)
	if ( ($3 == 0) ){ goto $label$31 }
	$2 = ($1 + [8])
	goto $label$30 
	
.LABEL $label$32
	*($0 + [4]) = [0]
	*($0) = [0]
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$31
	$2 = ($1 + [8])
	$5 = *($2)
	$3 = *($1 + [4])
	*($4 + [59]) = [5]
	*($4 + [60]) = int_32(($5 - $3) >> [2])
	$5 = *(($1 + [64]))
	if ( ($5 == 0) ){ goto $label$14 }
	if ( (CALL int_32 $5((int_32 ($4 + [60])), (int_32 ($4 + [59])), (int_32 ($4 + [40])), (int_32 *(*($5) + [24]))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$5 = *(($1 + [8]))
	if ( ((int_32)*($1 + [4]) == (int_32)$5) ){ goto $label$33 }
	$5 = *(($5 + [-4]))
	if ( ($5 == 0) ){ goto $label$28 }
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$27 }
	if ( ((int_32)$3 != (int_32)[2]) ){ goto $label$13 }
	$1 = *($5 + [8])
	$5 = *($1 + [4])
	if ( ((uint_32)$5 >= (uint_32)*($1 + [8])) ){ goto $label$26 }
	CALL $144($5, ($4 + [40]))
	*(($1 = ($1 + [4]))) = (*($1) + [16])
	goto $label$25 
	
.LABEL $label$33
	$5 = CALL $144(($4 + [24]), ($4 + [40]))
	CALL $103(*($1), $5)
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$23 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$24 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$22 }
	if ( (*($5 + [8]) == 0) ){ goto $label$10 }
	$5 = ($5 + [8])
	goto $label$21 
	
.LABEL $label$29
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$28
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$27
	$2 = ($1 + [32])
	$5 = *($2)
	if ( ($5 == 0) ){ goto $label$12 }
	$5 = ($5 + [-1])
	$3 = *((*($1 + [28]) + (uint_32($5 >> [3]) & [536870908])))
	*($2) = $5
	if ( (($3 & ([1] << ($5 & [31]))) == 0) ){ goto $label$20 }
	if ( (*($1 + [40]) == 0) ){ goto $label$11 }
	$5 = CALL $144(($4 + [8]), ($4 + [40]))
	CALL $103(*(($1 + [40])), $5)
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$18 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$19 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$17 }
	if ( (*($5 + [8]) == 0) ){ goto $label$7 }
	$5 = ($5 + [8])
	goto $label$16 
	
.LABEL $label$26
	CALL $145($1, ($4 + [40]))
	
.LABEL $label$25
	*($0) = [1]
	*($0 + [4]) = (*(*(*((*($2) + [-4])) + [8]) + [4]) + [-16])
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$24
	if ( (*($5 + [8]) == 0) ){ goto $label$9 }
	$5 = ($5 + [8])
	goto $label$21 
	
.LABEL $label$23
	if ( (*($5 + [8]) == 0) ){ goto $label$8 }
	$5 = ($5 + [8])
	goto $label$21 
	
.LABEL $label$22
	$5 = ($5 + [8])
	
.LABEL $label$21
	CALL $38($5, $2)
	*($0) = [1]
	*($0 + [4]) = *($1)
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$20
	*($0 + [4]) = [0]
	*($0) = [0]
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$19
	if ( (*($5 + [8]) == 0) ){ goto $label$6 }
	$5 = ($5 + [8])
	goto $label$16 
	
.LABEL $label$18
	if ( (*($5 + [8]) == 0) ){ goto $label$5 }
	$5 = ($5 + [8])
	goto $label$16 
	
.LABEL $label$17
	$5 = ($5 + [8])
	
.LABEL $label$16
	CALL $38($5, $2)
	*($0) = [1]
	*($0 + [4]) = *(($1 + [40]))
	$1 = *($4 + [40])
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	CALL $248([12906], [9181], [4788], [12929])
	
.LABEL $label$14
	CALL abort()
	
.LABEL $label$13
	CALL $248([12942], [9181], [4823], [12929])
	
.LABEL $label$12
	CALL $248([13004], [9181], [4833], [12929])
	
.LABEL $label$11
	CALL $248([13031], [9181], [4842], [12929])
	
.LABEL $label$10
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$9
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$8
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$7
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$6
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$5
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$4
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$37 }
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$36 }
	if ( (*($4 + [48]) == 0) ){ goto $label$35 }
	$0 = ($4 + [48])
	goto $label$2 
	
.LABEL $label$37
	if ( (*($4 + [48]) == 0) ){ goto $label$34 }
	$0 = ($4 + [48])
	goto $label$2 
	
.LABEL $label$36
	$0 = ($4 + [48])
	goto $label$2 
	
.LABEL $label$35
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$34
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$3
	if ( (*($4 + [48]) == 0) ){ goto $label$1 }
	$0 = ($4 + [48])
	
.LABEL $label$2
	CALL $38($0, $1)
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $248([9197], [9181], [13422], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1 + [4])
	if ( ((uint_32)$3 > (uint_32)[6]) ){ goto $label$1 }
	if ( ((([1] << $3) & [84]) == 0) ){ goto $label$1 }
	$4 = ($0 + [40])
	CALL $228($4, *($0 + [8]))
	$5 = ($0 + [28])
	$6 = *($1)
	$7 = ($6 + ($3 << [2]))
	$8 = ($0 + [16])
	$9 = ($0 + [20])
	$10 = ($0 + [12])
	$11 = ($0 + [8])
	$12 = ($0 + [36])
	$13 = ($0 + [32])
	
.LOOP $label$3:
	*($8) = (*($8) + [1])
	*($9) = (*($9) + [1])
	if ( (*($10) == 0) ){ goto $label$6 }
	*($10) = [0]
	$1 = [-1]
	$3 = *($11)
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$1 = *($0)
	$3 = CALL int_32 $1((int_32 *(*($1))))
	*($11) = $3
	$1 = [-1]
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	
.LABEL $label$5
	*($2 + [15]) = $3
	$1 = *($13)
	if ( ((uint_32)$1 >= (uint_32)*($12)) ){ goto $label$8 }
	*($1) = $3
	*($13) = (*($13) + [1])
	$1 = *($11)
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$8
	CALL $108($5, ($2 + [15]))
	$1 = *($11)
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$7
	*($9) = [0]
	*(($1 = ($0 + [24]))) = (*($1) + [1])
	$1 = [10]
	
.LABEL $label$4
	if ( ((int_32)*($6) > (int_32)$1) ){ goto $label$2 }
	if ( ((int_32)$1 > (int_32)*(($6 + [4]))) ){ goto $label$2 }
	CALL $228($4, int_32(($1 << [24]) >> [24]))
	$6 = ($6 + [8])
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$3 }
	$global$0 = ($2 + [16])
	return [1]
	
.LABEL $label$2
	*($0 + [52]) = [12344]
	$global$0 = ($2 + [16])
	return [0]
	
.LABEL $label$1
	CALL $248([12455], [9181], [2762], [12518])
	return (unreachable)
}

int_32 .FUNC $113 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	if ( ((int_32)*($0 + [8]) != (int_32)[117]) ){ goto $label$2 }
	*($0 + [16]) = (*($0 + [16]) + [1])
	*(($2 = ($0 + [20]))) = (*($2) + [1])
	if ( (*($0 + [12]) == 0) ){ goto $label$4 }
	*(($0 + [12])) = [0]
	$2 = [117]
	goto $label$3 
	
.LABEL $label$4
	$2 = *($0)
	$2 = CALL int_32 $2((int_32 *(*($2))))
	*(($0 + [8])) = $2
	$3 = [-1]
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$3
	$4 = ($0 + [28])
	*($1 + [15]) = $2
	$3 = ($0 + [32])
	$5 = *($3)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [36]))) ){ goto $label$6 }
	*($5) = $2
	*($3) = (*($3) + [1])
	goto $label$5 
	
.LABEL $label$6
	CALL $108($4, ($1 + [15]))
	
.LABEL $label$5
	$2 = *(($0 + [8]))
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$9 }
	*(($0 + [20])) = [0]
	*(($0 = ($0 + [24]))) = (*($0) + [1])
	goto $label$8 
	
.LABEL $label$9
	$5 = ($2 + [-48])
	if ( ($5 <= [10]) ){ goto $label$10 }
	if ( ((uint_32)($2 + [-65]) > (uint_32)[5]) ){ goto $label$11 }
	$5 = ($2 + [-55])
	goto $label$10 
	
.LABEL $label$11
	$3 = [-1]
	if ( ((uint_32)($2 + [-97]) > (uint_32)[5]) ){ goto $label$1 }
	$5 = ($2 + [-87])
	
.LABEL $label$10
	*(($3 = ($0 + [16]))) = (*($3) + [1])
	*(($3 = ($0 + [20]))) = (*($3) + [1])
	$3 = ($0 + [12])
	if ( (*($3) == 0) ){ goto $label$13 }
	*($3) = [0]
	goto $label$12 
	
.LABEL $label$13
	$2 = *($0)
	$2 = CALL int_32 $2((int_32 *(*($2))))
	*(($0 + [8])) = $2
	$3 = [-1]
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$12
	*($1 + [15]) = $2
	$3 = ($0 + [32])
	$6 = *($3)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [36]))) ){ goto $label$15 }
	*($6) = $2
	*($3) = (*($3) + [1])
	goto $label$14 
	
.LABEL $label$15
	CALL $108($4, ($1 + [15]))
	
.LABEL $label$14
	$2 = *(($0 + [8]))
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$16 }
	*(($0 + [20])) = [0]
	*(($0 = ($0 + [24]))) = (*($0) + [1])
	goto $label$8 
	
.LABEL $label$16
	$6 = ($2 + [-48])
	if ( ($6 <= [10]) ){ goto $label$17 }
	if ( ((uint_32)($2 + [-65]) >= (uint_32)[6]) ){ goto $label$18 }
	$6 = ($2 + [-55])
	goto $label$17 
	
.LABEL $label$18
	$3 = [-1]
	if ( ((uint_32)($2 + [-97]) > (uint_32)[5]) ){ goto $label$1 }
	$6 = ($2 + [-87])
	
.LABEL $label$17
	*(($3 = ($0 + [16]))) = (*($3) + [1])
	*(($3 = ($0 + [20]))) = (*($3) + [1])
	$3 = ($0 + [12])
	if ( (*($3) == 0) ){ goto $label$20 }
	*($3) = [0]
	goto $label$19 
	
.LABEL $label$20
	$2 = *($0)
	$2 = CALL int_32 $2((int_32 *(*($2))))
	*(($0 + [8])) = $2
	$3 = [-1]
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$19
	*($1 + [15]) = $2
	$3 = ($0 + [32])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [36]))) ){ goto $label$22 }
	*($7) = $2
	*($3) = (*($3) + [1])
	goto $label$21 
	
.LABEL $label$22
	CALL $108($4, ($1 + [15]))
	
.LABEL $label$21
	$2 = *(($0 + [8]))
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$23 }
	*(($0 + [20])) = [0]
	*(($0 = ($0 + [24]))) = (*($0) + [1])
	goto $label$8 
	
.LABEL $label$23
	$7 = ($2 + [-48])
	if ( ($7 <= [10]) ){ goto $label$24 }
	if ( ((uint_32)($2 + [-65]) >= (uint_32)[6]) ){ goto $label$25 }
	$7 = ($2 + [-55])
	goto $label$24 
	
.LABEL $label$25
	$3 = [-1]
	if ( ((uint_32)($2 + [-97]) > (uint_32)[5]) ){ goto $label$1 }
	$7 = ($2 + [-87])
	
.LABEL $label$24
	*(($3 = ($0 + [16]))) = (*($3) + [1])
	*(($3 = ($0 + [20]))) = (*($3) + [1])
	$3 = ($0 + [12])
	if ( (*($3) == 0) ){ goto $label$27 }
	*($3) = [0]
	goto $label$26 
	
.LABEL $label$27
	$2 = *($0)
	$2 = CALL int_32 $2((int_32 *(*($2))))
	*(($0 + [8])) = $2
	$3 = [-1]
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$26
	*($1 + [15]) = $2
	$3 = ($0 + [32])
	$8 = *($3)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [36]))) ){ goto $label$29 }
	*($8) = $2
	*($3) = (*($3) + [1])
	goto $label$28 
	
.LABEL $label$29
	CALL $108($4, ($1 + [15]))
	
.LABEL $label$28
	$2 = *(($0 + [8]))
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$7 }
	*(($0 + [20])) = [0]
	*(($0 = ($0 + [24]))) = (*($0) + [1])
	
.LABEL $label$8
	$3 = [-1]
	goto $label$1 
	
.LABEL $label$7
	$0 = ($2 + [-48])
	if ( ($0 <= [10]) ){ goto $label$30 }
	if ( ((uint_32)($2 + [-65]) >= (uint_32)[6]) ){ goto $label$31 }
	$0 = ($2 + [-55])
	goto $label$30 
	
.LABEL $label$31
	$3 = [-1]
	if ( ((uint_32)($2 + [-97]) > (uint_32)[5]) ){ goto $label$1 }
	$0 = ($2 + [-87])
	
.LABEL $label$30
	$3 = ($0 + (($7 << [4]) + (($6 << [8]) + ($5 << [12]))))
	if ( ($3 <= [65536]) ){ goto $label$1 }
	CALL $248([12411], [9181], [2741], [12397])
	
.LABEL $label$2
	CALL $248([12382], [9181], [2715], [12397])
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	(unreachable)
	(unreachable)
	return $3
}

int_32 .FUNC $110 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$1 = ($global$0 - [144])
	$global$0 = $1
	$2 = ($0 + [40])
	if ( (*($0 + [40]) & [1]) ){ goto $label$2 }
	*($2) = [0]
	goto $label$1 
	
.LABEL $label$2
	*(*(($0 + [48]))) = [0]
	*(($0 + [44])) = [0]
	
.LABEL $label$1
	$4 = *($0 + [28])
	*(($3 = ($0 + [32]))) = $4
	$5 = *($0 + [8])
	*($1 + [80]) = $5
	$6 = ($0 + [28])
	if ( ((uint_32)*(($0 + [36])) <= (uint_32)$4) ){ goto $label$4 }
	*($4) = $5
	*($3) = (*($3) + [1])
	goto $label$3 
	
.LABEL $label$4
	CALL $108($6, ($1 + [80]))
	
.LABEL $label$3
	$7 = ($0 + [8])
	if ( ((int_32)*($7) != (int_32)[34]) ){ goto $label$5 }
	$3 = ($0 + [16])
	$5 = ($0 + [20])
	$8 = ($0 + [12])
	$9 = ($0 + [36])
	$10 = ($0 + [32])
	
.LOOP $label$6:
	*($3) = (*($3) + [1])
	*($5) = (*($5) + [1])
	if ( (*($8) == 0) ){ goto $label$54 }
	*($8) = [0]
	$4 = *($7)
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$54
	$4 = *($0)
	$4 = CALL int_32 $4((int_32 *(*($4))))
	*($7) = $4
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$52 }
	
.LABEL $label$53
	*($1 + [80]) = $4
	$11 = *($10)
	if ( ((uint_32)$11 >= (uint_32)*($9)) ){ goto $label$57 }
	*($11) = $4
	*($10) = (*($10) + [1])
	$4 = *($7)
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$57
	CALL $108($6, ($1 + [80]))
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)[10]) ){ goto $label$55 }
	
.LABEL $label$56
	$11 = ($4 + [1])
	if ( ((uint_32)$11 > (uint_32)[245]) ){ goto $label$51 }
	$12 = [4]
	goto $label$52 
	
.LABEL $label$68
	CALL $228($2, int_32(($4 << [24]) >> [24]))
	goto $label$6 
	
.LABEL $label$67
	*($1 + [140]) = [2]
	*($1 + [80 align=4]) = (int_64)820338753664
	*($1 + [136]) = ($1 + [80])
	*($1 + [16]) = *($1 + [136])
	if ( CALL $112($0, ($1 + [16])) ){ goto $label$6 }
	goto $label$9 
	
.LABEL $label$66
	*(($1 + [88])) = (int_64)820338753664
	*($1 + [124]) = [4]
	*($1 + [80 align=4]) = (int_64)820338753664
	*($1 + [120]) = ($1 + [80])
	*($1 + [32]) = *($1 + [120])
	if ( CALL $112($0, ($1 + [32])) ){ goto $label$6 }
	goto $label$9 
	
.LABEL $label$65
	*(($1 + [96])) = *([0] + [12312 align=4])
	*(($1 + [88])) = *([0] + [12304 align=4])
	*($1 + [76]) = [6]
	*($1 + [80]) = *([0] + [12296 align=4])
	*($1 + [72]) = ($1 + [80])
	*($1 + [56]) = *($1 + [72])
	if ( CALL $112($0, ($1 + [56])) ){ goto $label$6 }
	goto $label$9 
	
.LABEL $label$64
	*(($4 = ($0 + [16]))) = (*($4) + [1])
	*(($4 = ($0 + [20]))) = (*($4) + [1])
	$4 = ($0 + [12])
	if ( (*($4) == 0) ){ goto $label$59 }
	*($4) = [0]
	$4 = [92]
	goto $label$58 
	
.LABEL $label$63
	*(($1 + [96])) = *([0] + [12336 align=4])
	*(($1 + [88])) = *([0] + [12328 align=4])
	*($1 + [68]) = [6]
	*($1 + [80]) = *([0] + [12320 align=4])
	*($1 + [64]) = ($1 + [80])
	*($1 + [8]) = *($1 + [64])
	if ( CALL $112($0, ($1 + [8])) ){ goto $label$6 }
	goto $label$9 
	
.LABEL $label$62
	*(($1 + [88])) = (int_64)820338753664
	*($1 + [116]) = [4]
	*($1 + [80 align=4]) = (int_64)682899800192
	*($1 + [112]) = ($1 + [80])
	*($1 + [40]) = *($1 + [112])
	if ( CALL $112($0, ($1 + [40])) ){ goto $label$6 }
	goto $label$9 
	
.LABEL $label$61
	*(($1 + [88])) = (int_64)820338753664
	*($1 + [132]) = [4]
	*($1 + [80 align=4]) = (int_64)820338753696
	*($1 + [128]) = ($1 + [80])
	*($1 + [24]) = *($1 + [128])
	if ( CALL $112($0, ($1 + [24])) ){ goto $label$6 }
	goto $label$9 
	
.LABEL $label$60
	*(($1 + [96])) = *([0] + [12288 align=4])
	*(($1 + [88])) = *([0] + [12280 align=4])
	*($1 + [108]) = [6]
	*($1 + [80]) = *([0] + [12272 align=4])
	*($1 + [104]) = ($1 + [80])
	*($1 + [48]) = *($1 + [104])
	if ( CALL $112($0, ($1 + [48])) ){ goto $label$6 }
	goto $label$9 
	
.LABEL $label$59
	$4 = *($0)
	$4 = CALL int_32 $4((int_32 *(*($4))))
	*(($0 + [8])) = $4
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$17 }
	
.LABEL $label$58
	*($1 + [80]) = $4
	$11 = ($0 + [32])
	$12 = *($11)
	if ( ((uint_32)$12 >= (uint_32)*(($0 + [36]))) ){ goto $label$70 }
	*($12) = $4
	*($11) = (*($11) + [1])
	goto $label$69 
	
.LABEL $label$70
	CALL $108($6, ($1 + [80]))
	
.LABEL $label$69
	$11 = *(($0 + [8]))
	$4 = ($11 + [-34])
	if ( ((uint_32)$4 > (uint_32)[83]) ){ goto $label$18 }
	goto $label$79 
	
.LABEL $label$79
	CALL $228($2, [34])
	goto $label$6 
	
.LABEL $label$78
	CALL $228($2, [9])
	goto $label$6 
	
.LABEL $label$77
	CALL $228($2, [47])
	goto $label$6 
	
.LABEL $label$76
	CALL $228($2, [92])
	goto $label$6 
	
.LABEL $label$75
	CALL $228($2, [8])
	goto $label$6 
	
.LABEL $label$74
	CALL $228($2, [12])
	goto $label$6 
	
.LABEL $label$73
	CALL $228($2, [10])
	goto $label$6 
	
.LABEL $label$72
	CALL $228($2, [13])
	goto $label$6 
	
.LABEL $label$71
	$4 = CALL $113($0)
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$14 }
	$11 = ($4 & [-1024])
	if ( ((int_32)$11 != (int_32)[55296]) ){ goto $label$82 }
	*(($11 = ($0 + [16]))) = (*($11) + [1])
	*(($11 = ($0 + [20]))) = (*($11) + [1])
	$11 = ($0 + [12])
	if ( (*($11) == 0) ){ goto $label$81 }
	*($11) = [0]
	$11 = *(($0 + [8]))
	if ( ((int_32)$11 != (int_32)[-1]) ){ goto $label$80 }
	goto $label$15 
	
.LABEL $label$82
	if ( ((int_32)$11 == (int_32)[56320]) ){ goto $label$13 }
	if ( ((uint_32)$4 >= (uint_32)[1114112]) ){ goto $label$10 }
	goto $label$7 
	
.LABEL $label$81
	$11 = *($0)
	$11 = CALL int_32 $11((int_32 *(*($11))))
	*(($0 + [8])) = $11
	if ( ((int_32)$11 == (int_32)[-1]) ){ goto $label$15 }
	
.LABEL $label$80
	*($1 + [80]) = $11
	$12 = ($0 + [32])
	$13 = *($12)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [36]))) ){ goto $label$84 }
	*($13) = $11
	*($12) = (*($12) + [1])
	goto $label$83 
	
.LABEL $label$84
	CALL $108($6, ($1 + [80]))
	
.LABEL $label$83
	$11 = *(($0 + [8]))
	if ( ((int_32)$11 == (int_32)[10]) ){ goto $label$19 }
	if ( ((int_32)$11 != (int_32)[92]) ){ goto $label$15 }
	*(($11 = ($0 + [16]))) = (*($11) + [1])
	*(($11 = ($0 + [20]))) = (*($11) + [1])
	$11 = ($0 + [12])
	if ( (*($11) == 0) ){ goto $label$86 }
	*($11) = [0]
	$11 = [92]
	goto $label$85 
	
.LABEL $label$86
	$11 = *($0)
	$11 = CALL int_32 $11((int_32 *(*($11))))
	*(($0 + [8])) = $11
	if ( ((int_32)$11 == (int_32)[-1]) ){ goto $label$15 }
	
.LABEL $label$85
	*($1 + [80]) = $11
	$12 = ($0 + [32])
	$13 = *($12)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [36]))) ){ goto $label$88 }
	*($13) = $11
	*($12) = (*($12) + [1])
	goto $label$87 
	
.LABEL $label$88
	CALL $108($6, ($1 + [80]))
	
.LABEL $label$87
	$11 = *(($0 + [8]))
	if ( ((int_32)$11 == (int_32)[10]) ){ goto $label$16 }
	if ( ((int_32)$11 != (int_32)[117]) ){ goto $label$15 }
	$11 = CALL $113($0)
	if ( ((int_32)$11 == (int_32)[-1]) ){ goto $label$12 }
	if ( ((int_32)($11 & [-1024]) != (int_32)[56320]) ){ goto $label$11 }
	$4 = ((($4 << [10]) + $11) + [-56613888])
	if ( ($4 <= [1114112]) ){ goto $label$7 }
	goto $label$10 
	
.LABEL $label$55
	*($0 + [52]) = [10658]
	*(($0 + [20])) = [0]
	*(($4 = ($0 + [24]))) = (*($4) + [1])
	goto $label$9 
	
.LABEL $label$52
	*($0 + [52]) = [9586]
	goto $label$9 
	
.LABEL $label$51
	*($0 + [52]) = [12344]
	goto $label$9 
	
.LABEL $label$50
	*($0 + [52]) = [11983]
	goto $label$9 
	
.LABEL $label$49
	*($0 + [52]) = [10064]
	goto $label$9 
	
.LABEL $label$48
	*($0 + [52]) = [10808]
	goto $label$9 
	
.LABEL $label$47
	*($0 + [52]) = [11619]
	goto $label$9 
	
.LABEL $label$46
	*($0 + [52]) = [10210]
	goto $label$9 
	
.LABEL $label$45
	*($0 + [52]) = [11036]
	goto $label$9 
	
.LABEL $label$44
	*($0 + [52]) = [11254]
	goto $label$9 
	
.LABEL $label$43
	*($0 + [52]) = [11837]
	goto $label$9 
	
.LABEL $label$42
	*($0 + [52]) = [12055]
	goto $label$9 
	
.LABEL $label$41
	*($0 + [52]) = [10736]
	goto $label$9 
	
.LABEL $label$40
	*($0 + [52]) = [10886]
	goto $label$9 
	
.LABEL $label$39
	*($0 + [52]) = [11327]
	goto $label$9 
	
.LABEL $label$38
	*($0 + [52]) = [11400]
	goto $label$9 
	
.LABEL $label$37
	*($0 + [52]) = [12127]
	goto $label$9 
	
.LABEL $label$36
	*($0 + [52]) = [9918]
	goto $label$9 
	
.LABEL $label$35
	*($0 + [52]) = [9991]
	goto $label$9 
	
.LABEL $label$34
	*($0 + [52]) = [10502]
	goto $label$9 
	
.LABEL $label$33
	*($0 + [52]) = [10580]
	goto $label$9 
	
.LABEL $label$32
	*($0 + [52]) = [10964]
	goto $label$9 
	
.LABEL $label$31
	*($0 + [52]) = [11108]
	goto $label$9 
	
.LABEL $label$30
	*($0 + [52]) = [11473]
	goto $label$9 
	
.LABEL $label$29
	*($0 + [52]) = [11692]
	goto $label$9 
	
.LABEL $label$28
	*($0 + [52]) = [11765]
	goto $label$9 
	
.LABEL $label$27
	*($0 + [52]) = [11910]
	goto $label$9 
	
.LABEL $label$26
	*($0 + [52]) = [12199]
	goto $label$9 
	
.LABEL $label$25
	*($0 + [52]) = [10137]
	goto $label$9 
	
.LABEL $label$24
	*($0 + [52]) = [10283]
	goto $label$9 
	
.LABEL $label$23
	*($0 + [52]) = [10356]
	goto $label$9 
	
.LABEL $label$22
	*($0 + [52]) = [11181]
	goto $label$9 
	
.LABEL $label$21
	*($0 + [52]) = [10429]
	goto $label$9 
	
.LABEL $label$20
	*($0 + [52]) = [11546]
	goto $label$9 
	
.LABEL $label$19
	*(($0 + [20])) = [0]
	*(($4 = ($0 + [24]))) = (*($4) + [1])
	goto $label$15 
	
.LABEL $label$18
	if ( ((int_32)$11 != (int_32)[10]) ){ goto $label$17 }
	*(($0 + [20])) = [0]
	*(($4 = ($0 + [24]))) = (*($4) + [1])
	
.LABEL $label$17
	*($0 + [52]) = [9866]
	goto $label$9 
	
.LABEL $label$16
	*(($0 + [20])) = [0]
	*(($4 = ($0 + [24]))) = (*($4) + [1])
	
.LABEL $label$15
	*($0 + [52]) = [9678]
	goto $label$9 
	
.LABEL $label$14
	*($0 + [52]) = [9624]
	goto $label$9 
	
.LABEL $label$13
	*($0 + [52]) = [9754]
	goto $label$9 
	
.LABEL $label$12
	*($0 + [52]) = [9624]
	goto $label$9 
	
.LABEL $label$11
	*($0 + [52]) = [9678]
	goto $label$9 
	
.LABEL $label$10
	CALL $248([9822], [9181], [2923], [9574])
	
.LABEL $label$9
	$12 = [14]
	
.LABEL $label$8
	$global$0 = ($1 + [144])
	return $12
	
.LABEL $label$7
	if ( ((int_32)$4 > (int_32)[127]) ){ goto $label$89 }
	CALL $228($2, int_32(($4 << [24]) >> [24]))
	goto $label$6 
	
.LABEL $label$89
	if ( ((int_32)$4 > (int_32)[2047]) ){ goto $label$90 }
	CALL $228($2, (uint_32($4 >> [6]) | [-64]))
	CALL $228($2, (($4 & [63]) | [-128]))
	goto $label$6 
	
.LABEL $label$90
	if ( ((int_32)$4 > (int_32)[65535]) ){ goto $label$91 }
	CALL $228($2, (uint_32($4 >> [12]) | [-32]))
	CALL $228($2, ((uint_32($4 >> [6]) & [63]) | [-128]))
	CALL $228($2, (($4 & [63]) | [-128]))
	goto $label$6 
	
.LABEL $label$91
	CALL $228($2, (uint_32($4 >> [18]) | [-16]))
	CALL $228($2, ((uint_32($4 >> [12]) & [63]) | [-128]))
	CALL $228($2, ((uint_32($4 >> [6]) & [63]) | [-128]))
	CALL $228($2, (($4 & [63]) | [-128]))
	goto $label$6 
	
.LABEL $label$5
	CALL $248([9558], [9181], [2803], [9574])
	$11
	$4
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $111 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = *($0 + [8])
	if ( ((int_32)$5 != (int_32)*($1)) ){ goto $label$1 }
	if ( ($2 <= [2]) ){ goto $label$3 }
	$6 = ($0 + [28])
	$7 = ($0 + [16])
	$8 = ($0 + [20])
	$9 = ($0 + [12])
	$10 = ($0 + [8])
	$11 = ($0 + [36])
	$12 = ($0 + [32])
	$13 = ($0 + [24])
	$14 = [1]
	
.LOOP $label$4:
	*($7) = (*($7) + [1])
	*($8) = (*($8) + [1])
	if ( (*($9) == 0) ){ goto $label$7 }
	*($9) = [0]
	$15 = $5
	$5 = [-1]
	if ( ((int_32)$15 != (int_32)[-1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$5 = *($0)
	$15 = CALL int_32 $5((int_32 *(*($5))))
	*($10) = $15
	$5 = [-1]
	if ( ((int_32)$15 == (int_32)[-1]) ){ goto $label$5 }
	
.LABEL $label$6
	*($4 + [15]) = $15
	$5 = *($12)
	if ( ((uint_32)$5 >= (uint_32)*($11)) ){ goto $label$9 }
	*($5) = $15
	*($12) = (*($12) + [1])
	$5 = *($10)
	if ( ((int_32)$5 == (int_32)[10]) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$9
	CALL $108($6, ($4 + [15]))
	$5 = *($10)
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$5 }
	
.LABEL $label$8
	*($8) = [0]
	*($13) = (*($13) + [1])
	$5 = [10]
	
.LABEL $label$5
	if ( ((int_32)$5 != (int_32)*(($1 + $14))) ){ goto $label$2 }
	$14 = ($14 + [1])
	if ( ($14 <= $2) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($4 + [16])
	return $3
	
.LABEL $label$2
	*($0 + [52]) = [9471]
	$global$0 = ($4 + [16])
	return [14]
	
.LABEL $label$1
	CALL $248([9518], [9181], [3775], [9545])
	return (unreachable)
}

void .FUNC $237 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $241($1, $0, [9090])
	CALL $242()
	(unreachable)
}

int_32 .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *(($0 + [8]))
	$4 = *($0 + [4])
	*($2 + [27]) = [0]
	*($2 + [28]) = int_32(($3 - $4) >> [2])
	$3 = *(($0 + [64]))
	if ( ($3 == 0) ){ goto $label$1 }
	$5 = CALL int_32 $3((int_32 ($2 + [28])), (int_32 ($2 + [27])), (int_32 ($0 + [80])), (int_32 *(*($3) + [24])))
	$4 = ($0 + [16])
	$7 = *(($0 + [24]))
	$6 = ($0 + [20])
	$3 = *($6)
	if ( ((int_32)$3 != (int_32)($7 << [5])) ){ goto $label$5 }
	if ( ((int_32)($3 + [1]) <= (int_32)[-1]) ){ goto $label$4 }
	$8 = [2147483647]
	if ( ((uint_32)$3 > (uint_32)[1073741822]) ){ goto $label$6 }
	$7 = ($7 << [6])
	$3 = (($3 + [32]) & [-32])
	$8 = ( $3 ? $7 : ($7 <= $3) )
	
.LABEL $label$6
	CALL $114($4, $8)
	$3 = *(($0 + [20]))
	
.LABEL $label$5
	*($6) = ($3 + [1])
	$4 = (*($4) + (uint_32($3 >> [3]) & [536870908]))
	$3 = ([1] << ($3 & [31]))
	if ( ($5 == 0) ){ goto $label$8 }
	$3 = (*($4) | $3)
	goto $label$7 
	
.LABEL $label$8
	$3 = (*($4) & ((int_32)$3 ^ (int_32)[-1]))
	
.LABEL $label$7
	*($4) = $3
	*($2 + [15]) = [1]
	CALL $139(($2 + [16]), $0, ($2 + [15]), [1])
	$3 = ($0 + [8])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)*(($0 + [12]))) ){ goto $label$9 }
	*($4) = *($2 + [20])
	$0 = (*($3) + [4])
	*($3) = $0
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$9
	CALL $140(($0 + [4]), (($2 + [16]) | [4]))
	$0 = *($3)
	if ( ((int_32)$1 != (int_32)[-1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $245($4)
	
.LABEL $label$3
	$0 = *(($0 + [-4]))
	if ( ($0 == 0) ){ goto $label$2 }
	$3 = [1]
	$0 = *($0)
	if ( ((uint_32)$0 > (uint_32)[2]) ){ goto $label$10 }
	$3 = *((($0 << [2]) + [14368]))
	
.LABEL $label$10
	if ( ($3 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($2 + [32])
	return [1]
	
.LABEL $label$1
	CALL abort()
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $119 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [64])
	$global$0 = $1
	$2 = ($0 + [8])
	$3 = *($2)
	$4 = *(($3 + [-4]))
	if ( ($4 == 0) ){ goto $label$5 }
	$5 = *(($0 + [4]))
	*($1 + [63]) = [1]
	*($1 + [8]) = (int_32(($3 - $5) >> [2]) + [-1])
	$3 = *(($0 + [64]))
	if ( ($3 == 0) ){ goto $label$4 }
	if ( CALL int_32 $3((int_32 ($1 + [8])), (int_32 ($1 + [63])), (int_32 $4), (int_32 *(*($3) + [24]))) ){ goto $label$5 }
	$3 = CALL $141(($1 + [40]), ($0 + [80]))
	CALL $103(*((*(($0 + [8])) + [-4])), $3)
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$8 }
	if ( ((int_32)$4 == (int_32)[2]) ){ goto $label$9 }
	if ( ((int_32)$4 != (int_32)[3]) ){ goto $label$7 }
	if ( (*($3 + [8]) == 0) ){ goto $label$3 }
	$3 = ($3 + [8])
	goto $label$6 
	
.LABEL $label$9
	if ( (*($3 + [8]) == 0) ){ goto $label$2 }
	$3 = ($3 + [8])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($3 + [8]) == 0) ){ goto $label$1 }
	$3 = ($3 + [8])
	goto $label$6 
	
.LABEL $label$7
	$3 = ($3 + [8])
	
.LABEL $label$6
	CALL $38($3, $4)
	
.LABEL $label$5
	$2 = *($2)
	$3 = *(($0 + [4]))
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$11 }
	$4 = ($0 + [20])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$10 }
	*($4) = ($5 + [-1])
	$0 = ($2 + [-4])
	*(($0 + [8])) = $0
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$12 }
	$5 = *(($2 + [-8]))
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((int_32)*($5) != (int_32)[1]) ){ goto $label$12 }
	$2 = *($0)
	$0 = *($5 + [8])
	$4 = ($0 + [4])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$12 }
	
.LOOP $label$14:
	$3 = $2
	if ( ((int_32)*($2 + [32]) == (int_32)[8]) ){ goto $label$13 }
	$0 = *($3 + [4])
	if ( ($0 == 0) ){ goto $label$16 }
	
.LOOP $label$17:
	$2 = $0
	$0 = *($2)
	if ( $0 ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$2 = *($3 + [8])
	if ( ((int_32)*($2) == (int_32)$3) ){ goto $label$15 }
	$3 = ($3 + [8])
	
.LOOP $label$18:
	$0 = *($3)
	$3 = ($0 + [8])
	$2 = *($0 + [8])
	if ( ((int_32)$0 != (int_32)*($2)) ){ goto $label$18 }
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	*(($1 + [32])) = (int_64)-9223372036854775808
	*($1 + [28]) = $3
	*($1 + [24]) = $5
	CALL $142(($1 + [8]), $5, ($1 + [24]))
	
.LABEL $label$12
	$global$0 = ($1 + [64])
	return [1]
	
.LABEL $label$11
	CALL $248([13046], [9181], [4660], [13068])
	
.LABEL $label$10
	CALL $248([12906], [9181], [4661], [13068])
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$2
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$1
	CALL $248([9197], [9181], [13422], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $299 (int_32 $0)
{
	*($0) = [1]
}

int_32 .FUNC $298 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL $295($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

int_32 .FUNC $295 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $294 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [4]) = $0
	*($3 + [44]) = $0
	*($3) = [0]
	*($3 + [76]) = [-1]
	*($3 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL $281($3, (int_64)0)
	$4 = CALL $291($3, $2, [1], (int_64)2147483648)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + ((*($3 + [4]) + *($3 + [120])) - *(($3 + [8]))))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return (CASTING uint_32)(uint_64 $4)
}

int_32 .FUNC $297 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $296 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_64 .FUNC $291 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$17 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$17 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$18:
	$6 = *($5)
	if ( ($6 <= *($4)) ){ goto $label$20 }
	$6 = CALL $282($0)
	if ( ((uint_32)($6 + [-9]) >= (uint_32)[5]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( (($6 + [-9]) <= [5]) ){ goto $label$18 }
	
.LABEL $label$19
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$18 }
	$5 = ((int_32)$6 == (int_32)[45])
	if ( $5 ){ goto $label$21 }
	if ( ((int_32)$6 != (int_32)[43]) ){ goto $label$16 }
	
.LABEL $label$21
	$7 = ( [-1] ? [0] : $5 )
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$15 }
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$17
	*(CALL $247()) = [22]
	return (int_64)0
	
.LABEL $label$16
	$7 = [0]
	if ( ((int_32)($1 | [16]) == (int_32)[16]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$6 = CALL $282($0)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$13 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$12 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$11 
	
.LABEL $label$13
	$1 = ( $1 ? [10] : $1 )
	if ( ((uint_32)$1 > (uint_32)*(($6 + [25585]))) ){ goto $label$10 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$22 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$22
	CALL $281($0, (int_64)0)
	*(CALL $247()) = [22]
	return (int_64)0
	
.LABEL $label$12
	$6 = CALL $282($0)
	
.LABEL $label$11
	if ( ((int_32)($6 | [32]) != (int_32)[120]) ){ goto $label$23 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$9 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$8 
	
.LABEL $label$23
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$6 }
	$8 = (int_64)0
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$5 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$25:
	$6 = ((int_32)$5 * (int_32)[10])
	$1 = *($2)
	if ( ((uint_32)$1 >= (uint_32)*($9)) ){ goto $label$27 }
	*($2) = ($1 + [1])
	$5 = ($6 + $4)
	$6 = *($1)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 <= (uint_32)[9]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$27
	$5 = ($6 + $4)
	$6 = CALL $282($0)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$24 }
	
.LABEL $label$26
	if ( ($5 <= [429496729]) ){ goto $label$25 }
	
.LABEL $label$24
	$8 = (CASTING uint_64)(uint_32 $5)
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$1 = [10]
	$11 = (CASTING int_64)(int_32 $4)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$28:
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$30 }
	*($4) = ($6 + [1])
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = *($6)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 <= (uint_32)[9]) ){ goto $label$29 }
	goto $label$4 
	
.LABEL $label$30
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = CALL $282($0)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$4 }
	
.LABEL $label$29
	if ( ((uint_64)$8 >= (uint_64)(int_64)1844674407370955162) ){ goto $label$4 }
	$11 = (CASTING int_64)(int_32 $5)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 <= (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$28 }
	goto $label$3 
	
.LABEL $label$9
	$6 = CALL $282($0)
	
.LABEL $label$8
	$1 = [16]
	if ( (*(($6 + [25585])) <= [16]) ){ goto $label$6 }
	$6 = *(($0 + [104]))
	if ( ($6 == 0) ){ goto $label$31 }
	*(($5 = ($0 + [4]))) = (*($5) + [-1])
	
.LABEL $label$31
	if ( ($2 == 0) ){ goto $label$5 }
	$8 = (int_64)0
	if ( ($6 == 0) ){ goto $label$1 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	return (int_64)0
	
.LABEL $label$7
	$1 = [8]
	
.LABEL $label$6
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$32 }
	$8 = (int_64)0
	$5 = *(($6 + [25585]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$33 }
	$4 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$35:
	$4 = ($5 + ((int_32)$4 * (int_32)$1))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($9)) ){ goto $label$37 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [25585]))
	if ( ((uint_32)$4 <= (uint_32)[119304646]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$6 = CALL $282($0)
	$5 = *(($6 + [25585]))
	if ( ((uint_32)$4 > (uint_32)[119304646]) ){ goto $label$34 }
	
.LABEL $label$36
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$35 }
	
.LABEL $label$34
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$33
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$12 = (CASTING uint_64)(uint_32 $1)
	$13 = ((uint_64)(int_64)-1 / (uint_64)$12)
	if ( ((uint_64)$8 > (uint_64)$13) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$38:
	$11 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$10 = ((int_64)$8 * (int_64)$12)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$40 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$39 
	
.LABEL $label$40
	$6 = CALL $282($0)
	
.LABEL $label$39
	$8 = ((int_64)$10 + (int_64)$11)
	$5 = *(($6 + [25585]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$13) ){ goto $label$38 }
	goto $label$3 
	
.LABEL $label$32
	$9 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [8251]))
	$8 = (int_64)0
	$5 = *(($6 + [25585]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$41 }
	$4 = [0]
	$14 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$43:
	$4 = ($5 | ($4 << $9))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($14)) ){ goto $label$45 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [25585]))
	if ( ((uint_32)$4 <= (uint_32)[134217727]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$45
	$6 = CALL $282($0)
	$5 = *(($6 + [25585]))
	if ( ((uint_32)$4 > (uint_32)[134217727]) ){ goto $label$42 }
	
.LABEL $label$44
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$43 }
	
.LABEL $label$42
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$41
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$11 = (CASTING uint_64)(uint_32 $9)
	$12 = (uint_64)(int_64)-1 >> (uint_64)$11
	if ( (uint_64)($12) <= $8) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$46:
	$8 = ((int_64)$8 << (int_64)$11)
	$10 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$48 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$47 
	
.LABEL $label$48
	$6 = CALL $282($0)
	
.LABEL $label$47
	$8 = ((int_64)$8 | (int_64)$10)
	$5 = *(($6 + [25585]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$12) ){ goto $label$46 }
	goto $label$3 
	
.LABEL $label$5
	CALL $281($0, (int_64)0)
	return (int_64)0
	
.LABEL $label$4
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((uint_32)$1 <= (uint_32)*(($6 + [25585]))) ){ goto $label$2 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$50:
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*($4)) ){ goto $label$51 }
	*($5) = ($6 + [1])
	if ( ((uint_32)$1 > (uint_32)*((*($6) + [25585]))) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	if ( ((uint_32)$1 > (uint_32)*((CALL $282($0) + [25585]))) ){ goto $label$50 }
	
.LABEL $label$49
	*(CALL $247()) = [34]
	$7 = ( $7 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$8 = $3
	
.LABEL $label$2
	if ( (*(($0 + [104])) == 0) ){ goto $label$52 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$52
	if ( (uint_64)($8 <= $3) ){ goto $label$53 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$54 }
	if ( $7 ){ goto $label$54 }
	*(CALL $247()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$54
	if ( ((uint_64)$8 <= (uint_64)$3) ){ goto $label$53 }
	*(CALL $247()) = [34]
	return $3
	
.LABEL $label$53
	$10 = (CASTING int_64)(int_32 $7)
	$8 = (int_64))(((int_64)$8 ^ (int_64)$10) - $10)
	
.LABEL $label$1
	return $8
}

int_64 .FUNC $290 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	float_64 $6
	$2 = ($global$0 - [160])
	$global$0 = $2
	CALL memset(($2 + [16]), [0], [144])
	*($2 + [24]) = [-1]
	*($2 + [20]) = $0
	*($2 + [60]) = $0
	*($2 + [92]) = [-1]
	CALL $281(($2 + [16]), (int_64)0)
	CALL $288($2, ($2 + [16]), [1], [1])
	$3 = *($2 + [8])
	$4 = *($2)
	if ( ($1 == 0) ){ goto $label$1 }
	$5 = ((int_64)*($2 + [136]) + (int_64)(CASTING int_64)(int_32 (*($2 + [20]) - *($2 + [24]))))
	*($1) = ( $0 ? ($0 + (CASTING uint_32)(uint_64 $5)) : (int_64)($5 == 0) )
	
.LABEL $label$1
	$6 = CALL __trunctfdf2($4, $3)
	$global$0 = ($2 + [160])
	return $6
}

int_64 .FUNC $293 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [4]) = $0
	*($3 + [44]) = $0
	*($3) = [0]
	*($3 + [76]) = [-1]
	*($3 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL $281($3, (int_64)0)
	$4 = CALL $291($3, $2, [1], (int_64)-9223372036854775808)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + ((*($3 + [4]) + *($3 + [120])) - *(($3 + [8]))))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return $4
}

int_64 .FUNC $292 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [4]) = $0
	*($3 + [44]) = $0
	*($3) = [0]
	*($3 + [76]) = [-1]
	*($3 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL $281($3, (int_64)0)
	$4 = CALL $291($3, $2, [1], (int_64)-1)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + ((*($3 + [4]) + *($3 + [120])) - *(($3 + [8]))))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return $4
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8782])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $303($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $4)
	*(($5 = CALL _Znwj([64])) + [24]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [40])
	CALL $89(($3 + [40]), ($3 + [32]))
	*($5 + [52]) = $1
	*($3 + [32]) = $5
	$6 = *($5)
	*($3 + [40]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [32]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $83(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $306($2)
	
.LABEL $label$6
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [64])
	return $5
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8782])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $303($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $4)
	*(($5 = CALL _Znwj([72])) + [16]) = [0]
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [56]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [24])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [48])
	CALL $86(($3 + [40]), ($3 + [32]))
	*($5 + [60]) = $1
	*($3 + [32]) = $5
	$6 = *($5)
	*($3 + [40]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [32]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $87(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $306($2)
	
.LABEL $label$6
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($1 + [16])))
	
.LABEL $label$10
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $235 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$3 = CALL $297($1)
	$5 = ($3 + $4)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$5 > (uint_32)[10]) ){ goto $label$7 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$6 = (($5 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($0) = ($6 | [1])
	*(($0 + [8])) = $5
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL memcpy($5, $1, $3)
	
.LABEL $label$5
	*(($5 + $3)) = [0]
	$3 = ($2 + [1])
	$5 = (*($2) & [1])
	$2 = *($2 + [8])
	$6 = *($0)
	$7 = ($6 & [1])
	if ( $7 ){ goto $label$9 }
	$1 = [10]
	$3 = ( $2 ? $3 : $5 )
	$2 = uint_32($6 >> [1])
	if ( (([10] - $2) <= $4) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$9
	$3 = ( $2 ? $3 : $5 )
	$2 = *(($0 + [4]))
	$1 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($1 - $2) >= (uint_32)$4) ){ goto $label$3 }
	
.LABEL $label$8
	CALL $223($0, $1, (($2 + $4) - $1), $2, $2, [0], $4, $3)
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	if ( ($4 == 0) ){ goto $label$2 }
	$5 = ( *(($0 + [8])) ? ($0 + [1]) : $7 )
	CALL memcpy(($5 + $2), $3, $4)
	$2 = ($2 + $4)
	if ( (*($0) & [1]) ){ goto $label$1 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return 
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($0 + [4])) = $2
	*(($5 + $2)) = [0]
	(unreachable)
}

void .FUNC $278 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	
.LABEL $label$18
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$16
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$15
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$9
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$8
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$7
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$5
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$3
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$2
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($3, *($1))
	*($0 + [8]) = *(($3 + [8]))
	*($0) = *($3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$4 = *($1)
	*($0 + [8]) = *($1 + [8])
	*($0) = $4
	$global$0 = ($3 + [16])
	$1
}

void .FUNC $21 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [48])
	$global$0 = $1
	CALL require_auth(*($0))
	*(($1 + [32])) = [0]
	*($1 + [16]) = (int_64)-1
	$2 = *($0)
	*($1) = $2
	*($1 + [8]) = $2
	*($1 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($2, $2, (int_64)-7696768201719283712, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $29($1, $0)
	
.LOOP $label$2:
	CALL eosio_assert([1], [13633])
	CALL eosio_assert([1], [13667])
	$0 = [0]
	$4 = CALL db_next_i64(*($3 + [52]), ($1 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $29($1, $4)
	
.LABEL $label$3
	CALL $80($1, $3)
	$3 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	$4 = *($1 + [24])
	if ( ($4 == 0) ){ goto $label$4 }
	$5 = ($1 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL _ZdlPv($3)
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($1 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $4
	
.LABEL $label$5
	*($5) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$4
	$global$0 = ($1 + [48])
}

void .FUNC $20 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [48])
	$global$0 = $1
	CALL require_auth(*($0))
	*(($1 + [32])) = [0]
	*($1 + [16]) = (int_64)-1
	*($1 + [36]) = [0]
	$2 = *($0)
	*($1) = $2
	*($1 + [8]) = $2
	*($1 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($2, $2, (int_64)5002123547857244672, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $74($1, $0)
	
.LOOP $label$2:
	CALL eosio_assert([1], [13633])
	CALL eosio_assert([1], [13667])
	$0 = [0]
	$4 = CALL db_next_i64(*($3 + [44]), ($1 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $74($1, $4)
	
.LABEL $label$3
	CALL $81($1, $3)
	$3 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	$4 = *($1 + [24])
	if ( ($4 == 0) ){ goto $label$4 }
	$5 = ($1 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL _ZdlPv($3)
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($1 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $4
	
.LABEL $label$5
	*($5) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$4
	$global$0 = ($1 + [48])
}

void .FUNC $23 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	$5 = ($global$0 - [80])
	$global$0 = $5
	*($5 + [64]) = $4
	*($5 + [72]) = $1
	CALL require_auth(*($0))
	*(($5 + [56])) = [0]
	*($5 + [40]) = (int_64)-1
	*($5 + [48]) = (int_64)0
	$4 = *($0 + [8])
	*($5 + [24]) = $4
	*($5 + [32]) = $4
	$6 = CALL db_find_i64($4, $4, (int_64)-6031097805525745664, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $28(($5 + [24]), $6)
	CALL eosio_assert(((int_32)*($6 + [56]) == (int_32)($5 + [24])), [8731])
	$4 = *($0)
	*($5 + [12]) = $2
	*($5 + [16]) = $3
	*($5 + [8]) = ($5 + [72])
	*($5 + [20]) = ($5 + [64])
	CALL eosio_assert([1], [8871])
	CALL $41(($5 + [24]), $6, $4, ($5 + [8]))
	$3 = *($5 + [48])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0)
	*($5 + [12]) = $2
	*($5 + [16]) = $3
	*($5 + [8]) = ($5 + [72])
	*($5 + [20]) = ($5 + [64])
	CALL $42($5, ($5 + [24]), $4, ($5 + [8]))
	$3 = *($5 + [48])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($5 + [52])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*(($2 + [16])))
	
.LABEL $label$8
	CALL _ZdlPv($2)
	
.LABEL $label$7
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($5 + [48]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $3
	
.LABEL $label$4
	*($6) = $3
	CALL _ZdlPv($0)
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$1
	$global$0 = ($5 + [80])
}

void .FUNC $22 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = ($global$0 - [144])
	$global$0 = $5
	*($5 + [128]) = $1
	*($5 + [136]) = $2
	*($5 + [120]) = $3
	*($5 + [112]) = $4
	CALL require_auth(*($0))
	$6 = [0]
	*((($5 + [72]) + [32])) = [0]
	*($5 + [88]) = (int_64)-1
	*($5 + [96]) = (int_64)0
	*($5 + [108]) = [0]
	$4 = *($0 + [8])
	*($5 + [72]) = $4
	*($5 + [80]) = $4
	$7 = CALL db_find_i64($4, $4, (int_64)5002123547857244672, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $74(($5 + [72]), $7)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($5 + [72])), [8731])
	$4 = *($0)
	*($5 + [36]) = ($5 + [136])
	*($5 + [32]) = ($5 + [128])
	*($5 + [40]) = ($5 + [120])
	*($5 + [44]) = ($5 + [112])
	CALL eosio_assert([1], [8871])
	CALL $75(($5 + [72]), $6, $4, ($5 + [32]))
	$7 = *($5 + [96])
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*((($5 + [32]) + [32])) = [0]
	*($5 + [48]) = (int_64)-1
	*($5 + [56]) = (int_64)0
	*($5 + [68]) = [0]
	$4 = *($0)
	*($5 + [32]) = $4
	*($5 + [40]) = $4
	$7 = CALL db_find_i64($4, $4, (int_64)5002113041930367488, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = CALL $76(($5 + [32]), $7)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($5 + [32])), [8731])
	
.LABEL $label$4
	$7 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($7, [13596])
	$4 = *($0)
	*($5 + [20]) = ($5 + [136])
	*($5 + [16]) = ($5 + [128])
	*($5 + [24]) = ($5 + [120])
	*($5 + [28]) = ($5 + [112])
	CALL $77(($5 + [8]), ($5 + [72]), $4, ($5 + [16]))
	CALL eosio_assert($7, [13633])
	CALL eosio_assert($7, [13667])
	$0 = CALL db_next_i64(*($6 + [44]), ($5 + [16]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	CALL $76(($5 + [32]), $0)
	
.LABEL $label$5
	CALL $78(($5 + [32]), $6)
	$7 = *($5 + [56])
	if ( ($7 == 0) ){ goto $label$6 }
	$8 = ($5 + [60])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$8 }
	
.LOOP $label$9:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$10 }
	CALL _ZdlPv($6)
	
.LABEL $label$10
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$9 }
	$0 = *(($5 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$0 = $7
	
.LABEL $label$7
	*($8) = $7
	CALL _ZdlPv($0)
	
.LABEL $label$6
	$7 = *($5 + [96])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($5 + [100])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$12 }
	
.LOOP $label$13:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$14 }
	CALL _ZdlPv($6)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$13 }
	$0 = *(($5 + [96]))
	goto $label$11 
	
.LABEL $label$12
	$0 = $7
	
.LABEL $label$11
	*($8) = $7
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($5 + [144])
}

void .FUNC $25 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_64 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$7 = ($global$0 - [144])
	$global$0 = $7
	*($7 + [128]) = $1
	*($7 + [136]) = $5
	*($7 + [120]) = $2
	CALL require_auth(*($0))
	*((($7 + [80]) + [32])) = [0]
	*($7 + [96]) = (int_64)-1
	*($7 + [104]) = (int_64)0
	*($7 + [116]) = [0]
	$2 = *($0)
	*($7 + [80]) = $2
	*($7 + [88]) = $2
	$8 = [0]
	$9 = CALL db_find_i64($2, $2, (int_64)4986991444846706688, $3)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $63(($7 + [80]), $9)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)($7 + [80])), [8731])
	$1 = *($7 + [128])
	$5 = *($7 + [136])
	
.LABEL $label$1
	$9 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($9, [13845])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)$5), [13868])
	*((($7 + [40]) + [32])) = [0]
	*($7 + [56]) = (int_64)-1
	*($7 + [64]) = (int_64)0
	$2 = *($0)
	*($7 + [40]) = $2
	*($7 + [48]) = $2
	$10 = CALL db_find_i64($2, $2, (int_64)4229853266458443776, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert(((int_32)*(CALL $64(($7 + [40]), $10) + [120]) == (int_32)($7 + [40])), [8731])
	$9 = *($7 + [64])
	if ( $9 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$2 = *($0)
	*($7 + [28]) = $4
	*($7 + [32]) = $6
	*($7 + [20]) = ($7 + [120])
	*($7 + [16]) = ($7 + [128])
	*($7 + [24]) = ($7 + [136])
	CALL $65(($7 + [8]), ($7 + [40]), $2, ($7 + [16]))
	CALL eosio_assert($9, [13633])
	CALL eosio_assert($9, [13667])
	$0 = CALL db_next_i64(*($8 + [28]), ($7 + [16]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	CALL $63(($7 + [80]), $0)
	
.LABEL $label$5
	CALL $66(($7 + [80]), $8)
	$9 = *($7 + [64])
	if ( ($9 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$10 = ($7 + [68])
	$0 = *($10)
	if ( ((int_32)$0 == (int_32)$9) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$8 = *($0)
	*($0) = [0]
	if ( ($8 == 0) ){ goto $label$9 }
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($8 + [40])))
	
.LABEL $label$10
	CALL _ZdlPv($8)
	
.LABEL $label$9
	if ( ((int_32)$9 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($7 + [64]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $9
	
.LABEL $label$6
	*($10) = $9
	CALL _ZdlPv($0)
	
.LABEL $label$2
	$9 = *($7 + [104])
	if ( ($9 == 0) ){ goto $label$11 }
	$10 = ($7 + [108])
	$0 = *($10)
	if ( ((int_32)$0 == (int_32)$9) ){ goto $label$13 }
	
.LOOP $label$14:
	$0 = ($0 + [-24])
	$8 = *($0)
	*($0) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	CALL _ZdlPv($8)
	
.LABEL $label$15
	if ( ((int_32)$9 != (int_32)$0) ){ goto $label$14 }
	$0 = *(($7 + [104]))
	goto $label$12 
	
.LABEL $label$13
	$0 = $9
	
.LABEL $label$12
	*($10) = $9
	CALL _ZdlPv($0)
	
.LABEL $label$11
	$global$0 = ($7 + [144])
}

int_32 .FUNC $24 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [176])
	$global$0 = $3
	*(($4 = $3) + [120]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $303($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [88])) = [0]
	*(($4 + [104])) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	*($4 + [160]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $39(($4 + [24]), ($4 + [160]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	$3 = *($3)
	*((($4 + [128]) + [8])) = $3
	*(($6 = (($4 + [144]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [144]) = $7
	*($4 + [128]) = $7
	$3 = *($6)
	*((($4 + [160]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [144])
	*($4 + [40]) = $0
	*($4 + [160]) = $0
	*($4 + [164]) = ($4 + [120])
	*($4 + [160]) = ($4 + [24])
	CALL $40(($4 + [160]), ($4 + [72]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [80]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $306($2)
	$2 = [1]
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [88])))
	$global$0 = ($4 + [176])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [176])
	return $2
}

void .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $3) > (uint_32)[7]), [8805])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*(($0 + [24])) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $52(*($1), ($0 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $26 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [208])
	$global$0 = $3
	*(($4 = $3) + [152]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $303($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [96])) = [0]
	*(($4 + [136])) = (int_64)0
	*(($4 + [128])) = (int_64)0
	*(($4 + [120])) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $5)
	*($4 + [192]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $61(($4 + [16]), ($4 + [192]))
	*(($3 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	$3 = *($3)
	*((($4 + [160]) + [8])) = $3
	*(($6 = (($4 + [176]) + [8]))) = $3
	$7 = *($4)
	*($4 + [176]) = $7
	*($4 + [160]) = $7
	$3 = *($6)
	*((($4 + [192]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [176])
	*($4 + [32]) = $0
	*($4 + [192]) = $0
	*($4 + [196]) = ($4 + [152])
	*($4 + [192]) = ($4 + [16])
	CALL $62(($4 + [192]), ($4 + [64]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [88]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $306($2)
	$2 = [1]
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [96])))
	$global$0 = ($4 + [208])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [208])
	return $2
}

int_32 .FUNC $232 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$3 }
	$5 = uint_32($3 >> [1])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0 + [4])
	if ( ($5 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $4 ){ goto $label$6 }
	$6 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$6 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $4 ? $2 : ($4 <= $2) )
	$4 = ($5 - $1)
	$4 = ($4 - $2)
	if ( ($4 == 0) ){ goto $label$7 }
	$1 = ($6 + $1)
	CALL memmove($1, ($1 + $2), $4)
	$3 = *($0)
	
.LABEL $label$7
	$2 = ($5 - $2)
	if ( ($3 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($6 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $300 (int_32 $0)
{
	*($0) = [0]
}

int_32 .FUNC $280 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = [-1]
	if ( CALL $279($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($1 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$2 = *($1 + [15])
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

void .FUNC $101 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = CALL $297([13272])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$16 }
	*($0) = ($5 << [1])
	$6 = ($0 + [1])
	if ( $5 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $6
	*($0 + [4]) = $5
	
.LABEL $label$15
	CALL memcpy($6, [13272], $5)
	
.LABEL $label$14
	*(($6 + $5)) = [0]
	$5 = *($3)
	if ( (( *($3 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ) == 0) ){ goto $label$17 }
	CALL $235(($4 + [64]), [13286], $3)
	$5 = CALL $227(($4 + [64]), [13301])
	$6 = ($5 + [8])
	*(($3 = (($4 + [80]) + [8]))) = *($6)
	*($4 + [80]) = *($5)
	*($5) = (int_64)0
	*($6) = [0]
	$5 = *($4 + [80])
	$6 = ($5 & [1])
	CALL $229($0, ( *($3) ? (($4 + [80]) | [1]) : $6 ), ( *($4 + [84]) ? uint_32($5 >> [1]) : $6 ))
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*($3))
	
.LABEL $label$18
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$17 }
	CALL _ZdlPv(*($4 + [72]))
	
.LABEL $label$17
	CALL $227($0, [13303])
	$5 = *($1 + [24])
	if ( ((int_32)$5 != (int_32)[14]) ){ goto $label$27 }
	*(($4 + [40])) = [0]
	*($4 + [32]) = (int_64)0
	$6 = *(($1 + [84]))
	$5 = CALL $297($6)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$26 }
	*($4 + [32]) = ($5 << [1])
	$3 = (($4 + [32]) | [1])
	if ( $5 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$3 = [13505]
	if ( ((uint_32)$5 > (uint_32)[16]) ){ goto $label$28 }
	$3 = *((($5 << [2]) + [14224]))
	
.LABEL $label$28
	*(($4 + [72])) = [0]
	*($4 + [64]) = (int_64)0
	$5 = CALL $297($3)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$23 }
	*($4 + [64]) = ($5 << [1])
	$1 = (($4 + [64]) | [1])
	if ( $5 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$26
	$7 = (($5 + [16]) & [-16])
	$3 = CALL _Znwj($7)
	*($4 + [32]) = ($7 | [1])
	*($4 + [40]) = $3
	*($4 + [36]) = $5
	
.LABEL $label$25
	CALL memcpy($3, $6, $5)
	
.LABEL $label$24
	*(($3 + $5)) = [0]
	$5 = CALL $227(($4 + [32]), [13306])
	$3 = ($5 + [8])
	*((($4 + [48]) + [8])) = *($3)
	*($4 + [48]) = *($5)
	*($5) = (int_64)0
	*($3) = [0]
	*($4 + [24]) = [0]
	*($4 + [16]) = (int_64)0
	$1 = *(($1 + [64]))
	$5 = *(($1 + [60]))
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$20 }
	
.LOOP $label$30:
	$3 = *($5)
	if ( ((uint_32)$3 > (uint_32)[31]) ){ goto $label$31 }
	*($4) = $3
	CALL $262(($4 + [80]), [9], [13208], $4)
	CALL $227(($4 + [16]), ($4 + [80]))
	$5 = ($5 + [1])
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	CALL $228(($4 + [16]), int_32(($3 << [24]) >> [24]))
	$5 = ($5 + [1])
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$30 }
	
.LABEL $label$29
	$3 = *(($4 + [24]))
	$1 = *($4 + [20])
	$5 = *($4 + [16])
	goto $label$19 
	
.LABEL $label$23
	$6 = (($5 + [16]) & [-16])
	$1 = CALL _Znwj($6)
	*($4 + [64]) = ($6 | [1])
	*($4 + [72]) = $1
	*($4 + [68]) = $5
	
.LABEL $label$22
	CALL memcpy($1, $3, $5)
	
.LABEL $label$21
	*(($1 + $5)) = [0]
	$5 = CALL $231(($4 + [64]), [0], [13321])
	$1 = ($5 + [8])
	*(($3 = (($4 + [80]) + [8]))) = *($1)
	*($4 + [80]) = *($5)
	*($5) = (int_64)0
	*($1) = [0]
	$5 = *($4 + [80])
	$1 = ($5 & [1])
	CALL $229($0, ( *($3) ? (($4 + [80]) | [1]) : $1 ), ( *($4 + [84]) ? uint_32($5 >> [1]) : $1 ))
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$32 }
	CALL _ZdlPv(*($3))
	
.LABEL $label$32
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*($4 + [72]))
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$20
	$1 = [0]
	$3 = [0]
	$5 = [0]
	
.LABEL $label$19
	$6 = ($5 & [1])
	$5 = CALL $229(($4 + [48]), ( $3 ? (($4 + [16]) | [1]) : $6 ), ( $1 ? uint_32(($5 & [254]) >> [1]) : $6 ))
	$3 = ($5 + [8])
	*((($4 + [64]) + [8])) = *($3)
	*($4 + [64]) = *($5)
	*($5) = (int_64)0
	*($3) = [0]
	$5 = CALL $227(($4 + [64]), [12853])
	$1 = ($5 + [8])
	*(($3 = (($4 + [80]) + [8]))) = *($1)
	*($4 + [80]) = *($5)
	*($5) = (int_64)0
	*($1) = [0]
	$5 = *($4 + [80])
	$3 = ($5 & [1])
	CALL $229($0, ( *($3) ? (($4 + [80]) | [1]) : $3 ), ( *($4 + [84]) ? uint_32($5 >> [1]) : $3 ))
	if ( (*($4 + [80]) & [1]) ){ goto $label$34 }
	if ( (*($4 + [64]) & [1]) ){ goto $label$33 }
	goto $label$10 
	
.LABEL $label$34
	CALL _ZdlPv(*(($4 + [88])))
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$33
	CALL _ZdlPv(*($4 + [72]))
	$5 = [1]
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$13
	CALL $219($0)
	
.LABEL $label$12
	CALL $219(($4 + [32]))
	
.LABEL $label$11
	CALL $219(($4 + [64]))
	
.LABEL $label$10
	$5 = [1]
	if ( (*($4 + [16]) & [1]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( (*($4 + [48]) & $5) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL _ZdlPv(*(($4 + [24])))
	if ( ((*($4 + [48]) & $5) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*($4 + [56]))
	if ( (*($4 + [32]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*($4 + [40]))
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = [13505]
	$5 = ($2 + [-1])
	if ( ((uint_32)$5 > (uint_32)[15]) ){ goto $label$35 }
	$3 = *((($5 << [2]) + [14304]))
	
.LABEL $label$35
	*(($4 + [72])) = [0]
	*($4 + [64]) = (int_64)0
	$5 = CALL $297($3)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$38 }
	*($4 + [64]) = ($5 << [1])
	$1 = (($4 + [64]) | [1])
	if ( $5 ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$38
	$6 = (($5 + [16]) & [-16])
	$1 = CALL _Znwj($6)
	*($4 + [64]) = ($6 | [1])
	*($4 + [72]) = $1
	*($4 + [68]) = $5
	
.LABEL $label$37
	CALL memcpy($1, $3, $5)
	
.LABEL $label$36
	*(($1 + $5)) = [0]
	$5 = CALL $231(($4 + [64]), [0], [13333])
	$1 = ($5 + [8])
	*(($3 = (($4 + [80]) + [8]))) = *($1)
	*($4 + [80]) = *($5)
	*($5) = (int_64)0
	*($1) = [0]
	$5 = *($4 + [80])
	$1 = ($5 & [1])
	CALL $229($0, ( *($3) ? (($4 + [80]) | [1]) : $1 ), ( *($4 + [84]) ? uint_32($5 >> [1]) : $1 ))
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$39 }
	CALL _ZdlPv(*($3))
	
.LABEL $label$39
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($4 + [72]))
	
.LABEL $label$2
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $219(($4 + [64]))
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	float_64 $12
	int_32 $13
	int_32 $14
	$2 = ($global$0 - [256])
	$global$0 = $2
	*($2 + [248]) = [0]
	*($2 + [240]) = (int_64)0
	$3 = ($0 + [32])
	$4 = ($0 + [72])
	$5 = ($0 + [96])
	$6 = ($0 + [88])
	$7 = ($0 + [104])
	$8 = ($2 + [248])
	$9 = ($0 + [24])
	$10 = (*($9) + [-1])
	if ( ((uint_32)$10 > (uint_32)[13]) ){ goto $label$89 }
	
.LOOP $label$90:
	goto $label$103 
	
.LABEL $label$103
	*($2 + [224]) = [1]
	CALL $115(($2 + [200]), $1, ($2 + [224]), [0])
	$11 = [1]
	$10 = *($2 + [244])
	if ( $10 ){ goto $label$93 }
	goto $label$1 
	
.LABEL $label$102
	CALL $116(($2 + [200]), $1, $4, [0])
	$11 = [1]
	$10 = *($2 + [244])
	if ( $10 ){ goto $label$93 }
	goto $label$1 
	
.LABEL $label$101
	*($2 + [224]) = [0]
	CALL $117(($2 + [200]), $1, ($2 + [224]), [0])
	$11 = [1]
	$10 = *($2 + [244])
	if ( $10 ){ goto $label$93 }
	goto $label$1 
	
.LABEL $label$100
	$11 = [0]
	if ( (CALL $118($1, [-1]) == 0) ){ goto $label$1 }
	$10 = CALL $92($3)
	*($9) = $10
	if ( ((int_32)$10 != (int_32)[11]) ){ goto $label$92 }
	if ( CALL $119($1) ){ goto $label$94 }
	goto $label$1 
	
.LABEL $label$99
	*($2 + [224]) = [0]
	CALL $115(($2 + [200]), $1, ($2 + [224]), [0])
	$11 = [1]
	$10 = *($2 + [244])
	if ( $10 ){ goto $label$93 }
	goto $label$1 
	
.LABEL $label$98
	*($2 + [200]) = *($5)
	CALL $120(($2 + [224]), $1, ($2 + [200]), [0])
	$11 = [1]
	$10 = *($2 + [244])
	if ( $10 ){ goto $label$93 }
	goto $label$1 
	
.LABEL $label$97
	$12 = *($7)
	if ( ((int_64)((int_64)(CASTING int_64)(float_64 $12) & (int_64)9218868437227405312) == (int_64)9218868437227405312) ){ goto $label$71 }
	*($2 + [200]) = $12
	CALL $121(($2 + [224]), $1, ($2 + [200]), [0])
	$11 = [1]
	$10 = *($2 + [244])
	if ( $10 ){ goto $label$93 }
	goto $label$1 
	
.LABEL $label$96
	*($2 + [200]) = *($6)
	CALL $122(($2 + [224]), $1, ($2 + [200]), [0])
	$11 = [1]
	$10 = *($2 + [244])
	if ( $10 ){ goto $label$93 }
	goto $label$1 
	
.LABEL $label$95
	$11 = [0]
	if ( (CALL $123($1, [-1]) == 0) ){ goto $label$1 }
	$10 = CALL $92($3)
	*($9) = $10
	if ( ((int_32)$10 != (int_32)[10]) ){ goto $label$91 }
	if ( (CALL $124($1) == 0) ){ goto $label$1 }
	
.LABEL $label$94
	$11 = [1]
	$10 = *($2 + [244])
	if ( ($10 == 0) ){ goto $label$1 }
	
.LABEL $label$93
	
.LOOP $label$106:
	$13 = ($10 + [-1])
	$14 = *((*($2 + [240]) + (uint_32($13 >> [3]) & [536870908])))
	$10 = CALL $92($3)
	*($9) = $10
	if ( (($14 & ([1] << ($13 & [31]))) == 0) ){ goto $label$108 }
	if ( ((int_32)$10 == (int_32)[13]) ){ goto $label$105 }
	if ( ((int_32)$10 != (int_32)[10]) ){ goto $label$81 }
	if ( (CALL $124($1) == 0) ){ goto $label$2 }
	$10 = *($2 + [244])
	if ( $10 ){ goto $label$107 }
	goto $label$53 
	
.LABEL $label$108
	if ( ((int_32)$10 == (int_32)[13]) ){ goto $label$104 }
	if ( ((int_32)$10 != (int_32)[11]) ){ goto $label$80 }
	if ( (CALL $119($1) == 0) ){ goto $label$2 }
	$10 = *($2 + [244])
	if ( ($10 == 0) ){ goto $label$52 }
	
.LABEL $label$107
	$10 = ($10 + [-1])
	*($2 + [244]) = $10
	if ( $10 ){ goto $label$106 }
	goto $label$1 
	
.LABEL $label$105
	*($9) = CALL $92($3)
	$10 = (*($9) + [-1])
	if ( ((uint_32)$10 <= (uint_32)[13]) ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$104
	$10 = CALL $92($3)
	*($9) = $10
	if ( ((int_32)$10 != (int_32)[4]) ){ goto $label$73 }
	if ( (CALL $125($1, $4) == 0) ){ goto $label$2 }
	$10 = CALL $92($3)
	*($9) = $10
	if ( ((int_32)$10 != (int_32)[12]) ){ goto $label$72 }
	*($9) = CALL $92($3)
	$10 = (*($9) + [-1])
	if ( ((uint_32)$10 <= (uint_32)[13]) ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$92
	if ( ((int_32)$10 != (int_32)[4]) ){ goto $label$64 }
	if ( (CALL $125($1, $4) == 0) ){ goto $label$1 }
	$10 = CALL $92($3)
	*($9) = $10
	if ( ((int_32)$10 != (int_32)[12]) ){ goto $label$63 }
	$13 = *($8)
	$10 = *($2 + [244])
	if ( ((int_32)$10 != (int_32)($13 << [5])) ){ goto $label$109 }
	if ( ((int_32)($10 + [1]) <= (int_32)[-1]) ){ goto $label$51 }
	$14 = [2147483647]
	if ( ((uint_32)$10 > (uint_32)[1073741822]) ){ goto $label$110 }
	$13 = ($13 << [6])
	$10 = (($10 + [32]) & [-32])
	$14 = ( $10 ? $13 : ($13 <= $10) )
	
.LABEL $label$110
	CALL $114(($2 + [240]), $14)
	$10 = *($2 + [244])
	
.LABEL $label$109
	*($2 + [244]) = ($10 + [1])
	*(($13 = (*($2 + [240]) + (uint_32($10 >> [3]) & [536870908])))) = (*($13) & (rotl((int_32) [-2])))
	*($9) = CALL $92($3)
	$10 = (*($9) + [-1])
	if ( ((uint_32)$10 <= (uint_32)[13]) ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$91
	$13 = *($8)
	$10 = *($2 + [244])
	if ( ((int_32)$10 != (int_32)($13 << [5])) ){ goto $label$111 }
	if ( ((int_32)($10 + [1]) <= (int_32)[-1]) ){ goto $label$50 }
	$14 = [2147483647]
	if ( ((uint_32)$10 > (uint_32)[1073741822]) ){ goto $label$112 }
	$13 = ($13 << [6])
	$10 = (($10 + [32]) & [-32])
	$14 = ( $10 ? $13 : ($13 <= $10) )
	
.LABEL $label$112
	CALL $114(($2 + [240]), $14)
	$10 = *($2 + [244])
	
.LABEL $label$111
	*($2 + [244]) = ($10 + [1])
	*(($13 = (*($2 + [240]) + (uint_32($10 >> [3]) & [536870908])))) = (*($13) | ([1] << ($10 & [31])))
	$10 = (*($9) + [-1])
	if ( ((uint_32)$10 <= (uint_32)[13]) ){ goto $label$90 }
	
.LABEL $label$89
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$14 = *(($0 + [64]))
	$10 = *(($0 + [60]))
	if ( ((int_32)$10 == (int_32)$14) ){ goto $label$113 }
	
.LOOP $label$114:
	$13 = *($10)
	if ( ((uint_32)$13 > (uint_32)[31]) ){ goto $label$115 }
	*($2) = $13
	CALL $262(($2 + [200]), [9], [13208], $2)
	CALL $227(($2 + [224]), ($2 + [200]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$114 }
	goto $label$113 
	
.LABEL $label$115
	CALL $228(($2 + [224]), int_32(($13 << [24]) >> [24]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$114 }
	
.LABEL $label$113
	*((($2 + [184]) + [8])) = *(($0 + [56]))
	*($2 + [184]) = *(($0 + [48]))
	*((($2 + [152]) + [8])) = [0]
	*($2 + [152]) = (int_64)0
	$10 = CALL $297([12793])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$87 }
	*($2 + [152]) = ($10 << [1])
	$13 = (($2 + [152]) | [1])
	if ( $10 ){ goto $label$86 }
	goto $label$85 
	
.LABEL $label$88
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$14 = *(($0 + [64]))
	$10 = *(($0 + [60]))
	if ( ((int_32)$10 == (int_32)$14) ){ goto $label$116 }
	
.LOOP $label$117:
	$13 = *($10)
	if ( ((uint_32)$13 > (uint_32)[31]) ){ goto $label$118 }
	*($2 + [144]) = $13
	CALL $262(($2 + [200]), [9], [13208], ($2 + [144]))
	CALL $227(($2 + [224]), ($2 + [200]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$117 }
	goto $label$116 
	
.LABEL $label$118
	CALL $228(($2 + [224]), int_32(($13 << [24]) >> [24]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$117 }
	
.LABEL $label$116
	*((($2 + [184]) + [8])) = *(($0 + [56]))
	*($2 + [184]) = *(($0 + [48]))
	*((($2 + [152]) + [8])) = [0]
	*($2 + [152]) = (int_64)0
	$10 = CALL $297([12793])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$48 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$84 }
	*($2 + [152]) = ($10 << [1])
	$13 = (($2 + [152]) | [1])
	if ( $10 ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$87
	$14 = (($10 + [16]) & [-16])
	$13 = CALL _Znwj($14)
	*($2 + [152]) = ($14 | [1])
	*($2 + [160]) = $13
	*($2 + [156]) = $10
	
.LABEL $label$86
	CALL memcpy($13, [12793], $10)
	
.LABEL $label$85
	*(($13 + $10)) = [0]
	CALL $101(($2 + [168]), $0, [16], ($2 + [152]))
	CALL $102(($2 + [200]), [101], ($2 + [184]), ($2 + [168]))
	*($1 + [44]) = [1]
	if ( *($1 + [72]) ){ goto $label$47 }
	*($2 + [200]) = [13184]
	CALL $216(($2 + [208]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [168]) & [1]) ){ goto $label$120 }
	$10 = [1]
	if ( (*($2 + [152]) & [1]) ){ goto $label$119 }
	goto $label$4 
	
.LABEL $label$120
	CALL _ZdlPv(*($2 + [176]))
	$10 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$119
	CALL _ZdlPv(*($2 + [160]))
	if ( ((*($2 + [224]) & $10) == 0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$84
	$14 = (($10 + [16]) & [-16])
	$13 = CALL _Znwj($14)
	*($2 + [152]) = ($14 | [1])
	*($2 + [160]) = $13
	*($2 + [156]) = $10
	
.LABEL $label$83
	CALL memcpy($13, [12793], $10)
	
.LABEL $label$82
	*(($13 + $10)) = [0]
	CALL $101(($2 + [168]), $0, [0], ($2 + [152]))
	CALL $102(($2 + [200]), [101], ($2 + [184]), ($2 + [168]))
	*($1 + [44]) = [1]
	if ( *($1 + [72]) ){ goto $label$46 }
	*($2 + [200]) = [13184]
	CALL $216(($2 + [208]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [168]) & [1]) ){ goto $label$122 }
	$10 = [1]
	if ( (*($2 + [152]) & [1]) ){ goto $label$121 }
	goto $label$6 
	
.LABEL $label$122
	CALL _ZdlPv(*($2 + [176]))
	$10 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$121
	CALL _ZdlPv(*($2 + [160]))
	if ( ((*($2 + [224]) & $10) == 0) ){ goto $label$2 }
	goto $label$5 
	
.LABEL $label$81
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$14 = *(($0 + [64]))
	$10 = *(($0 + [60]))
	if ( ((int_32)$10 == (int_32)$14) ){ goto $label$123 }
	
.LOOP $label$124:
	$13 = *($10)
	if ( ((uint_32)$13 > (uint_32)[31]) ){ goto $label$125 }
	*($2 + [80]) = $13
	CALL $262(($2 + [200]), [9], [13208], ($2 + [80]))
	CALL $227(($2 + [224]), ($2 + [200]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$124 }
	goto $label$123 
	
.LABEL $label$125
	CALL $228(($2 + [224]), int_32(($13 << [24]) >> [24]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$124 }
	
.LABEL $label$123
	*((($2 + [184]) + [8])) = *(($0 + [56]))
	*($2 + [184]) = *(($0 + [48]))
	*((($2 + [152]) + [8])) = [0]
	*($2 + [152]) = (int_64)0
	$10 = CALL $297([12893])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$45 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$79 }
	*($2 + [152]) = ($10 << [1])
	$13 = (($2 + [152]) | [1])
	if ( $10 ){ goto $label$78 }
	goto $label$77 
	
.LABEL $label$80
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$14 = *(($0 + [64]))
	$10 = *(($0 + [60]))
	if ( ((int_32)$10 == (int_32)$14) ){ goto $label$126 }
	
.LOOP $label$127:
	$13 = *($10)
	if ( ((uint_32)$13 > (uint_32)[31]) ){ goto $label$128 }
	*($2 + [64]) = $13
	CALL $262(($2 + [200]), [9], [13208], ($2 + [64]))
	CALL $227(($2 + [224]), ($2 + [200]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$127 }
	goto $label$126 
	
.LABEL $label$128
	CALL $228(($2 + [224]), int_32(($13 << [24]) >> [24]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$127 }
	
.LABEL $label$126
	*((($2 + [184]) + [8])) = *(($0 + [56]))
	*($2 + [184]) = *(($0 + [48]))
	*((($2 + [152]) + [8])) = [0]
	*($2 + [152]) = (int_64)0
	$10 = CALL $297([12899])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$41 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$76 }
	*($2 + [152]) = ($10 << [1])
	$13 = (($2 + [152]) | [1])
	if ( $10 ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$79
	$14 = (($10 + [16]) & [-16])
	$13 = CALL _Znwj($14)
	*($2 + [152]) = ($14 | [1])
	*($2 + [160]) = $13
	*($2 + [156]) = $10
	
.LABEL $label$78
	CALL memcpy($13, [12893], $10)
	
.LABEL $label$77
	*(($13 + $10)) = [0]
	CALL $101(($2 + [168]), $0, [10], ($2 + [152]))
	CALL $102(($2 + [200]), [101], ($2 + [184]), ($2 + [168]))
	*($1 + [44]) = [1]
	if ( *($1 + [72]) ){ goto $label$44 }
	*($2 + [200]) = [13184]
	CALL $216(($2 + [208]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [168]) & [1]) ){ goto $label$130 }
	$10 = [1]
	if ( (*($2 + [152]) & [1]) ){ goto $label$129 }
	goto $label$8 
	
.LABEL $label$130
	CALL _ZdlPv(*($2 + [176]))
	$10 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$129
	CALL _ZdlPv(*($2 + [160]))
	if ( ((*($2 + [224]) & $10) == 0) ){ goto $label$2 }
	goto $label$7 
	
.LABEL $label$76
	$14 = (($10 + [16]) & [-16])
	$13 = CALL _Znwj($14)
	*($2 + [152]) = ($14 | [1])
	*($2 + [160]) = $13
	*($2 + [156]) = $10
	
.LABEL $label$75
	CALL memcpy($13, [12899], $10)
	
.LABEL $label$74
	*(($13 + $10)) = [0]
	CALL $101(($2 + [168]), $0, [11], ($2 + [152]))
	CALL $102(($2 + [200]), [101], ($2 + [184]), ($2 + [168]))
	*($1 + [44]) = [1]
	if ( *($1 + [72]) ){ goto $label$40 }
	*($2 + [200]) = [13184]
	CALL $216(($2 + [208]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [168]) & [1]) ){ goto $label$132 }
	$10 = [1]
	if ( (*($2 + [152]) & [1]) ){ goto $label$131 }
	goto $label$10 
	
.LABEL $label$132
	CALL _ZdlPv(*($2 + [176]))
	$10 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$131
	CALL _ZdlPv(*($2 + [160]))
	if ( ((*($2 + [224]) & $10) == 0) ){ goto $label$2 }
	goto $label$9 
	
.LABEL $label$73
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$14 = *(($0 + [64]))
	$10 = *(($0 + [60]))
	if ( ((int_32)$10 == (int_32)$14) ){ goto $label$133 }
	
.LOOP $label$134:
	$13 = *($10)
	if ( ((uint_32)$13 > (uint_32)[31]) ){ goto $label$135 }
	*($2 + [48]) = $13
	CALL $262(($2 + [200]), [9], [13208], ($2 + [48]))
	CALL $227(($2 + [224]), ($2 + [200]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$134 }
	goto $label$133 
	
.LABEL $label$135
	CALL $228(($2 + [224]), int_32(($13 << [24]) >> [24]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$134 }
	
.LABEL $label$133
	*((($2 + [184]) + [8])) = *(($0 + [56]))
	*($2 + [184]) = *(($0 + [48]))
	*((($2 + [152]) + [8])) = [0]
	*($2 + [152]) = (int_64)0
	$10 = CALL $297([12799])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$37 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$70 }
	*($2 + [152]) = ($10 << [1])
	$13 = (($2 + [152]) | [1])
	if ( $10 ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$72
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$14 = *(($0 + [64]))
	$10 = *(($0 + [60]))
	if ( ((int_32)$10 == (int_32)$14) ){ goto $label$136 }
	
.LOOP $label$137:
	$13 = *($10)
	if ( ((uint_32)$13 > (uint_32)[31]) ){ goto $label$138 }
	*($2 + [32]) = $13
	CALL $262(($2 + [200]), [9], [13208], ($2 + [32]))
	CALL $227(($2 + [224]), ($2 + [200]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$137 }
	goto $label$136 
	
.LABEL $label$138
	CALL $228(($2 + [224]), int_32(($13 << [24]) >> [24]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$137 }
	
.LABEL $label$136
	*((($2 + [184]) + [8])) = *(($0 + [56]))
	*($2 + [184]) = *(($0 + [48]))
	*((($2 + [152]) + [8])) = [0]
	*($2 + [152]) = (int_64)0
	$10 = CALL $297([12810])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$36 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$67 }
	*($2 + [152]) = ($10 << [1])
	$13 = (($2 + [152]) | [1])
	if ( $10 ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$71
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$14 = *(($0 + [64]))
	$10 = *(($0 + [60]))
	if ( ((int_32)$10 == (int_32)$14) ){ goto $label$62 }
	
.LOOP $label$140:
	$13 = *($10)
	if ( ((uint_32)$13 > (uint_32)[31]) ){ goto $label$141 }
	*($2 + [128]) = $13
	CALL $262(($2 + [200]), [9], [13208], ($2 + [128]))
	CALL $227(($2 + [224]), ($2 + [200]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$140 }
	goto $label$139 
	
.LABEL $label$141
	CALL $228(($2 + [224]), int_32(($13 << [24]) >> [24]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$140 }
	
.LABEL $label$139
	$10 = *(($0 + [64]))
	$13 = *(($0 + [60]))
	*($2 + [160]) = [0]
	*($2 + [152]) = (int_64)0
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$61 }
	goto $label$60 
	
.LABEL $label$70
	$14 = (($10 + [16]) & [-16])
	$13 = CALL _Znwj($14)
	*($2 + [152]) = ($14 | [1])
	*($2 + [160]) = $13
	*($2 + [156]) = $10
	
.LABEL $label$69
	CALL memcpy($13, [12799], $10)
	
.LABEL $label$68
	*(($13 + $10)) = [0]
	CALL $101(($2 + [168]), $0, [4], ($2 + [152]))
	CALL $102(($2 + [200]), [101], ($2 + [184]), ($2 + [168]))
	*($1 + [44]) = [1]
	if ( *($1 + [72]) ){ goto $label$35 }
	*($2 + [200]) = [13184]
	CALL $216(($2 + [208]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [168]) & [1]) ){ goto $label$143 }
	$10 = [1]
	if ( (*($2 + [152]) & [1]) ){ goto $label$142 }
	goto $label$12 
	
.LABEL $label$143
	CALL _ZdlPv(*($2 + [176]))
	$10 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$12 }
	
.LABEL $label$142
	CALL _ZdlPv(*($2 + [160]))
	if ( ((*($2 + [224]) & $10) == 0) ){ goto $label$2 }
	goto $label$11 
	
.LABEL $label$67
	$14 = (($10 + [16]) & [-16])
	$13 = CALL _Znwj($14)
	*($2 + [152]) = ($14 | [1])
	*($2 + [160]) = $13
	*($2 + [156]) = $10
	
.LABEL $label$66
	CALL memcpy($13, [12810], $10)
	
.LABEL $label$65
	*(($13 + $10)) = [0]
	CALL $101(($2 + [168]), $0, [12], ($2 + [152]))
	CALL $102(($2 + [200]), [101], ($2 + [184]), ($2 + [168]))
	*($1 + [44]) = [1]
	if ( *($1 + [72]) ){ goto $label$34 }
	*($2 + [200]) = [13184]
	CALL $216(($2 + [208]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [168]) & [1]) ){ goto $label$145 }
	$10 = [1]
	if ( (*($2 + [152]) & [1]) ){ goto $label$144 }
	goto $label$14 
	
.LABEL $label$145
	CALL _ZdlPv(*($2 + [176]))
	$10 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$144
	CALL _ZdlPv(*($2 + [160]))
	if ( ((*($2 + [224]) & $10) == 0) ){ goto $label$2 }
	goto $label$13 
	
.LABEL $label$64
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$14 = *(($0 + [64]))
	$10 = *(($0 + [60]))
	if ( ((int_32)$10 == (int_32)$14) ){ goto $label$146 }
	
.LOOP $label$147:
	$13 = *($10)
	if ( ((uint_32)$13 > (uint_32)[31]) ){ goto $label$148 }
	*($2 + [16]) = $13
	CALL $262(($2 + [200]), [9], [13208], ($2 + [16]))
	CALL $227(($2 + [224]), ($2 + [200]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$147 }
	goto $label$146 
	
.LABEL $label$148
	CALL $228(($2 + [224]), int_32(($13 << [24]) >> [24]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$147 }
	
.LABEL $label$146
	*((($2 + [184]) + [8])) = *(($0 + [56]))
	*($2 + [184]) = *(($0 + [48]))
	*((($2 + [152]) + [8])) = [0]
	*($2 + [152]) = (int_64)0
	$10 = CALL $297([12799])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$32 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$59 }
	*($2 + [152]) = ($10 << [1])
	$13 = (($2 + [152]) | [1])
	if ( $10 ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$63
	*($2 + [232]) = [0]
	*($2 + [224]) = (int_64)0
	$14 = *(($0 + [64]))
	$10 = *(($0 + [60]))
	if ( ((int_32)$10 == (int_32)$14) ){ goto $label$149 }
	
.LOOP $label$150:
	$13 = *($10)
	if ( ((uint_32)$13 > (uint_32)[31]) ){ goto $label$151 }
	*($2 + [96]) = $13
	CALL $262(($2 + [200]), [9], [13208], ($2 + [96]))
	CALL $227(($2 + [224]), ($2 + [200]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$150 }
	goto $label$149 
	
.LABEL $label$151
	CALL $228(($2 + [224]), int_32(($13 << [24]) >> [24]))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$150 }
	
.LABEL $label$149
	*((($2 + [184]) + [8])) = *(($0 + [56]))
	*($2 + [184]) = *(($0 + [48]))
	*((($2 + [152]) + [8])) = [0]
	*($2 + [152]) = (int_64)0
	$10 = CALL $297([12810])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$30 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$56 }
	*($2 + [152]) = ($10 << [1])
	$13 = (($2 + [152]) | [1])
	if ( $10 ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$62
	*($2 + [160]) = [0]
	*($2 + [152]) = (int_64)0
	$13 = $10
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$60 }
	
.LABEL $label$61
	
.LOOP $label$152:
	$14 = *($13)
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$153 }
	*($2 + [112]) = $14
	CALL $262(($2 + [200]), [9], [13208], ($2 + [112]))
	CALL $227(($2 + [152]), ($2 + [200]))
	$13 = ($13 + [1])
	if ( ((int_32)$10 != (int_32)$13) ){ goto $label$152 }
	goto $label$60 
	
.LABEL $label$153
	CALL $228(($2 + [152]), int_32(($14 << [24]) >> [24]))
	$13 = ($13 + [1])
	if ( ((int_32)$10 != (int_32)$13) ){ goto $label$152 }
	
.LABEL $label$60
	$10 = CALL $231(($2 + [152]), [0], [12827])
	$13 = ($10 + [8])
	*((($2 + [168]) + [8])) = *($13)
	*($2 + [168]) = *($10)
	*($10) = (int_64)0
	*($13) = [0]
	$10 = CALL $227(($2 + [168]), [12853])
	$13 = ($10 + [8])
	*((($2 + [184]) + [8])) = *($13)
	*($2 + [184]) = *($10)
	*($10) = (int_64)0
	*($13) = [0]
	CALL $126(($2 + [200]), [406], ($2 + [184]))
	*($1 + [44]) = [1]
	if ( *($1 + [72]) ){ goto $label$33 }
	*($2 + [200]) = [13184]
	CALL $216((($2 + [200]) + [8]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [184]) & [1]) ){ goto $label$155 }
	$10 = [1]
	if ( (*($2 + [168]) & [1]) ){ goto $label$154 }
	goto $label$18 
	
.LABEL $label$155
	CALL _ZdlPv(*($2 + [192]))
	$10 = [1]
	if ( ((*($2 + [168]) & [1]) == 0) ){ goto $label$18 }
	
.LABEL $label$154
	CALL _ZdlPv(*($2 + [176]))
	if ( ((*($2 + [152]) & $10) == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$59
	$14 = (($10 + [16]) & [-16])
	$13 = CALL _Znwj($14)
	*($2 + [152]) = ($14 | [1])
	*($2 + [160]) = $13
	*($2 + [156]) = $10
	
.LABEL $label$58
	CALL memcpy($13, [12799], $10)
	
.LABEL $label$57
	*(($13 + $10)) = [0]
	CALL $101(($2 + [168]), $0, [4], ($2 + [152]))
	CALL $102(($2 + [200]), [101], ($2 + [184]), ($2 + [168]))
	*($1 + [44]) = [1]
	if ( *($1 + [72]) ){ goto $label$31 }
	*($2 + [200]) = [13184]
	CALL $216(($2 + [208]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [168]) & [1]) ){ goto $label$157 }
	$10 = [1]
	if ( (*($2 + [152]) & [1]) ){ goto $label$156 }
	goto $label$20 
	
.LABEL $label$157
	CALL _ZdlPv(*($2 + [176]))
	$10 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$20 }
	
.LABEL $label$156
	CALL _ZdlPv(*($2 + [160]))
	if ( ((*($2 + [224]) & $10) == 0) ){ goto $label$2 }
	goto $label$19 
	
.LABEL $label$56
	$14 = (($10 + [16]) & [-16])
	$13 = CALL _Znwj($14)
	*($2 + [152]) = ($14 | [1])
	*($2 + [160]) = $13
	*($2 + [156]) = $10
	
.LABEL $label$55
	CALL memcpy($13, [12810], $10)
	
.LABEL $label$54
	*(($13 + $10)) = [0]
	CALL $101(($2 + [168]), $0, [12], ($2 + [152]))
	CALL $102(($2 + [200]), [101], ($2 + [184]), ($2 + [168]))
	*($1 + [44]) = [1]
	if ( *($1 + [72]) ){ goto $label$29 }
	*($2 + [200]) = [13184]
	CALL $216(($2 + [208]))
	CALL $244(($2 + [200]))
	if ( (*($2 + [168]) & [1]) ){ goto $label$159 }
	$10 = [1]
	if ( (*($2 + [152]) & [1]) ){ goto $label$158 }
	goto $label$22 
	
.LABEL $label$159
	CALL _ZdlPv(*($2 + [176]))
	$10 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$22 }
	
.LABEL $label$158
	CALL _ZdlPv(*($2 + [160]))
	if ( ((*($2 + [224]) & $10) == 0) ){ goto $label$2 }
	goto $label$21 
	
.LABEL $label$53
	CALL $248([12855], [9181], [5309], [12874])
	
.LABEL $label$52
	CALL $248([12855], [9181], [5369], [12874])
	
.LABEL $label$51
	CALL $245(($2 + [240]))
	
.LABEL $label$50
	CALL $245(($2 + [240]))
	
.LABEL $label$49
	CALL $219(($2 + [152]))
	
.LABEL $label$48
	CALL $219(($2 + [152]))
	
.LABEL $label$47
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$43 }
	goto $label$23 
	
.LABEL $label$46
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$42 }
	goto $label$23 
	
.LABEL $label$45
	CALL $219(($2 + [152]))
	
.LABEL $label$44
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$39 }
	goto $label$23 
	
.LABEL $label$43
	CALL $248([9460], [9181], [4757], [13196])
	
.LABEL $label$42
	CALL $248([9460], [9181], [4757], [13196])
	
.LABEL $label$41
	CALL $219(($2 + [152]))
	
.LABEL $label$40
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$38 }
	goto $label$23 
	
.LABEL $label$39
	CALL $248([9460], [9181], [4757], [13196])
	
.LABEL $label$38
	CALL $248([9460], [9181], [4757], [13196])
	
.LABEL $label$37
	CALL $219(($2 + [152]))
	
.LABEL $label$36
	CALL $219(($2 + [152]))
	
.LABEL $label$35
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$28 }
	goto $label$23 
	
.LABEL $label$34
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$27 }
	goto $label$23 
	
.LABEL $label$33
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$26 }
	goto $label$23 
	
.LABEL $label$32
	CALL $219(($2 + [152]))
	
.LABEL $label$31
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$30
	CALL $219(($2 + [152]))
	
.LABEL $label$29
	$2 = (((int_32)((int_32)*($2 + [204]) / (int_32)[100]) % (int_32)[100]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$28
	CALL $248([9460], [9181], [4757], [13196])
	
.LABEL $label$27
	CALL $248([9460], [9181], [4757], [13196])
	
.LABEL $label$26
	CALL $248([9460], [9181], [4757], [13196])
	
.LABEL $label$25
	CALL $248([9460], [9181], [4757], [13196])
	
.LABEL $label$24
	CALL $248([9460], [9181], [4757], [13196])
	
.LABEL $label$23
	CALL abort()
	
.LABEL $label$22
	if ( ((*($2 + [224]) & $10) == 0) ){ goto $label$2 }
	
.LABEL $label$21
	CALL _ZdlPv(*(($2 + [232])))
	goto $label$2 
	
.LABEL $label$20
	if ( ((*($2 + [224]) & $10) == 0) ){ goto $label$2 }
	
.LABEL $label$19
	CALL _ZdlPv(*(($2 + [232])))
	goto $label$2 
	
.LABEL $label$18
	if ( (*($2 + [152]) & $10) ){ goto $label$16 }
	
.LABEL $label$17
	if ( ((*($2 + [224]) & [1]) == 0) ){ goto $label$2 }
	goto $label$15 
	
.LABEL $label$16
	CALL _ZdlPv(*(($2 + [160])))
	if ( ((*($2 + [224]) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$15
	CALL _ZdlPv(*(($2 + [232])))
	goto $label$2 
	
.LABEL $label$14
	if ( ((*($2 + [224]) & $10) == 0) ){ goto $label$2 }
	
.LABEL $label$13
	CALL _ZdlPv(*(($2 + [232])))
	goto $label$2 
	
.LABEL $label$12
	if ( ((*($2 + [224]) & $10) == 0) ){ goto $label$2 }
	
.LABEL $label$11
	CALL _ZdlPv(*(($2 + [232])))
	goto $label$2 
	
.LABEL $label$10
	if ( ((*($2 + [224]) & $10) == 0) ){ goto $label$2 }
	
.LABEL $label$9
	CALL _ZdlPv(*(($2 + [232])))
	goto $label$2 
	
.LABEL $label$8
	if ( ((*($2 + [224]) & $10) == 0) ){ goto $label$2 }
	
.LABEL $label$7
	CALL _ZdlPv(*(($2 + [232])))
	goto $label$2 
	
.LABEL $label$6
	if ( ((*($2 + [224]) & $10) == 0) ){ goto $label$2 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($2 + [232])))
	goto $label$2 
	
.LABEL $label$4
	if ( ((*($2 + [224]) & $10) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*(($2 + [232])))
	
.LABEL $label$2
	$11 = [0]
	
.LABEL $label$1
	$10 = *($2 + [240])
	if ( ($10 == 0) ){ goto $label$160 }
	CALL _ZdlPv($10)
	
.LABEL $label$160
	$global$0 = ($2 + [256])
	$10
	$10
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	$2
	$2
	(unreachable)
	$2
	(unreachable)
	(unreachable)
	(unreachable)
	$2
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	$2
	$2
	$2
	(unreachable)
	$2
	(unreachable)
	$2
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return $11
}

int_32 .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)[3]) ){ goto $label$4 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$5 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$3 }
	if ( *($1 + [8]) ){ goto $label$3 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$5
	if ( *($1 + [8]) ){ goto $label$3 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$4
	if ( (*($1 + [8]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *($0)
	*($0) = $2
	*($1) = $3
	$4 = *($0 + [8])
	*($0 + [8]) = *($1 + [8])
	*($1 + [8]) = $4
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)[3]) ){ goto $label$7 }
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$8 }
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$6 }
	if ( *(($0 + [8])) ){ goto $label$6 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$8
	if ( *(($0 + [8])) ){ goto $label$6 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$7
	if ( (*(($0 + [8])) == 0) ){ goto $label$1 }
	
.LABEL $label$6
	return $0
	
.LABEL $label$2
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$1
	CALL $248([9322], [9181], [13424], [9252])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $102 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [112])
	$global$0 = $4
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $297([13196])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$13 }
	*($4 + [16]) = ($5 << [1])
	$6 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4 + [16]) = ($7 | [1])
	*($4 + [24]) = $6
	*($4 + [20]) = $5
	
.LABEL $label$12
	CALL memcpy($6, [13196], $5)
	
.LABEL $label$11
	*(($6 + $5)) = [0]
	CALL $127(($4 + [32]), ($4 + [16]), $1)
	$5 = CALL $227(($4 + [32]), [13217])
	$6 = ($5 + [8])
	*((($4 + [48]) + [8])) = *($6)
	*($4 + [48]) = *($5)
	*($5) = (int_64)0
	*($6) = [0]
	CALL $128($4, $2)
	$5 = *($4)
	$6 = ($5 & [1])
	$5 = CALL $229(($4 + [48]), ( *($4 + [8]) ? ($4 | [1]) : $6 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 ))
	$6 = ($5 + [8])
	*((($4 + [64]) + [8])) = *($6)
	*($4 + [64]) = *($5)
	*($5) = (int_64)0
	*($6) = [0]
	$5 = CALL $227(($4 + [64]), [13229])
	$6 = ($5 + [8])
	*((($4 + [80]) + [8])) = *($6)
	*($4 + [80]) = *($5)
	*($5) = (int_64)0
	*($6) = [0]
	$5 = *($3)
	$6 = ($5 & [1])
	$5 = CALL $229(($4 + [80]), ( *($3 + [8]) ? ($3 + [1]) : $6 ), ( *($3 + [4]) ? uint_32($5 >> [1]) : $6 ))
	$3 = ($5 + [8])
	*((($4 + [96]) + [8])) = *($3)
	*($4 + [96]) = *($5)
	*($5) = (int_64)0
	*($3) = [0]
	if ( (*($4 + [80]) & [1]) ){ goto $label$15 }
	if ( (*($4 + [64]) & [1]) ){ goto $label$14 }
	goto $label$9 
	
.LABEL $label$15
	CALL _ZdlPv(*($4 + [88]))
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$14
	CALL _ZdlPv(*($4 + [72]))
	$5 = [1]
	if ( ((*($4) & [1]) == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	CALL $219(($4 + [16]))
	
.LABEL $label$9
	$5 = [1]
	if ( (*($4) & [1]) ){ goto $label$7 }
	
.LABEL $label$8
	if ( (*($4 + [48]) & $5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL _ZdlPv(*(($4 + [8])))
	if ( ((*($4 + [48]) & $5) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv(*($4 + [56]))
	$5 = [1]
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = [1]
	if ( (*($4 + [32]) & [1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ((*($4 + [16]) & $5) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL _ZdlPv(*($4 + [40]))
	if ( ((*($4 + [16]) & $5) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$1
	*($0) = [13184]
	*($0 + [4]) = $1
	$5 = *($2)
	CALL $215(($0 + [8]), ( *($4 + [104]) ? (($4 + [96]) | [1]) : (*($4 + [96]) & [1]) ))
	*($0 + [16]) = $5
	*($0) = [13260]
	if ( ((*($4 + [96]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*((($4 + [96]) + [8])))
	
.LABEL $label$16
	$global$0 = ($4 + [112])
	(unreachable)
}

int_32 .FUNC $105 (int_32 $0, int_32 $1)
{
	if ( ((uint_32)$1 > (uint_32)[7]) ){ goto $label$3 }
	goto $label$11 
	
.LABEL $label$11
	*($0) = [0]
	return $0
	
.LABEL $label$10
	*($0) = [0]
	return $0
	
.LABEL $label$9
	*(($1 = CALL _Znwj([12])) + [8]) = [0]
	*($1) = (int_64)0
	if ( ($1 == 0) ){ goto $label$2 }
	*($0) = $1
	return $0
	
.LABEL $label$8
	*($0) = CALL $106([9162])
	return $0
	
.LABEL $label$7
	*($0) = (int_64)0
	return $0
	
.LABEL $label$6
	*(($1 = CALL _Znwj([12])) + [4 align=4]) = (int_64)0
	*($1) = ($1 + [4])
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	return $0
	
.LABEL $label$5
	*($0) = (int_64)0
	return $0
	
.LABEL $label$4
	*($0) = (int_64)0
	return $0
	
.LABEL $label$3
	*($0) = [0]
	return $0
	
.LABEL $label$2
	CALL $248([9163], [9181], [13215], [9190])
	
.LABEL $label$1
	CALL $248([9163], [9181], [13215], [9190])
	$1
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $104 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [80])
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$4 }
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$2 }
	$2 = ($0 + [88])
	if ( *($2) ){ goto $label$1 }
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$4
	$2 = ($0 + [88])
	if ( *($2) ){ goto $label$1 }
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$3
	$2 = ($0 + [88])
	if ( *($2) ){ goto $label$1 }
	CALL $248([9197], [9181], [13422], [9252])
	
.LABEL $label$2
	$2 = ($0 + [88])
	
.LABEL $label$1
	CALL $38($2, $1)
	$1 = *(($0 + [64]))
	if ( ((int_32)($0 + [48]) == (int_32)$1) ){ goto $label$7 }
	if ( ($1 == 0) ){ goto $label$8 }
	CALL void $1((int_32 *(*($1) + [20])))
	
.LABEL $label$8
	$1 = *($0 + [28])
	if ( ($1 == 0) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	CALL void $1((int_32 *(*($1) + [16])))
	$1 = *($0 + [28])
	if ( ($1 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$1 = *($0 + [16])
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$10 }
	*(($0 + [8])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$10
	(unreachable)
	(unreachable)
	(unreachable)
	return $0
}

int_32 .FUNC $107 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [16])
	$global$0 = $1
	*($0 + [16]) = (*($0 + [16]) + [1])
	*(($2 = ($0 + [20]))) = (*($2) + [1])
	if ( (*($0 + [12]) == 0) ){ goto $label$8 }
	*(($0 + [12])) = [0]
	$3 = ($0 + [8])
	$4 = [-1]
	$2 = [-1]
	$5 = *($0 + [8])
	if ( ((int_32)$5 != (int_32)[-1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$2 = *($0)
	$5 = CALL int_32 $2((int_32 *(*($2))))
	*($0 + [8]) = $5
	$3 = ($0 + [8])
	$4 = [-1]
	$2 = [-1]
	if ( ((int_32)$5 == (int_32)[-1]) ){ goto $label$6 }
	
.LABEL $label$7
	*($1 + [13]) = $5
	$2 = ($0 + [32])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [36]))) ){ goto $label$11 }
	*($6) = $5
	*($2) = (*($2) + [1])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)[239]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $108(($0 + [28]), ($1 + [13]))
	$2 = *($3)
	if ( ((int_32)$2 != (int_32)[239]) ){ goto $label$9 }
	
.LABEL $label$10
	*(($2 = ($0 + [16]))) = (*($2) + [1])
	*(($2 = ($0 + [20]))) = (*($2) + [1])
	$2 = ($0 + [12])
	if ( (*($2) == 0) ){ goto $label$15 }
	*($2) = [0]
	$5 = ($0 + [8])
	$2 = [239]
	goto $label$14 
	
.LABEL $label$15
	$2 = *($0)
	$2 = CALL int_32 $2((int_32 *(*($2))))
	*($0 + [8]) = $2
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$13 }
	$5 = ($0 + [8])
	
.LABEL $label$14
	*($1 + [14]) = $2
	$3 = ($0 + [32])
	$6 = *($3)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [36]))) ){ goto $label$17 }
	*($6) = $2
	*($3) = (*($3) + [1])
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)[187]) ){ goto $label$16 }
	goto $label$12 
	
.LABEL $label$17
	CALL $108(($0 + [28]), ($1 + [14]))
	$2 = *($5)
	if ( ((int_32)$2 != (int_32)[187]) ){ goto $label$12 }
	
.LABEL $label$16
	*(($2 = ($0 + [16]))) = (*($2) + [1])
	*(($2 = ($0 + [20]))) = (*($2) + [1])
	$2 = ($0 + [12])
	if ( (*($2) == 0) ){ goto $label$20 }
	*($2) = [0]
	$5 = ($0 + [8])
	$2 = [187]
	goto $label$19 
	
.LABEL $label$20
	$2 = *($0)
	$2 = CALL int_32 $2((int_32 *(*($2))))
	*($0 + [8]) = $2
	$5 = [-1]
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$18 }
	$5 = ($0 + [8])
	
.LABEL $label$19
	*($1 + [15]) = $2
	$3 = ($0 + [32])
	$6 = *($3)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [36]))) ){ goto $label$22 }
	*($6) = $2
	*($3) = (*($3) + [1])
	$5 = *($5)
	if ( ((int_32)$5 == (int_32)[10]) ){ goto $label$21 }
	goto $label$18 
	
.LABEL $label$22
	CALL $108(($0 + [28]), ($1 + [15]))
	$5 = *($5)
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$18 }
	
.LABEL $label$21
	*(($0 + [20])) = [0]
	*(($0 = ($0 + [24]))) = (*($0) + [1])
	$5 = [10]
	
.LABEL $label$18
	$global$0 = ($1 + [16])
	return ((int_32)$5 == (int_32)[191])
	
.LABEL $label$13
	$global$0 = ($1 + [16])
	return [0]
	
.LABEL $label$12
	$5 = [0]
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$2 }
	*(($0 + [20])) = [0]
	*(($0 = ($0 + [24]))) = (*($0) + [1])
	$global$0 = ($1 + [16])
	return [0]
	
.LABEL $label$9
	$3 = [10]
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$6 }
	*(($0 + [20])) = [0]
	*(($0 + [12])) = [1]
	*($0 + [16]) = (*($0 + [16]) + [-1])
	$5 = (*($2) + [1])
	*(($2 = ($0 + [24]))) = $5
	if ( $5 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	*(($0 + [12])) = [1]
	*(($5 = ($0 + [16]))) = (*($5) + $4)
	$5 = ($0 + [20])
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$23 }
	*($5) = ($3 + [-1])
	$5 = [1]
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$23
	$3 = $2
	$2 = ($0 + [24])
	$5 = *($2)
	if ( ($5 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*($2) = ($5 + [-1])
	
.LABEL $label$4
	$5 = [1]
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = ($0 + [32])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)*($0 + [28])) ){ goto $label$1 }
	*($2) = ($3 + [-1])
	
.LABEL $label$2
	$global$0 = ($1 + [16])
	return $5
	
.LABEL $label$1
	CALL $248([9487], [9181], [3867], [9512])
	return (unreachable)
}

int_32 .FUNC $106 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	*(($1 = CALL _Znwj([12]))) = (int_64)0
	*(($1 + [8])) = [0]
	$2 = CALL $297($0)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$3 }
	*($1) = ($2 << [1])
	$3 = ($1 + [1])
	if ( $2 ){ goto $label$2 }
	*(($3 + $2)) = [0]
	return $1
	
.LABEL $label$3
	$4 = (($2 + [16]) & [-16])
	$3 = CALL _Znwj($4)
	*($1) = ($4 | [1])
	*($1 + [8]) = $3
	*($1 + [4]) = $2
	
.LABEL $label$2
	CALL memcpy($3, $0, $2)
	*(($3 + $2)) = [0]
	return $1
	
.LABEL $label$1
	CALL $219($1)
	return (unreachable)
}

int_32 .FUNC $109 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = ($0 + [40])
	if ( (*($0 + [40]) & [1]) ){ goto $label$2 }
	*($2) = [0]
	goto $label$1 
	
.LABEL $label$2
	*(*(($0 + [48]))) = [0]
	*(($0 + [44])) = [0]
	
.LABEL $label$1
	$4 = *($0 + [28])
	*(($3 = ($0 + [32]))) = $4
	$5 = *($0 + [8])
	*($1 + [7]) = $5
	$6 = ($0 + [28])
	if ( ((uint_32)*(($0 + [36])) <= (uint_32)$4) ){ goto $label$4 }
	*($4) = $5
	*($3) = (*($3) + [1])
	goto $label$3 
	
.LABEL $label$4
	CALL $108($6, ($1 + [7]))
	
.LABEL $label$3
	$4 = *(($0 + [8]))
	if ( ((uint_32)($4 + [-49]) >= (uint_32)[9]) ){ goto $label$24 }
	CALL $228($2, int_32(($4 << [24]) >> [24]))
	$7 = ($0 + [12])
	$8 = ($0 + [20])
	$5 = ($0 + [16])
	$9 = [5]
	goto $label$23 
	
.LABEL $label$24
	if ( ((int_32)$4 == (int_32)[48]) ){ goto $label$27 }
	if ( ((int_32)$4 != (int_32)[45]) ){ goto $label$19 }
	CALL $228($2, [45])
	*($0 + [16]) = (*($0 + [16]) + [1])
	*(($8 = ($0 + [20]))) = (*($8) + [1])
	if ( (*($0 + [12]) == 0) ){ goto $label$26 }
	*(($0 + [12])) = [0]
	$4 = *(($0 + [8]))
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$25 }
	goto $label$21 
	
.LABEL $label$27
	CALL $228($2, [48])
	$7 = ($0 + [12])
	$8 = ($0 + [20])
	$5 = ($0 + [16])
	$9 = [5]
	goto $label$18 
	
.LABEL $label$26
	$4 = *($0)
	$4 = CALL int_32 $4((int_32 *(*($4))))
	*(($0 + [8])) = $4
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$21 }
	
.LABEL $label$25
	*($1 + [8]) = $4
	$5 = *(($0 + [32]))
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [36]))) ){ goto $label$29 }
	*($5) = $4
	*($3) = (*($3) + [1])
	goto $label$28 
	
.LABEL $label$29
	CALL $108($6, ($1 + [8]))
	
.LABEL $label$28
	$7 = ($0 + [12])
	$5 = ($0 + [16])
	$4 = *(($0 + [8]))
	if ( ((uint_32)($4 + [-49]) >= (uint_32)[9]) ){ goto $label$22 }
	CALL $228($2, int_32(($4 << [24]) >> [24]))
	$9 = [6]
	
.LABEL $label$23
	
.LOOP $label$30:
	*($5) = (*($5) + [1])
	*($8) = (*($8) + [1])
	if ( (*($7) == 0) ){ goto $label$32 }
	*(($0 + [12])) = [0]
	$10 = [-1]
	$4 = *(($0 + [8]))
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$31 }
	goto $label$12 
	
.LABEL $label$32
	$4 = *($0)
	$4 = CALL int_32 $4((int_32 *(*($4))))
	*(($0 + [8])) = $4
	$10 = [-1]
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$12 }
	
.LABEL $label$31
	*($1 + [10]) = $4
	$10 = *(($0 + [32]))
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [36]))) ){ goto $label$34 }
	*($10) = $4
	*($3) = (*($3) + [1])
	goto $label$33 
	
.LABEL $label$34
	CALL $108($6, ($1 + [10]))
	
.LABEL $label$33
	$4 = *(($0 + [8]))
	if ( ((uint_32)($4 + [-48]) >= (uint_32)[10]) ){ goto $label$35 }
	CALL $228($2, int_32(($4 << [24]) >> [24]))
	goto $label$30 
	
.LABEL $label$35
	if ( ((int_32)$4 > (int_32)[68]) ){ goto $label$38 }
	$10 = [10]
	if ( ((int_32)$4 == (int_32)[10]) ){ goto $label$36 }
	if ( ((int_32)$4 != (int_32)[46]) ){ goto $label$37 }
	CALL $228($2, *($0 + [80]))
	goto $label$17 
	
.LABEL $label$38
	if ( ((int_32)$4 == (int_32)[69]) ){ goto $label$39 }
	if ( ((int_32)$4 != (int_32)[101]) ){ goto $label$37 }
	
.LABEL $label$39
	CALL $228($2, int_32(($4 << [24]) >> [24]))
	goto $label$13 
	
.LABEL $label$37
	$10 = $4
	goto $label$12 
	
.LABEL $label$36
	*(($0 + [20])) = [0]
	*(($4 = ($0 + [24]))) = (*($4) + [1])
	goto $label$12 
	
.LABEL $label$22
	if ( ((int_32)$4 == (int_32)[48]) ){ goto $label$20 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$21 }
	*(($0 + [20])) = [0]
	*(($4 = ($0 + [24]))) = (*($4) + [1])
	
.LABEL $label$21
	*($0 + [52]) = [12549]
	$global$0 = ($1 + [16])
	return [14]
	
.LABEL $label$20
	CALL $228($2, [48])
	$9 = [6]
	goto $label$18 
	
.LABEL $label$19
	CALL $248([9460], [9181], [3480], [12537])
	
.LABEL $label$18
	*($5) = (*($5) + [1])
	*($8) = (*($8) + [1])
	if ( (*($7) == 0) ){ goto $label$41 }
	*(($0 + [12])) = [0]
	$10 = [-1]
	$4 = *(($0 + [8]))
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$40 }
	goto $label$12 
	
.LABEL $label$41
	$4 = *($0)
	$4 = CALL int_32 $4((int_32 *(*($4))))
	*(($0 + [8])) = $4
	$10 = [-1]
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$12 }
	
.LABEL $label$40
	*($1 + [9]) = $4
	$10 = *(($0 + [32]))
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [36]))) ){ goto $label$43 }
	*($10) = $4
	*($3) = (*($3) + [1])
	goto $label$42 
	
.LABEL $label$43
	CALL $108($6, ($1 + [9]))
	
.LABEL $label$42
	$4 = *(($0 + [8]))
	if ( ((int_32)$4 > (int_32)[68]) ){ goto $label$44 }
	$10 = [10]
	if ( ((int_32)$4 == (int_32)[10]) ){ goto $label$16 }
	if ( ((int_32)$4 != (int_32)[46]) ){ goto $label$15 }
	CALL $228($2, *($0 + [80]))
	goto $label$17 
	
.LABEL $label$44
	if ( ((int_32)$4 == (int_32)[69]) ){ goto $label$45 }
	if ( ((int_32)$4 != (int_32)[101]) ){ goto $label$15 }
	
.LABEL $label$45
	CALL $228($2, int_32(($4 << [24]) >> [24]))
	goto $label$13 
	
.LABEL $label$17
	*($5) = (*($5) + [1])
	*($8) = (*($8) + [1])
	if ( (*($7) == 0) ){ goto $label$49 }
	*(($0 + [12])) = [0]
	$4 = *(($0 + [8]))
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$49
	$4 = *($0)
	$4 = CALL int_32 $4((int_32 *(*($4))))
	*(($0 + [8])) = $4
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$47 }
	
.LABEL $label$48
	*($1 + [11]) = $4
	$10 = *(($0 + [32]))
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [36]))) ){ goto $label$51 }
	*($10) = $4
	*($3) = (*($3) + [1])
	goto $label$50 
	
.LABEL $label$51
	CALL $108($6, ($1 + [11]))
	
.LABEL $label$50
	$4 = *(($0 + [8]))
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$52 }
	*(($0 + [20])) = [0]
	*(($4 = ($0 + [24]))) = (*($4) + [1])
	goto $label$47 
	
.LABEL $label$52
	if ( ((uint_32)($4 + [-48]) > (uint_32)[9]) ){ goto $label$47 }
	CALL $228($2, int_32(($4 << [24]) >> [24]))
	$11 = ($0 + [8])
	$12 = ($0 + [36])
	$13 = ($0 + [32])
	$14 = ($0 + [12])
	
.LOOP $label$53:
	*($5) = (*($5) + [1])
	*($8) = (*($8) + [1])
	if ( (*($7) == 0) ){ goto $label$55 }
	*($14) = [0]
	$10 = [-1]
	$9 = [7]
	$4 = *($11)
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$54 }
	goto $label$12 
	
.LABEL $label$55
	$4 = *($0)
	$4 = CALL int_32 $4((int_32 *(*($4))))
	*($11) = $4
	$10 = [-1]
	$9 = [7]
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$12 }
	
.LABEL $label$54
	*($1 + [12]) = $4
	$10 = *($13)
	if ( ((uint_32)$10 >= (uint_32)*($12)) ){ goto $label$58 }
	*($10) = $4
	*($3) = (*($3) + [1])
	$4 = *($11)
	if ( (($4 + [-48]) <= [10]) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$58
	CALL $108($6, ($1 + [12]))
	$4 = *($11)
	if ( ((uint_32)($4 + [-48]) >= (uint_32)[10]) ){ goto $label$56 }
	
.LABEL $label$57
	CALL $228($2, int_32(($4 << [24]) >> [24]))
	goto $label$53 
	
.LABEL $label$56
	if ( ((int_32)$4 == (int_32)[101]) ){ goto $label$46 }
	if ( ((int_32)$4 == (int_32)[69]) ){ goto $label$46 }
	$10 = [10]
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$14 }
	*(($0 + [20])) = [0]
	*(($4 = ($0 + [24]))) = (*($4) + [1])
	goto $label$12 
	
.LABEL $label$47
	*($0 + [52]) = [12590]
	$global$0 = ($1 + [16])
	return [14]
	
.LABEL $label$46
	CALL $228($2, int_32(($4 << [24]) >> [24]))
	goto $label$13 
	
.LABEL $label$16
	*(($0 + [20])) = [0]
	*(($4 = ($0 + [24]))) = (*($4) + [1])
	goto $label$12 
	
.LABEL $label$15
	$10 = $4
	goto $label$12 
	
.LABEL $label$14
	$10 = $4
	goto $label$12 
	
.LABEL $label$13
	*($5) = (*($5) + [1])
	*($8) = (*($8) + [1])
	if ( (*($7) == 0) ){ goto $label$63 }
	*(($0 + [12])) = [0]
	$4 = *(($0 + [8]))
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$63
	$4 = *($0)
	$4 = CALL int_32 $4((int_32 *(*($4))))
	*(($0 + [8])) = $4
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$61 }
	
.LABEL $label$62
	*($1 + [13]) = $4
	$10 = *(($0 + [32]))
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [36]))) ){ goto $label$65 }
	*($10) = $4
	*($3) = (*($3) + [1])
	goto $label$64 
	
.LABEL $label$65
	CALL $108($6, ($1 + [13]))
	
.LABEL $label$64
	$4 = *(($0 + [8]))
	if ( ((uint_32)($4 + [-48]) >= (uint_32)[10]) ){ goto $label$66 }
	CALL $228($2, int_32(($4 << [24]) >> [24]))
	goto $label$59 
	
.LABEL $label$66
	if ( ((int_32)$4 == (int_32)[45]) ){ goto $label$60 }
	if ( ((int_32)$4 == (int_32)[43]) ){ goto $label$60 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$61 }
	*(($0 + [20])) = [0]
	*(($4 = ($0 + [24]))) = (*($4) + [1])
	
.LABEL $label$61
	*($0 + [52]) = [12631]
	$global$0 = ($1 + [16])
	return [14]
	
.LABEL $label$60
	CALL $228($2, int_32(($4 << [24]) >> [24]))
	*($5) = (*($5) + [1])
	*($8) = (*($8) + [1])
	if ( (*($7) == 0) ){ goto $label$68 }
	*(($0 + [12])) = [0]
	$4 = *(($0 + [8]))
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$67 }
	goto $label$11 
	
.LABEL $label$68
	$4 = *($0)
	$4 = CALL int_32 $4((int_32 *(*($4))))
	*(($0 + [8])) = $4
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$11 }
	
.LABEL $label$67
	*($1 + [14]) = $4
	$10 = *(($0 + [32]))
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [36]))) ){ goto $label$70 }
	*($10) = $4
	*($3) = (*($3) + [1])
	goto $label$69 
	
.LABEL $label$70
	CALL $108($6, ($1 + [14]))
	
.LABEL $label$69
	$4 = *(($0 + [8]))
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$71 }
	*(($0 + [20])) = [0]
	*(($4 = ($0 + [24]))) = (*($4) + [1])
	goto $label$11 
	
.LABEL $label$71
	if ( ((uint_32)($4 + [-48]) >= (uint_32)[10]) ){ goto $label$11 }
	CALL $228($2, int_32(($4 << [24]) >> [24]))
	
.LABEL $label$59
	
.LOOP $label$73:
	*($5) = (*($5) + [1])
	*($8) = (*($8) + [1])
	if ( (*($7) == 0) ){ goto $label$75 }
	*(($0 + [12])) = [0]
	$10 = [-1]
	$9 = [7]
	$4 = *(($0 + [8]))
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$74 }
	goto $label$12 
	
.LABEL $label$75
	$4 = *($0)
	$4 = CALL int_32 $4((int_32 *(*($4))))
	*(($0 + [8])) = $4
	$10 = [-1]
	$9 = [7]
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$12 }
	
.LABEL $label$74
	*($1 + [15]) = $4
	$10 = *(($0 + [32]))
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [36]))) ){ goto $label$77 }
	*($10) = $4
	*($3) = (*($3) + [1])
	goto $label$76 
	
.LABEL $label$77
	CALL $108($6, ($1 + [15]))
	
.LABEL $label$76
	$10 = [10]
	$4 = *(($0 + [8]))
	if ( ((int_32)$4 == (int_32)[10]) ){ goto $label$72 }
	if ( ((uint_32)($4 + [-48]) > (uint_32)[9]) ){ goto $label$78 }
	CALL $228($2, int_32(($4 << [24]) >> [24]))
	goto $label$73 
	
.LABEL $label$78
	$10 = $4
	goto $label$12 
	
.LABEL $label$72
	*(($0 + [20])) = [0]
	*(($4 = ($0 + [24]))) = (*($4) + [1])
	
.LABEL $label$12
	*($7) = [1]
	*($5) = (*($5) + [-1])
	$4 = *($8)
	if ( ($4 == 0) ){ goto $label$79 }
	*($8) = ($4 + [-1])
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$79
	$4 = ($0 + [24])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$80 }
	*($4) = ($5 + [-1])
	
.LABEL $label$80
	if ( ((int_32)$10 != (int_32)[-1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	*($0 + [52]) = [12690]
	$global$0 = ($1 + [16])
	return [14]
	
.LABEL $label$10
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)*($6)) ){ goto $label$8 }
	*($3) = ($4 + [-1])
	
.LABEL $label$9
	*($1) = [0]
	*(CALL $247()) = [0]
	if ( ((int_32)$9 == (int_32)[6]) ){ goto $label$85 }
	if ( ((int_32)$9 != (int_32)[5]) ){ goto $label$5 }
	if ( (*($2) & [1]) ){ goto $label$84 }
	$4 = ($2 + [1])
	goto $label$83 
	
.LABEL $label$85
	if ( (*($2) & [1]) ){ goto $label$82 }
	$4 = ($2 + [1])
	goto $label$81 
	
.LABEL $label$84
	$4 = *(($0 + [48]))
	
.LABEL $label$83
	$15 = CALL $292($4, $1, [10])
	$4 = *($1)
	$5 = *($2)
	if ( ($5 & [1]) ){ goto $label$87 }
	if ( ((int_32)$4 != (int_32)(($2 + [1]) + uint_32($5 >> [1]))) ){ goto $label$86 }
	goto $label$6 
	
.LABEL $label$87
	if ( ((int_32)$4 == (int_32)(*(($0 + [48])) + *(($0 + [44])))) ){ goto $label$6 }
	
.LABEL $label$86
	CALL $248([12741], [9181], [3729], [12537])
	
.LABEL $label$82
	$4 = *(($0 + [48]))
	
.LABEL $label$81
	$15 = CALL $293($4, $1, [10])
	$4 = *($1)
	$5 = *($2)
	if ( ($5 & [1]) ){ goto $label$89 }
	if ( ((int_32)$4 != (int_32)(($2 + [1]) + uint_32($5 >> [1]))) ){ goto $label$88 }
	goto $label$7 
	
.LABEL $label$89
	if ( ((int_32)$4 == (int_32)(*(($0 + [48])) + *(($0 + [44])))) ){ goto $label$7 }
	
.LABEL $label$88
	CALL $248([12741], [9181], [3745], [12537])
	
.LABEL $label$8
	CALL $248([9487], [9181], [3867], [9512])
	
.LABEL $label$7
	if ( *(CALL $247()) ){ goto $label$5 }
	*($0 + [56]) = $15
	$global$0 = ($1 + [16])
	return [6]
	
.LABEL $label$6
	if ( *(CALL $247()) ){ goto $label$5 }
	*($0 + [64]) = $15
	$global$0 = ($1 + [16])
	return [5]
	
.LABEL $label$5
	if ( (*(($0 + [40])) & [1]) ){ goto $label$91 }
	$4 = ($2 + [1])
	goto $label$90 
	
.LABEL $label$91
	$4 = *(($0 + [48]))
	
.LABEL $label$90
	*(($0 + [72])) = CALL $290($4, $1)
	$4 = *($1)
	$8 = *(($0 + [40]))
	if ( ($8 & [1]) ){ goto $label$94 }
	$5 = [7]
	if ( ((int_32)$4 != (int_32)(($2 + [1]) + uint_32($8 >> [1]))) ){ goto $label$93 }
	goto $label$92 
	
.LABEL $label$94
	$5 = [7]
	if ( ((int_32)$4 == (int_32)(*(($0 + [48])) + *(($0 + [44])))) ){ goto $label$92 }
	
.LABEL $label$93
	CALL $248([12741], [9181], [3762], [12537])
	
.LABEL $label$92
	$global$0 = ($1 + [16])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return $5
}

void .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ($2 - $3)
	$5 = ($4 + [1])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = [2147483647]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)$7 > (uint_32)[1073741822]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj($6)
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	*(($4 = ($5 + $4))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + $6)
	$5 = ($4 + [1])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	(unreachable)
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

int_32 .FUNC $231 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $230($0, $1, $2, CALL $297($2))
}

void .FUNC $219 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ((int_32)$1 == (int_32)[3]) ){ goto $label$5 }
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$6 }
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$4 }
	$1 = *($0)
	CALL $171($1, *($1 + [4]))
	CALL _ZdlPv(*($0))
	return (unreachable)
	
.LABEL $label$6
	$2 = *($0)
	$3 = *($2)
	if ( ($3 == 0) ){ goto $label$7 }
	$1 = $3
	$4 = *($2 + [4])
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$10:
	$5 = $4
	$4 = ($5 + [-16])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$13 }
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$14 }
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$11 }
	$5 = ($5 + [-8])
	if ( *($5) ){ goto $label$12 }
	goto $label$3 
	
.LABEL $label$14
	$5 = ($5 + [-8])
	if ( *($5) ){ goto $label$12 }
	goto $label$2 
	
.LABEL $label$13
	$5 = ($5 + [-8])
	if ( (*($5) == 0) ){ goto $label$1 }
	
.LABEL $label$12
	CALL $38($5, $1)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $38(($5 + [-8]), $1)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$10 }
	
.LABEL $label$9
	$1 = *($2)
	
.LABEL $label$8
	*(($2 + [4])) = $3
	CALL _ZdlPv($1)
	$2 = *($0)
	
.LABEL $label$7
	CALL _ZdlPv($2)
	return (unreachable)
	
.LABEL $label$5
	$1 = *($0)
	if ( ((*($1) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*($1 + [8]))
	$1 = *($0)
	
.LABEL $label$15
	CALL _ZdlPv($1)
	
.LABEL $label$4
	return (unreachable)
	
.LABEL $label$3
	CALL $248([9322], [9181], [13424], [9252])
	
.LABEL $label$2
	CALL $248([9269], [9181], [13423], [9252])
	
.LABEL $label$1
	CALL $248([9197], [9181], [13422], [9252])
}

void .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0)
	CALL $52(*($1), ($0 + [8]))
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($0 + [24]), *($4 + [4]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $3) > (uint_32)[7]), [8805])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*(($0 + [32])) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy(($0 + [40]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8782])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $303($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [40]) = ($2 + $4)
	*($3 + [32]) = $2
	*(($5 = CALL _Znwj([32]))) = (int_64)0
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [16]) = [0]
	*($5 + [20]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [8805])
	CALL memcpy($5, $2, [8])
	*($3 + [36]) = ($2 + [8])
	CALL $52(($3 + [32]), ($5 + [8]))
	*($5 + [24]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $170(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $306($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($1 + [16])))
	
.LABEL $label$10
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $37 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [8814])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([40])) + [24]) = $1
	*($3 + [8]) = (int_64)0
	CALL $96(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [28])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $97(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $34 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [160])
	$global$0 = $4
	*($0 + [8]) = [0]
	*($0) = [0]
	$5 = *($1)
	$1 = *($1 + [4])
	if ( ($1 == 0) ){ goto $label$1 }
	*($1 + [4]) = (*($1 + [4]) + [1])
	
.LABEL $label$1
	$6 = *($2 + [16])
	if ( ($6 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$5 }
	$6 = CALL int_32 $6((int_32 *(*($6) + [8])))
	*($4 + [24]) = $6
	if ( ($6 == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	*($4 + [24]) = [0]
	goto $label$4 
	
.LABEL $label$5
	*($4 + [24]) = ($4 + [8])
	CALL void $6((int_32 ($4 + [8])), (int_32 *(*($6) + [12])))
	$6 = *($4 + [24])
	if ( $6 ){ goto $label$3 }
	
.LABEL $label$4
	*($4 + [48]) = [0]
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)($4 + [8]) == (int_32)$6) ){ goto $label$7 }
	*($4 + [48]) = CALL int_32 $6((int_32 *(*($6) + [8])))
	goto $label$2 
	
.LABEL $label$7
	*($4 + [48]) = ($4 + [32])
	CALL void $6((int_32 ($4 + [32])), (int_32 *(*($6) + [12])))
	
.LABEL $label$2
	*(($4 + [68])) = $1
	*(($4 + [72])) = [-1]
	*(($4 + [76])) = [0]
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = (int_64)0
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [116])) = [9162]
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = (int_64)0
	*(($4 + [136])) = (int_64)0
	*($4 + [64]) = $5
	*($4 + [56]) = [0]
	$1 = CALL $250()
	if ( ($1 == 0) ){ goto $label$8 }
	$6 = ($4 + [64])
	$1 = *($1)
	if ( ($1 == 0) ){ goto $label$10 }
	$1 = *($1)
	goto $label$9 
	
.LABEL $label$10
	$1 = [46]
	
.LABEL $label$9
	*(($4 + [144])) = $1
	*($4 + [152]) = $3
	*(($4 + [56])) = CALL $92($6)
	CALL $93(($4 + [32]), [1], $0)
	if ( ((*(($4 + [104])) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($4 + [112])))
	
.LABEL $label$11
	$0 = *(($4 + [92]))
	if ( ($0 == 0) ){ goto $label$12 }
	*(($4 + [96])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$12
	$0 = *(($4 + [68]))
	if ( ($0 == 0) ){ goto $label$13 }
	$1 = *($0 + [4])
	*($0 + [4]) = ($1 + [-1])
	if ( $1 ){ goto $label$13 }
	CALL void $0((int_32 *(*($0) + [8])))
	CALL $205($0)
	
.LABEL $label$13
	$0 = *($4 + [48])
	if ( ((int_32)($4 + [32]) == (int_32)$0) ){ goto $label$15 }
	if ( ($0 == 0) ){ goto $label$14 }
	CALL void $0((int_32 *(*($0) + [20])))
	goto $label$14 
	
.LABEL $label$15
	CALL void $0((int_32 *(*($0) + [16])))
	
.LABEL $label$14
	$0 = *(($4 + [24]))
	if ( ((int_32)($4 + [8]) == (int_32)$0) ){ goto $label$16 }
	if ( ($0 == 0) ){ goto $label$17 }
	CALL void $0((int_32 *(*($0) + [20])))
	
.LABEL $label$17
	$global$0 = ($4 + [160])
	return 
	
.LABEL $label$16
	CALL void $0((int_32 *(*($0) + [16])))
	$global$0 = ($4 + [160])
	return (unreachable)
	
.LABEL $label$8
	CALL $248([9377], [9181], [2689], [9392])
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	if ( $3 ){ goto $label$5 }
	*($0) = [1]
	*(($3 = CALL _Znwj([12])) + [4 align=4]) = (int_64)0
	*($3) = ($3 + [4])
	if ( ($3 == 0) ){ goto $label$1 }
	*($0 + [8]) = $3
	if ( ((int_32)*($0) == (int_32)[1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$3 }
	$3 = *($0 + [8])
	
.LABEL $label$4
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	$0 = CALL $297($1)
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$8 }
	*($2) = ($0 << [1])
	$4 = ($2 | [1])
	if ( $0 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$5 = (($0 + [16]) & [-16])
	$4 = CALL _Znwj($5)
	*($2) = ($5 | [1])
	*($2 + [8]) = $4
	*($2 + [4]) = $0
	
.LABEL $label$7
	CALL memcpy($4, $1, $0)
	
.LABEL $label$6
	*(($4 + $0)) = [0]
	$4 = CALL $94($3, ($2 + [12]), $2)
	$0 = *($4)
	if ( $0 ){ goto $label$9 }
	*(($0 = CALL _Znwj([48])) + [40]) = [0]
	*($0) = (int_64)0
	$1 = ($2 + [8])
	*(($0 + [24])) = *($1)
	*($0 + [16 align=4]) = *($2)
	*($0 + [8]) = *($2 + [12])
	*($4) = $0
	*($0 + [32]) = [0]
	*($1) = [0]
	*($2) = (int_64)0
	$1 = $0
	$5 = *(*($3))
	if ( ($5 == 0) ){ goto $label$10 }
	*($3) = $5
	$1 = *($4)
	
.LABEL $label$10
	CALL $95(*($3 + [4]), $1)
	*($3 + [8]) = (*($3 + [8]) + [1])
	
.LABEL $label$9
	$0 = ($0 + [32])
	if ( ((*($2) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*($2 + [8]))
	
.LABEL $label$11
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $219($2)
	
.LABEL $label$1
	CALL $248([9163], [9181], [13215], [9190])
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $32 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [8814])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([56])) + [40]) = $1
	*($3 + [8]) = (int_64)0
	CALL $84(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [44])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $85(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

int_32 .FUNC $33 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	*($0) = (int_64)0
	$3 = ((int_32)$1 == (int_32)$2)
	if ( $3 ){ goto $label$3 }
	$4 = (int_64)1
	$5 = $1
	
.LOOP $label$4:
	$4 = ((int_64)$4 & (int_64)1)
	$5 = ($5 + [1])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$4 }
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$2 }
	
.LABEL $label$3
	*(($5 = CALL _Znwj([24]))) = [13556]
	*($5 + [4 align=4]) = (int_64)0
	*($5 + [12]) = [13584]
	$6 = ($5 + [12])
	if ( $3 ){ goto $label$5 }
	*($5 + [20]) = $2
	*($0) = $6
	*(($5 + [16])) = $1
	$1 = ($0 + [4])
	$2 = *($1)
	*($1) = $5
	if ( ($2 == 0) ){ goto $label$1 }
	$5 = *($2 + [4])
	*($2 + [4]) = ($5 + [-1])
	if ( $5 ){ goto $label$1 }
	CALL void $2((int_32 *(*($2) + [8])))
	CALL $205($2)
	return $0
	
.LABEL $label$5
	*($0) = $6
	*(($5 + [16])) = (int_64)0
	$1 = ($0 + [4])
	$2 = *($1)
	*($1) = $5
	if ( ($2 == 0) ){ goto $label$1 }
	$5 = *($2 + [4])
	*($2 + [4]) = ($5 + [-1])
	if ( $5 ){ goto $label$1 }
	CALL void $2((int_32 *(*($2) + [8])))
	CALL $205($2)
	return $0
	
.LABEL $label$2
	CALL $248([13519], [9181], [2518], [13533])
	
.LABEL $label$1
	(unreachable)
	return $0
}

void .FUNC $30 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [8906])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [8952])
	*($1 + [8]) = *(*($3))
	*($1 + [16]) = *(*($3 + [4]))
	$3 = *($3 + [8])
	*(($1 + [32])) = *(($3 + [8]))
	*($1 + [24]) = *($3)
	$5 = *($1)
	*($1 + [40]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9003])
	*($4 + [56]) = ($4 + [48])
	*($4 + [52]) = $4
	*($4 + [48]) = $4
	*($4 + [64]) = ($4 + [48])
	*($4 + [76]) = ($1 + [8])
	*($4 + [72]) = $1
	*($4 + [80]) = ($1 + [16])
	*($4 + [84]) = ($1 + [24])
	*($4 + [88]) = ($1 + [40])
	CALL $90(($4 + [72]), ($4 + [64]))
	CALL db_update_i64(*($1 + [52]), $2, $4, [48])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

void .FUNC $31 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [8814])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([64])
	CALL $82($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [52])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $83(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

int_32 .FUNC $215 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	*($0) = [22828]
	*(($3 = CALL _Znwj((($2 = CALL $297($1)) + [13]))) + [4]) = $2
	*($3) = $2
	*($3 + [8]) = [0]
	$3 = ($3 + [12])
	CALL memcpy($3, $1, ($2 + [1]))
	*($0 + [4]) = $3
	return $0
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

void .FUNC $217 (int_32 $0)
{
	int_32 $1
	int_32 $2
	*($0) = [22828]
	$2 = (*($2) + [-1])
	*(($2 = (($1 = *($0 + [4])) + [-4]))) = $2
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$1 }
	CALL $244($0)
	CALL _ZdlPv($0)
	return 
	
.LABEL $label$1
	CALL _ZdlPv(($1 + [-12]))
	CALL $244($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $216 (int_32 $0)
{
	int_32 $1
	int_32 $2
	*($0) = [22828]
	$2 = (*($2) + [-1])
	*(($2 = (($1 = *($0 + [4])) + [-4]))) = $2
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$1 }
	CALL $244($0)
	return $0
	
.LABEL $label$1
	CALL _ZdlPv(($1 + [-12]))
	CALL $244($0)
	return $0
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $301(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [14380])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $301(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC $198 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1) = *(*($3))
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [24]) = *(*($3 + [12]))
	$3 = *($0)
	*($1 + [32]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($2 + [56]) = ($2 + [40])
	*($2 + [52]) = $2
	*($2 + [48]) = $2
	*($2 + [64]) = ($2 + [48])
	$4 = ($1 + [8])
	*($2 + [76]) = $4
	*($2 + [72]) = $1
	*($2 + [80]) = ($1 + [16])
	*($2 + [84]) = ($1 + [24])
	*($2 + [88]) = ($1 + [32])
	CALL $201(($2 + [72]), ($2 + [64]))
	$5 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($3 + [8]), (int_64)5002123547857244672, *(*($0 + [8])), $5, $2, [40])
	if ( (uint_64)($5 <= *($3 + [16])) ){ goto $label$1 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$5 = *(($3 + [8]))
	$6 = *(*(($0 + [8])))
	$7 = *($1)
	*($2 + [72]) = *($4)
	*($1 + [48]) = CALL db_idx64_store($5, (int_64)5002123547857244672, $6, $7, ($2 + [72]))
	$global$0 = ($2 + [96])
}

void .FUNC $199 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $196 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($0 + [4]), $3, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $197 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $194 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $195 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [44]), ($1 + [8]))
	CALL eosio_assert(((int_32)uint_32($2 >> [31]) ^ (int_32)[1]), [14158])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)5002113041930367488)
	CALL eosio_assert(((int_32)$2 != (int_32)[-1]), [14104])
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	CALL eosio_assert(((int_32)uint_32($2 >> [31]) ^ (int_32)[1]), [14104])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $76(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $192 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $174(*($1), *($0 + [16]))
	$2 = *($0 + [20])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[31]), [8865])
	CALL memcpy(*($3 + [4]), $2, [32])
	*($3 + [4]) = (*($3 + [4]) + [32])
	$2 = *($0 + [24])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[31]), [8865])
	CALL memcpy(*($3 + [4]), $2, [32])
	*($3 + [4]) = (*($3 + [4]) + [32])
	$3 = *($0 + [28])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [8865])
	CALL memcpy(*($0 + [4]), $3, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $193 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)5002113041930367488, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	CALL $76($6, $8)
	*($3 + [28]) = [0]
	*($3 + [24]) = $6
	$7 = *(*(CALL $195(($3 + [24])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [16])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [14052])
	*($1) = *(($6 + [16]))
	*($1 + [8]) = *(*(*($5 + [4]) + [4]) + [16])
	*($1 + [24]) = (int_64)0
	*($1 + [16]) = *(*(*($5 + [8]) + [4]) + [24])
	*($1 + [32]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$2 = $2
	$6 = ($2 + [-48])
	$global$0 = $6
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = ($2 + [-8])
	*($3 + [16]) = $3
	$2 = ($1 + [8])
	*($3 + [28]) = $2
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [32])
	CALL $196(($3 + [24]), ($3 + [16]))
	$7 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($4 + [8]), (int_64)5002113041930367488, *(*($0 + [8])), $7, $6, [40])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$3 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$7 = *(($4 + [8]))
	$9 = *(*(($0 + [8])))
	$10 = *($1)
	*($3 + [24]) = *($2)
	*($1 + [48]) = CALL db_idx64_store($7, (int_64)5002113041930367488, $9, $10, ($3 + [24]))
	$global$0 = ($3 + [48])
}

void .FUNC $190 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $245($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [40])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $191 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $52(*($1), *($0 + [16]))
	$2 = *($0 + [20])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[31]), [8805])
	CALL memcpy($2, *($3 + [4]), [32])
	*($3 + [4]) = (*($3 + [4]) + [32])
	$2 = *($0 + [24])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[31]), [8805])
	CALL memcpy($2, *($3 + [4]), [32])
	*($3 + [4]) = (*($3 + [4]) + [32])
	$3 = *($0 + [28])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8805])
	CALL memcpy($3, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}