(data (i32.const 8256) "failed to allocate pages\00\00\01\02\04\07\03\06\05\00-+   0X0x\00Assertion failed: %s (%s: %s: %d)\n\00unexpected error in fixed_bytes constructor\00")
(data (i32.const 8384) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 8656) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 8736) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 8832) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(data (i32.const 10636) "(null)\00write\00")
(data (i32.const 10656) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 11120) "0123456789ABCDEF")
(data (i32.const 11136) "-0X+0X 0X-0x+0x 0x\00")
(data (i32.const 11155) "inf\00stoll\00")
(data (i32.const 11165) "INF\00stoull\00")
(data (i32.const 11176) "nan\00This is the BG reward for your betting. BIG.GAME, Fair & Exciting EOS Gaming Platform!  \e4\b8\8b\e6\b3\a8\e6\89\80\e5\be\97BG\e5\a5\96\e5\8a\b1\e3\80\82BIG.GAME\ef\bc\8c\e5\85\ac\e5\b9\b3\e5\88\ba\e6\bf\80\e7\9a\84EOS\e6\b8\b8\e6\88\8f\e5\b9\b3\e5\8f\b0\ef\bc\81\00")
(data (i32.const 11336) "NAN\00Referral bonus for inviting \00")
(data (i32.const 11369) ".\00\ef\bc\81BIG.GAME, Fair & Exciting EOS Gaming Platform !  \e6\88\90\e5\8a\9f\e6\8e\a8\e8\8d\90\00")
(data (i32.const 11436) "%d\00\e8\8e\b7\e5\be\97\e6\8e\a8\e8\8d\90\e5\a5\96\e5\8a\b1\ef\bc\81BIG.GAME\ef\bc\8c\e5\85\ac\e5\b9\b3\e5\88\ba\e6\bf\80\e7\9a\84EOS\e6\b8\b8\e6\88\8f\e5\b9\b3\e5\8f\b0\ef\bc\81\00")
(data (i32.const 11505) "%lld\00SIG\00")
(data (i32.const 11514) "%llu\00Signature Key has invalid prefix\00")
(data (i32.const 11552) ": no conversion\00Invalid public key\00")
(data (i32.const 11587) ": out of range\00Public key checksum mismatch\00")
(data (i32.const 11632) "\05\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\05\00\00\004 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00`8\00\00")
(data (i32.const 11780) "p-\00\00")
(data (i32.const 11792) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\ff\ff\ff\ff\ff\ff\ff\t\n\0b\0c\0d\0e\0f\10\ff\11\12\13\14\15\ff\16\17\18\19\1a\1b\1c\1d\1e\1f \ff\ff\ff\ff\ff\ff!\"#$%&\'()*+\ff,-./0123456789\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 12048) "carry == 0\00")
(data (i32.const 12059) "utils.hpp\00")
(data (i32.const 12069) "DecodeBase58\00")
(data (i32.const 12082) "No delimiter in signature\00")
(data (i32.const 12108) "No curve in signature\00")
(data (i32.const 12130) "K1\00")
(data (i32.const 12133) "R1\00")
(data (i32.const 12136) "Incorrect curve\00")
(data (i32.const 12152) "Signature has no data\00")
(data (i32.const 12174) "Decode signature failed\00")
(data (i32.const 12198) "Invalid signature\00")
(data (i32.const 12216) "Signature checksum mismatch\00")
(data (i32.const 12244) "EOS\00")
(data (i32.const 12248) "Decode public key failed\00")
(data (i32.const 12273) "eosio.token\00")
(data (i32.const 12285) "BG\00")
(data (i32.const 12288) "bgbgbgbgbgbg\00")
(data (i32.const 12301) "USDT\00")
(data (i32.const 12306) "tethertether\00")
(data (i32.const 12319) "asset type error\00")
(data (i32.const 12337) "referrer.bg\00")
(data (i32.const 12349) "[\e2\99\a6\00")
(data (i32.const 12354) "[\e2\99\a3\00")
(data (i32.const 12359) "[\e2\99\a5\00")
(data (i32.const 12364) "[\e2\99\a0\00")
(data (i32.const 12369) "card color error\00")
(data (i32.const 12386) "A]\00")
(data (i32.const 12389) "2]\00")
(data (i32.const 12392) "3]\00")
(data (i32.const 12395) "4]\00")
(data (i32.const 12398) "5]\00")
(data (i32.const 12401) "6]\00")
(data (i32.const 12404) "7]\00")
(data (i32.const 12407) "8]\00")
(data (i32.const 12410) "9]\00")
(data (i32.const 12413) "10]\00")
(data (i32.const 12417) "J]\00")
(data (i32.const 12420) "Q]\00")
(data (i32.const 12423) "K]\00")
(data (i32.const 12426) "card value error\00")
(data (i32.const 12443) ",\00")
(data (i32.const 12445) ", STRAIGHT FLUSH\ef\bc\88\e5\90\8c\e8\8a\b1\e9\a1\ba\ef\bc\89\00")
(data (i32.const 12477) ", FIVE CALF\ef\bc\88\e4\ba\94\e5\b0\8f\e7\89\9b\ef\bc\89\00")
(data (i32.const 12504) ", QUADS\ef\bc\88\e7\82\b8\e5\bc\b9\e7\89\9b\ef\bc\89\00")
(data (i32.const 12527) ", FULL HOUSE\ef\bc\88\e8\91\ab\e8\8a\a6\e7\89\9b\ef\bc\89\00")
(data (i32.const 12555) ", FLUSH\ef\bc\88\e5\90\8c\e8\8a\b1\e7\89\9b\ef\bc\89\00")
(data (i32.const 12578) ", FULL FACE\ef\bc\88\e4\ba\94\e8\8a\b1\e7\89\9b\ef\bc\89\00")
(data (i32.const 12605) ", STRAIGHT\ef\bc\88\e9\a1\ba\e5\ad\90\e7\89\9b\ef\bc\89\00")
(data (i32.const 12631) ", BULL\ef\bc\88\e7\89\9b\e7\89\9b\ef\bc\89\00")
(data (i32.const 12650) ", BULL 9\ef\bc\88\e7\89\9b9\ef\bc\89\00")
(data (i32.const 12669) ", BULL 8\ef\bc\88\e7\89\9b8\ef\bc\89\00")
(data (i32.const 12688) ", BULL 7\ef\bc\88\e7\89\9b7\ef\bc\89\00")
(data (i32.const 12707) ", BULL 6\ef\bc\88\e7\89\9b6\ef\bc\89\00")
(data (i32.const 12726) ", BULL 5\ef\bc\88\e7\89\9b5\ef\bc\89\00")
(data (i32.const 12745) ", BULL 4\ef\bc\88\e7\89\9b4\ef\bc\89\00")
(data (i32.const 12764) ", BULL 3\ef\bc\88\e7\89\9b3\ef\bc\89\00")
(data (i32.const 12783) ", BULL 2\ef\bc\88\e7\89\9b2\ef\bc\89\00")
(data (i32.const 12802) ", BULL 1\ef\bc\88\e7\89\9b1\ef\bc\89\00")
(data (i32.const 12821) ", NONE\ef\bc\88\e6\97\a0\e7\89\9b\ef\bc\89\00")
(data (i32.const 12840) "card type error\00")
(data (i32.const 12856) ", LOSE\ef\bc\88\e8\be\93\ef\bc\89\00")
(data (i32.const 12872) ", WIN\ef\bc\88\e8\b5\a2\ef\bc\89\00")
(data (i32.const 12887) "banker:\00")
(data (i32.const 12895) "-\00")
(data (i32.const 12897) "memo error\00")
(data (i32.const 12908) "0\00")
(data (i32.const 12910) "player error from memo\00")
(data (i32.const 12933) "referrer error from memo\00")
(data (i32.const 12958) "ratio error\00")
(data (i32.const 12970) "no game id\00")
(data (i32.const 12981) "spades ante error\00")
(data (i32.const 12999) "hearts ante error\00")
(data (i32.const 13017) "clubs ante error\00")
(data (i32.const 13034) "diamonds ante error\00")
(data (i32.const 13054) "sign error\00")
(data (i32.const 13065) "EOS8CTgMoeCxLpHHgJX3sJvhmJCpFXXJDpNk3dV6QBqzxftyGgWXV\00")
(data (i32.const 13119) "not system balance enough&\00")
(data (i32.const 13146) "operator\00")
(data (i32.const 13155) "this round is not end\00")
(data (i32.const 13177) "round state error\00")
(data (i32.const 13195) "game not exists\00")
(data (i32.const 13211) "leabankers is null.\00")
(data (i32.const 13231) "Reduce success. \e5\87\8f\e4\bb\93\e6\88\90\e5\8a\9f\e3\80\82\00")
(data (i32.const 13263) "active\00")
(data (i32.const 13270) "transfer\00")
(data (i32.const 13279) "Bankering settlement. \e5\9d\90\e5\ba\84\e7\bb\93\e7\ae\97\e3\80\82\00")
(data (i32.const 13317) "unbankinfo\00")
(data (i32.const 13328) "existing blacklisted users\00")
(data (i32.const 13355) "existing blacklist\00")
(data (i32.const 13374) "off the blacklist\00")
(data (i32.const 13392) "balance not null\00")
(data (i32.const 13409) "amount less than 0\00")
(data (i32.const 13428) "Refund of bankroll investment. The game does not support smart contract account to join bankroll. \e4\b8\8a\e5\ba\84\e9\87\91\e9\a2\9d\e9\80\80\e6\ac\be\e3\80\82\e6\b8\b8\e6\88\8f\e4\b8\8d\e6\94\af\e6\8c\81\e5\90\88\e7\ba\a6\e8\b4\a6\e6\88\b7\e4\b8\8a\e5\ba\84\e3\80\82\00")
(data (i32.const 13584) "settlement in progress, please wait\00")
(data (i32.const 13620) "The minimum amount is 50 EOS\00")
(data (i32.const 13649) "referrer can not be self\00")
(data (i32.const 13674) "exception account\00")
(data (i32.const 13692) "bulls unbanker cancel too often\00")
(data (i32.const 13724) "Cancelled join/raise request. \e6\88\90\e5\8a\9f\e5\8f\96\e6\b6\88\e4\b8\8a\e5\ba\84/\e5\8a\a0\e4\bb\93\e3\80\82\00")
(data (i32.const 13783) "invalid operation\00")
(data (i32.const 13801) "invalid quantity\00")
(data (i32.const 13818) "unnecessary init\00")
(data (i32.const 13835) "empty key\00")
(data (i32.const 13845) "RECHARGE\00")
(data (i32.const 13854) "eosio.ram\00")
(data (i32.const 13864) "eosio.stake\00")
(data (i32.const 13876) "game expired\00")
(data (i32.const 13889) "bet stopped\00")
(data (i32.const 13901) "wallet.bg\00")
(data (i32.const 13911) "betinfo\00")
(data (i32.const 13919) "not the current game\00")
(data (i32.const 13940) "spades odds err\00")
(data (i32.const 13956) "hearts odds err\00")
(data (i32.const 13972) "clubs odds err\00")
(data (i32.const 13987) "diamonds odds err\00")
(data (i32.const 14005) "game already draw\00")
(data (i32.const 14023) "Game ID: \00")
(data (i32.const 14033) ". Settlement amount of the game Bull Fights. \e6\b8\b8\e6\88\8fID\ef\bc\9a\00")
(data (i32.const 14090) "\e3\80\82\e7\99\be\e4\ba\ba\e7\89\9b\e7\89\9b\e7\bb\93\e7\ae\97\e9\87\91\e9\a2\9d\e3\80\82\00")
(data (i32.const 14121) "reveal\00")
(data (i32.const 14128) "game finish\00")
(data (i32.const 14140) "game not draw\00")
(data (i32.const 14154) "round: \00")
(data (i32.const 14162) " game: \00")
(data (i32.const 14170) "buyer.bg\00")
(data (i32.const 14179) "giver.bg\00")
(data (i32.const 14188) "bonus.bg\00")
(data (i32.const 14197) "FOR VIP REBATE\00")
(data (i32.const 14212) "bulls-banker\00")
(data (i32.const 14225) "maxbet\00")
(data (i32.const 14232) "singlemax\00")
(data (i32.const 14242) "&personal\00")
(data (i32.const 14252) "bgrate\00")
(data (i32.const 14259) "bankerrate\00")
(data (i32.const 14270) "playerrate\00")
(data (i32.const 14281) "gamestopped\00")
(data (i32.const 14293) "game is stopped\00")
(data (i32.const 14309) "game state error\00")
(data (i32.const 14326) "invalid account\00")
(data (i32.const 14342) "bg too little\00")
(data (i32.const 14356) "onerror\00")
(data (i32.const 14364) "eosio\00")
(data (i32.const 14370) "onerror action\'s are only valid from the \"EOS\" system account\00")
(data (i32.const 14432) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 14465) "string is too long to be a valid name\00")
(data (i32.const 14503) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 14570) "character is not in allowed character set for names\00")
(data (i32.const 14622) "string is too long to be a valid symbol_code\00")
(data (i32.const 14667) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 14720) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 14769) "invalid symbol name\00")
(data (i32.const 14789) "divide by zero\00")
(data (i32.const 14804) "signed division overflow\00")
(data (i32.const 14829) "multiplication overflow\00")
(data (i32.const 14853) "multiplication underflow\00")
(data (i32.const 14878) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 14937) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 14988) "error reading iterator\00")
(data (i32.const 15011) "read\00")
(data (i32.const 15016) "attempt to add asset with different symbol\00")
(data (i32.const 15059) "addition underflow\00")
(data (i32.const 15078) "addition overflow\00")
(data (i32.const 15096) "cannot pass end iterator to modify\00")
(data (i32.const 15131) "object passed to modify is not in multi_index\00")
(data (i32.const 15177) "cannot modify objects in table of another contract\00")
(data (i32.const 15228) "updater cannot change primary key when modifying an object\00")
(data (i32.const 15287) "write\00")
(data (i32.const 15293) "cannot create objects in table of another contract\00")
(data (i32.const 15344) "attempt to subtract asset with different symbol\00")
(data (i32.const 15392) "subtraction underflow\00")
(data (i32.const 15414) "subtraction overflow\00")
(data (i32.const 15435) "miner.bg\00")
(data (i32.const 15444) "payout\00")
(data (i32.const 15451) "you are on the blacklist\00")
(data (i32.const 15476) "activity.bg\00")
(data (i32.const 15488) "record\00")
(data (i32.const 15495) "saveplayer\00")
(data (i32.const 15506) "unable to find key\00")
(data (i32.const 15525) "unexpected error in fixed_bytes constructor\00")
(data (i32.const 15569) "cannot pass end iterator to erase\00")
(data (i32.const 15603) "cannot increment end iterator\00")
(data (i32.const 15633) "object passed to erase is not in multi_index\00")
(data (i32.const 15678) "cannot erase objects in table of another contract\00")
(data (i32.const 15728) "attempt to remove object that was not in multi_index\00")
(data (i32.const 15781) "next primary key in table is at autoincrement limit\00")
(data (i32.const 15833) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 15887) "cannot decrement iterator at beginning of table\00")
(data (i32.const 15935) "bankerbet\00")
(data (i32.const 15945) "get\00")
(data (i32.const 0) "P>\00\00")
(import "env" "send_deferred" (func $fimport$0 (param i32 i64 i32 i32 i32)))
(import "env" "abort" (func $fimport$1))
(import "env" "eosio_assert" (func $fimport$2 (param i32 i32)))
(import "env" "memset" (func $fimport$3 (param i32 i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$4 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$6 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$7 (param i32 i32)))
(import "env" "__multf3" (func $fimport$8 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$9 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$11 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$12 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$13 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$14 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$15 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$16 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$17 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$18 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$19 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$20 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$21 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$22 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$23 (param i64 i64) (result i32)))
(import "env" "__ashlti3" (func $fimport$24 (param i32 i64 i64 i32)))
(import "env" "assert_sha256" (func $fimport$25 (param i32 i32 i32)))
(import "env" "assert_sha1" (func $fimport$26 (param i32 i32 i32)))
(import "env" "assert_sha512" (func $fimport$27 (param i32 i32 i32)))
(import "env" "assert_ripemd160" (func $fimport$28 (param i32 i32 i32)))
(import "env" "sha256" (func $fimport$29 (param i32 i32 i32)))
(import "env" "sha1" (func $fimport$30 (param i32 i32 i32)))
(import "env" "sha512" (func $fimport$31 (param i32 i32 i32)))
(import "env" "ripemd160" (func $fimport$32 (param i32 i32 i32)))
(import "env" "recover_key" (func $fimport$33 (param i32 i32 i32 i32 i32) (result i32)))
(import "env" "assert_recover_key" (func $fimport$34 (param i32 i32 i32 i32 i32)))
(import "env" "transaction_size" (func $fimport$35 (result i32)))
(import "env" "read_transaction" (func $fimport$36 (param i32 i32) (result i32)))
(import "env" "has_auth" (func $fimport$37 (param i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$38 (param i64 i64 i64 i64) (result i32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$39 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$40 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$41 (param i32 i32) (result i64)))
(import "env" "current_time" (func $fimport$42 (result i64)))
(import "env" "get_active_producers" (func $fimport$43 (param i32 i32) (result i32)))
(import "env" "__multi3" (func $fimport$44 (param i32 i64 i64 i64 i64)))
(import "env" "is_account" (func $fimport$45 (param i64) (result i32)))
(import "env" "current_receiver" (func $fimport$46 (result i64)))
(import "env" "db_next_i64" (func $fimport$47 (param i32 i32) (result i32)))
(import "env" "require_auth2" (func $fimport$48 (param i64 i64)))
(import "env" "db_lowerbound_i64" (func $fimport$49 (param i64 i64 i64 i64) (result i32)))
(import "env" "send_inline" (func $fimport$50 (param i32 i32)))
(import "env" "db_store_i64" (func $fimport$51 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_store" (func $fimport$52 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "require_auth" (func $fimport$53 (param i64)))
(import "env" "require_recipient" (func $fimport$54 (param i64)))
(import "env" "action_data_size" (func $fimport$55 (result i32)))
(import "env" "read_action_data" (func $fimport$56 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$57 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$58 (param i32 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$59 (param i32 i64 i32 i32)))
(import "env" "db_remove_i64" (func $fimport$60 (param i32)))
(import "env" "db_previous_i64" (func $fimport$61 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$62 (param i64 i64 i64) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$63 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$64 (param i32)))
(import "env" "db_idx64_update" (func $fimport$65 (param i32 i64 i32)))
(export "apply" (func $275))
(table $0 28 28 anyfunc)
(elem (i32.const 1) $33 $35 $77 $78 $79 $232 $198 $263 $267 $220 $225 $269 $148 $164 $262 $230 $224 $212 $147 $208 $163 $264 $155 $153 $266 $274 $227)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 15949))
(global $global$2 i32 (i32.const 15949))


int_32 .FUNC $121 (int_32 $0)
{
	int_32 $1
	if ( (*($0 + [116]) & [1]) ){ goto $label$17 }
	if ( (*($0 + [104]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $9(*(($0 + [124])))
	if ( ((*($0 + [104]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $9(*(($0 + [112])))
	$1 = [1]
	if ( ((*($0 + [92]) & [1]) == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$1 = [1]
	if ( (*($0 + [92]) & [1]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( (*($0 + [80]) & $1) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $9(*(($0 + [100])))
	if ( ((*($0 + [80]) & $1) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $9(*(($0 + [88])))
	$1 = [1]
	if ( ((*($0 + [68]) & [1]) == 0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$1 = [1]
	if ( (*($0 + [68]) & [1]) ){ goto $label$9 }
	
.LABEL $label$10
	if ( (*($0 + [52]) & $1) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*(($0 + [76])))
	if ( ((*($0 + [52]) & $1) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($0 + [60])))
	$1 = [1]
	if ( ((*($0 + [40]) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$1 = [1]
	if ( (*($0 + [40]) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	if ( (*($0 + [28]) & $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $9(*(($0 + [48])))
	if ( ((*($0 + [28]) & $1) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $9(*(($0 + [36])))
	if ( ((*($0 + [16]) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($0 + [16]) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	return $0
	
.LABEL $label$1
	CALL $9(*(($0 + [24])))
	return $0
}

void .FUNC $120 (int_32 $0, int_32 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	*($0 + [16]) = (int_64)0
	*($0 + [40]) = (int_64)0
	*($0 + [68 align=4]) = (int_64)0
	*($0 + [92 align=4]) = (int_64)0
	*($0 + [116 align=4]) = (int_64)0
	*($0 + [128]) = (int_64)0
	*($0 + [144]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*(($0 + [32])) = (int_64)0
	*(($0 + [48])) = (int_64)0
	*(($0 + [56])) = (int_64)0
	*(($0 + [76])) = (int_64)0
	*(($0 + [84])) = (int_64)0
	*(($0 + [100])) = (int_64)0
	*(($0 + [108])) = (int_64)0
	*(($0 + [124])) = [0]
	*(($5 = ($0 + [136]))) = (int_64)0
	*(($6 = ($0 + [152]))) = (int_64)0
	*($0 + [8]) = $2
	*($0) = *($1)
	CALL $57(($0 + [16]), [13065])
	CALL $54(($0 + [28]), ($1 + [8]))
	CALL $54(($0 + [40]), ($1 + [120]))
	CALL $54(($0 + [52]), ($1 + [132]))
	*($0 + [64]) = *($1 + [24])
	CALL $54(($0 + [68]), ($1 + [28]))
	CALL $54(($0 + [80]), ($1 + [40]))
	CALL $54(($0 + [92]), ($1 + [52]))
	CALL $54(($0 + [104]), ($1 + [64]))
	CALL $54(($0 + [116]), ($1 + [76]))
	*($5) = *(($3 + [8]))
	*($0 + [128]) = *($3)
	*($0 + [144]) = *($4)
	*($6) = *(($4 + [8]))
}

int_32 .FUNC $364 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [4])
	$4 = ($0 + [8])
	$5 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$1
	CALL memcpy($1, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [8])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$2
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [16])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [24])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [32])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [40])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [48])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$7
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [56])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [64])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$9
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$10
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [72])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [80])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$11
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$12
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [88])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [96])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[3]) ){ goto $label$13 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$13
	CALL memcpy($6, $5, [4])
	$5 = (*($3) + [4])
	*($3) = $5
	$6 = ($1 + [100])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[3]) ){ goto $label$14 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$14
	CALL memcpy($6, $5, [4])
	$5 = (*($3) + [4])
	*($3) = $5
	$6 = ($1 + [104])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[3]) ){ goto $label$15 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$15
	CALL memcpy($6, $5, [4])
	$5 = (*($3) + [4])
	*($3) = $5
	$6 = ($1 + [112])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$16
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [120])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$17
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [128])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$18
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [136])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$19
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$1 = ($1 + [144])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[3]) ){ goto $label$20 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$20
	CALL memcpy($1, $5, [4])
	*(($3 = ($0 + [4]))) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [96])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([168])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [144]) = (int_64)0
	*($5 + [152]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [48])
	*($3 + [60]) = ($5 + [64])
	*($3 + [64]) = ($5 + [80])
	*($3 + [68]) = ($5 + [96])
	*($3 + [72]) = ($5 + [112])
	*($3 + [76]) = ($5 + [120])
	*($3 + [80]) = ($5 + [128])
	*($3 + [84]) = ($5 + [136])
	*($3 + [88]) = ($5 + [144])
	CALL $350(($3 + [40]), ($3 + [32]))
	*($5 + [156]) = $1
	*($3 + [32]) = $5
	*($3 + [40]) = (int_64)5310426098504302592
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)5310426098504302592
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $351(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [96])
	return $5
}

void .FUNC $189 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	*($1 + [16]) = (int_64)0
	$4 = *(*($0 + [4]))
	*($1) = *($4 + [480])
	*($1 + [8]) = ((int_64)*(($4 + [488])) + (int_64)1)
	$5 = *($0)
	*(($1 + [32])) = *(($4 + [504]))
	*($1 + [24]) = *(($4 + [496]))
	*($1 + [40]) = *(($4 + [528]))
	*(($1 + [48])) = *(($4 + [536]))
	$6 = CALL $15([12244])
	if ( ($6 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [14622])
	goto $label$3 
	
.LABEL $label$4
	if ( ($6 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = (int_64)0
	
.LOOP $label$5:
	$8 = *(($6 + [12243]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$6
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$5 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)4
	
.LABEL $label$1
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$7 = $10
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$7 = $10
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $8 ){ goto $label$11 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [14769])
	
.LABEL $label$7
	*($1 + [56]) = (int_64)0
	*(($1 + [64])) = $9
	*(($1 + [80])) = *(($4 + [520]))
	*($1 + [72]) = *(($4 + [512]))
	*($1 + [88]) = *(($4 + [544]))
	*(($1 + [96])) = *(($4 + [552]))
	$6 = CALL $15([12244])
	if ( ($6 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [14622])
	goto $label$14 
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$7 = (int_64)0
	
.LOOP $label$16:
	$8 = *(($6 + [12243]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$17
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$16 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$12 
	
.LABEL $label$13
	$9 = (int_64)4
	
.LABEL $label$12
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$21 }
	$7 = $10
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$21
	$7 = $10
	
.LOOP $label$22:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$19 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $8 ){ goto $label$22 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [14769])
	
.LABEL $label$18
	*($1 + [104]) = (int_64)0
	*(($1 + [112])) = $9
	*($1 + [120]) = ((int_64)CALL $86() / (int_64)1000000)
	*($1 + [124]) = ((int_64)CALL $86() / (int_64)1000000)
	$8 = $2
	$6 = ($8 + [-128])
	$global$0 = $6
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = $8
	CALL $371($3, $1)
	$7 = *($1)
	*($1 + [132]) = CALL db_store_i64(*($5 + [8]), (int_64)-5915062038115123200, *(*($0 + [8])), $7, $6, [128])
	if ( (uint_64)($7 <= *($5 + [16])) ){ goto $label$23 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$23
	$global$0 = ($3 + [16])
}

void .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [16]) = [14225]
	*($2 + [20]) = CALL $15([14225])
	*($2 + [8]) = *($2 + [16])
	CALL $99(($2 + [24]), ($2 + [8]))
	$3 = ($1 + [768])
	$5 = *(($1 + [796]))
	$4 = *(($1 + [792]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$13:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)-7945909520184639488) ){ goto $label$12 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$11 }
	if ( ((int_32)*($7 + [16]) == (int_32)$3) ){ goto $label$10 }
	CALL eosio_assert([0], [14937])
	$6 = *($7 + [8])
	if ( ((int_32)$6 >= (int_32)[1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$6 = CALL db_find_i64(*($3), *(($1 + [776])), (int_64)7235159550573564928, (int_64)-7945909520184639488)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$8 }
	$7 = CALL $192($3, $6)
	if ( ((int_32)*($7 + [16]) == (int_32)$3) ){ goto $label$10 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$10
	$6 = *($7 + [8])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$8 }
	
.LABEL $label$9
	$8 = (CASTING int_64)(int_32 $6)
	$6 = CALL $15([12244])
	if ( ($6 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [14622])
	goto $label$6 
	
.LABEL $label$8
	$6 = CALL $15([12244])
	if ( ($6 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [14622])
	goto $label$14 
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$5 }
	
.LABEL $label$14
	$9 = (int_64)0
	
.LOOP $label$16:
	$5 = *(($6 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$17
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$16 }
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)4)
	goto $label$2 
	
.LABEL $label$7
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$9 = (int_64)0
	
.LOOP $label$18:
	$5 = *(($6 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$19 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$19
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$18 }
	*($0) = $8
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)4)
	*($0 + [8]) = $9
	if ( (uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$3 }
	CALL eosio_assert([0], [14720])
	goto $label$3 
	
.LABEL $label$5
	$9 = (int_64)4
	goto $label$2 
	
.LABEL $label$4
	$9 = (int_64)4
	*($0 + [8]) = (int_64)4
	*($0) = $8
	
.LABEL $label$3
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$8 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$22 }
	$9 = $8
	$5 = $6
	$6 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$21 }
	goto $label$1 
	
.LABEL $label$22
	$9 = $8
	
.LOOP $label$23:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$20 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = ((int_32)$6 < (int_32)[6])
	$7 = ($6 + [1])
	$6 = $7
	if ( $5 ){ goto $label$23 }
	$6 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$21 }
	goto $label$1 
	
.LABEL $label$20
	CALL eosio_assert([0], [14769])
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	*($0 + [8]) = $9
	*($0) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$25:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$24 }
	$8 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$26 }
	$9 = $8
	$5 = $6
	$6 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$25 }
	goto $label$1 
	
.LABEL $label$26
	$9 = $8
	
.LOOP $label$27:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$24 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = ((int_32)$6 < (int_32)[6])
	$7 = ($6 + [1])
	$6 = $7
	if ( $5 ){ goto $label$27 }
	$6 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$25 }
	goto $label$1 
	
.LABEL $label$24
	CALL eosio_assert([0], [14769])
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$1
	$global$0 = ($2 + [32])
}

void .FUNC $49 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	
.LABEL $label$18
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$16
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$15
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$9
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$8
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$7
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$5
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$3
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$2
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($3, *($1))
	*($0 + [8]) = *(($3 + [8]))
	*($0) = *($3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$4 = *($1)
	*($0 + [8]) = *($1 + [8])
	*($0) = $4
	$global$0 = ($3 + [16])
	$1
}

int_32 .FUNC $48 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_64 $29
	int_64 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	$5 = ($global$0 - [8128])
	$global$0 = $5
	$6 = (($5 + [704]) | [8])
	$7 = (($5 + [704]) | [9])
	$8 = ([-2] - ($5 + [704]))
	$9 = ($5 + [7664])
	$10 = (($5 + [692]) + [12])
	$11 = (($5 + [352]) + [54])
	$12 = (($5 + [352]) + [55])
	$13 = [0]
	$14 = [0]
	$15 = [0]
	
.LOOP $label$4:
	if ( ($0 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	$17 = $1
	if ( ((int_32)$15 > (int_32)([2147483647] - $14)) ){ goto $label$3 }
	$14 = ($15 + $14)
	$1 = *($17)
	if ( ($1 == 0) ){ goto $label$1 }
	$15 = $17
	$1 = ($1 & [255])
	if ( ($1 == 0) ){ goto $label$24 }
	
.LOOP $label$25:
	if ( ((int_32)$1 == (int_32)[37]) ){ goto $label$23 }
	$1 = *($15 + [1])
	$15 = ($15 + [1])
	$1 = ($1 & [255])
	if ( $1 ){ goto $label$25 }
	
.LABEL $label$24
	$1 = $15
	$18 = ([2147483647] - $14)
	$15 = ($15 - $17)
	if ( ((int_32)$15 <= (int_32)$18) ){ goto $label$22 }
	goto $label$3 
	
.LABEL $label$23
	$18 = $15
	
.LOOP $label$27:
	if ( ((int_32)*(($18 + [1])) != (int_32)[37]) ){ goto $label$26 }
	$15 = ($15 + [1])
	$19 = *($18 + [2])
	$1 = ($18 + [2])
	$18 = $1
	if ( ((int_32)$19 == (int_32)[37]) ){ goto $label$27 }
	$18 = ([2147483647] - $14)
	$15 = ($15 - $17)
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	goto $label$22 
	
.LABEL $label$26
	$1 = $18
	$18 = ([2147483647] - $14)
	$15 = ($15 - $17)
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	
.LABEL $label$22
	if ( (*($0) & [32]) ){ goto $label$28 }
	CALL $40($17, $15, $0)
	
.LABEL $label$28
	if ( $15 ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	
.LOOP $label$29:
	$17 = $1
	if ( ((int_32)$15 > (int_32)([2147483647] - $14)) ){ goto $label$3 }
	$14 = ($15 + $14)
	$15 = *($17)
	if ( ($15 == 0) ){ goto $label$31 }
	$1 = $17
	$15 = ($15 & [255])
	if ( ($15 == 0) ){ goto $label$33 }
	
.LOOP $label$34:
	if ( ((int_32)$15 == (int_32)[37]) ){ goto $label$32 }
	$15 = *($1 + [1])
	$1 = ($1 + [1])
	$15 = ($15 & [255])
	if ( $15 ){ goto $label$34 }
	
.LABEL $label$33
	$18 = ([2147483647] - $14)
	$15 = ($1 - $17)
	if ( ((int_32)$15 <= (int_32)$18) ){ goto $label$30 }
	goto $label$3 
	
.LABEL $label$32
	$18 = $1
	$15 = $1
	
.LOOP $label$36:
	if ( ((int_32)*(($15 + [1])) != (int_32)[37]) ){ goto $label$35 }
	$18 = ($18 + [1])
	$19 = *($15 + [2])
	$1 = ($15 + [2])
	$15 = $1
	if ( ((int_32)$19 == (int_32)[37]) ){ goto $label$36 }
	$18 = ([2147483647] - $14)
	$15 = ($18 - $17)
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	goto $label$30 
	
.LABEL $label$35
	$1 = $15
	$18 = ([2147483647] - $14)
	$15 = ($18 - $17)
	if ( ((int_32)$15 <= (int_32)$18) ){ goto $label$30 }
	goto $label$3 
	
.LABEL $label$31
	if ( $0 ){ goto $label$1 }
	if ( ($13 == 0) ){ goto $label$46 }
	$1 = [1]
	$15 = *($4 + [4])
	if ( ($15 == 0) ){ goto $label$37 }
	CALL $49(($3 + [16]), $15, $2)
	$15 = *($4 + [8])
	if ( ($15 == 0) ){ goto $label$45 }
	CALL $49(($3 + [32]), $15, $2)
	$15 = *($4 + [12])
	if ( ($15 == 0) ){ goto $label$44 }
	CALL $49(($3 + [48]), $15, $2)
	$15 = *($4 + [16])
	if ( ($15 == 0) ){ goto $label$43 }
	CALL $49(($3 + [64]), $15, $2)
	$15 = *($4 + [20])
	if ( ($15 == 0) ){ goto $label$42 }
	CALL $49(($3 + [80]), $15, $2)
	$15 = *($4 + [24])
	if ( ($15 == 0) ){ goto $label$41 }
	CALL $49(($3 + [96]), $15, $2)
	$15 = *($4 + [28])
	if ( ($15 == 0) ){ goto $label$40 }
	CALL $49(($3 + [112]), $15, $2)
	$15 = *($4 + [32])
	if ( ($15 == 0) ){ goto $label$39 }
	CALL $49(($3 + [128]), $15, $2)
	$15 = *($4 + [36])
	if ( ($15 == 0) ){ goto $label$38 }
	CALL $49(($3 + [144]), $15, $2)
	$global$0 = ($5 + [8128])
	return [1]
	
.LABEL $label$46
	$global$0 = ($5 + [8128])
	return [0]
	
.LABEL $label$45
	$1 = [2]
	goto $label$37 
	
.LABEL $label$44
	$1 = [3]
	goto $label$37 
	
.LABEL $label$43
	$1 = [4]
	goto $label$37 
	
.LABEL $label$42
	$1 = [5]
	goto $label$37 
	
.LABEL $label$41
	$1 = [6]
	goto $label$37 
	
.LABEL $label$40
	$1 = [7]
	goto $label$37 
	
.LABEL $label$39
	$1 = [8]
	goto $label$37 
	
.LABEL $label$38
	$1 = [9]
	
.LABEL $label$37
	$15 = ($4 + ($1 << [2]))
	
.LOOP $label$47:
	if ( *($15) ){ goto $label$18 }
	$15 = ($15 + [4])
	$14 = [1]
	$1 = ($1 + [1])
	if ( ((uint_32)$1 <= (uint_32)[9]) ){ goto $label$47 }
	goto $label$1 
	
.LABEL $label$30
	if ( $15 ){ goto $label$29 }
	
.LABEL $label$19
	$15 = ($1 + [1])
	$16 = *($1 + [1])
	$20 = ($16 + [-48])
	if ( ((uint_32)$20 > (uint_32)[9]) ){ goto $label$50 }
	$19 = ((int_32)*($1 + [2]) == (int_32)[36])
	$15 = ( ($1 + [3]) ? $15 : $19 )
	$21 = ( $20 ? [-1] : $19 )
	$13 = ( [1] ? $13 : $19 )
	$22 = [0]
	$16 = *(($1 + ( [3] ? [1] : $19 )))
	$1 = ($16 + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$48 }
	goto $label$49 
	
.LABEL $label$50
	$21 = [-1]
	$22 = [0]
	$1 = ($16 + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$48 }
	
.LABEL $label$49
	$1 = ([1] << $1)
	if ( (($1 & [75913]) == 0) ){ goto $label$48 }
	$19 = ($15 + [1])
	$22 = [0]
	
.LOOP $label$51:
	$22 = ($1 | $22)
	$15 = $19
	$16 = *($15)
	$1 = ($16 + [-32])
	if ( ((uint_32)$1 >= (uint_32)[32]) ){ goto $label$48 }
	$19 = ($15 + [1])
	$1 = ([1] << $1)
	if ( ($1 & [75913]) ){ goto $label$51 }
	
.LABEL $label$48
	if ( ((int_32)$16 != (int_32)[42]) ){ goto $label$57 }
	$1 = (*($15 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$56 }
	if ( ((int_32)*($15 + [2]) != (int_32)[36]) ){ goto $label$56 }
	*(($4 + ($1 << [2]))) = [10]
	$23 = ($15 + [3])
	$13 = [1]
	$20 = *((($3 + (*(($15 + [1])) << [4])) + [-768]))
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$52 }
	goto $label$55 
	
.LABEL $label$57
	$20 = [0]
	$19 = ($16 + [-48])
	if ( ((uint_32)$19 > (uint_32)[9]) ){ goto $label$54 }
	$1 = [0]
	
.LOOP $label$58:
	$20 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$59 }
	$1 = ((int_32)$1 * (int_32)[10])
	$20 = ( [-1] ? ($1 + $19) : ((int_32)$19 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$59
	$19 = *($15 + [1])
	$23 = ($15 + [1])
	$15 = $23
	$1 = $20
	$19 = ($19 + [-48])
	if ( ($19 <= [10]) ){ goto $label$58 }
	if ( ((int_32)$20 >= (int_32)[0]) ){ goto $label$52 }
	goto $label$3 
	
.LABEL $label$56
	if ( $13 ){ goto $label$18 }
	$23 = ($15 + [1])
	if ( ($0 == 0) ){ goto $label$53 }
	$15 = *($2)
	*($2) = ($15 + [4])
	$13 = [0]
	$20 = *($15)
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$52 }
	
.LABEL $label$55
	$20 = ([0] - $20)
	$22 = ($22 | [8192])
	goto $label$52 
	
.LABEL $label$54
	$23 = $15
	goto $label$52 
	
.LABEL $label$53
	$13 = [0]
	$20 = [0]
	
.LABEL $label$52
	$15 = [0]
	$16 = [-1]
	if ( ((int_32)*($23) != (int_32)[46]) ){ goto $label$66 }
	$19 = *($23 + [1])
	if ( ((int_32)$19 != (int_32)[42]) ){ goto $label$65 }
	$1 = (*($23 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$64 }
	if ( ((int_32)*($23 + [3]) != (int_32)[36]) ){ goto $label$64 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($23 + [4])
	$16 = *((($3 + (*(($23 + [2])) << [4])) + [-768]))
	goto $label$61 
	
.LABEL $label$66
	$1 = $23
	$24 = [0]
	goto $label$60 
	
.LABEL $label$65
	$1 = ($23 + [1])
	$25 = ($19 + [-48])
	if ( ((uint_32)$25 > (uint_32)[9]) ){ goto $label$63 }
	$23 = [0]
	$19 = $1
	
.LOOP $label$67:
	$16 = [-1]
	if ( ((uint_32)$23 > (uint_32)[214748364]) ){ goto $label$68 }
	$1 = ((int_32)$23 * (int_32)[10])
	$16 = ( [-1] ? ($1 + $25) : ((int_32)$25 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$68
	$24 = [1]
	$25 = *($19 + [1])
	$1 = ($19 + [1])
	$19 = $1
	$23 = $16
	$25 = ($25 + [-48])
	if ( ($25 <= [10]) ){ goto $label$67 }
	goto $label$60 
	
.LABEL $label$64
	if ( $13 ){ goto $label$18 }
	$1 = ($23 + [2])
	if ( ($0 == 0) ){ goto $label$62 }
	$19 = *($2)
	*($2) = ($19 + [4])
	$16 = *($19)
	goto $label$61 
	
.LABEL $label$63
	$24 = [1]
	$16 = [0]
	goto $label$60 
	
.LABEL $label$62
	$16 = [0]
	
.LABEL $label$61
	$24 = ((int_32)uint_32($16 >> [31]) ^ (int_32)[1])
	
.LABEL $label$60
	
.LOOP $label$69:
	$19 = $15
	$15 = (*($1) + [-65])
	if ( ((uint_32)$15 > (uint_32)[57]) ){ goto $label$18 }
	$1 = ($1 + [1])
	$15 = *(((((int_32)$19 * (int_32)[58]) + $15) + [10656]))
	if ( (($15 + [-1]) <= [8]) ){ goto $label$69 }
	if ( ($15 == 0) ){ goto $label$18 }
	if ( ((int_32)$15 != (int_32)[27]) ){ goto $label$72 }
	if ( ((int_32)$21 > (int_32)[-1]) ){ goto $label$18 }
	$15 = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	goto $label$71 
	
.LABEL $label$72
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$73 }
	*(($4 + ($21 << [2]))) = $15
	$15 = ($3 + ($21 << [4]))
	*($5 + [424]) = *(($15 + [8]))
	*($5 + [416]) = *($15)
	$15 = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	goto $label$71 
	
.LABEL $label$73
	if ( ($0 == 0) ){ goto $label$70 }
	CALL $49(($5 + [416]), $15, $2)
	
.LABEL $label$71
	$23 = ($22 & [-65537])
	$21 = ( $23 ? $22 : ($22 & [8192]) )
	$26 = [0]
	$27 = [8290]
	$15 = *(($1 + [-1]))
	$28 = ( ( ($15 & [-33]) ? $15 : ((int_32)($15 & [15]) == (int_32)[3]) ) ? $15 : $19 )
	$15 = ($28 + [-65])
	if ( ((uint_32)$15 > (uint_32)[55]) ){ goto $label$9 }
	$22 = $12
	goto $label$101 
	
.LABEL $label$101
	if ( ((int_32)$16 > (int_32)[-1]) ){ goto $label$102 }
	if ( $24 ){ goto $label$3 }
	
.LABEL $label$102
	$29 = *($5 + [424])
	$30 = *($5 + [416])
	*($5 + [748]) = [0]
	if ( (CALL $41($30, $29) == 0) ){ goto $label$103 }
	$31 = [1]
	$32 = [11136]
	$29 = ((int_64)$29 ^ (int_64)-9223372036854775808)
	if ( ((int_32)CALL $31($30, $29) <= (int_32)[1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$103
	if ( ($21 & [2048]) ){ goto $label$99 }
	$31 = ($21 & [1])
	$32 = ( [11142] ? [11137] : $31 )
	if ( ((int_32)CALL $31($30, $29) > (int_32)[1]) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$100
	$29 = *($5 + [416])
	if ( ((int_64)$29 <= (int_64)-1) ){ goto $label$86 }
	if ( ($21 & [2048]) ){ goto $label$84 }
	$26 = ($21 & [1])
	$27 = ( [8292] ? [8290] : $26 )
	if ( ((uint_64)$29 >= (uint_64)(int_64)4294967296) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$99
	$31 = [1]
	$32 = [11139]
	if ( ((int_32)CALL $31($30, $29) <= (int_32)[1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$98
	*((($5 + [344]) + [4])) = [0]
	*($5 + [344]) = *($5 + [416])
	*($5 + [416]) = ($5 + [344])
	$16 = [-1]
	$17 = ($5 + [344])
	goto $label$96 
	
.LABEL $label$97
	$17 = *($5 + [416])
	if ( ($16 == 0) ){ goto $label$80 }
	
.LABEL $label$96
	$15 = [0]
	$18 = $17
	
.LOOP $label$104:
	$19 = *($18)
	if ( ($19 == 0) ){ goto $label$82 }
	$19 = CALL $38(($5 + [340]), $19)
	$22 = ((int_32)$19 < (int_32)[0])
	if ( $22 ){ goto $label$83 }
	if ( ((uint_32)$19 > (uint_32)($16 - $15)) ){ goto $label$83 }
	$18 = ($18 + [4])
	$15 = ($19 + $15)
	if ( ((uint_32)$16 > (uint_32)$15) ){ goto $label$104 }
	goto $label$82 
	
.LABEL $label$95
	*((($5 + [352]) + [54])) = *($5 + [416])
	$16 = [1]
	$17 = $11
	$22 = $12
	$21 = $23
	goto $label$8 
	
.LABEL $label$94
	$17 = CALL $44(*(CALL $4()))
	goto $label$88 
	
.LABEL $label$93
	$15 = [0]
	$18 = ($19 & [255])
	if ( ((uint_32)$18 > (uint_32)[7]) ){ goto $label$4 }
	goto $label$105 
	
.LABEL $label$105
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$92
	$17 = $12
	$29 = *($5 + [416])
	if ( (int_64)($29 == 0) ){ goto $label$106 }
	$17 = $12
	
.LOOP $label$107:
	*(($17 = ($17 + [-1]))) = (((CASTING uint_32)(uint_64 $29) & [7]) | [48])
	$29 = (uint_64)$29 >> (uint_64)(int_64)3
	if ( ((int_64)$29) != (int_64)0) ){ goto $label$107 }
	
.LABEL $label$106
	if ( ($21 & [8]) ){ goto $label$81 }
	$26 = [0]
	$27 = [8290]
	if ( $24 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$91
	$16 = ( $16 ? [8] : ((uint_32)$16 > (uint_32)[8]) )
	$21 = ($21 | [8])
	$28 = [120]
	
.LABEL $label$90
	$26 = [0]
	$27 = [8290]
	$29 = *($5 + [416])
	if ( (int_64)($29 == 0) ){ goto $label$108 }
	$15 = ($28 & [32])
	$17 = $12
	
.LOOP $label$109:
	*(($17 = ($17 + [-1]))) = (*((((CASTING uint_32)(uint_64 $29) & [15]) + [11120])) | $15)
	$29 = (uint_64)$29 >> (uint_64)(int_64)4
	if ( ((int_64)$29) != (int_64)0) ){ goto $label$109 }
	if ( (($21 & [8]) == 0) ){ goto $label$12 }
	if ( (int_64)(*($5 + [416]) == 0) ){ goto $label$12 }
	$27 = (int_32($28 >> [4]) + [8290])
	$26 = [2]
	if ( $24 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$108
	$17 = $12
	if ( $24 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$89
	$15 = *($5 + [416])
	$17 = ( $15 ? [10636] : $15 )
	
.LABEL $label$88
	$26 = [0]
	$15 = CALL $45($17, ( [2147483647] ? $16 : ((int_32)$16 < (int_32)[0]) ))
	$22 = ($17 + $15)
	if ( ((int_32)$16 <= (int_32)[-1]) ){ goto $label$85 }
	$21 = $23
	$16 = $15
	goto $label$8 
	
.LABEL $label$87
	$26 = [0]
	$27 = [8290]
	$29 = *($5 + [416])
	if ( (uint_64)($29 <= (int_64)4294967296) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$86
	$29 = (int_64)
	*($5 + [416]) = $29((int_64)0 - $29))
	$26 = [1]
	$27 = [8290]
	if ( ((uint_64)$29 >= (uint_64)(int_64)4294967296) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$85
	$21 = $23
	$16 = $15
	if ( (*($22) == 0) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$84
	$26 = [1]
	$27 = [8291]
	if ( (uint_64)($29 <= (int_64)4294967296) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$83
	if ( $22 ){ goto $label$2 }
	
.LABEL $label$82
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$3 }
	$23 = ($21 & [73728])
	if ( $23 ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$81
	$15 = ($12 - $17)
	$27 = ( [8290] ? [8295] : ((int_32)$16 > (int_32)$15) )
	$26 = ((int_32)$16 <= (int_32)$15)
	goto $label$12 
	
.LABEL $label$80
	$15 = [0]
	$23 = ($21 & [73728])
	if ( ($23 == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$79
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$78
	*(*($5 + [416])) = (CASTING int_64)(int_32 $14)
	goto $label$4 
	
.LABEL $label$77
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$76
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$75
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$74
	*(*($5 + [416])) = (CASTING int_64)(int_32 $14)
	goto $label$4 
	
.LABEL $label$70
	$global$0 = ($5 + [8128])
	return [0]
	
.LABEL $label$18
	*(CALL $4()) = [22]
	goto $label$2 
	
.LABEL $label$17
	if ( ((int_32)$20 <= (int_32)$15) ){ goto $label$16 }
	$18 = ($25 <= [256])
	$25 = ($20 - $15)
	CALL memset(($5 + [432]), [32], ( $25 ? [256] : $18 ))
	$16 = *($0)
	$19 = ($16 & [32])
	if ( $18 ){ goto $label$111 }
	$18 = ($19 == 0)
	$19 = $25
	
.LOOP $label$112:
	if ( (($18 & [1]) == 0) ){ goto $label$113 }
	CALL $40(($5 + [432]), [256], $0)
	$16 = *($0)
	
.LABEL $label$113
	$22 = ($16 & [32])
	$18 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$112 }
	if ( $22 ){ goto $label$16 }
	$25 = ($25 & [255])
	goto $label$110 
	
.LABEL $label$111
	if ( $19 ){ goto $label$16 }
	
.LABEL $label$110
	CALL $40(($5 + [432]), $25, $0)
	
.LABEL $label$16
	if ( ($15 == 0) ){ goto $label$114 }
	$18 = [0]
	
.LOOP $label$115:
	$19 = *($17)
	if ( ($19 == 0) ){ goto $label$114 }
	$19 = CALL $38(($5 + [340]), $19)
	$18 = ($19 + $18)
	if ( ((uint_32)$18 > (uint_32)$15) ){ goto $label$114 }
	if ( (*($0) & [32]) ){ goto $label$116 }
	CALL $40(($5 + [340]), $19, $0)
	
.LABEL $label$116
	$17 = ($17 + [4])
	if ( ($18 <= $15) ){ goto $label$115 }
	
.LABEL $label$114
	if ( ((int_32)$23 != (int_32)[8192]) ){ goto $label$117 }
	if ( ((int_32)$20 <= (int_32)$15) ){ goto $label$117 }
	$18 = ($22 <= [256])
	$22 = ($20 - $15)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $18 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $18 ){ goto $label$119 }
	$18 = ($19 == 0)
	$19 = $22
	
.LOOP $label$120:
	if ( (($18 & [1]) == 0) ){ goto $label$121 }
	CALL $40(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$121
	$16 = ($17 & [32])
	$18 = ($16 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$120 }
	if ( $16 ){ goto $label$117 }
	$22 = ($22 & [255])
	goto $label$118 
	
.LABEL $label$119
	if ( $19 ){ goto $label$117 }
	
.LABEL $label$118
	CALL $40(($5 + [432]), $22, $0)
	
.LABEL $label$117
	$15 = ( $20 ? $15 : ((int_32)$20 > (int_32)$15) )
	goto $label$4 
	
.LABEL $label$15
	$30 = $29
	$17 = $12
	goto $label$13 
	
.LABEL $label$14
	$17 = $12
	
.LOOP $label$122:
	$30 = ((uint_64)$29 / (uint_64)(int_64)10)
	*(($17 = ($17 + [-1]))) = ((CASTING uint_32)(uint_64 (int_64))($29 - ((int_64)$30 * (int_64)10))) | [48])
	$15 = ((uint_64)$29 > (uint_64)(int_64)42949672959)
	$29 = $30
	if ( $15 ){ goto $label$122 }
	
.LABEL $label$13
	$15 = (CASTING uint_32)(uint_64 $30)
	if ( ($15 == 0) ){ goto $label$12 }
	
.LOOP $label$123:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(($17 = ($17 + [-1]))) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$22 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $22 ){ goto $label$123 }
	
.LABEL $label$12
	if ( ($24 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$10
	$21 = ( ($21 & [-65537]) ? $21 : ((int_32)$16 > (int_32)[-1]) )
	$29 = *($5 + [416])
	if ( $16 ){ goto $label$124 }
	if ( ((int_64)($29 == 0) == 0) ){ goto $label$124 }
	$17 = $12
	$22 = $12
	$16 = [0]
	goto $label$8 
	
.LABEL $label$124
	$15 = (($12 - $17) + (int_64)($29 == 0))
	$16 = ( $16 ? $15 : ((int_32)$16 > (int_32)$15) )
	
.LABEL $label$9
	$22 = $12
	
.LABEL $label$8
	$24 = ($22 - $17)
	$28 = ( $24 ? $16 : ((int_32)$16 < (int_32)$24) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$3 }
	$25 = ($26 + $28)
	$15 = ( $25 ? $20 : ((int_32)$20 < (int_32)$25) )
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	$21 = ($21 & [73728])
	if ( $21 ){ goto $label$125 }
	if ( ((int_32)$25 >= (int_32)$20) ){ goto $label$125 }
	$18 = ($31 <= [256])
	$31 = ($15 - $25)
	CALL memset(($5 + [432]), [32], ( $31 ? [256] : $18 ))
	$22 = *($0)
	$19 = ($22 & [32])
	if ( $18 ){ goto $label$127 }
	$18 = ($19 == 0)
	$19 = $31
	
.LOOP $label$128:
	if ( (($18 & [1]) == 0) ){ goto $label$129 }
	CALL $40(($5 + [432]), [256], $0)
	$22 = *($0)
	
.LABEL $label$129
	$23 = ($22 & [32])
	$18 = ($23 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$128 }
	if ( $23 ){ goto $label$125 }
	$31 = ($31 & [255])
	goto $label$126 
	
.LABEL $label$127
	if ( $19 ){ goto $label$125 }
	
.LABEL $label$126
	CALL $40(($5 + [432]), $31, $0)
	
.LABEL $label$125
	if ( (*($0) & [32]) ){ goto $label$130 }
	CALL $40($27, $26, $0)
	
.LABEL $label$130
	if ( ((int_32)$21 != (int_32)[65536]) ){ goto $label$131 }
	if ( ((int_32)$25 >= (int_32)$20) ){ goto $label$131 }
	$18 = ($26 <= [256])
	$26 = ($15 - $25)
	CALL memset(($5 + [432]), [48], ( $26 ? [256] : $18 ))
	$22 = *($0)
	$19 = ($22 & [32])
	if ( $18 ){ goto $label$133 }
	$18 = ($19 == 0)
	$19 = $26
	
.LOOP $label$134:
	if ( (($18 & [1]) == 0) ){ goto $label$135 }
	CALL $40(($5 + [432]), [256], $0)
	$22 = *($0)
	
.LABEL $label$135
	$23 = ($22 & [32])
	$18 = ($23 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$134 }
	if ( $23 ){ goto $label$131 }
	$26 = ($26 & [255])
	goto $label$132 
	
.LABEL $label$133
	if ( $19 ){ goto $label$131 }
	
.LABEL $label$132
	CALL $40(($5 + [432]), $26, $0)
	
.LABEL $label$131
	if ( ((int_32)$24 >= (int_32)$16) ){ goto $label$136 }
	$18 = ($23 <= [256])
	$23 = ($28 - $24)
	CALL memset(($5 + [432]), [48], ( $23 ? [256] : $18 ))
	$16 = *($0)
	$19 = ($16 & [32])
	if ( $18 ){ goto $label$138 }
	$18 = ($19 == 0)
	$19 = $23
	
.LOOP $label$139:
	if ( (($18 & [1]) == 0) ){ goto $label$140 }
	CALL $40(($5 + [432]), [256], $0)
	$16 = *($0)
	
.LABEL $label$140
	$22 = ($16 & [32])
	$18 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$139 }
	if ( $22 ){ goto $label$136 }
	$23 = ($23 & [255])
	goto $label$137 
	
.LABEL $label$138
	if ( $19 ){ goto $label$136 }
	
.LABEL $label$137
	CALL $40(($5 + [432]), $23, $0)
	
.LABEL $label$136
	if ( (*($0) & [32]) ){ goto $label$141 }
	CALL $40($17, $24, $0)
	
.LABEL $label$141
	if ( ((int_32)$21 != (int_32)[8192]) ){ goto $label$4 }
	if ( ((int_32)$25 >= (int_32)$20) ){ goto $label$4 }
	$18 = ($16 <= [256])
	$16 = ($15 - $25)
	CALL memset(($5 + [432]), [32], ( $16 ? [256] : $18 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $18 ){ goto $label$143 }
	$18 = ($19 == 0)
	$19 = $16
	
.LOOP $label$144:
	if ( (($18 & [1]) == 0) ){ goto $label$145 }
	CALL $40(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$145
	$20 = ($17 & [32])
	$18 = ($20 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$144 }
	if ( $20 ){ goto $label$4 }
	$16 = ($16 & [255])
	goto $label$142 
	
.LABEL $label$143
	if ( $19 ){ goto $label$4 }
	
.LABEL $label$142
	CALL $40(($5 + [432]), $16, $0)
	goto $label$4 
	
.LABEL $label$7
	$23 = CALL __unordtf2($30, $29, $30, $29)
	$16 = ($31 + [3])
	if ( ($21 & [8192]) ){ goto $label$146 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$146 }
	$15 = ($22 <= [256])
	$22 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$148 }
	$15 = ($18 == 0)
	$18 = $22
	
.LOOP $label$149:
	if ( (($15 & [1]) == 0) ){ goto $label$150 }
	CALL $40(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$150
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$149 }
	if ( $17 ){ goto $label$146 }
	$22 = ($22 & [255])
	goto $label$147 
	
.LABEL $label$148
	if ( $18 ){ goto $label$146 }
	
.LABEL $label$147
	CALL $40(($5 + [432]), $22, $0)
	
.LABEL $label$146
	$15 = *($0)
	if ( ($15 & [32]) ){ goto $label$155 }
	CALL $40($32, $31, $0)
	if ( ((*($0) & [32]) == 0) ){ goto $label$154 }
	goto $label$153 
	
.LABEL $label$155
	if ( ($15 & [32]) ){ goto $label$153 }
	
.LABEL $label$154
	$15 = uint_32(($28 & [32]) >> [5])
	CALL $40(( ( [11176] ? [11336] : $15 ) ? ( [11155] ? [11165] : $15 ) : $23 ), [3], $0)
	if ( ((int_32)($21 & [73728]) != (int_32)[8192]) ){ goto $label$151 }
	goto $label$152 
	
.LABEL $label$153
	if ( ((int_32)($21 & [73728]) != (int_32)[8192]) ){ goto $label$151 }
	
.LABEL $label$152
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$151 }
	$15 = ($22 <= [256])
	$22 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$157 }
	$15 = ($18 == 0)
	$18 = $22
	
.LOOP $label$158:
	if ( (($15 & [1]) == 0) ){ goto $label$159 }
	CALL $40(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$159
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$158 }
	if ( $17 ){ goto $label$151 }
	$22 = ($22 & [255])
	goto $label$156 
	
.LABEL $label$157
	if ( $18 ){ goto $label$151 }
	
.LABEL $label$156
	CALL $40(($5 + [432]), $22, $0)
	
.LABEL $label$151
	$15 = ( $20 ? $16 : ((int_32)$20 > (int_32)$16) )
	goto $label$5 
	
.LABEL $label$6
	CALL $46(($5 + [320]), $30, $29, ($5 + [748]))
	$30 = *($5 + [328])
	$29 = *($5 + [320])
	CALL __addtf3(($5 + [304]), $29, $30, $29, $30)
	$30 = *((($5 + [304]) + [8]))
	$29 = *($5 + [304])
	if ( (CALL __eqtf2($29, $30, (int_64)0, (int_64)0) == 0) ){ goto $label$160 }
	*($5 + [748]) = (*($5 + [748]) + [-1])
	
.LABEL $label$160
	$33 = ($28 | [32])
	if ( ((int_32)$33 != (int_32)[97]) ){ goto $label$173 }
	$22 = ($28 & [32])
	$26 = ( ($32 + [9]) ? $32 : $22 )
	if ( ((uint_32)$16 > (uint_32)[26]) ){ goto $label$171 }
	if ( (([27] - $16) == 0) ){ goto $label$171 }
	$15 = ($16 + [-27])
	$34 = (int_64)4612248968380809216
	$35 = (int_64)0
	
.LOOP $label$174:
	CALL __multf3(($5 + [208]), $35, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($5 + [208]) + [8]))
	$35 = *($5 + [208])
	$15 = ($15 + [1])
	if ( $15 ){ goto $label$174 }
	if ( ((int_32)*($26) != (int_32)[45]) ){ goto $label$172 }
	CALL __subtf3(($5 + [160]), $29, ((int_64)$30 ^ (int_64)-9223372036854775808), $35, $34)
	CALL __addtf3(($5 + [144]), $35, $34, *($5 + [160]), *((($5 + [160]) + [8])))
	$30 = ((int_64)*((($5 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$29 = *($5 + [144])
	goto $label$171 
	
.LABEL $label$173
	$15 = ((int_32)$16 < (int_32)[0])
	if ( (CALL __netf2($29, $30, (int_64)0, (int_64)0) == 0) ){ goto $label$176 }
	CALL __multf3(($5 + [288]), $29, $30, (int_64)0, (int_64)4619285842798575616)
	$17 = (*($5 + [748]) + [-28])
	*($5 + [748]) = $17
	$30 = *((($5 + [288]) + [8]))
	$29 = *($5 + [288])
	goto $label$175 
	
.LABEL $label$176
	$17 = *($5 + [748])
	
.LABEL $label$175
	$26 = ( [6] ? $16 : $15 )
	$27 = ( ($5 + [752]) ? $9 : ((int_32)$17 < (int_32)[0]) )
	$19 = $27
	
.LOOP $label$177:
	$15 = CALL __fixunstfsi($29, $30)
	CALL __floatunsitf(($5 + [272]), $15)
	CALL __subtf3(($5 + [256]), $29, $30, *($5 + [272]), *((($5 + [272]) + [8])))
	CALL __multf3(($5 + [240]), *($5 + [256]), *((($5 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($19) = $15
	$19 = ($19 + [4])
	$30 = *((($5 + [240]) + [8]))
	$29 = *($5 + [240])
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$177 }
	if ( ((int_32)$17 < (int_32)[1]) ){ goto $label$179 }
	$18 = $27
	
.LOOP $label$180:
	$17 = ( $17 ? [29] : ((int_32)$17 < (int_32)[29]) )
	$15 = ($19 + [-4])
	if ( ($15 <= $18) ){ goto $label$181 }
	$30 = (CASTING uint_64)(uint_32 $17)
	$29 = (int_64)0
	
.LOOP $label$182:
	$29 = ((uint_64)$29 / (uint_64)(int_64)1000000000)
	$29 = ((int_64)((int_64)*($15) << (int_64)$30) + (int_64)((int_64)$29 & (int_64)4294967295))
	*($15) = (int_64))($29 - ((int_64)$29 * (int_64)1000000000))
	$15 = ($15 + [-4])
	if ( ((uint_32)$15 >= (uint_32)$18) ){ goto $label$182 }
	$15 = (CASTING uint_32)(uint_64 $29)
	if ( ($15 == 0) ){ goto $label$181 }
	*(($18 = ($18 + [-4]))) = $15
	
.LABEL $label$181
	
.LOOP $label$184:
	$15 = $19
	if ( ((uint_32)$15 <= (uint_32)$18) ){ goto $label$183 }
	$19 = ($15 + [-4])
	if ( (*($19) == 0) ){ goto $label$184 }
	
.LABEL $label$183
	$17 = (*($5 + [748]) - $17)
	*($5 + [748]) = $17
	$19 = $15
	if ( ((int_32)$17 > (int_32)[0]) ){ goto $label$180 }
	goto $label$178 
	
.LABEL $label$179
	$15 = $19
	$18 = $27
	
.LABEL $label$178
	if ( ((int_32)$17 > (int_32)[-1]) ){ goto $label$185 }
	$24 = (((uint_32)($26 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$33 != (int_32)[102]) ){ goto $label$186 }
	$36 = ($27 + ($24 << [2]))
	
.LOOP $label$187:
	$19 = ([0] - $17)
	$22 = ( $19 ? [9] : ((int_32)$19 < (int_32)[9]) )
	if ( ((uint_32)$18 >= (uint_32)$15) ){ goto $label$189 }
	$23 = uint_32([1000000000] >> $22)
	$25 = ((int_32)([-1] << $22) ^ (int_32)[-1])
	$17 = [0]
	$19 = $18
	
.LOOP $label$190:
	$16 = *($19)
	*($19) = (uint_32($16 >> $22) + $17)
	$17 = ((int_32)($16 & $25) * (int_32)$23)
	$19 = ($19 + [4])
	if ( ($19 <= $15) ){ goto $label$190 }
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	if ( ($17 == 0) ){ goto $label$188 }
	*($15) = $17
	$15 = ($15 + [4])
	goto $label$188 
	
.LABEL $label$189
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	
.LABEL $label$188
	$17 = (*($5 + [748]) + $22)
	*($5 + [748]) = $17
	$15 = ( $36 ? $15 : ((int_32)int_32(($15 - $27) >> [2]) > (int_32)$24) )
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$187 }
	goto $label$185 
	
.LABEL $label$186
	
.LOOP $label$191:
	$19 = ([0] - $17)
	$22 = ( $19 ? [9] : ((int_32)$19 < (int_32)[9]) )
	if ( ((uint_32)$18 >= (uint_32)$15) ){ goto $label$193 }
	$23 = uint_32([1000000000] >> $22)
	$25 = ((int_32)([-1] << $22) ^ (int_32)[-1])
	$17 = [0]
	$19 = $18
	
.LOOP $label$194:
	$16 = *($19)
	*($19) = (uint_32($16 >> $22) + $17)
	$17 = ((int_32)($16 & $25) * (int_32)$23)
	$19 = ($19 + [4])
	if ( ($19 <= $15) ){ goto $label$194 }
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	if ( ($17 == 0) ){ goto $label$192 }
	*($15) = $17
	$15 = ($15 + [4])
	goto $label$192 
	
.LABEL $label$193
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	
.LABEL $label$192
	$17 = (*($5 + [748]) + $22)
	*($5 + [748]) = $17
	$15 = ( ($18 + ($24 << [2])) ? $15 : ((int_32)int_32(($15 - $18) >> [2]) > (int_32)$24) )
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$191 }
	
.LABEL $label$185
	$19 = [0]
	if ( ((uint_32)$18 >= (uint_32)$15) ){ goto $label$195 }
	$19 = ((int_32)int_32(($27 - $18) >> [2]) * (int_32)[9])
	$16 = *($18)
	if ( ($16 <= [10]) ){ goto $label$195 }
	$17 = [10]
	
.LOOP $label$196:
	$19 = ($19 + [1])
	$17 = ((int_32)$17 * (int_32)[10])
	if ( ((uint_32)$16 >= (uint_32)$17) ){ goto $label$196 }
	
.LABEL $label$195
	$23 = ((int_32)$33 == (int_32)[103])
	$25 = (((int_32)$26 != (int_32)[0]) & $23)
	$16 = ( [0] ? $19 : ((int_32)$33 == (int_32)[102]) )
	$17 = (($26 - $16) - $25)
	if ( ((int_32)$17 >= (int_32)(((int_32)int_32(($15 - $27) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$197 }
	$24 = ($17 + [147456])
	$36 = ((int_32)$24 / (int_32)[9])
	$33 = ($27 + ($36 << [2]))
	$22 = ($33 + [-65532])
	$17 = [10]
	$36 = ((int_32)$36 * (int_32)[9])
	if ( ((int_32)($24 - $36) > (int_32)[7]) ){ goto $label$198 }
	$16 = (((($26 + ([0] - $25)) + [147455]) - $16) - $36)
	$17 = [10]
	
.LOOP $label$199:
	$17 = ((int_32)$17 * (int_32)[10])
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$199 }
	
.LABEL $label$198
	$24 = ((uint_32)$25 / (uint_32)$17)
	$25 = *($22)
	$16 = ($25 - ((int_32)$24 * (int_32)$17))
	$36 = ($22 + [4])
	if ( ((int_32)$36 != (int_32)$15) ){ goto $label$201 }
	if ( ($16 == 0) ){ goto $label$200 }
	
.LABEL $label$201
	if ( ($24 & [1]) ){ goto $label$203 }
	$29 = (int_64)4643211215818981376
	$30 = (int_64)0
	if ( ((uint_32)$22 <= (uint_32)$18) ){ goto $label$202 }
	if ( ((int_32)$17 != (int_32)[1000000000]) ){ goto $label$202 }
	if ( ((*(($22 + [-4])) & [1]) == 0) ){ goto $label$202 }
	
.LABEL $label$203
	$29 = (int_64)4643211215818981376
	$30 = (int_64)1
	
.LABEL $label$202
	$34 = (int_64)4611123068473966592
	$24 = uint_32($17 >> [1])
	if ( ($16 <= $24) ){ goto $label$204 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$16 == (int_32)$24) ) ? (int_64)4611545280939032576 : ((int_32)$36 == (int_32)$15) )
	
.LABEL $label$204
	if ( ($31 == 0) ){ goto $label$205 }
	if ( ((int_32)*($32) != (int_32)[45]) ){ goto $label$205 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$29 = ((int_64)$29 ^ (int_64)-9223372036854775808)
	
.LABEL $label$205
	CALL __addtf3(($5 + [224]), $30, $29, (int_64)0, $34)
	$16 = ($25 - $16)
	*($22) = $16
	if ( (CALL __eqtf2(*($5 + [224]), *((($5 + [224]) + [8])), $30, $29) == 0) ){ goto $label$200 }
	$19 = ($16 + $17)
	*($22) = $19
	if ( ($19 <= [1000000000]) ){ goto $label$206 }
	$19 = ($33 + [-65536])
	
.LOOP $label$207:
	*(($19 + [4])) = [0]
	if ( ((uint_32)$19 >= (uint_32)$18) ){ goto $label$208 }
	*(($18 = ($18 + [-4]))) = [0]
	
.LABEL $label$208
	$17 = (*($19) + [1])
	*($19) = $17
	$19 = ($19 + [-4])
	if ( ((uint_32)$17 > (uint_32)[999999999]) ){ goto $label$207 }
	$22 = ($19 + [4])
	
.LABEL $label$206
	$19 = ((int_32)int_32(($27 - $18) >> [2]) * (int_32)[9])
	$16 = *($18)
	if ( ($16 <= [10]) ){ goto $label$200 }
	$17 = [10]
	
.LOOP $label$209:
	$19 = ($19 + [1])
	$17 = ((int_32)$17 * (int_32)[10])
	if ( ((uint_32)$16 >= (uint_32)$17) ){ goto $label$209 }
	
.LABEL $label$200
	$17 = ($22 + [4])
	$15 = ( $17 ? $15 : ((uint_32)$15 > (uint_32)$17) )
	
.LABEL $label$197
	$22 = ([0] - $19)
	
.LOOP $label$212:
	$16 = $15
	if ( ((uint_32)$16 <= (uint_32)$18) ){ goto $label$211 }
	$15 = ($16 + [-4])
	if ( (*($15) == 0) ){ goto $label$212 }
	$24 = [1]
	if ( $23 ){ goto $label$210 }
	goto $label$162 
	
.LABEL $label$211
	$24 = [0]
	if ( ($23 == 0) ){ goto $label$162 }
	
.LABEL $label$210
	$15 = ($26 + ($26 == 0))
	if ( ((int_32)$15 <= (int_32)$19) ){ goto $label$170 }
	if ( ((int_32)$19 < (int_32)[-4]) ){ goto $label$170 }
	$28 = ($28 + [-1])
	$26 = (($15 + [-1]) - $19)
	$23 = ($21 & [8])
	if ( ($23 == 0) ){ goto $label$169 }
	goto $label$161 
	
.LABEL $label$172
	CALL __addtf3(($5 + [192]), $29, $30, $35, $34)
	CALL __subtf3(($5 + [176]), *($5 + [192]), *((($5 + [192]) + [8])), $35, $34)
	$30 = *((($5 + [176]) + [8]))
	$29 = *($5 + [176])
	
.LABEL $label$171
	$19 = $10
	$15 = int_32($23 >> [31])
	$23 = *($5 + [748])
	$15 = ((int_32)($23 + $15) ^ (int_32)$15)
	if ( ($15 == 0) ){ goto $label$214 }
	$18 = [0]
	
.LOOP $label$215:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(((($5 + [692]) + $18) + [11])) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$18 = ($18 + [-1])
	$17 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $17 ){ goto $label$215 }
	$19 = ((($5 + [692]) + $18) + [12])
	if ( $18 ){ goto $label$213 }
	
.LABEL $label$214
	*(($19 = ($19 + [-1]))) = [48]
	
.LABEL $label$213
	$25 = ($31 | [2])
	*(($24 = ($19 + [-2]))) = ($28 + [15])
	*(($19 + [-1])) = ( [45] ? [43] : ((int_32)$23 < (int_32)[0]) )
	if ( ($21 & [8]) ){ goto $label$216 }
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$168 }
	$15 = ($5 + [704])
	
.LOOP $label$217:
	$18 = CALL __fixtfsi($29, $30)
	CALL __floatsitf(($5 + [80]), $18)
	CALL __subtf3(($5 + [64]), $29, $30, *($5 + [80]), *((($5 + [80]) + [8])))
	CALL __multf3(($5 + [48]), *($5 + [64]), *((($5 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($15) = (*(($18 + [11120])) | $22)
	$30 = *((($5 + [48]) + [8]))
	$29 = *($5 + [48])
	$18 = ($15 + [1])
	if ( ((int_32)($18 - ($5 + [704])) != (int_32)[1]) ){ goto $label$218 }
	*(($15 + [1])) = [46]
	$18 = ($15 + [2])
	
.LABEL $label$218
	$15 = $18
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$217 }
	goto $label$167 
	
.LABEL $label$216
	$15 = ($5 + [704])
	
.LOOP $label$219:
	$18 = CALL __fixtfsi($29, $30)
	CALL __floatsitf(($5 + [128]), $18)
	CALL __subtf3(($5 + [112]), $29, $30, *($5 + [128]), *((($5 + [128]) + [8])))
	CALL __multf3(($5 + [96]), *($5 + [112]), *((($5 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($15) = (*(($18 + [11120])) | $22)
	$30 = *((($5 + [96]) + [8]))
	$29 = *($5 + [96])
	$18 = ($15 + [1])
	if ( ((int_32)($18 - ($5 + [704])) != (int_32)[1]) ){ goto $label$220 }
	*(($15 + [1])) = [46]
	$18 = ($15 + [2])
	
.LABEL $label$220
	$15 = $18
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$219 }
	goto $label$167 
	
.LABEL $label$170
	$26 = ($15 + [-1])
	$28 = ($28 + [-2])
	$23 = ($21 & [8])
	if ( $23 ){ goto $label$161 }
	
.LABEL $label$169
	$15 = [9]
	if ( ($24 == 0) ){ goto $label$221 }
	$23 = *(($16 + [-4]))
	if ( ($23 == 0) ){ goto $label$221 }
	$15 = [0]
	if ( ((uint_32)$23 % (uint_32)[10]) ){ goto $label$221 }
	$17 = [10]
	$15 = [0]
	
.LOOP $label$222:
	$15 = ($15 + [1])
	$17 = ((int_32)$17 * (int_32)[10])
	if ( (((uint_32)$23 % (uint_32)$17) == 0) ){ goto $label$222 }
	
.LABEL $label$221
	$17 = (((int_32)int_32(($16 - $27) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($28 | [32]) != (int_32)[102]) ){ goto $label$166 }
	$23 = [0]
	$15 = ($17 - $15)
	$15 = ( $15 ? [0] : ((int_32)$15 > (int_32)[0]) )
	$26 = ( $26 ? $15 : ((int_32)$26 < (int_32)$15) )
	goto $label$161 
	
.LABEL $label$168
	$18 = ($5 + [704])
	
.LOOP $label$223:
	$19 = CALL __fixtfsi($29, $30)
	CALL __floatsitf(($5 + [32]), $19)
	CALL __subtf3(($5 + [16]), $29, $30, *($5 + [32]), *((($5 + [32]) + [8])))
	CALL __multf3($5, *($5 + [16]), *((($5 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($15 = $18)) = (*(($19 + [11120])) | $22)
	$30 = *(($5 + [8]))
	$29 = *($5)
	$18 = ($15 + [1])
	if ( ((int_32)($18 - ($5 + [704])) != (int_32)[1]) ){ goto $label$224 }
	if ( (CALL __eqtf2($29, $30, (int_64)0, (int_64)0) == 0) ){ goto $label$224 }
	*(($15 + [1])) = [46]
	$18 = ($15 + [2])
	
.LABEL $label$224
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$223 }
	
.LABEL $label$167
	$15 = [-1]
	$22 = ($10 - $24)
	if ( ((int_32)(([2147483645] - $25) - $22) < (int_32)$16) ){ goto $label$5 }
	$23 = ($18 - ($5 + [704]))
	$28 = ( ( ($16 + [2]) ? $23 : ((int_32)($8 + $18) < (int_32)$16) ) ? $23 : $16 )
	$16 = (($22 + $25) + $28)
	$21 = ($21 & [73728])
	if ( $21 ){ goto $label$163 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$163 }
	$15 = ($27 <= [256])
	$27 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $27 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$165 }
	$15 = ($18 == 0)
	$18 = $27
	
.LOOP $label$225:
	if ( (($15 & [1]) == 0) ){ goto $label$226 }
	CALL $40(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$226
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$225 }
	if ( $17 ){ goto $label$163 }
	$27 = ($27 & [255])
	goto $label$164 
	
.LABEL $label$166
	$23 = [0]
	$15 = (($17 + $19) - $15)
	$15 = ( $15 ? [0] : ((int_32)$15 > (int_32)[0]) )
	$26 = ( $26 ? $15 : ((int_32)$26 < (int_32)$15) )
	goto $label$161 
	
.LABEL $label$165
	if ( $18 ){ goto $label$163 }
	
.LABEL $label$164
	CALL $40(($5 + [432]), $27, $0)
	
.LABEL $label$163
	if ( (*($0) & [32]) ){ goto $label$227 }
	CALL $40($26, $25, $0)
	
.LABEL $label$227
	if ( ((int_32)$21 != (int_32)[65536]) ){ goto $label$228 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$228 }
	$15 = ($25 <= [256])
	$25 = ($20 - $16)
	CALL memset(($5 + [432]), [48], ( $25 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$230 }
	$15 = ($18 == 0)
	$18 = $25
	
.LOOP $label$231:
	if ( (($15 & [1]) == 0) ){ goto $label$232 }
	CALL $40(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$232
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$231 }
	if ( $17 ){ goto $label$228 }
	$25 = ($25 & [255])
	goto $label$229 
	
.LABEL $label$230
	if ( $18 ){ goto $label$228 }
	
.LABEL $label$229
	CALL $40(($5 + [432]), $25, $0)
	
.LABEL $label$228
	if ( (*($0) & [32]) ){ goto $label$233 }
	CALL $40(($5 + [704]), $23, $0)
	
.LABEL $label$233
	$23 = ($28 - $23)
	if ( ((int_32)$23 < (int_32)[1]) ){ goto $label$234 }
	$15 = ($23 <= [256])
	CALL memset(($5 + [432]), [48], ( $23 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$236 }
	$15 = ($18 == 0)
	$18 = $23
	
.LOOP $label$237:
	if ( (($15 & [1]) == 0) ){ goto $label$238 }
	CALL $40(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$238
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$237 }
	if ( $17 ){ goto $label$234 }
	$23 = ($23 & [255])
	goto $label$235 
	
.LABEL $label$236
	if ( $18 ){ goto $label$234 }
	
.LABEL $label$235
	CALL $40(($5 + [432]), $23, $0)
	
.LABEL $label$234
	if ( (*($0) & [32]) ){ goto $label$239 }
	CALL $40($24, $22, $0)
	
.LABEL $label$239
	if ( ((int_32)$21 != (int_32)[8192]) ){ goto $label$240 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$240 }
	$15 = ($22 <= [256])
	$22 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$242 }
	$15 = ($18 == 0)
	$18 = $22
	
.LOOP $label$243:
	if ( (($15 & [1]) == 0) ){ goto $label$244 }
	CALL $40(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$244
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$243 }
	if ( $17 ){ goto $label$240 }
	$22 = ($22 & [255])
	goto $label$241 
	
.LABEL $label$242
	if ( $18 ){ goto $label$240 }
	
.LABEL $label$241
	CALL $40(($5 + [432]), $22, $0)
	
.LABEL $label$240
	$15 = ( $20 ? $16 : ((int_32)$20 > (int_32)$16) )
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$162
	$23 = ($21 & [8])
	
.LABEL $label$161
	$15 = [-1]
	$25 = ($26 | $23)
	if ( ((int_32)$26 > (int_32)( [2147483645] ? [2147483646] : $25 )) ){ goto $label$5 }
	$36 = (($26 + ((int_32)$25 != (int_32)[0])) + [1])
	$37 = ((int_32)($28 | [32]) != (int_32)[102])
	if ( $37 ){ goto $label$246 }
	if ( ((int_32)$19 > (int_32)([2147483647] - $36)) ){ goto $label$5 }
	$19 = ( $19 ? [0] : ((int_32)$19 > (int_32)[0]) )
	goto $label$245 
	
.LABEL $label$246
	$17 = $10
	$38 = ((int_32)$19 < (int_32)[0])
	$15 = ( $22 ? $19 : $38 )
	if ( ($15 == 0) ){ goto $label$247 }
	
.LOOP $label$248:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(($17 = ($17 + [-1]))) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$22 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $22 ){ goto $label$248 }
	
.LABEL $label$247
	if ( ((int_32)($10 - $17) > (int_32)[1]) ){ goto $label$249 }
	$15 = ($17 + [-1])
	
.LOOP $label$250:
	*($15) = [48]
	$19 = ($10 - $15)
	$17 = ($15 + [-1])
	$15 = $17
	if ( ((int_32)$19 < (int_32)[2]) ){ goto $label$250 }
	$17 = ($17 + [1])
	
.LABEL $label$249
	*(($33 = ($17 + [-2]))) = $28
	$15 = [-1]
	*(($17 + [-1])) = ( [45] ? [43] : $38 )
	$19 = ($10 - $33)
	if ( ((int_32)$19 > (int_32)([2147483647] - $36)) ){ goto $label$5 }
	
.LABEL $label$245
	$15 = [-1]
	$19 = ($19 + $36)
	if ( ((int_32)$19 > (int_32)((int_32)$31 ^ (int_32)[2147483647])) ){ goto $label$5 }
	$28 = ($19 + $31)
	$21 = ($21 & [73728])
	if ( $21 ){ goto $label$251 }
	if ( ((int_32)$20 <= (int_32)$28) ){ goto $label$251 }
	$15 = ($36 <= [256])
	$36 = ($20 - $28)
	CALL memset(($5 + [432]), [32], ( $36 ? [256] : $15 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $15 ){ goto $label$253 }
	$15 = ($19 == 0)
	$19 = $36
	
.LOOP $label$254:
	if ( (($15 & [1]) == 0) ){ goto $label$255 }
	CALL $40(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$255
	$22 = ($17 & [32])
	$15 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$254 }
	if ( $22 ){ goto $label$251 }
	$36 = ($36 & [255])
	goto $label$252 
	
.LABEL $label$253
	if ( $19 ){ goto $label$251 }
	
.LABEL $label$252
	CALL $40(($5 + [432]), $36, $0)
	
.LABEL $label$251
	if ( (*($0) & [32]) ){ goto $label$256 }
	CALL $40($32, $31, $0)
	
.LABEL $label$256
	if ( ((int_32)$21 != (int_32)[65536]) ){ goto $label$257 }
	if ( ((int_32)$20 <= (int_32)$28) ){ goto $label$257 }
	$15 = ($31 <= [256])
	$31 = ($20 - $28)
	CALL memset(($5 + [432]), [48], ( $31 ? [256] : $15 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $15 ){ goto $label$259 }
	$15 = ($19 == 0)
	$19 = $31
	
.LOOP $label$260:
	if ( (($15 & [1]) == 0) ){ goto $label$261 }
	CALL $40(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$261
	$22 = ($17 & [32])
	$15 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$260 }
	if ( $22 ){ goto $label$257 }
	$31 = ($31 & [255])
	goto $label$258 
	
.LABEL $label$259
	if ( $19 ){ goto $label$257 }
	
.LABEL $label$258
	CALL $40(($5 + [432]), $31, $0)
	
.LABEL $label$257
	if ( $37 ){ goto $label$272 }
	$23 = ( $27 ? $18 : ((uint_32)$18 > (uint_32)$27) )
	$22 = $23
	
.LOOP $label$273:
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$275 }
	$18 = [0]
	
.LOOP $label$276:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(($6 + $18)) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$18 = ($18 + [-1])
	$17 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $17 ){ goto $label$276 }
	goto $label$274 
	
.LABEL $label$275
	$18 = [0]
	
.LABEL $label$274
	$15 = ($7 + $18)
	if ( ((int_32)$22 == (int_32)$23) ){ goto $label$280 }
	if ( ((uint_32)$15 <= (uint_32)($5 + [704])) ){ goto $label$279 }
	
.LOOP $label$281:
	*(($15 = ($15 + [-1]))) = [48]
	if ( ((uint_32)$15 > (uint_32)($5 + [704])) ){ goto $label$281 }
	$15 = ($5 + [704])
	if ( ((*($0) & [32]) == 0) ){ goto $label$278 }
	goto $label$277 
	
.LABEL $label$280
	if ( $18 ){ goto $label$279 }
	*(($15 = ($15 + [-1]))) = [48]
	
.LABEL $label$279
	if ( (*($0) & [32]) ){ goto $label$277 }
	
.LABEL $label$278
	CALL $40($15, ($7 - $15), $0)
	
.LABEL $label$277
	$22 = ($22 + [4])
	if ( ((uint_32)$22 <= (uint_32)$27) ){ goto $label$273 }
	if ( ($25 == 0) ){ goto $label$282 }
	if ( (*($0) & [32]) ){ goto $label$282 }
	CALL $40([11369], [1], $0)
	
.LABEL $label$282
	if ( ((int_32)$26 < (int_32)[1]) ){ goto $label$271 }
	if ( ((uint_32)$22 >= (uint_32)$16) ){ goto $label$270 }
	
.LOOP $label$283:
	$15 = $7
	$18 = *($22)
	if ( ($18 == 0) ){ goto $label$285 }
	$15 = $7
	
.LOOP $label$286:
	$19 = ((uint_32)$18 / (uint_32)[10])
	*(($15 = ($15 + [-1]))) = (($18 - ((int_32)$19 * (int_32)[10])) | [48])
	$17 = ((uint_32)$18 > (uint_32)[9])
	$18 = $19
	if ( $17 ){ goto $label$286 }
	if ( ((uint_32)$15 <= (uint_32)($5 + [704])) ){ goto $label$284 }
	
.LABEL $label$285
	
.LOOP $label$287:
	*(($15 = ($15 + [-1]))) = [48]
	if ( ((uint_32)$15 > (uint_32)($5 + [704])) ){ goto $label$287 }
	
.LABEL $label$284
	if ( (*($0) & [32]) ){ goto $label$288 }
	CALL $40($15, ( $26 ? [9] : ((int_32)$26 < (int_32)[9]) ), $0)
	
.LABEL $label$288
	$15 = ($26 + [-9])
	if ( ((int_32)$26 < (int_32)[10]) ){ goto $label$269 }
	$26 = $15
	$22 = ($22 + [4])
	if ( ($22 <= $16) ){ goto $label$283 }
	goto $label$269 
	
.LABEL $label$272
	if ( ((int_32)$26 <= (int_32)[-1]) ){ goto $label$265 }
	$25 = ( $16 ? ($18 + [4]) : $24 )
	if ( ($23 == 0) ){ goto $label$267 }
	$22 = $18
	
.LOOP $label$289:
	$17 = $7
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$291 }
	$19 = [0]
	
.LOOP $label$292:
	$17 = ((uint_32)$15 / (uint_32)[10])
	*(((($5 + [704]) + $19) + [8])) = (($15 - ((int_32)$17 * (int_32)[10])) | [48])
	$19 = ($19 + [-1])
	$16 = ((uint_32)$15 > (uint_32)[9])
	$15 = $17
	if ( $16 ){ goto $label$292 }
	$17 = ((($5 + [704]) + $19) + [9])
	if ( $19 ){ goto $label$290 }
	
.LABEL $label$291
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$290
	if ( ((int_32)$22 == (int_32)$18) ){ goto $label$294 }
	if ( ((uint_32)$17 <= (uint_32)($5 + [704])) ){ goto $label$293 }
	
.LOOP $label$295:
	*(($17 = ($17 + [-1]))) = [48]
	if ( ((uint_32)$17 > (uint_32)($5 + [704])) ){ goto $label$295 }
	goto $label$293 
	
.LABEL $label$294
	$15 = *($0)
	if ( ($15 & [32]) ){ goto $label$296 }
	CALL $40($17, [1], $0)
	$15 = *($0)
	
.LABEL $label$296
	$17 = ($17 + [1])
	if ( ($15 & [32]) ){ goto $label$293 }
	CALL $40([11369], [1], $0)
	
.LABEL $label$293
	$15 = ($7 - $17)
	if ( (*($0) & [32]) ){ goto $label$297 }
	CALL $40($17, ( $15 ? $26 : ((int_32)$26 > (int_32)$15) ), $0)
	
.LABEL $label$297
	$26 = ($26 - $15)
	$22 = ($22 + [4])
	if ( ((uint_32)$22 >= (uint_32)$25) ){ goto $label$266 }
	if ( ((int_32)$26 > (int_32)[-1]) ){ goto $label$289 }
	goto $label$266 
	
.LABEL $label$271
	$15 = $26
	if ( ((int_32)$15 >= (int_32)[1]) ){ goto $label$268 }
	goto $label$264 
	
.LABEL $label$270
	$15 = $26
	
.LABEL $label$269
	if ( ((int_32)$15 < (int_32)[1]) ){ goto $label$264 }
	
.LABEL $label$268
	$18 = ($15 <= [256])
	CALL memset(($5 + [432]), [48], ( $15 ? [256] : $18 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $18 ){ goto $label$299 }
	$18 = ($19 == 0)
	$19 = $15
	
.LOOP $label$300:
	if ( (($18 & [1]) == 0) ){ goto $label$301 }
	CALL $40(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$301
	$16 = ($17 & [32])
	$18 = ($16 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$300 }
	if ( $16 ){ goto $label$264 }
	$15 = ($15 & [255])
	goto $label$298 
	
.LABEL $label$299
	if ( $19 ){ goto $label$264 }
	
.LABEL $label$298
	CALL $40(($5 + [432]), $15, $0)
	if ( ((int_32)$21 == (int_32)[8192]) ){ goto $label$263 }
	goto $label$262 
	
.LABEL $label$267
	$22 = $18
	
.LOOP $label$302:
	$17 = $7
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$304 }
	$19 = [0]
	
.LOOP $label$305:
	$17 = ((uint_32)$15 / (uint_32)[10])
	*(((($5 + [704]) + $19) + [8])) = (($15 - ((int_32)$17 * (int_32)[10])) | [48])
	$19 = ($19 + [-1])
	$16 = ((uint_32)$15 > (uint_32)[9])
	$15 = $17
	if ( $16 ){ goto $label$305 }
	$17 = ((($5 + [704]) + $19) + [9])
	if ( $19 ){ goto $label$303 }
	
.LABEL $label$304
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$303
	if ( ((int_32)$22 == (int_32)$18) ){ goto $label$307 }
	if ( ((uint_32)$17 <= (uint_32)($5 + [704])) ){ goto $label$306 }
	
.LOOP $label$308:
	*(($17 = ($17 + [-1]))) = [48]
	if ( ((uint_32)$17 > (uint_32)($5 + [704])) ){ goto $label$308 }
	goto $label$306 
	
.LABEL $label$307
	if ( (*($0) & [32]) ){ goto $label$309 }
	CALL $40($17, [1], $0)
	
.LABEL $label$309
	$17 = ($17 + [1])
	if ( ((int_32)$26 < (int_32)[1]) ){ goto $label$306 }
	if ( (*($0) & [32]) ){ goto $label$306 }
	CALL $40([11369], [1], $0)
	
.LABEL $label$306
	$15 = ($7 - $17)
	if ( (*($0) & [32]) ){ goto $label$310 }
	CALL $40($17, ( $15 ? $26 : ((int_32)$26 > (int_32)$15) ), $0)
	
.LABEL $label$310
	$26 = ($26 - $15)
	$22 = ($22 + [4])
	if ( ((uint_32)$22 >= (uint_32)$25) ){ goto $label$266 }
	if ( ((int_32)$26 > (int_32)[-1]) ){ goto $label$302 }
	
.LABEL $label$266
	if ( ((int_32)$26 < (int_32)[1]) ){ goto $label$265 }
	$18 = ($26 <= [256])
	CALL memset(($5 + [432]), [48], ( $26 ? [256] : $18 ))
	$19 = *($0)
	$15 = ($19 & [32])
	if ( $18 ){ goto $label$312 }
	$15 = ($15 == 0)
	$18 = $26
	
.LOOP $label$313:
	if ( (($15 & [1]) == 0) ){ goto $label$314 }
	CALL $40(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$314
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$313 }
	if ( $17 ){ goto $label$265 }
	$26 = ($26 & [255])
	goto $label$311 
	
.LABEL $label$312
	if ( $15 ){ goto $label$265 }
	
.LABEL $label$311
	CALL $40(($5 + [432]), $26, $0)
	
.LABEL $label$265
	if ( (*($0) & [32]) ){ goto $label$264 }
	CALL $40($33, ($10 - $33), $0)
	
.LABEL $label$264
	if ( ((int_32)$21 != (int_32)[8192]) ){ goto $label$262 }
	
.LABEL $label$263
	if ( ((int_32)$20 <= (int_32)$28) ){ goto $label$262 }
	$15 = ($16 <= [256])
	$16 = ($20 - $28)
	CALL memset(($5 + [432]), [32], ( $16 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$316 }
	$15 = ($18 == 0)
	$18 = $16
	
.LOOP $label$317:
	if ( (($15 & [1]) == 0) ){ goto $label$318 }
	CALL $40(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$318
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$317 }
	if ( $17 ){ goto $label$262 }
	$16 = ($16 & [255])
	goto $label$315 
	
.LABEL $label$316
	if ( $18 ){ goto $label$262 }
	
.LABEL $label$315
	CALL $40(($5 + [432]), $16, $0)
	
.LABEL $label$262
	$15 = ( $20 ? $28 : ((int_32)$20 > (int_32)$28) )
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$4 }
	
.LABEL $label$3
	*(CALL $4()) = [75]
	
.LABEL $label$2
	$14 = [-1]
	
.LABEL $label$1
	$global$0 = ($5 + [8128])
	$15
	$18
	return $14
}

void .FUNC $264 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0)
	*($2 + [16]) = [13146]
	*($2 + [20]) = CALL $15([13146])
	*($2 + [8]) = *($2 + [16])
	CALL require_auth2($3, *(CALL $99(($2 + [24]), ($2 + [8]))))
	$4 = ($0 + [808])
	$6 = *(($0 + [836]))
	$5 = *(($0 + [832]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$7:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$6 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)*($8 + [144]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [14937])
	if ( *($8 + [20]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$7 = CALL db_find_i64(*($4), *(($0 + [816])), (int_64)7035937633859534848, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $157($4, $7)
	if ( ((int_32)*($8 + [144]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$4
	if ( (*($8 + [20]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [14309])
	
.LABEL $label$2
	$1 = *($0)
	if ( $8 ){ goto $label$8 }
	CALL eosio_assert([0], [15096])
	
.LABEL $label$8
	CALL $265($4, $8, $1)
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL eosio_assert([0], [13195])
}

void .FUNC $265 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [144]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	*($1 + [20]) = [1]
	$5 = *($1)
	*($4) = [0]
	CALL $356($4, $1)
	$6 = *($4)
	if ( ($6 <= [513]) ){ goto $label$4 }
	$3 = CALL $1($6)
	goto $label$3 
	
.LABEL $label$4
	$3 = ($3 - (($6 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $6)
	CALL $357($4, $1)
	CALL db_update_i64(*($1 + [148]), $2, $3, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$7 }
	if ( ((uint_64)$5 >= (uint_64)*($0 + [16])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $2($3)
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$5 }
	
.LABEL $label$6
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$5
	$global$0 = ($4 + [16])
}

void .FUNC $266 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6)
{
	CALL require_auth(*($0))
	CALL require_recipient($3)
}

void .FUNC $267 (int_32 $0, int_32 $1)
{
	CALL require_auth(*($0))
	CALL require_recipient(*($1 + [8]))
}

int_32 .FUNC $43 (int_32 $0, int_32 $1)
{
	return CALL $42($0, $1)
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	return $0
}

int_32 .FUNC $41 (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

int_32 .FUNC $40 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = *($2 + [20])
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = [0]
	if ( CALL $39($2) ){ goto $label$2 }
	$4 = *($2 + [20])
	if ( ((*(($2 + [16])) - $4) <= $1) ){ goto $label$1 }
	
.LABEL $label$3
	$6 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$5 }
	$6 = [0]
	$5 = $0
	$3 = [0]
	
.LOOP $label$6:
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$5 }
	$3 = ($3 + [1])
	$7 = ($5 + $1)
	$8 = ($5 + [-1])
	$5 = $8
	if ( ((int_32)*(($7 + [-1])) != (int_32)[10]) ){ goto $label$6 }
	$6 = (($1 - $3) + [1])
	$5 = CALL int_32 $2((int_32 $0), (int_32 $6), (int_32 *($2 + [36])))
	if ( ($5 <= $6) ){ goto $label$2 }
	$0 = (($8 + $1) + [1])
	$4 = *(($2 + [20]))
	$1 = ($3 + [-1])
	
.LABEL $label$5
	CALL memcpy($4, $0, $1)
	*(($3 = ($2 + [20]))) = (*($3) + $1)
	$5 = ($6 + $1)
	
.LABEL $label$2
	return $5
	return .LABEL $label$1
}

int_32 .FUNC $47 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [288])
	$global$0 = $3
	*($3 + [284]) = $2
	*(($3 + [272])) = (int_64)0
	*(($3 + [264])) = (int_64)0
	*(($3 + [256])) = (int_64)0
	*($3 + [248]) = (int_64)0
	*($3 + [240]) = (int_64)0
	*($3 + [280]) = *($3 + [284])
	$4 = [0]
	$2 = [-1]
	if ( ((int_32)CALL $48([0], $1, ($3 + [280]), ($3 + [80]), ($3 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $22($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) <= (int_32)[0]) ){ goto $label$6 }
	$5 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	*($0) = ($2 & [-33])
	$5 = ($2 & [32])
	if ( *($0 + [48]) ){ goto $label$4 }
	
.LABEL $label$5
	*(($6 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($3 + [80])
	*($0 + [28]) = $3
	*($0 + [20]) = $3
	$7 = *($0 + [44])
	*($0 + [44]) = $3
	$2 = CALL $48($0, $1, ($3 + [280]), ($3 + [80]), ($3 + [240]))
	if ( ($7 == 0) ){ goto $label$3 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $7
	*($6) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$7 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $7 )
	goto $label$3 
	
.LABEL $label$4
	$2 = CALL $48($0, $1, ($3 + [280]), ($3 + [80]), ($3 + [240]))
	
.LABEL $label$3
	$1 = *($0)
	*($0) = ($1 | $5)
	$1 = ($1 & [32])
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $23($0)
	
.LABEL $label$7
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	$global$0 = ($3 + [288])
	return $2
}

void .FUNC $46 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$6 = ($5) & [32767]
	if ( ((int_32)$6) == (int_32)[32767]) ){ goto $label$1 }
	if ( $6 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($4, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL $46(($4 + [16]), *($4), *(($4 + [8])), $3)
	$5 = (*($3) + [-120])
	$2 = *($4 + [24])
	$1 = *($4 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($5 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($5 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	
.LABEL $label$2
	*($3) = $5
	
.LABEL $label$1
	*($0) = $1
	*($0 + [8]) = $2
	$global$0 = ($4 + [32])
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL $16($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

int_32 .FUNC $44 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL $43([8832], *([0] + [20]))
	$1 = [0]
	
.LOOP $label$4:
	if ( ((int_32)*(($1 + [8736])) == (int_32)$0) ){ goto $label$3 }
	$2 = [87]
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[87]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$2 = $1
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = [8832]
	
.LOOP $label$5:
	$0 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $0 ){ goto $label$5 }
	$1 = $3
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$5 }
	return CALL $43($3, *([0] + [20]))
	return .LABEL $label$1
}

int_32 .FUNC $363 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [4])
	$4 = ($0 + [8])
	$5 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$1
	CALL memcpy($5, $1, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [8])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [16])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [24]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [32])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [40]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [48])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$7
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [56]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$8
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [64])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$9
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [72]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$10
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [80])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$11
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [88]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$12
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [96])
	if ( ((int_32)(*($4) - $5) > (int_32)[3]) ){ goto $label$13 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$13
	CALL memcpy($5, $6, [4])
	$5 = (*($3) + [4])
	*($3) = $5
	$6 = ($1 + [100])
	if ( ((int_32)(*($4) - $5) > (int_32)[3]) ){ goto $label$14 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$14
	CALL memcpy($5, $6, [4])
	$5 = (*($3) + [4])
	*($3) = $5
	$6 = ($1 + [104])
	if ( ((int_32)(*($4) - $5) > (int_32)[3]) ){ goto $label$15 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$15
	CALL memcpy($5, $6, [4])
	$5 = (*($3) + [4])
	*($3) = $5
	$6 = ($1 + [112])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$16
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [120])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$17
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [128])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$18
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [136])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$19
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$1 = ($1 + [144])
	if ( ((int_32)(*($4) - $5) > (int_32)[3]) ){ goto $label$20 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$20
	CALL memcpy($5, $1, [4])
	*(($3 = ($0 + [4]))) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $362 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [152]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [15887])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-5915351331303849984)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [15833])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [15833])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $247(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $167 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL $7([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $204($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $205(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

void .FUNC $166 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [144]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	*($1 + [20]) = [3]
	$5 = *($1)
	*($4) = [0]
	CALL $356($4, $1)
	$6 = *($4)
	if ( ($6 <= [513]) ){ goto $label$4 }
	$3 = CALL $1($6)
	goto $label$3 
	
.LABEL $label$4
	$3 = ($3 - (($6 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $6)
	CALL $357($4, $1)
	CALL db_update_i64(*($1 + [148]), $2, $3, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$7 }
	if ( ((uint_64)$5 >= (uint_64)*($0 + [16])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $2($3)
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$5 }
	
.LABEL $label$6
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$5
	$global$0 = ($4 + [16])
}

int_32 .FUNC $165 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([128])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104 align=4]) = (int_64)0
	*($5 + [112]) = [0]
	*($5 + [116]) = $0
	CALL $382(($3 + [32]), $5)
	*($5 + [120]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $237(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [104]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [112])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $164 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	int_32 $41
	int_32 $42
	int_32 $43
	int_32 $44
	int_32 $45
	int_32 $46
	int_32 $47
	int_32 $48
	int_32 $49
	int_64 $50
	int_64 $51
	int_32 $52
	int_64 $53
	int_32 $54
	int_32 $55
	int_32 $56
	int_64 $57
	int_64 $58
	int_64 $59
	int_32 $60
	int_32 $61
	int_32 $62
	int_32 $63
	int_32 $64
	$3 = ($global$0 - [1552])
	$global$0 = $3
	$4 = *($0)
	*($3 + [1456]) = [13146]
	*($3 + [1460]) = CALL $15([13146])
	*($3 + [320]) = *($3 + [1456])
	CALL require_auth2($4, *(CALL $99(($3 + [1464]), ($3 + [320]))))
	$5 = ($0 + [808])
	$7 = *(($0 + [836]))
	$6 = *(($0 + [832]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$7:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$6 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	if ( ((int_32)*($9 + [144]) == (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [14937])
	$8 = *($9 + [20])
	if ( ((int_32)$8 != (int_32)[3]) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [816])), (int_64)7035937633859534848, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $157($5, $8)
	if ( ((int_32)*($9 + [144]) == (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$4
	$8 = *($9 + [20])
	if ( ((int_32)$8 == (int_32)[3]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [13195])
	$8 = *([0] + [20])
	if ( ((int_32)$8 != (int_32)[3]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [14128])
	$global$0 = ($3 + [1552])
	return 
	
.LABEL $label$1
	if ( ((int_32)$8 != (int_32)[2]) ){ goto $label$8 }
	$10 = [0]
	*(($3 + [1448])) = [0]
	*($3 + [1432]) = (int_64)-1
	$4 = *($0)
	*($3 + [1416]) = $4
	*($3 + [1424]) = $1
	*($3 + [1440]) = (int_64)0
	$8 = CALL db_lowerbound_i64($4, $1, (int_64)-6497942333781180416, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$9 }
	$10 = CALL $165(($3 + [1416]), $8)
	
.LABEL $label$9
	if ( (int_64)($2 == 0) ){ goto $label$10 }
	$11 = ($9 + [20])
	$12 = ($9 + [132])
	$13 = ($9 + [120])
	$14 = ($9 + [76])
	$15 = ($9 + [64])
	$16 = ($9 + [52])
	$17 = ($9 + [40])
	$18 = ($9 + [28])
	$19 = ($9 + [8])
	$20 = ($9 + [88])
	$21 = ($3 + [1524])
	$22 = (($3 + [432]) + [104])
	$23 = (($3 + [552]) + [132])
	$24 = (($3 + [552]) + [120])
	$25 = (($3 + [552]) + [88])
	$26 = (($3 + [552]) + [76])
	$27 = (($3 + [552]) + [64])
	$28 = (($3 + [552]) + [52])
	$29 = (($3 + [552]) + [40])
	$30 = (($3 + [552]) + [28])
	$31 = (($3 + [552]) + [20])
	$32 = (($3 + [552]) + [8])
	$33 = (($3 + [696]) + [32])
	$34 = (($3 + [1064]) | [1])
	$35 = (($3 + [1296]) + [64])
	$36 = ($3 + [1344])
	$37 = (($3 + [1296]) + [32])
	$38 = (($3 + [1296]) + [16])
	$39 = (($3 + [1296]) + [104])
	$40 = ($3 + [1376])
	$41 = ($9 + [92])
	$42 = ($9 + [96])
	$43 = ($9 + [100])
	$44 = ($3 + [1352])
	$45 = (($3 + [1296]) + [72])
	$46 = ($3 + [1500])
	$47 = ($3 + [1532])
	$48 = (($3 + [1296]) + [112])
	
.LOOP $label$11:
	if ( ($10 == 0) ){ goto $label$13 }
	CALL memcpy(($3 + [1296]), $10, [104])
	$49 = CALL $52($39, ($10 + [104]))
	$50 = *((($3 + [1296]) + [88]))
	$51 = *($40)
	$8 = CALL $15([12244])
	if ( ($8 <= [8]) ){ goto $label$16 }
	CALL eosio_assert([0], [14622])
	goto $label$15 
	
.LABEL $label$16
	if ( ($8 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$4 = (int_64)0
	
.LOOP $label$17:
	$7 = *(($8 + [12243]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$18
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$17 }
	$4 = ((int_64)$4 << (int_64)8)
	goto $label$12 
	
.LABEL $label$14
	$4 = (int_64)0
	goto $label$12 
	
.LABEL $label$13
	$4 = *($0)
	if ( $9 ){ goto $label$19 }
	CALL eosio_assert([0], [15096])
	
.LABEL $label$19
	CALL $166($5, $9, $4)
	goto $label$10 
	
.LABEL $label$12
	*(($52 = (($3 + [1280]) + [8]))) = ((int_64)$4 | (int_64)4)
	*($3 + [1280]) = (int_64)0
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$22:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$53 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$23 }
	$4 = $53
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$23
	$4 = $53
	
.LOOP $label$24:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$21 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$24 }
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	CALL eosio_assert([0], [14769])
	
.LABEL $label$20
	$53 = *(($38 + [8]))
	*((($3 + [1248]) + [8])) = $53
	$8 = *($20)
	$4 = *($38)
	*((($3 + [304]) + [8])) = $53
	*($3 + [1248]) = $4
	*($3 + [304]) = $4
	CALL $113(($3 + [1264]), ($3 + [304]), $8, ($3 + [1280]))
	$53 = *(($37 + [8]))
	*((($3 + [1216]) + [8])) = $53
	$8 = *($41)
	$4 = *($37)
	*((($3 + [288]) + [8])) = $53
	*($3 + [1216]) = $4
	*($3 + [288]) = $4
	CALL $113(($3 + [1232]), ($3 + [288]), $8, ($3 + [1280]))
	$53 = *(($36 + [8]))
	*((($3 + [1184]) + [8])) = $53
	$8 = *($42)
	$4 = *($36)
	*((($3 + [272]) + [8])) = $53
	*($3 + [1184]) = $4
	*($3 + [272]) = $4
	CALL $113(($3 + [1200]), ($3 + [272]), $8, ($3 + [1280]))
	$53 = *(($35 + [8]))
	*((($3 + [1152]) + [8])) = $53
	$8 = *($43)
	$4 = *($35)
	*((($3 + [256]) + [8])) = $53
	*($3 + [1152]) = $4
	*($3 + [256]) = $4
	CALL $113(($3 + [1168]), ($3 + [256]), $8, ($3 + [1280]))
	$8 = (($3 + [1264]) + [8])
	if ( ((int_64)*($8) == (int_64)$50) ){ goto $label$25 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$25
	$4 = ((int_64)*($3 + [1264]) + (int_64)$51)
	if ( ((int_64)$4 <= (int_64)-4611686018427387904) ){ goto $label$27 }
	if ( ((int_64)$4 < (int_64)4611686018427387904) ){ goto $label$26 }
	CALL eosio_assert([0], [15078])
	goto $label$26 
	
.LABEL $label$27
	CALL eosio_assert([0], [15059])
	
.LABEL $label$26
	$7 = (($3 + [1232]) + [8])
	if ( ((int_64)*($7) == (int_64)$50) ){ goto $label$28 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$28
	$4 = ((int_64)*($3 + [1232]) + (int_64)$4)
	if ( ((int_64)$4 <= (int_64)-4611686018427387904) ){ goto $label$30 }
	if ( ((int_64)$4 < (int_64)4611686018427387904) ){ goto $label$29 }
	CALL eosio_assert([0], [15078])
	goto $label$29 
	
.LABEL $label$30
	CALL eosio_assert([0], [15059])
	
.LABEL $label$29
	$6 = (($3 + [1200]) + [8])
	if ( ((int_64)*($6) == (int_64)$50) ){ goto $label$31 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$31
	$4 = ((int_64)*($3 + [1200]) + (int_64)$4)
	if ( ((int_64)$4 <= (int_64)-4611686018427387904) ){ goto $label$33 }
	if ( ((int_64)$4 < (int_64)4611686018427387904) ){ goto $label$32 }
	CALL eosio_assert([0], [15078])
	goto $label$32 
	
.LABEL $label$33
	CALL eosio_assert([0], [15059])
	
.LABEL $label$32
	$54 = (($3 + [1168]) + [8])
	if ( ((int_64)*($54) == (int_64)$50) ){ goto $label$34 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$34
	$4 = ((int_64)*($3 + [1168]) + (int_64)$4)
	if ( ((int_64)$4 <= (int_64)-4611686018427387904) ){ goto $label$38 }
	if ( ((int_64)$4 >= (int_64)4611686018427387904) ){ goto $label$37 }
	if ( ((int_64)$4 >= (int_64)1) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	CALL eosio_assert([0], [15059])
	goto $label$35 
	
.LABEL $label$37
	CALL eosio_assert([0], [15078])
	
.LABEL $label$36
	*($3 + [1144]) = [13901]
	*($3 + [1148]) = CALL $15([13901])
	*($3 + [248]) = *($3 + [1144])
	CALL $99(($3 + [696]), ($3 + [248]))
	$55 = (($3 + [1296]) + [96])
	if ( ((int_64)*($55) != (int_64)*($3 + [696])) ){ goto $label$39 }
	$53 = *($0)
	*($3 + [1128]) = [13263]
	*($3 + [1132]) = CALL $15([13263])
	*($3 + [216]) = *($3 + [1128])
	CALL $99(($3 + [1136]), ($3 + [216]))
	*((($3 + [1472]) + [8])) = *($3 + [1136])
	*($3 + [1472]) = $53
	*($3 + [1112]) = [12273]
	*($3 + [1116]) = CALL $15([12273])
	*($3 + [208]) = *($3 + [1112])
	CALL $99(($3 + [1120]), ($3 + [208]))
	*($3 + [1096]) = [13270]
	*($3 + [1100]) = CALL $15([13270])
	*($3 + [200]) = *($3 + [1096])
	CALL $99(($3 + [1104]), ($3 + [200]))
	*((($3 + [696]) + [16])) = $4
	*((($3 + [696]) + [24])) = $50
	*((($3 + [696]) + [8])) = *($55)
	*($3 + [696]) = *($0)
	CALL $52($33, $49)
	CALL $168(CALL $167(($3 + [1488]), ($3 + [1472]), *($3 + [1120]), *($3 + [1104]), ($3 + [696])))
	$55 = *((($3 + [1488]) + [28]))
	if ( ($55 == 0) ){ goto $label$40 }
	*((($3 + [1488]) + [32])) = $55
	CALL $9($55)
	
.LABEL $label$40
	$55 = *((($3 + [1488]) + [16]))
	if ( ($55 == 0) ){ goto $label$41 }
	*((($3 + [1488]) + [20])) = $55
	CALL $9($55)
	
.LABEL $label$41
	if ( ((*($33) & [1]) == 0) ){ goto $label$35 }
	CALL $9(*((($3 + [696]) + [40])))
	goto $label$35 
	
.LABEL $label$39
	CALL $73(($3 + [1080]), $1)
	$55 = CALL $63(($3 + [1080]), [0], [14023])
	$60 = ($55 + [8])
	*(($56 = (($3 + [1472]) + [8]))) = *($60)
	*($3 + [1472]) = *($55)
	*($55) = (int_64)0
	*($60) = [0]
	$55 = CALL $60(($3 + [1472]), [14033])
	$60 = ($55 + [8])
	*(($61 = (($3 + [1488]) + [8]))) = *($60)
	*($3 + [1488]) = *($55)
	*($55) = (int_64)0
	*($60) = [0]
	CALL $73(($3 + [1064]), $1)
	$55 = *($3 + [1064])
	$63 = ($55 & [1])
	$62 = (($3 + [1064]) + [8])
	$55 = CALL $61(($3 + [1488]), ( *($62) ? $34 : $63 ), ( *($3 + [1068]) ? uint_32($55 >> [1]) : $63 ))
	$63 = ($55 + [8])
	*(($60 = (($3 + [696]) + [8]))) = *($63)
	*($3 + [696]) = *($55)
	*($55) = (int_64)0
	*($63) = [0]
	$55 = CALL $60(($3 + [696]), [14090])
	$63 = ($55 + [8])
	*(($64 = (($3 + [352]) + [8]))) = *($63)
	*($3 + [352]) = *($55)
	*($55) = (int_64)0
	*($63) = [0]
	if ( (*($3 + [696]) & [1]) ){ goto $label$50 }
	if ( (*($3 + [1064]) & [1]) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$50
	CALL $9(*($60))
	if ( ((*($3 + [1064]) & [1]) == 0) ){ goto $label$48 }
	
.LABEL $label$49
	CALL $9(*($62))
	if ( ((*($3 + [1488]) & [1]) == 0) ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$48
	if ( (*($3 + [1488]) & [1]) ){ goto $label$46 }
	
.LABEL $label$47
	if ( (*($3 + [1472]) & [1]) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$46
	CALL $9(*($61))
	if ( ((*($3 + [1472]) & [1]) == 0) ){ goto $label$44 }
	
.LABEL $label$45
	CALL $9(*($56))
	if ( (*($3 + [1080]) & [1]) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	if ( ((*($3 + [1080]) & [1]) == 0) ){ goto $label$42 }
	
.LABEL $label$43
	CALL $9(*((($3 + [1080]) + [8])))
	
.LABEL $label$42
	$53 = *($0)
	*($3 + [1048]) = [13263]
	*($3 + [1052]) = CALL $15([13263])
	*($3 + [240]) = *($3 + [1048])
	CALL $99(($3 + [1056]), ($3 + [240]))
	*($56) = *($3 + [1056])
	*($3 + [1472]) = $53
	*($3 + [1032]) = [12273]
	*($3 + [1036]) = CALL $15([12273])
	*($3 + [232]) = *($3 + [1032])
	CALL $99(($3 + [1040]), ($3 + [232]))
	*($3 + [1016]) = [13270]
	*($3 + [1020]) = CALL $15([13270])
	*($3 + [224]) = *($3 + [1016])
	CALL $99(($3 + [1024]), ($3 + [224]))
	*((($3 + [696]) + [16])) = $4
	*((($3 + [696]) + [24])) = $50
	*($60) = *($3 + [1296])
	*($3 + [696]) = *($0)
	CALL $52($33, ($3 + [352]))
	CALL $168(CALL $167(($3 + [1488]), ($3 + [1472]), *($3 + [1040]), *($3 + [1024]), ($3 + [696])))
	$55 = *((($3 + [1488]) + [28]))
	if ( ($55 == 0) ){ goto $label$51 }
	*((($3 + [1488]) + [32])) = $55
	CALL $9($55)
	
.LABEL $label$51
	$55 = *((($3 + [1488]) + [16]))
	if ( ($55 == 0) ){ goto $label$52 }
	*((($3 + [1488]) + [20])) = $55
	CALL $9($55)
	
.LABEL $label$52
	if ( ((*($33) & [1]) == 0) ){ goto $label$53 }
	CALL $9(*((($3 + [696]) + [40])))
	
.LABEL $label$53
	if ( ((*($3 + [352]) & [1]) == 0) ){ goto $label$35 }
	CALL $9(*($64))
	
.LABEL $label$35
	$4 = *($38)
	$56 = (($3 + [1296]) + [24])
	$53 = *($56)
	$55 = (($3 + [1296]) + [40])
	if ( ((int_64)*($55) == (int_64)$53) ){ goto $label$54 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$54
	$4 = ((int_64)*($37) + (int_64)$4)
	if ( ((int_64)$4 <= (int_64)-4611686018427387904) ){ goto $label$66 }
	if ( ((int_64)$4 >= (int_64)4611686018427387904) ){ goto $label$65 }
	if ( ((int_64)*($44) != (int_64)$53) ){ goto $label$64 }
	goto $label$63 
	
.LABEL $label$66
	CALL eosio_assert([0], [15059])
	if ( ((int_64)*($44) == (int_64)$53) ){ goto $label$63 }
	goto $label$64 
	
.LABEL $label$65
	CALL eosio_assert([0], [15078])
	if ( ((int_64)*($44) == (int_64)$53) ){ goto $label$63 }
	
.LABEL $label$64
	CALL eosio_assert([0], [15016])
	$4 = ((int_64)*($36) + (int_64)$4)
	if ( ((int_64)$4 > (int_64)-4611686018427387904) ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$63
	$4 = ((int_64)*($36) + (int_64)$4)
	if ( ((int_64)$4 <= (int_64)-4611686018427387904) ){ goto $label$61 }
	
.LABEL $label$62
	if ( ((int_64)$4 >= (int_64)4611686018427387904) ){ goto $label$60 }
	if ( ((int_64)*($45) != (int_64)$53) ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$61
	CALL eosio_assert([0], [15059])
	if ( ((int_64)*($45) == (int_64)$53) ){ goto $label$58 }
	goto $label$59 
	
.LABEL $label$60
	CALL eosio_assert([0], [15078])
	if ( ((int_64)*($45) == (int_64)$53) ){ goto $label$58 }
	
.LABEL $label$59
	CALL eosio_assert([0], [15016])
	$50 = ((int_64)*($35) + (int_64)$4)
	if ( ((int_64)$50 > (int_64)-4611686018427387904) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$58
	$50 = ((int_64)*($35) + (int_64)$4)
	if ( ((int_64)$50 <= (int_64)-4611686018427387904) ){ goto $label$56 }
	
.LABEL $label$57
	if ( ((int_64)$50 < (int_64)4611686018427387904) ){ goto $label$55 }
	CALL eosio_assert([0], [15078])
	goto $label$55 
	
.LABEL $label$56
	CALL eosio_assert([0], [15059])
	
.LABEL $label$55
	$4 = CALL $88(*($20))
	$51 = *($38)
	CALL __multi3(($3 + [184]), $51, (int_64)$51 >> (int_64)63), $4, (int_64)$4 >> (int_64)63))
	$4 = *($56)
	$51 = *((($3 + [184]) + [8]))
	$57 = *($3 + [184])
	if ( (( (uint_64)($57 <= (int_64)4611686018427387904) ? ((int_64)$51 < (int_64)0) : (int_64)($51 == 0) ) == 0) ){ goto $label$68 }
	if ( ( ((uint_64)$57 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$51 > (int_64)-1) : ((int_64)$51 == (int_64)-1) ) ){ goto $label$67 }
	CALL eosio_assert([0], [14853])
	goto $label$67 
	
.LABEL $label$68
	CALL eosio_assert([0], [14829])
	
.LABEL $label$67
	$51 = CALL $88(*($41))
	$58 = *($37)
	CALL __multi3(($3 + [168]), $58, (int_64)$58 >> (int_64)63), $51, (int_64)$51 >> (int_64)63))
	$59 = *($55)
	$51 = *((($3 + [168]) + [8]))
	$58 = *($3 + [168])
	if ( (( (uint_64)($58 <= (int_64)4611686018427387904) ? ((int_64)$51 < (int_64)0) : (int_64)($51 == 0) ) == 0) ){ goto $label$75 }
	if ( (( ((uint_64)$58 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$51 > (int_64)-1) : ((int_64)$51 == (int_64)-1) ) == 0) ){ goto $label$74 }
	if ( ((int_64)$59 != (int_64)$4) ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$75
	CALL eosio_assert([0], [14829])
	if ( ((int_64)$59 == (int_64)$4) ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$74
	CALL eosio_assert([0], [14853])
	if ( ((int_64)$59 == (int_64)$4) ){ goto $label$72 }
	
.LABEL $label$73
	CALL eosio_assert([0], [15016])
	$58 = ((int_64)$58 + (int_64)$57)
	if ( ((int_64)$58 > (int_64)-4611686018427387904) ){ goto $label$71 }
	goto $label$70 
	
.LABEL $label$72
	$58 = ((int_64)$58 + (int_64)$57)
	if ( ((int_64)$58 <= (int_64)-4611686018427387904) ){ goto $label$70 }
	
.LABEL $label$71
	if ( ((int_64)$58 < (int_64)4611686018427387904) ){ goto $label$69 }
	CALL eosio_assert([0], [15078])
	goto $label$69 
	
.LABEL $label$70
	CALL eosio_assert([0], [15059])
	
.LABEL $label$69
	$51 = CALL $88(*($42))
	$57 = *($36)
	CALL __multi3(($3 + [152]), $57, (int_64)$57 >> (int_64)63), $51, (int_64)$51 >> (int_64)63))
	$59 = *($44)
	$51 = *((($3 + [152]) + [8]))
	$57 = *($3 + [152])
	if ( (( (uint_64)($57 <= (int_64)4611686018427387904) ? ((int_64)$51 < (int_64)0) : (int_64)($51 == 0) ) == 0) ){ goto $label$82 }
	if ( (( ((uint_64)$57 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$51 > (int_64)-1) : ((int_64)$51 == (int_64)-1) ) == 0) ){ goto $label$81 }
	if ( ((int_64)$59 != (int_64)$4) ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$82
	CALL eosio_assert([0], [14829])
	if ( ((int_64)$59 == (int_64)$4) ){ goto $label$79 }
	goto $label$80 
	
.LABEL $label$81
	CALL eosio_assert([0], [14853])
	if ( ((int_64)$59 == (int_64)$4) ){ goto $label$79 }
	
.LABEL $label$80
	CALL eosio_assert([0], [15016])
	$58 = ((int_64)$58 + (int_64)$57)
	if ( ((int_64)$58 > (int_64)-4611686018427387904) ){ goto $label$78 }
	goto $label$77 
	
.LABEL $label$79
	$58 = ((int_64)$58 + (int_64)$57)
	if ( ((int_64)$58 <= (int_64)-4611686018427387904) ){ goto $label$77 }
	
.LABEL $label$78
	if ( ((int_64)$58 < (int_64)4611686018427387904) ){ goto $label$76 }
	CALL eosio_assert([0], [15078])
	goto $label$76 
	
.LABEL $label$77
	CALL eosio_assert([0], [15059])
	
.LABEL $label$76
	$51 = CALL $88(*($43))
	$57 = *($35)
	CALL __multi3(($3 + [136]), $57, (int_64)$57 >> (int_64)63), $51, (int_64)$51 >> (int_64)63))
	$59 = *($45)
	$51 = *((($3 + [136]) + [8]))
	$57 = *($3 + [136])
	if ( (( (uint_64)($57 <= (int_64)4611686018427387904) ? ((int_64)$51 < (int_64)0) : (int_64)($51 == 0) ) == 0) ){ goto $label$89 }
	if ( (( ((uint_64)$57 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$51 > (int_64)-1) : ((int_64)$51 == (int_64)-1) ) == 0) ){ goto $label$88 }
	if ( ((int_64)$59 != (int_64)$4) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$89
	CALL eosio_assert([0], [14829])
	if ( ((int_64)$59 == (int_64)$4) ){ goto $label$86 }
	goto $label$87 
	
.LABEL $label$88
	CALL eosio_assert([0], [14853])
	if ( ((int_64)$59 == (int_64)$4) ){ goto $label$86 }
	
.LABEL $label$87
	CALL eosio_assert([0], [15016])
	$51 = ((int_64)$58 + (int_64)$57)
	if ( ((int_64)$51 > (int_64)-4611686018427387904) ){ goto $label$85 }
	goto $label$84 
	
.LABEL $label$86
	$51 = ((int_64)$58 + (int_64)$57)
	if ( ((int_64)$51 <= (int_64)-4611686018427387904) ){ goto $label$84 }
	
.LABEL $label$85
	if ( ((int_64)$51 < (int_64)4611686018427387904) ){ goto $label$83 }
	CALL eosio_assert([0], [15078])
	goto $label$83 
	
.LABEL $label$84
	CALL eosio_assert([0], [15059])
	
.LABEL $label$83
	*((($3 + [1000]) + [8])) = $53
	*((($3 + [968]) + [8])) = $4
	*((($3 + [120]) + [8])) = $53
	*((($3 + [88]) + [8])) = $4
	$4 = *($52)
	*((($3 + [984]) + [8])) = $4
	*((($3 + [104]) + [8])) = $4
	*($3 + [1000]) = $50
	$4 = *($3 + [1280])
	*($3 + [984]) = $4
	*($3 + [968]) = $51
	*($3 + [120]) = $50
	*($3 + [104]) = $4
	*($3 + [88]) = $51
	CALL $169($0, *($3 + [1296]), *((($3 + [1296]) + [8])), ($3 + [120]), ($3 + [104]), ($3 + [88]))
	*($3 + [552]) = *($9)
	CALL $52($32, $19)
	*(($31 + [4])) = *(($11 + [4]))
	*($31) = *($11)
	CALL $52($30, $18)
	CALL $52($29, $17)
	CALL $52($28, $16)
	CALL $52($27, $15)
	CALL $52($26, $14)
	*(($25 + [24])) = *(($20 + [24]))
	*(($25 + [16])) = *(($20 + [16]))
	*(($25 + [8])) = *(($20 + [8]))
	*($25) = *($20)
	CALL $52($24, $13)
	CALL $52($23, $12)
	CALL memcpy(($3 + [432]), ($3 + [1296]), [104])
	CALL $52($22, $49)
	$4 = *($8)
	*((($3 + [416]) + [8])) = $4
	*(($8 = (($3 + [400]) + [8]))) = *($7)
	*(($7 = (($3 + [384]) + [8]))) = *($6)
	*(($6 = (($3 + [368]) + [8]))) = *($54)
	*((($3 + [72]) + [8])) = $4
	$4 = *($3 + [1264])
	*($3 + [416]) = $4
	*($3 + [400]) = *($3 + [1232])
	*($3 + [384]) = *($3 + [1200])
	*($3 + [368]) = *($3 + [1168])
	*($3 + [72]) = $4
	*((($3 + [56]) + [8])) = *($8)
	*((($3 + [40]) + [8])) = *($7)
	*((($3 + [24]) + [8])) = *($6)
	*($3 + [56]) = *($3 + [400])
	*($3 + [40]) = *($3 + [384])
	*($3 + [24]) = *($3 + [368])
	CALL $118(($3 + [696]), ($3 + [552]), ($3 + [432]), ($3 + [72]), ($3 + [56]), ($3 + [40]), ($3 + [24]))
	if ( ((*($22) & [1]) == 0) ){ goto $label$90 }
	CALL $9(*((($3 + [432]) + [112])))
	
.LABEL $label$90
	CALL $130(($3 + [552]))
	$4 = *($0)
	*($3 + [336]) = [13263]
	*($3 + [340]) = CALL $15([13263])
	*($3 + [16]) = *($3 + [336])
	CALL $99(($3 + [344]), ($3 + [16]))
	*((($3 + [352]) + [8])) = *($3 + [344])
	*($3 + [352]) = $4
	*($3 + [328]) = [14121]
	*($3 + [332]) = CALL $15([14121])
	*($3 + [8]) = *($3 + [328])
	$7 = CALL $99(($3 + [1080]), ($3 + [8]))
	$4 = CALL $86()
	$8 = [0]
	*($46) = [0]
	*((($3 + [1488]) + [16])) = [0]
	*((($3 + [1488]) + [20])) = (int_64)0
	*((($3 + [1488]) + [28])) = (int_64)0
	*($21) = (int_64)0
	*($47) = (int_64)0
	*((($3 + [1488]) + [52])) = (int_64)0
	*($3 + [1488]) = ((CASTING uint_32)(uint_64 ((int_64)$4 / (int_64)1000000)) + [60])
	CALL $170($21, ($3 + [352]), $0, $7, ($3 + [696]))
	$4 = ((int_64)*($7) + (int_64)1)
	*(($7 = ($0 + [72]))) = $4
	$53 = CALL $86()
	*($3 + [1472]) = $53
	*($3 + [1480]) = ((int_64)$4 | (int_64)$53 >> (int_64)63))
	CALL $171(($3 + [1488]), ($3 + [1472]), *($0), [0])
	CALL $172(($3 + [1488]))
	$7 = CALL db_next_i64(*($10 + [120]), ($3 + [1488]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$91 }
	$8 = CALL $165(($3 + [1416]), $7)
	
.LABEL $label$91
	CALL $173(($3 + [1416]), $10)
	$2 = ((int_64)$2 + (int_64)-1)
	CALL $119(($3 + [696]))
	if ( ((*($39) & [1]) == 0) ){ goto $label$92 }
	CALL $9(*($48))
	
.LABEL $label$92
	$10 = $8
	if ( ((int_64)($2 == 0) == 0) ){ goto $label$11 }
	
.LABEL $label$10
	$6 = *($3 + [1440])
	if ( ($6 == 0) ){ goto $label$93 }
	$0 = ($3 + [1444])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$95 }
	
.LOOP $label$96:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$97 }
	if ( ((*($7 + [104]) & [1]) == 0) ){ goto $label$98 }
	CALL $9(*(($7 + [112])))
	
.LABEL $label$98
	CALL $9($7)
	
.LABEL $label$97
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$96 }
	$8 = *(($3 + [1440]))
	goto $label$94 
	
.LABEL $label$95
	$8 = $6
	
.LABEL $label$94
	*($0) = $6
	CALL $9($8)
	
.LABEL $label$93
	$global$0 = ($3 + [1552])
	return 
	
.LABEL $label$8
	CALL eosio_assert([0], [14140])
	$global$0 = ($3 + [1552])
}

void .FUNC $163 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	CALL $164($0, $1, $2)
}

void .FUNC $162 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [128]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	*($1 + [16]) = *((*($3) + [488]))
	$6 = *($1)
	$7 = *($3 + [4])
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [64]))) ){ goto $label$3 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$3
	$8 = ((int_64)*($1 + [56]) + (int_64)*($7))
	*($1 + [56]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [15059])
	$8 = *(($1 + [56]))
	
.LABEL $label$4
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$5
	$3 = *($3 + [8])
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [112]))) ){ goto $label$6 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$6
	$8 = ((int_64)*($1 + [104]) + (int_64)*($3))
	*($1 + [104]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [15059])
	$8 = *(($1 + [104]))
	
.LABEL $label$7
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$8
	$8 = *($1 + [24])
	$9 = *(($1 + [32]))
	if ( ((int_64)*(($1 + [64])) == (int_64)$9) ){ goto $label$9 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$9
	$8 = ((int_64)*(($1 + [56])) + (int_64)$8)
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$11 }
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [15078])
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [15059])
	
.LABEL $label$10
	*($1 + [40]) = $8
	*(($1 + [48])) = $9
	$8 = *($1 + [72])
	$9 = *(($1 + [80]))
	if ( ((int_64)*(($1 + [112])) == (int_64)$9) ){ goto $label$12 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$12
	$8 = ((int_64)*(($1 + [104])) + (int_64)$8)
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$14 }
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$13 }
	CALL eosio_assert([0], [15078])
	goto $label$13 
	
.LABEL $label$14
	CALL eosio_assert([0], [15059])
	
.LABEL $label$13
	*($1 + [88]) = $8
	*(($1 + [96])) = $9
	*($1 + [124]) = ((int_64)CALL $86() / (int_64)1000000)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$15 }
	CALL eosio_assert([0], [15228])
	
.LABEL $label$15
	$4 = $4
	$3 = ($4 + [-128])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = $4
	CALL $371($5, $1)
	CALL db_update_i64(*($1 + [132]), $2, $3, [128])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$16 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	$global$0 = ($5 + [16])
}

int_32 .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([144])) + [32]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [112]) = (int_64)0
	*($5 + [128]) = $0
	CALL $390(($3 + [32]), $5)
	*($5 + [132]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $190(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$2 = ($global$0 - [448])
	$global$0 = $2
	$3 = *($1)
	if ( ((int_64)$3 < (int_64)1) ){ goto $label$3 }
	CALL __multi3(($2 + [128]), $3, (int_64)$3 >> (int_64)63), (int_64)300, (int_64)0)
	$4 = *($1 + [8])
	$6 = *(($2 + [136]))
	$5 = *($2 + [128])
	if ( ( (uint_64)($5 <= (int_64)4611686018427387904) ? ((int_64)$6 < (int_64)0) : (int_64)($6 == 0) ) ){ goto $label$4 }
	CALL eosio_assert([0], [14829])
	
.LABEL $label$4
	$6 = ((int_64)$5 / (int_64)100000)
	if ( ((int_64)$5 < (int_64)100000) ){ goto $label$5 }
	CALL $73(($2 + [360]), *($0 + [480]))
	$7 = CALL $63(($2 + [360]), [0], [14154])
	$8 = ($7 + [8])
	*((($2 + [376]) + [8])) = *($8)
	*($2 + [376]) = *($7)
	*($7) = (int_64)0
	*($8) = [0]
	$7 = CALL $60(($2 + [376]), [14162])
	$8 = ($7 + [8])
	*((($2 + [264]) + [8])) = *($8)
	*($2 + [264]) = *($7)
	*($7) = (int_64)0
	*($8) = [0]
	CALL $73(($2 + [416]), *(($0 + [488])))
	$7 = *($2 + [416])
	$8 = ($7 & [1])
	$7 = CALL $61(($2 + [264]), ( *($2 + [424]) ? (($2 + [416]) | [1]) : $8 ), ( *($2 + [420]) ? uint_32($7 >> [1]) : $8 ))
	$8 = ($7 + [8])
	*((($2 + [432]) + [8])) = *($8)
	*($2 + [432]) = *($7)
	*($7) = (int_64)0
	*($8) = [0]
	if ( (*($2 + [416]) & [1]) ){ goto $label$12 }
	if ( (*($2 + [264]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $9(*((($2 + [416]) + [8])))
	if ( ((*($2 + [264]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*($2 + [272]))
	$7 = [1]
	if ( ((*($2 + [376]) & [1]) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$7 = [1]
	if ( (*($2 + [376]) & [1]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((*($2 + [360]) & $7) == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	CALL $9(*($2 + [384]))
	if ( ((*($2 + [360]) & $7) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*($2 + [368]))
	
.LABEL $label$6
	$5 = *($0)
	*($2 + [344]) = [13263]
	*($2 + [348]) = CALL $15([13263])
	*($2 + [120]) = *($2 + [344])
	$7 = CALL $99(($2 + [352]), ($2 + [120]))
	*($2 + [360]) = $5
	*($2 + [368]) = *($7)
	*($2 + [328]) = [12273]
	*($2 + [332]) = CALL $15([12273])
	*($2 + [112]) = *($2 + [328])
	$7 = CALL $99(($2 + [336]), ($2 + [112]))
	*($2 + [312]) = [13270]
	*($2 + [316]) = CALL $15([13270])
	*($2 + [104]) = *($2 + [312])
	$8 = CALL $99(($2 + [320]), ($2 + [104]))
	*($2 + [256]) = [14170]
	*($2 + [260]) = CALL $15([14170])
	*($2 + [96]) = *($2 + [256])
	$9 = CALL $99(($2 + [416]), ($2 + [96]))
	*(($2 + [288])) = $4
	*($2 + [280]) = $6
	*($2 + [264]) = *($0)
	*($2 + [272]) = *($9)
	CALL $52((($2 + [264]) + [32]), ($2 + [432]))
	$7 = CALL $167(($2 + [376]), ($2 + [360]), *($7), *($8), ($2 + [264]))
	CALL $168($7)
	$8 = *($7 + [28])
	if ( ($8 == 0) ){ goto $label$13 }
	*(($7 + [32])) = $8
	CALL $9($8)
	
.LABEL $label$13
	$8 = *($7 + [16])
	if ( ($8 == 0) ){ goto $label$14 }
	*(($7 + [20])) = $8
	CALL $9($8)
	
.LABEL $label$14
	if ( ((*($2 + [296]) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*(($2 + [304])))
	
.LABEL $label$15
	if ( ((*($2 + [432]) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*($2 + [440]))
	
.LABEL $label$5
	$6 = (int_64)$3 >> (int_64)63
	CALL __multi3(($2 + [80]), $3, $6), (int_64)325, (int_64)0)
	$10 = *(($2 + [88]))
	$5 = *($2 + [80])
	if ( ( (uint_64)($5 <= (int_64)4611686018427387904) ? ((int_64)$10 < (int_64)0) : (int_64)($10 == 0) ) ){ goto $label$16 }
	CALL eosio_assert([0], [14829])
	
.LABEL $label$16
	$10 = ((int_64)$5 / (int_64)100000)
	if ( ((int_64)$5 < (int_64)100000) ){ goto $label$17 }
	$3 = *($0)
	*($2 + [240]) = [13263]
	*($2 + [244]) = CALL $15([13263])
	*($2 + [72]) = *($2 + [240])
	$7 = CALL $99(($2 + [248]), ($2 + [72]))
	*($2 + [360]) = $3
	*($2 + [368]) = *($7)
	*($2 + [224]) = [12273]
	*($2 + [228]) = CALL $15([12273])
	*($2 + [64]) = *($2 + [224])
	$9 = CALL $99(($2 + [232]), ($2 + [64]))
	*($2 + [208]) = [13270]
	*($2 + [212]) = CALL $15([13270])
	*($2 + [56]) = *($2 + [208])
	$11 = CALL $99(($2 + [216]), ($2 + [56]))
	*($2 + [200]) = [14179]
	*($2 + [204]) = CALL $15([14179])
	*($2 + [48]) = *($2 + [200])
	$12 = CALL $99(($2 + [416]), ($2 + [48]))
	*(($2 + [440])) = [0]
	*($2 + [432]) = (int_64)0
	$7 = CALL $15([12336])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$20 }
	*($2 + [432]) = ($7 << [1])
	$8 = (($2 + [432]) | [1])
	if ( $7 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$13 = (($7 + [16]) & [-16])
	$8 = CALL $7($13)
	*($2 + [432]) = ($13 | [1])
	*($2 + [440]) = $8
	*($2 + [436]) = $7
	
.LABEL $label$19
	CALL memcpy($8, [12336], $7)
	
.LABEL $label$18
	*(($8 + $7)) = [0]
	*(($2 + [288])) = $4
	$7 = ($2 + [440])
	*(($2 + [304])) = *($7)
	*($7) = [0]
	*($2 + [280]) = $10
	*($2 + [264]) = *($0)
	*($2 + [272]) = *($12)
	*($2 + [296]) = *($2 + [432])
	*($2 + [432]) = (int_64)0
	$7 = CALL $167(($2 + [376]), ($2 + [360]), *($9), *($11), ($2 + [264]))
	CALL $168($7)
	$8 = *($7 + [28])
	if ( ($8 == 0) ){ goto $label$21 }
	*(($7 + [32])) = $8
	CALL $9($8)
	
.LABEL $label$21
	$8 = *($7 + [16])
	if ( ($8 == 0) ){ goto $label$22 }
	*(($7 + [20])) = $8
	CALL $9($8)
	
.LABEL $label$22
	if ( ((*(($2 + [296])) & [1]) == 0) ){ goto $label$23 }
	CALL $9(*(($2 + [304])))
	
.LABEL $label$23
	if ( ((*($2 + [432]) & [1]) == 0) ){ goto $label$24 }
	CALL $9(*(($2 + [440])))
	
.LABEL $label$24
	$3 = *($1)
	$6 = (int_64)$3 >> (int_64)63)
	$4 = *(($1 + [8]))
	
.LABEL $label$17
	CALL __multi3(($2 + [32]), $3, $6, (int_64)50, (int_64)0)
	$5 = *(($2 + [40]))
	$3 = *($2 + [32])
	if ( (( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ) == 0) ){ goto $label$26 }
	if ( ( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ) ){ goto $label$27 }
	CALL eosio_assert([0], [14853])
	
.LABEL $label$27
	$5 = ((int_64)$3 / (int_64)100000)
	if ( ((int_64)$3 >= (int_64)100000) ){ goto $label$25 }
	goto $label$3 
	
.LABEL $label$26
	CALL eosio_assert([0], [14829])
	$5 = ((int_64)$3 / (int_64)100000)
	if ( ((int_64)$3 < (int_64)100000) ){ goto $label$3 }
	
.LABEL $label$25
	$3 = *($0)
	*($2 + [184]) = [13263]
	*($2 + [188]) = CALL $15([13263])
	*($2 + [24]) = *($2 + [184])
	$1 = CALL $99(($2 + [192]), ($2 + [24]))
	*($2 + [360]) = $3
	*($2 + [368]) = *($1)
	*($2 + [168]) = [12273]
	*($2 + [172]) = CALL $15([12273])
	*($2 + [16]) = *($2 + [168])
	$8 = CALL $99(($2 + [176]), ($2 + [16]))
	*($2 + [152]) = [13270]
	*($2 + [156]) = CALL $15([13270])
	*($2 + [8]) = *($2 + [152])
	$9 = CALL $99(($2 + [160]), ($2 + [8]))
	*($2 + [144]) = [14188]
	*($2 + [148]) = CALL $15([14188])
	*($2) = *($2 + [144])
	$11 = CALL $99(($2 + [416]), $2)
	*(($2 + [440])) = [0]
	*($2 + [432]) = (int_64)0
	$1 = CALL $15([14197])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$30 }
	*($2 + [432]) = ($1 << [1])
	$7 = (($2 + [432]) | [1])
	if ( $1 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$12 = (($1 + [16]) & [-16])
	$7 = CALL $7($12)
	*($2 + [432]) = ($12 | [1])
	*($2 + [440]) = $7
	*($2 + [436]) = $1
	
.LABEL $label$29
	CALL memcpy($7, [14197], $1)
	
.LABEL $label$28
	*(($7 + $1)) = [0]
	*(($2 + [288])) = $4
	$1 = ($2 + [440])
	*(($2 + [304])) = *($1)
	*($1) = [0]
	*($2 + [280]) = $5
	*($2 + [264]) = *($0)
	*($2 + [272]) = *($11)
	*($2 + [296]) = *($2 + [432])
	*($2 + [432]) = (int_64)0
	$0 = CALL $167(($2 + [376]), ($2 + [360]), *($8), *($9), ($2 + [264]))
	CALL $168($0)
	$1 = *($0 + [28])
	if ( ($1 == 0) ){ goto $label$31 }
	*(($0 + [32])) = $1
	CALL $9($1)
	
.LABEL $label$31
	$1 = *($0 + [16])
	if ( ($1 == 0) ){ goto $label$32 }
	*(($0 + [20])) = $1
	CALL $9($1)
	
.LABEL $label$32
	if ( ((*(($2 + [296])) & [1]) == 0) ){ goto $label$33 }
	CALL $9(*(($2 + [304])))
	
.LABEL $label$33
	if ( ((*($2 + [432]) & [1]) == 0) ){ goto $label$3 }
	CALL $9(*(($2 + [440])))
	
.LABEL $label$3
	$global$0 = ($2 + [448])
	return (unreachable)
	
.LABEL $label$2
	CALL $51(($2 + [432]))
	
.LABEL $label$1
	CALL $51(($2 + [432]))
	(unreachable)
}

void .FUNC $67 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $108($1, $0, [11587])
	CALL $74()
	(unreachable)
}

void .FUNC $169 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	$6 = ($global$0 - [432])
	$global$0 = $6
	if ( ((int_64)*($3) < (int_64)1) ){ goto $label$1 }
	$7 = *(($3 + [8]))
	*((($6 + [400]) + [8])) = $7
	$8 = *($3)
	*((($6 + [176]) + [8])) = $7
	*($6 + [400]) = $8
	*($6 + [176]) = $8
	CALL $253(($6 + [416]), $0, ($6 + [176]), [0])
	if ( ((int_64)*($6 + [416]) < (int_64)1) ){ goto $label$5 }
	*((($6 + [336]) + [8])) = [0]
	*((($6 + [368]) + [8])) = *(($5 + [8]))
	*((($6 + [352]) + [8])) = *((($6 + [416]) + [8]))
	*($6 + [336]) = (int_64)0
	*($6 + [368]) = *($5)
	*($6 + [352]) = *($6 + [416])
	$3 = CALL $15([14212])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$8 }
	*($6 + [336]) = ($3 << [1])
	$5 = (($6 + [336]) | [1])
	if ( $3 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$9 = (($3 + [16]) & [-16])
	$5 = CALL $7($9)
	*($6 + [336]) = ($9 | [1])
	*($6 + [344]) = $5
	*($6 + [340]) = $3
	
.LABEL $label$7
	CALL memcpy($5, [14212], $3)
	
.LABEL $label$6
	*(($5 + $3)) = [0]
	*((($6 + [160]) + [8])) = *((($6 + [368]) + [8]))
	*((($6 + [144]) + [8])) = *((($6 + [352]) + [8]))
	*($6 + [160]) = *($6 + [368])
	*($6 + [144]) = *($6 + [352])
	CALL $254(($6 + [384]), $0, $1, $2, ($6 + [160]), ($6 + [144]), ($6 + [336]))
	*(($3 = (($6 + [416]) + [8]))) = *((($6 + [384]) + [8]))
	*($6 + [416]) = *($6 + [384])
	if ( ((*($6 + [336]) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*($6 + [344]))
	
.LABEL $label$9
	*((($6 + [304]) + [8])) = [0]
	*((($6 + [320]) + [8])) = *($3)
	*($6 + [304]) = (int_64)0
	*($6 + [320]) = *($6 + [416])
	$3 = CALL $15([11180])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$12 }
	*($6 + [304]) = ($3 << [1])
	$5 = (($6 + [304]) | [1])
	if ( $3 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$9 = (($3 + [16]) & [-16])
	$5 = CALL $7($9)
	*($6 + [304]) = ($9 | [1])
	*($6 + [312]) = $5
	*($6 + [308]) = $3
	
.LABEL $label$11
	CALL memcpy($5, [11180], $3)
	
.LABEL $label$10
	*(($5 + $3)) = [0]
	*((($6 + [128]) + [8])) = *((($6 + [320]) + [8]))
	*($6 + [128]) = *($6 + [320])
	CALL $207($0, $1, ($6 + [128]), ($6 + [304]))
	if ( ((*($6 + [304]) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*($6 + [312]))
	
.LABEL $label$5
	$10 = *($4)
	if ( ((int_64)$10 < (int_64)1) ){ goto $label$1 }
	CALL __multi3(($6 + [112]), $10, (int_64)$10 >> (int_64)63), (int_64)12, (int_64)0)
	$11 = *($4 + [8])
	$7 = *((($6 + [112]) + [8]))
	$8 = *($6 + [112])
	if ( ( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$7 < (int_64)0) : (int_64)($7 == 0) ) ){ goto $label$13 }
	CALL eosio_assert([0], [14829])
	
.LABEL $label$13
	*((($6 + [288]) + [8])) = *(($4 + [8]))
	*($6 + [288]) = *($4)
	$12 = ((int_64)$8 / (int_64)10000)
	$3 = CALL $15([12285])
	if ( ($3 <= [8]) ){ goto $label$16 }
	CALL eosio_assert([0], [14622])
	goto $label$15 
	
.LABEL $label$16
	if ( ($3 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$8 = (int_64)0
	
.LOOP $label$17:
	$5 = *(($3 + [12284]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$18
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$17 }
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)4)
	goto $label$2 
	
.LABEL $label$14
	$8 = (int_64)4
	goto $label$2 
	
.LABEL $label$4
	CALL $51(($6 + [336]))
	
.LABEL $label$3
	CALL $51(($6 + [304]))
	
.LABEL $label$2
	*($6 + [272]) = (int_64)0
	*($6 + [280]) = $8
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$7 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$22 }
	$8 = $7
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$22
	$8 = $7
	
.LOOP $label$23:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$20 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$9 = ($3 + [1])
	$3 = $9
	if ( $5 ){ goto $label$23 }
	$3 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	CALL eosio_assert([0], [14769])
	
.LABEL $label$19
	*(($3 = (($6 + [256]) + [8]))) = *((($6 + [416]) + [8]))
	*($6 + [256]) = *($6 + [416])
	*($6 + [240]) = $12
	*($6 + [248]) = $11
	CALL $92(($6 + [224]), $1)
	*((($6 + [96]) + [8])) = *((($6 + [288]) + [8]))
	*((($6 + [80]) + [8])) = *((($6 + [272]) + [8]))
	*((($6 + [64]) + [8])) = *($3)
	*((($6 + [48]) + [8])) = *($6 + [248])
	*($6 + [96]) = *($6 + [288])
	*($6 + [80]) = *($6 + [272])
	*($6 + [64]) = *($6 + [256])
	*($6 + [48]) = *($6 + [240])
	CALL $255($0, $1, $2, ($6 + [96]), ($6 + [80]), ($6 + [64]), ($6 + [48]), ($6 + [224]))
	if ( ((*($6 + [224]) & [1]) == 0) ){ goto $label$24 }
	CALL $9(*($6 + [232]))
	
.LABEL $label$24
	CALL __multi3(($6 + [32]), $10, (int_64)$10 >> (int_64)63), (int_64)59, (int_64)0)
	$8 = *((($6 + [32]) + [8]))
	$7 = *($6 + [32])
	if ( (( (uint_64)($7 <= (int_64)4611686018427387904) ? ((int_64)$8 < (int_64)0) : (int_64)($8 == 0) ) == 0) ){ goto $label$26 }
	if ( ( ((uint_64)$7 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$8 > (int_64)-1) : ((int_64)$8 == (int_64)-1) ) ){ goto $label$25 }
	CALL eosio_assert([0], [14853])
	goto $label$25 
	
.LABEL $label$26
	CALL eosio_assert([0], [14829])
	
.LABEL $label$25
	$10 = *(($4 + [8]))
	*((($6 + [192]) + [8])) = $10
	$8 = *($4)
	*((($6 + [16]) + [8])) = $11
	*(($6 + [8])) = $10
	*($6 + [216]) = $11
	$7 = ((int_64)$7 / (int_64)10000)
	*($6 + [208]) = $7
	*($6 + [192]) = $8
	*($6 + [16]) = $7
	*($6) = $8
	CALL $256($0, $1, ($6 + [16]), $6, [10])
	
.LABEL $label$1
	$global$0 = ($6 + [432])
	(unreachable)
	(unreachable)
}

void .FUNC $168 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $204($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $206(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $9($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

int_32 .FUNC $66 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $17(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

int_32 .FUNC $61 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $55($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $15($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $55($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_32 .FUNC $63 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $62($0, $1, $2, CALL $15($2))
}

void .FUNC $241 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$1 = ($global$0 - [48])
	$global$0 = $1
	$2 = ((int_64)CALL $86() / (int_64)1000000)
	$3 = CALL db_lowerbound_i64(*($0 + [120]), *(($0 + [128])), (int_64)-4138934702985707520, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$4 = ($0 + [120])
	$3 = CALL $243($4, $3)
	if ( ((int_64))($2 - *($3 + [40])) < (int_64)57600) ){ goto $label$1 }
	$5 = CALL db_next_i64(*($3 + [48]), $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $243($4, $5)
	
.LABEL $label$2
	CALL $244($4, $3)
	
.LABEL $label$1
	$3 = CALL db_lowerbound_i64(*($0 + [160]), *(($0 + [168])), (int_64)-3107686822742310912, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$4 = ($0 + [160])
	$3 = CALL $245($4, $3)
	if ( ((int_64))($2 - *($3 + [40])) < (int_64)57600) ){ goto $label$3 }
	$5 = CALL db_next_i64(*($3 + [48]), $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	CALL $245($4, $5)
	
.LABEL $label$4
	CALL $246($4, $3)
	
.LABEL $label$3
	$3 = CALL db_lowerbound_i64(*($0 + [240]), *(($0 + [248])), (int_64)-5915351331303849984, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	$4 = ($0 + [240])
	$3 = CALL $247($4, $3)
	if ( ((int_64))($2 - *($3 + [144])) < (int_64)57600) ){ goto $label$5 }
	$5 = CALL db_next_i64(*($3 + [152]), $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$6 }
	CALL $247($4, $5)
	
.LABEL $label$6
	CALL $248($4, $3)
	
.LABEL $label$5
	$3 = CALL db_lowerbound_i64(*($0 + [200]), *(($0 + [208])), (int_64)-5915062038115123200, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$7 }
	$4 = ($0 + [200])
	$3 = CALL $161($4, $3)
	if ( ((int_64))($2 - *($3 + [124])) < (int_64)57600) ){ goto $label$7 }
	$5 = CALL db_next_i64(*($3 + [132]), $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$8 }
	CALL $161($4, $5)
	
.LABEL $label$8
	CALL $249($4, $3)
	
.LABEL $label$7
	$3 = CALL db_lowerbound_i64(*($0 + [808]), *(($0 + [816])), (int_64)7035937633859534848, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$9 }
	$6 = ($0 + [808])
	$3 = CALL $157($6, $3)
	if ( (uint_64)((int_64))($2 - *($3 + [104])) <= (int_64)57600) ){ goto $label$9 }
	$4 = [-9]
	
.LOOP $label$11:
	if ( ((int_32)*($3 + [20]) == (int_32)[3]) ){ goto $label$10 }
	$3 = CALL db_next_i64(*($3 + [148]), $1)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$9 }
	$3 = CALL $157($6, $3)
	if ( ($4 == 0) ){ goto $label$9 }
	$4 = ($4 + [1])
	if ( ((uint_64)(int_64))($2 - *($3 + [104])) >= (uint_64)(int_64)57600) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	*(($1 + [32])) = [0]
	*($1 + [16]) = (int_64)-1
	$2 = *($3)
	$7 = *($0)
	*($1) = $7
	*($1 + [8]) = $2
	*($1 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($7, $2, (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$13 }
	$4 = CALL $250($1, $0)
	$5 = [1]
	
.LOOP $label$14:
	$0 = [0]
	$8 = CALL db_next_i64(*($4 + [136]), ($1 + [40]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$15 }
	$0 = CALL $250($1, $8)
	
.LABEL $label$15
	CALL $251($1, $4)
	if ( ($0 == 0) ){ goto $label$16 }
	$8 = ($5 <= [5])
	$5 = ($5 + [1])
	$4 = $0
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$16
	if ( $0 ){ goto $label$12 }
	
.LABEL $label$13
	$0 = CALL db_next_i64(*($3 + [148]), ($1 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$17 }
	CALL $157($6, $0)
	
.LABEL $label$17
	CALL $252($6, $3)
	
.LABEL $label$12
	$4 = *($1 + [24])
	if ( ($4 == 0) ){ goto $label$9 }
	$5 = ($1 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$19 }
	
.LOOP $label$20:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$21 }
	CALL $9($3)
	
.LABEL $label$21
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$20 }
	$0 = *(($1 + [24]))
	goto $label$18 
	
.LABEL $label$19
	$0 = $4
	
.LABEL $label$18
	*($5) = $4
	CALL $9($0)
	
.LABEL $label$9
	$global$0 = ($1 + [48])
}

int_32 .FUNC $390 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [32])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [48])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [56])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [64])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [72])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [80])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [88])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$12
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [96])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [104])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$14
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$15
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [112])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [120])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[3]) ){ goto $label$16 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$16
	CALL memcpy($5, $4, [4])
	$4 = (*($3) + [4])
	*($3) = $4
	$1 = ($1 + [124])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[3]) ){ goto $label$17 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$17
	CALL memcpy($1, $4, [4])
	*(($1 = ($0 + [4]))) = (*($1) + [4])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $391 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	$2 = ($global$0 - [112])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($2 + [16]) = [0]
	*($2) = ($2 + [16])
	$3 = ($1 + [8])
	*($2 + [28]) = $3
	*($2 + [24]) = $1
	$4 = ($1 + [16])
	*($2 + [32]) = $4
	$5 = ($1 + [28])
	*($2 + [36]) = $5
	$6 = ($1 + [40])
	*($2 + [40]) = $6
	$7 = ($1 + [52])
	*($2 + [44]) = $7
	$8 = ($1 + [64])
	*($2 + [48]) = $8
	$9 = ($1 + [68])
	*($2 + [52]) = $9
	$10 = ($1 + [80])
	*($2 + [56]) = $10
	$11 = ($1 + [92])
	*($2 + [60]) = $11
	$12 = ($1 + [104])
	*($2 + [64]) = $12
	$13 = ($1 + [116])
	*($2 + [68]) = $13
	$14 = ($1 + [128])
	*($2 + [72]) = $14
	$15 = ($1 + [144])
	*($2 + [76]) = $15
	$16 = ($1 + [160])
	*($2 + [80]) = $16
	$17 = ($1 + [176])
	*($2 + [84]) = $17
	$18 = ($1 + [192])
	*($2 + [88]) = $18
	$19 = ($1 + [208])
	*($2 + [92]) = $19
	$20 = ($1 + [224])
	*($2 + [96]) = $20
	$21 = ($1 + [256])
	*($2 + [104]) = $21
	$22 = ($1 + [240])
	*($2 + [100]) = $22
	CALL $392(($2 + [24]), $2)
	$25 = *($0)
	$24 = *($0 + [4])
	$26 = ($24 - $25)
	$23 = *($2 + [16])
	if ( ((uint_32)$23 <= (uint_32)$26) ){ goto $label$2 }
	CALL $204($0, ($23 - $26))
	$24 = *(($0 + [4]))
	$25 = *($0)
	goto $label$1 
	
.LABEL $label$2
	if ( ((uint_32)$23 >= (uint_32)$26) ){ goto $label$1 }
	$24 = ($25 + $23)
	*(($0 + [4])) = $24
	
.LABEL $label$1
	*($2 + [4]) = $25
	*($2) = $25
	*($2 + [8]) = $24
	*($2 + [16]) = $2
	*($2 + [28]) = $3
	*($2 + [24]) = $1
	*($2 + [32]) = $4
	*($2 + [36]) = $5
	*($2 + [40]) = $6
	*($2 + [44]) = $7
	*($2 + [48]) = $8
	*($2 + [52]) = $9
	*($2 + [56]) = $10
	*($2 + [60]) = $11
	*($2 + [64]) = $12
	*($2 + [68]) = $13
	*($2 + [72]) = $14
	*($2 + [76]) = $15
	*($2 + [80]) = $16
	*($2 + [84]) = $17
	*($2 + [88]) = $18
	*($2 + [92]) = $19
	*($2 + [96]) = $20
	*($2 + [104]) = $21
	*($2 + [100]) = $22
	CALL $393(($2 + [24]), ($2 + [16]))
	$global$0 = ($2 + [112])
}

void .FUNC $392 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$1 = (*($2) + [16])
	*(($2 = *($1))) = $1
	$4 = *($3)
	$3 = *($0 + [8])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$2
	$4 = *($3)
	$3 = *($0 + [12])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$4
	$4 = *($3)
	$3 = *($0 + [16])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$6 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$6
	$4 = *($3)
	$3 = *($0 + [20])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$7 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$8 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$8
	$1 = ($1 + [1])
	*($2) = $1
	$4 = *($3)
	$3 = *($0 + [28])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$9:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$9 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$10 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$10
	$4 = *($3)
	$3 = *($0 + [32])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$11:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$11 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$12 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$12
	$4 = *($3)
	$3 = *($0 + [36])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$13:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$13 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$14 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$14
	$4 = *($3)
	$3 = *($0 + [40])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$15:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$15 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$16 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$16
	$3 = *($0)
	$0 = *($0 + [44])
	$5 = (CASTING uint_64)(uint_32 ( *($0 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$17:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$17 }
	*($2) = $1
	$0 = *($0)
	$0 = ( *(($0 + [4])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	if ( ($0 == 0) ){ goto $label$18 }
	$1 = ($0 + $1)
	*($2) = $1
	
.LABEL $label$18
	*($2) = ($1 + [144])
}

void .FUNC $393 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $347(*($1), *($0 + [8]))
	CALL $347(*($1), *($0 + [12]))
	CALL $347(*($1), *($0 + [16]))
	CALL $347(*($1), *($0 + [20]))
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	CALL $347(*($1), *($0 + [28]))
	CALL $347(*($1), *($0 + [32]))
	CALL $347(*($1), *($0 + [36]))
	CALL $347(*($1), *($0 + [40]))
	CALL $347(*($1), *($0 + [44]))
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [52])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [56])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [60])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [64])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [68])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [72])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$17
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [76])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$18
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$19
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [80])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$20 }
	CALL eosio_assert([0], [15287])
	$1 = *(($0 + [4]))
	
.LABEL $label$20
	CALL memcpy($1, $4, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = *($4 + [8])
	if ( ((int_32)(*(($0 + [8])) - $1) > (int_32)[7]) ){ goto $label$21 }
	CALL eosio_assert([0], [15287])
	$1 = *(($0 + [4]))
	
.LABEL $label$21
	CALL memcpy($1, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $394 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [48])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $6, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*(($3 + [56])) = *($2 + [8])
	*($6) = (*($6) + [8])
	$5 = *($0)
	$0 = ($5 + [64])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((uint_32)(*($6 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$4 = *(($6 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($6 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($6 + [8])) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [72])) = *($2 + [8])
	*($4) = (*($4) + [8])
	$0 = ($5 + [80])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((uint_32)(*($6 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$4 = *(($6 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($6 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($6 + [8])) - $0) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$0 = *($4)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [88])) = *($2 + [8])
	*($4) = (*($4) + [8])
	CALL $295(*($1), ($5 + [96]))
	$global$0 = ($2 + [16])
}

void .FUNC $395 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [40])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $6, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*(($3 + [48])) = *($2 + [8])
	*($6) = (*($6) + [8])
	$0 = *($0)
	$4 = ($0 + [56])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$6 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $6, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$4 = *($6)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*(($0 + [64])) = *($2 + [8])
	*($6) = (*($6) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $396 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [15945])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = ($5 - $7)
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $397($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + $2)
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [1])
	$2 = (*($6) + [1])
	*($6) = $2
	$7 = ($7 + [1])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $397 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $7($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $82($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $9($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $365 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [24])) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$1 = ($1 + [48])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($1, $4, [4])
	*(($1 = ($0 + [4]))) = (*($1) + [4])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $87 (int_32 $0)
{
	int_32 $1
	$1 = int_32($0 >> [31])
	return ((int_32)($0 + $1) ^ (int_32)$1)
}

int_32 .FUNC $367 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [4])
	$4 = ($0 + [8])
	$5 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$1
	CALL memcpy($5, $1, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [8])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [16])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [24]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [32])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [40]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [48])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$7
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [56]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$8
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [64])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$9
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [72]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$10
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [80])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$11
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [88]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$12
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [96])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$13
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [104]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$14
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [112])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$15
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [120]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$16
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [128])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$17
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [136]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$18
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [144])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$19
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [152])
	if ( ((int_32)(*($4) - $5) > (int_32)[3]) ){ goto $label$20 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$20
	CALL memcpy($5, $6, [4])
	$5 = (*($3) + [4])
	*($3) = $5
	$6 = ($1 + [160])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$21 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$21
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [168])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$22 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$22
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [176])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$23 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$23
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [184])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$24 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$24
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$1 = ($1 + [192])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$25 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$25
	CALL memcpy($5, $1, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $366 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [4])
	$4 = ($0 + [8])
	$5 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$1
	CALL memcpy($1, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [8])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$2
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [16])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [24])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [32])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [40])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [48])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$7
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [56])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [64])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$9
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$10
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [72])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [80])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$11
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$12
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [88])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [96])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$13
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$14
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [104])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [112])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$15
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$16
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [120])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [128])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$17
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$18
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [136])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [144])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$19
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [152])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[3]) ){ goto $label$20 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$20
	CALL memcpy($6, $5, [4])
	$5 = (*($3) + [4])
	*($3) = $5
	$6 = ($1 + [160])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$21 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$21
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [168])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$22 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$22
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [176])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$23 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$23
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [184])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$24 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$24
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$1 = ($1 + [192])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$25 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$25
	CALL memcpy($1, $5, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_64 .FUNC $69 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [16])
	$global$0 = $3
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$4 = CALL $15([11159])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$6 }
	*($3) = ($4 << [1])
	$5 = ($3 | [1])
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $7($6)
	*($3) = ($6 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $4
	
.LABEL $label$5
	CALL memcpy($5, [11159], $4)
	
.LABEL $label$4
	*(($5 + $4)) = [0]
	*($3 + [12]) = [0]
	$4 = *($0 + [8])
	$5 = *($0)
	$6 = *(CALL $4())
	*(CALL $4()) = [0]
	$4 = ( $4 ? ($0 + [1]) : ($5 & [1]) )
	$7 = CALL $30($4, ($3 + [12]), $2)
	$0 = CALL $4()
	$5 = *($0)
	*($0) = $6
	if ( ((int_32)$5 == (int_32)[34]) ){ goto $label$2 }
	$0 = *($3 + [12])
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($0 - $4)
	
.LABEL $label$7
	if ( ((*($3) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*($3 + [8]))
	
.LABEL $label$8
	$global$0 = ($3 + [16])
	return $7
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $67($3)
	
.LABEL $label$1
	CALL $68($3)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $68 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $108($1, $0, [11552])
	CALL $75()
	(unreachable)
}

void .FUNC $248 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [148]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15633])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15678])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [15728])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [152]))
	$9 = *($1 + [156])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5915351331303849984, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $249 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [128]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15633])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15678])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [15728])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [132]))
}

void .FUNC $246 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15633])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15678])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [15728])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [48]))
	$9 = *($1 + [52])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3107686822742310912, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$9 = *(($1 + [56]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3107686822742310911, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

int_32 .FUNC $247 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([160])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [148]) = $0
	CALL $364(($3 + [32]), $5)
	*($5 + [156]) = [-1]
	*($5 + [152]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $146(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $244 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15633])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15678])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [15728])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [48]))
	$9 = *($1 + [52])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4138934702985707520, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

int_32 .FUNC $245 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([64])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [44]) = $0
	CALL $381(($3 + [32]), $5)
	*($5 + [48]) = $1
	*($5 + [52 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $222(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $242 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [16]) = [14232]
	*($3 + [20]) = CALL $15([14232])
	*($3 + [8]) = *($3 + [16])
	CALL $99(($3 + [24]), ($3 + [8]))
	$4 = ($1 + [768])
	$6 = *(($1 + [796]))
	$5 = *(($1 + [792]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$11:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)-4348567756520030208) ){ goto $label$10 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$9 }
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [14937])
	$7 = *($8 + [8])
	if ( ((int_32)$7 > (int_32)[0]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$7 = CALL db_find_i64(*($4), *(($1 + [776])), (int_64)7235159550573564928, (int_64)-4348567756520030208)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$6 }
	$8 = CALL $192($4, $7)
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$8
	$7 = *($8 + [8])
	if ( ((int_32)$7 <= (int_32)[0]) ){ goto $label$6 }
	
.LABEL $label$7
	$9 = (CASTING int_64)(int_32 $7)
	if ( ((int_64)*($2) <= (int_64)$9) ){ goto $label$1 }
	$7 = CALL $15([12244])
	if ( ($7 <= [8]) ){ goto $label$5 }
	CALL eosio_assert([0], [14622])
	goto $label$4 
	
.LABEL $label$6
	*($0) = *($2)
	*(($0 + [8])) = *(($2 + [8]))
	$global$0 = ($3 + [32])
	return 
	
.LABEL $label$5
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$10 = (int_64)0
	
.LOOP $label$12:
	$6 = *(($7 + [12243]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$13 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$13
	$10 = ((int_64)((int_64)$10 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$12 }
	$11 = ((int_64)((int_64)$10 << (int_64)8) | (int_64)4)
	if ( (uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$2 }
	CALL eosio_assert([0], [14720])
	goto $label$2 
	
.LABEL $label$3
	$11 = (int_64)4
	
.LABEL $label$2
	$10 = (uint_64)$11 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$12 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$17 }
	$10 = $12
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$17
	$10 = $12
	
.LOOP $label$18:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$15 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $6 ){ goto $label$18 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	CALL eosio_assert([0], [14769])
	
.LABEL $label$14
	*($2 + [8]) = $11
	*($2) = $9
	
.LABEL $label$1
	*($0) = *($2)
	*(($0 + [8])) = *(($2 + [8]))
	$global$0 = ($3 + [32])
}

int_32 .FUNC $243 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([56])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [44]) = $0
	CALL $370(($3 + [32]), $5)
	*($5 + [52]) = [-1]
	*($5 + [48]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $180(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $240 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $6) / (int_32)[40])
	$8 = ($7 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$9 = [107374182]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[40])
	if ( ((uint_32)$6 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($6 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $7(((int_32)$9 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	*(($7 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($2)
	*($7 + [8]) = *($3)
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$2 = CALL $7([16])
	*($7 + [16]) = $2
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$8 = ($2 + [16])
	*($3) = $8
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($7 + [20])) = $8
	$2 = *($4 + [96])
	$1 = ( *(($4 + [100])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($1 + [96])
	$10 = (CASTING uint_64)(uint_32 $1)
	$11 = ($6 + ((int_32)$9 * (int_32)[40]))
	$1 = ($7 + [32])
	$9 = ($7 + [28])
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $204($9, $2)
	$1 = *($1)
	$2 = *($9)
	goto $label$6 
	
.LABEL $label$7
	$1 = [0]
	$2 = [0]
	
.LABEL $label$6
	*($5 + [4]) = $2
	*($5) = $2
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	$12 = ($7 + [40])
	CALL $388(($5 + [24]), ($5 + [16]))
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$9 }
	$13 = ($2 - $8)
	$9 = [0]
	
.LOOP $label$10:
	$4 = ($8 + $9)
	*((($2 = ($7 + $9)) + [-32])) = *(($4 + [-32]))
	*(($2 + [-40])) = *(($4 + [-40]))
	*(($1 = ($2 + [-24]))) = (int_64)0
	*(($6 = ($2 + [-16]))) = [0]
	$3 = ($4 + [-24])
	*($1) = *($3)
	$1 = ($4 + [-16])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$6 = ($4 + [-12])
	*($1) = *($6)
	*($3) = (int_64)0
	$4 = ($4 + [-4])
	*($2) = *($4)
	*($4) = [0]
	*($6) = (int_64)0
	$9 = ($9 + [-40])
	if ( ((int_32)$13 != (int_32)$9) ){ goto $label$10 }
	$7 = ($7 + $9)
	$2 = *(($0 + [4]))
	$1 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$1 = $2
	
.LABEL $label$8
	*($0) = $7
	*(($0 + [4])) = $12
	*(($0 + [8])) = $11
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	$4 = *(($2 + [-12]))
	if ( ($4 == 0) ){ goto $label$13 }
	*(($2 + [-8])) = $4
	CALL $9($4)
	
.LABEL $label$13
	$4 = ($2 + [-40])
	$9 = *(($2 + [-24]))
	if ( ($9 == 0) ){ goto $label$14 }
	*(($2 + [-20])) = $9
	CALL $9($9)
	
.LABEL $label$14
	$2 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $9($1)
	
.LABEL $label$15
	$global$0 = ($5 + [32])
	(unreachable)
}

int_32 .FUNC $62 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0)
	$5 = ($4 & [1])
	if ( $5 ){ goto $label$5 }
	$4 = uint_32($4 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = [10]
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$6
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$10 }
	CALL $55($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	goto $label$9 
	
.LABEL $label$10
	if ( ($3 == 0) ){ goto $label$9 }
	if ( $5 ){ goto $label$8 }
	$5 = ($0 + [1])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$7
	CALL memmove($6, $2, $3)
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL memmove(($6 + $3), $6, $1)
	CALL memmove($6, ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) ), $3)
	
.LABEL $label$1
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($3 << [1])
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$11
	*($0 + [4]) = $3
	*(($5 + $3)) = [0]
	(unreachable)
	return $0
}

void .FUNC $84 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL ripemd160($1, $2, ($3 + [16]))
	$4 = (int_64)0
	$1 = [16]
	$2 = [0]
	$5 = (int_64)0
	
.LOOP $label$2:
	$6 = (($3 + [16]) + $2)
	if ( ($1 <= [2]) ){ goto $label$3 }
	$4 = ((int_64)$4 | (int_64)*($6))
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)(uint_64)$4 >> (uint_64)(int_64)56))
	$1 = ($1 + [-1])
	$4 = ((int_64)$4 << (int_64)8)
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[20]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [8335])
	
.LABEL $label$4
	*($0 + [8]) = $5
	*($0) = ((int_64)$4 | (int_64)*($6))
	$1 = [16]
	$0 = ($0 + [16])
	$4 = (int_64)0
	$5 = (int_64)0
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[20]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$1 == (int_32)[16]) ){ goto $label$5 }
	if ( ($1 <= [2]) ){ goto $label$6 }
	CALL __ashlti3($3, $4, $5, (($1 << [3]) + [-8]))
	$5 = *(($3 + [8]))
	$4 = *($3)
	
.LABEL $label$6
	*($0) = $4
	*($0 + [8]) = $5
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

int_32 .FUNC $199 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	$5 = CALL $7([144])
	$2 = CALL $142($5)
	*($5 + [128]) = $0
	CALL $361(($3 + [32]), $2)
	*($5 + [132]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $144(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $83 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL sha256($1, $2, ($3 + [16]))
	$4 = (int_64)0
	$1 = [16]
	$2 = [0]
	$5 = (int_64)0
	
.LOOP $label$2:
	$6 = (($3 + [16]) + $2)
	if ( ($1 <= [2]) ){ goto $label$3 }
	$4 = ((int_64)$4 | (int_64)*($6))
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)(uint_64)$4 >> (uint_64)(int_64)56))
	$1 = ($1 + [-1])
	$4 = ((int_64)$4 << (int_64)8)
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [8335])
	
.LABEL $label$4
	*($0 + [8]) = $5
	*($0) = ((int_64)$4 | (int_64)*($6))
	$1 = [16]
	$0 = ($0 + [16])
	$4 = (int_64)0
	$5 = (int_64)0
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$1 == (int_32)[16]) ){ goto $label$5 }
	if ( ($1 <= [2]) ){ goto $label$6 }
	CALL __ashlti3($3, $4, $5, (($1 << [3]) + [-8]))
	$5 = *(($3 + [8]))
	$4 = *($3)
	
.LABEL $label$6
	*($0) = $4
	*($0 + [8]) = $5
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $82 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $149 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_64 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_64 $29
	$2 = ($global$0 - [928])
	$global$0 = $2
	if ( ((int_32)*(($0 + [756])) == (int_32)[2]) ){ goto $label$1 }
	CALL eosio_assert([0], [13177])
	
.LABEL $label$1
	$3 = CALL db_lowerbound_i64(*($0 + [400]), *(($0 + [408])), (int_64)-4994365207729012736, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$4 = ($0 + [400])
	$5 = CALL $174($4, $3)
	if ( (int_64)($1 == 0) ){ goto $label$2 }
	$6 = ($0 + [144])
	$7 = ($0 + [120])
	$8 = ($0 + [304])
	$9 = ($0 + [280])
	$10 = ($0 + [360])
	$11 = ($0 + [388])
	$12 = ($0 + [384])
	$13 = ($0 + [368])
	$14 = ($0 + [912])
	$15 = ($0 + [904])
	$16 = ($0 + [616])
	$17 = ($0 + [608])
	$18 = ($0 + [312])
	$19 = ($0 + [308])
	$20 = ($0 + [152])
	$21 = ($0 + [148])
	
.LOOP $label$3:
	*((($2 + [832]) + [48])) = *(($5 + [48]))
	*((($2 + [832]) + [40])) = *(($5 + [40]))
	*(($22 = (($2 + [832]) + [32]))) = *(($5 + [32]))
	*(($23 = (($2 + [832]) + [24]))) = *(($5 + [24]))
	*(($24 = (($2 + [832]) + [16]))) = *(($5 + [16]))
	*((($2 + [832]) + [8])) = *(($5 + [8]))
	*($2 + [832]) = *($5)
	$25 = *($2 + [832])
	$27 = *($11)
	$26 = *($12)
	if ( ((int_32)$26 == (int_32)$27) ){ goto $label$7 }
	
.LOOP $label$9:
	$3 = ($27 + [-24])
	$28 = *($3)
	if ( ((int_64)*($28) == (int_64)$25) ){ goto $label$8 }
	$27 = $3
	if ( ((int_32)$26 != (int_32)$3) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$26 == (int_32)$27) ){ goto $label$7 }
	if ( ((int_32)*($28 + [200]) != (int_32)$10) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$3 = CALL db_find_i64(*($10), *($13), (int_64)-6031319021931067904, $25)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$5 }
	$28 = CALL $175($10, $3)
	if ( ((int_32)*($28 + [200]) == (int_32)$10) ){ goto $label$4 }
	
.LABEL $label$6
	CALL eosio_assert([0], [14937])
	goto $label$4 
	
.LABEL $label$5
	$28 = [0]
	
.LABEL $label$4
	*($2 + [828]) = $28
	*($2 + [824]) = $10
	$25 = ((int_64)*($22) + (int_64)-1)
	if ( ((uint_64)$25 > (uint_64)(int_64)3) ){ goto $label$17 }
	goto $label$26 
	
.LABEL $label$26
	if ( ((int_64)*($23) == (int_64)*($14)) ){ goto $label$27 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$27
	$25 = ((int_64)*($15) + (int_64)*($24))
	*($15) = $25
	if ( ((int_64)$25 <= (int_64)-4611686018427387904) ){ goto $label$23 }
	if ( ((int_64)$25 >= (int_64)4611686018427387904) ){ goto $label$22 }
	goto $label$14 
	
.LABEL $label$25
	if ( ($28 == 0) ){ goto $label$17 }
	CALL memcpy(($2 + [624]), $28, [200])
	CALL memcpy(($2 + [8]), ($2 + [624]), [200])
	CALL $139($0, ($2 + [8]), [0])
	$25 = *($2 + [824])
	$3 = (CASTING uint_32)(uint_64 (uint_64)$25 >> (uint_64)(int_64)32)
	if ( $3) ){ goto $label$28 }
	CALL eosio_assert([0], [15569])
	CALL eosio_assert([0], [15603])
	
.LABEL $label$28
	$27 = CALL db_next_i64(*($3 + [204]), ($2 + [896]))
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$29 }
	CALL $175((CASTING uint_32)(uint_64 $25), $27)
	
.LABEL $label$29
	CALL $176($10, $3)
	if ( ($5 == 0) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$24
	if ( ($28 == 0) ){ goto $label$17 }
	$25 = *($28 + [32])
	if ( ((int_64)*($23) == (int_64)*(($28 + [40]))) ){ goto $label$30 }
	CALL eosio_assert([0], [15344])
	
.LABEL $label$30
	$25 = (int_64)
	if ( ((int_64)$25($25 - *($24))) <= (int_64)-4611686018427387904) ){ goto $label$21 }
	if ( ((int_64)$25 >= (int_64)4611686018427387904) ){ goto $label$19 }
	if ( ((int_64)$25 < (int_64)500000) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$23
	CALL eosio_assert([0], [15059])
	if ( ((int_64)*($15) < (int_64)4611686018427387904) ){ goto $label$14 }
	
.LABEL $label$22
	CALL eosio_assert([0], [15078])
	if ( ($5 == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$21
	CALL eosio_assert([0], [15392])
	
.LABEL $label$20
	CALL memcpy(($2 + [408]), *($2 + [828]), [200])
	CALL memcpy(($2 + [208]), ($2 + [408]), [200])
	CALL $139($0, ($2 + [208]), [0])
	$25 = *($2 + [824])
	$3 = (CASTING uint_32)(uint_64 (uint_64)$25 >> (uint_64)(int_64)32)
	if ( $3) ){ goto $label$31 }
	CALL eosio_assert([0], [15569])
	CALL eosio_assert([0], [15603])
	
.LABEL $label$31
	$27 = CALL db_next_i64(*($3 + [204]), ($2 + [896]))
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$32 }
	CALL $175((CASTING uint_32)(uint_64 $25), $27)
	
.LABEL $label$32
	CALL $176($10, $3)
	if ( ($5 == 0) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$19
	CALL eosio_assert([0], [15414])
	
.LABEL $label$18
	$25 = *($0)
	$3 = *($2 + [828])
	*($2 + [896]) = ($2 + [832])
	if ( $3 ){ goto $label$33 }
	CALL eosio_assert([0], [15096])
	
.LABEL $label$33
	CALL $177($10, $3, $25, ($2 + [896]))
	if ( ((int_64)*($23) == (int_64)*($16)) ){ goto $label$34 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$34
	$25 = ((int_64)*($17) + (int_64)*($24))
	*($17) = $25
	if ( ((int_64)$25 > (int_64)-4611686018427387904) ){ goto $label$35 }
	CALL eosio_assert([0], [15059])
	$25 = *($17)
	
.LABEL $label$35
	if ( ((int_64)$25 < (int_64)4611686018427387904) ){ goto $label$36 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$36
	$25 = *($0)
	*($2 + [608]) = $0
	*(($28 = (($2 + [608]) + [8]))) = ($2 + [832])
	*($2 + [612]) = ($2 + [824])
	*($2 + [920]) = $25
	if ( ((int_64)CALL current_receiver() == (int_64)*($9)) ){ goto $label$37 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$37
	*($2 + [896]) = $9
	*(($26 = (($2 + [896]) + [8]))) = ($2 + [920])
	*($2 + [900]) = ($2 + [608])
	$3 = CALL $7([144])
	CALL $142($3)
	*($3 + [128]) = $9
	CALL $178(($2 + [896]), $3)
	*($2 + [912]) = $3
	$25 = *($3)
	*($2 + [896]) = $25
	$22 = *($3 + [132])
	*($2 + [892]) = $22
	$27 = *($19)
	if ( ((uint_32)$27 >= (uint_32)*($18)) ){ goto $label$40 }
	*($27 + [8]) = $25
	*($27 + [16]) = $22
	*($2 + [912]) = [0]
	*($27) = $3
	*($19) = ($27 + [24])
	$3 = *($2 + [912])
	*($2 + [912]) = [0]
	if ( $3 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	CALL $144($8, ($2 + [912]), ($2 + [896]), ($2 + [892]))
	$3 = *($2 + [912])
	*($2 + [912]) = [0]
	if ( ($3 == 0) ){ goto $label$38 }
	
.LABEL $label$39
	CALL $9($3)
	
.LABEL $label$38
	$25 = *($0)
	*($2 + [608]) = $0
	*($28) = ($2 + [832])
	*($2 + [612]) = ($2 + [824])
	*($2 + [920]) = $25
	if ( ((int_64)CALL current_receiver() == (int_64)*($7)) ){ goto $label$41 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$41
	*($2 + [896]) = $7
	*($26) = ($2 + [920])
	*($2 + [900]) = ($2 + [608])
	*(($3 = CALL $7([56])) + [24]) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [44]) = $7
	CALL $179(($2 + [896]), $3)
	*($2 + [912]) = $3
	$25 = *($3)
	*($2 + [896]) = $25
	$28 = *($3 + [48])
	*($2 + [892]) = $28
	$27 = *($21)
	if ( ((uint_32)$27 >= (uint_32)*($20)) ){ goto $label$43 }
	*($27 + [8]) = $25
	*($27 + [16]) = $28
	*($2 + [912]) = [0]
	*($27) = $3
	*($21) = ($27 + [24])
	$3 = *($2 + [912])
	*($2 + [912]) = [0]
	if ( $3 ){ goto $label$42 }
	goto $label$17 
	
.LABEL $label$43
	CALL $180($6, ($2 + [912]), ($2 + [896]), ($2 + [892]))
	$3 = *($2 + [912])
	*($2 + [912]) = [0]
	if ( ($3 == 0) ){ goto $label$17 }
	
.LABEL $label$42
	CALL $9($3)
	
.LABEL $label$17
	if ( $5 ){ goto $label$15 }
	
.LABEL $label$16
	CALL eosio_assert([0], [15569])
	CALL eosio_assert([0], [15603])
	
.LABEL $label$15
	$3 = [0]
	$27 = CALL db_next_i64(*($5 + [56]), ($2 + [896]))
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$44 }
	$3 = CALL $174($4, $27)
	
.LABEL $label$44
	CALL $181($4, $5)
	goto $label$11 
	
.LABEL $label$14
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$13
	CALL eosio_assert([0], [15603])
	
.LABEL $label$12
	$3 = [0]
	$27 = CALL db_next_i64(*($5 + [56]), ($2 + [896]))
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$11 }
	$1 = ((int_64)$1 + (int_64)-1)
	$3 = CALL $174($4, $27)
	if ( ($3 == 0) ){ goto $label$2 }
	goto $label$10 
	
.LABEL $label$11
	$1 = ((int_64)$1 + (int_64)-1)
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$10
	$5 = $3
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((uint_64)$1 <= (uint_64)(int_64)1) ){ goto $label$45 }
	CALL $182($0)
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$49 }
	CALL eosio_assert([0], [14622])
	goto $label$48 
	
.LABEL $label$49
	if ( ($3 == 0) ){ goto $label$47 }
	
.LABEL $label$48
	$25 = (int_64)0
	
.LOOP $label$50:
	$27 = *(($3 + [12243]))
	if ( ((($27 + [-65]) & [255]) <= [26]) ){ goto $label$51 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$51
	$25 = ((int_64)((int_64)$25 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $27) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$50 }
	$29 = ((int_64)((int_64)$25 << (int_64)8) | (int_64)4)
	goto $label$46 
	
.LABEL $label$47
	$29 = (int_64)4
	
.LABEL $label$46
	$25 = (uint_64)$29 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$54:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$53 }
	$1 = (uint_64)$25 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$25 & (int_64)65280) == (int_64)0) ){ goto $label$55 }
	$25 = $1
	$27 = $3
	$3 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[6]) ){ goto $label$54 }
	goto $label$52 
	
.LABEL $label$55
	$25 = $1
	
.LOOP $label$56:
	if ( ((int_64)((int_64)$25 & (int_64)65280) != (int_64)0) ){ goto $label$53 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8)
	$27 = ((int_32)$3 < (int_32)[6])
	$28 = ($3 + [1])
	$3 = $28
	if ( $27 ){ goto $label$56 }
	$3 = ($28 + [1])
	if ( ((int_32)$28 < (int_32)[6]) ){ goto $label$54 }
	goto $label$52 
	
.LABEL $label$53
	CALL eosio_assert([0], [14769])
	
.LABEL $label$52
	*(($0 + [600])) = $29
	*(($0 + [592])) = (int_64)0
	*(($0 + [1000])) = (int_64)0
	*(($0 + [756])) = [7]
	
.LABEL $label$45
	$global$0 = ($2 + [928])
	(CASTING uint_32)(uint_64 $25)
}

void .FUNC $81 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $2
	*($4 + [8]) = $3
	*($4 + [4]) = $1
	*($4) = $0
	CALL $50(*([0] + [11780]), [8300], $4)
	CALL $80([0])
	CALL abort()
	(unreachable)
}

void .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *(($6 + [256]))
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = ($6 + [240])
	$9 = CALL db_lowerbound_i64(*($8), *(($6 + [248])), (int_64)-5915351331303849984, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $247($8, $9)
	*($3 + [12]) = [0]
	*($3 + [8]) = $8
	$7 = *(*(CALL $362(($3 + [8])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [256])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [15781])
	$7 = *(($6 + [256]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [256])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	$8 = *($5 + [4])
	*($1 + [8]) = *($8)
	*(($1 + [24])) = *(($8 + [24]))
	*($1 + [16]) = *($8 + [16])
	$8 = *($5 + [4])
	*($1 + [32]) = *($8 + [32])
	*(($1 + [40])) = *(($8 + [40]))
	$8 = *($5 + [4])
	$7 = *($8 + [48])
	$10 = *(($8 + [56]))
	$9 = *($5 + [8])
	if ( ((int_64)*($9 + [8]) == (int_64)$10) ){ goto $label$5 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$5
	$7 = ((int_64)*($9) + (int_64)$7)
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$7 }
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [15078])
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [15059])
	
.LABEL $label$6
	*($1 + [48]) = $7
	*(($1 + [56])) = $10
	$8 = *(($5 + [8]))
	*($1 + [64]) = *($8)
	*(($1 + [72])) = *(($8 + [8]))
	$8 = ($5 + [4])
	$9 = *($8)
	*($1 + [80]) = *($9 + [112])
	*(($1 + [88])) = *(($9 + [120]))
	*($1 + [96]) = *(*($5 + [12]))
	*($1 + [100]) = *(*($8) + [152])
	*($1 + [104]) = ((int_64)CALL $86() / (int_64)1000000)
	*($1 + [120]) = *(($6 + [488]))
	*($1 + [136]) = *($6 + [480])
	$5 = *($8)
	*($1 + [112]) = *($5 + [168])
	*($1 + [128]) = *($5 + [176])
	*($1 + [144]) = ((int_64)CALL $86() / (int_64)1000000)
	$6 = $2
	$5 = ($6 + [-144])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	CALL $363(($3 + [8]), $1)
	$7 = *($1)
	*($1 + [152]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915351331303849984, *(*($0 + [8])), $7, $5, [144])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$8 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$11 = *($1)
	*($3 + [24]) = *(($1 + [136]))
	*($1 + [156]) = CALL db_idx64_store($7, (int_64)-5915351331303849984, $10, $11, ($3 + [24]))
	$global$0 = ($3 + [32])
}

int_32 .FUNC $64 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$3 }
	$5 = uint_32($3 >> [1])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0 + [4])
	if ( ($5 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $4 ){ goto $label$6 }
	$6 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$6 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $4 ? $2 : ($4 <= $2) )
	$4 = ($5 - $1)
	$4 = ($4 - $2)
	if ( ($4 == 0) ){ goto $label$7 }
	$1 = ($6 + $1)
	CALL memmove($1, ($1 + $2), $4)
	$3 = *($0)
	
.LABEL $label$7
	$2 = ($5 - $2)
	if ( ($3 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($6 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $147 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	$2 = CALL $52($4, $2)
	CALL $148($0, $1, $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	CALL $9(*($2 + [8]))
	
.LABEL $label$1
	$global$0 = ($4 + [16])
}

void .FUNC $146 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15633])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15678])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [15728])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [32]))
}

int_32 .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [28]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [24])
	CALL $358(($3 + [32]), ($3 + [24]))
	*($5 + [32]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $272(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *(($6 + [296]))
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = ($6 + [280])
	$9 = CALL db_lowerbound_i64(*($8), *(($6 + [288])), (int_64)-8463262820711136768, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $199($8, $9)
	*($3 + [4]) = [0]
	*($3) = $8
	$7 = *(*(CALL $359($3) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [296])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [15781])
	$7 = *(($6 + [296]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [296])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	$8 = *($5 + [4])
	*($1 + [8]) = *($8)
	*($1 + [16]) = *($8 + [8])
	*(($1 + [32])) = *(($8 + [24]))
	*($1 + [24]) = *($8 + [16])
	$8 = *($5 + [4])
	*($1 + [40]) = *($8 + [32])
	*(($1 + [48])) = *(($8 + [40]))
	$8 = *($5 + [4])
	*($1 + [56]) = *($8 + [48])
	*(($1 + [64])) = *(($8 + [56]))
	$8 = *($5 + [4])
	*($1 + [72]) = *($8 + [64])
	*(($1 + [80])) = *(($8 + [72]))
	$8 = *($5 + [4])
	*($1 + [88]) = *($8 + [80])
	*(($1 + [96])) = *(($8 + [88]))
	*($1 + [104]) = *(*($5 + [4]) + [168])
	*($1 + [112]) = *(($6 + [488]))
	*($1 + [120]) = (int_64)2
	$8 = $2
	$5 = ($8 + [-128])
	$global$0 = $5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = $8
	CALL $360($3, $1)
	$7 = *($1)
	*($1 + [132]) = CALL db_store_i64(*($4 + [8]), (int_64)-8463262820711136768, *(*($0 + [8])), $7, $5, [128])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [16])
}

int_32 .FUNC $142 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$1 = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [8]) = (int_64)0
	$2 = CALL $15([12244])
	if ( ($2 <= [8]) ){ goto $label$3 }
	CALL eosio_assert([0], [14622])
	goto $label$2 
	
.LABEL $label$3
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = (int_64)0
	
.LOOP $label$4:
	$3 = *(($2 + [12243]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$5 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$5
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$4 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$1
	*($0 + [24]) = (int_64)0
	*(($0 + [32])) = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$1 = $4
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$10 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [14769])
	
.LABEL $label$6
	$2 = CALL $15([12244])
	if ( ($2 <= [8]) ){ goto $label$14 }
	CALL eosio_assert([0], [14622])
	goto $label$13 
	
.LABEL $label$14
	if ( ($2 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$1 = (int_64)0
	
.LOOP $label$15:
	$3 = *(($2 + [12243]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$16 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$16
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$15 }
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$11 
	
.LABEL $label$12
	$1 = (int_64)4
	
.LABEL $label$11
	*($0 + [40]) = (int_64)0
	*(($0 + [48])) = $1
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$20
	$1 = $4
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$21 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	CALL eosio_assert([0], [14769])
	
.LABEL $label$17
	$2 = CALL $15([12285])
	if ( ($2 <= [8]) ){ goto $label$25 }
	CALL eosio_assert([0], [14622])
	goto $label$24 
	
.LABEL $label$25
	if ( ($2 == 0) ){ goto $label$23 }
	
.LABEL $label$24
	$1 = (int_64)0
	
.LOOP $label$26:
	$3 = *(($2 + [12284]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$27 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$27
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$26 }
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$22 
	
.LABEL $label$23
	$1 = (int_64)4
	
.LABEL $label$22
	*($0 + [56]) = (int_64)0
	*(($0 + [64])) = $1
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$30:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$29 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$31 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$31
	$1 = $4
	
.LOOP $label$32:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$29 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$32 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$29
	CALL eosio_assert([0], [14769])
	
.LABEL $label$28
	$2 = CALL $15([12244])
	if ( ($2 <= [8]) ){ goto $label$36 }
	CALL eosio_assert([0], [14622])
	goto $label$35 
	
.LABEL $label$36
	if ( ($2 == 0) ){ goto $label$34 }
	
.LABEL $label$35
	$1 = (int_64)0
	
.LOOP $label$37:
	$3 = *(($2 + [12243]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$38 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$38
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$37 }
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$33 
	
.LABEL $label$34
	$1 = (int_64)4
	
.LABEL $label$33
	*($0 + [72]) = (int_64)0
	*(($0 + [80])) = $1
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$41:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$40 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$42 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$42
	$1 = $4
	
.LOOP $label$43:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$40 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$43 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$40
	CALL eosio_assert([0], [14769])
	
.LABEL $label$39
	$2 = CALL $15([12244])
	if ( ($2 <= [8]) ){ goto $label$47 }
	CALL eosio_assert([0], [14622])
	goto $label$46 
	
.LABEL $label$47
	if ( ($2 == 0) ){ goto $label$45 }
	
.LABEL $label$46
	$1 = (int_64)0
	
.LOOP $label$48:
	$3 = *(($2 + [12243]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$49 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$49
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$48 }
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$44 
	
.LABEL $label$45
	$1 = (int_64)4
	
.LABEL $label$44
	*($0 + [88]) = (int_64)0
	*(($0 + [96])) = $1
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$51:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$50 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$53 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$51 }
	goto $label$52 
	
.LABEL $label$53
	$1 = $4
	
.LOOP $label$54:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$50 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$54 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$51 }
	
.LABEL $label$52
	*($0 + [112]) = (int_64)0
	*($0 + [104]) = (int_64)0
	return $0
	
.LABEL $label$50
	CALL eosio_assert([0], [14769])
	*($0 + [112]) = (int_64)0
	*($0 + [104]) = (int_64)0
	return $0
}

int_32 .FUNC $278 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_32 $19
	$3 = ($global$0 - [1904])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	CALL memset(($4 + [1088]), [0], [272])
	*(($4 + [1112])) = (int_64)0
	*(($4 + [1120])) = (int_64)0
	*(($4 + [1136])) = (int_64)0
	*(($4 + [1144])) = (int_64)0
	*(($4 + [1164])) = (int_64)0
	*(($4 + [1172])) = (int_64)0
	*(($4 + [1188])) = (int_64)0
	*(($4 + [1196])) = (int_64)0
	*(($4 + [1212])) = [0]
	*(($4 + [1224])) = (int_64)0
	*($4 + [1096]) = (int_64)0
	*($4 + [1104]) = (int_64)0
	*($4 + [1128]) = (int_64)0
	*($4 + [1156 align=4]) = (int_64)0
	*($4 + [1180 align=4]) = (int_64)0
	*($4 + [1204 align=4]) = (int_64)0
	*($4 + [1216]) = (int_64)0
	*($4 + [1232]) = (int_64)0
	*(($4 + [1240])) = (int_64)0
	*(($4 + [1256])) = (int_64)0
	*(($4 + [1272])) = (int_64)0
	*(($4 + [1288])) = (int_64)0
	*(($4 + [1304])) = (int_64)0
	*(($4 + [1320])) = (int_64)0
	*(($4 + [1336])) = (int_64)0
	*(($4 + [1352])) = (int_64)0
	*($4 + [1248]) = (int_64)0
	*($4 + [1264]) = (int_64)0
	*($4 + [1280]) = (int_64)0
	*($4 + [1296]) = (int_64)0
	*($4 + [1312]) = (int_64)0
	*($4 + [1328]) = (int_64)0
	*($4 + [1344]) = (int_64)0
	*($4 + [1076]) = $2
	*($4 + [1072]) = $2
	*($4 + [1080]) = ($2 + $7)
	*($4 + [1632]) = ($4 + [1072])
	*($4 + [36]) = (($4 + [1088]) + [8])
	*($4 + [56]) = ($4 + [1152])
	$3 = (($4 + [1088]) + [128])
	*($4 + [80]) = $3
	*($4 + [84]) = (($4 + [1088]) + [144])
	*($4 + [88]) = ($4 + [1248])
	*($4 + [92]) = ($4 + [1264])
	*($4 + [96]) = ($4 + [1280])
	*($4 + [100]) = ($4 + [1296])
	*($4 + [104]) = ($4 + [1312])
	*($4 + [32]) = ($4 + [1088])
	$8 = (($4 + [1088]) + [116])
	*($4 + [76]) = $8
	$9 = (($4 + [1088]) + [104])
	*($4 + [72]) = $9
	$10 = (($4 + [1088]) + [92])
	*($4 + [68]) = $10
	$11 = (($4 + [1088]) + [80])
	*($4 + [64]) = $11
	$12 = (($4 + [1088]) + [68])
	*($4 + [60]) = $12
	$13 = (($4 + [1088]) + [52])
	*($4 + [52]) = $13
	$14 = (($4 + [1088]) + [40])
	*($4 + [48]) = $14
	$15 = (($4 + [1088]) + [28])
	*($4 + [44]) = $15
	$16 = (($4 + [1088]) + [16])
	*($4 + [40]) = $16
	*($4 + [112]) = ($4 + [1344])
	*($4 + [108]) = ($4 + [1328])
	CALL $299(($4 + [32]), ($4 + [1632]))
	$17 = *($4 + [1080])
	*((($4 + [16]) + [8])) = $17
	*(($4 + [8])) = $17
	$18 = *($4 + [1072])
	*($4) = $18
	*($4 + [16]) = $18
	$17 = CALL $123(($4 + [32]), $0, $1, $4)
	*((($4 + [1360]) + [8])) = *($4 + [1096])
	*($4 + [1360]) = *($4 + [1088])
	$16 = CALL $52((($4 + [1360]) + [16]), $16)
	$15 = CALL $52((($4 + [1360]) + [28]), $15)
	$14 = CALL $52((($4 + [1360]) + [40]), $14)
	$13 = CALL $52((($4 + [1360]) + [52]), $13)
	*($4 + [1424]) = *($4 + [1152])
	$12 = CALL $52((($4 + [1360]) + [68]), $12)
	$11 = CALL $52((($4 + [1360]) + [80]), $11)
	$10 = CALL $52((($4 + [1360]) + [92]), $10)
	$9 = CALL $52((($4 + [1360]) + [104]), $9)
	$8 = CALL $52((($4 + [1360]) + [116]), $8)
	$19 = CALL memcpy((($4 + [1360]) + [128]), $3, [144])
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	*((($4 + [1632]) + [8])) = *((($4 + [1360]) + [8]))
	*($4 + [1632]) = *($4 + [1360])
	CALL $52(($4 + [1648]), $16)
	CALL $52(($4 + [1660]), $15)
	CALL $52(($4 + [1672]), $14)
	CALL $52(($4 + [1684]), $13)
	*($4 + [1696]) = *(($4 + [1424]))
	CALL $52(($4 + [1700]), $12)
	CALL $52(($4 + [1712]), $11)
	CALL $52(($4 + [1724]), $10)
	CALL $52(($4 + [1736]), $9)
	CALL $52(($4 + [1748]), $8)
	CALL memcpy(($4 + [1760]), $19, [144])
	CALL void $3((int_32 ($4 + [1632])), (int_32 $6))
	CALL $119(($4 + [1632]))
	CALL $119(($4 + [1360]))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $127($17)
	CALL $119(($4 + [1088]))
	$global$0 = ($4 + [1904])
	return [1]
}

void .FUNC $148 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	$3 = ($global$0 - [48])
	$global$0 = $3
	$4 = *($0)
	*($3 + [32]) = [13146]
	*($3 + [36]) = CALL $15([13146])
	*($3 + [8]) = *($3 + [32])
	CALL require_auth2($4, *(CALL $99(($3 + [40]), ($3 + [8]))))
	$5 = (*(($0 + [756])) + [-2])
	if ( ((uint_32)$5 > (uint_32)[7]) ){ goto $label$1 }
	goto $label$5 
	
.LABEL $label$5
	CALL $149($0, $1)
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$4
	CALL $150($0, $1)
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$3
	CALL $151($0, $1)
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$2
	$5 = CALL $52(($3 + [16]), $2)
	CALL $152($0, $1, $5)
	if ( ((*($5) & [1]) == 0) ){ goto $label$6 }
	CALL $9(*($5 + [8]))
	
.LABEL $label$6
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$1
	CALL eosio_assert([0], [13155])
	$global$0 = ($3 + [48])
	$5
}

void .FUNC $98 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = CALL transaction_size()
	$1 = $global$0
	$3 = ($1 - (($2 + [15]) & [-16]))
	$global$0 = $3
	CALL $83($0, $3, CALL $fimport$36($3, $2))
	$global$0 = $1
}

int_32 .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [14465])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [14570])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [14503])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [14570])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $239 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $238 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $250($6, $8)
	*($3 + [4]) = [0]
	*($3) = $6
	$7 = *(*(CALL $384($3) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [15781])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$6 = *($5 + [8])
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [16]) = *($6)
	$6 = *($5 + [12])
	*($1 + [32]) = *($6)
	*(($1 + [40])) = *(($6 + [8]))
	$6 = *($5 + [16])
	*($1 + [48]) = *($6)
	*(($1 + [56])) = *(($6 + [8]))
	$6 = *($5 + [20])
	*($1 + [64]) = *($6)
	*(($1 + [72])) = *(($6 + [8]))
	*($1 + [80]) = *(*($5 + [24]))
	CALL $98($3)
	*(($1 + [120])) = *(($3 + [24]))
	*(($1 + [112])) = *(($3 + [16]))
	*(($1 + [104])) = *($3 + [8])
	*($1 + [96]) = *($3)
	*($1 + [128]) = ((int_64)CALL $86() / (int_64)1000000)
	$6 = $2
	$5 = ($6 + [-128])
	$global$0 = $5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($6 + [-4])
	CALL $385($3, $1)
	$7 = *($1)
	*($1 + [136]) = CALL db_store_i64(*($4 + [8]), (int_64)4229865212519383040, *(*($0 + [8])), $7, $5, [124])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [32])
}

void .FUNC $94 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *($0)
	$3 = *($0 + [8])
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$4 }
	if ( ($4 == 0) ){ goto $label$5 }
	*($0 + [4]) = $4
	CALL $9($4)
	$3 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$1 }
	$5 = [2147483647]
	if ( ((uint_32)$3 > (uint_32)[1073741822]) ){ goto $label$6 }
	$4 = ($3 << [1])
	$5 = ( $1 ? $4 : ($4 <= $1) )
	
.LABEL $label$6
	$4 = CALL $7($5)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $5)
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($4) = *($2)
	$4 = (*($0) + [1])
	*($0) = $4
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$3 = (*($0 + [4]) - $4)
	$5 = ( $3 ? $1 : ($3 <= $1) )
	if ( ($5 == 0) ){ goto $label$8 }
	CALL memset($4, *($2), $5)
	
.LABEL $label$8
	if ( ((uint_32)$3 >= (uint_32)$1) ){ goto $label$2 }
	$1 = ($3 - $1)
	$4 = ($0 + [4])
	$0 = *($4)
	
.LOOP $label$9:
	*($0) = *($2)
	$0 = (*($4) + [1])
	*($4) = $0
	$1 = ($1 + [1])
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = (*($0) + $1)
	return (unreachable)
	
.LABEL $label$1
	CALL $82($0)
}

void .FUNC $236 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [96])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [116]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *($3)
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$3
	$8 = ((int_64)*($1 + [16]) + (int_64)*($7))
	*($1 + [16]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [15059])
	$8 = *(($1 + [16]))
	
.LABEL $label$4
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$5
	$7 = *($3 + [4])
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$6 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$6
	$8 = ((int_64)*($1 + [32]) + (int_64)*($7))
	*($1 + [32]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [15059])
	$8 = *(($1 + [32]))
	
.LABEL $label$7
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$8
	$7 = *($3 + [8])
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [56]))) ){ goto $label$9 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$9
	$8 = ((int_64)*($1 + [48]) + (int_64)*($7))
	*($1 + [48]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [15059])
	$8 = *(($1 + [48]))
	
.LABEL $label$10
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$11
	$7 = *($3 + [12])
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [72]))) ){ goto $label$12 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$12
	$8 = ((int_64)*($1 + [64]) + (int_64)*($7))
	*($1 + [64]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$13 }
	CALL eosio_assert([0], [15059])
	$8 = *(($1 + [64]))
	
.LABEL $label$13
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$14 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$14
	$7 = *($3 + [16])
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [88]))) ){ goto $label$15 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$15
	$8 = ((int_64)*($1 + [80]) + (int_64)*($7))
	*($1 + [80]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$16 }
	CALL eosio_assert([0], [15059])
	$8 = *(($1 + [80]))
	
.LABEL $label$16
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$17 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$17
	$7 = *($3 + [20])
	*($5 + [72]) = [13901]
	*($5 + [76]) = CALL $15([13901])
	*($5 + [8]) = *($5 + [72])
	$9 = CALL $99(($5 + [80]), ($5 + [8]))
	if ( ((int_64)*($7) != (int_64)*($9)) ){ goto $label$18 }
	*($5 + [64]) = [13901]
	*($5 + [68]) = CALL $15([13901])
	*($5) = *($5 + [64])
	*($1 + [96]) = *(CALL $99(($5 + [80]), $5))
	$8 = *(*($3 + [24]))
	if ( ((int_64)$8 == (int_64)0) ){ goto $label$22 }
	$9 = [0]
	$10 = *([0] + [11776])
	
.LOOP $label$24:
	*((($5 + [80]) + ($7 = $9))) = *(($10 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$8 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$9 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$23 }
	$8 = ((int_64)$8 << (int_64)5)
	if ( ((int_64)$8 != (int_64)0) ){ goto $label$24 }
	
.LABEL $label$23
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$21 }
	*($5 + [32]) = ($9 << [1])
	$10 = (($5 + [32]) | [1])
	goto $label$20 
	
.LABEL $label$22
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [32]) = [0]
	$7 = (($5 + [32]) | [1])
	goto $label$19 
	
.LABEL $label$21
	$11 = (($9 + [16]) & [-16])
	$10 = CALL $7($11)
	*($5 + [32]) = ($11 | [1])
	*($5 + [40]) = $10
	*($5 + [36]) = $9
	
.LABEL $label$20
	$11 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$25:
	*(($10 + $7)) = *((($5 + [80]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$11 != (int_32)$7) ){ goto $label$25 }
	$7 = ($10 + $9)
	
.LABEL $label$19
	$9 = [0]
	*($7) = [0]
	$7 = CALL $60(($5 + [32]), [12895])
	$10 = ($7 + [8])
	*((($5 + [48]) + [8])) = *($10)
	*($5 + [48]) = *($7)
	*($7) = (int_64)0
	*($10) = [0]
	$8 = *(*($3 + [28]))
	if ( (int_64)($8 == 0) ){ goto $label$35 }
	$10 = *([0] + [11776])
	
.LOOP $label$37:
	*((($5 + [80]) + ($7 = $9))) = *(($10 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$8 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$9 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$36 }
	$8 = ((int_64)$8 << (int_64)5)
	if ( ((int_64)$8 != (int_64)0) ){ goto $label$37 }
	
.LABEL $label$36
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$34 }
	*($5 + [16]) = ($9 << [1])
	$10 = (($5 + [16]) | [1])
	goto $label$33 
	
.LABEL $label$35
	*((($5 + [16]) + [8])) = [0]
	*($5 + [16]) = (int_64)0
	$7 = CALL $15([12908])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$28 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$32 }
	*($5 + [16]) = ($7 << [1])
	$9 = (($5 + [16]) | [1])
	if ( $7 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$34
	$11 = (($9 + [16]) & [-16])
	$10 = CALL $7($11)
	*($5 + [16]) = ($11 | [1])
	*($5 + [24]) = $10
	*($5 + [20]) = $9
	
.LABEL $label$33
	$11 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$38:
	*(($10 + $7)) = *((($5 + [80]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$11 != (int_32)$7) ){ goto $label$38 }
	*(($10 + $9)) = [0]
	goto $label$29 
	
.LABEL $label$32
	$10 = (($7 + [16]) & [-16])
	$9 = CALL $7($10)
	*($5 + [16]) = ($10 | [1])
	*($5 + [24]) = $9
	*($5 + [20]) = $7
	
.LABEL $label$31
	CALL memcpy($9, [12908], $7)
	
.LABEL $label$30
	*(($9 + $7)) = [0]
	
.LABEL $label$29
	$7 = *($5 + [16])
	$9 = ($7 & [1])
	$7 = CALL $61(($5 + [48]), ( *($5 + [24]) ? (($5 + [16]) | [1]) : $9 ), ( *($5 + [20]) ? uint_32($7 >> [1]) : $9 ))
	$9 = *($7 + [4])
	$10 = *($7)
	*($7) = (int_64)0
	$11 = *($7 + [8])
	*($7 + [8]) = [0]
	$7 = ($1 + [104])
	if ( (*($1 + [104]) & [1]) ){ goto $label$40 }
	*($7) = [0]
	$3 = ($1 + [112])
	goto $label$39 
	
.LABEL $label$40
	*(*(($3 = ($1 + [112])))) = [0]
	*(($1 + [108])) = [0]
	
.LABEL $label$39
	CALL $56($7, [0])
	*(($1 + [108])) = $9
	*($1 + [104]) = $10
	*($3) = $11
	if ( (*($5 + [16]) & [1]) ){ goto $label$42 }
	if ( (*($5 + [48]) & [1]) ){ goto $label$41 }
	goto $label$27 
	
.LABEL $label$42
	CALL $9(*(($5 + [24])))
	if ( ((*($5 + [48]) & [1]) == 0) ){ goto $label$27 }
	
.LABEL $label$41
	CALL $9(*($5 + [56]))
	if ( (*($5 + [32]) & [1]) ){ goto $label$26 }
	goto $label$18 
	
.LABEL $label$28
	CALL $51(($5 + [16]))
	
.LABEL $label$27
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$18 }
	
.LABEL $label$26
	CALL $9(*($5 + [40]))
	
.LABEL $label$18
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$43 }
	CALL eosio_assert([0], [15228])
	
.LABEL $label$43
	$7 = *($1 + [104])
	$9 = ( *(($1 + [108])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($9 + [104])
	$8 = (CASTING uint_64)(uint_32 $9)
	
.LOOP $label$44:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$44 }
	if ( ($7 <= [513]) ){ goto $label$46 }
	$9 = CALL $1($7)
	goto $label$45 
	
.LABEL $label$46
	$9 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $9
	
.LABEL $label$45
	*($5 + [84]) = $9
	*($5 + [80]) = $9
	*($5 + [88]) = ($9 + $7)
	CALL $383(($5 + [80]), $1)
	CALL db_update_i64(*($1 + [120]), $2, $9, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$49 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$49
	CALL $2($9)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$47 }
	
.LABEL $label$48
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [96])
	return 
	
.LABEL $label$47
	$global$0 = ($5 + [96])
	(unreachable)
}

void .FUNC $96 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$3 = ($global$0 - [208])
	$global$0 = $3
	$4 = CALL $65($1, [95], [0])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [12082])
	
.LABEL $label$1
	$5 = CALL $53(($3 + [192]), $1, [0], $4, $1)
	$7 = *($3 + [192])
	$6 = CALL $15([11510])
	if ( ((int_32)$6 != (int_32)( *($5 + [4]) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$3 }
	if ( (CALL $66($5, [0], [-1], [11510], $6) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [11519])
	
.LABEL $label$2
	$7 = ($4 + [1])
	$6 = CALL $65($1, [95], $7)
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$4 }
	CALL eosio_assert([0], [12108])
	
.LABEL $label$4
	$7 = CALL $53(($3 + [176]), $1, $7, ($6 + ((int_32)$4 ^ (int_32)[-1])), $1)
	$4 = *($3 + [176])
	$8 = CALL $15([12130])
	if ( ((int_32)$8 != (int_32)( *($7 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) )) ){ goto $label$6 }
	if ( (CALL $66($7, [0], [-1], [12130], $8) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$4 = *($3 + [176])
	$8 = CALL $15([12133])
	if ( ((int_32)$8 != (int_32)( *(($7 + [4])) ? uint_32($4 >> [1]) : ($4 & [1]) )) ){ goto $label$7 }
	if ( (CALL $66($7, [0], [-1], [12133], $8) == 0) ){ goto $label$5 }
	
.LABEL $label$7
	CALL eosio_assert([0], [12136])
	
.LABEL $label$5
	$4 = [0]
	$8 = *($3 + [176])
	$9 = CALL $15([12130])
	if ( ((int_32)$9 != (int_32)( *(($7 + [4])) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$8 }
	$4 = (CALL $66($7, [0], [-1], [12130], $9) == 0)
	
.LABEL $label$8
	$1 = ($1 & [1])
	$1 = *($3 + [160])
	$6 = CALL $53(($3 + [160]), $1, ($6 + [1]), [-1], $1)
	if ( ( *($6 + [4]) ? uint_32($1 >> [1]) : $1 ) ){ goto $label$9 }
	CALL eosio_assert([0], [12152])
	$1 = (*($3 + [160]) & [1])
	
.LABEL $label$9
	*($3 + [152]) = [0]
	*($3 + [144]) = (int_64)0
	if ( CALL $93(( *($6 + [8]) ? ($6 + [1]) : $1 ), ($3 + [144])) ){ goto $label$10 }
	CALL eosio_assert([0], [12174])
	
.LABEL $label$10
	if ( ((int_32)(*($3 + [148]) - *($3 + [144])) == (int_32)[69]) ){ goto $label$11 }
	CALL eosio_assert([0], [12198])
	
.LABEL $label$11
	if ( (*($2) == 0) ){ goto $label$12 }
	CALL memmove(($3 + [72]), *($3 + [144]), [65])
	*($3 + [138]) = [49]
	*($3 + [137]) = ( [75] ? [82] : $4 )
	CALL $84(($3 + [32]), ($3 + [72]), [67])
	$10 = *($3 + [32])
	*($3 + [19]) = (uint_64)$10 >> (uint_64)(int_64)32)
	*($3 + [18]) = (uint_64)$10 >> (uint_64)(int_64)40)
	*($3 + [17]) = (uint_64)$10 >> (uint_64)(int_64)48)
	*($3 + [16]) = (uint_64)$10 >> (uint_64)(int_64)56)
	$11 = *($3 + [40])
	*($3 + [11]) = (uint_64)$11 >> (uint_64)(int_64)32)
	*($3 + [10]) = (uint_64)$11 >> (uint_64)(int_64)40)
	*($3 + [9]) = (uint_64)$11 >> (uint_64)(int_64)48)
	*($3 + [8]) = (uint_64)$11 >> (uint_64)(int_64)56)
	$1 = (CASTING uint_32)(uint_64 $10)
	*($3 + [23]) = $1
	*($3 + [22]) = uint_32($1 >> [8])
	*($3 + [21]) = uint_32($1 >> [16])
	*($3 + [20]) = uint_32($1 >> [24])
	$1 = (CASTING uint_32)(uint_64 $11)
	*($3 + [15]) = $1
	*($3 + [14]) = uint_32($1 >> [8])
	*($3 + [13]) = uint_32($1 >> [16])
	*($3 + [12]) = uint_32($1 >> [24])
	$10 = *((($3 + [32]) + [24]))
	*($3 + [27]) = (uint_64)$10 >> (uint_64)(int_64)32)
	*($3 + [26]) = (uint_64)$10 >> (uint_64)(int_64)40)
	*($3 + [25]) = (uint_64)$10 >> (uint_64)(int_64)48)
	*($3 + [24]) = (uint_64)$10 >> (uint_64)(int_64)56)
	if ( (CALL $17(($3 + [8]), (*($3 + [148]) + [-4]), [4]) == 0) ){ goto $label$12 }
	CALL eosio_assert([0], [12216])
	
.LABEL $label$12
	*($0) = ((int_32)$4 ^ (int_32)[1])
	$0 = ($0 + [4])
	$1 = [0]
	$4 = *($3 + [144])
	
.LOOP $label$13:
	*(($0 + $1)) = *(($4 + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[65]) ){ goto $label$13 }
	*($3 + [148]) = $4
	CALL $9($4)
	if ( (*($3 + [160]) & [1]) ){ goto $label$18 }
	if ( (*($3 + [176]) & [1]) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $9(*(($6 + [8])))
	if ( ((*($3 + [176]) & [1]) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $9(*($7 + [8]))
	if ( ((*($3 + [192]) & [1]) == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( (*($3 + [192]) & [1]) ){ goto $label$14 }
	
.LABEL $label$15
	$global$0 = ($3 + [208])
	return 
	
.LABEL $label$14
	CALL $9(*($5 + [8]))
	$global$0 = ($3 + [208])
}

void .FUNC $234 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	$7 = ($global$0 - [112])
	$global$0 = $7
	$8 = *($2)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$9 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$11 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$9 = $11
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$9 = $11
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$12 = ((int_32)$10 < (int_32)[6])
	$13 = ($10 + [1])
	$10 = $13
	if ( $12 ){ goto $label$5 }
	$10 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [13801])
	
.LABEL $label$1
	$10 = CALL $15([12244])
	if ( ($10 <= [8]) ){ goto $label$9 }
	CALL eosio_assert([0], [14622])
	goto $label$8 
	
.LABEL $label$9
	if ( ($10 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$9 = (int_64)0
	
.LOOP $label$10:
	$12 = *(($10 + [12243]))
	if ( ((($12 + [-65]) & [255]) <= [26]) ){ goto $label$11 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$11
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56))
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$10 }
	$9 = ((int_64)$9 << (int_64)8)
	goto $label$6 
	
.LABEL $label$7
	$9 = (int_64)0
	
.LABEL $label$6
	$14 = *($2 + [8])
	if ( ((int_64)$14 == (int_64)((int_64)$9 | (int_64)4)) ){ goto $label$12 }
	CALL eosio_assert([0], [13801])
	
.LABEL $label$12
	$11 = *($3)
	$9 = *($3 + [8])
	if ( ((int_64)*($4 + [8]) == (int_64)$9) ){ goto $label$13 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$13
	$11 = ((int_64)*($4) + (int_64)$11)
	if ( ((int_64)$11 <= (int_64)-4611686018427387904) ){ goto $label$17 }
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$16 }
	CALL eosio_assert([0], [15078])
	if ( ((int_64)*($5 + [8]) != (int_64)$9) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	CALL eosio_assert([0], [15059])
	
.LABEL $label$16
	if ( ((int_64)*($5 + [8]) == (int_64)$9) ){ goto $label$14 }
	
.LABEL $label$15
	CALL eosio_assert([0], [15016])
	
.LABEL $label$14
	$11 = ((int_64)*($5) + (int_64)$11)
	if ( ((int_64)$11 <= (int_64)-4611686018427387904) ){ goto $label$21 }
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$20 }
	CALL eosio_assert([0], [15078])
	if ( ((int_64)*($6 + [8]) != (int_64)$9) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	CALL eosio_assert([0], [15059])
	
.LABEL $label$20
	if ( ((int_64)*($6 + [8]) == (int_64)$9) ){ goto $label$18 }
	
.LABEL $label$19
	CALL eosio_assert([0], [15016])
	
.LABEL $label$18
	$11 = ((int_64)*($6) + (int_64)$11)
	if ( ((int_64)$11 <= (int_64)-4611686018427387904) ){ goto $label$23 }
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$22 }
	CALL eosio_assert([0], [15078])
	goto $label$22 
	
.LABEL $label$23
	CALL eosio_assert([0], [15059])
	
.LABEL $label$22
	CALL __multi3(($7 + [32]), $11, (int_64)$11 >> (int_64)63), (int_64)3, (int_64)0)
	$11 = *(($7 + [40]))
	$15 = *($7 + [32])
	if ( (( (uint_64)($15 <= (int_64)4611686018427387904) ? ((int_64)$11 < (int_64)0) : (int_64)($11 == 0) ) == 0) ){ goto $label$29 }
	if ( (( ((uint_64)$15 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$11 > (int_64)-1) : ((int_64)$11 == (int_64)-1) ) == 0) ){ goto $label$28 }
	if ( ((int_64)$9 != (int_64)$14) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	CALL eosio_assert([0], [14829])
	if ( ((int_64)$9 == (int_64)$14) ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$28
	CALL eosio_assert([0], [14853])
	if ( ((int_64)$9 == (int_64)$14) ){ goto $label$26 }
	
.LABEL $label$27
	CALL eosio_assert([0], [14878])
	if ( ((int_64)$8 != (int_64)$15) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	if ( ((int_64)$8 == (int_64)$15) ){ goto $label$24 }
	
.LABEL $label$25
	CALL eosio_assert([0], [13801])
	
.LABEL $label$24
	$10 = ($1 + [8])
	$11 = *($10)
	*((($7 + [80]) + [8])) = $11
	$9 = *($1)
	*((($7 + [16]) + [8])) = $11
	*($7 + [80]) = $9
	*($7 + [16]) = $9
	CALL $242(($7 + [96]), $0, ($7 + [16]))
	$9 = *($10)
	$10 = ((int_64)$9 == (int_64)*($7 + [104]))
	if ( $10 ){ goto $label$30 }
	CALL eosio_assert([0], [14878])
	
.LABEL $label$30
	$15 = *($7 + [96])
	$11 = *($1)
	if ( ((int_64)$11 <= (int_64)$15) ){ goto $label$36 }
	if ( ((int_64)$14 == (int_64)$9) ){ goto $label$37 }
	CALL eosio_assert([0], [15344])
	
.LABEL $label$37
	$9 = (int_64)
	if ( ((int_64)$9($11 - $8)) <= (int_64)-4611686018427387904) ){ goto $label$44 }
	if ( ((int_64)$9 >= (int_64)4611686018427387904) ){ goto $label$43 }
	if ( ($10 == 0) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$44
	CALL eosio_assert([0], [15392])
	if ( $10 ){ goto $label$41 }
	goto $label$42 
	
.LABEL $label$43
	CALL eosio_assert([0], [15414])
	if ( $10 ){ goto $label$41 }
	
.LABEL $label$42
	CALL eosio_assert([0], [15344])
	$9 = (int_64)
	if ( ((int_64)$9($15 - $9)) > (int_64)-4611686018427387904) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$41
	$9 = (int_64)
	if ( ((int_64)$9($15 - $9)) <= (int_64)-4611686018427387904) ){ goto $label$39 }
	
.LABEL $label$40
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$38 }
	CALL eosio_assert([0], [15414])
	goto $label$38 
	
.LABEL $label$39
	CALL eosio_assert([0], [15392])
	
.LABEL $label$38
	*(($7 + [72])) = [0]
	*($7 + [64]) = (int_64)0
	$10 = CALL $15([14242])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$35 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$47 }
	*($7 + [64]) = ($10 << [1])
	$12 = (($7 + [64]) | [1])
	if ( $10 ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$47
	$13 = (($10 + [16]) & [-16])
	$12 = CALL $7($13)
	*($7 + [64]) = ($13 | [1])
	*($7 + [72]) = $12
	*($7 + [68]) = $10
	
.LABEL $label$46
	CALL memcpy($12, [14242], $10)
	
.LABEL $label$45
	*(($12 + $10)) = [0]
	CALL $122($9, ($7 + [64]))
	if ( ((*($7 + [64]) & [1]) == 0) ){ goto $label$36 }
	CALL $9(*($7 + [72]))
	
.LABEL $label$36
	$11 = *(($0 + [624]))
	$9 = *(($0 + [632]))
	if ( ((int_64)*(($0 + [648])) == (int_64)$9) ){ goto $label$48 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$48
	$11 = ((int_64)*(($0 + [640])) + (int_64)$11)
	if ( ((int_64)$11 <= (int_64)-4611686018427387904) ){ goto $label$50 }
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$49 }
	CALL eosio_assert([0], [15078])
	goto $label$49 
	
.LABEL $label$50
	CALL eosio_assert([0], [15059])
	
.LABEL $label$49
	if ( ((int_64)*(($0 + [664])) == (int_64)$9) ){ goto $label$51 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$51
	$11 = ((int_64)*(($0 + [656])) + (int_64)$11)
	if ( ((int_64)$11 <= (int_64)-4611686018427387904) ){ goto $label$53 }
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$52 }
	CALL eosio_assert([0], [15078])
	goto $label$52 
	
.LABEL $label$53
	CALL eosio_assert([0], [15059])
	
.LABEL $label$52
	if ( ((int_64)*(($0 + [680])) == (int_64)$9) ){ goto $label$54 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$54
	$11 = ((int_64)*(($0 + [672])) + (int_64)$11)
	if ( ((int_64)$11 <= (int_64)-4611686018427387904) ){ goto $label$56 }
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$55 }
	CALL eosio_assert([0], [15078])
	goto $label$55 
	
.LABEL $label$56
	CALL eosio_assert([0], [15059])
	
.LABEL $label$55
	CALL __multi3($7, $11, (int_64)$11 >> (int_64)63), (int_64)3, (int_64)0)
	$11 = *(($7 + [8]))
	$8 = *($7)
	if ( (( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$11 < (int_64)0) : (int_64)($11 == 0) ) == 0) ){ goto $label$58 }
	if ( ( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$11 > (int_64)-1) : ((int_64)$11 == (int_64)-1) ) ){ goto $label$57 }
	CALL eosio_assert([0], [14853])
	goto $label$57 
	
.LABEL $label$58
	CALL eosio_assert([0], [14829])
	
.LABEL $label$57
	$14 = *(($0 + [576]))
	$11 = *(($0 + [584]))
	if ( ((int_64)*(($0 + [568])) == (int_64)$11) ){ goto $label$59 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$59
	$14 = ((int_64)*(($0 + [560])) + (int_64)$14)
	if ( ((int_64)$14 <= (int_64)-4611686018427387904) ){ goto $label$62 }
	if ( ((int_64)$14 >= (int_64)4611686018427387904) ){ goto $label$61 }
	if ( ((int_64)$9 != (int_64)$11) ){ goto $label$60 }
	goto $label$34 
	
.LABEL $label$62
	CALL eosio_assert([0], [15059])
	if ( ((int_64)$9 == (int_64)$11) ){ goto $label$34 }
	goto $label$60 
	
.LABEL $label$61
	CALL eosio_assert([0], [15078])
	if ( ((int_64)$9 == (int_64)$11) ){ goto $label$34 }
	
.LABEL $label$60
	CALL eosio_assert([0], [15344])
	$9 = (int_64)
	if ( ((int_64)$9($14 - $8)) > (int_64)-4611686018427387904) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$35
	CALL $51(($7 + [64]))
	
.LABEL $label$34
	$9 = (int_64)
	if ( ((int_64)$9($14 - $8)) <= (int_64)-4611686018427387904) ){ goto $label$32 }
	
.LABEL $label$33
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$31 }
	CALL eosio_assert([0], [15414])
	goto $label$31 
	
.LABEL $label$32
	CALL eosio_assert([0], [15392])
	
.LABEL $label$31
	if ( ((int_64)*(($2 + [8])) == (int_64)$11) ){ goto $label$63 }
	CALL eosio_assert([0], [14878])
	
.LABEL $label$63
	if ( ((int_64)*($2) <= (int_64)$9) ){ goto $label$69 }
	*(($7 + [56])) = [0]
	*($7 + [48]) = (int_64)0
	$10 = CALL $15([12336])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$64 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$68 }
	*($7 + [48]) = ($10 << [1])
	$12 = (($7 + [48]) | [1])
	if ( $10 ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$69
	if ( ((int_64)*(($3 + [8])) == (int_64)*(($0 + [632]))) ){ goto $label$70 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$70
	$9 = ((int_64)*($10) + (int_64)*($3))
	*(($10 = ($0 + [624]))) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$71 }
	CALL eosio_assert([0], [15059])
	$9 = *($10)
	
.LABEL $label$71
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$72 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$72
	if ( ((int_64)*(($4 + [8])) == (int_64)*(($0 + [648]))) ){ goto $label$73 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$73
	$9 = ((int_64)*($10) + (int_64)*($4))
	*(($10 = ($0 + [640]))) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$74 }
	CALL eosio_assert([0], [15059])
	$9 = *($10)
	
.LABEL $label$74
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$75 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$75
	if ( ((int_64)*(($5 + [8])) == (int_64)*(($0 + [664]))) ){ goto $label$76 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$76
	$9 = ((int_64)*($10) + (int_64)*($5))
	*(($10 = ($0 + [656]))) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$77 }
	CALL eosio_assert([0], [15059])
	$9 = *($10)
	
.LABEL $label$77
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$78 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$78
	if ( ((int_64)*(($6 + [8])) == (int_64)*(($0 + [680]))) ){ goto $label$79 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$79
	$9 = ((int_64)*($10) + (int_64)*($6))
	*(($10 = ($0 + [672]))) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$80 }
	CALL eosio_assert([0], [15059])
	$9 = *($10)
	
.LABEL $label$80
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$65 }
	CALL eosio_assert([0], [15078])
	$global$0 = ($7 + [112])
	return 
	
.LABEL $label$68
	$0 = (($10 + [16]) & [-16])
	$12 = CALL $7($0)
	*($7 + [48]) = ($0 | [1])
	*($7 + [56]) = $12
	*($7 + [52]) = $10
	
.LABEL $label$67
	CALL memcpy($12, [12336], $10)
	
.LABEL $label$66
	*(($12 + $10)) = [0]
	CALL $122($9, ($7 + [48]))
	if ( ((*($7 + [48]) & [1]) == 0) ){ goto $label$65 }
	CALL $9(*($7 + [56]))
	
.LABEL $label$65
	$global$0 = ($7 + [112])
	return (unreachable)
	
.LABEL $label$64
	CALL $51(($7 + [48]))
	(unreachable)
}

void .FUNC $233 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [16]) = [14281]
	*($1 + [20]) = CALL $15([14281])
	*($1 + [8]) = *($1 + [16])
	CALL $99(($1 + [24]), ($1 + [8]))
	$2 = ($0 + [768])
	$4 = *(($0 + [796]))
	$3 = *(($0 + [792]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$6:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)7035938074457182720) ){ goto $label$5 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$4 }
	if ( ((int_32)*($6 + [16]) == (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert([0], [14937])
	if ( *($6 + [8]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$5 = CALL db_find_i64(*($2), *(($0 + [776])), (int_64)7235159550573564928, (int_64)7035938074457182720)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$1 }
	$6 = CALL $192($2, $5)
	if ( ((int_32)*($6 + [16]) == (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$3
	if ( (*($6 + [8]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [14293])
	
.LABEL $label$1
	$global$0 = ($1 + [32])
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[12])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[357913942]) ){ goto $label$2 }
	$6 = [357913941]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[12])
	if ( ((uint_32)$7 > (uint_32)[178956969]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$6 * (int_32)[12]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$8 = *($1)
	*($1) = (int_64)0
	*(($4 = ($5 + ((int_32)$4 * (int_32)[12])))) = $8
	$1 = ($1 + [8])
	$7 = *($1)
	*($1) = [0]
	*(($4 + [8])) = $7
	$6 = ($5 + ((int_32)$6 * (int_32)[12]))
	$5 = ($4 + [12])
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	$1 = ($2 + [-4])
	*(($4 + [-4])) = *($1)
	$2 = ($2 + [-12])
	*(($4 = ($4 + [-12]))) = *($2)
	*($2) = (int_64)0
	*($1) = [0]
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$6 }
	$2 = *(($0 + [4]))
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $4
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$4 = ($2 + [-12])
	if ( ((*($4) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($2 + [-4])))
	
.LABEL $label$9
	$2 = $4
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ($3 == 0) ){ goto $label$10 }
	CALL $9($3)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $92 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [80])
	$global$0 = $2
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$4 }
	$3 = [0]
	$4 = *([0] + [11776])
	$5 = $1
	
.LOOP $label$6:
	*((($2 + [64]) + ($6 = $3))) = *(($4 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$3 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$5 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$6 }
	
.LABEL $label$5
	*(($2 + [24])) = [0]
	*($2 + [16]) = (int_64)0
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($2 + [16]) = ($3 << [1])
	$4 = (($2 + [16]) | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($2 + [24])) = [0]
	*($2 + [16]) = (int_64)0
	*($2 + [16]) = [0]
	$6 = (($2 + [16]) | [1])
	goto $label$1 
	
.LABEL $label$3
	$7 = (($3 + [16]) & [-16])
	$4 = CALL $7($7)
	*($2 + [16]) = ($7 | [1])
	*($2 + [24]) = $4
	*($2 + [20]) = $3
	
.LABEL $label$2
	$7 = ($6 + [1])
	$6 = [0]
	
.LOOP $label$7:
	*(($4 + $6)) = *((($2 + [64]) + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$7 }
	$6 = ($4 + $3)
	
.LABEL $label$1
	$3 = [0]
	*($6) = [0]
	$6 = CALL $63(($2 + [16]), [0], [11340])
	$4 = ($6 + [8])
	*((($2 + [32]) + [8])) = *($4)
	*($2 + [32]) = *($6)
	*($6) = (int_64)0
	*($4) = [0]
	$6 = CALL $60(($2 + [32]), [11371])
	$4 = ($6 + [8])
	*((($2 + [48]) + [8])) = *($4)
	*($2 + [48]) = *($6)
	*($6) = (int_64)0
	*($4) = [0]
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$11 }
	$4 = *([0] + [11776])
	
.LOOP $label$13:
	*((($2 + [64]) + ($6 = $3))) = *(($4 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$3 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$12 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$13 }
	
.LABEL $label$12
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$10 }
	*($2) = ($3 << [1])
	$4 = ($2 | [1])
	goto $label$9 
	
.LABEL $label$11
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	*($2) = [0]
	$6 = ($2 | [1])
	$3 = $6
	goto $label$8 
	
.LABEL $label$10
	$7 = (($3 + [16]) & [-16])
	$4 = CALL $7($7)
	*($2) = ($7 | [1])
	*($2 + [8]) = $4
	*($2 + [4]) = $3
	
.LABEL $label$9
	$7 = ($6 + [1])
	$6 = [0]
	
.LOOP $label$14:
	*(($4 + $6)) = *((($2 + [64]) + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$14 }
	$3 = ($4 + $3)
	$6 = ($2 | [1])
	
.LABEL $label$8
	*($3) = [0]
	$3 = *($2)
	$4 = ($3 & [1])
	$6 = CALL $61(($2 + [48]), ( *($2 + [8]) ? $6 : $4 ), ( *($2 + [4]) ? uint_32($3 >> [1]) : $4 ))
	$3 = ($6 + [8])
	*((($2 + [64]) + [8])) = *($3)
	*($2 + [64]) = *($6)
	*($6) = (int_64)0
	*($3) = [0]
	$6 = CALL $60(($2 + [64]), [11439])
	$1 = *($6)
	*($6) = (int_64)0
	*($0) = $1
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( (*($2 + [64]) & [1]) ){ goto $label$23 }
	if ( (*($2) & [1]) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	CALL $9(*($2 + [72]))
	if ( ((*($2) & [1]) == 0) ){ goto $label$21 }
	
.LABEL $label$22
	CALL $9(*(($2 + [8])))
	$6 = [1]
	if ( ((*($2 + [48]) & [1]) == 0) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$6 = [1]
	if ( (*($2 + [48]) & [1]) ){ goto $label$19 }
	
.LABEL $label$20
	if ( (*($2 + [32]) & $6) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $9(*($2 + [56]))
	if ( ((*($2 + [32]) & $6) == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL $9(*($2 + [40]))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	if ( (*($2 + [16]) & [1]) ){ goto $label$15 }
	
.LABEL $label$16
	$global$0 = ($2 + [80])
	return 
	
.LABEL $label$15
	CALL $9(*($2 + [24]))
	$global$0 = ($2 + [80])
}

void .FUNC $230 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = *($0)
	*($2 + [24]) = [13146]
	*($2 + [28]) = CALL $15([13146])
	*($2 + [8]) = *($2 + [24])
	CALL require_auth2($3, *(CALL $99(($2 + [32]), ($2 + [8]))))
	$4 = *($1)
	if ( ($4 & [1]) ){ goto $label$6 }
	if ( uint_32($4 >> [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( (*($1 + [4]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$5 = [1]
	if ( ($4 & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL eosio_assert([0], [13835])
	$5 = [1]
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$1 = *($1 + [8])
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 + $5)
	
.LABEL $label$1
	*($2 + [16]) = $1
	*($2 + [20]) = CALL $15($1)
	*($2) = *($2 + [16])
	$3 = *(CALL $99(($2 + [40]), $2))
	$6 = ($0 + [768])
	$4 = *(($0 + [796]))
	$7 = *(($0 + [792]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$11:
	$1 = ($4 + [-24])
	$5 = *($1)
	if ( ((int_64)*($5) == (int_64)$3) ){ goto $label$10 }
	$4 = $1
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$9 }
	if ( ((int_32)*($5 + [16]) == (int_32)$6) ){ goto $label$8 }
	CALL eosio_assert([0], [14937])
	goto $label$8 
	
.LABEL $label$9
	$1 = CALL db_find_i64(*($6), *(($0 + [776])), (int_64)7235159550573564928, $3)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$7 }
	$5 = CALL $192($6, $1)
	if ( ((int_32)*($5 + [16]) == (int_32)$6) ){ goto $label$8 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$8
	$1 = CALL db_next_i64(*($5 + [20]), ($2 + [40]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$12 }
	CALL $192($6, $1)
	
.LABEL $label$12
	CALL $231($6, $5)
	
.LABEL $label$7
	$global$0 = ($2 + [48])
}

void .FUNC $144 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $192 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([32])) + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	$7 = ($5 + [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-4]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$8
	CALL memcpy($7, $8, [4])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $229(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $260 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $6) / (int_32)[40])
	$8 = ($7 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$9 = [107374182]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[40])
	if ( ((uint_32)$6 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($6 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $7(((int_32)$9 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	*(($7 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($2)
	*($7 + [8]) = *($3)
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$2 = CALL $7([16])
	*($7 + [16]) = $2
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$8 = ($2 + [16])
	*($3) = $8
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($7 + [20])) = $8
	CALL $204(($7 + [28]), [40])
	$2 = *(($7 + [32]))
	$1 = *($7 + [28])
	*($5 + [4]) = $1
	*($5) = $1
	*($5 + [8]) = $2
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	$10 = ($6 + ((int_32)$9 * (int_32)[40]))
	$11 = ($7 + [40])
	CALL $340(($5 + [24]), ($5 + [16]))
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	$12 = ($2 - $8)
	$1 = [0]
	
.LOOP $label$7:
	$9 = ($8 + $1)
	*((($2 = ($7 + $1)) + [-32])) = *(($9 + [-32]))
	*(($2 + [-40])) = *(($9 + [-40]))
	*(($6 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($9 + [-24])
	*($6) = *($4)
	$6 = ($9 + [-16])
	*($3) = *($6)
	*($6) = [0]
	*(($6 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($9 + [-12])
	*($6) = *($3)
	*($4) = (int_64)0
	$9 = ($9 + [-4])
	*($2) = *($9)
	*($9) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$12 != (int_32)$1) ){ goto $label$7 }
	$7 = ($7 + $1)
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $7
	*(($0 + [4])) = $11
	*(($0 + [8])) = $10
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = *(($2 + [-12]))
	if ( ($9 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $9
	CALL $9($9)
	
.LABEL $label$10
	$9 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$11
	$2 = $9
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	$global$0 = ($5 + [32])
	(unreachable)
}

void .FUNC $261 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [24]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [40]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	*($2 + [8]) = $4
	CALL $343(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $262 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	CALL require_auth(*($0))
	CALL require_recipient($2)
}

int_32 .FUNC $386 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1)
	*($2 + [11]) = (uint_64)$3 >> (uint_64)(int_64)32)
	*($2 + [10]) = (uint_64)$3 >> (uint_64)(int_64)40)
	*($2 + [9]) = (uint_64)$3 >> (uint_64)(int_64)48)
	*($2 + [8]) = (uint_64)$3 >> (uint_64)(int_64)56)
	$4 = *(($1 + [8]))
	*($2 + [3]) = (uint_64)$4 >> (uint_64)(int_64)32)
	*($2 + [2]) = (uint_64)$4 >> (uint_64)(int_64)40)
	*($2 + [1]) = (uint_64)$4 >> (uint_64)(int_64)48)
	*($2) = (uint_64)$4 >> (uint_64)(int_64)56)
	$5 = (CASTING uint_32)(uint_64 $3)
	*($2 + [15]) = $5
	*($2 + [14]) = uint_32($5 >> [8])
	*($2 + [13]) = uint_32($5 >> [16])
	*($2 + [12]) = uint_32($5 >> [24])
	$5 = (CASTING uint_32)(uint_64 $4)
	*($2 + [7]) = $5
	*($2 + [6]) = uint_32($5 >> [8])
	*($2 + [5]) = uint_32($5 >> [16])
	*($2 + [4]) = uint_32($5 >> [24])
	$3 = *(($1 + [24]))
	*($2 + [23]) = $3
	$4 = *($1 + [16])
	*($2 + [27]) = (uint_64)$4 >> (uint_64)(int_64)32)
	*($2 + [26]) = (uint_64)$4 >> (uint_64)(int_64)40)
	*($2 + [25]) = (uint_64)$4 >> (uint_64)(int_64)48)
	*($2 + [24]) = (uint_64)$4 >> (uint_64)(int_64)56)
	*($2 + [19]) = (uint_64)$3 >> (uint_64)(int_64)32)
	*($2 + [18]) = (uint_64)$3 >> (uint_64)(int_64)40)
	*($2 + [17]) = (uint_64)$3 >> (uint_64)(int_64)48)
	*($2 + [16]) = (uint_64)$3 >> (uint_64)(int_64)56)
	$1 = (CASTING uint_32)(uint_64 $3)
	*($2 + [22]) = uint_32($1 >> [8])
	*($2 + [21]) = uint_32($1 >> [16])
	*($2 + [20]) = uint_32($1 >> [24])
	$1 = (CASTING uint_32)(uint_64 $4)
	*($2 + [31]) = $1
	*($2 + [30]) = uint_32($1 >> [8])
	*($2 + [29]) = uint_32($1 >> [16])
	*($2 + [28]) = uint_32($1 >> [24])
	$1 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$1 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [32])
	*(($1 = ($0 + [4]))) = (*($1) + [32])
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $303 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	CALL $295(*($1), ($3 + [8]))
	$0 = ($3 + [20])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$3 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
}

void .FUNC $302 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $301 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $295(*($1), *($0 + [8]))
	CALL $295(*($1), *($0 + [12]))
	CALL $295(*($1), *($0 + [16]))
	CALL $295(*($1), *($0 + [20]))
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	CALL $295(*($1), *($0 + [28]))
	CALL $295(*($1), *($0 + [32]))
	CALL $295(*($1), *($0 + [36]))
	CALL $295(*($1), *($0 + [40]))
	CALL $295(*($1), *($0 + [44]))
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [52])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $1, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $1) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $1, [8])
	*($4 + [8]) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $263 (int_32 $0, int_32 $1)
{
	CALL require_auth(*($0))
	CALL require_recipient(*($1 + [8]))
}

void .FUNC $307 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [1120])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [1108]) = $4
	*($3 + [1104]) = $4
	*($3 + [1112]) = ($4 + $5)
	*($3 + [1096]) = [0]
	*($3 + [1088]) = (int_64)0
	CALL $295(($3 + [1104]), ($3 + [1088]))
	$4 = *($3 + [1112])
	*((($3 + [32]) + [8])) = $4
	*(($3 + [8])) = $4
	$6 = *($3 + [1104])
	*($3) = $6
	*($3 + [32]) = $6
	$4 = CALL $52(($3 + [16]), ($3 + [1088]))
	$5 = CALL $123(($3 + [48]), $0, $1, $3)
	CALL $225($5, $4)
	if ( (*($4) & [1]) ){ goto $label$6 }
	CALL $127($5)
	if ( (*($3 + [1088]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $9(*($4 + [8]))
	CALL $127($5)
	if ( ((*($3 + [1088]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($3 + [1096])))
	$global$0 = ($3 + [1120])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [1120])
}

void .FUNC $306 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
}

void .FUNC $305 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = *($0)
	*($2 + [8]) = *($1)
	*($2 + [20]) = ($3 + [8])
	*($2 + [16]) = $3
	*($2 + [24]) = ($3 + [20])
	*($2 + [28]) = ($3 + [32])
	*($2 + [32]) = ($3 + [44])
	*($2 + [36]) = ($3 + [48])
	*($2 + [40]) = ($3 + [60])
	*($2 + [44]) = ($3 + [72])
	*($2 + [48]) = ($3 + [84])
	*($2 + [52]) = ($3 + [96])
	*($2 + [56]) = ($3 + [108])
	*($2 + [60]) = ($3 + [109])
	*($2 + [64]) = ($3 + [110])
	*($2 + [68]) = ($3 + [111])
	*($2 + [72]) = ($3 + [112])
	*($2 + [76]) = ($3 + [116])
	*($2 + [80]) = ($3 + [120])
	*($2 + [84]) = ($3 + [124])
	*($2 + [88]) = ($3 + [128])
	*($2 + [92]) = ($3 + [132])
	CALL $296(($2 + [16]), ($2 + [8]))
	$4 = *($0)
	$5 = ($4 + [136])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$0 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [144])
	$1 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $1) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$1 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $1, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$global$0 = ($2 + [96])
}

void .FUNC $304 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $52($2, ($1 + [8]))
	$5 = *($1 + [20])
	$1 = *($0 + [4])
	$6 = *($1 + [4])
	$0 = (*($0) + int_32($6 >> [1]))
	$1 = *($1)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$6 = CALL $52(($2 + [16]), $4)
	CALL void $0((int_32 $3), (int_64 $6), (int_32 $5), (int_32 $1))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($4) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($6 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($4 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $309 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [1136])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [1124]) = $4
	*($3 + [1120]) = $4
	*($3 + [1128]) = ($4 + $5)
	*($3 + [1112]) = [0]
	*($3 + [1104]) = (int_64)0
	CALL $295(($3 + [1120]), ($3 + [1104]))
	$4 = *($3 + [1124])
	if ( ((uint_32)(*($3 + [1128]) - $4) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$4 = *($3 + [1124])
	
.LABEL $label$4
	CALL memcpy(($3 + [1100]), $4, [4])
	*($3 + [1124]) = (*($3 + [1124]) + [4])
	$4 = *((($3 + [1120]) + [8]))
	*((($3 + [40]) + [8])) = $4
	*((($3 + [8]) + [8])) = $4
	$6 = *($3 + [1120])
	*($3 + [8]) = $6
	*($3 + [40]) = $6
	$4 = CALL $52(($3 + [24]), ($3 + [1104]))
	$5 = CALL $123(($3 + [56]), $0, $1, ($3 + [8]))
	CALL $227($5, $4, *($3 + [1100]))
	if ( (*($4) & [1]) ){ goto $label$7 }
	CALL $127($5)
	if ( (*($3 + [1104]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $9(*($4 + [8]))
	CALL $127($5)
	if ( ((*($3 + [1104]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($3 + [1112])))
	$global$0 = ($3 + [1136])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [1136])
}

int_32 .FUNC $308 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [15945])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $204($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

int_32 .FUNC $282 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [1152])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [1112])) = [0]
	*($4 + [1096]) = (int_64)0
	*($4 + [1104]) = (int_64)0
	*($4 + [1084]) = $2
	*($4 + [1080]) = $2
	*($4 + [1088]) = ($2 + $7)
	$3 = $2
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$3 = *($4 + [1084])
	
.LABEL $label$4
	CALL memcpy(($4 + [1096]), $3, [8])
	*($4 + [1084]) = ($3 + [8])
	$8 = (($4 + [1096]) + [8])
	CALL $295(($4 + [1080]), $8)
	$3 = *((($4 + [1080]) + [8]))
	*((($4 + [24]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$9 = *($4 + [1080])
	*($4 + [8]) = $9
	*($4 + [24]) = $9
	$10 = CALL $123(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *($4 + [1096])
	$8 = CALL $52(($4 + [1120]), $8)
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$5 = CALL $52(($4 + [1136]), $8)
	CALL void $3((int_32 $0), (int_64 $5), (int_32 $6))
	if ( (*($4 + [1136]) & [1]) ){ goto $label$10 }
	if ( (*($4 + [1120]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*($5 + [8]))
	if ( ((*($4 + [1120]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*($8 + [8]))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ($7 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $2($2)
	
.LABEL $label$6
	CALL $127($10)
	if ( ((*($4 + [1104]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($4 + [1112])))
	
.LABEL $label$11
	$global$0 = ($4 + [1152])
	return [1]
}

int_32 .FUNC $268 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $344(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $129 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [152]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)5310426098504302592, (int_64)5310426098504302592)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $126($0, $4)
	if ( ((int_32)*($4 + [152]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$2
	*($3) = $1
	CALL $134($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $135($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $128 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [288]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4812882651501297664, (int_64)-4812882651501297664)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $125($0, $4)
	if ( ((int_32)*($4 + [288]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$2
	*($3) = $1
	CALL $132($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $133($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

int_32 .FUNC $286 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [1136])
	$global$0 = $3
	*(($4 = $3) + [1128]) = *($2)
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$3 = CALL $1($2)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $2)
	
.LABEL $label$1
	*(($4 + [1120])) = (int_64)0
	*($4 + [1104]) = (int_64)0
	*($4 + [1112]) = (int_64)0
	*($4 + [1092]) = $3
	*($4 + [1088]) = $3
	*($4 + [1096]) = ($3 + $2)
	*($4 + [24]) = ($4 + [1088])
	*($4 + [48]) = ($4 + [1104])
	CALL $303(($4 + [48]), ($4 + [24]))
	$5 = *($4 + [1096])
	*((($4 + [32]) + [8])) = $5
	*((($4 + [8]) + [8])) = $5
	$6 = *($4 + [1088])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$5 = CALL $123(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $5
	*($4 + [28]) = ($4 + [1128])
	CALL $304(($4 + [24]), ($4 + [1104]))
	if ( ($2 <= [513]) ){ goto $label$5 }
	CALL $2($3)
	
.LABEL $label$5
	CALL $127($5)
	if ( ((*($4 + [1112]) & [1]) == 0) ){ goto $label$6 }
	CALL $9(*(($4 + [1120])))
	
.LABEL $label$6
	$global$0 = ($4 + [1136])
	return [1]
}

int_32 .FUNC $287 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [1088])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [1080]) = (int_64)0
	*($4 + [1072]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [1072]) + [8])
	CALL memcpy(($4 + [1072]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [8])) = $3
	*($4 + [16]) = $2
	*($4 + [20]) = ($2 + [16])
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $123(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *((($4 + [1072]) + [8]))
	$1 = *($4 + [1072])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $2($2)
	
.LABEL $label$8
	CALL $127($8)
	$global$0 = ($4 + [1088])
	return [1]
}

int_32 .FUNC $284 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [1216])
	$global$0 = $3
	*(($4 = $3) + [1208]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [1120])) = (int_64)0
	*(($4 + [1136])) = (int_64)0
	*(($4 + [1152])) = (int_64)0
	*(($4 + [1168])) = (int_64)0
	*(($4 + [1184])) = (int_64)0
	*(($4 + [1200])) = [0]
	*($4 + [1104]) = (int_64)0
	*($4 + [1096]) = (int_64)0
	*($4 + [1112]) = (int_64)0
	*($4 + [1128]) = (int_64)0
	*($4 + [1144]) = (int_64)0
	*($4 + [1160]) = (int_64)0
	*($4 + [1176]) = (int_64)0
	*($4 + [1192]) = (int_64)0
	*($4 + [1084]) = $2
	*($4 + [1080]) = $2
	*($4 + [1088]) = ($2 + $5)
	*($4 + [16]) = ($4 + [1080])
	*($4 + [40]) = ($4 + [1096])
	CALL $297(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [1088])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [1080])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $123(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [1208])
	CALL $298(($4 + [16]), ($4 + [1096]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $127($3)
	if ( ((*($4 + [1192]) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*(($4 + [1200])))
	
.LABEL $label$5
	$global$0 = ($4 + [1216])
	return [1]
}

int_32 .FUNC $285 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [1184])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [1128]))) = (int_64)0
	*($4 + [1120]) = (int_64)0
	*($4 + [1112]) = (int_64)0
	*($4 + [1100]) = $2
	*($4 + [1096]) = $2
	*($4 + [1104]) = ($2 + $7)
	*($4 + [1168]) = ($4 + [1096])
	*($4 + [56]) = ($4 + [1112])
	CALL $302(($4 + [56]), ($4 + [1168]))
	$8 = *($4 + [1104])
	*((($4 + [40]) + [8])) = $8
	*((($4 + [24]) + [8])) = $8
	$9 = *($4 + [1096])
	*($4 + [24]) = $9
	*($4 + [40]) = $9
	$8 = CALL $123(($4 + [56]), $0, $1, ($4 + [24]))
	*(($10 = (($4 + [1136]) + [8]))) = *($3)
	*($4 + [1136]) = *($4 + [1120])
	$0 = *($4 + [1112])
	*((($4 + [1152]) + [8])) = *($10)
	*($4 + [1152]) = *($4 + [1136])
	$3 = (($4 + [56]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$1 = *((($4 + [1152]) + [8]))
	*((($4 + [1168]) + [8])) = $1
	*((($4 + [8]) + [8])) = $1
	$1 = *($4 + [1152])
	*($4 + [8]) = $1
	*($4 + [1168]) = $1
	CALL void $3((int_32 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	CALL $127($8)
	$global$0 = ($4 + [1184])
	return [1]
}

int_32 .FUNC $123 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [608])
	$global$0 = $4
	*(($5 = (($4 + [576]) + [8]))) = *(($3 + [8]))
	*($4 + [576]) = *($3)
	$3 = *($5)
	*((($4 + [592]) + [8])) = $3
	*(($5 = ($4 + [8]))) = $3
	$6 = *($4 + [576])
	*($4) = $6
	*($4 + [592]) = $6
	*($0) = $1
	*($0 + [8]) = $2
	$3 = *($5)
	*((($4 + [288]) + [8])) = $3
	$2 = *($4)
	*($0 + [16]) = $2
	*(($0 + [24])) = $3
	*($4 + [288]) = $2
	*(($0 + [40])) = $1
	*($0 + [32]) = $1
	*(($0 + [48])) = (int_64)-1
	*(($0 + [56])) = (int_64)0
	*(($0 + [64])) = [0]
	*($4 + [288]) = (int_64)10000
	$3 = [0]
	$5 = CALL db_find_i64($1, $1, (int_64)-4420681754180845568, (int_64)-4420681754180845568)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$7 = ($0 + [32])
	$3 = CALL $124($7, $5)
	if ( ((int_32)*($3 + [8]) == (int_32)$7) ){ goto $label$1 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$1
	*($0 + [72]) = *(( $3 ? ($4 + [288]) : $3 ))
	*(($0 + [88])) = $1
	*($0 + [80]) = $1
	*(($0 + [96])) = (int_64)-1
	*(($0 + [104])) = (int_64)0
	*(($0 + [112])) = [0]
	*($0 + [120]) = $1
	*(($0 + [128])) = $1
	*(($0 + [136])) = (int_64)-1
	*(($0 + [144])) = (int_64)0
	*(($0 + [152])) = [0]
	*(($0 + [156])) = [0]
	*($0 + [160]) = $1
	*(($0 + [168])) = $1
	*(($0 + [176])) = (int_64)-1
	*(($0 + [184])) = (int_64)0
	*(($0 + [192])) = [0]
	*(($0 + [196])) = [0]
	*($0 + [200]) = $1
	*(($0 + [216])) = (int_64)-1
	*(($0 + [208])) = $1
	*(($0 + [224])) = (int_64)0
	*(($0 + [232])) = [0]
	*($0 + [240]) = $1
	*(($0 + [248])) = $1
	*(($0 + [256])) = (int_64)-1
	*(($0 + [264])) = (int_64)0
	*(($0 + [272])) = [0]
	*(($0 + [276])) = [0]
	*($0 + [280]) = $1
	*(($0 + [288])) = $1
	*(($0 + [296])) = (int_64)-1
	*(($0 + [304])) = (int_64)0
	*(($0 + [312])) = [0]
	*($0 + [320]) = $1
	*(($0 + [328])) = $1
	*(($0 + [336])) = (int_64)-1
	*(($0 + [352])) = [0]
	*(($0 + [344])) = (int_64)0
	*($0 + [360]) = $1
	*(($0 + [368])) = $1
	*(($0 + [376])) = (int_64)-1
	*(($0 + [384])) = (int_64)0
	*(($0 + [392])) = [0]
	*($0 + [400]) = $1
	*(($0 + [408])) = $1
	*(($0 + [416])) = (int_64)-1
	*(($0 + [424])) = (int_64)0
	*(($0 + [432])) = [0]
	*(($0 + [436])) = [0]
	*($0 + [440]) = $1
	*(($0 + [448])) = $1
	*(($0 + [456])) = (int_64)-1
	*(($0 + [464])) = (int_64)0
	*(($0 + [496])) = (int_64)0
	*(($0 + [472])) = [0]
	*(($0 + [504])) = (int_64)0
	*(($0 + [512])) = (int_64)0
	*(($0 + [520])) = (int_64)0
	*(($0 + [528])) = (int_64)0
	*(($0 + [536])) = (int_64)0
	*(($0 + [544])) = (int_64)0
	*(($0 + [552])) = (int_64)0
	*(($0 + [560])) = (int_64)0
	*(($0 + [568])) = (int_64)0
	*(($0 + [576])) = (int_64)0
	*(($0 + [584])) = (int_64)0
	*(($0 + [592])) = (int_64)0
	*(($0 + [600])) = (int_64)0
	*(($0 + [608])) = (int_64)0
	*(($0 + [616])) = (int_64)0
	*(($0 + [624])) = (int_64)0
	*(($0 + [632])) = (int_64)0
	*(($0 + [648])) = (int_64)0
	*(($0 + [640])) = (int_64)0
	*(($0 + [656])) = (int_64)0
	*(($0 + [664])) = (int_64)0
	*(($0 + [672])) = (int_64)0
	*(($0 + [680])) = (int_64)0
	*(($0 + [688])) = (int_64)0
	*(($0 + [696])) = (int_64)0
	*(($0 + [704])) = (int_64)0
	*(($0 + [712])) = (int_64)0
	*(($0 + [720])) = (int_64)0
	*(($0 + [728])) = (int_64)0
	*(($0 + [736])) = (int_64)0
	*(($0 + [744])) = (int_64)0
	*($0 + [768]) = $1
	*(($0 + [776])) = $1
	*(($0 + [784])) = (int_64)-1
	*(($0 + [792])) = (int_64)0
	*($0 + [808]) = $1
	*(($0 + [800])) = [0]
	*(($0 + [816])) = $1
	*(($0 + [824])) = (int_64)-1
	*(($0 + [832])) = (int_64)0
	*(($0 + [840])) = [0]
	*($0 + [848]) = $1
	*(($0 + [856])) = $1
	*(($0 + [864])) = (int_64)-1
	*(($0 + [872])) = (int_64)0
	*(($0 + [880])) = [0]
	*(($0 + [904])) = (int_64)0
	*(($0 + [912])) = (int_64)0
	*(($0 + [920])) = (int_64)0
	*(($0 + [928])) = (int_64)0
	*(($0 + [936])) = (int_64)0
	*(($0 + [944])) = (int_64)0
	*(($0 + [960])) = (int_64)0
	*(($0 + [952])) = (int_64)0
	*(($0 + [968])) = (int_64)0
	*(($0 + [976])) = (int_64)0
	*(($0 + [984])) = (int_64)0
	*(($0 + [992])) = (int_64)0
	*(($0 + [1032])) = (int_64)0
	*($4 + [8]) = (int_64)0
	*($4) = (int_64)1
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$5 }
	CALL eosio_assert([0], [14622])
	goto $label$4 
	
.LABEL $label$5
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$1 = (int_64)0
	
.LOOP $label$6:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$7
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$6 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$2 
	
.LABEL $label$3
	$1 = (int_64)0
	
.LABEL $label$2
	$8 = ($0 + [888])
	$9 = ($0 + [848])
	$10 = ($0 + [480])
	$11 = ($0 + [440])
	*(($4 + [24])) = ((int_64)$1 | (int_64)4)
	*($4 + [16]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$1 = $2
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$12 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [14769])
	
.LABEL $label$8
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$16 }
	CALL eosio_assert([0], [14622])
	goto $label$15 
	
.LABEL $label$16
	if ( ($3 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$1 = (int_64)0
	
.LOOP $label$17:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$18
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$17 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$13 
	
.LABEL $label$14
	$1 = (int_64)0
	
.LABEL $label$13
	*(($4 + [40])) = ((int_64)$1 | (int_64)4)
	*($4 + [32]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$22 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$22
	$1 = $2
	
.LOOP $label$23:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$20 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$23 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	CALL eosio_assert([0], [14769])
	
.LABEL $label$19
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$27 }
	CALL eosio_assert([0], [14622])
	goto $label$26 
	
.LABEL $label$27
	if ( ($3 == 0) ){ goto $label$25 }
	
.LABEL $label$26
	$1 = (int_64)0
	
.LOOP $label$28:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$29 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$29
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$28 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$24 
	
.LABEL $label$25
	$1 = (int_64)0
	
.LABEL $label$24
	*(($4 + [56])) = ((int_64)$1 | (int_64)4)
	*($4 + [48]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$32:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$31 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$33 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$32 }
	goto $label$30 
	
.LABEL $label$33
	$1 = $2
	
.LOOP $label$34:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$31 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$34 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$32 }
	goto $label$30 
	
.LABEL $label$31
	CALL eosio_assert([0], [14769])
	
.LABEL $label$30
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$38 }
	CALL eosio_assert([0], [14622])
	goto $label$37 
	
.LABEL $label$38
	if ( ($3 == 0) ){ goto $label$36 }
	
.LABEL $label$37
	$1 = (int_64)0
	
.LOOP $label$39:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$40 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$40
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$39 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$35 
	
.LABEL $label$36
	$1 = (int_64)0
	
.LABEL $label$35
	*(($4 + [72])) = ((int_64)$1 | (int_64)4)
	*($4 + [64]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$43:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$42 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$44 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$44
	$1 = $2
	
.LOOP $label$45:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$42 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$45 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$42
	CALL eosio_assert([0], [14769])
	
.LABEL $label$41
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$49 }
	CALL eosio_assert([0], [14622])
	goto $label$48 
	
.LABEL $label$49
	if ( ($3 == 0) ){ goto $label$47 }
	
.LABEL $label$48
	$1 = (int_64)0
	
.LOOP $label$50:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$51 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$51
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$50 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$46 
	
.LABEL $label$47
	$1 = (int_64)0
	
.LABEL $label$46
	*(($4 + [88])) = ((int_64)$1 | (int_64)4)
	*($4 + [80]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$54:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$53 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$55 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$54 }
	goto $label$52 
	
.LABEL $label$55
	$1 = $2
	
.LOOP $label$56:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$53 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$56 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$54 }
	goto $label$52 
	
.LABEL $label$53
	CALL eosio_assert([0], [14769])
	
.LABEL $label$52
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$60 }
	CALL eosio_assert([0], [14622])
	goto $label$59 
	
.LABEL $label$60
	if ( ($3 == 0) ){ goto $label$58 }
	
.LABEL $label$59
	$1 = (int_64)0
	
.LOOP $label$61:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$62 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$62
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$61 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$57 
	
.LABEL $label$58
	$1 = (int_64)0
	
.LABEL $label$57
	*(($4 + [104])) = ((int_64)$1 | (int_64)4)
	*($4 + [96]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$65:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$64 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$66 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$65 }
	goto $label$63 
	
.LABEL $label$66
	$1 = $2
	
.LOOP $label$67:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$64 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$67 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$65 }
	goto $label$63 
	
.LABEL $label$64
	CALL eosio_assert([0], [14769])
	
.LABEL $label$63
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$71 }
	CALL eosio_assert([0], [14622])
	goto $label$70 
	
.LABEL $label$71
	if ( ($3 == 0) ){ goto $label$69 }
	
.LABEL $label$70
	$1 = (int_64)0
	
.LOOP $label$72:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$73 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$73
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$72 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$68 
	
.LABEL $label$69
	$1 = (int_64)0
	
.LABEL $label$68
	*(($4 + [120])) = ((int_64)$1 | (int_64)4)
	*($4 + [112]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$76:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$75 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$77 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$76 }
	goto $label$74 
	
.LABEL $label$77
	$1 = $2
	
.LOOP $label$78:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$75 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$78 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$76 }
	goto $label$74 
	
.LABEL $label$75
	CALL eosio_assert([0], [14769])
	
.LABEL $label$74
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$82 }
	CALL eosio_assert([0], [14622])
	goto $label$81 
	
.LABEL $label$82
	if ( ($3 == 0) ){ goto $label$80 }
	
.LABEL $label$81
	$1 = (int_64)0
	
.LOOP $label$83:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$84 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$84
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$83 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$79 
	
.LABEL $label$80
	$1 = (int_64)0
	
.LABEL $label$79
	*(($4 + [136])) = ((int_64)$1 | (int_64)4)
	*($4 + [128]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$87:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$86 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$88 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$87 }
	goto $label$85 
	
.LABEL $label$88
	$1 = $2
	
.LOOP $label$89:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$86 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$89 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$87 }
	goto $label$85 
	
.LABEL $label$86
	CALL eosio_assert([0], [14769])
	
.LABEL $label$85
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$93 }
	CALL eosio_assert([0], [14622])
	goto $label$92 
	
.LABEL $label$93
	if ( ($3 == 0) ){ goto $label$91 }
	
.LABEL $label$92
	$1 = (int_64)0
	
.LOOP $label$94:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$95 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$95
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$94 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$90 
	
.LABEL $label$91
	$1 = (int_64)0
	
.LABEL $label$90
	*(($4 + [152])) = ((int_64)$1 | (int_64)4)
	*($4 + [144]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$98:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$97 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$99 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$98 }
	goto $label$96 
	
.LABEL $label$99
	$1 = $2
	
.LOOP $label$100:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$97 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$100 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$98 }
	goto $label$96 
	
.LABEL $label$97
	CALL eosio_assert([0], [14769])
	
.LABEL $label$96
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$104 }
	CALL eosio_assert([0], [14622])
	goto $label$103 
	
.LABEL $label$104
	if ( ($3 == 0) ){ goto $label$102 }
	
.LABEL $label$103
	$1 = (int_64)0
	
.LOOP $label$105:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$106 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$106
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$105 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$101 
	
.LABEL $label$102
	$1 = (int_64)0
	
.LABEL $label$101
	*(($4 + [168])) = ((int_64)$1 | (int_64)4)
	*($4 + [160]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$109:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$108 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$110 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$109 }
	goto $label$107 
	
.LABEL $label$110
	$1 = $2
	
.LOOP $label$111:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$108 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$111 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$109 }
	goto $label$107 
	
.LABEL $label$108
	CALL eosio_assert([0], [14769])
	
.LABEL $label$107
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$115 }
	CALL eosio_assert([0], [14622])
	goto $label$114 
	
.LABEL $label$115
	if ( ($3 == 0) ){ goto $label$113 }
	
.LABEL $label$114
	$1 = (int_64)0
	
.LOOP $label$116:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$117 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$117
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$116 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$112 
	
.LABEL $label$113
	$1 = (int_64)0
	
.LABEL $label$112
	*(($4 + [184])) = ((int_64)$1 | (int_64)4)
	*($4 + [176]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$120:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$119 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$121 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$120 }
	goto $label$118 
	
.LABEL $label$121
	$1 = $2
	
.LOOP $label$122:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$119 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$122 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$120 }
	goto $label$118 
	
.LABEL $label$119
	CALL eosio_assert([0], [14769])
	
.LABEL $label$118
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$126 }
	CALL eosio_assert([0], [14622])
	goto $label$125 
	
.LABEL $label$126
	if ( ($3 == 0) ){ goto $label$124 }
	
.LABEL $label$125
	$1 = (int_64)0
	
.LOOP $label$127:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$128 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$128
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$127 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$123 
	
.LABEL $label$124
	$1 = (int_64)0
	
.LABEL $label$123
	*(($4 + [200])) = ((int_64)$1 | (int_64)4)
	*($4 + [192]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$131:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$130 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$132 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$131 }
	goto $label$129 
	
.LABEL $label$132
	$1 = $2
	
.LOOP $label$133:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$130 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$133 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$131 }
	goto $label$129 
	
.LABEL $label$130
	CALL eosio_assert([0], [14769])
	
.LABEL $label$129
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$137 }
	CALL eosio_assert([0], [14622])
	goto $label$136 
	
.LABEL $label$137
	if ( ($3 == 0) ){ goto $label$135 }
	
.LABEL $label$136
	$1 = (int_64)0
	
.LOOP $label$138:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$139 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$139
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$138 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$134 
	
.LABEL $label$135
	$1 = (int_64)0
	
.LABEL $label$134
	*(($4 + [216])) = ((int_64)$1 | (int_64)4)
	*($4 + [208]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$142:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$141 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$143 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$142 }
	goto $label$140 
	
.LABEL $label$143
	$1 = $2
	
.LOOP $label$144:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$141 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$144 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$142 }
	goto $label$140 
	
.LABEL $label$141
	CALL eosio_assert([0], [14769])
	
.LABEL $label$140
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$148 }
	CALL eosio_assert([0], [14622])
	goto $label$147 
	
.LABEL $label$148
	if ( ($3 == 0) ){ goto $label$146 }
	
.LABEL $label$147
	$1 = (int_64)0
	
.LOOP $label$149:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$150 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$150
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$149 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$145 
	
.LABEL $label$146
	$1 = (int_64)0
	
.LABEL $label$145
	*(($4 + [232])) = ((int_64)$1 | (int_64)4)
	*($4 + [224]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$153:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$152 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$154 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$153 }
	goto $label$151 
	
.LABEL $label$154
	$1 = $2
	
.LOOP $label$155:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$152 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$155 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$153 }
	goto $label$151 
	
.LABEL $label$152
	CALL eosio_assert([0], [14769])
	
.LABEL $label$151
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$159 }
	CALL eosio_assert([0], [14622])
	goto $label$158 
	
.LABEL $label$159
	if ( ($3 == 0) ){ goto $label$157 }
	
.LABEL $label$158
	$1 = (int_64)0
	
.LOOP $label$160:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$161 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$161
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$160 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$156 
	
.LABEL $label$157
	$1 = (int_64)0
	
.LABEL $label$156
	*(($4 + [248])) = ((int_64)$1 | (int_64)4)
	*($4 + [240]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$164:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$163 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$165 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$164 }
	goto $label$162 
	
.LABEL $label$165
	$1 = $2
	
.LOOP $label$166:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$163 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$166 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$164 }
	goto $label$162 
	
.LABEL $label$163
	CALL eosio_assert([0], [14769])
	
.LABEL $label$162
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$170 }
	CALL eosio_assert([0], [14622])
	goto $label$169 
	
.LABEL $label$170
	if ( ($3 == 0) ){ goto $label$168 }
	
.LABEL $label$169
	$1 = (int_64)0
	
.LOOP $label$171:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$172 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$172
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$171 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$167 
	
.LABEL $label$168
	$1 = (int_64)0
	
.LABEL $label$167
	*(($4 + [264])) = ((int_64)$1 | (int_64)4)
	*($4 + [256]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$175:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$174 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$176 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$175 }
	goto $label$173 
	
.LABEL $label$176
	$1 = $2
	
.LOOP $label$177:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$174 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$177 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$175 }
	goto $label$173 
	
.LABEL $label$174
	CALL eosio_assert([0], [14769])
	
.LABEL $label$173
	*($4 + [272]) = (int_64)4294967296
	*($4 + [280]) = ((int_64)CALL $86() / (int_64)1000000)
	$3 = *(($0 + [468]))
	if ( ((int_32)$3 == (int_32)*(($0 + [464]))) ){ goto $label$179 }
	$3 = *(($3 + [-24]))
	if ( ((int_32)*($3 + [288]) == (int_32)$11) ){ goto $label$178 }
	CALL eosio_assert([0], [14937])
	goto $label$178 
	
.LABEL $label$179
	$3 = [0]
	$5 = CALL db_find_i64(*(($0 + [440])), *(($0 + [448])), (int_64)-4812882651501297664, (int_64)-4812882651501297664)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$178 }
	$3 = CALL $125($11, $5)
	if ( ((int_32)*($3 + [288]) == (int_32)$11) ){ goto $label$178 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$178
	CALL memcpy(($4 + [288]), ( $3 ? $4 : $3 ), [288])
	CALL memcpy($10, ($4 + [288]), [284])
	$1 = (int_64)0
	*($4 + [8]) = (int_64)0
	*($4) = (int_64)1
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$182 }
	CALL eosio_assert([0], [14622])
	goto $label$181 
	
.LABEL $label$182
	if ( ($3 == 0) ){ goto $label$180 }
	
.LABEL $label$181
	$1 = (int_64)0
	
.LOOP $label$183:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$184 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$184
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$183 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$180
	*(($4 + [24])) = ((int_64)$1 | (int_64)4)
	*($4 + [16]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$187:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$186 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$188 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$187 }
	goto $label$185 
	
.LABEL $label$188
	$1 = $2
	
.LOOP $label$189:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$186 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$189 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$187 }
	goto $label$185 
	
.LABEL $label$186
	CALL eosio_assert([0], [14769])
	
.LABEL $label$185
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$193 }
	CALL eosio_assert([0], [14622])
	goto $label$192 
	
.LABEL $label$193
	if ( ($3 == 0) ){ goto $label$191 }
	
.LABEL $label$192
	$1 = (int_64)0
	
.LOOP $label$194:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$195 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$195
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$194 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$190 
	
.LABEL $label$191
	$1 = (int_64)0
	
.LABEL $label$190
	*(($4 + [40])) = ((int_64)$1 | (int_64)4)
	*($4 + [32]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$198:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$197 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$199 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$198 }
	goto $label$196 
	
.LABEL $label$199
	$1 = $2
	
.LOOP $label$200:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$197 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$200 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$198 }
	goto $label$196 
	
.LABEL $label$197
	CALL eosio_assert([0], [14769])
	
.LABEL $label$196
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$204 }
	CALL eosio_assert([0], [14622])
	goto $label$203 
	
.LABEL $label$204
	if ( ($3 == 0) ){ goto $label$202 }
	
.LABEL $label$203
	$1 = (int_64)0
	
.LOOP $label$205:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$206 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$206
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$205 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$201 
	
.LABEL $label$202
	$1 = (int_64)0
	
.LABEL $label$201
	*(($4 + [56])) = ((int_64)$1 | (int_64)4)
	*($4 + [48]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$209:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$208 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$210 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$209 }
	goto $label$207 
	
.LABEL $label$210
	$1 = $2
	
.LOOP $label$211:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$208 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$211 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$209 }
	goto $label$207 
	
.LABEL $label$208
	CALL eosio_assert([0], [14769])
	
.LABEL $label$207
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$215 }
	CALL eosio_assert([0], [14622])
	goto $label$214 
	
.LABEL $label$215
	if ( ($3 == 0) ){ goto $label$213 }
	
.LABEL $label$214
	$1 = (int_64)0
	
.LOOP $label$216:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$217 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$217
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$216 }
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$212 
	
.LABEL $label$213
	$1 = (int_64)4
	
.LABEL $label$212
	*(($4 + [72])) = $1
	*($4 + [64]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$220:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$219 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$221 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$220 }
	goto $label$218 
	
.LABEL $label$221
	$1 = $2
	
.LOOP $label$222:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$219 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$222 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$220 }
	goto $label$218 
	
.LABEL $label$219
	CALL eosio_assert([0], [14769])
	
.LABEL $label$218
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$226 }
	CALL eosio_assert([0], [14622])
	goto $label$225 
	
.LABEL $label$226
	if ( ($3 == 0) ){ goto $label$224 }
	
.LABEL $label$225
	$1 = (int_64)0
	
.LOOP $label$227:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$228 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$228
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$227 }
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$223 
	
.LABEL $label$224
	$1 = (int_64)4
	
.LABEL $label$223
	*(($4 + [88])) = $1
	*($4 + [80]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$231:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$230 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$232 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$231 }
	goto $label$229 
	
.LABEL $label$232
	$1 = $2
	
.LOOP $label$233:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$230 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$233 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$231 }
	goto $label$229 
	
.LABEL $label$230
	CALL eosio_assert([0], [14769])
	
.LABEL $label$229
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$237 }
	CALL eosio_assert([0], [14622])
	goto $label$236 
	
.LABEL $label$237
	if ( ($3 == 0) ){ goto $label$235 }
	
.LABEL $label$236
	$1 = (int_64)0
	
.LOOP $label$238:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$239 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$239
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$238 }
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$234 
	
.LABEL $label$235
	$1 = (int_64)4
	
.LABEL $label$234
	*(($4 + [104])) = $1
	*($4 + [96]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$242:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$241 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$243 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$242 }
	goto $label$240 
	
.LABEL $label$243
	$1 = $2
	
.LOOP $label$244:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$241 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$244 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$242 }
	goto $label$240 
	
.LABEL $label$241
	CALL eosio_assert([0], [14769])
	
.LABEL $label$240
	*($4 + [120]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [128]) = (int_64)0
	*($4 + [136]) = (int_64)0
	*($4 + [144]) = (int_64)0
	$3 = *(($0 + [876]))
	if ( ((int_32)$3 == (int_32)*(($0 + [872]))) ){ goto $label$246 }
	$3 = *(($3 + [-24]))
	if ( ((int_32)*($3 + [152]) == (int_32)$9) ){ goto $label$245 }
	CALL eosio_assert([0], [14937])
	goto $label$245 
	
.LABEL $label$246
	$3 = [0]
	$5 = CALL db_find_i64(*(($0 + [848])), *(($0 + [856])), (int_64)5310426098504302592, (int_64)5310426098504302592)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$245 }
	$3 = CALL $126($9, $5)
	if ( ((int_32)*($3 + [152]) == (int_32)$9) ){ goto $label$245 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$245
	CALL memcpy(($4 + [288]), ( $3 ? $4 : $3 ), [152])
	CALL memcpy($8, ($4 + [288]), [152])
	$global$0 = ($4 + [608])
	return $0
}

void .FUNC $122 (int_64 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL $72($2, $0)
	$3 = CALL $63($2, [0], [13119])
	$4 = ($3 + [8])
	*((($2 + [16]) + [8])) = *($4)
	*($2 + [16]) = *($3)
	*($3) = (int_64)0
	*($4) = [0]
	$3 = *($1)
	$4 = ($3 & [1])
	$1 = CALL $61(($2 + [16]), ( *($1 + [8]) ? ($1 + [1]) : $4 ), ( *($1 + [4]) ? uint_32($3 >> [1]) : $4 ))
	$3 = ($1 + [8])
	*((($2 + [32]) + [8])) = *($3)
	*($2 + [32]) = *($1)
	*($1) = (int_64)0
	*($3) = [0]
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$1 }
	CALL $9(*($2 + [24]))
	
.LABEL $label$1
	if ( ((*($2) & [1]) == 0) ){ goto $label$2 }
	CALL $9(*($2 + [8]))
	
.LABEL $label$2
	CALL eosio_assert([0], ( *($2 + [40]) ? (($2 + [32]) | [1]) : (*($2 + [32]) & [1]) ))
	if ( ((*($2 + [32]) & [1]) == 0) ){ goto $label$3 }
	CALL $9(*(($2 + [40])))
	
.LABEL $label$3
	$global$0 = ($2 + [48])
}

int_32 .FUNC $288 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [1120])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [1096]) = (int_64)0
	*($4 + [1088]) = (int_64)0
	*($4 + [1104]) = [0]
	*($4 + [1076]) = $2
	*($4 + [1072]) = $2
	*($4 + [1080]) = ($2 + $7)
	*($4 + [1112]) = ($4 + [1072])
	*($4 + [32]) = ($4 + [1088])
	CALL $306(($4 + [32]), ($4 + [1112]))
	$3 = *($4 + [1080])
	*((($4 + [16]) + [8])) = $3
	*(($4 + [8])) = $3
	$8 = *($4 + [1072])
	*($4) = $8
	*($4 + [16]) = $8
	$9 = CALL $123(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$10 = *($4 + [1104])
	$0 = *($4 + [1096])
	$1 = *($4 + [1088])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $10), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $127($9)
	$global$0 = ($4 + [1120])
	return [1]
}

int_32 .FUNC $289 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [1504])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	CALL memset(($4 + [1088]), [0], [136])
	*(($4 + [1104])) = (int_64)0
	*(($4 + [1112])) = (int_64)0
	*(($4 + [1128])) = [0]
	*(($4 + [1144])) = (int_64)0
	*(($4 + [1152])) = (int_64)0
	*(($4 + [1168])) = (int_64)0
	*(($4 + [1176])) = (int_64)0
	*(($4 + [1192])) = [0]
	*($4 + [1096]) = (int_64)0
	*($4 + [1120]) = (int_64)0
	*($4 + [1136]) = (int_64)0
	*($4 + [1160]) = (int_64)0
	*($4 + [1184]) = (int_64)0
	*($4 + [1224]) = (int_64)0
	*($4 + [1076]) = $2
	*($4 + [1072]) = $2
	*($4 + [1080]) = ($2 + $7)
	*($4 + [1368]) = ($4 + [1072])
	*($4 + [36]) = (($4 + [1088]) + [8])
	*($4 + [40]) = ($4 + [1108])
	*($4 + [44]) = ($4 + [1120])
	*($4 + [48]) = ($4 + [1132])
	*($4 + [52]) = ($4 + [1136])
	*($4 + [56]) = ($4 + [1148])
	*($4 + [60]) = ($4 + [1160])
	*($4 + [64]) = ($4 + [1172])
	*($4 + [68]) = ($4 + [1184])
	*($4 + [72]) = ($4 + [1196])
	*($4 + [76]) = ($4 + [1197])
	*($4 + [80]) = ($4 + [1198])
	*($4 + [84]) = ($4 + [1199])
	*($4 + [88]) = ($4 + [1200])
	*($4 + [92]) = ($4 + [1204])
	*($4 + [96]) = ($4 + [1208])
	*($4 + [100]) = ($4 + [1212])
	*($4 + [104]) = ($4 + [1216])
	*($4 + [32]) = ($4 + [1088])
	*($4 + [108]) = ($4 + [1220])
	CALL $296(($4 + [32]), ($4 + [1368]))
	$3 = (($4 + [1088]) + [136])
	$8 = *($4 + [1076])
	if ( ((uint_32)(*($4 + [1080]) - $8) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$8 = *($4 + [1076])
	
.LABEL $label$4
	CALL memcpy($3, $8, [8])
	*($4 + [1076]) = (*($4 + [1076]) + [8])
	$8 = *((($4 + [1072]) + [8]))
	*((($4 + [16]) + [8])) = $8
	*(($4 + [8])) = $8
	$9 = *($4 + [1072])
	*($4) = $9
	*($4 + [16]) = $9
	$10 = CALL $123(($4 + [32]), $0, $1, $4)
	$11 = (($4 + [32]) + int_32($5 >> [1]))
	$8 = CALL $154(($4 + [1232]), ($4 + [1088]))
	$0 = *($3)
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($11) + $6))
	
.LABEL $label$5
	$5 = CALL $154(($4 + [1368]), $8)
	CALL void $11((int_32 $5), (int_32 $0), (int_64 $6))
	CALL $156($5)
	CALL $156($8)
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	CALL $127($10)
	CALL $156(($4 + [1088]))
	$global$0 = ($4 + [1504])
	return [1]
}

int_32 .FUNC $127 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $128(($0 + [440]), ($0 + [480]), *($0))
	CALL $129(($0 + [848]), ($0 + [888]), *($0))
	$1 = *(($0 + [872]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [876])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $9($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [872]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$1
	$1 = *(($0 + [832]))
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [836])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $130($4)
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($0 + [832]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$6
	$1 = *(($0 + [792]))
	if ( ($1 == 0) ){ goto $label$11 }
	$2 = ($0 + [796])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $9($4)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$14 }
	$3 = *(($0 + [792]))
	goto $label$12 
	
.LABEL $label$13
	$3 = $1
	
.LABEL $label$12
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$11
	$1 = *(($0 + [464]))
	if ( ($1 == 0) ){ goto $label$16 }
	$2 = ($0 + [468])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$20 }
	CALL $9($4)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$19 }
	$3 = *(($0 + [464]))
	goto $label$17 
	
.LABEL $label$18
	$3 = $1
	
.LABEL $label$17
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$16
	$1 = *(($0 + [424]))
	if ( ($1 == 0) ){ goto $label$21 }
	$2 = ($0 + [428])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$23 }
	
.LOOP $label$24:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$25 }
	CALL $9($4)
	
.LABEL $label$25
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$24 }
	$3 = *(($0 + [424]))
	goto $label$22 
	
.LABEL $label$23
	$3 = $1
	
.LABEL $label$22
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$21
	$1 = *(($0 + [384]))
	if ( ($1 == 0) ){ goto $label$26 }
	$2 = ($0 + [388])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$28 }
	
.LOOP $label$29:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$30 }
	CALL $9($4)
	
.LABEL $label$30
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$29 }
	$3 = *(($0 + [384]))
	goto $label$27 
	
.LABEL $label$28
	$3 = $1
	
.LABEL $label$27
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$26
	$1 = *(($0 + [344]))
	if ( ($1 == 0) ){ goto $label$31 }
	$2 = ($0 + [348])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$33 }
	
.LOOP $label$34:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$35 }
	CALL $9($4)
	
.LABEL $label$35
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$34 }
	$3 = *(($0 + [344]))
	goto $label$32 
	
.LABEL $label$33
	$3 = $1
	
.LABEL $label$32
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$31
	$1 = *(($0 + [304]))
	if ( ($1 == 0) ){ goto $label$36 }
	$2 = ($0 + [308])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$38 }
	
.LOOP $label$39:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$40 }
	CALL $9($4)
	
.LABEL $label$40
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$39 }
	$3 = *(($0 + [304]))
	goto $label$37 
	
.LABEL $label$38
	$3 = $1
	
.LABEL $label$37
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$36
	$1 = *(($0 + [264]))
	if ( ($1 == 0) ){ goto $label$41 }
	$2 = ($0 + [268])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$43 }
	
.LOOP $label$44:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$45 }
	CALL $9($4)
	
.LABEL $label$45
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$44 }
	$3 = *(($0 + [264]))
	goto $label$42 
	
.LABEL $label$43
	$3 = $1
	
.LABEL $label$42
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$41
	$1 = *(($0 + [224]))
	if ( ($1 == 0) ){ goto $label$46 }
	$2 = ($0 + [228])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$48 }
	
.LOOP $label$49:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$50 }
	CALL $9($4)
	
.LABEL $label$50
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$49 }
	$3 = *(($0 + [224]))
	goto $label$47 
	
.LABEL $label$48
	$3 = $1
	
.LABEL $label$47
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$46
	$1 = *(($0 + [184]))
	if ( ($1 == 0) ){ goto $label$51 }
	$2 = ($0 + [188])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$53 }
	
.LOOP $label$54:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$55 }
	CALL $9($4)
	
.LABEL $label$55
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$54 }
	$3 = *(($0 + [184]))
	goto $label$52 
	
.LABEL $label$53
	$3 = $1
	
.LABEL $label$52
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$51
	$1 = *(($0 + [144]))
	if ( ($1 == 0) ){ goto $label$56 }
	$2 = ($0 + [148])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$58 }
	
.LOOP $label$59:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$60 }
	CALL $9($4)
	
.LABEL $label$60
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$59 }
	$3 = *(($0 + [144]))
	goto $label$57 
	
.LABEL $label$58
	$3 = $1
	
.LABEL $label$57
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$56
	$1 = *(($0 + [104]))
	if ( ($1 == 0) ){ goto $label$61 }
	$2 = ($0 + [108])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$63 }
	
.LOOP $label$64:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$65 }
	CALL $9($4)
	
.LABEL $label$65
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$64 }
	$3 = *(($0 + [104]))
	goto $label$62 
	
.LABEL $label$63
	$3 = $1
	
.LABEL $label$62
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$61
	CALL $131(($0 + [32]), ($0 + [72]), *($0))
	$1 = *(($0 + [56]))
	if ( ($1 == 0) ){ goto $label$66 }
	$2 = ($0 + [60])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$68 }
	
.LOOP $label$69:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$70 }
	CALL $9($4)
	
.LABEL $label$70
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$69 }
	$3 = *(($0 + [56]))
	goto $label$67 
	
.LABEL $label$68
	$3 = $1
	
.LABEL $label$67
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$66
	return $0
}

void .FUNC $183 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [200]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	$6 = *($3)
	*($1 + [144]) = *($6 + [144])
	$7 = *($6 + [32])
	CALL __multi3($5, $7, (int_64)$7 >> (int_64)63), (int_64)1000000, (int_64)0)
	*($1 + [32]) = $7
	$8 = *(($6 + [40]))
	*(($1 + [40])) = $8
	$7 = *($1)
	$10 = *(($5 + [8]))
	$9 = *($5)
	if ( (( (uint_64)($9 <= (int_64)4611686018427387904) ? ((int_64)$10 < (int_64)0) : (int_64)($10 == 0) ) == 0) ){ goto $label$4 }
	if ( ( ((uint_64)$9 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$10 > (int_64)-1) : ((int_64)$10 == (int_64)-1) ) ){ goto $label$3 }
	CALL eosio_assert([0], [14853])
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [14829])
	
.LABEL $label$3
	$6 = *($3 + [4])
	if ( ((int_64)*($6) == (int_64)0) ){ goto $label$7 }
	if ( ((int_64)$8 == (int_64)*($6 + [8])) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [14789])
	if ( ((int_64)$8 == (int_64)*($6 + [8])) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [14878])
	
.LABEL $label$5
	*($1 + [160]) = ((int_64)$9 / (int_64)*($6))
	$3 = *($3 + [8])
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [120]))) ){ goto $label$8 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$8
	$10 = ((int_64)*($1 + [112]) + (int_64)*($3))
	*($1 + [112]) = $10
	if ( ((int_64)$10 <= (int_64)-4611686018427387904) ){ goto $label$13 }
	if ( ((int_64)$10 >= (int_64)4611686018427387904) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [15059])
	if ( ((int_64)*(($1 + [112])) < (int_64)4611686018427387904) ){ goto $label$11 }
	
.LABEL $label$12
	CALL eosio_assert([0], [15078])
	if ( ((int_64)$7 != (int_64)*($1)) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [15228])
	
.LABEL $label$9
	$4 = $4
	$3 = ($4 + [-208])
	$global$0 = $3
	*($5 + [20]) = $3
	*($5 + [16]) = $3
	*($5 + [24]) = ($4 + [-12])
	CALL $367(($5 + [16]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $3, [196])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$14 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	$global$0 = ($5 + [32])
}

int_32 .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([304])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [112]) = (int_64)0
	*($5 + [120]) = (int_64)0
	*($5 + [128]) = (int_64)0
	*($5 + [136]) = (int_64)0
	*($5 + [144]) = (int_64)0
	*($5 + [152]) = (int_64)0
	*($5 + [160]) = (int_64)0
	*($5 + [176]) = (int_64)0
	*($5 + [168]) = (int_64)0
	*($5 + [184]) = (int_64)0
	*($5 + [192]) = (int_64)0
	*($5 + [200]) = (int_64)0
	*($5 + [208]) = (int_64)0
	*($5 + [216]) = (int_64)0
	*($5 + [224]) = (int_64)0
	*($5 + [232]) = (int_64)0
	*($5 + [240]) = (int_64)0
	*($5 + [248]) = (int_64)0
	*($5 + [256]) = (int_64)0
	*($5 + [264]) = (int_64)0
	*($5 + [288]) = $0
	CALL $348(($3 + [32]), $5)
	*($5 + [292]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)-4812882651501297664
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)-4812882651501297664
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $349(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $124 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([24])) + [8]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)-4420681754180845568
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = (int_64)-4420681754180845568
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $331(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $2($2)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $9($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $182 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$1 = CALL $15([12244])
	if ( ($1 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [14622])
	goto $label$3 
	
.LABEL $label$4
	if ( ($1 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = (int_64)0
	
.LOOP $label$5:
	$3 = *(($1 + [12243]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$6
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$5 }
	$4 = ((int_64)$2 << (int_64)8)
	goto $label$1 
	
.LABEL $label$2
	$4 = (int_64)0
	
.LABEL $label$1
	$2 = (uint_64)$4 >> (uint_64)(int_64)8)
	$5 = ((int_64)$4 | (int_64)4)
	$1 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$2 = $4
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$6 = ($1 + [1])
	$1 = $6
	if ( $3 ){ goto $label$11 }
	$1 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [14769])
	
.LABEL $label$7
	*(($0 + [552])) = $5
	$4 = (int_64)0
	*(($0 + [544])) = (int_64)0
	$1 = CALL $15([12244])
	if ( ($1 <= [8]) ){ goto $label$14 }
	CALL eosio_assert([0], [14622])
	goto $label$13 
	
.LABEL $label$14
	if ( ($1 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$2 = (int_64)0
	
.LOOP $label$15:
	$3 = *(($1 + [12243]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$16 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$16
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$15 }
	$4 = ((int_64)$2 << (int_64)8)
	
.LABEL $label$12
	$2 = (uint_64)$4 >> (uint_64)(int_64)8)
	$5 = ((int_64)$4 | (int_64)4)
	$1 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$20
	$2 = $4
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$6 = ($1 + [1])
	$1 = $6
	if ( $3 ){ goto $label$21 }
	$1 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	CALL eosio_assert([0], [14769])
	
.LABEL $label$17
	*(($0 + [536])) = $5
	$4 = (int_64)0
	*(($0 + [528])) = (int_64)0
	$1 = CALL $15([12244])
	if ( ($1 <= [8]) ){ goto $label$24 }
	CALL eosio_assert([0], [14622])
	goto $label$23 
	
.LABEL $label$24
	if ( ($1 == 0) ){ goto $label$22 }
	
.LABEL $label$23
	$2 = (int_64)0
	
.LOOP $label$25:
	$3 = *(($1 + [12243]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$26 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$26
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$25 }
	$4 = ((int_64)$2 << (int_64)8)
	
.LABEL $label$22
	$2 = (uint_64)$4 >> (uint_64)(int_64)8)
	$5 = ((int_64)$4 | (int_64)4)
	$1 = [0]
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$30 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$30
	$2 = $4
	
.LOOP $label$31:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$28 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$6 = ($1 + [1])
	$1 = $6
	if ( $3 ){ goto $label$31 }
	$1 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	CALL eosio_assert([0], [14769])
	
.LABEL $label$27
	*(($0 + [568])) = $5
	$4 = (int_64)0
	*(($0 + [560])) = (int_64)0
	$1 = CALL $15([12244])
	if ( ($1 <= [8]) ){ goto $label$34 }
	CALL eosio_assert([0], [14622])
	goto $label$33 
	
.LABEL $label$34
	if ( ($1 == 0) ){ goto $label$32 }
	
.LABEL $label$33
	$2 = (int_64)0
	
.LOOP $label$35:
	$3 = *(($1 + [12243]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$36 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$36
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$35 }
	$4 = ((int_64)$2 << (int_64)8)
	
.LABEL $label$32
	$2 = (uint_64)$4 >> (uint_64)(int_64)8)
	$5 = ((int_64)$4 | (int_64)4)
	$1 = [0]
	
.LOOP $label$39:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$38 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$40 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$39 }
	goto $label$37 
	
.LABEL $label$40
	$2 = $4
	
.LOOP $label$41:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$38 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$6 = ($1 + [1])
	$1 = $6
	if ( $3 ){ goto $label$41 }
	$1 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$39 }
	goto $label$37 
	
.LABEL $label$38
	CALL eosio_assert([0], [14769])
	
.LABEL $label$37
	*(($0 + [584])) = $5
	*(($0 + [576])) = (int_64)0
	$1 = CALL $15([12244])
	if ( ($1 <= [8]) ){ goto $label$45 }
	CALL eosio_assert([0], [14622])
	goto $label$44 
	
.LABEL $label$45
	if ( ($1 == 0) ){ goto $label$43 }
	
.LABEL $label$44
	$2 = (int_64)0
	
.LOOP $label$46:
	$3 = *(($1 + [12243]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$47 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$47
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$46 }
	$5 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$42 
	
.LABEL $label$43
	$5 = (int_64)4
	
.LABEL $label$42
	$2 = (uint_64)$5 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$50:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$49 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$51 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$50 }
	goto $label$48 
	
.LABEL $label$51
	$2 = $4
	
.LOOP $label$52:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$49 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$6 = ($1 + [1])
	$1 = $6
	if ( $3 ){ goto $label$52 }
	$1 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$50 }
	goto $label$48 
	
.LABEL $label$49
	CALL eosio_assert([0], [14769])
	
.LABEL $label$48
	*(($0 + [696])) = $5
	*(($0 + [688])) = (int_64)0
	$1 = CALL $15([12244])
	if ( ($1 <= [8]) ){ goto $label$56 }
	CALL eosio_assert([0], [14622])
	goto $label$55 
	
.LABEL $label$56
	if ( ($1 == 0) ){ goto $label$54 }
	
.LABEL $label$55
	$2 = (int_64)0
	
.LOOP $label$57:
	$3 = *(($1 + [12243]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$58 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$58
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$57 }
	$5 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$53 
	
.LABEL $label$54
	$5 = (int_64)4
	
.LABEL $label$53
	$2 = (uint_64)$5 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$61:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$60 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$62 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$61 }
	goto $label$59 
	
.LABEL $label$62
	$2 = $4
	
.LOOP $label$63:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$60 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$6 = ($1 + [1])
	$1 = $6
	if ( $3 ){ goto $label$63 }
	$1 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$61 }
	goto $label$59 
	
.LABEL $label$60
	CALL eosio_assert([0], [14769])
	
.LABEL $label$59
	*(($0 + [712])) = $5
	*(($0 + [704])) = (int_64)0
	$1 = CALL $15([12244])
	if ( ($1 <= [8]) ){ goto $label$67 }
	CALL eosio_assert([0], [14622])
	goto $label$66 
	
.LABEL $label$67
	if ( ($1 == 0) ){ goto $label$65 }
	
.LABEL $label$66
	$2 = (int_64)0
	
.LOOP $label$68:
	$3 = *(($1 + [12243]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$69 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$69
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$68 }
	$5 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$64 
	
.LABEL $label$65
	$5 = (int_64)4
	
.LABEL $label$64
	$2 = (uint_64)$5 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$72:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$71 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$73 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$72 }
	goto $label$70 
	
.LABEL $label$73
	$2 = $4
	
.LOOP $label$74:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$71 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$6 = ($1 + [1])
	$1 = $6
	if ( $3 ){ goto $label$74 }
	$1 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$72 }
	goto $label$70 
	
.LABEL $label$71
	CALL eosio_assert([0], [14769])
	
.LABEL $label$70
	*(($0 + [728])) = $5
	*(($0 + [720])) = (int_64)0
	$1 = CALL $15([12244])
	if ( ($1 <= [8]) ){ goto $label$78 }
	CALL eosio_assert([0], [14622])
	goto $label$77 
	
.LABEL $label$78
	if ( ($1 == 0) ){ goto $label$76 }
	
.LABEL $label$77
	$2 = (int_64)0
	
.LOOP $label$79:
	$3 = *(($1 + [12243]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$80 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$80
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$79 }
	$5 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$75 
	
.LABEL $label$76
	$5 = (int_64)4
	
.LABEL $label$75
	$2 = (uint_64)$5 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$83:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$82 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$84 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$83 }
	goto $label$81 
	
.LABEL $label$84
	$2 = $4
	
.LOOP $label$85:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$82 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$6 = ($1 + [1])
	$1 = $6
	if ( $3 ){ goto $label$85 }
	$1 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$83 }
	goto $label$81 
	
.LABEL $label$82
	CALL eosio_assert([0], [14769])
	
.LABEL $label$81
	*(($0 + [744])) = $5
	*(($0 + [736])) = (int_64)0
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *($4)
	*($1) = *($5)
	*($1 + [8]) = *($5 + [8])
	$6 = *($0)
	$7 = *($4 + [8])
	*(($1 + [24])) = *(($5 + [24]))
	*($1 + [16]) = *($5 + [16])
	$5 = *($4 + [4])
	*($1 + [32]) = *($5)
	*(($1 + [40])) = *(($5 + [8]))
	$5 = CALL $15([12285])
	if ( ($5 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [14622])
	goto $label$3 
	
.LABEL $label$4
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = (int_64)0
	
.LOOP $label$5:
	$9 = *(($5 + [12284]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$6
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$5 }
	$10 = ((int_64)$8 << (int_64)8)
	goto $label$1 
	
.LABEL $label$2
	$10 = (int_64)0
	
.LABEL $label$1
	$8 = (uint_64)$10 >> (uint_64)(int_64)8)
	$11 = ((int_64)$10 | (int_64)4)
	$5 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$10 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$8 = $10
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$8 = $10
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$12 = ($5 + [1])
	$5 = $12
	if ( $9 ){ goto $label$11 }
	$5 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [14769])
	
.LABEL $label$7
	$10 = (int_64)0
	*($1 + [48]) = (int_64)0
	*(($1 + [56])) = $11
	$5 = CALL $15([12244])
	if ( ($5 <= [8]) ){ goto $label$14 }
	CALL eosio_assert([0], [14622])
	goto $label$13 
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$8 = (int_64)0
	
.LOOP $label$15:
	$9 = *(($5 + [12243]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$16 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$16
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$15 }
	$10 = ((int_64)$8 << (int_64)8)
	
.LABEL $label$12
	$8 = (uint_64)$10 >> (uint_64)(int_64)8)
	$11 = ((int_64)$10 | (int_64)4)
	$5 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$10 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$8 = $10
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$20
	$8 = $10
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$12 = ($5 + [1])
	$5 = $12
	if ( $9 ){ goto $label$21 }
	$5 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	CALL eosio_assert([0], [14769])
	
.LABEL $label$17
	$10 = (int_64)0
	*($1 + [64]) = (int_64)0
	*(($1 + [72])) = $11
	$5 = CALL $15([12244])
	if ( ($5 <= [8]) ){ goto $label$24 }
	CALL eosio_assert([0], [14622])
	goto $label$23 
	
.LABEL $label$24
	if ( ($5 == 0) ){ goto $label$22 }
	
.LABEL $label$23
	$8 = (int_64)0
	
.LOOP $label$25:
	$9 = *(($5 + [12243]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$26 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$26
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$25 }
	$10 = ((int_64)$8 << (int_64)8)
	
.LABEL $label$22
	$8 = (uint_64)$10 >> (uint_64)(int_64)8)
	$11 = ((int_64)$10 | (int_64)4)
	$5 = [0]
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$10 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$30 }
	$8 = $10
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$30
	$8 = $10
	
.LOOP $label$31:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$28 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$12 = ($5 + [1])
	$5 = $12
	if ( $9 ){ goto $label$31 }
	$5 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	CALL eosio_assert([0], [14769])
	
.LABEL $label$27
	*($1 + [80]) = (int_64)0
	*(($1 + [88])) = $11
	$5 = CALL $15([12285])
	if ( ($5 <= [8]) ){ goto $label$35 }
	CALL eosio_assert([0], [14622])
	goto $label$34 
	
.LABEL $label$35
	if ( ($5 == 0) ){ goto $label$33 }
	
.LABEL $label$34
	$8 = (int_64)0
	
.LOOP $label$36:
	$9 = *(($5 + [12284]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$37 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$37
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$36 }
	$11 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)4)
	goto $label$32 
	
.LABEL $label$33
	$11 = (int_64)4
	
.LABEL $label$32
	$8 = (uint_64)$11 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$40:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$39 }
	$10 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$41 }
	$8 = $10
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$41
	$8 = $10
	
.LOOP $label$42:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$39 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$12 = ($5 + [1])
	$5 = $12
	if ( $9 ){ goto $label$42 }
	$5 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	CALL eosio_assert([0], [14769])
	
.LABEL $label$38
	*($1 + [96]) = (int_64)0
	*(($1 + [104])) = $11
	$5 = CALL $15([12244])
	if ( ($5 <= [8]) ){ goto $label$46 }
	CALL eosio_assert([0], [14622])
	goto $label$45 
	
.LABEL $label$46
	if ( ($5 == 0) ){ goto $label$44 }
	
.LABEL $label$45
	$8 = (int_64)0
	
.LOOP $label$47:
	$9 = *(($5 + [12243]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$48 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$48
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$47 }
	$11 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)4)
	goto $label$43 
	
.LABEL $label$44
	$11 = (int_64)4
	
.LABEL $label$43
	$8 = (uint_64)$11 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$51:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$50 }
	$10 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$52 }
	$8 = $10
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$52
	$8 = $10
	
.LOOP $label$53:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$50 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$12 = ($5 + [1])
	$5 = $12
	if ( $9 ){ goto $label$53 }
	$5 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$50
	CALL eosio_assert([0], [14769])
	
.LABEL $label$49
	*($1 + [112]) = (int_64)0
	*(($1 + [120])) = $11
	$5 = CALL $15([12244])
	if ( ($5 <= [8]) ){ goto $label$57 }
	CALL eosio_assert([0], [14622])
	goto $label$56 
	
.LABEL $label$57
	if ( ($5 == 0) ){ goto $label$55 }
	
.LABEL $label$56
	$8 = (int_64)0
	
.LOOP $label$58:
	$9 = *(($5 + [12243]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$59 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$59
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$58 }
	$11 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)4)
	goto $label$54 
	
.LABEL $label$55
	$11 = (int_64)4
	
.LABEL $label$54
	$8 = (uint_64)$11 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$62:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$61 }
	$10 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$63 }
	$8 = $10
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$62 }
	goto $label$60 
	
.LABEL $label$63
	$8 = $10
	
.LOOP $label$64:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$61 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$12 = ($5 + [1])
	$5 = $12
	if ( $9 ){ goto $label$64 }
	$5 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$62 }
	goto $label$60 
	
.LABEL $label$61
	CALL eosio_assert([0], [14769])
	
.LABEL $label$60
	*($1 + [128]) = (int_64)0
	*(($1 + [136])) = $11
	*($1 + [144]) = *(*($4) + [40])
	$8 = CALL $86()
	$10 = *($1 + [32])
	CALL __multi3($3, $10, (int_64)$10 >> (int_64)63), (int_64)1000000, (int_64)0)
	*($1 + [152]) = ((int_64)$8 / (int_64)1000000)
	*($1 + [168]) = ((int_64)*(($7 + [488])) + (int_64)1)
	*($1 + [176]) = ((int_64)*($7 + [480]) + (int_64)1)
	$11 = *(($1 + [40]))
	$8 = *(($3 + [8]))
	$10 = *($3)
	if ( (( (uint_64)($10 <= (int_64)4611686018427387904) ? ((int_64)$8 < (int_64)0) : (int_64)($8 == 0) ) == 0) ){ goto $label$66 }
	if ( ( ((uint_64)$10 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$8 > (int_64)-1) : ((int_64)$8 == (int_64)-1) ) ){ goto $label$65 }
	CALL eosio_assert([0], [14853])
	goto $label$65 
	
.LABEL $label$66
	CALL eosio_assert([0], [14829])
	
.LABEL $label$65
	$5 = *($4 + [12])
	if ( ((int_64)*($5) == (int_64)0) ){ goto $label$69 }
	if ( ((int_64)$11 == (int_64)*($5 + [8])) ){ goto $label$67 }
	goto $label$68 
	
.LABEL $label$69
	CALL eosio_assert([0], [14789])
	if ( ((int_64)$11 == (int_64)*($5 + [8])) ){ goto $label$67 }
	
.LABEL $label$68
	CALL eosio_assert([0], [14878])
	
.LABEL $label$67
	*($1 + [184]) = (int_64)0
	*($1 + [192]) = (int_64)0
	*($1 + [160]) = ((int_64)$10 / (int_64)*($5))
	$9 = $2
	$5 = ($9 + [-208])
	$global$0 = $5
	*($3 + [20]) = $5
	*($3 + [16]) = $5
	*($3 + [24]) = ($9 + [-12])
	CALL $367(($3 + [16]), $1)
	$8 = *($1)
	*($1 + [204]) = CALL db_store_i64(*($6 + [8]), (int_64)-6031319021931067904, *(*($0 + [8])), $8, $5, [196])
	if ( (uint_64)($8 <= *($6 + [16])) ){ goto $label$70 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$70
	$global$0 = ($3 + [32])
}

void .FUNC $184 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [200]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	$6 = *($3)
	*($1 + [8]) = *($6 + [8])
	$7 = *($1)
	if ( ((int_64)*(($6 + [24])) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$3
	$8 = ((int_64)*($1 + [16]) + (int_64)*($6 + [16]))
	*($1 + [16]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [15059])
	$8 = *(($1 + [16]))
	
.LABEL $label$4
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$5
	$6 = *($3 + [4])
	if ( ((int_64)*($6 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$6 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$6
	$8 = ((int_64)*($1 + [32]) + (int_64)*($6))
	*($1 + [32]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [15059])
	$8 = *(($1 + [32]))
	
.LABEL $label$7
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [15078])
	$8 = *(($1 + [32]))
	
.LABEL $label$8
	CALL __multi3($5, $8, (int_64)$8 >> (int_64)63), (int_64)1000000, (int_64)0)
	$9 = *(($1 + [40]))
	$8 = *(($5 + [8]))
	$10 = *($5)
	if ( (( (uint_64)($10 <= (int_64)4611686018427387904) ? ((int_64)$8 < (int_64)0) : (int_64)($8 == 0) ) == 0) ){ goto $label$10 }
	if ( ( ((uint_64)$10 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$8 > (int_64)-1) : ((int_64)$8 == (int_64)-1) ) ){ goto $label$9 }
	CALL eosio_assert([0], [14853])
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert([0], [14829])
	
.LABEL $label$9
	$3 = *($3 + [8])
	if ( ((int_64)*($3) == (int_64)0) ){ goto $label$13 }
	if ( ((int_64)$9 == (int_64)*($3 + [8])) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [14789])
	if ( ((int_64)$9 == (int_64)*($3 + [8])) ){ goto $label$11 }
	
.LABEL $label$12
	CALL eosio_assert([0], [14878])
	
.LABEL $label$11
	*($1 + [160]) = ((int_64)$10 / (int_64)*($3))
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$14 }
	CALL eosio_assert([0], [15228])
	
.LABEL $label$14
	$4 = $4
	$3 = ($4 + [-208])
	$global$0 = $3
	*($5 + [20]) = $3
	*($5 + [16]) = $3
	*($5 + [24]) = ($4 + [-12])
	CALL $367(($5 + [16]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $3, [196])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	$global$0 = ($5 + [32])
}

void .FUNC $187 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [14622])
	goto $label$3 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = (int_64)0
	
.LOOP $label$5:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$6
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$5 }
	$6 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)4
	
.LABEL $label$1
	$4 = (uint_64)$6 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$7 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$4 = $7
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$4 = $7
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$8 = ($3 + [1])
	$3 = $8
	if ( $5 ){ goto $label$11 }
	$3 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [14769])
	
.LABEL $label$7
	*($2 + [16]) = [12273]
	*($2 + [20]) = CALL $15([12273])
	*($2 + [8]) = *($2 + [16])
	$8 = CALL $99(($2 + [24]), ($2 + [8]))
	$7 = *($1)
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [14622])
	goto $label$14 
	
.LABEL $label$15
	if ( ($3 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$4 = (int_64)0
	
.LOOP $label$16:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$17
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$16 }
	$4 = ((int_64)$4 & (int_64)72057594037927935)
	goto $label$12 
	
.LABEL $label$13
	$4 = (int_64)0
	
.LABEL $label$12
	CALL $191(($2 + [32]), *($8), $7, $4)
	*($0 + [8]) = $6
	*($0) = (int_64)0
	if ( ((int_64)*($2 + [40]) == (int_64)$6) ){ goto $label$18 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$18
	$4 = *($2 + [32])
	*($0) = $4
	if ( ((int_64)$4 <= (int_64)-4611686018427387904) ){ goto $label$19 }
	if ( ((int_64)$4 < (int_64)4611686018427387904) ){ goto $label$20 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$20
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$19
	CALL eosio_assert([0], [15059])
	$global$0 = ($2 + [48])
}

void .FUNC $186 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $358 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$0 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $0, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $359 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [132]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [15887])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-8463262820711136768)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [15833])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [15833])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $199(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $354 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = ($global$0 - [240])
	$global$0 = $3
	*($0 + [16]) = (int_64)0
	*($0 + [32]) = (int_64)0
	*($0 + [48]) = (int_64)0
	*($0 + [64]) = (int_64)0
	*($0 + [80]) = (int_64)0
	*($0 + [96]) = (int_64)0
	*($0 + [144]) = (int_64)0
	*($0 + [152]) = $1
	*(($0 + [24])) = (int_64)0
	*(($0 + [40])) = (int_64)0
	*(($0 + [56])) = (int_64)0
	*(($0 + [72])) = (int_64)0
	*(($0 + [88])) = (int_64)0
	*(($0 + [104])) = (int_64)0
	$1 = *($2)
	$0 = CALL memcpy($0, *(*($2 + [4])), [152])
	*($3 + [168]) = ($3 + [152])
	*($3 + [164]) = $3
	*($3 + [160]) = $3
	*($3 + [176]) = ($3 + [160])
	*($3 + [188]) = ($0 + [8])
	*($3 + [184]) = $0
	*($3 + [192]) = ($0 + [16])
	*($3 + [196]) = ($0 + [32])
	*($3 + [200]) = ($0 + [48])
	*($3 + [204]) = ($0 + [64])
	*($3 + [208]) = ($0 + [80])
	*($3 + [212]) = ($0 + [96])
	*($3 + [216]) = ($0 + [112])
	*($3 + [220]) = ($0 + [120])
	*($3 + [224]) = ($0 + [128])
	*($3 + [228]) = ($0 + [136])
	*($3 + [232]) = ($0 + [144])
	CALL $355(($3 + [184]), ($3 + [176]))
	*($0 + [156]) = CALL db_store_i64(*($1 + [8]), (int_64)5310426098504302592, *(*($2 + [8])), (int_64)5310426098504302592, $3, [152])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)5310426098504302592) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)5310426098504302593
	
.LABEL $label$1
	$global$0 = ($3 + [240])
	return $0
}

void .FUNC $355 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15287])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15287])
	$3 = *($5)
	
.LABEL $label$10
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15287])
	$3 = *($5)
	
.LABEL $label$12
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [15287])
	$3 = *($5)
	
.LABEL $label$14
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$17
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$18
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [48])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [15287])
	$1 = *(($0 + [4]))
	
.LABEL $label$19
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $356 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	$2 = (*($0) + [8])
	*($0) = $2
	$3 = *($1 + [8])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *(($1 + [8]))
	$3 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$2 = ($3 + $2)
	*($0) = $2
	
.LABEL $label$2
	$2 = ($2 + [5])
	*($0) = $2
	$3 = *($1 + [28])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [32])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	$3 = *(($1 + [28]))
	$3 = ( *(($1 + [32])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$2 = ($3 + $2)
	*($0) = $2
	
.LABEL $label$4
	$3 = *($1 + [40])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [44])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$5 }
	*($0) = $2
	$3 = *(($1 + [40]))
	$3 = ( *(($1 + [44])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$6 }
	$2 = ($3 + $2)
	*($0) = $2
	
.LABEL $label$6
	$3 = *($1 + [52])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [56])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$7:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$7 }
	*($0) = $2
	$3 = *(($1 + [52]))
	$3 = ( *(($1 + [56])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$8 }
	$2 = ($3 + $2)
	*($0) = $2
	
.LABEL $label$8
	$3 = *($1 + [64])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [68])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	$3 = *(($1 + [64]))
	$3 = ( *(($1 + [68])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$10 }
	$2 = ($3 + $2)
	*($0) = $2
	
.LABEL $label$10
	$3 = *($1 + [76])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [80])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$11:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$11 }
	*($0) = $2
	$3 = *(($1 + [76]))
	$3 = ( *(($1 + [80])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$12 }
	$2 = ($3 + $2)
	*($0) = $2
	
.LABEL $label$12
	$2 = ($2 + [32])
	*($0) = $2
	$3 = *($1 + [120])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [124])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$13:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$13 }
	*($0) = $2
	$3 = *(($1 + [120]))
	$3 = ( *(($1 + [124])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$14 }
	$2 = ($3 + $2)
	*($0) = $2
	
.LABEL $label$14
	$3 = *($1 + [132])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [136])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	$1 = *(($1 + [132]))
	$1 = ( *(($1 + [136])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ($1 == 0) ){ goto $label$16 }
	*($0) = ($1 + $2)
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $357 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	CALL $347(CALL $347($0, ($1 + [120])), ($1 + [132]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$3 = ($1 + [20])
	$2 = *($0 + [4])
	$0 = CALL $347($0, ($1 + [8]))
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$2 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $3, [4])
	$2 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $2
	$3 = ($1 + [24])
	if ( ((int_32)(*(($0 + [8])) - $2) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [1])
	*(($2 = ($0 + [4]))) = (*($2) + [1])
	$3 = ($1 + [88])
	$2 = *($0 + [4])
	$0 = CALL $347(CALL $347(CALL $347(CALL $347(CALL $347($0, ($1 + [28])), ($1 + [40])), ($1 + [52])), ($1 + [64])), ($1 + [76]))
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$2 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $3, [4])
	$2 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $2
	$3 = ($1 + [92])
	$4 = ($0 + [8])
	if ( ((int_32)(*($4) - $2) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$2 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $3, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$5 = ($1 + [96])
	if ( ((int_32)(*($4) - $3) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$3 = *($2)
	
.LABEL $label$6
	CALL memcpy($3, $5, [4])
	$3 = (*($2) + [4])
	*($2) = $3
	$2 = ($1 + [100])
	$4 = ($0 + [8])
	if ( ((int_32)(*($4) - $3) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [15287])
	$3 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $2, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$5 = ($1 + [104])
	if ( ((int_32)(*($4) - $3) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15287])
	$3 = *($2)
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [112])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15287])
	$3 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $2, [8])
	return *(($2 = ($0 + [4]))) = (*($2) + [8])
}

void .FUNC $350 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15011])
	$3 = *($5)
	
.LABEL $label$10
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15011])
	$3 = *($5)
	
.LABEL $label$12
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [15011])
	$3 = *($5)
	
.LABEL $label$14
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$17
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$18
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [48])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [15011])
	$1 = *(($0 + [4]))
	
.LABEL $label$19
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $351 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $352 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = ($global$0 - [304])
	$global$0 = $3
	*($0 + [16]) = (int_64)0
	*($0 + [32]) = (int_64)0
	*($0 + [48]) = (int_64)0
	*($0 + [64]) = (int_64)0
	*($0 + [80]) = (int_64)0
	*($0 + [96]) = (int_64)0
	*($0 + [112]) = (int_64)0
	*($0 + [128]) = (int_64)0
	*($0 + [144]) = (int_64)0
	*($0 + [160]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*(($0 + [40])) = (int_64)0
	*(($0 + [56])) = (int_64)0
	*(($0 + [72])) = (int_64)0
	*(($0 + [88])) = (int_64)0
	*(($0 + [104])) = (int_64)0
	*(($0 + [120])) = (int_64)0
	*(($0 + [136])) = (int_64)0
	*(($0 + [152])) = (int_64)0
	*($0 + [176]) = (int_64)0
	*(($0 + [168])) = (int_64)0
	*(($0 + [184])) = (int_64)0
	*($0 + [192]) = (int_64)0
	*(($0 + [200])) = (int_64)0
	*($0 + [208]) = (int_64)0
	*(($0 + [216])) = (int_64)0
	*($0 + [224]) = (int_64)0
	*(($0 + [232])) = (int_64)0
	*($0 + [240]) = (int_64)0
	*(($0 + [248])) = (int_64)0
	*($0 + [256]) = (int_64)0
	*(($0 + [264])) = (int_64)0
	*($0 + [288]) = $1
	$1 = *($2)
	$0 = CALL memcpy($0, *(*($2 + [4])), [284])
	*($3 + [296]) = ($3 + [284])
	*($3 + [292]) = $3
	*($3 + [288]) = $3
	CALL $353(($3 + [288]), $0)
	*($0 + [292]) = CALL db_store_i64(*($1 + [8]), (int_64)-4812882651501297664, *(*($2 + [8])), (int_64)-4812882651501297664, $3, [284])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-4812882651501297664) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)-4812882651501297663
	
.LABEL $label$1
	$global$0 = ($3 + [304])
	return $0
}

int_32 .FUNC $353 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [4])
	$4 = ($0 + [8])
	$5 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$1
	CALL memcpy($5, $1, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [8])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [16])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [24]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [32])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [40]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [48])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$7
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [56]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$8
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [64])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$9
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [72]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$10
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [80])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$11
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [88]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$12
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [96])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$13
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [104]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$14
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [112])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$15
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [120]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$16
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [128])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$17
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [136]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$18
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [144])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$19
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [152]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$20 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$20
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [160])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$21 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$21
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [168]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$22 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$22
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [176])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$23 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$23
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [184]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$24 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$24
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [192])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$25 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$25
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [200]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$26 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$26
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [208])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$27 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$27
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [216]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$28 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$28
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [224])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$29 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$29
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [232]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$30 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$30
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [240])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$31 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$31
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [248]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$32 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$32
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [256])
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$33 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$33
	CALL memcpy($5, $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [264]))
	if ( ((int_32)(*($4) - $5) > (int_32)[7]) ){ goto $label$34 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$34
	CALL memcpy($5, ($2 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [272])
	if ( ((int_32)(*($4) - $5) > (int_32)[3]) ){ goto $label$35 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$35
	CALL memcpy($5, $6, [4])
	$5 = (*($3) + [4])
	*($3) = $5
	$6 = ($1 + [276])
	if ( ((int_32)(*($4) - $5) > (int_32)[3]) ){ goto $label$36 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$36
	CALL memcpy($5, $6, [4])
	$5 = (*($3) + [4])
	*($3) = $5
	$1 = ($1 + [280])
	if ( ((int_32)(*($4) - $5) > (int_32)[3]) ){ goto $label$37 }
	CALL eosio_assert([0], [15287])
	$5 = *($3)
	
.LABEL $label$37
	CALL memcpy($5, $1, [4])
	*(($3 = ($0 + [4]))) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

int_64 .FUNC $29 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [4]) = $0
	*($3 + [44]) = $0
	*($3) = [0]
	*($3 + [76]) = [-1]
	*($3 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL $26($3, (int_64)0)
	$4 = CALL $28($3, $2, [1], (int_64)-1)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + ((*($3 + [4]) + *($3 + [120])) - *(($3 + [8]))))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return $4
}

void .FUNC $310 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [1120])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [1108]) = $4
	*($3 + [1104]) = $4
	*($3 + [1112]) = ($4 + $5)
	*($3 + [1096]) = [0]
	*($3 + [1088]) = (int_64)0
	CALL $295(($3 + [1104]), ($3 + [1088]))
	$4 = *($3 + [1112])
	*((($3 + [32]) + [8])) = $4
	*(($3 + [8])) = $4
	$6 = *($3 + [1104])
	*($3) = $6
	*($3 + [32]) = $6
	$4 = CALL $52(($3 + [16]), ($3 + [1088]))
	$5 = CALL $123(($3 + [48]), $0, $1, $3)
	CALL $230($5, $4)
	if ( (*($4) & [1]) ){ goto $label$6 }
	CALL $127($5)
	if ( (*($3 + [1088]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $9(*($4 + [8]))
	CALL $127($5)
	if ( ((*($3 + [1088]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($3 + [1096])))
	$global$0 = ($3 + [1120])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [1120])
}

void .FUNC $311 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [1376])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [1364]) = $4
	*($3 + [1360]) = $4
	*($3 + [1368]) = ($4 + $5)
	*(($3 + [1240])) = (int_64)0
	*(($3 + [1248])) = (int_64)0
	*(($3 + [1264])) = [0]
	*(($3 + [1280])) = (int_64)0
	*(($3 + [1288])) = (int_64)0
	*(($3 + [1304])) = (int_64)0
	*(($3 + [1312])) = (int_64)0
	*(($3 + [1328])) = [0]
	*($3 + [1232]) = (int_64)0
	*($3 + [1256]) = (int_64)0
	*($3 + [1272]) = (int_64)0
	*($3 + [1296]) = (int_64)0
	*($3 + [1320]) = (int_64)0
	*($3 + [1216]) = ($3 + [1360])
	*($3 + [180]) = (($3 + [1224]) + [8])
	*($3 + [184]) = ($3 + [1244])
	*($3 + [188]) = ($3 + [1256])
	*($3 + [192]) = ($3 + [1268])
	*($3 + [196]) = ($3 + [1272])
	*($3 + [200]) = ($3 + [1284])
	*($3 + [204]) = ($3 + [1296])
	*($3 + [208]) = ($3 + [1308])
	*($3 + [212]) = ($3 + [1320])
	*($3 + [216]) = ($3 + [1332])
	*($3 + [220]) = ($3 + [1333])
	*($3 + [224]) = ($3 + [1334])
	*($3 + [228]) = ($3 + [1335])
	*($3 + [232]) = ($3 + [1336])
	*($3 + [236]) = ($3 + [1340])
	*($3 + [240]) = ($3 + [1344])
	*($3 + [244]) = ($3 + [1348])
	*($3 + [248]) = ($3 + [1352])
	*($3 + [176]) = ($3 + [1224])
	*($3 + [252]) = ($3 + [1356])
	CALL $296(($3 + [176]), ($3 + [1216]))
	$4 = *($3 + [1364])
	if ( ((uint_32)(*($3 + [1368]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$4 = *($3 + [1364])
	
.LABEL $label$4
	CALL memcpy(($3 + [1216]), $4, [8])
	*($3 + [1364]) = (*($3 + [1364]) + [8])
	$4 = *((($3 + [1360]) + [8]))
	*((($3 + [160]) + [8])) = $4
	*((($3 + [8]) + [8])) = $4
	$6 = *($3 + [1360])
	*($3 + [8]) = $6
	*($3 + [160]) = $6
	$5 = CALL $154(($3 + [24]), ($3 + [1224]))
	$4 = CALL $123(($3 + [176]), $0, $1, ($3 + [8]))
	CALL $155($4, $5, *($3 + [1216]))
	CALL $156($5)
	CALL $127($4)
	CALL $156(($3 + [1224]))
	$global$0 = ($3 + [1376])
}

void .FUNC $21 ()
{
	CALL $19([8220])
}

int_32 .FUNC $20 ()
{
	CALL $18([8220])
	return [8228]
}

void .FUNC $23 (int_32 $0)
{
}

int_32 .FUNC $22 (int_32 $0)
{
	int_32 $1
	return $1
}

int_32 .FUNC $25 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = [-1]
	if ( CALL $24($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($1 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$2 = *($1 + [15])
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

int_32 .FUNC $24 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $27 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$6 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = CALL $25($0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($0 + [8])
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$7 }
	$4 = *($0 + [4])
	$1 = (int_64)
	if ( ((int_64)$1($1 - *($0 + [120]))) <= (int_64)(CASTING int_64)(int_32 ($3 - $4))) ){ goto $label$4 }
	
.LABEL $label$7
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$4
	*($0 + [104]) = (($4 + (CASTING uint_32)(uint_64 $1)) + [-1])
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)*($0 + [120]) + (int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)$2 == (int_32)*($0)) ){ goto $label$8 }
	*($0) = $2
	
.LABEL $label$8
	return $2
}

void .FUNC $26 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($2 - $3))
	*($0 + [120]) = $4
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	if ( ((int_64)$4 <= (int_64)$1) ){ goto $label$1 }
	*($0 + [104]) = ($3 + (CASTING uint_32)(uint_64 $1))
	return 
	
.LABEL $label$1
	*($0 + [104]) = $2
}

int_32 .FUNC $329 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [2])
	$4 = (*($3) + [2])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [32])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [48])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [56])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [64])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [72])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [80])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($0 + [8])
	if ( ((int_32)*($5) != (int_32)$4) ){ goto $label$12 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$12
	CALL memcpy(($2 + [8]), $4, [1])
	$4 = (*($3) + [1])
	*($3) = $4
	*(($1 + [88])) = ((int_32)*($2 + [8]) != (int_32)[0])
	$1 = ($1 + [92])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[3]) ){ goto $label$13 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy($1, $4, [4])
	*(($1 = ($0 + [4]))) = (*($1) + [4])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $328 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1104])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [1080])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [1080])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [15011])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $123(($3 + [40]), $0, $1, ($3 + [8]))
	$0 = *($2)
	*($3 + [1088]) = [13146]
	*($3 + [1092]) = CALL $15([13146])
	*($3) = *($3 + [1088])
	CALL require_auth2($0, *(CALL $99(($3 + [1096]), $3)))
	CALL $127($2)
	$global$0 = ($3 + [1104])
}

void .FUNC $193 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	$4 = ($global$0 - [544])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [200]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *($3 + [8])
	$8 = *($3)
	if ( ((int_64)*($8 + [8]) == (int_64)*(($1 + [72]))) ){ goto $label$3 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$3
	$9 = ((int_64)*($1 + [64]) + (int_64)*($8))
	*($1 + [64]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [15059])
	$9 = *(($1 + [64]))
	
.LABEL $label$4
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$5
	$10 = ($1 + [32])
	$8 = *($3 + [4])
	if ( ((int_64)*($8 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$6 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$6
	$9 = ((int_64)*($10) + (int_64)*($8))
	*($10) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [15059])
	$9 = *($10)
	
.LABEL $label$7
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$8
	$8 = *($3)
	$11 = *(($8 + [8]))
	*((($5 + [448]) + [8])) = $11
	$9 = *($8)
	*((($5 + [48]) + [8])) = $11
	*($5 + [448]) = $9
	*($5 + [48]) = $9
	CALL $253(($5 + [288]), $7, ($5 + [48]), [1])
	if ( ((int_64)*($5 + [296]) == (int_64)*(($1 + [56]))) ){ goto $label$9 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$9
	$9 = ((int_64)*($1 + [48]) + (int_64)*($5 + [288]))
	*($1 + [48]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [15059])
	$9 = *(($1 + [48]))
	
.LABEL $label$10
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$11
	$8 = *($3 + [12])
	if ( ((int_64)*($8 + [8]) == (int_64)*(($1 + [88]))) ){ goto $label$12 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$12
	$9 = ((int_64)*($1 + [80]) + (int_64)*($8))
	*($1 + [80]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$13 }
	CALL eosio_assert([0], [15059])
	$9 = *(($1 + [80]))
	
.LABEL $label$13
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$14 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$14
	*($1 + [144]) = (int_64)15
	$8 = *(*($3 + [16]) + [4])
	*($5 + [144]) = *($8)
	CALL $52((($5 + [144]) + [8]), ($8 + [8]))
	*((($5 + [144]) + [24])) = *(($8 + [24]))
	*($5 + [164]) = *($8 + [20])
	CALL $52((($5 + [144]) + [28]), ($8 + [28]))
	CALL $52((($5 + [144]) + [40]), ($8 + [40]))
	CALL $52((($5 + [144]) + [52]), ($8 + [52]))
	CALL $52((($5 + [144]) + [64]), ($8 + [64]))
	CALL $52((($5 + [144]) + [76]), ($8 + [76]))
	*((($5 + [144]) + [112])) = *(($8 + [112]))
	*((($5 + [144]) + [104])) = *(($8 + [104]))
	*((($5 + [144]) + [96])) = *(($8 + [96]))
	*($5 + [232]) = *($8 + [88])
	CALL $52((($5 + [144]) + [120]), ($8 + [120]))
	CALL $52((($5 + [144]) + [132]), ($8 + [132]))
	$12 = *(($10 + [8]))
	*((($5 + [112]) + [8])) = $12
	$13 = *(*(*($3 + [20]) + [4]))
	$8 = *($3)
	$9 = *($8)
	$11 = *($10)
	$14 = *(($8 + [8]))
	*((($5 + [32]) + [8])) = $14
	*((($5 + [128]) + [8])) = $14
	*((($5 + [16]) + [8])) = $12
	*($5 + [112]) = $11
	*($5 + [128]) = $9
	*($5 + [32]) = $9
	*($5 + [16]) = $11
	CALL $120(($5 + [288]), ($5 + [144]), $13, ($5 + [32]), ($5 + [16]))
	CALL $130(($5 + [144]))
	$9 = *($7)
	*($5 + [80]) = [13263]
	*($5 + [84]) = CALL $15([13263])
	*($5 + [8]) = *($5 + [80])
	$8 = CALL $99(($5 + [88]), ($5 + [8]))
	*($5 + [96]) = $9
	*($5 + [104]) = *($8)
	*($5 + [64]) = [15935]
	*($5 + [68]) = CALL $15([15935])
	*($5) = *($5 + [64])
	$8 = CALL $99(($5 + [72]), $5)
	$9 = CALL $86()
	*((($5 + [480]) + [28])) = (int_64)0
	*(($5 + [524])) = (int_64)0
	*((($5 + [480]) + [52])) = (int_64)0
	*($5 + [492]) = [0]
	*($5 + [496]) = [0]
	*($5 + [500 align=4]) = (int_64)0
	*($5 + [516 align=4]) = (int_64)0
	*($5 + [480]) = ((CASTING uint_32)(uint_64 ((int_64)$9 / (int_64)1000000)) + [60])
	CALL $373(($5 + [516]), ($5 + [96]), $7, $8, ($5 + [288]))
	$9 = ((int_64)*($7 + [72]) + (int_64)1)
	*($7 + [72]) = $9
	$11 = CALL $86()
	*($5 + [464]) = $11
	*($5 + [472]) = ((int_64)$9 | (int_64)$11 >> (int_64)63))
	CALL $171(($5 + [480]), ($5 + [464]), *($7), [0])
	CALL $172(($5 + [480]))
	CALL $121(($5 + [288]))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$15 }
	CALL eosio_assert([0], [15228])
	
.LABEL $label$15
	$3 = $4
	$8 = ($3 + [-208])
	$global$0 = $8
	*($5 + [292]) = $8
	*($5 + [288]) = $8
	*($5 + [296]) = ($3 + [-12])
	CALL $367(($5 + [288]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $8, [196])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$16 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	$global$0 = ($5 + [544])
}

void .FUNC $321 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1152])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [1144])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [1144])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [15011])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$6
	CALL memcpy(($3 + [1136]), $5, [8])
	*($3 + [1128]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$7
	CALL memcpy(($3 + [1128]), $5, [8])
	*($3 + [1120]) = (int_64)0
	*($3 + [1112]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$4 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$8
	CALL memcpy(($3 + [1112]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$9
	CALL memcpy(($3 + [40]), $5, [8])
	*((($3 + [1112]) + [8])) = *($3 + [40])
	*($3 + [1104]) = (int_64)0
	*($3 + [1096]) = (int_64)0
	$5 = ($2 + [40])
	if ( ((int_32)$4 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$10
	CALL memcpy(($3 + [1096]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [48])
	if ( ((int_32)$4 != (int_32)[48]) ){ goto $label$11 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$11
	CALL memcpy(($3 + [40]), $5, [8])
	*((($3 + [1096]) + [8])) = *($3 + [40])
	*($3 + [1088]) = (int_64)0
	*($3 + [1080]) = (int_64)0
	$5 = ($2 + [56])
	if ( ((int_32)$4 != (int_32)[56]) ){ goto $label$12 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$12
	CALL memcpy(($3 + [1080]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [64])
	if ( ((int_32)$4 != (int_32)[64]) ){ goto $label$13 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$13
	CALL memcpy(($3 + [40]), $5, [8])
	*((($3 + [1080]) + [8])) = *($3 + [40])
	*((($3 + [8]) + [8])) = $6
	*($3 + [24]) = $2
	*($3 + [28]) = ($2 + [72])
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $123(($3 + [40]), $0, $1, ($3 + [8]))
	$0 = *($3 + [1128])
	CALL require_auth(*($2))
	CALL require_recipient($0)
	CALL $127($2)
	$global$0 = ($3 + [1152])
}

void .FUNC $320 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1136])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1128]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$5
	CALL memcpy(($3 + [1128]), $2, [8])
	*($3 + [1120]) = (int_64)0
	*($3 + [1112]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [1112]), $5, [8])
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$7
	CALL memcpy(($3 + [72]), $5, [8])
	*(($5 = (($3 + [1112]) + [8]))) = *($3 + [72])
	*((($3 + [24]) + [8])) = $4
	*($3 + [56]) = $2
	*($3 + [60]) = ($2 + [24])
	*($3 + [64]) = $4
	*($3 + [24]) = *($3 + [56])
	$2 = CALL $123(($3 + [72]), $0, $1, ($3 + [24]))
	$0 = *($5)
	*((($3 + [40]) + [8])) = $0
	*((($3 + [8]) + [8])) = $0
	$0 = *($3 + [1112])
	*($3 + [40]) = $0
	*($3 + [8]) = $0
	CALL $224($2, *($3 + [1128]), ($3 + [8]))
	CALL $127($2)
	$global$0 = ($3 + [1136])
}

void .FUNC $323 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1088])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1080]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$5
	CALL memcpy(($3 + [1080]), $2, [8])
	*((($3 + [8]) + [8])) = $5
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $5
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $123(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $269($2, *($3 + [1080]))
	CALL $127($2)
	$global$0 = ($3 + [1088])
}

void .FUNC $322 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_32 $16
	$2 = ($global$0 - [1424])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [1404]) = $4
	*($3 + [1400]) = $4
	*($3 + [1408]) = ($4 + $5)
	*(($3 + [1264])) = (int_64)0
	*(($3 + [1272])) = (int_64)0
	*(($3 + [1288])) = (int_64)0
	*(($3 + [1296])) = (int_64)0
	*(($3 + [1316])) = (int_64)0
	*(($3 + [1324])) = (int_64)0
	*(($3 + [1340])) = (int_64)0
	*(($3 + [1348])) = (int_64)0
	*(($3 + [1364])) = [0]
	*(($5 = (($3 + [1240]) + [136]))) = (int_64)0
	*($3 + [1248]) = (int_64)0
	*($3 + [1256]) = (int_64)0
	*($3 + [1280]) = (int_64)0
	*($3 + [1308 align=4]) = (int_64)0
	*($3 + [1332 align=4]) = (int_64)0
	*($3 + [1356 align=4]) = (int_64)0
	*($3 + [1368]) = (int_64)0
	*($3 + [1384]) = (int_64)0
	*(($2 = (($3 + [1240]) + [152]))) = (int_64)0
	*($3 + [1416]) = ($3 + [1400])
	*($3 + [204]) = (($3 + [1240]) + [8])
	$6 = (($3 + [1240]) + [16])
	*($3 + [208]) = $6
	$7 = (($3 + [1240]) + [28])
	*($3 + [212]) = $7
	$8 = (($3 + [1240]) + [40])
	*($3 + [216]) = $8
	$9 = (($3 + [1240]) + [52])
	*($3 + [220]) = $9
	*($3 + [224]) = ($3 + [1304])
	$10 = (($3 + [1240]) + [68])
	*($3 + [228]) = $10
	$11 = (($3 + [1240]) + [80])
	*($3 + [232]) = $11
	$12 = (($3 + [1240]) + [92])
	*($3 + [236]) = $12
	$13 = (($3 + [1240]) + [104])
	*($3 + [240]) = $13
	$14 = (($3 + [1240]) + [116])
	*($3 + [244]) = $14
	*($3 + [248]) = ($3 + [1368])
	*($3 + [252]) = (($3 + [1240]) + [144])
	*($3 + [200]) = ($3 + [1240])
	CALL $301(($3 + [200]), ($3 + [1416]))
	$4 = *($3 + [1408])
	*((($3 + [184]) + [8])) = $4
	*((($3 + [8]) + [8])) = $4
	$15 = *($3 + [1400])
	*($3 + [8]) = $15
	*($3 + [184]) = $15
	$4 = CALL $123(($3 + [200]), $0, $1, ($3 + [8]))
	*(($16 = (($3 + [24]) + [8]))) = *($3 + [1248])
	*($3 + [24]) = *($3 + [1240])
	CALL $52((($3 + [24]) + [16]), $6)
	CALL $52((($3 + [24]) + [28]), $7)
	CALL $52((($3 + [24]) + [40]), $8)
	CALL $52((($3 + [24]) + [52]), $9)
	*($3 + [88]) = *($3 + [1304])
	CALL $52((($3 + [24]) + [68]), $10)
	CALL $52((($3 + [24]) + [80]), $11)
	CALL $52((($3 + [24]) + [92]), $12)
	CALL $52((($3 + [24]) + [104]), $13)
	CALL $52((($3 + [24]) + [116]), $14)
	*((($3 + [24]) + [152])) = *($2)
	*((($3 + [24]) + [144])) = *($3 + [1384])
	*((($3 + [24]) + [136])) = *($5)
	*($3 + [152]) = *($3 + [1368])
	CALL require_auth(*($4))
	CALL require_recipient(*($16))
	CALL $121(($3 + [24]))
	CALL $127($4)
	CALL $121(($3 + [1240]))
	$global$0 = ($3 + [1424])
}

void .FUNC $325 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [1152])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1124]) = $2
	*($3 + [1120]) = $2
	*($3 + [1128]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$2 = *($3 + [1124])
	
.LABEL $label$5
	CALL memcpy(($3 + [1112]), $2, [8])
	*($3 + [1124]) = ($2 + [8])
	*($3 + [1104]) = [0]
	*($3 + [1096]) = (int_64)0
	CALL $295(($3 + [1120]), ($3 + [1096]))
	$2 = *($3 + [1124])
	$4 = (($3 + [1120]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$2 = *($3 + [1124])
	
.LABEL $label$6
	CALL memcpy(($3 + [1092]), $2, [4])
	*($3 + [1124]) = (*($3 + [1124]) + [4])
	$2 = *($4)
	*((($3 + [32]) + [8])) = $2
	*(($3 + [8])) = $2
	$5 = *($3 + [1120])
	*($3) = $5
	*($3 + [32]) = $5
	$2 = CALL $52(($3 + [16]), ($3 + [1096]))
	$6 = CALL $52(($3 + [1136]), $2)
	$4 = CALL $123(($3 + [48]), $0, $1, $3)
	CALL $148($4, *($3 + [1112]), $6)
	if ( ((*($3 + [1136]) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*($6 + [8]))
	
.LABEL $label$7
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*($2 + [8]))
	
.LABEL $label$8
	CALL $127($4)
	if ( ((*($3 + [1096]) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($3 + [1104])))
	
.LABEL $label$9
	$global$0 = ($3 + [1152])
}

void .FUNC $324 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [1136])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1124]) = $2
	*($3 + [1120]) = $2
	*($3 + [1128]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$2 = *($3 + [1124])
	
.LABEL $label$5
	CALL memcpy(($3 + [1112]), $2, [8])
	*($3 + [1124]) = ($2 + [8])
	*($3 + [1104]) = [0]
	*($3 + [1096]) = (int_64)0
	CALL $295(($3 + [1120]), ($3 + [1096]))
	$2 = *((($3 + [1120]) + [8]))
	*((($3 + [40]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$5 = *($3 + [1120])
	*($3 + [8]) = $5
	*($3 + [40]) = $5
	$2 = CALL $52(($3 + [24]), ($3 + [1096]))
	$4 = CALL $123(($3 + [56]), $0, $1, ($3 + [8]))
	CALL $148($4, *($3 + [1112]), $2)
	if ( (*($2) & [1]) ){ goto $label$8 }
	CALL $127($4)
	if ( (*($3 + [1096]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*($2 + [8]))
	CALL $127($4)
	if ( ((*($3 + [1096]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [1104])))
	$global$0 = ($3 + [1136])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [1136])
}

void .FUNC $327 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1104])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [1096])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [1096])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [15011])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$6
	CALL memcpy(($3 + [1088]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)($4 & [-4]) != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$7
	CALL memcpy(($3 + [1084]), $5, [4])
	*(($3 + [16])) = $6
	*($3 + [24]) = $2
	*($3 + [28]) = ($2 + [20])
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $123(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $164($2, *($3 + [1096]), *($3 + [1088]))
	CALL $127($2)
	$global$0 = ($3 + [1104])
}

void .FUNC $326 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [1520])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [1372]) = $4
	*($3 + [1368]) = $4
	*($3 + [1376]) = ($4 + $5)
	*(($3 + [1248])) = (int_64)0
	*(($3 + [1256])) = (int_64)0
	*(($3 + [1272])) = [0]
	*(($3 + [1288])) = (int_64)0
	*(($3 + [1296])) = (int_64)0
	*(($3 + [1312])) = (int_64)0
	*(($3 + [1320])) = (int_64)0
	*(($3 + [1336])) = [0]
	*($3 + [1240]) = (int_64)0
	*($3 + [1264]) = (int_64)0
	*($3 + [1280]) = (int_64)0
	*($3 + [1304]) = (int_64)0
	*($3 + [1328]) = (int_64)0
	*($3 + [1384]) = ($3 + [1368])
	*($3 + [180]) = (($3 + [1232]) + [8])
	*($3 + [184]) = ($3 + [1252])
	*($3 + [188]) = ($3 + [1264])
	*($3 + [192]) = ($3 + [1276])
	*($3 + [196]) = ($3 + [1280])
	*($3 + [200]) = ($3 + [1292])
	*($3 + [204]) = ($3 + [1304])
	*($3 + [208]) = ($3 + [1316])
	*($3 + [212]) = ($3 + [1328])
	*($3 + [216]) = ($3 + [1340])
	*($3 + [220]) = ($3 + [1341])
	*($3 + [224]) = ($3 + [1342])
	*($3 + [228]) = ($3 + [1343])
	*($3 + [232]) = ($3 + [1344])
	*($3 + [236]) = ($3 + [1348])
	*($3 + [240]) = ($3 + [1352])
	*($3 + [244]) = ($3 + [1356])
	*($3 + [248]) = ($3 + [1360])
	*($3 + [176]) = ($3 + [1232])
	*($3 + [252]) = ($3 + [1364])
	CALL $296(($3 + [176]), ($3 + [1384]))
	$4 = *($3 + [1372])
	if ( ((uint_32)(*($3 + [1376]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$4 = *($3 + [1372])
	
.LABEL $label$4
	CALL memcpy(($3 + [1224]), $4, [8])
	$4 = (*($3 + [1372]) + [8])
	*($3 + [1372]) = $4
	if ( ((uint_32)(*((($3 + [1368]) + [8])) - $4) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$4 = *($3 + [1372])
	
.LABEL $label$5
	CALL memcpy(($3 + [1220]), $4, [4])
	*($3 + [1372]) = (*($3 + [1372]) + [4])
	$4 = *((($3 + [1368]) + [8]))
	*((($3 + [160]) + [8])) = $4
	*((($3 + [8]) + [8])) = $4
	$6 = *($3 + [1368])
	*($3 + [8]) = $6
	*($3 + [160]) = $6
	$4 = CALL $123(($3 + [176]), $0, $1, ($3 + [8]))
	$5 = CALL $154(($3 + [24]), ($3 + [1232]))
	$0 = *($3 + [1224])
	$2 = CALL $154(($3 + [1384]), $5)
	CALL $155($4, $2, $0)
	CALL $156($2)
	CALL $156($5)
	CALL $127($4)
	CALL $156(($3 + [1232]))
	$global$0 = ($3 + [1520])
}

int_32 .FUNC $101 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$4 = ($global$0 - [176])
	$global$0 = $4
	*(($5 = (($4 + [160]) + [8]))) = *(($3 + [8]))
	*($4 + [160]) = *($3)
	*($0) = $1
	*($0 + [8]) = $2
	$3 = *($5)
	*((($4 + [80]) + [8])) = $3
	$2 = *($4 + [160])
	*($0 + [16]) = $2
	*(($0 + [24])) = $3
	*($4 + [80]) = $2
	*(($0 + [40])) = $1
	*($0 + [32]) = $1
	*(($0 + [48])) = (int_64)-1
	$1 = (int_64)0
	*(($0 + [56])) = (int_64)0
	*(($0 + [64])) = [0]
	*(($0 + [80])) = (int_64)0
	*(($0 + [88])) = (int_64)0
	*(($0 + [96])) = (int_64)0
	*(($0 + [104])) = (int_64)0
	*(($0 + [136])) = (int_64)0
	*(($0 + [144])) = [0]
	*($4) = (int_64)0
	$3 = CALL $15([12285])
	if ( ($3 <= [8]) ){ goto $label$3 }
	CALL eosio_assert([0], [14622])
	goto $label$2 
	
.LABEL $label$3
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = (int_64)0
	
.LOOP $label$4:
	$5 = *(($3 + [12284]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$5 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$5
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$4 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$1
	$6 = ($0 + [72])
	$7 = ($0 + [32])
	*(($4 + [16])) = ((int_64)$1 | (int_64)4)
	*($4 + [8]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$1 = $2
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$8 = ($3 + [1])
	$3 = $8
	if ( $5 ){ goto $label$10 }
	$3 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [14769])
	
.LABEL $label$6
	$3 = CALL $15([12285])
	if ( ($3 <= [8]) ){ goto $label$14 }
	CALL eosio_assert([0], [14622])
	goto $label$13 
	
.LABEL $label$14
	if ( ($3 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$1 = (int_64)0
	
.LOOP $label$15:
	$5 = *(($3 + [12284]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$16 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$16
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$15 }
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$11 
	
.LABEL $label$12
	$1 = (int_64)4
	
.LABEL $label$11
	*(($4 + [32])) = $1
	*($4 + [24]) = (int_64)0
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$1 = $2
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$20
	$1 = $2
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$8 = ($3 + [1])
	$3 = $8
	if ( $5 ){ goto $label$21 }
	$3 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	CALL eosio_assert([0], [14769])
	
.LABEL $label$17
	*(($4 + [72])) = [0]
	*($4 + [40]) = (int_64)10000
	*($4 + [48]) = (int_64)0
	*($4 + [56]) = (int_64)0
	*($4 + [64]) = (int_64)0
	$5 = ($4 + [64])
	$3 = CALL $15([12336])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$22 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$25 }
	*(($4 + [64])) = ($3 << [1])
	$8 = ($5 + [1])
	if ( $3 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$5 = (($3 + [16]) & [-16])
	$8 = CALL $7($5)
	*(($4 + [72])) = $8
	*(($4 + [68])) = $3
	*($4 + [64]) = ($5 | [1])
	
.LABEL $label$24
	CALL memcpy($8, [12336], $3)
	
.LABEL $label$23
	$5 = [0]
	*(($8 + $3)) = [0]
	$3 = *(($0 + [60]))
	if ( ((int_32)$3 == (int_32)*(($0 + [56]))) ){ goto $label$27 }
	$5 = *(($3 + [-24]))
	if ( ((int_32)*($5 + [80]) == (int_32)$7) ){ goto $label$26 }
	CALL eosio_assert([0], [14937])
	goto $label$26 
	
.LABEL $label$27
	$3 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)3617214757079089152, (int_64)3617214757079089152)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$26 }
	$5 = CALL $102($7, $3)
	if ( ((int_32)*($5 + [80]) == (int_32)$7) ){ goto $label$26 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$26
	$3 = ( $5 ? $4 : $5 )
	*(($8 = (($4 + [80]) + [56]))) = *(($3 + [56]))
	*(($7 = (($4 + [80]) + [48]))) = *(($3 + [48]))
	*(($9 = (($4 + [80]) + [40]))) = *(($3 + [40]))
	*(($10 = (($4 + [80]) + [32]))) = *(($3 + [32]))
	*(($11 = (($4 + [80]) + [24]))) = *(($3 + [24]))
	*(($12 = (($4 + [80]) + [16]))) = *(($3 + [16]))
	*(($13 = (($4 + [80]) + [8]))) = *(($3 + [8]))
	*($4 + [80]) = *($3)
	$5 = CALL $52((($4 + [80]) + [64]), ($3 + [64]))
	*(($6 + [56])) = *($8)
	*(($6 + [48])) = *($7)
	*(($6 + [40])) = *($9)
	*(($6 + [32])) = *($10)
	*(($6 + [24])) = *($11)
	*(($6 + [16])) = *($12)
	*(($6 + [8])) = *($13)
	*($6) = *($4 + [80])
	$3 = ($0 + [136])
	if ( (*($3) & [1]) ){ goto $label$29 }
	*($3) = [0]
	goto $label$28 
	
.LABEL $label$29
	*(*(($0 + [144]))) = [0]
	*(($0 + [140])) = [0]
	
.LABEL $label$28
	CALL $56($3, [0])
	*(($3 + [8])) = *(($5 + [8]))
	*($3) = *($5)
	*($5) = [0]
	*(($4 + [148])) = [0]
	*((($4 + [80]) + [72])) = [0]
	if ( ((*(($4 + [64])) & [1]) == 0) ){ goto $label$30 }
	CALL $9(*(($4 + [72])))
	
.LABEL $label$30
	$global$0 = ($4 + [176])
	return $0
	
.LABEL $label$22
	CALL $51($5)
	return (unreachable)
}

int_64 .FUNC $100 (int_64 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	$1 = ($global$0 - [64])
	$global$0 = $1
	$2 = CALL $15([12244])
	if ( ($2 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [14622])
	goto $label$5 
	
.LABEL $label$6
	if ( ($2 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$3 = (int_64)0
	
.LOOP $label$7:
	$4 = *(($2 + [12243]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$8
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	if ( ((int_64)((int_64)((int_64)$3 << (int_64)8) | (int_64)4) != (int_64)$0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_64)4 == (int_64)$0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = CALL $15([12285])
	if ( ($2 <= [8]) ){ goto $label$13 }
	CALL eosio_assert([0], [14622])
	goto $label$12 
	
.LABEL $label$13
	if ( ($2 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$3 = (int_64)0
	
.LOOP $label$14:
	$4 = *(($2 + [12284]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$15 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$15
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$14 }
	if ( ((int_64)((int_64)((int_64)$3 << (int_64)8) | (int_64)4) != (int_64)$0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	if ( ((int_64)4 == (int_64)$0) ){ goto $label$9 }
	
.LABEL $label$10
	$2 = CALL $15([12301])
	if ( ($2 <= [8]) ){ goto $label$20 }
	CALL eosio_assert([0], [14622])
	goto $label$19 
	
.LABEL $label$20
	if ( ($2 == 0) ){ goto $label$18 }
	
.LABEL $label$19
	$3 = (int_64)0
	
.LOOP $label$21:
	$4 = *(($2 + [12300]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$22 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$22
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$21 }
	if ( ((int_64)((int_64)((int_64)$3 << (int_64)8) | (int_64)4) != (int_64)$0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	if ( ((int_64)4 == (int_64)$0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL eosio_assert([0], [12319])
	*($1 + [56]) = (int_64)0
	goto $label$1 
	
.LABEL $label$16
	*($1 + [32]) = [12306]
	*($1 + [36]) = CALL $15([12306])
	*($1 + [24]) = *($1 + [32])
	CALL $99(($1 + [56]), ($1 + [24]))
	goto $label$1 
	
.LABEL $label$9
	*($1 + [40]) = [12288]
	*($1 + [44]) = CALL $15([12288])
	*($1 + [16]) = *($1 + [40])
	CALL $99(($1 + [56]), ($1 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*($1 + [48]) = [12273]
	*($1 + [52]) = CALL $15([12273])
	*($1 + [8]) = *($1 + [48])
	CALL $99(($1 + [56]), ($1 + [8]))
	
.LABEL $label$1
	$3 = *($1 + [56])
	$global$0 = ($1 + [64])
	return $3
}

void .FUNC $103 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_64 $13
	$8 = ($global$0 - [96])
	$global$0 = $8
	*($7) = (int_64)0
	$9 = CALL $15([12244])
	if ( ($9 <= [8]) ){ goto $label$5 }
	CALL eosio_assert([0], [14622])
	goto $label$4 
	
.LABEL $label$5
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$10 = (int_64)0
	
.LOOP $label$6:
	$11 = *(($9 + [12243]))
	if ( ((($11 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$7
	$10 = ((int_64)((int_64)$10 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56))
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$6 }
	if ( ((int_64)*($4 + [8]) != (int_64)((int_64)((int_64)$10 << (int_64)8) | (int_64)4)) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_64)*($4 + [8]) == (int_64)4) ){ goto $label$1 }
	
.LABEL $label$2
	*($0) = *($5)
	*(($0 + [8])) = *(($5 + [8]))
	$global$0 = ($8 + [96])
	return 
	
.LABEL $label$1
	$10 = CALL $86()
	$9 = (CASTING uint_32)(uint_64 ((int_64)$10 / (int_64)1000000))
	if ( ((uint_32)*(($1 + [120])) > (uint_32)$9) ){ goto $label$9 }
	if ( ((uint_32)*(($1 + [124])) >= (uint_32)$9) ){ goto $label$8 }
	
.LABEL $label$9
	*($0) = *($5)
	*(($0 + [8])) = *(($5 + [8]))
	$global$0 = ($8 + [96])
	return 
	
.LABEL $label$8
	*(($11 = (($8 + [80]) + [8]))) = *(($4 + [8]))
	*(($12 = (($8 + [64]) + [8]))) = *(($5 + [8]))
	*($8 + [80]) = *($4)
	*($8 + [64]) = *($5)
	$9 = CALL $52(($8 + [48]), $6)
	*((($8 + [32]) + [8])) = *($11)
	*((($8 + [16]) + [8])) = *($12)
	*($8 + [32]) = *($8 + [80])
	*($8 + [16]) = *($8 + [64])
	$11 = CALL $104($1, $2, $3, ($8 + [32]), ($8 + [16]), $9)
	if ( ((*($9) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*($9 + [8]))
	
.LABEL $label$10
	if ( ($11 == 0) ){ goto $label$13 }
	$2 = *(($1 + [112]))
	$10 = *($5)
	CALL __multi3($8, $10, (int_64)$10 >> (int_64)63), $2, (int_64)$2 >> (int_64)63))
	$3 = *($5 + [8])
	$2 = *(($8 + [8]))
	$13 = *($8)
	if ( (( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ) == 0) ){ goto $label$12 }
	if ( ( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ) ){ goto $label$11 }
	CALL eosio_assert([0], [14853])
	goto $label$11 
	
.LABEL $label$13
	*($0) = *($5)
	*(($0 + [8])) = *(($5 + [8]))
	$global$0 = ($8 + [96])
	return 
	
.LABEL $label$12
	CALL eosio_assert([0], [14829])
	
.LABEL $label$11
	$2 = ((int_64)$13 / (int_64)10000)
	$10 = (int_64)
	if ( ((int_64)$10($2 - $10)) <= (int_64)-4611686018427387904) ){ goto $label$15 }
	if ( ((int_64)$10 < (int_64)4611686018427387904) ){ goto $label$14 }
	CALL eosio_assert([0], [15414])
	goto $label$14 
	
.LABEL $label$15
	CALL eosio_assert([0], [15392])
	
.LABEL $label$14
	if ( ((int_64)*(($1 + [104])) == (int_64)$3) ){ goto $label$16 }
	CALL eosio_assert([0], [14878])
	
.LABEL $label$16
	if ( ((int_64)*(($1 + [96])) <= (int_64)$10) ){ goto $label$17 }
	*($0) = $2
	*($7) = (int_64)1
	*($0 + [8]) = $3
	$global$0 = ($8 + [96])
	return 
	
.LABEL $label$17
	*($0) = *($5)
	*(($0 + [8])) = *(($5 + [8]))
	$global$0 = ($8 + [96])
}

int_32 .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([96])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [64 align=4]) = (int_64)0
	*($5 + [72]) = [0]
	*($5 + [80]) = $0
	CALL $345(($3 + [32]), $5)
	*($5 + [84]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)3617214757079089152
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)3617214757079089152
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $346(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [64]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [72])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([112])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [96]) = $0
	CALL $329(($3 + [32]), $5)
	*($5 + [100]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $330(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $104 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	$6 = ($global$0 - [256])
	$global$0 = $6
	$7 = ($0 + [136])
	$8 = *($7)
	if ( ($8 & [1]) ){ goto $label$3 }
	if ( (uint_32($8 >> [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( *(($0 + [140])) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($6 + [256])
	return [0]
	
.LABEL $label$1
	*($6 + [40]) = [12337]
	*($6 + [44]) = CALL $15([12337])
	*($6 + [8]) = *($6 + [40])
	$8 = CALL $99(($6 + [48]), ($6 + [8]))
	*(($9 = (($6 + [24]) + [8]))) = *(($0 + [24]))
	*($6 + [24]) = *($0 + [16 align=4])
	$10 = *($0 + [8])
	$11 = *($8)
	$8 = *($9)
	*((($6 + [224]) + [8])) = $8
	*(($9 = (($6 + [240]) + [8]))) = $8
	$12 = *($6 + [24])
	*($6 + [240]) = $12
	*($6 + [224]) = $12
	$8 = *($9)
	*((($6 + [208]) + [8])) = $8
	*((($6 + [56]) + [24])) = $8
	*($6 + [56]) = $11
	*($6 + [64]) = $10
	$10 = *($6 + [240])
	*($6 + [72]) = $10
	*($6 + [208]) = $10
	*(($6 + [96])) = $11
	*(($6 + [104])) = (int_64)-1
	*(($6 + [112])) = (int_64)0
	*(($6 + [120])) = [0]
	*(($6 + [136])) = $11
	*(($6 + [144])) = (int_64)-1
	*(($6 + [152])) = (int_64)0
	*(($6 + [160])) = [0]
	*(($6 + [176])) = $11
	*((($6 + [56]) + [128])) = (int_64)-1
	*(($6 + [192])) = (int_64)0
	*(($6 + [200])) = [0]
	*($6 + [88]) = $11
	*($6 + [128]) = $11
	*($6 + [168]) = $11
	$8 = CALL db_find_i64($11, $11, (int_64)-6030912134838407168, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$9 = ($6 + [88])
	$8 = CALL $105($9, $8)
	if ( ((int_32)*($8 + [96]) == (int_32)$9) ){ goto $label$5 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$5
	if ( (*($8 + [88]) == 0) ){ goto $label$4 }
	$2 = *($8 + [8])
	
.LABEL $label$4
	$11 = *(($0 + [128]))
	if ( ((int_64)$11 == (int_64)2) ){ goto $label$14 }
	if ( ((int_64)$11 != (int_64)1) ){ goto $label$7 }
	if ( (*($7) & [1]) ){ goto $label$13 }
	$8 = ($7 + [1])
	goto $label$12 
	
.LABEL $label$14
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$11 }
	$9 = [0]
	$13 = *([0] + [11776])
	
.LOOP $label$16:
	*((($6 + [208]) + ($8 = $9))) = *(($13 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$9 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$15 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$16 }
	
.LABEL $label$15
	*(($6 + [248])) = [0]
	*($6 + [240]) = (int_64)0
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$10 }
	*($6 + [240]) = ($9 << [1])
	$13 = (($6 + [240]) | [1])
	goto $label$9 
	
.LABEL $label$13
	$8 = *(($0 + [144]))
	
.LABEL $label$12
	*($6 + [16]) = $8
	*($6 + [20]) = CALL $15($8)
	*($6) = *($6 + [16])
	$8 = [1]
	if ( ((int_64)$2 != (int_64)*(CALL $99(($6 + [208]), $6))) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$11
	*(($6 + [248])) = [0]
	*($6 + [240]) = (int_64)0
	*($6 + [240]) = [0]
	$8 = (($6 + [240]) | [1])
	$9 = $8
	goto $label$8 
	
.LABEL $label$10
	$14 = (($9 + [16]) & [-16])
	$13 = CALL $7($14)
	*($6 + [240]) = ($14 | [1])
	*($6 + [248]) = $13
	*($6 + [244]) = $9
	
.LABEL $label$9
	$14 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$17:
	*(($13 + $8)) = *((($6 + [208]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$14 != (int_32)$8) ){ goto $label$17 }
	$9 = ($13 + $9)
	$8 = (($6 + [240]) | [1])
	
.LABEL $label$8
	*($9) = [0]
	$18 = ( *($6 + [244]) ? uint_32($9 >> [1]) : $16 )
	$9 = *($6 + [240])
	$16 = ($9 & [1])
	$15 = *($6 + [248])
	$17 = ( $15 ? $8 : $16 )
	$19 = ($17 + $18)
	$8 = $19
	$9 = ($9 & [1])
	$9 = *(($0 + [136]))
	$20 = ( *(($0 + [140])) ? uint_32($9 >> [1]) : $9 )
	if ( ($20 == 0) ){ goto $label$18 }
	$8 = $19
	if ( ((int_32)$18 < (int_32)$20) ){ goto $label$18 }
	$14 = ([1] - $20)
	$8 = (( *(($0 + [144])) ? ($7 + [1]) : $9 ) + $20)
	$7 = ($8 + [-2])
	$21 = ($8 + [-1])
	$22 = (($17 + $20) + [-1])
	$23 = $19
	
.LOOP $label$21:
	$13 = $23
	if ( ((int_32)$22 == (int_32)$13) ){ goto $label$20 }
	$23 = ($13 + [-1])
	if ( ((int_32)*($23) != (int_32)*($21)) ){ goto $label$21 }
	$8 = [0]
	
.LOOP $label$22:
	if ( ((int_32)$14 == (int_32)$8) ){ goto $label$19 }
	$9 = ($7 + $8)
	$0 = ($13 + $8)
	$8 = ($8 + [-1])
	if ( ((int_32)*(($0 + [-2])) == (int_32)*($9)) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$20
	$8 = $19
	goto $label$18 
	
.LABEL $label$19
	$8 = (($13 + $8) + [-1])
	
.LABEL $label$18
	$9 = ($8 - $17)
	$9 = ( ( [-1] ? $9 : ((int_32)$8 == (int_32)$19) ) ? $9 : $20 )
	$0 = ($18 - $20)
	if ( ($16 == 0) ){ goto $label$23 }
	CALL $9($15)
	
.LABEL $label$23
	$8 = [1]
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$6 }
	
.LABEL $label$7
	$8 = [0]
	
.LABEL $label$6
	CALL $106(($6 + [56]))
	$global$0 = ($6 + [256])
	return $8
}

void .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $71($0, $1)
	$3 = uint_32($1 >> [4])
	if ( ((uint_32)$3 > (uint_32)[3]) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$6
	CALL $60($0, [12349])
	goto $label$1 
	
.LABEL $label$5
	CALL $108($2, $0, [12369])
	CALL eosio_assert([0], ( *($2 + [8]) ? ($2 | [1]) : (*($2) & [1]) ))
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	CALL $9(*(($2 + [8])))
	goto $label$1 
	
.LABEL $label$4
	CALL $60($0, [12354])
	goto $label$1 
	
.LABEL $label$3
	CALL $60($0, [12359])
	goto $label$1 
	
.LABEL $label$2
	CALL $60($0, [12364])
	
.LABEL $label$1
	$1 = (($1 & [15]) + [-1])
	if ( ((uint_32)$1 > (uint_32)[12]) ){ goto $label$10 }
	goto $label$20 
	
.LABEL $label$20
	CALL $60($0, [12386])
	$global$0 = ($2 + [16])
	return 
	
.LABEL $label$19
	CALL $60($0, [12389])
	$global$0 = ($2 + [16])
	return 
	
.LABEL $label$18
	CALL $60($0, [12392])
	$global$0 = ($2 + [16])
	return 
	
.LABEL $label$17
	CALL $60($0, [12395])
	$global$0 = ($2 + [16])
	return 
	
.LABEL $label$16
	CALL $60($0, [12398])
	$global$0 = ($2 + [16])
	return 
	
.LABEL $label$15
	CALL $60($0, [12401])
	$global$0 = ($2 + [16])
	return 
	
.LABEL $label$14
	CALL $60($0, [12407])
	$global$0 = ($2 + [16])
	return 
	
.LABEL $label$13
	CALL $60($0, [12413])
	$global$0 = ($2 + [16])
	return 
	
.LABEL $label$12
	CALL $60($0, [12420])
	$global$0 = ($2 + [16])
	return 
	
.LABEL $label$11
	CALL $60($0, [12423])
	$global$0 = ($2 + [16])
	return 
	
.LABEL $label$10
	CALL $108($2, $0, [12426])
	CALL eosio_assert([0], ( *($2 + [8]) ? ($2 | [1]) : (*($2) & [1]) ))
	if ( ((*($2) & [1]) == 0) ){ goto $label$21 }
	CALL $9(*(($2 + [8])))
	
.LABEL $label$21
	$global$0 = ($2 + [16])
	return 
	
.LABEL $label$9
	CALL $60($0, [12404])
	$global$0 = ($2 + [16])
	return 
	
.LABEL $label$8
	CALL $60($0, [12410])
	$global$0 = ($2 + [16])
	return 
	
.LABEL $label$7
	CALL $60($0, [12417])
	$global$0 = ($2 + [16])
	$3
	$1
}

int_64 .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$17 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$17 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$18:
	$6 = *($5)
	if ( ($6 <= *($4)) ){ goto $label$20 }
	$6 = CALL $27($0)
	if ( ((uint_32)($6 + [-9]) >= (uint_32)[5]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( (($6 + [-9]) <= [5]) ){ goto $label$18 }
	
.LABEL $label$19
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$18 }
	$5 = ((int_32)$6 == (int_32)[45])
	if ( $5 ){ goto $label$21 }
	if ( ((int_32)$6 != (int_32)[43]) ){ goto $label$16 }
	
.LABEL $label$21
	$7 = ( [-1] ? [0] : $5 )
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$15 }
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$17
	*(CALL $4()) = [22]
	return (int_64)0
	
.LABEL $label$16
	$7 = [0]
	if ( ((int_32)($1 | [16]) == (int_32)[16]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$6 = CALL $27($0)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$13 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$12 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$11 
	
.LABEL $label$13
	$1 = ( $1 ? [10] : $1 )
	if ( ((uint_32)$1 > (uint_32)*(($6 + [8385]))) ){ goto $label$10 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$22 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$22
	CALL $26($0, (int_64)0)
	*(CALL $4()) = [22]
	return (int_64)0
	
.LABEL $label$12
	$6 = CALL $27($0)
	
.LABEL $label$11
	if ( ((int_32)($6 | [32]) != (int_32)[120]) ){ goto $label$23 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$9 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$8 
	
.LABEL $label$23
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$6 }
	$8 = (int_64)0
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$5 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$25:
	$6 = ((int_32)$5 * (int_32)[10])
	$1 = *($2)
	if ( ((uint_32)$1 >= (uint_32)*($9)) ){ goto $label$27 }
	*($2) = ($1 + [1])
	$5 = ($6 + $4)
	$6 = *($1)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 <= (uint_32)[9]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$27
	$5 = ($6 + $4)
	$6 = CALL $27($0)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$24 }
	
.LABEL $label$26
	if ( ($5 <= [429496729]) ){ goto $label$25 }
	
.LABEL $label$24
	$8 = (CASTING uint_64)(uint_32 $5)
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$1 = [10]
	$11 = (CASTING int_64)(int_32 $4)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$28:
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$30 }
	*($4) = ($6 + [1])
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = *($6)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 <= (uint_32)[9]) ){ goto $label$29 }
	goto $label$4 
	
.LABEL $label$30
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = CALL $27($0)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$4 }
	
.LABEL $label$29
	if ( ((uint_64)$8 >= (uint_64)(int_64)1844674407370955162) ){ goto $label$4 }
	$11 = (CASTING int_64)(int_32 $5)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 <= (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$28 }
	goto $label$3 
	
.LABEL $label$9
	$6 = CALL $27($0)
	
.LABEL $label$8
	$1 = [16]
	if ( (*(($6 + [8385])) <= [16]) ){ goto $label$6 }
	$6 = *(($0 + [104]))
	if ( ($6 == 0) ){ goto $label$31 }
	*(($5 = ($0 + [4]))) = (*($5) + [-1])
	
.LABEL $label$31
	if ( ($2 == 0) ){ goto $label$5 }
	$8 = (int_64)0
	if ( ($6 == 0) ){ goto $label$1 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	return (int_64)0
	
.LABEL $label$7
	$1 = [8]
	
.LABEL $label$6
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$32 }
	$8 = (int_64)0
	$5 = *(($6 + [8385]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$33 }
	$4 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$35:
	$4 = ($5 + ((int_32)$4 * (int_32)$1))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($9)) ){ goto $label$37 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [8385]))
	if ( ((uint_32)$4 <= (uint_32)[119304646]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$6 = CALL $27($0)
	$5 = *(($6 + [8385]))
	if ( ((uint_32)$4 > (uint_32)[119304646]) ){ goto $label$34 }
	
.LABEL $label$36
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$35 }
	
.LABEL $label$34
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$33
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$12 = (CASTING uint_64)(uint_32 $1)
	$13 = ((uint_64)(int_64)-1 / (uint_64)$12)
	if ( ((uint_64)$8 > (uint_64)$13) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$38:
	$11 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$10 = ((int_64)$8 * (int_64)$12)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$40 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$39 
	
.LABEL $label$40
	$6 = CALL $27($0)
	
.LABEL $label$39
	$8 = ((int_64)$10 + (int_64)$11)
	$5 = *(($6 + [8385]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$13) ){ goto $label$38 }
	goto $label$3 
	
.LABEL $label$32
	$9 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [8281]))
	$8 = (int_64)0
	$5 = *(($6 + [8385]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$41 }
	$4 = [0]
	$14 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$43:
	$4 = ($5 | ($4 << $9))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($14)) ){ goto $label$45 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [8385]))
	if ( ((uint_32)$4 <= (uint_32)[134217727]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$45
	$6 = CALL $27($0)
	$5 = *(($6 + [8385]))
	if ( ((uint_32)$4 > (uint_32)[134217727]) ){ goto $label$42 }
	
.LABEL $label$44
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$43 }
	
.LABEL $label$42
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$41
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$11 = (CASTING uint_64)(uint_32 $9)
	$12 = (uint_64)(int_64)-1 >> (uint_64)$11
	if ( (uint_64)($12) <= $8) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$46:
	$8 = ((int_64)$8 << (int_64)$11)
	$10 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$48 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$47 
	
.LABEL $label$48
	$6 = CALL $27($0)
	
.LABEL $label$47
	$8 = ((int_64)$8 | (int_64)$10)
	$5 = *(($6 + [8385]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$12) ){ goto $label$46 }
	goto $label$3 
	
.LABEL $label$5
	CALL $26($0, (int_64)0)
	return (int_64)0
	
.LABEL $label$4
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((uint_32)$1 <= (uint_32)*(($6 + [8385]))) ){ goto $label$2 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$50:
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*($4)) ){ goto $label$51 }
	*($5) = ($6 + [1])
	if ( ((uint_32)$1 > (uint_32)*((*($6) + [8385]))) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	if ( ((uint_32)$1 > (uint_32)*((CALL $27($0) + [8385]))) ){ goto $label$50 }
	
.LABEL $label$49
	*(CALL $4()) = [34]
	$7 = ( $7 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$8 = $3
	
.LABEL $label$2
	if ( (*(($0 + [104])) == 0) ){ goto $label$52 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$52
	if ( (uint_64)($8 <= $3) ){ goto $label$53 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$54 }
	if ( $7 ){ goto $label$54 }
	*(CALL $4()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$54
	if ( ((uint_64)$8 <= (uint_64)$3) ){ goto $label$53 }
	*(CALL $4()) = [34]
	return $3
	
.LABEL $label$53
	$10 = (CASTING int_64)(int_32 $7)
	$8 = (int_64))(((int_64)$8 ^ (int_64)$10) - $10)
	
.LABEL $label$1
	return $8
}

void .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = *($1)
	if ( ((int_32)*($1 + [4]) == (int_32)$4) ){ goto $label$1 }
	$5 = ($2 | [1])
	$6 = ($2 + [8])
	$7 = ($1 + [4])
	
.LOOP $label$2:
	CALL $107($2, *(($4 + $3)))
	$4 = *($2)
	$8 = ($4 & [1])
	CALL $61($0, ( *($6) ? $5 : $8 ), ( *($2 + [4]) ? uint_32($4 >> [1]) : $8 ))
	if ( ((*($2) & [1]) == 0) ){ goto $label$3 }
	CALL $9(*($6))
	
.LABEL $label$3
	$4 = *($1)
	$8 = *($7)
	if ( ((int_32)$3 == (int_32)(($8 + [-1]) - $4)) ){ goto $label$4 }
	CALL $60($0, [12443])
	$8 = *($7)
	$4 = *($1)
	
.LABEL $label$4
	$3 = ($3 + [1])
	if ( ($3 <= ($8 - $4)) ){ goto $label$2 }
	
.LABEL $label$1
	$global$0 = ($2 + [16])
}

void .FUNC $108 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL $15($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $4)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1)
	$7 = *($1 + [8])
	if ( ((uint_32)$5 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($5 + [16]) & [-16])
	$5 = CALL $7($8)
	*($0) = ($8 | [1])
	*(($0 + [8])) = $5
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($5, ( $7 ? ($1 + [1]) : ($6 & [1]) ), $3)
	
.LABEL $label$2
	*(($5 + $3)) = [0]
	CALL $61($0, $2, $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $51($0)
}

void .FUNC $318 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1088])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [1080])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [1080])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [15011])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $123(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $198($2, *($3 + [1080]))
	CALL $127($2)
	$global$0 = ($3 + [1088])
}

void .FUNC $319 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1088])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1080]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$5
	CALL memcpy(($3 + [1080]), $2, [8])
	*((($3 + [8]) + [8])) = $5
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $5
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $123(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $220($2, *($3 + [1080]))
	CALL $127($2)
	$global$0 = ($3 + [1088])
}

void .FUNC $215 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$2 = ($global$0 - [240])
	$global$0 = $2
	*($2 + [24]) = [12337]
	*($2 + [28]) = CALL $15([12337])
	*($2) = *($2 + [24])
	$3 = CALL $99(($2 + [32]), $2)
	*(($4 = (($2 + [8]) + [8]))) = *(($0 + [24]))
	*($2 + [8]) = *($0 + [16 align=4])
	$5 = *($0 + [8])
	$6 = *($3)
	$0 = *($4)
	*((($2 + [192]) + [8])) = $0
	*(($3 = (($2 + [208]) + [8]))) = $0
	$7 = *($2 + [8])
	*($2 + [208]) = $7
	*($2 + [192]) = $7
	$0 = *($3)
	*((($2 + [224]) + [8])) = $0
	*((($2 + [40]) + [24])) = $0
	*($2 + [40]) = $6
	*($2 + [48]) = $5
	$5 = *($2 + [208])
	*($2 + [56]) = $5
	*($2 + [224]) = $5
	*(($2 + [80])) = $6
	*(($2 + [88])) = (int_64)-1
	*(($2 + [96])) = (int_64)0
	*(($2 + [104])) = [0]
	*(($2 + [120])) = $6
	*(($2 + [128])) = (int_64)-1
	*(($2 + [136])) = (int_64)0
	*(($2 + [144])) = [0]
	*(($2 + [160])) = $6
	*(($2 + [168])) = (int_64)-1
	*(($2 + [176])) = (int_64)0
	*(($2 + [184])) = [0]
	*($2 + [72]) = $6
	*($2 + [112]) = $6
	*($2 + [152]) = $6
	$0 = CALL db_find_i64($6, $6, (int_64)4344997574076792832, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($2 + [112])
	if ( ((int_32)*(CALL $219($3, $0) + [24]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$2
	CALL eosio_assert([0], [15451])
	
.LABEL $label$1
	CALL $106(($2 + [40]))
	$global$0 = ($2 + [240])
}

int_32 .FUNC $214 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$5 = ($global$0 - [128])
	$global$0 = $5
	*($5 + [32]) = (int_64)0
	*($5 + [24]) = (int_64)0
	$4 = CALL $52($5, $4)
	$6 = CALL $111($4, ($5 + [32]), ($5 + [24]), ($5 + [16]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$1 }
	CALL $9(*($4 + [8]))
	
.LABEL $label$1
	$4 = [0]
	if ( ($6 == 0) ){ goto $label$2 }
	if ( ((int_32)*(($0 + [756])) != (int_32)[1]) ){ goto $label$7 }
	if ( ((int_64)*($3) <= (int_64)499999) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [13584])
	if ( ((int_64)*($3) > (int_64)499999) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [13620])
	$7 = *($5 + [32])
	if ( ((int_64)*($5 + [24]) == (int_64)$7) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = *($5 + [32])
	if ( ((int_64)*($5 + [24]) != (int_64)$7) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [13649])
	
.LABEL $label$3
	CALL $215($0, $7)
	$8 = ($0 + [320])
	$6 = *(($0 + [348]))
	$9 = *(($0 + [344]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$10 }
	
.LOOP $label$12:
	$4 = ($6 + [-24])
	$10 = *($4)
	if ( ((int_64)*($10) == (int_64)$7) ){ goto $label$11 }
	$6 = $4
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$10 }
	if ( ((int_32)*($10 + [24]) == (int_32)$8) ){ goto $label$9 }
	CALL eosio_assert([0], [14937])
	goto $label$9 
	
.LABEL $label$10
	$4 = CALL db_find_i64(*($8), *(($0 + [328])), (int_64)4344997397894705024, $7)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$8 }
	if ( ((int_32)*(CALL $200($8, $4) + [24]) == (int_32)$8) ){ goto $label$9 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$9
	CALL eosio_assert([0], [13674])
	
.LABEL $label$8
	$8 = ($0 + [360])
	$6 = *(($0 + [388]))
	$10 = *(($0 + [384]))
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$14 }
	
.LOOP $label$16:
	$4 = ($6 + [-24])
	$9 = *($4)
	if ( ((int_64)*($9) == (int_64)$7) ){ goto $label$15 }
	$6 = $4
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$14 }
	if ( ((int_32)*($9 + [200]) == (int_32)$8) ){ goto $label$13 }
	CALL eosio_assert([0], [14937])
	goto $label$13 
	
.LABEL $label$14
	$9 = [0]
	$4 = CALL db_find_i64(*($8), *(($0 + [368])), (int_64)-6031319021931067904, $7)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	$9 = CALL $175($8, $4)
	if ( ((int_32)*($9 + [200]) == (int_32)$8) ){ goto $label$13 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$13
	*($5 + [40]) = ( (int_64)3 ? (int_64)1 : $9 )
	$8 = ($0 + [400])
	$6 = *(($0 + [428]))
	$10 = *(($0 + [424]))
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$20 }
	
.LOOP $label$22:
	$4 = ($6 + [-24])
	$9 = *($4)
	if ( ((int_64)*($9) == (int_64)$7) ){ goto $label$21 }
	$6 = $4
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$20 }
	if ( ((int_32)*($9 + [52]) == (int_32)$8) ){ goto $label$23 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$23
	if ( $9 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$4 = CALL db_find_i64(*($8), *(($0 + [408])), (int_64)-4994365207729012736, $7)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$18 }
	$9 = CALL $174($8, $4)
	if ( ((int_32)*($9 + [52]) == (int_32)$8) ){ goto $label$19 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$19
	$7 = *($0)
	*($5 + [52]) = $3
	*($5 + [48]) = ($5 + [24])
	*($5 + [56]) = ($5 + [40])
	CALL $216($8, $9, $7, ($5 + [48]))
	goto $label$17 
	
.LABEL $label$18
	$11 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*(($0 + [400]))) ){ goto $label$24 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$24
	*(($4 = CALL $7([64])) + [52]) = $8
	*($4) = $7
	*($4 + [40]) = (int_64)15
	*($4 + [8]) = *($5 + [24])
	*($4 + [16]) = *($3)
	*(($4 + [24])) = *(($3 + [8]))
	*($4 + [32]) = *($5 + [40])
	*($4 + [48]) = ((int_64)CALL $86() / (int_64)1000000)
	*($5 + [112]) = (($5 + [48]) + [52])
	*($5 + [108]) = ($5 + [48])
	*($5 + [104]) = ($5 + [48])
	CALL $217(($5 + [104]), $4)
	$7 = *($4)
	$6 = ($0 + [408])
	*($4 + [56]) = CALL db_store_i64(*($6), (int_64)-4994365207729012736, $11, $7, ($5 + [48]), [52])
	$9 = ($0 + [416])
	if ( (uint_64)($7 <= *($9)) ){ goto $label$25 }
	*($9) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$25
	$7 = *($6)
	$12 = *($4)
	*($5 + [120]) = *(($4 + [32]))
	*($4 + [60]) = CALL db_idx64_store($7, (int_64)-4994365207729012736, $11, $12, ($5 + [120]))
	*($5 + [104]) = $4
	$7 = *($4)
	*($5 + [48]) = $7
	$9 = *(($4 + [56]))
	*($5 + [120]) = $9
	$10 = ($0 + [428])
	$6 = *($10)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [432]))) ){ goto $label$27 }
	*($6 + [8]) = $7
	*($6 + [16]) = $9
	*($5 + [104]) = [0]
	*($6) = $4
	*($10) = ($6 + [24])
	$4 = *($5 + [104])
	*($5 + [104]) = [0]
	if ( $4 ){ goto $label$26 }
	goto $label$17 
	
.LABEL $label$27
	CALL $218(($0 + [424]), ($5 + [104]), ($5 + [48]), ($5 + [120]))
	$4 = *($5 + [104])
	*($5 + [104]) = [0]
	if ( ($4 == 0) ){ goto $label$17 }
	
.LABEL $label$26
	CALL $9($4)
	
.LABEL $label$17
	if ( ((int_64)*($3 + [8]) == (int_64)*(($0 + [600]))) ){ goto $label$28 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$28
	$7 = ((int_64)*($4) + (int_64)*($3))
	*(($4 = ($0 + [592]))) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$29 }
	CALL eosio_assert([0], [15059])
	$7 = *($4)
	
.LABEL $label$29
	$4 = [1]
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$2 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$2
	$global$0 = ($5 + [128])
	return $4
}

int_32 .FUNC $217 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [24]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$1 = ($1 + [48])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $1, [4])
	*(($1 = ($0 + [4]))) = (*($1) + [4])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $216 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [52]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	*($5 + [24]) = *(($1 + [32]))
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$7 = *($3 + [4])
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$3
	$8 = ((int_64)*($1 + [16]) + (int_64)*($7))
	*($1 + [16]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [15059])
	$8 = *(($1 + [16]))
	
.LABEL $label$4
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$5
	*(($1 + [32])) = *(*($3 + [8]))
	*($1 + [40]) = (int_64)15
	*($1 + [48]) = ((int_64)CALL $86() / (int_64)1000000)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [15228])
	
.LABEL $label$6
	$4 = $4
	$3 = ($4 + [-64])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($4 + [-12])
	CALL $217(($5 + [8]), $1)
	CALL db_update_i64(*($1 + [56]), $2, $3, [52])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($5 + [40]) = *(($1 + [32]))
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$8 }
	$3 = *($1 + [60])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$9 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4994365207729012736, ($5 + [32]), $6)
	*(($1 + [60])) = $3
	
.LABEL $label$9
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$8
	$global$0 = ($5 + [48])
}

void .FUNC $211 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15633])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15678])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [15728])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $210 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $213 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	$5 = *($1)
	$6 = CALL $15([12244])
	if ( ($6 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [14622])
	goto $label$5 
	
.LABEL $label$6
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = (int_64)0
	
.LOOP $label$7:
	$8 = *(($6 + [12243]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$8
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$7 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$3 
	
.LABEL $label$4
	$9 = (int_64)4
	
.LABEL $label$3
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$7 = $10
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$7 = $10
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $8 ){ goto $label$13 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert([0], [14769])
	
.LABEL $label$9
	*($1 + [8]) = (int_64)0
	*(($1 + [16])) = $9
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$14 }
	CALL eosio_assert([0], [15228])
	
.LABEL $label$14
	$8 = $3
	$6 = ($8 + [-32])
	$global$0 = $6
	*($4 + [4]) = $6
	*($4) = $6
	*($4 + [8]) = ($8 + [-8])
	CALL $209($4, $1)
	CALL db_update_i64(*($1 + [28]), $2, $6, [24])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	$global$0 = ($4 + [16])
}

void .FUNC $223 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	*($1) = *(*(*($0 + [4])))
	$4 = *($0)
	$5 = CALL $15([12244])
	if ( ($5 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [14622])
	goto $label$3 
	
.LABEL $label$4
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = (int_64)0
	
.LOOP $label$5:
	$7 = *(($5 + [12243]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$6
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$5 }
	$8 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$8 = (int_64)4
	
.LABEL $label$1
	$6 = (uint_64)$8 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$6 = $9
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$6 = $9
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$7 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $7 ){ goto $label$11 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [14769])
	
.LABEL $label$7
	*($1 + [16]) = (int_64)0
	*($1 + [32]) = (int_64)2
	*(($1 + [24])) = $8
	*($1 + [48]) = ((int_64)CALL $86() / (int_64)1000000)
	$7 = $2
	$5 = ($7 + [-64])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($7 + [-12])
	CALL $217(($3 + [8]), $1)
	$6 = *($1)
	*($1 + [56]) = CALL db_store_i64(*($4 + [8]), (int_64)-4994365207729012736, *(*($0 + [8])), $6, $5, [52])
	if ( (uint_64)($6 <= *($4 + [16])) ){ goto $label$12 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$6 = *(($4 + [8]))
	$9 = *(*(($0 + [8])))
	$8 = *($1)
	*($3 + [24]) = *(($1 + [32]))
	*($1 + [60]) = CALL db_idx64_store($6, (int_64)-4994365207729012736, $9, $8, ($3 + [24]))
	$global$0 = ($3 + [32])
}

void .FUNC $196 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	*($1 + [16]) = (int_64)0
	$4 = *(*($0 + [4]))
	*($1) = *($4 + [480])
	*($1 + [8]) = ((int_64)*(($4 + [488])) + (int_64)1)
	$5 = *($0)
	*(($1 + [32])) = *(($4 + [504]))
	*($1 + [24]) = *(($4 + [496]))
	*($1 + [40]) = *(($4 + [528]))
	*(($1 + [48])) = *(($4 + [536]))
	$6 = CALL $15([12244])
	if ( ($6 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [14622])
	goto $label$3 
	
.LABEL $label$4
	if ( ($6 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = (int_64)0
	
.LOOP $label$5:
	$8 = *(($6 + [12243]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$6
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$5 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)4
	
.LABEL $label$1
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$7 = $10
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$7 = $10
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $8 ){ goto $label$11 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [14769])
	
.LABEL $label$7
	*($1 + [56]) = (int_64)0
	*(($1 + [64])) = $9
	*(($1 + [80])) = *(($4 + [520]))
	*($1 + [72]) = *(($4 + [512]))
	*($1 + [88]) = *(($4 + [544]))
	*(($1 + [96])) = *(($4 + [552]))
	$6 = CALL $15([12244])
	if ( ($6 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [14622])
	goto $label$14 
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$7 = (int_64)0
	
.LOOP $label$16:
	$8 = *(($6 + [12243]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$17
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$16 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$12 
	
.LABEL $label$13
	$9 = (int_64)4
	
.LABEL $label$12
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$21 }
	$7 = $10
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$21
	$7 = $10
	
.LOOP $label$22:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$19 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $8 ){ goto $label$22 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [14769])
	
.LABEL $label$18
	*($1 + [104]) = (int_64)0
	*(($1 + [112])) = $9
	*($1 + [120]) = ((int_64)CALL $86() / (int_64)1000000)
	*($1 + [124]) = ((int_64)CALL $86() / (int_64)1000000)
	$8 = $2
	$6 = ($8 + [-128])
	$global$0 = $6
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = $8
	CALL $371($3, $1)
	$7 = *($1)
	*($1 + [132]) = CALL db_store_i64(*($5 + [8]), (int_64)-5915062038115123200, *(*($0 + [8])), $7, $6, [128])
	if ( (uint_64)($7 <= *($5 + [16])) ){ goto $label$23 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$23
	$global$0 = ($3 + [16])
}

void .FUNC $197 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [144]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	*($1 + [20]) = [5]
	$6 = *($1)
	$3 = *($3)
	CALL $182($3)
	*(($3 + [752])) = [0]
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [15228])
	
.LABEL $label$3
	*($5) = [0]
	CALL $356($5, $1)
	$3 = *($5)
	if ( ($3 <= [513]) ){ goto $label$5 }
	$4 = CALL $1($3)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	CALL $357($5, $1)
	CALL db_update_i64(*($1 + [148]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $2($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$6
	$global$0 = ($5 + [16])
}

void .FUNC $194 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [144]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	*($1 + [20]) = [2]
	*((*($3) + [752])) = [0]
	$6 = *($1)
	*($5) = [0]
	CALL $356($5, $1)
	$3 = *($5)
	if ( ($3 <= [513]) ){ goto $label$4 }
	$4 = CALL $1($3)
	goto $label$3 
	
.LABEL $label$4
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$3
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	CALL $357($5, $1)
	CALL db_update_i64(*($1 + [148]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$7 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $2($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$5 }
	
.LABEL $label$6
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$5
	$global$0 = ($5 + [16])
}

void .FUNC $195 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = (int_64)0
	*($0 + [888]) = (int_64)0
	*(($0 + [896])) = (int_64)0
	$2 = CALL $15([12244])
	if ( ($2 <= [8]) ){ goto $label$3 }
	CALL eosio_assert([0], [14622])
	goto $label$2 
	
.LABEL $label$3
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = (int_64)0
	
.LOOP $label$4:
	$4 = *(($2 + [12243]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$5 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$5
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$4 }
	$1 = ((int_64)$3 << (int_64)8)
	
.LABEL $label$1
	$3 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_64)$1 | (int_64)4)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$3 = $1
	$4 = $2
	$2 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$3 = $1
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $4 ){ goto $label$10 }
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [14769])
	
.LABEL $label$6
	*(($0 + [912])) = $5
	$1 = (int_64)0
	*(($0 + [904])) = (int_64)0
	$2 = CALL $15([12244])
	if ( ($2 <= [8]) ){ goto $label$13 }
	CALL eosio_assert([0], [14622])
	goto $label$12 
	
.LABEL $label$13
	if ( ($2 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$3 = (int_64)0
	
.LOOP $label$14:
	$4 = *(($2 + [12243]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$15 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$15
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$14 }
	$1 = ((int_64)$3 << (int_64)8)
	
.LABEL $label$11
	$3 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_64)$1 | (int_64)4)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$3 = $1
	$4 = $2
	$2 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$3 = $1
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $4 ){ goto $label$20 }
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [14769])
	
.LABEL $label$16
	*(($0 + [928])) = $5
	*(($0 + [920])) = (int_64)0
	$2 = CALL $15([12244])
	if ( ($2 <= [8]) ){ goto $label$24 }
	CALL eosio_assert([0], [14622])
	goto $label$23 
	
.LABEL $label$24
	if ( ($2 == 0) ){ goto $label$22 }
	
.LABEL $label$23
	$3 = (int_64)0
	
.LOOP $label$25:
	$4 = *(($2 + [12243]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$26 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$26
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$25 }
	$5 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)4)
	goto $label$21 
	
.LABEL $label$22
	$5 = (int_64)4
	
.LABEL $label$21
	$3 = (uint_64)$5 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$1 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$30 }
	$3 = $1
	$4 = $2
	$2 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$30
	$3 = $1
	
.LOOP $label$31:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$28 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $4 ){ goto $label$31 }
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	CALL eosio_assert([0], [14769])
	
.LABEL $label$27
	*(($0 + [944])) = $5
	*(($0 + [936])) = (int_64)0
	$2 = CALL $15([12244])
	if ( ($2 <= [8]) ){ goto $label$35 }
	CALL eosio_assert([0], [14622])
	goto $label$34 
	
.LABEL $label$35
	if ( ($2 == 0) ){ goto $label$33 }
	
.LABEL $label$34
	$3 = (int_64)0
	
.LOOP $label$36:
	$4 = *(($2 + [12243]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$37 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$37
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$36 }
	$5 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)4)
	goto $label$32 
	
.LABEL $label$33
	$5 = (int_64)4
	
.LABEL $label$32
	$3 = (uint_64)$5 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$40:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$39 }
	$1 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$41 }
	$3 = $1
	$4 = $2
	$2 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$41
	$3 = $1
	
.LOOP $label$42:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$39 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $4 ){ goto $label$42 }
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	CALL eosio_assert([0], [14769])
	
.LABEL $label$38
	*(($0 + [960])) = $5
	*(($0 + [952])) = (int_64)0
	$2 = CALL $15([12244])
	if ( ($2 <= [8]) ){ goto $label$46 }
	CALL eosio_assert([0], [14622])
	goto $label$45 
	
.LABEL $label$46
	if ( ($2 == 0) ){ goto $label$44 }
	
.LABEL $label$45
	$3 = (int_64)0
	
.LOOP $label$47:
	$4 = *(($2 + [12243]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$48 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$48
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$47 }
	$5 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)4)
	goto $label$43 
	
.LABEL $label$44
	$5 = (int_64)4
	
.LABEL $label$43
	$3 = (uint_64)$5 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$51:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$50 }
	$1 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$52 }
	$3 = $1
	$4 = $2
	$2 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$52
	$3 = $1
	
.LOOP $label$53:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$50 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $4 ){ goto $label$53 }
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$50
	CALL eosio_assert([0], [14769])
	
.LABEL $label$49
	*(($0 + [976])) = $5
	*(($0 + [968])) = (int_64)0
	$2 = CALL $15([12244])
	if ( ($2 <= [8]) ){ goto $label$57 }
	CALL eosio_assert([0], [14622])
	goto $label$56 
	
.LABEL $label$57
	if ( ($2 == 0) ){ goto $label$55 }
	
.LABEL $label$56
	$3 = (int_64)0
	
.LOOP $label$58:
	$4 = *(($2 + [12243]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$59 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$59
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$58 }
	$5 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)4)
	goto $label$54 
	
.LABEL $label$55
	$5 = (int_64)4
	
.LABEL $label$54
	$3 = (uint_64)$5 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$62:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$61 }
	$1 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$63 }
	$3 = $1
	$4 = $2
	$2 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$62 }
	goto $label$60 
	
.LABEL $label$63
	$3 = $1
	
.LOOP $label$64:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$61 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $4 ){ goto $label$64 }
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$62 }
	goto $label$60 
	
.LABEL $label$61
	CALL eosio_assert([0], [14769])
	
.LABEL $label$60
	*(($0 + [992])) = $5
	*(($0 + [984])) = (int_64)0
	*(($0 + [1000])) = (int_64)0
	*(($0 + [1008])) = (int_64)0
	*(($0 + [1016])) = (int_64)0
	*(($0 + [1024])) = (int_64)0
	*(($0 + [1032])) = (int_64)0
}

int_32 .FUNC $219 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($3 = $2) + [44]) = $1
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$2 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$5 = CALL $1($4)
	$2 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [36]) = $5
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + $4)
	*($3 + [12]) = ($3 + [32])
	*($3 + [16]) = ($3 + [44])
	*($3 + [8]) = $0
	$1 = CALL $7([40])
	$6 = CALL $336($1, $0, ($3 + [8]))
	*($3 + [24]) = $1
	$7 = *($1)
	*($3 + [8]) = $7
	$8 = *($1 + [28])
	*($3 + [4]) = $8
	$9 = ($0 + [28])
	$4 = *($9)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $7
	*($4 + [16]) = $8
	*($3 + [24]) = [0]
	*($4) = $1
	*($9) = ($4 + [24])
	if ( $2 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $337(($0 + [24]), ($3 + [24]), ($3 + [8]), ($3 + [4]))
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($5)
	
.LABEL $label$7
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	if ( ((*($5 + [12]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($5 + [20])))
	
.LABEL $label$11
	CALL $9($5)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $6
}

void .FUNC $218 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $190 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $191 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	*($4 + [16]) = $2
	*($4 + [8]) = $1
	$5 = CALL db_find_i64($1, $2, (int_64)3607749779137757184, $3)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $268(($4 + [8]), $5)
	if ( ((int_32)*($5 + [16]) == (int_32)($4 + [8])) ){ goto $label$5 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$5
	*($0) = *($5)
	*(($0 + [8])) = *(($5 + [8]))
	$6 = *($4 + [32])
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ($4 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $9($5)
	
.LABEL $label$7
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($4 + [32]))
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert([0], [15506])
	*(($0 + [8])) = *([0] + [8])
	*($0) = *([0])
	
.LABEL $label$3
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$2
	$0 = $6
	
.LABEL $label$1
	*($7) = $6
	CALL $9($0)
	$global$0 = ($4 + [48])
}

void .FUNC $378 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [40])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($6, $4, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = *(($3 + [48]))
	if ( ((int_32)(*(($5 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [8])
	*($6) = (*($6) + [8])
	$0 = *($0)
	$4 = ($0 + [56])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$6 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $4, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = *(($0 + [64]))
	if ( ((int_32)(*(($5 + [8])) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$4 = *($6)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [8]), [8])
	*($6) = (*($6) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $379 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [48]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [15887])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-3107686822742310912)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [15833])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [15833])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $245(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $372 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	CALL $295(CALL $295($0, ($1 + [120])), ($1 + [132]))
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$3 = ($1 + [20])
	$2 = *($0 + [4])
	$0 = CALL $295($0, ($1 + [8]))
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$2 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $2, [4])
	$2 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $2
	$3 = ($1 + [24])
	if ( ((int_32)*(($0 + [8])) != (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [1])
	*(($2 = ($0 + [4]))) = (*($2) + [1])
	$3 = ($1 + [88])
	$2 = *($0 + [4])
	$0 = CALL $295(CALL $295(CALL $295(CALL $295(CALL $295($0, ($1 + [28])), ($1 + [40])), ($1 + [52])), ($1 + [64])), ($1 + [76]))
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$2 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $2, [4])
	$2 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $2
	$3 = ($1 + [92])
	$4 = ($0 + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$2 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $2, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$5 = ($1 + [96])
	if ( ((uint_32)(*($4) - $3) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$3 = *($2)
	
.LABEL $label$6
	CALL memcpy($5, $3, [4])
	$3 = (*($2) + [4])
	*($2) = $3
	$2 = ($1 + [100])
	$4 = ($0 + [8])
	if ( ((uint_32)(*($4) - $3) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	$3 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $3, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$5 = ($1 + [104])
	if ( ((uint_32)(*($4) - $3) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	$3 = *($2)
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [112])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15011])
	$3 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($2, $3, [8])
	return *(($2 = ($0 + [4]))) = (*($2) + [8])
}

void .FUNC $373 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	*(($6 = ($5 + ((int_32)$6 * (int_32)[40])))) = *($2)
	*($6 + [8]) = *($3)
	*($6 + [16 align=4]) = (int_64)0
	*(($3 = ($6 + [24]))) = [0]
	$2 = CALL $7([16])
	*($6 + [16]) = $2
	$7 = ($2 + [16])
	*($3) = $7
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($6 + [20])) = $7
	CALL $374(($6 + [28]), $4)
	$9 = ($5 + ((int_32)$8 * (int_32)[40]))
	$10 = ($6 + [40])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$11 = ($2 - $7)
	$1 = [0]
	
.LOOP $label$7:
	$8 = ($7 + $1)
	*((($2 = ($6 + $1)) + [-32])) = *(($8 + [-32]))
	*(($2 + [-40])) = *(($8 + [-40]))
	*(($5 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($8 + [-24])
	*($5) = *($4)
	$5 = ($8 + [-16])
	*($3) = *($5)
	*($5) = [0]
	*(($5 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($8 + [-12])
	*($5) = *($3)
	*($4) = (int_64)0
	$8 = ($8 + [-4])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$7 }
	$6 = ($6 + $1)
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$5 = $2
	
.LABEL $label$5
	*($0) = $6
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$8 = *(($2 + [-12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $8
	CALL $9($8)
	
.LABEL $label$10
	$8 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$11
	$2 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $370 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [32])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [40])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($1, $4, [4])
	*($3) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $371 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [32]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [48]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [56])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [64]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [72])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [80]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [88])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$12
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [96]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [104])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$14
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [112]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$15
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [120])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$16 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$16
	CALL memcpy($4, $5, [4])
	$4 = (*($3) + [4])
	*($3) = $4
	$1 = ($1 + [124])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$17 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$17
	CALL memcpy($4, $1, [4])
	*(($1 = ($0 + [4]))) = (*($1) + [4])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $376 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $347(*($1), *($0 + [8]))
	CALL $347(*($1), *($0 + [12]))
	CALL $347(*($1), *($0 + [16]))
	CALL $347(*($1), *($0 + [20]))
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	CALL $347(*($1), *($0 + [28]))
	CALL $347(*($1), *($0 + [32]))
	CALL $347(*($1), *($0 + [36]))
	CALL $347(*($1), *($0 + [40]))
	CALL $347(*($1), *($0 + [44]))
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [52])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($1, $4, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = *($4 + [8])
	if ( ((int_32)(*(($0 + [8])) - $1) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15287])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($1, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $377 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *(($0 + [32]))
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	*($2) = $0
	CALL $378($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $374 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($2 + [16]) = [0]
	*($2) = ($2 + [16])
	$4 = ($1 + [8])
	*($2 + [28]) = $4
	*($2 + [24]) = $1
	$5 = ($1 + [16])
	*($2 + [32]) = $5
	$6 = ($1 + [28])
	*($2 + [36]) = $6
	$7 = ($1 + [40])
	*($2 + [40]) = $7
	$8 = ($1 + [52])
	*($2 + [44]) = $8
	$9 = ($1 + [64])
	*($2 + [48]) = $9
	$10 = ($1 + [68])
	*($2 + [52]) = $10
	$11 = ($1 + [80])
	*($2 + [56]) = $11
	$12 = ($1 + [92])
	*($2 + [60]) = $12
	$13 = ($1 + [104])
	*($2 + [64]) = $13
	$14 = ($1 + [116])
	*($2 + [68]) = $14
	$15 = ($1 + [128])
	*($2 + [72]) = $15
	$16 = ($1 + [144])
	*($2 + [76]) = $16
	CALL $375(($2 + [24]), $2)
	$17 = *($2 + [16])
	if ( ($17 == 0) ){ goto $label$2 }
	CALL $204($0, $17)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($2 + [4]) = $0
	*($2) = $0
	*($2 + [8]) = $3
	*($2 + [16]) = $2
	*($2 + [28]) = $4
	*($2 + [24]) = $1
	*($2 + [32]) = $5
	*($2 + [36]) = $6
	*($2 + [40]) = $7
	*($2 + [44]) = $8
	*($2 + [48]) = $9
	*($2 + [52]) = $10
	*($2 + [56]) = $11
	*($2 + [60]) = $12
	*($2 + [64]) = $13
	*($2 + [68]) = $14
	*($2 + [72]) = $15
	*($2 + [76]) = $16
	CALL $376(($2 + [24]), ($2 + [16]))
	$global$0 = ($2 + [80])
}

void .FUNC $375 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$1 = (*($2) + [16])
	*(($2 = *($1))) = $1
	$4 = *($3)
	$3 = *($0 + [8])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$2
	$4 = *($3)
	$3 = *($0 + [12])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$4
	$4 = *($3)
	$3 = *($0 + [16])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$6 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$6
	$4 = *($3)
	$3 = *($0 + [20])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$7 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$8 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$8
	$1 = ($1 + [1])
	*($2) = $1
	$4 = *($3)
	$3 = *($0 + [28])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$9:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$9 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$10 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$10
	$4 = *($3)
	$3 = *($0 + [32])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$11:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$11 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$12 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$12
	$4 = *($3)
	$3 = *($0 + [36])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$13:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$13 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$14 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$14
	$4 = *($3)
	$3 = *($0 + [40])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$15:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$15 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$16 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$16
	$3 = *($0)
	$0 = *($0 + [44])
	$5 = (CASTING uint_64)(uint_32 ( *($0 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$17:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$17 }
	*($2) = $1
	$0 = *($0)
	$0 = ( *(($0 + [4])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	if ( ($0 == 0) ){ goto $label$18 }
	$1 = ($0 + $1)
	*($2) = $1
	
.LABEL $label$18
	*($2) = ($1 + [32])
}

int_32 .FUNC $174 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [52]) = $0
	CALL $365(($3 + [32]), $5)
	*($5 + [60]) = [-1]
	*($5 + [56]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $218(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $175 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([216])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [112]) = (int_64)0
	*($5 + [120]) = (int_64)0
	*($5 + [128]) = (int_64)0
	*($5 + [136]) = (int_64)0
	*($5 + [200]) = $0
	CALL $366(($3 + [32]), $5)
	*($5 + [204]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $186(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $176 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [200]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15633])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15678])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [15728])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [204]))
}

void .FUNC $177 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [200]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *($3)
	if ( ((int_64)*(($7 + [24])) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [15344])
	
.LABEL $label$3
	$8 = (int_64)
	*($1 + [16]) = $8(*($1 + [16]) - *($7 + [16])))
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [15392])
	$8 = *(($1 + [16]))
	
.LABEL $label$4
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [15414])
	
.LABEL $label$5
	$3 = *($3)
	if ( ((int_64)*(($3 + [24])) == (int_64)*(($1 + [40]))) ){ goto $label$6 }
	CALL eosio_assert([0], [15344])
	
.LABEL $label$6
	$8 = (int_64)
	*($1 + [32]) = $8(*($1 + [32]) - *($3 + [16])))
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$11 }
	if ( ((int_64)$8 >= (int_64)4611686018427387904) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert([0], [15392])
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [15414])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [15228])
	
.LABEL $label$7
	$4 = $4
	$3 = ($4 + [-208])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-12])
	CALL $367($5, $1)
	CALL db_update_i64(*($1 + [204]), $2, $3, [196])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$global$0 = ($5 + [16])
}

void .FUNC $170 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	*(($6 = ($5 + ((int_32)$6 * (int_32)[40])))) = *($2)
	*($6 + [8]) = *($3)
	*($6 + [16 align=4]) = (int_64)0
	*(($3 = ($6 + [24]))) = [0]
	$2 = CALL $7([16])
	*($6 + [16]) = $2
	$7 = ($2 + [16])
	*($3) = $7
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($6 + [20])) = $7
	CALL $391(($6 + [28]), $4)
	$9 = ($5 + ((int_32)$8 * (int_32)[40]))
	$10 = ($6 + [40])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$11 = ($2 - $7)
	$1 = [0]
	
.LOOP $label$7:
	$8 = ($7 + $1)
	*((($2 = ($6 + $1)) + [-32])) = *(($8 + [-32]))
	*(($2 + [-40])) = *(($8 + [-40]))
	*(($5 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($8 + [-24])
	*($5) = *($4)
	$5 = ($8 + [-16])
	*($3) = *($5)
	*($5) = [0]
	*(($5 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($8 + [-12])
	*($5) = *($3)
	*($4) = (int_64)0
	$8 = ($8 + [-4])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$7 }
	$6 = ($6 + $1)
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$5 = $2
	
.LABEL $label$5
	*($0) = $6
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$8 = *(($2 + [-12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $8
	CALL $9($8)
	
.LABEL $label$10
	$8 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$11
	$2 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $171 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [16]) = [0]
	CALL $338(($4 + [16]), $0)
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL $204($4, $6)
	$5 = *($4 + [4])
	$6 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	*($4 + [20]) = $6
	*($4 + [16]) = $6
	*($4 + [24]) = $5
	CALL $339(($4 + [16]), $0)
	$0 = *($4)
	CALL send_deferred($1, $2, $0, (*($4 + [4]) - $0), $3)
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$3 }
	*($4 + [4]) = $0
	CALL $9($0)
	
.LABEL $label$3
	$global$0 = ($4 + [32])
}

int_32 .FUNC $172 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL $9($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL $9($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL $9($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL $9($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL $9($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $173 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [116]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15633])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15678])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [15728])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [104]) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($5 + [112])))
	
.LABEL $label$13
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [104]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($8 + [112])))
	
.LABEL $label$16
	CALL $9($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [120]))
}

void .FUNC $178 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *(($6 + [296]))
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = ($6 + [280])
	$9 = CALL db_lowerbound_i64(*($8), *(($6 + [288])), (int_64)-8463262820711136768, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $199($8, $9)
	*($3 + [4]) = [0]
	*($3) = $8
	$7 = *(*(CALL $359($3) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [296])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [15781])
	$7 = *(($6 + [296]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [296])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*(*($5 + [4]) + [4]))
	*($1 + [16]) = (int_64)0
	$6 = *($5 + [8])
	*(($1 + [32])) = *(($6 + [24]))
	*($1 + [24]) = *($6 + [16])
	$5 = *($5 + [8])
	*($1 + [40]) = *($5 + [16])
	$7 = *(($5 + [24]))
	*($1 + [120]) = (int_64)4
	*(($1 + [48])) = $7
	$2 = $2
	$5 = ($2 + [-128])
	$global$0 = $5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = $2
	CALL $360($3, $1)
	$7 = *($1)
	*($1 + [132]) = CALL db_store_i64(*($4 + [8]), (int_64)-8463262820711136768, *(*($0 + [8])), $7, $5, [128])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [16])
}

void .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *(($6 + [136]))
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = ($6 + [120])
	$9 = CALL db_lowerbound_i64(*($8), *(($6 + [128])), (int_64)-4138934702985707520, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $243($8, $9)
	*($3 + [12]) = [0]
	*($3 + [8]) = $8
	$7 = *(*(CALL $368(($3 + [8])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [136])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [15781])
	$7 = *(($6 + [136]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [136])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *($6 + [480])
	*($1 + [16]) = *(*(*($5 + [4]) + [4]))
	$6 = *($5 + [8])
	*(($1 + [32])) = *(($6 + [24]))
	*($1 + [24]) = *($6 + [16])
	*($1 + [40]) = ((int_64)CALL $86() / (int_64)1000000)
	$2 = $2
	$6 = ($2 + [-48])
	$global$0 = $6
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = ($2 + [-4])
	CALL $369(($3 + [8]), $1)
	$7 = *($1)
	*($1 + [48]) = CALL db_store_i64(*($4 + [8]), (int_64)-4138934702985707520, *(*($0 + [8])), $7, $6, [44])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$11 = *($1)
	*($3 + [24]) = *(($1 + [8]))
	*($1 + [52]) = CALL db_idx64_store($7, (int_64)-4138934702985707520, $10, $11, ($3 + [24]))
	$global$0 = ($3 + [32])
}

int_32 .FUNC $361 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [32])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [48])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [56])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [64])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [72])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [80])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [88])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$12
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [96])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [104])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$14
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [112])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$15
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [120])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$16
	CALL memcpy($1, $4, [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $237 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [104]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [112])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $9($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ($2 - $3)
	$5 = ($4 + [1])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = [2147483647]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)$7 > (uint_32)[1073741822]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $7($6)
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	*(($4 = ($5 + $4))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + $6)
	$5 = ($4 + [1])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $9($3)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $235 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$5 = *($0)
	$6 = *($4 + [8])
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [16]) = *($6)
	$6 = *($4 + [12])
	*($1 + [32]) = *($6)
	*(($1 + [40])) = *(($6 + [8]))
	$6 = *($4 + [16])
	*($1 + [48]) = *($6)
	*(($1 + [56])) = *(($6 + [8]))
	$6 = *($4 + [20])
	*($1 + [64]) = *($6)
	*(($1 + [72])) = *(($6 + [8]))
	$6 = *($4 + [24])
	*($1 + [80]) = *($6)
	*(($1 + [88])) = *(($6 + [8]))
	*($1 + [96]) = *(*($4 + [28]))
	$7 = *(*($4))
	if ( ((int_64)$7 == (int_64)0) ){ goto $label$4 }
	$8 = [0]
	$9 = *([0] + [11776])
	
.LOOP $label$6:
	*((($3 + [48]) + ($6 = $8))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$7 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$8 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$5 }
	$7 = ((int_64)$7 << (int_64)5)
	if ( ((int_64)$7 != (int_64)0) ){ goto $label$6 }
	
.LABEL $label$5
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$3 }
	*($3 + [16]) = ($8 << [1])
	$9 = (($3 + [16]) | [1])
	goto $label$2 
	
.LABEL $label$4
	*((($3 + [16]) + [8])) = [0]
	*($3 + [16]) = (int_64)0
	*($3 + [16]) = [0]
	$6 = (($3 + [16]) | [1])
	goto $label$1 
	
.LABEL $label$3
	$10 = (($8 + [16]) & [-16])
	$9 = CALL $7($10)
	*($3 + [16]) = ($10 | [1])
	*($3 + [24]) = $9
	*($3 + [20]) = $8
	
.LABEL $label$2
	$10 = ($6 + [1])
	$6 = [0]
	
.LOOP $label$7:
	*(($9 + $6)) = *((($3 + [48]) + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$7 }
	$6 = ($9 + $8)
	
.LABEL $label$1
	$8 = [0]
	*($6) = [0]
	$6 = CALL $60(($3 + [16]), [12895])
	$9 = ($6 + [8])
	*((($3 + [32]) + [8])) = *($9)
	*($3 + [32]) = *($6)
	*($6) = (int_64)0
	*($9) = [0]
	$7 = *(*(($4 + [4])))
	if ( (int_64)($7 == 0) ){ goto $label$18 }
	$9 = *([0] + [11776])
	
.LOOP $label$20:
	*((($3 + [48]) + ($6 = $8))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$7 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$8 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$19 }
	$7 = ((int_64)$7 << (int_64)5)
	if ( ((int_64)$7 != (int_64)0) ){ goto $label$20 }
	
.LABEL $label$19
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$17 }
	*($3) = ($8 << [1])
	$9 = ($3 | [1])
	goto $label$16 
	
.LABEL $label$18
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$6 = CALL $15([12908])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$15 }
	*($3) = ($6 << [1])
	$8 = ($3 | [1])
	if ( $6 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$17
	$10 = (($8 + [16]) & [-16])
	$9 = CALL $7($10)
	*($3) = ($10 | [1])
	*($3 + [8]) = $9
	*($3 + [4]) = $8
	
.LABEL $label$16
	$10 = ($6 + [1])
	$6 = [0]
	
.LOOP $label$21:
	*(($9 + $6)) = *((($3 + [48]) + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$21 }
	*(($9 + $8)) = [0]
	goto $label$12 
	
.LABEL $label$15
	$9 = (($6 + [16]) & [-16])
	$8 = CALL $7($9)
	*($3) = ($9 | [1])
	*($3 + [8]) = $8
	*($3 + [4]) = $6
	
.LABEL $label$14
	CALL memcpy($8, [12908], $6)
	
.LABEL $label$13
	*(($8 + $6)) = [0]
	
.LABEL $label$12
	$6 = *($3)
	$8 = ($6 & [1])
	$6 = CALL $61(($3 + [32]), ( *($3 + [8]) ? ($3 | [1]) : $8 ), ( *($3 + [4]) ? uint_32($6 >> [1]) : $8 ))
	$8 = *($6 + [4])
	$9 = *($6)
	*($6) = (int_64)0
	$10 = *($6 + [8])
	*($6 + [8]) = [0]
	$6 = ($1 + [104])
	if ( (*($1 + [104]) & [1]) ){ goto $label$23 }
	*($6) = [0]
	$4 = ($1 + [112])
	goto $label$22 
	
.LABEL $label$23
	*(*(($4 = ($1 + [112])))) = [0]
	*(($1 + [108])) = [0]
	
.LABEL $label$22
	CALL $56($6, [0])
	*(($1 + [108])) = $8
	*($1 + [104]) = $9
	*($4) = $10
	if ( (*($3) & [1]) ){ goto $label$25 }
	if ( (*($3 + [32]) & [1]) ){ goto $label$24 }
	goto $label$10 
	
.LABEL $label$25
	CALL $9(*(($3 + [8])))
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$24
	CALL $9(*($3 + [40]))
	$8 = [1]
	if ( (*($3 + [16]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	CALL $51($3)
	
.LABEL $label$10
	$8 = [1]
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*($3 + [24]))
	
.LABEL $label$8
	$6 = *(($1 + [104]))
	$9 = ( *(($1 + [108])) ? uint_32($6 >> $8) : ($6 & $8) )
	$6 = ($9 + [104])
	$7 = (CASTING uint_64)(uint_32 $9)
	
.LOOP $label$26:
	$6 = ($6 + $8)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$26 }
	if ( ($6 <= [513]) ){ goto $label$28 }
	$8 = CALL $1($6)
	goto $label$27 
	
.LABEL $label$28
	$8 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $8
	
.LABEL $label$27
	*($3 + [52]) = $8
	*($3 + [48]) = $8
	*($3 + [56]) = ($8 + $6)
	CALL $383(($3 + [48]), $1)
	$7 = *($1)
	*($1 + [120]) = CALL db_store_i64(*($5 + [8]), (int_64)-6497942333781180416, *(*($0 + [8])), $7, $8, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$31 }
	if ( ((uint_64)$7 >= (uint_64)*($5 + [16])) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	CALL $2($8)
	if ( (uint_64)($7 <= *($5 + [16])) ){ goto $label$29 }
	
.LABEL $label$30
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$29
	$global$0 = ($3 + [64])
	(unreachable)
}

int_32 .FUNC $360 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [32]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [48]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [56])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [64]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [72])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [80]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [88])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$12
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [96]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [104])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$14
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [112])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$15
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [120])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$16
	CALL memcpy($4, $1, [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $97 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$3 = ($global$0 - [160])
	$global$0 = $3
	*(($3 + [152])) = [0]
	*($3 + [144]) = (int_64)0
	$4 = CALL $15([12244])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$5 }
	*($3 + [144]) = ($4 << [1])
	$5 = (($3 + [144]) | [1])
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $7($6)
	*($3 + [144]) = ($6 | [1])
	*($3 + [152]) = $5
	*($3 + [148]) = $4
	
.LABEL $label$4
	CALL memcpy($5, [12244], $4)
	
.LABEL $label$3
	*(($5 + $4)) = [0]
	$4 = *($3 + [144])
	$5 = CALL $53(($3 + [128]), $1, ( *($3 + [148]) ? uint_32($4 >> [1]) : ($4 & [1]) ), [-1], $1)
	*($3 + [120]) = [0]
	*($3 + [112]) = (int_64)0
	if ( CALL $93(( *($5 + [8]) ? ($5 + [1]) : (*($3 + [128]) & [1]) ), ($3 + [112])) ){ goto $label$6 }
	CALL eosio_assert([0], [12248])
	
.LABEL $label$6
	if ( ((int_32)(*($3 + [116]) - *($3 + [112])) == (int_32)[37]) ){ goto $label$7 }
	CALL eosio_assert([0], [11568])
	
.LABEL $label$7
	if ( (*($2) == 0) ){ goto $label$8 }
	CALL memmove(($3 + [72]), *($3 + [112]), [33])
	CALL $84(($3 + [32]), ($3 + [72]), [33])
	$7 = *($3 + [32])
	*($3 + [19]) = (uint_64)$7 >> (uint_64)(int_64)32)
	*($3 + [18]) = (uint_64)$7 >> (uint_64)(int_64)40)
	*($3 + [17]) = (uint_64)$7 >> (uint_64)(int_64)48)
	*($3 + [16]) = (uint_64)$7 >> (uint_64)(int_64)56)
	$8 = *($3 + [40])
	*($3 + [11]) = (uint_64)$8 >> (uint_64)(int_64)32)
	*($3 + [10]) = (uint_64)$8 >> (uint_64)(int_64)40)
	*($3 + [9]) = (uint_64)$8 >> (uint_64)(int_64)48)
	*($3 + [8]) = (uint_64)$8 >> (uint_64)(int_64)56)
	$4 = (CASTING uint_32)(uint_64 $7)
	*($3 + [23]) = $4
	*($3 + [22]) = uint_32($4 >> [8])
	*($3 + [21]) = uint_32($4 >> [16])
	*($3 + [20]) = uint_32($4 >> [24])
	$4 = (CASTING uint_32)(uint_64 $8)
	*($3 + [15]) = $4
	*($3 + [14]) = uint_32($4 >> [8])
	*($3 + [13]) = uint_32($4 >> [16])
	*($3 + [12]) = uint_32($4 >> [24])
	$7 = *((($3 + [32]) + [24]))
	*($3 + [27]) = (uint_64)$7 >> (uint_64)(int_64)32)
	*($3 + [26]) = (uint_64)$7 >> (uint_64)(int_64)40)
	*($3 + [25]) = (uint_64)$7 >> (uint_64)(int_64)48)
	*($3 + [24]) = (uint_64)$7 >> (uint_64)(int_64)56)
	if ( (CALL $17(($3 + [8]), (*($3 + [116]) + [-4]), [4]) == 0) ){ goto $label$8 }
	CALL eosio_assert([0], [11602])
	
.LABEL $label$8
	*($0) = [0]
	$4 = *($3 + [112])
	*($0 + [4 align=1]) = *($4)
	*(($0 + [12])) = *($4 + [8 align=1])
	*(($0 + [16])) = *($4 + [12 align=1])
	*(($0 + [24])) = *($4 + [20 align=1])
	*(($0 + [32])) = *($4 + [28 align=1])
	*(($0 + [36])) = *($4 + [32])
	if ( ($4 == 0) ){ goto $label$9 }
	*($3 + [116]) = $4
	CALL $9($4)
	
.LABEL $label$9
	if ( (*($3 + [128]) & [1]) ){ goto $label$11 }
	if ( (*($3 + [144]) & [1]) ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$11
	CALL $9(*(($5 + [8])))
	if ( ((*($3 + [144]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$10
	CALL $9(*($3 + [152]))
	$global$0 = ($3 + [160])
	return (unreachable)
	
.LABEL $label$2
	CALL $51(($3 + [144]))
	
.LABEL $label$1
	$global$0 = ($3 + [160])
}

void .FUNC $90 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	if ( ($4 & [1]) ){ goto $label$6 }
	$4 = uint_32($4 >> [1])
	$5 = ($0 + [1])
	$6 = ($5 + $4)
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = *($0 + [4])
	$5 = *($0 + [8])
	$6 = ($5 + $4)
	if ( ($4 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	
.LOOP $label$7:
	if ( CALL $76(*($5)) ){ goto $label$4 }
	$5 = ($5 + [1])
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$7 }
	$5 = $6
	$4 = [1]
	$7 = *($0)
	if ( (($7 & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$8 }
	$4 = ($5 + [1])
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	if ( (CALL $76(*($4)) == 0) ){ goto $label$10 }
	$4 = ($4 + [1])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$8
	$4 = [1]
	$7 = *($0)
	if ( ($7 & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = ($0 + $4)
	$4 = ($6 + uint_32($7 >> $4))
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [8])
	$4 = ($6 + *($0 + [4]))
	
.LABEL $label$1
	CALL $64($0, ($5 - $6), ($4 - $5))
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$14 }
	if ( (uint_32($5 >> [1]) == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	if ( *($0 + [4]) ){ goto $label$12 }
	$12 = [8]
	goto $label$11 
	
.LABEL $label$13
	$12 = [8]
	goto $label$11 
	
.LABEL $label$12
	$5 = *($1)
	if ( ($5 & [1]) ){ goto $label$17 }
	if ( (uint_32($5 >> [1]) == 0) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	if ( *($1 + [4]) ){ goto $label$15 }
	$12 = [8]
	goto $label$11 
	
.LABEL $label$16
	$12 = [8]
	goto $label$11 
	
.LABEL $label$15
	$6 = *($2)
	$4 = *($2 + [4])
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$18 }
	
.LOOP $label$19:
	$5 = ($4 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$20 }
	CALL $9(*(($4 + [-4])))
	
.LABEL $label$20
	$4 = $5
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$19 }
	
.LABEL $label$18
	*(($8 = ($2 + [4]))) = $6
	$5 = *($1)
	$4 = ($5 & [1])
	$9 = ($1 + [1])
	CALL $61($0, ( *($1 + [8]) ? $9 : $4 ), ( *($1 + [4]) ? uint_32($5 >> [1]) : $4 ))
	$10 = ($0 + [1])
	$11 = ($1 + [8])
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$21 }
	$12 = [20]
	goto $label$11 
	
.LABEL $label$21
	$12 = [0]
	
.LABEL $label$11
	
.LOOP $label$22:
	goto $label$69 
	
.LABEL $label$71
	CALL $56($0, [0])
	*(($0 + [8])) = *(($3 + [8]))
	*($0) = *($3)
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$45 }
	$12 = [20]
	goto $label$22 
	
.LABEL $label$70
	$4 = uint_32($5 >> [1])
	$13 = $10
	goto $label$44 
	
.LABEL $label$69
	$4 = *(($0 + [4]))
	$13 = *(($0 + [8]))
	$12 = [1]
	goto $label$22 
	
.LABEL $label$68
	$6 = ($5 & [1])
	$5 = *($1)
	$14 = ($1 + [4])
	$5 = ( *($14) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 == 0) ){ goto $label$43 }
	$12 = [2]
	goto $label$22 
	
.LABEL $label$67
	if ( ((int_32)$4 < (int_32)$5) ){ goto $label$42 }
	$12 = [3]
	goto $label$22 
	
.LABEL $label$66
	$15 = ($13 + $4)
	$16 = ( *($11) ? $9 : $6 )
	$7 = *($16)
	$6 = $13
	$12 = [4]
	goto $label$22 
	
.LABEL $label$65
	$4 = (($4 - $5) + [1])
	if ( ($4 == 0) ){ goto $label$39 }
	$12 = [5]
	goto $label$22 
	
.LABEL $label$64
	$4 = CALL $16($6, $7, $4)
	if ( ($4 == 0) ){ goto $label$38 }
	$12 = [6]
	goto $label$22 
	
.LABEL $label$63
	if ( (CALL $17($4, $16, $5) == 0) ){ goto $label$37 }
	$12 = [7]
	goto $label$22 
	
.LABEL $label$62
	$6 = ($4 + [1])
	$4 = ($15 - $6)
	if ( ((int_32)$4 >= (int_32)$5) ){ goto $label$40 }
	goto $label$41 
	
.LABEL $label$61
	$5 = [0]
	goto $label$34 
	
.LABEL $label$60
	if ( ((int_32)$4 == (int_32)$15) ){ goto $label$36 }
	$12 = [10]
	goto $label$22 
	
.LABEL $label$59
	$5 = ($4 - $13)
	if ( ((int_32)$5 == (int_32)[-1]) ){ goto $label$35 }
	$12 = [11]
	goto $label$22 
	
.LABEL $label$58
	$6 = CALL $53($3, $0, [0], $5, $0)
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($2 + [8]))) ){ goto $label$33 }
	$12 = [24]
	goto $label$22 
	
.LABEL $label$57
	*($4) = *($3)
	$4 = ($3 + [8])
	*(($4 + [8])) = *($4)
	*($4) = [0]
	*($8) = (*($8) + [12])
	*($3) = (int_64)0
	$4 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$56
	CALL $91($2, $6)
	if ( ((*($3) & [1]) == 0) ){ goto $label$32 }
	$12 = [13]
	goto $label$22 
	
.LABEL $label$55
	CALL $9(*(($3 + [8])))
	$12 = [14]
	goto $label$22 
	
.LABEL $label$54
	$4 = *($1)
	if ( ($4 & [1]) ){ goto $label$31 }
	$12 = [23]
	goto $label$22 
	
.LABEL $label$53
	$4 = (uint_32($4 >> [1]) + $5)
	$6 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$27 }
	$12 = [16]
	goto $label$22 
	
.LABEL $label$52
	$6 = *(($0 + [4]))
	goto $label$26 
	
.LABEL $label$51
	$4 = (*($14) + $5)
	$6 = *($0)
	if ( ($6 & [1]) ){ goto $label$28 }
	$12 = [22]
	goto $label$22 
	
.LABEL $label$50
	$6 = uint_32($6 >> [1])
	$12 = [17]
	goto $label$22 
	
.LABEL $label$49
	CALL $53($3, $0, $4, ($6 - $5), $0)
	if ( (*($0) & [1]) ){ goto $label$25 }
	$12 = [21]
	goto $label$22 
	
.LABEL $label$48
	*($0) = [0]
	goto $label$23 
	
.LABEL $label$47
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	goto $label$24 
	
.LABEL $label$46
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$45
	$12 = [0]
	goto $label$22 
	
.LABEL $label$44
	$12 = [1]
	goto $label$22 
	
.LABEL $label$43
	$12 = [25]
	goto $label$22 
	
.LABEL $label$42
	$12 = [8]
	goto $label$22 
	
.LABEL $label$41
	$12 = [8]
	goto $label$22 
	
.LABEL $label$40
	$12 = [4]
	goto $label$22 
	
.LABEL $label$39
	$12 = [8]
	goto $label$22 
	
.LABEL $label$38
	$12 = [8]
	goto $label$22 
	
.LABEL $label$37
	$12 = [9]
	goto $label$22 
	
.LABEL $label$36
	$12 = [8]
	goto $label$22 
	
.LABEL $label$35
	$12 = [8]
	goto $label$22 
	
.LABEL $label$34
	$12 = [11]
	goto $label$22 
	
.LABEL $label$33
	$12 = [12]
	goto $label$22 
	
.LABEL $label$32
	$12 = [14]
	goto $label$22 
	
.LABEL $label$31
	$12 = [15]
	goto $label$22 
	
.LABEL $label$30
	$12 = [23]
	goto $label$22 
	
.LABEL $label$29
	$12 = [15]
	goto $label$22 
	
.LABEL $label$28
	$12 = [16]
	goto $label$22 
	
.LABEL $label$27
	$12 = [22]
	goto $label$22 
	
.LABEL $label$26
	$12 = [17]
	goto $label$22 
	
.LABEL $label$25
	$12 = [18]
	goto $label$22 
	
.LABEL $label$24
	$12 = [19]
	goto $label$22 
	
.LABEL $label$23
	$12 = [19]
	goto $label$22 
	$12
}

int_64 .FUNC $86 ()
{
	int_64 $0
	if ( (*([0] + [8244]) == 0) ){ goto $label$1 }
	return *([0] + [8248])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8244]) = [1]
	*([0] + [8248]) = $0
	return $0
}

void .FUNC $232 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($global$0 - [944])
	$global$0 = $5
	*($5 + [856]) = $1
	$6 = *($0)
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$1 }
	$8 = *($4)
	$7 = CALL $15([13845])
	if ( ((int_32)$7 != (int_32)( *($4 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$2 }
	if ( (CALL $66($4, [0], [-1], [13845], $7) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($5 + [848]) = [13854]
	*($5 + [852]) = CALL $15([13854])
	*($5 + [240]) = *($5 + [848])
	$8 = CALL $99(($5 + [248]), ($5 + [240]))
	if ( ((int_64)*($5 + [856]) == (int_64)*($8)) ){ goto $label$1 }
	*($5 + [840]) = [13864]
	*($5 + [844]) = CALL $15([13864])
	*($5 + [232]) = *($5 + [840])
	$8 = CALL $99(($5 + [880]), ($5 + [232]))
	if ( ((int_64)*($5 + [856]) == (int_64)*($8)) ){ goto $label$1 }
	CALL $233($0)
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$4 }
	$1 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$1 = $2
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	$1 = $2
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$7 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [13801])
	
.LABEL $label$3
	$8 = CALL $15([12244])
	if ( ($8 <= [8]) ){ goto $label$11 }
	CALL eosio_assert([0], [14622])
	goto $label$10 
	
.LABEL $label$11
	if ( ($8 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	$1 = (int_64)0
	
.LOOP $label$12:
	$7 = *(($8 + [12243]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$13 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$13
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$12 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$8 
	
.LABEL $label$9
	$1 = (int_64)0
	
.LABEL $label$8
	if ( ((int_64)*($3 + [8]) == (int_64)((int_64)$1 | (int_64)4)) ){ goto $label$14 }
	CALL eosio_assert([0], [13801])
	
.LABEL $label$14
	*(($7 = (($5 + [824]) + [8]))) = *(($3 + [8]))
	*($5 + [824]) = *($3)
	$8 = CALL $52(($5 + [808]), $4)
	*((($5 + [216]) + [8])) = *($7)
	*($5 + [216]) = *($5 + [824])
	$7 = CALL $214($0, $1, $1, ($5 + [216]), $8)
	if ( ((*($8) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*($8 + [8]))
	
.LABEL $label$15
	if ( $7 ){ goto $label$1 }
	*($5 + [792]) = (int_64)0
	*($5 + [784]) = (int_64)0
	*($5 + [776]) = (int_64)0
	*($5 + [768]) = (int_64)0
	*($5 + [760]) = (int_64)0
	*($5 + [752]) = (int_64)0
	*($5 + [744]) = (int_64)0
	*($5 + [736]) = (int_64)0
	*($5 + [728]) = (int_64)0
	*($5 + [720]) = (int_64)0
	*($5 + [712]) = [0]
	*($5 + [704]) = (int_64)0
	$8 = CALL $52(($5 + [688]), $4)
	CALL $112($8, ($5 + [800]), ($5 + [792]), ($5 + [784]), ($5 + [768]), ($5 + [752]), ($5 + [736]), ($5 + [720]), ($5 + [704]))
	if ( ((*($8) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*($8 + [8]))
	
.LABEL $label$16
	$1 = *($5 + [792])
	if ( ((int_64)*($5 + [784]) != (int_64)$1) ){ goto $label$17 }
	CALL eosio_assert([0], [13649])
	$1 = *($5 + [792])
	
.LABEL $label$17
	CALL $215($0, $1)
	$10 = ($0 + [808])
	$1 = *($5 + [800])
	$7 = *(($0 + [836]))
	$9 = *(($0 + [832]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$19 }
	
.LOOP $label$21:
	$8 = ($7 + [-24])
	$4 = *($8)
	if ( ((int_64)*($4) == (int_64)$1) ){ goto $label$20 }
	$7 = $8
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$19 }
	if ( ((int_32)*($4 + [144]) == (int_32)$10) ){ goto $label$18 }
	CALL eosio_assert([0], [14937])
	goto $label$18 
	
.LABEL $label$19
	$4 = [0]
	$8 = CALL db_find_i64(*($10), *(($0 + [816])), (int_64)7035937633859534848, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$22 }
	$4 = CALL $157($10, $8)
	if ( ((int_32)*($4 + [144]) == (int_32)$10) ){ goto $label$18 }
	CALL eosio_assert([0], [14937])
	goto $label$18 
	
.LABEL $label$22
	CALL eosio_assert([0], [13195])
	
.LABEL $label$18
	if ( ((int_64)$1 == (int_64)*(($0 + [488]))) ){ goto $label$23 }
	CALL eosio_assert([0], [13876])
	
.LABEL $label$23
	if ( (*($4 + [20]) == 0) ){ goto $label$24 }
	CALL eosio_assert([0], [13889])
	
.LABEL $label$24
	*(($5 + [680])) = [0]
	*($5 + [664]) = (int_64)-1
	*($5 + [672]) = (int_64)0
	$2 = *($0)
	*($5 + [648]) = $2
	*($5 + [656]) = $1
	$8 = CALL db_find_i64($2, $1, (int_64)-6497942333781180416, *($5 + [792]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$30 }
	$8 = CALL $165(($5 + [648]), $8)
	if ( ((int_32)*($8 + [116]) == (int_32)($5 + [648])) ){ goto $label$31 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$31
	$2 = *(($8 + [88]))
	*((($5 + [536]) + [8])) = $2
	*($5 + [536]) = *($8 + [80])
	if ( ((int_64)$2 == (int_64)*(($3 + [8]))) ){ goto $label$32 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$32
	$2 = ((int_64)*($5 + [536]) + (int_64)*($3))
	*($5 + [536]) = $2
	if ( ((int_64)$2 <= (int_64)-4611686018427387904) ){ goto $label$29 }
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$28 }
	CALL eosio_assert([0], [15078])
	goto $label$28 
	
.LABEL $label$30
	$2 = *(($3 + [8]))
	*(($8 = (($5 + [632]) + [8]))) = $2
	*(($7 = (($5 + [616]) + [8]))) = $2
	*(($4 = (($5 + [600]) + [8]))) = *((($5 + [768]) + [8]))
	*(($9 = (($5 + [584]) + [8]))) = *((($5 + [752]) + [8]))
	*(($10 = (($5 + [568]) + [8]))) = *((($5 + [736]) + [8]))
	*($5 + [600]) = *($5 + [768])
	*($5 + [584]) = *($5 + [752])
	*($5 + [568]) = *($5 + [736])
	$2 = *($3)
	*($5 + [632]) = $2
	*($5 + [616]) = $2
	*(($11 = (($5 + [552]) + [8]))) = *((($5 + [720]) + [8]))
	*((($5 + [104]) + [8])) = *($8)
	*((($5 + [88]) + [8])) = *($7)
	*((($5 + [72]) + [8])) = *($4)
	*((($5 + [56]) + [8])) = *($9)
	*($5 + [552]) = *($5 + [720])
	*($5 + [104]) = *($5 + [632])
	*($5 + [88]) = *($5 + [616])
	*($5 + [72]) = *($5 + [600])
	*($5 + [56]) = *($5 + [584])
	*((($5 + [40]) + [8])) = *($10)
	*((($5 + [24]) + [8])) = *($11)
	*($5 + [40]) = *($5 + [568])
	*($5 + [24]) = *($5 + [552])
	CALL $234($0, ($5 + [104]), ($5 + [88]), ($5 + [72]), ($5 + [56]), ($5 + [40]), ($5 + [24]))
	$2 = *($0)
	*($5 + [272]) = $3
	*($5 + [252]) = ($5 + [784])
	*($5 + [248]) = ($5 + [792])
	*($5 + [256]) = ($5 + [768])
	*($5 + [260]) = ($5 + [752])
	*($5 + [264]) = ($5 + [736])
	*($5 + [268]) = ($5 + [720])
	*($5 + [276]) = ($5 + [856])
	*($5 + [416]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($5 + [648])) ){ goto $label$33 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$33
	*($5 + [884]) = ($5 + [248])
	*($5 + [880]) = ($5 + [648])
	*($5 + [888]) = ($5 + [416])
	*(($8 = CALL $7([128])) + [8]) = (int_64)0
	*($8) = (int_64)0
	*($8 + [16]) = (int_64)0
	*($8 + [24]) = (int_64)0
	*($8 + [32]) = (int_64)0
	*($8 + [40]) = (int_64)0
	*($8 + [48]) = (int_64)0
	*($8 + [56]) = (int_64)0
	*($8 + [64]) = (int_64)0
	*($8 + [72]) = (int_64)0
	*($8 + [80]) = (int_64)0
	*($8 + [88]) = (int_64)0
	*($8 + [96]) = (int_64)0
	*($8 + [104 align=4]) = (int_64)0
	*($8 + [112]) = [0]
	*($8 + [116]) = ($5 + [648])
	CALL $235(($5 + [880]), $8)
	*($5 + [864]) = $8
	$2 = *($8)
	*($5 + [880]) = $2
	$4 = *($8 + [120])
	*($5 + [392]) = $4
	$9 = ($5 + [676])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)*(($5 + [680]))) ){ goto $label$27 }
	*($7 + [8]) = $2
	*($7 + [16]) = $4
	*($5 + [864]) = [0]
	*($7) = $8
	*($9) = ($7 + [24])
	$8 = *($5 + [864])
	*($5 + [864]) = [0]
	if ( $8 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$29
	CALL eosio_assert([0], [15059])
	
.LABEL $label$28
	*(($7 = (($5 + [520]) + [8]))) = *(($3 + [8]))
	*(($4 = (($5 + [504]) + [8]))) = *((($5 + [768]) + [8]))
	*(($9 = (($5 + [488]) + [8]))) = *((($5 + [752]) + [8]))
	*(($10 = (($5 + [472]) + [8]))) = *((($5 + [736]) + [8]))
	*(($11 = (($5 + [456]) + [8]))) = *((($5 + [720]) + [8]))
	*($5 + [504]) = *($5 + [768])
	*($5 + [488]) = *($5 + [752])
	*($5 + [472]) = *($5 + [736])
	*($5 + [456]) = *($5 + [720])
	*($5 + [520]) = *($3)
	*((($5 + [200]) + [8])) = *((($5 + [536]) + [8]))
	*((($5 + [184]) + [8])) = *($7)
	*((($5 + [168]) + [8])) = *($4)
	*((($5 + [152]) + [8])) = *($9)
	*((($5 + [136]) + [8])) = *($10)
	*($5 + [200]) = *($5 + [536])
	*($5 + [184]) = *($5 + [520])
	*($5 + [168]) = *($5 + [504])
	*($5 + [152]) = *($5 + [488])
	*($5 + [136]) = *($5 + [472])
	*((($5 + [120]) + [8])) = *($11)
	*($5 + [120]) = *($5 + [456])
	CALL $234($0, ($5 + [200]), ($5 + [184]), ($5 + [168]), ($5 + [152]), ($5 + [136]), ($5 + [120]))
	$2 = *($0)
	*($5 + [264]) = $3
	*($5 + [252]) = ($5 + [752])
	*($5 + [248]) = ($5 + [768])
	*($5 + [256]) = ($5 + [736])
	*($5 + [260]) = ($5 + [720])
	*($5 + [268]) = ($5 + [856])
	*($5 + [272]) = ($5 + [792])
	*($5 + [276]) = ($5 + [784])
	CALL $236(($5 + [648]), $8, $2, ($5 + [248]))
	goto $label$25 
	
.LABEL $label$27
	CALL $237(($5 + [672]), ($5 + [864]), ($5 + [880]), ($5 + [392]))
	$8 = *($5 + [864])
	*($5 + [864]) = [0]
	if ( ($8 == 0) ){ goto $label$25 }
	
.LABEL $label$26
	if ( ((*($8 + [104]) & [1]) == 0) ){ goto $label$34 }
	CALL $9(*(($8 + [112])))
	
.LABEL $label$34
	CALL $9($8)
	
.LABEL $label$25
	*(($4 = ($5 + [448]))) = [0]
	*($5 + [424]) = $1
	*($5 + [432]) = (int_64)-1
	*($5 + [440]) = (int_64)0
	$2 = *($0)
	*($5 + [416]) = $2
	*($5 + [252]) = ($5 + [792])
	*($5 + [248]) = ($5 + [416])
	*($5 + [256]) = ($5 + [768])
	*($5 + [260]) = ($5 + [752])
	*($5 + [264]) = ($5 + [736])
	*($5 + [268]) = ($5 + [720])
	*($5 + [272]) = ($5 + [856])
	*($5 + [864]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($5 + [416])) ){ goto $label$35 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$35
	*($5 + [884]) = ($5 + [248])
	*($5 + [880]) = ($5 + [416])
	*($5 + [888]) = ($5 + [864])
	*(($8 = CALL $7([144])) + [16]) = (int_64)0
	*($8 + [8]) = (int_64)0
	*($8 + [24]) = (int_64)0
	*($8 + [32]) = (int_64)0
	*($8 + [40]) = (int_64)0
	*($8 + [48]) = (int_64)0
	*($8 + [56]) = (int_64)0
	*($8 + [64]) = (int_64)0
	*($8 + [72]) = (int_64)0
	*($8 + [80]) = (int_64)0
	*($8 + [96]) = (int_64)0
	*(($8 + [120])) = (int_64)0
	*(($8 + [112])) = (int_64)0
	*(($8 + [104])) = (int_64)0
	*($8 + [132]) = ($5 + [416])
	CALL $238(($5 + [880]), $8)
	*($5 + [392]) = $8
	$2 = *($8)
	*($5 + [880]) = $2
	$9 = *($8 + [136])
	*($5 + [368]) = $9
	$10 = ($5 + [444])
	$7 = *($10)
	if ( ((uint_32)$7 >= (uint_32)*($4)) ){ goto $label$38 }
	*($7 + [8]) = $2
	*($7 + [16]) = $9
	*($5 + [392]) = [0]
	*($7) = $8
	*($10) = ($7 + [24])
	$8 = *($5 + [392])
	*($5 + [392]) = [0]
	if ( $8 ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$38
	CALL $239(($5 + [440]), ($5 + [392]), ($5 + [880]), ($5 + [368]))
	$8 = *($5 + [392])
	*($5 + [392]) = [0]
	if ( ($8 == 0) ){ goto $label$36 }
	
.LABEL $label$37
	CALL $9($8)
	
.LABEL $label$36
	*($5 + [408]) = [13901]
	*($5 + [412]) = CALL $15([13901])
	*($5 + [16]) = *($5 + [408])
	$8 = CALL $99(($5 + [248]), ($5 + [16]))
	if ( ((int_64)*($5 + [856]) != (int_64)*($8)) ){ goto $label$39 }
	$2 = *($0)
	*($5 + [376]) = [13263]
	*($5 + [380]) = CALL $15([13263])
	*($5 + [8]) = *($5 + [376])
	$8 = CALL $99(($5 + [384]), ($5 + [8]))
	*($5 + [392]) = $2
	*($5 + [400]) = *($8)
	*($5 + [360]) = [13911]
	*($5 + [364]) = CALL $15([13911])
	*($5) = *($5 + [360])
	$8 = CALL $99(($5 + [368]), $5)
	*(($5 + [272])) = *(($3 + [8]))
	*(($5 + [288])) = *((($5 + [768]) + [8]))
	*(($5 + [304])) = *((($5 + [752]) + [8]))
	*(($5 + [320])) = *((($5 + [736]) + [8]))
	*($5 + [248]) = $1
	*($5 + [256]) = *($5 + [792])
	*($5 + [264]) = *($3)
	*($5 + [280]) = *($5 + [768])
	*($5 + [296]) = *($5 + [752])
	*($5 + [312]) = *($5 + [736])
	*(($5 + [336])) = *((($5 + [720]) + [8]))
	*($5 + [328]) = *($5 + [720])
	CALL $52(($5 + [344]), ($5 + [704]))
	$1 = CALL $86()
	*(($5 + [908])) = (int_64)0
	*(($5 + [924])) = (int_64)0
	*(($5 + [932])) = (int_64)0
	*($5 + [892]) = [0]
	*($5 + [896]) = [0]
	*($5 + [900 align=4]) = (int_64)0
	*($5 + [916 align=4]) = (int_64)0
	*($5 + [880]) = ((CASTING uint_32)(uint_64 ((int_64)$1 / (int_64)1000000)) + [60])
	CALL $240(($5 + [916]), ($5 + [392]), $0, $8, ($5 + [248]))
	$1 = ((int_64)*($0 + [72]) + (int_64)1)
	*($0 + [72]) = $1
	$2 = CALL $86()
	*($5 + [864]) = $2
	*($5 + [872]) = ((int_64)$1 | (int_64)$2 >> (int_64)63))
	CALL $171(($5 + [880]), ($5 + [864]), *($0), [0])
	CALL $172(($5 + [880]))
	if ( ((*($5 + [344]) & [1]) == 0) ){ goto $label$39 }
	CALL $9(*(($5 + [352])))
	
.LABEL $label$39
	CALL $241($0)
	$0 = *($5 + [440])
	if ( ($0 == 0) ){ goto $label$40 }
	$4 = ($5 + [444])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$42 }
	
.LOOP $label$43:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$44 }
	CALL $9($7)
	
.LABEL $label$44
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$43 }
	$8 = *(($5 + [440]))
	goto $label$41 
	
.LABEL $label$42
	$8 = $0
	
.LABEL $label$41
	*($4) = $0
	CALL $9($8)
	
.LABEL $label$40
	$0 = *($5 + [672])
	if ( ($0 == 0) ){ goto $label$45 }
	$4 = ($5 + [676])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$47 }
	
.LOOP $label$48:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$49 }
	if ( ((*($7 + [104]) & [1]) == 0) ){ goto $label$50 }
	CALL $9(*(($7 + [112])))
	
.LABEL $label$50
	CALL $9($7)
	
.LABEL $label$49
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$48 }
	$8 = *(($5 + [672]))
	goto $label$46 
	
.LABEL $label$47
	$8 = $0
	
.LABEL $label$46
	*($4) = $0
	CALL $9($8)
	
.LABEL $label$45
	if ( ((*($5 + [704]) & [1]) == 0) ){ goto $label$1 }
	CALL $9(*(($5 + [712])))
	
.LABEL $label$1
	$global$0 = ($5 + [944])
}

void .FUNC $231 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15633])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15678])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [15728])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

int_32 .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( (CALL $76(int_32(($3 << [24]) >> [24])) == 0) ){ goto $label$3 }
	$3 = *($0 + [1])
	$4 = ($0 + [1])
	$0 = $4
	if ( $3 ){ goto $label$4 }
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)[49]) ){ goto $label$2 }
	$3 = [0]
	
.LOOP $label$5:
	$4 = ($0 + $3)
	$5 = ($3 + [1])
	$3 = $5
	if ( ((int_32)*(($4 + [1])) == (int_32)[49]) ){ goto $label$5 }
	$4 = ($0 + $5)
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	$4 = $0
	
.LABEL $label$1
	$0 = ((uint_32)((int_32)CALL $15($4) * (int_32)[733]) / (uint_32)[1000])
	$6 = ($0 + [1])
	$7 = CALL $7($6)
	$8 = ($7 + $0)
	$0 = [0]
	
.LOOP $label$6:
	*(($7 + $0)) = [0]
	$0 = ($0 + [1])
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$6 }
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$17 }
	$3 = [0]
	
.LOOP $label$18:
	$9 = $3
	$10 = $4
	if ( CALL $76(int_32(($0 << [24]) >> [24])) ){ goto $label$16 }
	$0 = *($10)
	$11 = *(($0 + [11792]))
	if ( ((int_32)$11 == (int_32)[-1]) ){ goto $label$14 }
	if ( ((int_32)$0 != (int_32)[49]) ){ goto $label$20 }
	$3 = [0]
	if ( ($9 == 0) ){ goto $label$19 }
	
.LABEL $label$20
	$3 = [0]
	$0 = $8
	
.LOOP $label$22:
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$21 }
	$4 = (((int_32)*($0) * (int_32)[58]) + $11)
	*($0) = $4
	$3 = ($3 + [1])
	$0 = ($0 + [-1])
	$11 = ((int_32)$4 / (int_32)[256])
	if ( ((uint_32)($4 + [255]) > (uint_32)[510]) ){ goto $label$22 }
	if ( ($3 <= $9) ){ goto $label$22 }
	goto $label$19 
	
.LABEL $label$21
	if ( $11 ){ goto $label$9 }
	
.LABEL $label$19
	$4 = ($10 + [1])
	$0 = *($10 + [1])
	if ( $0 ){ goto $label$18 }
	goto $label$15 
	
.LABEL $label$17
	$3 = [0]
	goto $label$15 
	
.LABEL $label$16
	$3 = $9
	$4 = $10
	
.LABEL $label$15
	$9 = ($7 + $6)
	$0 = ($4 + [-1])
	
.LOOP $label$23:
	$0 = ($0 + [1])
	if ( CALL $76(*($0)) ){ goto $label$23 }
	$4 = [0]
	if ( *($0) ){ goto $label$13 }
	$4 = ($7 + ($6 - $3))
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$12 }
	$0 = $4
	if ( *($4) ){ goto $label$10 }
	$6 = ([0] - $3)
	$0 = [-1]
	$11 = $8
	
.LOOP $label$24:
	$4 = $11
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$11 }
	$0 = ($0 + [-1])
	$11 = ($4 + [1])
	if ( (*((($4 + $6) + [2])) == 0) ){ goto $label$24 }
	$0 = (($4 - $3) + [2])
	$4 = (($11 - $3) + [1])
	goto $label$10 
	
.LABEL $label$14
	$4 = [0]
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$12
	$0 = $9
	goto $label$10 
	
.LABEL $label$11
	$0 = (($4 - $3) + [2])
	$4 = $0
	
.LABEL $label$10
	$3 = (($9 - $4) + $5)
	$11 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $11) >= (uint_32)$3) ){ goto $label$25 }
	$4 = *($1 + [4])
	$4 = *($1)
	$11 = (*($1 + [4]) - $4)
	$10 = CALL $7($3)
	$12 = ($10 + ($4 - $11))
	$6 = ($12 - $11)
	$3 = ($10 + $3)
	if ( ((int_32)$11 < (int_32)[1]) ){ goto $label$26 }
	CALL memcpy($6, $4, $11)
	$4 = *($1)
	
.LABEL $label$26
	*($1) = $6
	*(($1 + [4])) = $12
	*(($1 + [8])) = $3
	if ( ($4 == 0) ){ goto $label$25 }
	CALL $9($4)
	
.LABEL $label$25
	*($2 + [15]) = [0]
	CALL $94($1, $5, ($2 + [15]))
	if ( ((int_32)$0 == (int_32)$9) ){ goto $label$27 }
	$6 = ($8 + [1])
	$9 = ($1 + [8])
	$4 = ($1 + [4])
	
.LOOP $label$28:
	$3 = ($0 + [1])
	$11 = *($4)
	if ( ((int_32)$11 == (int_32)*($9)) ){ goto $label$29 }
	*($11) = *($0)
	*($4) = (*($4) + [1])
	$0 = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	CALL $95($1, $0)
	$0 = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$28 }
	
.LABEL $label$27
	$4 = [1]
	if ( $7 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $81([12048], [12059], [199], [12069])
	
.LABEL $label$8
	CALL $9($7)
	
.LABEL $label$7
	$global$0 = ($2 + [16])
	(unreachable)
	return $4
}

int_32 .FUNC $65 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$3 }
	$4 = ($0 + [1])
	$5 = [-1]
	$0 = uint_32($3 >> [1])
	if ( ((uint_32)$0 <= (uint_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [8])
	$5 = [-1]
	$0 = *($0 + [4])
	if ( ((uint_32)$0 > (uint_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	$0 = ($0 - $2)
	if ( ($0 == 0) ){ goto $label$4 }
	$0 = CALL $16(($4 + $2), ($1 & [255]), $0)
	return ( ($0 - $4) ? [-1] : $0 )
	
.LABEL $label$4
	return ( ([0] - $4) ? [-1] : [0] )
}

void .FUNC $85 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [160])
	$global$0 = $3
	$4 = *($0)
	*($3 + [131]) = (uint_64)$4 >> (uint_64)(int_64)32)
	*($3 + [130]) = (uint_64)$4 >> (uint_64)(int_64)40)
	*($3 + [129]) = (uint_64)$4 >> (uint_64)(int_64)48)
	*($3 + [128]) = (uint_64)$4 >> (uint_64)(int_64)56)
	$5 = *(($0 + [8]))
	*($3 + [123]) = (uint_64)$5 >> (uint_64)(int_64)32)
	*($3 + [122]) = (uint_64)$5 >> (uint_64)(int_64)40)
	*($3 + [121]) = (uint_64)$5 >> (uint_64)(int_64)48)
	*($3 + [120]) = (uint_64)$5 >> (uint_64)(int_64)56)
	$6 = (CASTING uint_32)(uint_64 $4)
	*($3 + [135]) = $6
	*($3 + [134]) = uint_32($6 >> [8])
	*($3 + [133]) = uint_32($6 >> [16])
	*($3 + [132]) = uint_32($6 >> [24])
	$6 = (CASTING uint_32)(uint_64 $5)
	*($3 + [127]) = $6
	*($3 + [126]) = uint_32($6 >> [8])
	*($3 + [125]) = uint_32($6 >> [16])
	*($3 + [124]) = uint_32($6 >> [24])
	$4 = *(($0 + [24]))
	*($3 + [143]) = $4
	$5 = *($0 + [16])
	*($3 + [147]) = (uint_64)$5 >> (uint_64)(int_64)32)
	*($3 + [146]) = (uint_64)$5 >> (uint_64)(int_64)40)
	*($3 + [145]) = (uint_64)$5 >> (uint_64)(int_64)48)
	*($3 + [144]) = (uint_64)$5 >> (uint_64)(int_64)56)
	*($3 + [139]) = (uint_64)$4 >> (uint_64)(int_64)32)
	*($3 + [138]) = (uint_64)$4 >> (uint_64)(int_64)40)
	*($3 + [137]) = (uint_64)$4 >> (uint_64)(int_64)48)
	*($3 + [136]) = (uint_64)$4 >> (uint_64)(int_64)56)
	$0 = (CASTING uint_32)(uint_64 $4)
	*($3 + [142]) = uint_32($0 >> [8])
	*($3 + [141]) = uint_32($0 >> [16])
	*($3 + [140]) = uint_32($0 >> [24])
	$0 = (CASTING uint_32)(uint_64 $5)
	*($3 + [151]) = $0
	*($3 + [150]) = uint_32($0 >> [8])
	*($3 + [149]) = uint_32($0 >> [16])
	*($3 + [148]) = uint_32($0 >> [24])
	$7 = ($3 + [118])
	$4 = *($1)
	$6 = ($3 + [48])
	
.LOOP $label$2:
	$0 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($3) = (($8) << [7]) | ($0 & [127]))
	$0 = $6
	if ( ((int_32)($7 - $0) <= (int_32)[0]) ){ goto $label$3 }
	CALL memcpy($0, $3, [1])
	$6 = ($0 + [1])
	if ( $8 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10643])
	CALL memcpy($0, $3, [1])
	$6 = ($0 + [1])
	if ( $8 ){ goto $label$2 }
	
.LABEL $label$1
	$8 = ($1 + [4])
	if ( ((int_32)($7 - $6) > (int_32)[64]) ){ goto $label$4 }
	CALL eosio_assert([0], [10643])
	
.LABEL $label$4
	CALL memcpy($6, $8, [65])
	$1 = ($0 + [66])
	$7 = ($3 + [38])
	$4 = *($2)
	$6 = $3
	
.LOOP $label$5:
	$0 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($3 + [159]) = (($8) << [7]) | ($0 & [127]))
	$0 = $6
	if ( ((int_32)($7 - $0) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [10643])
	
.LABEL $label$6
	CALL memcpy($0, ($3 + [159]), [1])
	$6 = ($0 + [1])
	if ( $8 ){ goto $label$5 }
	$8 = ($2 + [4])
	if ( ((int_32)($7 - $6) > (int_32)[32]) ){ goto $label$7 }
	CALL eosio_assert([0], [10643])
	
.LABEL $label$7
	CALL memcpy($6, $8, [33])
	CALL assert_recover_key(($3 + [120]), ($3 + [48]), ($1 - ($3 + [48])), $3, (($0 + [34]) - $3))
	$global$0 = ($3 + [160])
}

void .FUNC $58 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$5 }
	$5 = uint_32($3 >> [1])
	if ( ($5 <= $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$3 }
	
.LABEL $label$4
	$1 = ($1 - $5)
	if ( ($1 == 0) ){ goto $label$2 }
	if ( $4 ){ goto $label$8 }
	$5 = [10]
	$4 = uint_32($3 >> [1])
	if ( (([10] - $4) <= $1) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = *($0 + [4])
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	if ( ((uint_32)($5 - $4) >= (uint_32)$1) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $59($0, $5, (($4 + $1) - $5), $4, $4, [0], [0])
	$3 = *($0)
	
.LABEL $label$6
	if ( ($3 & [1]) ){ goto $label$10 }
	$3 = ($0 + [1])
	goto $label$9 
	
.LABEL $label$10
	$3 = *($0 + [8])
	
.LABEL $label$9
	CALL memset(($3 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$11
	*($0 + [4]) = $1
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$3
	if ( $4 ){ goto $label$1 }
	*((($0 + $1) + [1])) = [0]
	*($0) = ($1 << [1])
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*((*($0 + [8]) + $1)) = [0]
	*($0 + [4]) = $1
}

void .FUNC $59 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $7($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $9($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $271 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$0 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $270 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [15059])
	$7 = *(($1 + [8]))
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$5
	*($1 + [24]) = ((int_64)CALL $86() / (int_64)1000000)
	$3 = ($1 + [24])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [15228])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-32])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($8 + [-4])
	*($5 + [24]) = ($5 + [8])
	*($5 + [40]) = $3
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	CALL $271(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [32]), $2, $4, [28])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

int_32 .FUNC $277 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [1088])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [1080]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$5
	CALL memcpy(($4 + [1080]), $2, [8])
	*((($4 + [8]) + [8])) = $3
	*($4 + [28]) = ($2 + [8])
	*($4 + [24]) = $2
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$8 = CALL $123(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *($4 + [1080])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	CALL $127($8)
	$global$0 = ($4 + [1088])
	return [1]
}

int_32 .FUNC $276 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [1152])
	$global$0 = $3
	*(($4 = $3) + [1144]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [1120])) = (int_64)0
	*(($4 + [1136])) = [0]
	*($4 + [1104]) = (int_64)0
	*($4 + [1096]) = (int_64)0
	*($4 + [1112]) = (int_64)0
	*($4 + [1128]) = (int_64)0
	*($4 + [1084]) = $2
	*($4 + [1080]) = $2
	*($4 + [1088]) = ($2 + $5)
	*($4 + [16]) = ($4 + [1080])
	*($4 + [40]) = ($4 + [1096])
	CALL $293(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [1088])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [1080])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $123(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [1144])
	CALL $294(($4 + [16]), ($4 + [1096]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $127($3)
	if ( ((*($4 + [1128]) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*(($4 + [1136])))
	
.LABEL $label$5
	$global$0 = ($4 + [1152])
	return [1]
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [480])
	$global$0 = $3
	CALL $0()
	*($3 + [464]) = [14356]
	*($3 + [468]) = CALL $15([14356])
	*($3 + [232]) = *($3 + [464])
	CALL $99(($3 + [472]), ($3 + [232]))
	if ( ((int_64)$2 != (int_64)-6569208335818555392) ){ goto $label$1 }
	*($3 + [456]) = [14364]
	*($3 + [460]) = CALL $15([14364])
	*($3 + [224]) = *($3 + [456])
	CALL $99(($3 + [472]), ($3 + [224]))
	if ( ((int_64)$1 == (int_64)6138663577826885632) ){ goto $label$1 }
	CALL eosio_assert([0], [14370])
	
.LABEL $label$1
	*($3 + [448]) = [12273]
	*($3 + [452]) = CALL $15([12273])
	*($3 + [216]) = *($3 + [448])
	CALL $99(($3 + [472]), ($3 + [216]))
	if ( ((int_64)$1 != (int_64)6138663591592764928) ){ goto $label$2 }
	*($3 + [432]) = [13270]
	*($3 + [436]) = CALL $15([13270])
	*($3 + [208]) = *($3 + [432])
	CALL $99(($3 + [440]), ($3 + [208]))
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$2 }
	*($3 + [428]) = [0]
	*($3 + [424]) = [6]
	*($3 + [200]) = *($3 + [424])
	CALL $276($0, (int_64)6138663591592764928, ($3 + [200]))
	
.LABEL $label$2
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$5 }
	*($3 + [416]) = [13270]
	*($3 + [420]) = CALL $15([13270])
	*($3 + [184]) = *($3 + [416])
	CALL $99(($3 + [472]), ($3 + [184]))
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$4 }
	*($3 + [408]) = [14356]
	*($3 + [412]) = CALL $15([14356])
	*($3 + [8]) = *($3 + [408])
	CALL $99(($3 + [440]), ($3 + [8]))
	goto $label$3 
	
.LABEL $label$5
	*($3 + [408]) = [14356]
	*($3 + [412]) = CALL $15([14356])
	*($3 + [192]) = *($3 + [408])
	CALL $99(($3 + [440]), ($3 + [192]))
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_64)$2 <= (int_64)-3112434011270742017) ){ goto $label$25 }
	if ( ((int_64)$2 <= (int_64)4229699935735382015) ){ goto $label$24 }
	if ( ((int_64)$2 > (int_64)5606348217378668543) ){ goto $label$22 }
	if ( ((int_64)$2 == (int_64)4229699935735382016) ){ goto $label$18 }
	if ( ((int_64)$2 == (int_64)5378296978062966784) ){ goto $label$17 }
	if ( ((int_64)$2 != (int_64)5564535552995606528) ){ goto $label$3 }
	*($3 + [316]) = [0]
	*($3 + [312]) = [7]
	*($3 + [104]) = *($3 + [312])
	CALL $277($0, $1, ($3 + [104]))
	goto $label$3 
	
.LABEL $label$25
	if ( ((int_64)$2 > (int_64)-4417032211467862017) ){ goto $label$23 }
	if ( ((int_64)$2 <= (int_64)-5002474256057884673) ){ goto $label$21 }
	if ( ((int_64)$2 == (int_64)-5002474256057884672) ){ goto $label$16 }
	if ( ((int_64)$2 == (int_64)-5001342339331915776) ){ goto $label$15 }
	if ( ((int_64)$2 != (int_64)-4992623624440512512) ){ goto $label$3 }
	*($3 + [364]) = [0]
	*($3 + [360]) = [8]
	*($3 + [56]) = *($3 + [360])
	CALL $278($0, $1, ($3 + [56]))
	goto $label$3 
	
.LABEL $label$24
	if ( ((int_64)$2 <= (int_64)-3076405216337723393) ){ goto $label$20 }
	if ( ((int_64)$2 == (int_64)-3076405216337723392) ){ goto $label$14 }
	if ( ((int_64)$2 == (int_64)3626093248789590416) ){ goto $label$13 }
	if ( ((int_64)$2 != (int_64)4154295077906677760) ){ goto $label$3 }
	*($3 + [292]) = [0]
	*($3 + [288]) = [9]
	*($3 + [128]) = *($3 + [288])
	CALL $279($0, $1, ($3 + [128]))
	goto $label$3 
	
.LABEL $label$23
	if ( ((int_64)$2 <= (int_64)-4417018952356576769) ){ goto $label$19 }
	if ( ((int_64)$2 == (int_64)-4417018952356576768) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)-4149693587203817472) ){ goto $label$11 }
	if ( ((int_64)$2 != (int_64)-3112434013357211648) ){ goto $label$3 }
	*($3 + [308]) = [0]
	*($3 + [304]) = [10]
	*($3 + [112]) = *($3 + [304])
	CALL $280($0, $1, ($3 + [112]))
	goto $label$3 
	
.LABEL $label$22
	if ( ((int_64)$2 == (int_64)5606348217378668544) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)5606348767134482432) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)8421058649346015232) ){ goto $label$3 }
	*($3 + [404]) = [0]
	*($3 + [400]) = [11]
	*($3 + [16]) = *($3 + [400])
	CALL $281($0, $1, ($3 + [16]))
	goto $label$3 
	
.LABEL $label$21
	if ( ((int_64)$2 == (int_64)-5069206000884514816) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)-5003315098217873408) ){ goto $label$3 }
	*($3 + [276]) = [0]
	*($3 + [272]) = [12]
	*($3 + [144]) = *($3 + [272])
	CALL $280($0, $1, ($3 + [144]))
	goto $label$3 
	
.LABEL $label$20
	if ( ((int_64)$2 == (int_64)-3112434011270742016) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)-3076405216338247680) ){ goto $label$3 }
	*($3 + [324]) = [0]
	*($3 + [320]) = [13]
	*($3 + [96]) = *($3 + [320])
	CALL $282($0, $1, ($3 + [96]))
	goto $label$3 
	
.LABEL $label$19
	if ( ((int_64)$2 == (int_64)-4417032211467862016) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)-4417018952356577280) ){ goto $label$3 }
	*($3 + [380]) = [0]
	*($3 + [376]) = [14]
	*($3 + [40]) = *($3 + [376])
	CALL $283($0, $1, ($3 + [40]))
	goto $label$3 
	
.LABEL $label$18
	*($3 + [372]) = [0]
	*($3 + [368]) = [15]
	*($3 + [48]) = *($3 + [368])
	CALL $284($0, $1, ($3 + [48]))
	goto $label$3 
	
.LABEL $label$17
	*($3 + [348]) = [0]
	*($3 + [344]) = [16]
	*($3 + [72]) = *($3 + [344])
	CALL $281($0, $1, ($3 + [72]))
	goto $label$3 
	
.LABEL $label$16
	*($3 + [284]) = [0]
	*($3 + [280]) = [17]
	*($3 + [136]) = *($3 + [280])
	CALL $285($0, $1, ($3 + [136]))
	goto $label$3 
	
.LABEL $label$15
	*($3 + [332]) = [0]
	*($3 + [328]) = [18]
	*($3 + [88]) = *($3 + [328])
	CALL $280($0, $1, ($3 + [88]))
	goto $label$3 
	
.LABEL $label$14
	*($3 + [268]) = [0]
	*($3 + [264]) = [19]
	*($3 + [152]) = *($3 + [264])
	CALL $286($0, $1, ($3 + [152]))
	goto $label$3 
	
.LABEL $label$13
	*($3 + [340]) = [0]
	*($3 + [336]) = [20]
	*($3 + [80]) = *($3 + [336])
	CALL $287($0, $1, ($3 + [80]))
	goto $label$3 
	
.LABEL $label$12
	*($3 + [252]) = [0]
	*($3 + [248]) = [21]
	*($3 + [168]) = *($3 + [248])
	CALL $288($0, $1, ($3 + [168]))
	goto $label$3 
	
.LABEL $label$11
	*($3 + [356]) = [0]
	*($3 + [352]) = [22]
	*($3 + [64]) = *($3 + [352])
	CALL $277($0, $1, ($3 + [64]))
	goto $label$3 
	
.LABEL $label$10
	*($3 + [388]) = [0]
	*($3 + [384]) = [23]
	*($3 + [32]) = *($3 + [384])
	CALL $289($0, $1, ($3 + [32]))
	goto $label$3 
	
.LABEL $label$9
	*($3 + [260]) = [0]
	*($3 + [256]) = [24]
	*($3 + [160]) = *($3 + [256])
	CALL $290($0, $1, ($3 + [160]))
	goto $label$3 
	
.LABEL $label$8
	*($3 + [300]) = [0]
	*($3 + [296]) = [25]
	*($3 + [120]) = *($3 + [296])
	CALL $291($0, $1, ($3 + [120]))
	goto $label$3 
	
.LABEL $label$7
	*($3 + [244]) = [0]
	*($3 + [240]) = [26]
	*($3 + [176]) = *($3 + [240])
	CALL $277($0, $1, ($3 + [176]))
	goto $label$3 
	
.LABEL $label$6
	*($3 + [396]) = [0]
	*($3 + [392]) = [27]
	*($3 + [24]) = *($3 + [392])
	CALL $292($0, $1, ($3 + [24]))
	
.LABEL $label$3
	CALL $89([0])
	$global$0 = ($3 + [480])
}

void .FUNC $274 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0)
	*($2 + [16]) = [13146]
	*($2 + [20]) = CALL $15([13146])
	*($2 + [8]) = *($2 + [16])
	CALL require_auth2($3, *(CALL $99(($2 + [24]), ($2 + [8]))))
	$global$0 = ($2 + [32])
}

int_32 .FUNC $50 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [12]) = $2
	$2 = CALL $47($0, $1, $2)
	$global$0 = ($3 + [16])
	return $2
}

void .FUNC $51 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $279 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	$3 = ($global$0 - [1568])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	CALL memset(($4 + [1088]), [0], [160])
	*(($4 + [1112])) = (int_64)0
	*(($4 + [1120])) = (int_64)0
	*(($4 + [1136])) = (int_64)0
	*(($4 + [1144])) = (int_64)0
	*(($4 + [1164])) = (int_64)0
	*(($4 + [1172])) = (int_64)0
	*(($4 + [1188])) = (int_64)0
	*(($4 + [1196])) = (int_64)0
	*(($4 + [1212])) = [0]
	*(($3 = (($4 + [1088]) + [136]))) = (int_64)0
	*($4 + [1096]) = (int_64)0
	*($4 + [1104]) = (int_64)0
	*($4 + [1128]) = (int_64)0
	*($4 + [1156 align=4]) = (int_64)0
	*($4 + [1180 align=4]) = (int_64)0
	*($4 + [1204 align=4]) = (int_64)0
	*($4 + [1216]) = (int_64)0
	*($4 + [1232]) = (int_64)0
	*(($8 = (($4 + [1088]) + [152]))) = (int_64)0
	*($4 + [1076]) = $2
	*($4 + [1072]) = $2
	*($4 + [1080]) = ($2 + $7)
	*($4 + [1408]) = ($4 + [1072])
	*($4 + [36]) = (($4 + [1088]) + [8])
	*($4 + [56]) = ($4 + [1152])
	*($4 + [80]) = (($4 + [1088]) + [128])
	*($4 + [84]) = (($4 + [1088]) + [144])
	*($4 + [32]) = ($4 + [1088])
	$9 = (($4 + [1088]) + [116])
	*($4 + [76]) = $9
	$10 = (($4 + [1088]) + [104])
	*($4 + [72]) = $10
	$11 = (($4 + [1088]) + [92])
	*($4 + [68]) = $11
	$12 = (($4 + [1088]) + [80])
	*($4 + [64]) = $12
	$13 = (($4 + [1088]) + [68])
	*($4 + [60]) = $13
	$14 = (($4 + [1088]) + [52])
	*($4 + [52]) = $14
	$15 = (($4 + [1088]) + [40])
	*($4 + [48]) = $15
	$16 = (($4 + [1088]) + [28])
	*($4 + [44]) = $16
	$17 = (($4 + [1088]) + [16])
	*($4 + [40]) = $17
	CALL $301(($4 + [32]), ($4 + [1408]))
	$18 = *($4 + [1080])
	*((($4 + [16]) + [8])) = $18
	*(($4 + [8])) = $18
	$19 = *($4 + [1072])
	*($4) = $19
	*($4 + [16]) = $19
	$18 = CALL $123(($4 + [32]), $0, $1, $4)
	*((($4 + [1248]) + [8])) = *($4 + [1096])
	*($4 + [1248]) = *($4 + [1088])
	$17 = CALL $52((($4 + [1248]) + [16]), $17)
	$16 = CALL $52((($4 + [1248]) + [28]), $16)
	$15 = CALL $52((($4 + [1248]) + [40]), $15)
	$14 = CALL $52((($4 + [1248]) + [52]), $14)
	*($4 + [1312]) = *($4 + [1152])
	$13 = CALL $52((($4 + [1248]) + [68]), $13)
	$12 = CALL $52((($4 + [1248]) + [80]), $12)
	$11 = CALL $52((($4 + [1248]) + [92]), $11)
	$10 = CALL $52((($4 + [1248]) + [104]), $10)
	$9 = CALL $52((($4 + [1248]) + [116]), $9)
	*((($4 + [1248]) + [152])) = *($8)
	*((($4 + [1248]) + [144])) = *($4 + [1232])
	*((($4 + [1248]) + [136])) = *($3)
	*($4 + [1376]) = *($4 + [1216])
	$8 = (($4 + [32]) + int_32($5 >> [1]))
	$3 = (($4 + [1248]) + [128])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($8) + $6))
	
.LABEL $label$4
	*((($4 + [1408]) + [8])) = *((($4 + [1248]) + [8]))
	*($4 + [1408]) = *($4 + [1248])
	CALL $52((($4 + [1408]) + [16]), $17)
	CALL $52(($4 + [1436]), $16)
	CALL $52(($4 + [1448]), $15)
	CALL $52(($4 + [1460]), $14)
	*($4 + [1472]) = *(($4 + [1312]))
	CALL $52(($4 + [1476]), $13)
	CALL $52(($4 + [1488]), $12)
	CALL $52(($4 + [1500]), $11)
	CALL $52(($4 + [1512]), $10)
	CALL $52(($4 + [1524]), $9)
	*(($4 + [1560])) = *(($3 + [24]))
	*(($4 + [1552])) = *(($3 + [16]))
	*(($4 + [1544])) = *(($3 + [8]))
	*($4 + [1536]) = *($3)
	CALL void $8((int_32 ($4 + [1408])), (int_32 $6))
	CALL $121(($4 + [1408]))
	CALL $121(($4 + [1248]))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $127($18)
	CALL $121(($4 + [1088]))
	$global$0 = ($4 + [1568])
	return [1]
}

int_32 .FUNC $53 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL $7($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $55($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $7($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $9($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $7(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $15($1)
	$3 = [10]
	$4 = *($0)
	$5 = ($4 & [1])
	if ( ($5 == 0) ){ goto $label$1 }
	$3 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$1
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$6 }
	if ( $5 ){ goto $label$5 }
	$5 = uint_32($4 >> [1])
	CALL $55($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$6
	if ( $5 ){ goto $label$4 }
	$3 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = *($0 + [4])
	CALL $55($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$4
	$3 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memmove($3, $1, $2)
	
.LABEL $label$2
	*(($3 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	return $0
}

void .FUNC $152 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_64 $21
	int_64 $22
	$3 = ($global$0 - [192])
	$global$0 = $3
	if ( ((int_32)*(($0 + [756])) == (int_32)[9]) ){ goto $label$1 }
	CALL eosio_assert([0], [13177])
	
.LABEL $label$1
	$4 = *(($0 + [912]))
	*(($3 + [144])) = $4
	$5 = ($0 + [904])
	*($3 + [136]) = *($5)
	if ( ((int_64)$4 == (int_64)*(($0 + [944]))) ){ goto $label$2 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$2
	$4 = ((int_64)*($3 + [136]) + (int_64)*(($0 + [936])))
	*($3 + [136]) = $4
	if ( ((int_64)$4 <= (int_64)-4611686018427387904) ){ goto $label$4 }
	if ( ((int_64)$4 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [15078])
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [15059])
	
.LABEL $label$3
	$6 = CALL db_lowerbound_i64(*($0 + [400]), *(($0 + [408])), (int_64)-4994365207729012736, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$7 = ($0 + [400])
	$8 = CALL $174($7, $6)
	if ( (int_64)($1 == 0) ){ goto $label$5 }
	$9 = ($0 + [384])
	$10 = ($0 + [360])
	$11 = (($3 + [80]) + [16])
	$12 = ($0 + [388])
	$13 = ($0 + [368])
	$14 = ($0 + [936])
	$15 = ($3 + [60])
	$16 = ($0 + [392])
	
.LOOP $label$6:
	*((($3 + [80]) + [48])) = *(($8 + [48]))
	*((($3 + [80]) + [40])) = *(($8 + [40]))
	*(($17 = (($3 + [80]) + [32]))) = *(($8 + [32]))
	*((($3 + [80]) + [24])) = *(($8 + [24]))
	*($11) = *(($8 + [16]))
	*((($3 + [80]) + [8])) = *(($8 + [8]))
	$4 = *($8)
	*($3 + [80]) = $4
	$19 = *($12)
	$18 = *($9)
	if ( ((int_32)$18 == (int_32)$19) ){ goto $label$9 }
	
.LOOP $label$11:
	$6 = ($19 + [-24])
	$20 = *($6)
	if ( ((int_64)*($20) == (int_64)$4) ){ goto $label$10 }
	$19 = $6
	if ( ((int_32)$18 != (int_32)$6) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$18 == (int_32)$19) ){ goto $label$9 }
	if ( ((int_32)*($20 + [200]) != (int_32)$10) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$20 = [0]
	$6 = CALL db_find_i64(*($10), *($13), (int_64)-6031319021931067904, $4)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$7 }
	$20 = CALL $175($10, $6)
	if ( ((int_32)*($20 + [200]) == (int_32)$10) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [14937])
	
.LABEL $label$7
	if ( ((int_64)((int_64)*($17) | (int_64)2) != (int_64)3) ){ goto $label$17 }
	*(($6 = (($3 + [64]) + [8]))) = *(($11 + [8]))
	*($3 + [64]) = *($11)
	if ( ((int_64)*($14) < (int_64)1) ){ goto $label$14 }
	$4 = *($3 + [64])
	CALL __multi3(($3 + [16]), $4, (int_64)$4 >> (int_64)63), (int_64)990, (int_64)0)
	$21 = *($6)
	$4 = *((($3 + [16]) + [8]))
	$22 = *($3 + [16])
	if ( (( (uint_64)($22 <= (int_64)4611686018427387904) ? ((int_64)$4 < (int_64)0) : (int_64)($4 == 0) ) == 0) ){ goto $label$16 }
	if ( ( ((uint_64)$22 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$4 > (int_64)-1) : ((int_64)$4 == (int_64)-1) ) ){ goto $label$15 }
	CALL eosio_assert([0], [14853])
	goto $label$15 
	
.LABEL $label$17
	if ( $8 ){ goto $label$18 }
	CALL eosio_assert([0], [15603])
	
.LABEL $label$18
	$6 = [0]
	$19 = CALL db_next_i64(*($8 + [56]), ($3 + [64]))
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$13 }
	$1 = ((int_64)$1 + (int_64)-1)
	$6 = CALL $174($7, $19)
	if ( $6 ){ goto $label$12 }
	goto $label$5 
	
.LABEL $label$16
	CALL eosio_assert([0], [14829])
	
.LABEL $label$15
	*($6) = $21
	*($3 + [64]) = ((int_64)$22 / (int_64)1000)
	
.LABEL $label$14
	$4 = *($0)
	if ( ($20 == 0) ){ goto $label$21 }
	*((($3 + [48]) + [8])) = ($3 + [136])
	*($3 + [52]) = ($3 + [64])
	*($3 + [48]) = ($3 + [80])
	CALL $184($10, $20, $4, ($3 + [48]))
	if ( ($8 == 0) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	*((($3 + [48]) + [8])) = $0
	*($15) = ($3 + [136])
	*($3 + [52]) = ($3 + [64])
	*($3 + [48]) = ($3 + [80])
	*($3 + [184]) = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($10)) ){ goto $label$22 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$22
	*($3 + [160]) = $10
	*((($3 + [160]) + [8])) = ($3 + [184])
	*($3 + [164]) = ($3 + [48])
	*(($6 = CALL $7([216])) + [8]) = (int_64)0
	*($6) = (int_64)0
	*($6 + [16]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [32]) = (int_64)0
	*($6 + [40]) = (int_64)0
	*($6 + [48]) = (int_64)0
	*($6 + [56]) = (int_64)0
	*($6 + [64]) = (int_64)0
	*($6 + [72]) = (int_64)0
	*($6 + [80]) = (int_64)0
	*($6 + [88]) = (int_64)0
	*($6 + [96]) = (int_64)0
	*($6 + [104]) = (int_64)0
	*($6 + [112]) = (int_64)0
	*($6 + [120]) = (int_64)0
	*($6 + [128]) = (int_64)0
	*($6 + [136]) = (int_64)0
	*($6 + [200]) = $10
	CALL $185(($3 + [160]), $6)
	*($3 + [176]) = $6
	$4 = *($6)
	*($3 + [160]) = $4
	$20 = *($6 + [204])
	*($3 + [156]) = $20
	$19 = *($12)
	if ( ((uint_32)$19 >= (uint_32)*($16)) ){ goto $label$25 }
	*($19 + [8]) = $4
	*($19 + [16]) = $20
	*($3 + [176]) = [0]
	*($19) = $6
	*($12) = ($19 + [24])
	$6 = *($3 + [176])
	*($3 + [176]) = [0]
	if ( $6 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL $186($9, ($3 + [176]), ($3 + [160]), ($3 + [156]))
	$6 = *($3 + [176])
	*($3 + [176]) = [0]
	if ( ($6 == 0) ){ goto $label$23 }
	
.LABEL $label$24
	CALL $9($6)
	
.LABEL $label$23
	if ( $8 ){ goto $label$19 }
	
.LABEL $label$20
	CALL eosio_assert([0], [15569])
	CALL eosio_assert([0], [15603])
	
.LABEL $label$19
	$6 = [0]
	$19 = CALL db_next_i64(*($8 + [56]), ($3 + [48]))
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$26 }
	$6 = CALL $174($7, $19)
	
.LABEL $label$26
	CALL $181($7, $8)
	
.LABEL $label$13
	$1 = ((int_64)$1 + (int_64)-1)
	if ( ($6 == 0) ){ goto $label$5 }
	
.LABEL $label$12
	$8 = $6
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ((uint_64)$1 <= (uint_64)(int_64)1) ){ goto $label$27 }
	$4 = *(($0 + [936]))
	$1 = *(($0 + [944]))
	if ( ((int_64)*(($0 + [912])) == (int_64)$1) ){ goto $label$28 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$28
	$4 = ((int_64)*($5) + (int_64)$4)
	if ( ((int_64)$4 <= (int_64)-4611686018427387904) ){ goto $label$30 }
	if ( ((int_64)$4 < (int_64)4611686018427387904) ){ goto $label$29 }
	CALL eosio_assert([0], [15078])
	goto $label$29 
	
.LABEL $label$30
	CALL eosio_assert([0], [15059])
	
.LABEL $label$29
	*(($19 = ($0 + [536]))) = $1
	*(($6 = ($0 + [528]))) = $4
	CALL $187(($3 + [80]), $0)
	$1 = *($3 + [80])
	$4 = *($3 + [88])
	if ( ((int_64)*($19) == (int_64)$4) ){ goto $label$31 }
	CALL eosio_assert([0], [15344])
	
.LABEL $label$31
	$1 = (int_64)
	if ( ((int_64)$1($1 - *($6))) <= (int_64)-4611686018427387904) ){ goto $label$33 }
	if ( ((int_64)$1 < (int_64)4611686018427387904) ){ goto $label$32 }
	CALL eosio_assert([0], [15414])
	goto $label$32 
	
.LABEL $label$33
	CALL eosio_assert([0], [15392])
	
.LABEL $label$32
	if ( ((int_64)*(($0 + [600])) == (int_64)$4) ){ goto $label$34 }
	CALL eosio_assert([0], [15344])
	
.LABEL $label$34
	$1 = (int_64)
	if ( ((int_64)$1($1 - *(($0 + [592])))) <= (int_64)-4611686018427387904) ){ goto $label$36 }
	if ( ((int_64)$1 < (int_64)4611686018427387904) ){ goto $label$35 }
	CALL eosio_assert([0], [15414])
	goto $label$35 
	
.LABEL $label$36
	CALL eosio_assert([0], [15392])
	
.LABEL $label$35
	if ( ((int_64)*(($0 + [616])) == (int_64)$4) ){ goto $label$37 }
	CALL eosio_assert([0], [15344])
	
.LABEL $label$37
	$1 = (int_64)
	if ( ((int_64)$1($1 - *(($0 + [608])))) <= (int_64)-4611686018427387904) ){ goto $label$39 }
	if ( ((int_64)$1 < (int_64)4611686018427387904) ){ goto $label$38 }
	CALL eosio_assert([0], [15414])
	goto $label$38 
	
.LABEL $label$39
	CALL eosio_assert([0], [15392])
	
.LABEL $label$38
	*(($0 + [552])) = $4
	*(($19 = ($0 + [544]))) = $1
	$4 = *(($0 + [528]))
	CALL __multi3($3, $4, (int_64)$4 >> (int_64)63), (int_64)15, (int_64)0)
	$22 = *(($0 + [536]))
	$4 = *(($3 + [8]))
	$1 = *($3)
	if ( (( (uint_64)($1 <= (int_64)4611686018427387904) ? ((int_64)$4 < (int_64)0) : (int_64)($4 == 0) ) == 0) ){ goto $label$41 }
	if ( ( ((uint_64)$1 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$4 > (int_64)-1) : ((int_64)$4 == (int_64)-1) ) ){ goto $label$40 }
	CALL eosio_assert([0], [14853])
	goto $label$40 
	
.LABEL $label$41
	CALL eosio_assert([0], [14829])
	
.LABEL $label$40
	*(($0 + [568])) = $22
	*(($0 + [560])) = ((int_64)$1 / (int_64)1000)
	CALL $188(($3 + [80]), $0)
	*(($0 + [584])) = *((($3 + [80]) + [8]))
	*(($0 + [576])) = *($3 + [80])
	*(($0 + [752])) = [0]
	*(($0 + [504])) = *(($6 + [8]))
	*(($0 + [496])) = *($6)
	*(($0 + [512])) = *($19)
	*(($0 + [520])) = *(($19 + [8]))
	*($0 + [480]) = ((int_64)*($0 + [480]) + (int_64)1)
	*(($0 + [760])) = ((int_64)CALL $86() / (int_64)1000000)
	$4 = *($0)
	*($3 + [184]) = $0
	*($3 + [64]) = $4
	$19 = ($0 + [200])
	if ( ((int_64)CALL current_receiver() == (int_64)*($0 + [200])) ){ goto $label$42 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$42
	*($3 + [80]) = $19
	*($3 + [84]) = ($3 + [184])
	*($3 + [88]) = ($3 + [64])
	*(($6 = CALL $7([144])) + [32]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [40]) = (int_64)0
	*($6 + [48]) = (int_64)0
	*($6 + [56]) = (int_64)0
	*($6 + [64]) = (int_64)0
	*($6 + [72]) = (int_64)0
	*($6 + [80]) = (int_64)0
	*($6 + [88]) = (int_64)0
	*($6 + [96]) = (int_64)0
	*($6 + [104]) = (int_64)0
	*($6 + [112]) = (int_64)0
	*($6 + [128]) = $19
	CALL $189(($3 + [80]), $6)
	*($3 + [48]) = $6
	$4 = *($6)
	*($3 + [80]) = $4
	$20 = *($6 + [132])
	*($3 + [160]) = $20
	$18 = ($0 + [228])
	$19 = *($18)
	if ( ((uint_32)$19 >= (uint_32)*(($0 + [232]))) ){ goto $label$45 }
	*($19 + [8]) = $4
	*($19 + [16]) = $20
	*($3 + [48]) = [0]
	*($19) = $6
	*($18) = ($19 + [24])
	$6 = *($3 + [48])
	*($3 + [48]) = [0]
	if ( $6 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$45
	CALL $190(($0 + [224]), ($3 + [48]), ($3 + [80]), ($3 + [160]))
	$6 = *($3 + [48])
	*($3 + [48]) = [0]
	if ( ($6 == 0) ){ goto $label$43 }
	
.LABEL $label$44
	CALL $9($6)
	
.LABEL $label$43
	$6 = CALL $52(($3 + [32]), $2)
	CALL $136($0, $6)
	if ( ((*($6) & [1]) == 0) ){ goto $label$27 }
	CALL $9(*($6 + [8]))
	
.LABEL $label$27
	$global$0 = ($3 + [192])
}

void .FUNC $153 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [144])
	$global$0 = $4
	$1 = CALL $154(($4 + [8]), $1)
	CALL $155($0, $1, $2)
	CALL $156($1)
	$global$0 = ($4 + [144])
}

void .FUNC $150 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$2 = ($global$0 - [608])
	$global$0 = $2
	if ( ((int_32)*(($0 + [756])) == (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13177])
	
.LABEL $label$1
	$3 = CALL db_lowerbound_i64(*($0 + [360]), *(($0 + [368])), (int_64)-6031319021931067904, (int_64)0)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$5 }
	$4 = ($0 + [360])
	$3 = CALL $175($4, $3)
	$5 = ($0 + [1000])
	if ( (int_64)(*($5) == 0) ){ goto $label$6 }
	$6 = [1]
	
.LOOP $label$7:
	$7 = *($3 + [204])
	$3 = [0]
	$7 = CALL db_next_i64($7, ($2 + [416]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	$3 = CALL $175($4, $7)
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$6 }
	$8 = (CASTING uint_64)(uint_32 $6)
	$6 = ($6 + [1])
	if ( ((uint_64)*($5) > (uint_64)$8) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$4 }
	if ( (int_64)($1 == 0) ){ goto $label$4 }
	$9 = (($2 + [216]) + [48])
	$10 = ($2 + [248])
	$11 = ($0 + [944])
	$12 = ($0 + [936])
	$13 = ($0 + [1000])
	
.LOOP $label$10:
	*(($6 = (($2 + [568]) + [24]))) = *(($3 + [24]))
	*(($7 = (($2 + [568]) + [16]))) = *(($3 + [16]))
	*(($5 = (($2 + [568]) + [8]))) = *(($3 + [8]))
	*($2 + [568]) = *($3)
	$14 = *(($3 + [40]))
	$8 = *($3 + [32])
	CALL memcpy(($2 + [416]), ($3 + [48]), [152])
	if ( ((int_64)$8 > (int_64)99999) ){ goto $label$12 }
	*($10) = $8
	*((($2 + [216]) + [40])) = $14
	*((($2 + [216]) + [24])) = *($6)
	*((($2 + [216]) + [16])) = *($7)
	*((($2 + [216]) + [8])) = *($5)
	*($2 + [216]) = *($2 + [568])
	CALL memcpy($9, ($2 + [416]), [152])
	CALL memcpy(($2 + [16]), ($2 + [216]), [200])
	CALL $139($0, ($2 + [16]), [1])
	if ( $3 ){ goto $label$13 }
	CALL eosio_assert([0], [15569])
	CALL eosio_assert([0], [15603])
	
.LABEL $label$13
	$6 = [0]
	$7 = CALL db_next_i64(*($3 + [204]), ($2 + [600]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$14 }
	$6 = CALL $175($4, $7)
	
.LABEL $label$14
	CALL $176($4, $3)
	$8 = ((int_64)$1 + (int_64)-1)
	if ( $6 ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	if ( ((int_64)$14 == (int_64)*($11)) ){ goto $label$15 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$15
	$8 = ((int_64)*($12) + (int_64)$8)
	*($12) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$16 }
	CALL eosio_assert([0], [15059])
	$8 = *($12)
	
.LABEL $label$16
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$17 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$17
	$6 = [0]
	$3 = CALL db_next_i64(*($3 + [204]), ($2 + [600]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$18 }
	$6 = CALL $175($4, $3)
	
.LABEL $label$18
	*($13) = ((int_64)*($13) + (int_64)1)
	$8 = ((int_64)$1 + (int_64)-1)
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$11
	$7 = ((int_64)$1 != (int_64)1)
	$3 = $6
	$1 = $8
	if ( $7 ){ goto $label$10 }
	
.LABEL $label$9
	if ( (uint_64)($8 <= (int_64)2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	if ( ((uint_64)$1 >= (uint_64)(int_64)2) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_64)$1 >= (uint_64)(int_64)2) ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($2 + [608])
	return 
	
.LABEL $label$2
	*(($0 + [756])) = [8]
	*(($0 + [1000])) = (int_64)0
	if ( ((int_64)*(($0 + [936])) < (int_64)1) ){ goto $label$26 }
	$1 = *(($0 + [904]))
	CALL __multi3($2, $1, (int_64)$1 >> (int_64)63), (int_64)10, (int_64)0)
	$14 = *(($0 + [912]))
	$1 = *(($2 + [8]))
	$8 = *($2)
	if ( (( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$25 }
	if ( ( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) ){ goto $label$24 }
	CALL eosio_assert([0], [14853])
	goto $label$24 
	
.LABEL $label$26
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$23 }
	CALL eosio_assert([0], [14622])
	goto $label$22 
	
.LABEL $label$25
	CALL eosio_assert([0], [14829])
	
.LABEL $label$24
	$1 = ((int_64)$8 / (int_64)1000)
	goto $label$19 
	
.LABEL $label$23
	if ( ($3 == 0) ){ goto $label$21 }
	
.LABEL $label$22
	$1 = (int_64)0
	
.LOOP $label$27:
	$6 = *(($3 + [12243]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$28 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$28
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$27 }
	$14 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$20 
	
.LABEL $label$21
	$14 = (int_64)4
	
.LABEL $label$20
	$1 = (uint_64)$14 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$8 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$32 }
	$1 = $8
	$6 = $3
	$3 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$32
	$1 = $8
	
.LOOP $label$33:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$30 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$6 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $6 ){ goto $label$33 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	CALL eosio_assert([0], [14769])
	
.LABEL $label$29
	$1 = (int_64)0
	
.LABEL $label$19
	*(($0 + [928])) = $14
	*(($0 + [920])) = $1
	*(($0 + [1008])) = (int_64)0
	$global$0 = ($2 + [608])
}

void .FUNC $151 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$2 = ($global$0 - [272])
	$global$0 = $2
	if ( ((int_32)*(($0 + [756])) == (int_32)[8]) ){ goto $label$1 }
	CALL eosio_assert([0], [13177])
	
.LABEL $label$1
	$3 = ($0 + [360])
	$4 = CALL db_lowerbound_i64(*($0 + [360]), *(($0 + [368])), (int_64)-6031319021931067904, (int_64)0)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$4 = CALL $175($3, $4)
	$5 = ($0 + [1000])
	if ( (int_64)(*($5) == 0) ){ goto $label$2 }
	$6 = [1]
	
.LOOP $label$4:
	$7 = *($4 + [204])
	$4 = [0]
	$7 = CALL db_next_i64($7, ($2 + [56]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$4 = CALL $175($3, $7)
	
.LABEL $label$5
	if ( ($4 == 0) ){ goto $label$2 }
	$8 = (CASTING uint_64)(uint_32 $6)
	$6 = ($6 + [1])
	if ( ((uint_64)*($5) > (uint_64)$8) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	$8 = *(($0 + [912]))
	*(($2 + [264])) = $8
	*($2 + [256]) = *(($0 + [904]))
	if ( ((int_64)$8 == (int_64)*(($0 + [944]))) ){ goto $label$6 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$6
	$8 = ((int_64)*($2 + [256]) + (int_64)*(($0 + [936])))
	*($2 + [256]) = $8
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$12 }
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [15078])
	if ( ($4 == 0) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$12
	CALL eosio_assert([0], [15059])
	
.LABEL $label$11
	if ( ($4 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	if ( (int_64)($1 == 0) ){ goto $label$9 }
	$9 = ($0 + [920])
	$6 = ($2 + [88])
	$10 = (($2 + [8]) + [8])
	$7 = ($2 + [96])
	$11 = ($0 + [936])
	$12 = ($2 + [200])
	$5 = ($0 + [1000])
	
.LOOP $label$13:
	CALL memcpy(($2 + [56]), $4, [200])
	$8 = *($9)
	$8 = *($6)
	CALL __multi3(($2 + [8]), $8, (int_64)$8 >> (int_64)63), $8, (int_64)$8 >> (int_64)63))
	$13 = *($7)
	$14 = *($10)
	$8 = *($2 + [8])
	if ( (( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$14 < (int_64)0) : (int_64)($14 == 0) ) == 0) ){ goto $label$15 }
	if ( ( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$14 > (int_64)-1) : ((int_64)$14 == (int_64)-1) ) ){ goto $label$14 }
	CALL eosio_assert([0], [14853])
	goto $label$14 
	
.LABEL $label$15
	CALL eosio_assert([0], [14829])
	
.LABEL $label$14
	*(($15 = (($2 + [40]) + [8]))) = $13
	*($2 + [40]) = $8
	$14 = *($11)
	if ( ((int_64)$14 == (int_64)0) ){ goto $label$17 }
	if ( ((int_64)$8 != (int_64)-9223372036854775808) ){ goto $label$16 }
	if ( ((int_64)$14 != (int_64)-1) ){ goto $label$16 }
	CALL eosio_assert([0], [14804])
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [14789])
	
.LABEL $label$16
	$8 = ((int_64)$8 / (int_64)$14)
	*($2 + [40]) = $8
	if ( ((int_64)*($15) == (int_64)*($7)) ){ goto $label$18 }
	CALL eosio_assert([0], [15016])
	$8 = *($2 + [40])
	
.LABEL $label$18
	$8 = ((int_64)*($6) + (int_64)$8)
	*($6) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$19 }
	CALL eosio_assert([0], [15059])
	$8 = *($6)
	
.LABEL $label$19
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$20 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$20
	*($12) = (int_64)15
	$8 = *($0)
	*((($2 + [24]) + [8])) = ($2 + [40])
	*($2 + [28]) = ($2 + [256])
	*($2 + [24]) = ($2 + [56])
	CALL $183($3, $4, $8, ($2 + [24]))
	*($5) = ((int_64)*($5) + (int_64)1)
	$15 = *($4 + [204])
	$4 = [0]
	$15 = CALL db_next_i64($15, ($2 + [56]))
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$21 }
	$4 = CALL $175($3, $15)
	
.LABEL $label$21
	$8 = ((int_64)$1 + (int_64)-1)
	if ( ($4 == 0) ){ goto $label$22 }
	$15 = ((int_64)$1 != (int_64)1)
	$1 = $8
	if ( $15 ){ goto $label$13 }
	
.LABEL $label$22
	if ( (uint_64)($8 <= (int_64)2) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	if ( (uint_64)($1 <= (int_64)2) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [756])) = [9]
	*(($0 + [1000])) = (int_64)0
	
.LABEL $label$7
	$global$0 = ($2 + [272])
}

int_32 .FUNC $156 (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [96])
	if ( ($1 == 0) ){ goto $label$1 }
	*(($0 + [100])) = $1
	CALL $9($1)
	
.LABEL $label$1
	$1 = *($0 + [84])
	if ( ($1 == 0) ){ goto $label$2 }
	*(($0 + [88])) = $1
	CALL $9($1)
	
.LABEL $label$2
	$1 = *($0 + [72])
	if ( ($1 == 0) ){ goto $label$3 }
	*(($0 + [76])) = $1
	CALL $9($1)
	
.LABEL $label$3
	$1 = *($0 + [60])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($0 + [64])) = $1
	CALL $9($1)
	
.LABEL $label$4
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($0 + [52])) = $1
	CALL $9($1)
	
.LABEL $label$5
	if ( (*($0 + [32]) & [1]) ){ goto $label$10 }
	if ( (*($0 + [20]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*(($0 + [40])))
	if ( ((*($0 + [20]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($0 + [28])))
	if ( ((*($0 + [8]) & [1]) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( (*($0 + [8]) & [1]) ){ goto $label$6 }
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	CALL $9(*(($0 + [16])))
	return $0
}

int_32 .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([160])) + [16]) = [0]
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [28 align=4]) = (int_64)0
	*($5 + [36 align=4]) = (int_64)0
	*($5 + [44 align=4]) = (int_64)0
	*($5 + [52 align=4]) = (int_64)0
	*($5 + [60 align=4]) = (int_64)0
	*($5 + [68 align=4]) = (int_64)0
	*($5 + [76 align=4]) = (int_64)0
	*($5 + [84]) = [0]
	*($5 + [120 align=4]) = (int_64)0
	*($5 + [128 align=4]) = (int_64)0
	*($5 + [136 align=4]) = (int_64)0
	*($5 + [144]) = $0
	CALL $372(($3 + [32]), $5)
	*($5 + [148]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $138(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $130($1)
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $154 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0) = *($1)
	CALL $52(($0 + [8]), ($1 + [8]))
	CALL $52(($0 + [20]), ($1 + [20]))
	CALL $52(($0 + [32]), ($1 + [32]))
	*(($0 + [52])) = (int_64)0
	*($0 + [48]) = [0]
	*($0 + [44]) = *($1 + [44])
	$2 = (*(($1 + [52])) - *($1 + [48]))
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = CALL $7($2)
	*(($0 + [48])) = $3
	*(($0 + [56])) = ($3 + $2)
	*(($2 = ($0 + [52]))) = $3
	$4 = *(($1 + [48]))
	$5 = (*(($1 + [52])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($3, $4, $5)
	*($2) = (*($2) + $5)
	
.LABEL $label$6
	*($0 + [60 align=4]) = (int_64)0
	*(($0 + [68])) = [0]
	$2 = (*(($1 + [64])) - *($1 + [60]))
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$4 }
	$3 = CALL $7($2)
	*(($0 + [60])) = $3
	*(($0 + [68])) = ($3 + $2)
	*(($2 = ($0 + [64]))) = $3
	$4 = *(($1 + [60]))
	$5 = (*(($1 + [64])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($3, $4, $5)
	*($2) = (*($2) + $5)
	
.LABEL $label$7
	*($0 + [72 align=4]) = (int_64)0
	*(($0 + [80])) = [0]
	$2 = (*(($1 + [76])) - *($1 + [72]))
	if ( ($2 == 0) ){ goto $label$8 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$3 }
	$3 = CALL $7($2)
	*(($0 + [72])) = $3
	*(($0 + [80])) = ($3 + $2)
	*(($2 = ($0 + [76]))) = $3
	$4 = *(($1 + [72]))
	$5 = (*(($1 + [76])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($3, $4, $5)
	*($2) = (*($2) + $5)
	
.LABEL $label$8
	*($0 + [84 align=4]) = (int_64)0
	*(($0 + [92])) = [0]
	$2 = (*(($1 + [88])) - *($1 + [84]))
	if ( ($2 == 0) ){ goto $label$9 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$2 }
	$3 = CALL $7($2)
	*(($0 + [84])) = $3
	*(($0 + [92])) = ($3 + $2)
	*(($2 = ($0 + [88]))) = $3
	$4 = *(($1 + [84]))
	$5 = (*(($1 + [88])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($3, $4, $5)
	*($2) = (*($2) + $5)
	
.LABEL $label$9
	*($0 + [96 align=4]) = (int_64)0
	*(($0 + [104])) = [0]
	$2 = (*(($1 + [100])) - *($1 + [96]))
	if ( ($2 == 0) ){ goto $label$10 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$1 }
	$3 = CALL $7($2)
	*(($0 + [96])) = $3
	*(($0 + [104])) = ($3 + $2)
	*(($2 = ($0 + [100]))) = $3
	$4 = *(($1 + [96]))
	$5 = (*(($1 + [100])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($3, $4, $5)
	*($2) = (*($2) + $5)
	
.LABEL $label$10
	*($0 + [108 align=4]) = *($1 + [108 align=4])
	*(($0 + [132])) = *(($1 + [132]))
	*(($0 + [124])) = *(($1 + [124]))
	*(($0 + [116])) = *(($1 + [116]))
	return $0
	
.LABEL $label$5
	CALL $82(($0 + [48]))
	
.LABEL $label$4
	CALL $82(($0 + [60]))
	
.LABEL $label$3
	CALL $82(($0 + [72]))
	
.LABEL $label$2
	CALL $82(($0 + [84]))
	
.LABEL $label$1
	CALL $82(($0 + [96]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $155 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [496])
	$global$0 = $3
	$4 = *($0)
	*($3 + [480]) = [13146]
	*($3 + [484]) = CALL $15([13146])
	*($3 + [24]) = *($3 + [480])
	CALL require_auth2($4, *(CALL $99(($3 + [488]), ($3 + [24]))))
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)*(($0 + [488]))) ){ goto $label$1 }
	CALL eosio_assert([0], [13919])
	$4 = *($1)
	
.LABEL $label$1
	$5 = ($0 + [808])
	$7 = *(($0 + [836]))
	$6 = *(($0 + [832]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$5:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$4) ){ goto $label$4 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	if ( ((int_32)*($9 + [144]) == (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [14937])
	goto $label$2 
	
.LABEL $label$3
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [816])), (int_64)7035937633859534848, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	$9 = CALL $157($5, $8)
	if ( ((int_32)*($9 + [144]) == (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [14937])
	goto $label$2 
	
.LABEL $label$6
	CALL eosio_assert([0], [13195])
	
.LABEL $label$2
	$8 = *($9 + [20])
	if ( (($8 + [-4]) <= [2]) ){ goto $label$17 }
	if ( ((uint_32)$8 > (uint_32)[1]) ){ goto $label$14 }
	$8 = *($1 + [116])
	if ( ($8 == 0) ){ goto $label$19 }
	if ( (($8 + [3]) <= [7]) ){ goto $label$18 }
	
.LABEL $label$19
	CALL eosio_assert([0], [13940])
	
.LABEL $label$18
	$8 = *($1 + [120])
	if ( ($8 == 0) ){ goto $label$21 }
	if ( (($8 + [3]) <= [7]) ){ goto $label$20 }
	
.LABEL $label$21
	CALL eosio_assert([0], [13956])
	
.LABEL $label$20
	$8 = *($1 + [124])
	if ( ($8 == 0) ){ goto $label$23 }
	if ( (($8 + [3]) <= [7]) ){ goto $label$22 }
	
.LABEL $label$23
	CALL eosio_assert([0], [13972])
	
.LABEL $label$22
	$8 = *($1 + [128])
	if ( ($8 == 0) ){ goto $label$25 }
	if ( (($8 + [3]) <= [7]) ){ goto $label$24 }
	
.LABEL $label$25
	CALL eosio_assert([0], [13987])
	
.LABEL $label$24
	$8 = CALL $52(($3 + [464]), ($9 + [8]))
	*($3 + [448]) = (int_64)0
	*($3 + [456]) = [0]
	$10 = *($1 + [44])
	$4 = *($1)
	$7 = (*(($1 + [52])) - *($1 + [48]))
	if ( ($7 == 0) ){ goto $label$26 }
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$12 }
	$6 = CALL $7($7)
	*(($3 + [456])) = ($6 + $7)
	*($3 + [448]) = $6
	*($3 + [452]) = $6
	$11 = *(($1 + [48]))
	$7 = (*(($1 + [52])) - $11)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$26 }
	CALL memcpy($6, $11, $7)
	*($3 + [452]) = (*($3 + [452]) + $7)
	
.LABEL $label$26
	*($3 + [440]) = [0]
	*($3 + [432]) = (int_64)0
	$7 = (*(($1 + [64])) - *($1 + [60]))
	if ( ($7 == 0) ){ goto $label$27 }
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$11 }
	$6 = CALL $7($7)
	*(($3 + [440])) = ($6 + $7)
	*($3 + [432]) = $6
	*($3 + [436]) = $6
	$11 = *(($1 + [60]))
	$7 = (*(($1 + [64])) - $11)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$27 }
	CALL memcpy($6, $11, $7)
	*($3 + [436]) = (*($3 + [436]) + $7)
	
.LABEL $label$27
	*($3 + [424]) = [0]
	*($3 + [416]) = (int_64)0
	$7 = (*(($1 + [76])) - *($1 + [72]))
	if ( ($7 == 0) ){ goto $label$28 }
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$10 }
	$6 = CALL $7($7)
	*(($3 + [424])) = ($6 + $7)
	*($3 + [416]) = $6
	*($3 + [420]) = $6
	$11 = *(($1 + [72]))
	$7 = (*(($1 + [76])) - $11)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$28 }
	CALL memcpy($6, $11, $7)
	*($3 + [420]) = (*($3 + [420]) + $7)
	
.LABEL $label$28
	*($3 + [408]) = [0]
	*($3 + [400]) = (int_64)0
	$7 = (*(($1 + [88])) - *($1 + [84]))
	if ( ($7 == 0) ){ goto $label$29 }
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$9 }
	$6 = CALL $7($7)
	*(($3 + [408])) = ($6 + $7)
	*($3 + [400]) = $6
	*($3 + [404]) = $6
	$11 = *(($1 + [84]))
	$7 = (*(($1 + [88])) - $11)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$29 }
	CALL memcpy($6, $11, $7)
	*($3 + [404]) = (*($3 + [404]) + $7)
	
.LABEL $label$29
	*($3 + [392]) = [0]
	*($3 + [384]) = (int_64)0
	$7 = (*(($1 + [100])) - *($1 + [96]))
	if ( ($7 == 0) ){ goto $label$30 }
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$8 }
	$6 = CALL $7($7)
	*(($3 + [392])) = ($6 + $7)
	*($3 + [384]) = $6
	*($3 + [388]) = $6
	$11 = *(($1 + [96]))
	$7 = (*(($1 + [100])) - $11)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$30 }
	CALL memcpy($6, $11, $7)
	*($3 + [388]) = (*($3 + [388]) + $7)
	
.LABEL $label$30
	CALL $114($8, $4, ($10 & [255]), ($3 + [448]), ($3 + [432]), ($3 + [416]), ($3 + [400]), ($3 + [384]))
	$7 = *($3 + [384])
	if ( ($7 == 0) ){ goto $label$31 }
	*($3 + [388]) = $7
	CALL $9($7)
	
.LABEL $label$31
	$7 = *($3 + [400])
	if ( ($7 == 0) ){ goto $label$32 }
	*($3 + [404]) = $7
	CALL $9($7)
	
.LABEL $label$32
	$7 = *($3 + [416])
	if ( ($7 == 0) ){ goto $label$33 }
	*($3 + [420]) = $7
	CALL $9($7)
	
.LABEL $label$33
	$7 = *($3 + [432])
	if ( ($7 == 0) ){ goto $label$34 }
	*($3 + [436]) = $7
	CALL $9($7)
	
.LABEL $label$34
	$7 = *($3 + [448])
	if ( ($7 == 0) ){ goto $label$35 }
	*($3 + [452]) = $7
	CALL $9($7)
	
.LABEL $label$35
	if ( ((*($8) & [1]) == 0) ){ goto $label$36 }
	CALL $9(*($8 + [8]))
	
.LABEL $label$36
	$4 = *($0)
	*($3 + [372]) = $0
	*($3 + [368]) = $1
	if ( $9 ){ goto $label$37 }
	CALL eosio_assert([0], [15096])
	
.LABEL $label$37
	CALL $158($5, $9, $4, ($3 + [368]))
	$8 = CALL $15([12244])
	if ( ($8 <= [8]) ){ goto $label$16 }
	CALL eosio_assert([0], [14622])
	goto $label$15 
	
.LABEL $label$17
	$8 = CALL $154(($3 + [32]), $1)
	CALL $159($0, $8, $2)
	CALL $156($8)
	$global$0 = ($3 + [496])
	return (unreachable)
	
.LABEL $label$16
	if ( ($8 == 0) ){ goto $label$13 }
	
.LABEL $label$15
	$4 = (int_64)0
	
.LOOP $label$38:
	$7 = *(($8 + [12243]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$39 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$39
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$38 }
	$4 = ((int_64)$4 << (int_64)8)
	goto $label$7 
	
.LABEL $label$14
	CALL eosio_assert([0], [14005])
	$global$0 = ($3 + [496])
	return (unreachable)
	
.LABEL $label$13
	$4 = (int_64)0
	goto $label$7 
	
.LABEL $label$12
	CALL $82(($3 + [448]))
	
.LABEL $label$11
	CALL $82(($3 + [432]))
	
.LABEL $label$10
	CALL $82(($3 + [416]))
	
.LABEL $label$9
	CALL $82(($3 + [400]))
	
.LABEL $label$8
	CALL $82(($3 + [384]))
	
.LABEL $label$7
	$6 = ($0 + [480])
	*($3 + [368]) = (int_64)0
	*($3 + [376]) = ((int_64)$4 | (int_64)4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$2 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$43 }
	$4 = $2
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$43
	$4 = $2
	
.LOOP $label$44:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$41 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$44 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	CALL eosio_assert([0], [14769])
	
.LABEL $label$40
	$8 = CALL $15([12244])
	if ( ($8 <= [8]) ){ goto $label$48 }
	CALL eosio_assert([0], [14622])
	goto $label$47 
	
.LABEL $label$48
	if ( ($8 == 0) ){ goto $label$46 }
	
.LABEL $label$47
	$4 = (int_64)0
	
.LOOP $label$49:
	$7 = *(($8 + [12243]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$50 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$50
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$49 }
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)4)
	goto $label$45 
	
.LABEL $label$46
	$4 = (int_64)4
	
.LABEL $label$45
	*($3 + [352]) = (int_64)0
	*($3 + [360]) = $4
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$53:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$52 }
	$2 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$54 }
	$4 = $2
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$54
	$4 = $2
	
.LOOP $label$55:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$52 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$55 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$52
	CALL eosio_assert([0], [14769])
	
.LABEL $label$51
	$8 = CALL $15([12244])
	if ( ($8 <= [8]) ){ goto $label$59 }
	CALL eosio_assert([0], [14622])
	goto $label$58 
	
.LABEL $label$59
	if ( ($8 == 0) ){ goto $label$57 }
	
.LABEL $label$58
	$4 = (int_64)0
	
.LOOP $label$60:
	$7 = *(($8 + [12243]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$61 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$61
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$60 }
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)4)
	goto $label$56 
	
.LABEL $label$57
	$4 = (int_64)4
	
.LABEL $label$56
	*($3 + [336]) = (int_64)0
	*($3 + [344]) = $4
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$64:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$63 }
	$2 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$65 }
	$4 = $2
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$64 }
	goto $label$62 
	
.LABEL $label$65
	$4 = $2
	
.LOOP $label$66:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$63 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$66 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$64 }
	goto $label$62 
	
.LABEL $label$63
	CALL eosio_assert([0], [14769])
	
.LABEL $label$62
	$8 = CALL $154(($3 + [200]), $1)
	CALL $117($8, $6, ($3 + [368]), ($3 + [352]), ($3 + [336]))
	CALL $156($8)
	$4 = *((($3 + [368]) + [8]))
	*((($3 + [184]) + [8])) = $4
	*((($3 + [8]) + [8])) = $4
	$4 = *($3 + [368])
	*($3 + [8]) = $4
	*($3 + [184]) = $4
	CALL $160($0, ($3 + [8]))
	$6 = ($0 + [200])
	$4 = *(($0 + [480]))
	$7 = *(($0 + [228]))
	$1 = *(($0 + [224]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$69 }
	
.LOOP $label$71:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$4) ){ goto $label$70 }
	$7 = $8
	if ( ((int_32)$1 != (int_32)$8) ){ goto $label$71 }
	goto $label$69 
	
.LABEL $label$70
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$69 }
	if ( ((int_32)*($9 + [128]) == (int_32)$6) ){ goto $label$68 }
	CALL eosio_assert([0], [14937])
	goto $label$68 
	
.LABEL $label$69
	$8 = CALL db_find_i64(*($6), *(($0 + [208])), (int_64)-5915062038115123200, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$67 }
	$9 = CALL $161($6, $8)
	if ( ((int_32)*($9 + [128]) == (int_32)$6) ){ goto $label$68 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$68
	$4 = *($0)
	*($3 + [168]) = $0
	*($3 + [172]) = ($3 + [352])
	*($3 + [176]) = ($3 + [336])
	CALL $162($6, $9, $4, ($3 + [168]))
	
.LABEL $label$67
	$global$0 = ($3 + [496])
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $158 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$4 = ($global$0 - [96])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [144]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *($3)
	*($1 + [24]) = *($7 + [44])
	$8 = *($3 + [4])
	*($5 + [72]) = [0]
	*($5 + [64]) = (int_64)0
	$9 = (*(($7 + [52])) - *($7 + [48]))
	if ( ($9 == 0) ){ goto $label$9 }
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$8 }
	$10 = CALL $7($9)
	*(($5 + [72])) = ($10 + $9)
	*($5 + [64]) = $10
	*($5 + [68]) = $10
	$9 = *(($7 + [48]))
	$7 = (*(($7 + [52])) - $9)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($10, $9, $7)
	*($5 + [68]) = ($10 + $7)
	
.LABEL $label$9
	CALL $110(($5 + [80]), ($5 + [64]), *(*($3) + [108]), [0])
	$7 = ($1 + [28])
	if ( (*($1 + [28]) & [1]) ){ goto $label$11 }
	*($7) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*(($1 + [36]))) = [0]
	*(($1 + [32])) = [0]
	
.LABEL $label$10
	CALL $56($7, [0])
	$9 = (($5 + [80]) + [8])
	*(($7 + [8])) = *($9)
	*($7) = *($5 + [80])
	*($9) = [0]
	*($5 + [80]) = (int_64)0
	$7 = *($5 + [64])
	if ( ($7 == 0) ){ goto $label$12 }
	*($5 + [68]) = $7
	CALL $9($7)
	
.LABEL $label$12
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = [0]
	$7 = *($3)
	$9 = (*(($7 + [64])) - *($7 + [60]))
	if ( ($9 == 0) ){ goto $label$13 }
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$7 }
	$10 = CALL $7($9)
	*(($5 + [56])) = ($10 + $9)
	*($5 + [48]) = $10
	*($5 + [52]) = $10
	$9 = *(($7 + [60]))
	$7 = (*(($7 + [64])) - $9)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$13 }
	CALL memcpy($10, $9, $7)
	*($5 + [52]) = (*($5 + [52]) + $7)
	
.LABEL $label$13
	$7 = *($3)
	CALL $110(($5 + [80]), ($5 + [48]), *($7 + [109]), *($7 + [116]))
	$7 = ($1 + [40])
	if ( (*($1 + [40]) & [1]) ){ goto $label$15 }
	*($7) = [0]
	goto $label$14 
	
.LABEL $label$15
	*(*(($1 + [48]))) = [0]
	*(($1 + [44])) = [0]
	
.LABEL $label$14
	CALL $56($7, [0])
	$9 = (($5 + [80]) + [8])
	*(($7 + [8])) = *($9)
	*($7) = *($5 + [80])
	*($9) = [0]
	*($5 + [80]) = (int_64)0
	$7 = *($5 + [48])
	if ( ($7 == 0) ){ goto $label$16 }
	*($5 + [52]) = $7
	CALL $9($7)
	
.LABEL $label$16
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = [0]
	$7 = *($3)
	$9 = (*(($7 + [76])) - *($7 + [72]))
	if ( ($9 == 0) ){ goto $label$17 }
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$6 }
	$10 = CALL $7($9)
	*(($5 + [40])) = ($10 + $9)
	*($5 + [32]) = $10
	*($5 + [36]) = $10
	$9 = *(($7 + [72]))
	$7 = (*(($7 + [76])) - $9)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$17 }
	CALL memcpy($10, $9, $7)
	*($5 + [36]) = (*($5 + [36]) + $7)
	
.LABEL $label$17
	$7 = *($3)
	CALL $110(($5 + [80]), ($5 + [32]), *($7 + [110]), *($7 + [120]))
	$7 = ($1 + [52])
	if ( (*($1 + [52]) & [1]) ){ goto $label$19 }
	*($7) = [0]
	goto $label$18 
	
.LABEL $label$19
	*(*(($1 + [60]))) = [0]
	*(($1 + [56])) = [0]
	
.LABEL $label$18
	CALL $56($7, [0])
	$9 = (($5 + [80]) + [8])
	*(($7 + [8])) = *($9)
	*($7) = *($5 + [80])
	*($9) = [0]
	*($5 + [80]) = (int_64)0
	$7 = *($5 + [32])
	if ( ($7 == 0) ){ goto $label$20 }
	*($5 + [36]) = $7
	CALL $9($7)
	
.LABEL $label$20
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = [0]
	$7 = *($3)
	$9 = (*(($7 + [88])) - *($7 + [84]))
	if ( ($9 == 0) ){ goto $label$21 }
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$5 }
	$10 = CALL $7($9)
	*(($5 + [24])) = ($10 + $9)
	*($5 + [16]) = $10
	*($5 + [20]) = $10
	$9 = *(($7 + [84]))
	$7 = (*(($7 + [88])) - $9)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$21 }
	CALL memcpy($10, $9, $7)
	*($5 + [20]) = (*($5 + [20]) + $7)
	
.LABEL $label$21
	$7 = *($3)
	CALL $110(($5 + [80]), ($5 + [16]), *($7 + [111]), *($7 + [124]))
	$7 = ($1 + [64])
	if ( (*($1 + [64]) & [1]) ){ goto $label$23 }
	*($7) = [0]
	goto $label$22 
	
.LABEL $label$23
	*(*(($1 + [72]))) = [0]
	*(($1 + [68])) = [0]
	
.LABEL $label$22
	CALL $56($7, [0])
	$9 = (($5 + [80]) + [8])
	*(($7 + [8])) = *($9)
	*($7) = *($5 + [80])
	*($9) = [0]
	*($5 + [80]) = (int_64)0
	$7 = *($5 + [16])
	if ( ($7 == 0) ){ goto $label$24 }
	*($5 + [20]) = $7
	CALL $9($7)
	
.LABEL $label$24
	*($5) = (int_64)0
	*($5 + [8]) = [0]
	$7 = *($3)
	$9 = (*(($7 + [100])) - *($7 + [96]))
	if ( ($9 == 0) ){ goto $label$25 }
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$4 }
	$10 = CALL $7($9)
	*(($5 + [8])) = ($10 + $9)
	*($5) = $10
	*($5 + [4]) = $10
	$9 = *(($7 + [96]))
	$7 = (*(($7 + [100])) - $9)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$25 }
	CALL memcpy($10, $9, $7)
	*($5 + [4]) = (*($5 + [4]) + $7)
	
.LABEL $label$25
	$7 = *($3)
	CALL $110(($5 + [80]), $5, *($7 + [112]), *($7 + [128]))
	$7 = ($1 + [76])
	if ( (*($1 + [76]) & [1]) ){ goto $label$27 }
	*($7) = [0]
	goto $label$26 
	
.LABEL $label$27
	*(*(($1 + [84]))) = [0]
	*(($1 + [80])) = [0]
	
.LABEL $label$26
	CALL $56($7, [0])
	$9 = (($5 + [80]) + [8])
	*(($7 + [8])) = *($9)
	*($7) = *($5 + [80])
	*($9) = [0]
	*($5 + [80]) = (int_64)0
	$7 = *($5)
	if ( ($7 == 0) ){ goto $label$28 }
	*($5 + [4]) = $7
	CALL $9($7)
	
.LABEL $label$28
	$7 = *($3)
	*($1 + [88]) = *($7 + [116 align=4])
	*($1 + [96]) = *($7 + [124 align=4])
	CALL $54(($1 + [120]), ($7 + [20]))
	CALL $54(($1 + [132]), (*($3) + [32]))
	$11 = CALL $86()
	*($1 + [20]) = [4]
	*(($8 + [752])) = [0]
	*($1 + [104]) = ((int_64)$11 / (int_64)1000000)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$29 }
	CALL eosio_assert([0], [15228])
	
.LABEL $label$29
	*($5 + [80]) = [0]
	CALL $356(($5 + [80]), $1)
	$7 = *($5 + [80])
	if ( ($7 <= [513]) ){ goto $label$31 }
	$3 = CALL $1($7)
	goto $label$30 
	
.LABEL $label$31
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$30
	*($5 + [84]) = $3
	*($5 + [80]) = $3
	*($5 + [88]) = ($3 + $7)
	CALL $357(($5 + [80]), $1)
	CALL db_update_i64(*($1 + [148]), $2, $3, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$33 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$32 }
	goto $label$3 
	
.LABEL $label$33
	CALL $2($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	
.LABEL $label$32
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [96])
	return (unreachable)
	
.LABEL $label$8
	CALL $82(($5 + [64]))
	
.LABEL $label$7
	CALL $82(($5 + [48]))
	
.LABEL $label$6
	CALL $82(($5 + [32]))
	
.LABEL $label$5
	CALL $82(($5 + [16]))
	
.LABEL $label$4
	CALL $82($5)
	
.LABEL $label$3
	$global$0 = ($5 + [96])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $159 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_64 $19
	int_64 $20
	$3 = ($global$0 - [192])
	$global$0 = $3
	$4 = ($0 + [808])
	$5 = *($1)
	$7 = *(($0 + [836]))
	$6 = *(($0 + [832]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$8:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$7 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	if ( ((int_32)*($9 + [144]) == (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [14937])
	goto $label$5 
	
.LABEL $label$6
	$8 = CALL db_find_i64(*($4), *(($0 + [816])), (int_64)7035937633859534848, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$9 = CALL $157($4, $8)
	if ( ((int_32)*($9 + [144]) == (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$5
	*($3 + [188]) = $9
	*($3 + [184]) = $4
	$8 = *($9 + [20])
	if ( ((int_32)$8 == (int_32)[5]) ){ goto $label$11 }
	if ( ((int_32)$8 != (int_32)[4]) ){ goto $label$2 }
	$10 = ($0 + [360])
	$8 = [0]
	$7 = CALL db_lowerbound_i64(*($0 + [360]), *(($0 + [368])), (int_64)-6031319021931067904, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$12 }
	$8 = CALL $175($10, $7)
	
.LABEL $label$12
	*($3 + [180]) = $8
	*($3 + [176]) = $10
	if ( (*(($0 + [752])) == 0) ){ goto $label$13 }
	if ( ($8 == 0) ){ goto $label$13 }
	$6 = ($0 + [752])
	$7 = [1]
	
.LOOP $label$14:
	$9 = *($8 + [204])
	$8 = [0]
	$9 = CALL db_next_i64($9, ($3 + [104]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	$8 = CALL $175(*($3 + [176]), $9)
	
.LABEL $label$15
	*($3 + [180]) = $8
	if ( ((uint_32)$7 >= (uint_32)*($6)) ){ goto $label$13 }
	$7 = ($7 + [1])
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$13
	if ( (int_64)($2 == 0) ){ goto $label$16 }
	if ( ($8 == 0) ){ goto $label$16 }
	$5 = (int_64))((int_64)1 - $2)
	$9 = ($0 + [736])
	$6 = (($3 + [40]) + [8])
	$1 = ($0 + [744])
	$11 = ($0 + [688])
	$12 = ($0 + [696])
	$13 = ($0 + [720])
	$14 = ($0 + [728])
	$15 = ($3 + [116])
	$16 = ($3 + [120])
	$17 = ($3 + [124])
	$7 = ($0 + [752])
	
.LOOP $label$17:
	$18 = $5
	$5 = ((int_64)*($9) / (int_64)3)
	$5 = *($8 + [160])
	CALL __multi3(($3 + [40]), $5, (int_64)$5 >> (int_64)63), $5, (int_64)$5 >> (int_64)63))
	$19 = *($1)
	$5 = *($6)
	$2 = *($3 + [40])
	if ( (( (uint_64)($2 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ) == 0) ){ goto $label$19 }
	if ( ( ((uint_64)$2 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ) ){ goto $label$18 }
	CALL eosio_assert([0], [14853])
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [14829])
	
.LABEL $label$18
	*((($3 + [160]) + [8])) = $19
	*($3 + [160]) = ((int_64)$2 / (int_64)1000000)
	$5 = *(*($3 + [180]) + [160])
	$5 = *($11)
	CALL __multi3(($3 + [24]), $5, (int_64)$5 >> (int_64)63), $5, (int_64)$5 >> (int_64)63))
	$19 = *($12)
	$5 = *((($3 + [24]) + [8]))
	$2 = *($3 + [24])
	if ( (( (uint_64)($2 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ) == 0) ){ goto $label$21 }
	if ( ( ((uint_64)$2 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ) ){ goto $label$20 }
	CALL eosio_assert([0], [14853])
	goto $label$20 
	
.LABEL $label$21
	CALL eosio_assert([0], [14829])
	
.LABEL $label$20
	*((($3 + [144]) + [8])) = $19
	*($3 + [144]) = ((int_64)$2 / (int_64)1000000)
	$5 = *(*($3 + [180]) + [160])
	$5 = *($13)
	CALL __multi3(($3 + [8]), $5, (int_64)$5 >> (int_64)63), $5, (int_64)$5 >> (int_64)63))
	$19 = *($14)
	$5 = *((($3 + [8]) + [8]))
	$2 = *($3 + [8])
	if ( (( (uint_64)($2 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ) == 0) ){ goto $label$23 }
	if ( ( ((uint_64)$2 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ) ){ goto $label$22 }
	CALL eosio_assert([0], [14853])
	goto $label$22 
	
.LABEL $label$23
	CALL eosio_assert([0], [14829])
	
.LABEL $label$22
	*((($3 + [128]) + [8])) = $19
	*($3 + [128]) = ((int_64)$2 / (int_64)1000000)
	$5 = *($0)
	$8 = *($3 + [180])
	*((($3 + [104]) + [8])) = $0
	*($15) = ($3 + [144])
	*($16) = ($3 + [184])
	*($17) = ($3 + [176])
	*($3 + [108]) = ($3 + [128])
	*($3 + [104]) = ($3 + [160])
	if ( $8 ){ goto $label$24 }
	CALL eosio_assert([0], [15096])
	
.LABEL $label$24
	CALL $193($10, $8, $5, ($3 + [104]))
	*($7) = (*($7) + [1])
	$8 = *($3 + [180])
	if ( $8 ){ goto $label$25 }
	CALL eosio_assert([0], [15603])
	$8 = *($3 + [180])
	
.LABEL $label$25
	$8 = CALL db_next_i64(*($8 + [204]), ($3 + [104]))
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$10 }
	$8 = CALL $175(*($3 + [176]), $8)
	*($3 + [180]) = $8
	$5 = ((int_64)$18 + (int_64)1)
	if ( ((int_64)$5 != (int_64)1) ){ goto $label$17 }
	$2 = (int_64))((int_64)0 - $18)
	
.LABEL $label$16
	if ( (uint_64)($2 <= (int_64)2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$11
	$6 = ($0 + [360])
	$8 = [0]
	$7 = CALL db_lowerbound_i64(*($0 + [360]), *(($0 + [368])), (int_64)-6031319021931067904, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$26 }
	$8 = CALL $175($6, $7)
	
.LABEL $label$26
	$10 = ($0 + [752])
	if ( (*($10) == 0) ){ goto $label$28 }
	$7 = [0]
	
.LOOP $label$29:
	if ( ($8 == 0) ){ goto $label$27 }
	$7 = ($7 + [1])
	$9 = *($8 + [204])
	$8 = [0]
	$9 = CALL db_next_i64($9, ($3 + [104]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$30 }
	$8 = CALL $175($6, $9)
	
.LABEL $label$30
	if ( ($7 <= *($10)) ){ goto $label$29 }
	
.LABEL $label$28
	if ( ($8 == 0) ){ goto $label$27 }
	if ( (int_64)($2 == 0) ){ goto $label$27 }
	$5 = (int_64))((int_64)1 - $2)
	$11 = ($0 + [536])
	$7 = ($0 + [528])
	$12 = ($3 + [64])
	$13 = ($0 + [568])
	$9 = ($0 + [560])
	$10 = ($0 + [752])
	
.LOOP $label$31:
	$19 = $5
	$18 = *($8 + [144])
	$5 = *($8 + [32])
	$20 = *(($8 + [40]))
	if ( ((int_64)$20 == (int_64)*($11)) ){ goto $label$32 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$32
	$2 = ((int_64)*($7) + (int_64)$5)
	*($7) = $2
	if ( ((int_64)$2 > (int_64)-4611686018427387904) ){ goto $label$33 }
	CALL eosio_assert([0], [15059])
	$2 = *($7)
	
.LABEL $label$33
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$34 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$34
	CALL __multi3(($3 + [56]), $18, (int_64)$18 >> (int_64)63), $5, (int_64)$5 >> (int_64)63))
	$5 = *($12)
	$2 = *($3 + [56])
	if ( (( (uint_64)($2 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ) == 0) ){ goto $label$38 }
	if ( ( ((uint_64)$2 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ) ){ goto $label$37 }
	CALL eosio_assert([0], [14853])
	$5 = ((int_64)$2 / (int_64)1000)
	if ( ((int_64)$20 != (int_64)*($13)) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	CALL eosio_assert([0], [14829])
	
.LABEL $label$37
	$5 = ((int_64)$2 / (int_64)1000)
	if ( ((int_64)$20 == (int_64)*($13)) ){ goto $label$35 }
	
.LABEL $label$36
	CALL eosio_assert([0], [15016])
	
.LABEL $label$35
	$5 = ((int_64)*($9) + (int_64)$5)
	*($9) = $5
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$39 }
	CALL eosio_assert([0], [15059])
	$5 = *($9)
	
.LABEL $label$39
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$40 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$40
	*($10) = (*($10) + [1])
	$8 = CALL db_next_i64(*($8 + [204]), ($3 + [104]))
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$9 }
	$8 = CALL $175($6, $8)
	$5 = ((int_64)$19 + (int_64)1)
	if ( ((int_64)$5 != (int_64)1) ){ goto $label$31 }
	$2 = (int_64))((int_64)0 - $19)
	
.LABEL $label$27
	if ( (uint_64)($2 <= (int_64)2) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$10
	*($3 + [180]) = [0]
	if ( ((uint_64)(int_64))((int_64)0 - $18) >= (uint_64)(int_64)2) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$9
	if ( ((uint_64)(int_64))((int_64)0 - $19) >= (uint_64)(int_64)2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	*($3 + [188]) = [0]
	*($3 + [184]) = $4
	CALL eosio_assert([0], [13195])
	
.LABEL $label$3
	$7 = ($0 + [528])
	$2 = *($7)
	$5 = *(($0 + [536]))
	if ( ((int_64)*(($0 + [600])) == (int_64)$5) ){ goto $label$41 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$41
	$2 = ((int_64)*(($0 + [592])) + (int_64)$2)
	if ( ((int_64)$2 <= (int_64)-4611686018427387904) ){ goto $label$43 }
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$42 }
	CALL eosio_assert([0], [15078])
	goto $label$42 
	
.LABEL $label$43
	CALL eosio_assert([0], [15059])
	
.LABEL $label$42
	if ( ((int_64)*(($0 + [616])) == (int_64)$5) ){ goto $label$44 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$44
	$2 = ((int_64)*(($0 + [608])) + (int_64)$2)
	if ( ((int_64)$2 <= (int_64)-4611686018427387904) ){ goto $label$46 }
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$45 }
	CALL eosio_assert([0], [15078])
	goto $label$45 
	
.LABEL $label$46
	CALL eosio_assert([0], [15059])
	
.LABEL $label$45
	CALL $187(($3 + [104]), $0)
	$18 = *($3 + [104])
	$19 = *($3 + [112])
	if ( ((int_64)$5 == (int_64)$19) ){ goto $label$47 }
	CALL eosio_assert([0], [15344])
	
.LABEL $label$47
	$5 = (int_64)
	if ( ((int_64)$5($18 - $2)) <= (int_64)-4611686018427387904) ){ goto $label$49 }
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$48 }
	CALL eosio_assert([0], [15414])
	goto $label$48 
	
.LABEL $label$49
	CALL eosio_assert([0], [15392])
	
.LABEL $label$48
	*(($0 + [552])) = $19
	*(($9 = ($0 + [544]))) = $5
	CALL $188(($3 + [104]), $0)
	*(($0 + [584])) = *(($3 + [112]))
	*(($0 + [576])) = *($3 + [104])
	$5 = *($0)
	$8 = *($3 + [188])
	*($3 + [104]) = $0
	if ( $8 ){ goto $label$50 }
	CALL eosio_assert([0], [15096])
	
.LABEL $label$50
	CALL $194($4, $8, $5, ($3 + [104]))
	if ( ((int_32)*($1 + [132]) != (int_32)[1]) ){ goto $label$52 }
	$8 = CALL db_lowerbound_i64(*($0 + [400]), *(($0 + [408])), (int_64)-4994365207729012736, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$51 }
	CALL $174(($0 + [400]), $8)
	CALL $195($0)
	*(($0 + [756])) = [2]
	*($0 + [888]) = *(($0 + [480]))
	*(($0 + [896])) = *(($0 + [488]))
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$52
	$8 = CALL $52(($3 + [88]), ($1 + [8]))
	CALL $136($0, $8)
	if ( ((*($8) & [1]) == 0) ){ goto $label$2 }
	CALL $9(*($8 + [8]))
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$51
	*(($0 + [496])) = *($7)
	*(($0 + [512])) = *($9)
	*(($0 + [752])) = [0]
	*(($0 + [504])) = *(($7 + [8]))
	*(($0 + [520])) = *(($9 + [8]))
	*($0 + [480]) = ((int_64)*($0 + [480]) + (int_64)1)
	*(($0 + [760])) = ((int_64)CALL $86() / (int_64)1000000)
	$5 = *($0)
	*($3 + [176]) = $0
	*($3 + [160]) = $5
	$7 = ($0 + [200])
	if ( ((int_64)CALL current_receiver() == (int_64)*($0 + [200])) ){ goto $label$53 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$53
	*($3 + [104]) = $7
	*($3 + [108]) = ($3 + [176])
	*($3 + [112]) = ($3 + [160])
	*(($8 = CALL $7([144])) + [32]) = (int_64)0
	*($8 + [24]) = (int_64)0
	*($8 + [40]) = (int_64)0
	*($8 + [48]) = (int_64)0
	*($8 + [56]) = (int_64)0
	*($8 + [64]) = (int_64)0
	*($8 + [72]) = (int_64)0
	*($8 + [80]) = (int_64)0
	*($8 + [88]) = (int_64)0
	*($8 + [96]) = (int_64)0
	*($8 + [104]) = (int_64)0
	*($8 + [112]) = (int_64)0
	*($8 + [128]) = $7
	CALL $196(($3 + [104]), $8)
	*($3 + [144]) = $8
	$5 = *($8)
	*($3 + [104]) = $5
	$9 = *($8 + [132])
	*($3 + [128]) = $9
	$6 = ($0 + [228])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [232]))) ){ goto $label$56 }
	*($7 + [8]) = $5
	*($7 + [16]) = $9
	*($3 + [144]) = [0]
	*($7) = $8
	*($6) = ($7 + [24])
	$8 = *($3 + [144])
	*($3 + [144]) = [0]
	if ( $8 ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	CALL $190(($0 + [224]), ($3 + [144]), ($3 + [104]), ($3 + [128]))
	$8 = *($3 + [144])
	*($3 + [144]) = [0]
	if ( ($8 == 0) ){ goto $label$54 }
	
.LABEL $label$55
	CALL $9($8)
	
.LABEL $label$54
	$8 = CALL $52(($3 + [72]), ($1 + [8]))
	CALL $136($0, $8)
	if ( ((*($8) & [1]) == 0) ){ goto $label$2 }
	CALL $9(*($8 + [8]))
	
.LABEL $label$2
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$1
	$5 = *($0)
	$8 = *($3 + [188])
	*($3 + [104]) = $0
	if ( $8 ){ goto $label$57 }
	CALL eosio_assert([0], [15096])
	
.LABEL $label$57
	CALL $197($4, $8, $5, ($3 + [104]))
	$global$0 = ($3 + [192])
	(unreachable)
}

void .FUNC $273 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [200]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	$5 = *($1)
	$6 = CALL $15([12285])
	if ( ($6 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [14622])
	goto $label$5 
	
.LABEL $label$6
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = (int_64)0
	
.LOOP $label$7:
	$8 = *(($6 + [12284]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$8
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$7 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$3 
	
.LABEL $label$4
	$9 = (int_64)4
	
.LABEL $label$3
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$7 = $10
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$7 = $10
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $8 ){ goto $label$13 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert([0], [14769])
	
.LABEL $label$9
	*($1 + [48]) = (int_64)0
	*(($1 + [56])) = $9
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$14 }
	CALL eosio_assert([0], [15228])
	
.LABEL $label$14
	$8 = $3
	$6 = ($8 + [-208])
	$global$0 = $6
	*($4 + [4]) = $6
	*($4) = $6
	*($4 + [8]) = ($8 + [-12])
	CALL $367($4, $1)
	CALL db_update_i64(*($1 + [204]), $2, $6, [196])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	$global$0 = ($4 + [16])
}

void .FUNC $272 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $106 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [136]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [140])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ((*($4 + [20]) & [1]) == 0) ){ goto $label$6 }
	CALL $9(*(($4 + [28])))
	
.LABEL $label$6
	CALL $9($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [136]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$1
	$1 = *(($0 + [96]))
	if ( ($1 == 0) ){ goto $label$7 }
	$2 = ($0 + [100])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((*($4 + [12]) & [1]) == 0) ){ goto $label$12 }
	CALL $9(*(($4 + [20])))
	
.LABEL $label$12
	CALL $9($4)
	
.LABEL $label$11
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$10 }
	$3 = *(($0 + [96]))
	goto $label$8 
	
.LABEL $label$9
	$3 = $1
	
.LABEL $label$8
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$7
	$1 = *(($0 + [56]))
	if ( ($1 == 0) ){ goto $label$13 }
	$2 = ($0 + [60])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$15 }
	
.LOOP $label$16:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$17 }
	CALL $9($4)
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$16 }
	$3 = *(($0 + [56]))
	goto $label$14 
	
.LABEL $label$15
	$3 = $1
	
.LABEL $label$14
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$13
	return $0
}

void .FUNC $344 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $228 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL memcpy(($4 + [-8]), ($1 + [8]), [4])
	CALL db_update_i64(*($1 + [20]), $2, $3, [12])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC $229 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $89 (int_32 $0)
{
}

int_64 .FUNC $88 (int_64 $0)
{
	int_64 $1
	$1 = (int_64)$0 >> (int_64)63
	return ((int_64)((int_64)$0 + (int_64)$1)) ^ (int_64)$1)
}

void .FUNC $224 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [80])
	$global$0 = $3
	CALL require_auth($1)
	$4 = *($2)
	if ( ((uint_64)((int_64)$4 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$5 = $7
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = $7
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$9 = ($6 + [1])
	$6 = $9
	if ( $8 ){ goto $label$5 }
	$6 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [13801])
	
.LABEL $label$1
	$6 = CALL $15([12244])
	if ( ($6 <= [8]) ){ goto $label$9 }
	CALL eosio_assert([0], [14622])
	goto $label$8 
	
.LABEL $label$9
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$5 = (int_64)0
	
.LOOP $label$10:
	$8 = *(($6 + [12243]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$11 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$11
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$10 }
	$5 = ((int_64)$5 << (int_64)8)
	goto $label$6 
	
.LABEL $label$7
	$5 = (int_64)0
	
.LABEL $label$6
	$7 = *($2 + [8])
	if ( ((int_64)$7 == (int_64)((int_64)$5 | (int_64)4)) ){ goto $label$12 }
	CALL eosio_assert([0], [13801])
	
.LABEL $label$12
	if ( ((int_64)$4 > (int_64)49999) ){ goto $label$13 }
	CALL eosio_assert([0], [13801])
	
.LABEL $label$13
	$10 = ($0 + [360])
	$8 = *(($0 + [388]))
	$11 = *(($0 + [384]))
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$17 }
	
.LOOP $label$19:
	$6 = ($8 + [-24])
	$9 = *($6)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$18 }
	$8 = $6
	if ( ((int_32)$11 != (int_32)$6) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$17 }
	if ( ((int_32)*($9 + [200]) == (int_32)$10) ){ goto $label$16 }
	CALL eosio_assert([0], [14937])
	goto $label$16 
	
.LABEL $label$17
	$6 = CALL db_find_i64(*($10), *(($0 + [368])), (int_64)-6031319021931067904, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$15 }
	$9 = CALL $175($10, $6)
	if ( ((int_32)*($9 + [200]) == (int_32)$10) ){ goto $label$16 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$16
	if ( ((int_64)*(($9 + [40])) == (int_64)$7) ){ goto $label$20 }
	CALL eosio_assert([0], [14878])
	
.LABEL $label$20
	if ( ((int_64)*($9 + [32]) >= (int_64)$4) ){ goto $label$14 }
	
.LABEL $label$15
	CALL eosio_assert([0], [13783])
	
.LABEL $label$14
	$10 = ($0 + [400])
	$8 = *(($0 + [428]))
	$9 = *(($0 + [424]))
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$23 }
	
.LOOP $label$25:
	$6 = ($8 + [-24])
	$11 = *($6)
	if ( ((int_64)*($11) == (int_64)$1) ){ goto $label$24 }
	$8 = $6
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$24
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$23 }
	if ( ((int_32)*($11 + [52]) == (int_32)$10) ){ goto $label$22 }
	CALL eosio_assert([0], [14937])
	goto $label$22 
	
.LABEL $label$23
	$6 = CALL db_find_i64(*($10), *(($0 + [408])), (int_64)-4994365207729012736, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$21 }
	if ( ((int_32)*(CALL $174($10, $6) + [52]) == (int_32)$10) ){ goto $label$22 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$22
	CALL eosio_assert([0], [13783])
	
.LABEL $label$21
	$5 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*(($0 + [400]))) ){ goto $label$26 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$26
	*(($6 = CALL $7([64])) + [52]) = $10
	*($6 + [8]) = (int_64)0
	*($6) = $1
	*($6 + [32]) = (int_64)4
	*($6 + [16]) = *($2)
	*(($6 + [24])) = *(($2 + [8]))
	*($6 + [48]) = ((int_64)CALL $86() / (int_64)1000000)
	*($3 + [64]) = ($3 + [52])
	*($3 + [60]) = $3
	*($3 + [56]) = $3
	CALL $217(($3 + [56]), $6)
	$1 = *($6)
	$8 = ($0 + [408])
	*($6 + [56]) = CALL db_store_i64(*($8), (int_64)-4994365207729012736, $5, $1, $3, [52])
	$9 = ($0 + [416])
	if ( (uint_64)($1 <= *($9)) ){ goto $label$27 }
	*($9) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$27
	$1 = *($8)
	$7 = *($6)
	*($3 + [72]) = *(($6 + [32]))
	*($6 + [60]) = CALL db_idx64_store($1, (int_64)-4994365207729012736, $5, $7, ($3 + [72]))
	*($3 + [56]) = $6
	$5 = *($6)
	*($3) = $5
	$9 = *(($6 + [56]))
	*($3 + [72]) = $9
	$11 = ($0 + [428])
	$8 = *($11)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [432]))) ){ goto $label$30 }
	*($8 + [8]) = $5
	*($8 + [16]) = $9
	*($3 + [56]) = [0]
	*($8) = $6
	*($11) = ($8 + [24])
	$6 = *($3 + [56])
	*($3 + [56]) = [0]
	if ( $6 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	CALL $218(($0 + [424]), ($3 + [56]), $3, ($3 + [72]))
	$6 = *($3 + [56])
	*($3 + [56]) = [0]
	if ( ($6 == 0) ){ goto $label$28 }
	
.LABEL $label$29
	CALL $9($6)
	
.LABEL $label$28
	$global$0 = ($3 + [80])
}

void .FUNC $225 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = *($0)
	*($2 + [40]) = [13146]
	*($2 + [44]) = CALL $15([13146])
	*($2 + [8]) = *($2 + [40])
	CALL require_auth2($3, *(CALL $99(($2 + [48]), ($2 + [8]))))
	if ( (int_64)(*(($0 + [488])) == 0) ){ goto $label$1 }
	CALL eosio_assert([0], [13818])
	
.LABEL $label$1
	$3 = *($0)
	*($2 + [32]) = $0
	*($2 + [88]) = $3
	$4 = ($0 + [200])
	if ( ((int_64)CALL current_receiver() == (int_64)*($0 + [200])) ){ goto $label$2 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$2
	*($2 + [64]) = $4
	*($2 + [68]) = ($2 + [32])
	*($2 + [72]) = ($2 + [88])
	*(($5 = CALL $7([144])) + [32]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [112]) = (int_64)0
	*($5 + [128]) = $4
	CALL $226(($2 + [64]), $5)
	*($2 + [80]) = $5
	$3 = *($5)
	*($2 + [64]) = $3
	$6 = *($5 + [132])
	*($2 + [60]) = $6
	$7 = ($0 + [228])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [232]))) ){ goto $label$5 }
	*($4 + [8]) = $3
	*($4 + [16]) = $6
	*($2 + [80]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	$5 = *($2 + [80])
	*($2 + [80]) = [0]
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $190(($0 + [224]), ($2 + [80]), ($2 + [64]), ($2 + [60]))
	$5 = *($2 + [80])
	*($2 + [80]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $9($5)
	
.LABEL $label$3
	$5 = CALL $52(($2 + [16]), $1)
	CALL $136($0, $5)
	if ( ((*($5) & [1]) == 0) ){ goto $label$6 }
	CALL $9(*($5 + [8]))
	
.LABEL $label$6
	$global$0 = ($2 + [96])
}

void .FUNC $226 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	*($1 + [8]) = (int_64)1
	$4 = (int_64)0
	*($1 + [16]) = (int_64)0
	*($1) = *((*(*($0 + [4])) + [480]))
	$5 = *($0)
	$6 = CALL $15([12244])
	if ( ($6 <= [8]) ){ goto $label$3 }
	CALL eosio_assert([0], [14622])
	goto $label$2 
	
.LABEL $label$3
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = (int_64)0
	
.LOOP $label$4:
	$8 = *(($6 + [12243]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$5 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$5
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$4 }
	$4 = ((int_64)$7 << (int_64)8)
	
.LABEL $label$1
	$7 = (uint_64)$4 >> (uint_64)(int_64)8)
	$9 = ((int_64)$4 | (int_64)4)
	$6 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$4 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$7 = $4
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$7 = $4
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $8 ){ goto $label$10 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [14769])
	
.LABEL $label$6
	$4 = (int_64)0
	*($1 + [24]) = (int_64)0
	*(($1 + [32])) = $9
	$6 = CALL $15([12244])
	if ( ($6 <= [8]) ){ goto $label$13 }
	CALL eosio_assert([0], [14622])
	goto $label$12 
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$7 = (int_64)0
	
.LOOP $label$14:
	$8 = *(($6 + [12243]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$15 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$15
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$14 }
	$4 = ((int_64)$7 << (int_64)8)
	
.LABEL $label$11
	$7 = (uint_64)$4 >> (uint_64)(int_64)8)
	$9 = ((int_64)$4 | (int_64)4)
	$6 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$4 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$7 = $4
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$7 = $4
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $8 ){ goto $label$20 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [14769])
	
.LABEL $label$16
	*($1 + [40]) = (int_64)0
	*(($1 + [48])) = $9
	$6 = CALL $15([12244])
	if ( ($6 <= [8]) ){ goto $label$24 }
	CALL eosio_assert([0], [14622])
	goto $label$23 
	
.LABEL $label$24
	if ( ($6 == 0) ){ goto $label$22 }
	
.LABEL $label$23
	$7 = (int_64)0
	
.LOOP $label$25:
	$8 = *(($6 + [12243]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$26 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$26
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$25 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$21 
	
.LABEL $label$22
	$9 = (int_64)4
	
.LABEL $label$21
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$4 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$30 }
	$7 = $4
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$30
	$7 = $4
	
.LOOP $label$31:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$28 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $8 ){ goto $label$31 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	CALL eosio_assert([0], [14769])
	
.LABEL $label$27
	*($1 + [56]) = (int_64)0
	*(($1 + [64])) = $9
	$6 = CALL $15([12244])
	if ( ($6 <= [8]) ){ goto $label$35 }
	CALL eosio_assert([0], [14622])
	goto $label$34 
	
.LABEL $label$35
	if ( ($6 == 0) ){ goto $label$33 }
	
.LABEL $label$34
	$7 = (int_64)0
	
.LOOP $label$36:
	$8 = *(($6 + [12243]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$37 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$37
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$36 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$32 
	
.LABEL $label$33
	$9 = (int_64)4
	
.LABEL $label$32
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$40:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$39 }
	$4 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$41 }
	$7 = $4
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$41
	$7 = $4
	
.LOOP $label$42:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$39 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $8 ){ goto $label$42 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	CALL eosio_assert([0], [14769])
	
.LABEL $label$38
	*($1 + [72]) = (int_64)0
	*(($1 + [80])) = $9
	$6 = CALL $15([12244])
	if ( ($6 <= [8]) ){ goto $label$46 }
	CALL eosio_assert([0], [14622])
	goto $label$45 
	
.LABEL $label$46
	if ( ($6 == 0) ){ goto $label$44 }
	
.LABEL $label$45
	$7 = (int_64)0
	
.LOOP $label$47:
	$8 = *(($6 + [12243]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$48 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$48
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$47 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$43 
	
.LABEL $label$44
	$9 = (int_64)4
	
.LABEL $label$43
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$51:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$50 }
	$4 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$52 }
	$7 = $4
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$52
	$7 = $4
	
.LOOP $label$53:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$50 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $8 ){ goto $label$53 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$50
	CALL eosio_assert([0], [14769])
	
.LABEL $label$49
	*($1 + [88]) = (int_64)0
	*(($1 + [96])) = $9
	$6 = CALL $15([12244])
	if ( ($6 <= [8]) ){ goto $label$57 }
	CALL eosio_assert([0], [14622])
	goto $label$56 
	
.LABEL $label$57
	if ( ($6 == 0) ){ goto $label$55 }
	
.LABEL $label$56
	$7 = (int_64)0
	
.LOOP $label$58:
	$8 = *(($6 + [12243]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$59 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$59
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$58 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$54 
	
.LABEL $label$55
	$9 = (int_64)4
	
.LABEL $label$54
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$62:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$61 }
	$4 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$63 }
	$7 = $4
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$62 }
	goto $label$60 
	
.LABEL $label$63
	$7 = $4
	
.LOOP $label$64:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$61 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $8 ){ goto $label$64 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$62 }
	goto $label$60 
	
.LABEL $label$61
	CALL eosio_assert([0], [14769])
	
.LABEL $label$60
	*($1 + [104]) = (int_64)0
	*($1 + [120]) = (int_64)0
	*(($1 + [112])) = $9
	$8 = $2
	$6 = ($8 + [-128])
	$global$0 = $6
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = $8
	CALL $371($3, $1)
	$7 = *($1)
	*($1 + [132]) = CALL db_store_i64(*($5 + [8]), (int_64)-5915062038115123200, *(*($0 + [8])), $7, $6, [128])
	if ( (uint_64)($7 <= *($5 + [16])) ){ goto $label$65 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$65
	$global$0 = ($3 + [16])
}

void .FUNC $227 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [80])
	$global$0 = $3
	*($3 + [48]) = $2
	$4 = *($0)
	*($3 + [32]) = [13146]
	*($3 + [36]) = CALL $15([13146])
	*($3 + [16]) = *($3 + [32])
	CALL require_auth2($4, *(CALL $99(($3 + [40]), ($3 + [16]))))
	$2 = *($1)
	if ( ($2 & [1]) ){ goto $label$6 }
	if ( uint_32($2 >> [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( (*($1 + [4]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$5 = [1]
	if ( ($2 & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL eosio_assert([0], [13835])
	$5 = [1]
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$1 = *($1 + [8])
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 + $5)
	
.LABEL $label$1
	*($3 + [24]) = $1
	*($3 + [28]) = CALL $15($1)
	*($3 + [8]) = *($3 + [24])
	$4 = *(CALL $99(($3 + [64]), ($3 + [8])))
	$6 = ($0 + [768])
	$2 = *(($0 + [796]))
	$7 = *(($0 + [792]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$11:
	$1 = ($2 + [-24])
	$5 = *($1)
	if ( ((int_64)*($5) == (int_64)$4) ){ goto $label$10 }
	$2 = $1
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$9 }
	if ( ((int_32)*($5 + [16]) == (int_32)$6) ){ goto $label$8 }
	CALL eosio_assert([0], [14937])
	goto $label$8 
	
.LABEL $label$9
	$1 = CALL db_find_i64(*($6), *(($0 + [776])), (int_64)7235159550573564928, $4)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$7 }
	$5 = CALL $192($6, $1)
	if ( ((int_32)*($5 + [16]) == (int_32)$6) ){ goto $label$8 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$8
	$4 = *($0)
	*($3 + [64]) = ($3 + [48])
	CALL $228($6, $5, $4, ($3 + [64]))
	$global$0 = ($3 + [80])
	return 
	
.LABEL $label$7
	$8 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*(($0 + [768]))) ){ goto $label$12 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$12
	*(($1 = CALL $7([32])) + [16]) = $6
	*($1) = $4
	*($1 + [8]) = *($3 + [48])
	CALL memcpy(($3 + [64]), $1, [8])
	CALL memcpy((($3 + [64]) | [8]), ($1 + [8]), [4])
	$4 = *($1)
	$5 = CALL db_store_i64(*(($0 + [776])), (int_64)7235159550573564928, $8, $4, ($3 + [64]), [12])
	*($1 + [20]) = $5
	$2 = ($0 + [784])
	if ( (uint_64)($4 <= *($2)) ){ goto $label$13 }
	*($2) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*($3 + [56]) = $1
	$4 = *($1)
	*($3 + [64]) = $4
	*($3 + [52]) = $5
	$7 = ($0 + [796])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [800]))) ){ goto $label$16 }
	*($2 + [8]) = $4
	*($2 + [16]) = $5
	*($3 + [56]) = [0]
	*($2) = $1
	*($7) = ($2 + [24])
	$1 = *($3 + [56])
	*($3 + [56]) = [0]
	if ( $1 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $229(($0 + [792]), ($3 + [56]), ($3 + [64]), ($3 + [52]))
	$1 = *($3 + [56])
	*($3 + [56]) = [0]
	if ( ($1 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $9($1)
	
.LABEL $label$14
	$global$0 = ($3 + [80])
}

void .FUNC $220 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [224])
	$global$0 = $2
	*($2 + [200]) = $1
	CALL require_auth($1)
	if ( ((int_32)*(($0 + [756])) == (int_32)[1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13584])
	
.LABEL $label$1
	$3 = ($0 + [400])
	$5 = *(($0 + [428]))
	$4 = *(($0 + [424]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$15 }
	
.LOOP $label$17:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$16 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$15 }
	if ( ((int_32)*($7 + [52]) == (int_32)$3) ){ goto $label$18 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$18
	*($2 + [196]) = $7
	*($2 + [192]) = $3
	if ( ($7 == 0) ){ goto $label$12 }
	$5 = (($2 + [192]) | [4])
	goto $label$14 
	
.LABEL $label$15
	$6 = CALL db_find_i64(*($3), *(($0 + [408])), (int_64)-4994365207729012736, $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$13 }
	$7 = CALL $174($3, $6)
	if ( ((int_32)*($7 + [52]) == (int_32)$3) ){ goto $label$19 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$19
	*($2 + [196]) = $7
	*($2 + [192]) = $3
	$5 = (($2 + [192]) | [4])
	
.LABEL $label$14
	if ( ((int_64))(((int_64)CALL $86() / (int_64)1000000) - *($7 + [48])) > (int_64)1) ){ goto $label$20 }
	CALL eosio_assert([0], [13692])
	
.LABEL $label$20
	if ( ((int_64)((int_64)*($7 + [32]) | (int_64)2) != (int_64)3) ){ goto $label$8 }
	$1 = *($7 + [16])
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$8 }
	if ( ((int_64)*(($7 + [24])) == (int_64)*(($0 + [600]))) ){ goto $label$21 }
	CALL eosio_assert([0], [15344])
	$1 = *(($7 + [16]))
	
.LABEL $label$21
	$1 = (int_64)
	*(($6 = ($0 + [592]))) = $1(*($6) - $1))
	if ( ((int_64)$1 > (int_64)-4611686018427387904) ){ goto $label$22 }
	CALL eosio_assert([0], [15392])
	$1 = *($6)
	
.LABEL $label$22
	if ( ((int_64)$1 < (int_64)4611686018427387904) ){ goto $label$23 }
	CALL eosio_assert([0], [15414])
	
.LABEL $label$23
	*(($2 + [184])) = [0]
	*($2 + [176]) = (int_64)0
	$6 = CALL $15([13724])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$11 }
	*($2 + [176]) = ($6 << [1])
	$7 = (($2 + [176]) | [1])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$13
	*($2 + [196]) = [0]
	*($2 + [192]) = $3
	
.LABEL $label$12
	$8 = ($0 + [360])
	$5 = *(($0 + [388]))
	$7 = *(($0 + [384]))
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$24:
	$6 = ($5 + [-24])
	$4 = *($6)
	if ( ((int_64)*($4) == (int_64)$1) ){ goto $label$7 }
	$5 = $6
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$24 }
	goto $label$6 
	
.LABEL $label$11
	$4 = (($6 + [16]) & [-16])
	$7 = CALL $7($4)
	*($2 + [176]) = ($4 | [1])
	*($2 + [184]) = $7
	*($2 + [180]) = $6
	
.LABEL $label$10
	CALL memcpy($7, [13724], $6)
	
.LABEL $label$9
	*(($7 + $6)) = [0]
	$1 = *($0)
	*($2 + [104]) = [13263]
	*($2 + [108]) = CALL $15([13263])
	*($2 + [16]) = *($2 + [104])
	$6 = CALL $99(($2 + [112]), ($2 + [16]))
	*($2 + [120]) = $1
	*($2 + [128]) = *($6)
	*($2 + [88]) = [12273]
	*($2 + [92]) = CALL $15([12273])
	*($2 + [8]) = *($2 + [88])
	$7 = CALL $99(($2 + [96]), ($2 + [8]))
	*($2 + [72]) = [13270]
	*($2 + [76]) = CALL $15([13270])
	*($2) = *($2 + [72])
	$4 = CALL $99(($2 + [80]), $2)
	$6 = *($5)
	$1 = *($6)
	*((($2 + [24]) + [24])) = *(($6 + [24]))
	*($2 + [24]) = *($0)
	*($2 + [40]) = *($6 + [16])
	*($2 + [32]) = $1
	CALL $52((($2 + [24]) + [32]), ($2 + [176]))
	$6 = CALL $167(($2 + [136]), ($2 + [120]), *($7), *($4), ($2 + [24]))
	CALL $168($6)
	$5 = *($6 + [28])
	if ( ($5 == 0) ){ goto $label$25 }
	*(($6 + [32])) = $5
	CALL $9($5)
	
.LABEL $label$25
	$5 = *($6 + [16])
	if ( ($5 == 0) ){ goto $label$26 }
	*(($6 + [20])) = $5
	CALL $9($5)
	
.LABEL $label$26
	if ( ((*($2 + [56]) & [1]) == 0) ){ goto $label$27 }
	CALL $9(*(($2 + [64])))
	
.LABEL $label$27
	$1 = *($0)
	*($2 + [120]) = $0
	*($2 + [124]) = ($2 + [192])
	*($2 + [136]) = $1
	$5 = ($0 + [160])
	if ( ((int_64)CALL current_receiver() == (int_64)*($0 + [160])) ){ goto $label$28 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$28
	*($2 + [24]) = $5
	*($2 + [28]) = ($2 + [120])
	*($2 + [32]) = ($2 + [136])
	*(($6 = CALL $7([64])) + [24]) = (int_64)0
	*($6 + [16]) = (int_64)0
	*($6 + [32]) = (int_64)0
	*($6 + [44]) = $5
	CALL $221(($2 + [24]), $6)
	*($2 + [216]) = $6
	$1 = *($6)
	*($2 + [24]) = $1
	$7 = *($6 + [48])
	*($2 + [212]) = $7
	$4 = ($0 + [188])
	$5 = *($4)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [192]))) ){ goto $label$31 }
	*($5 + [8]) = $1
	*($5 + [16]) = $7
	*($2 + [216]) = [0]
	*($5) = $6
	*($4) = ($5 + [24])
	$6 = *($2 + [216])
	*($2 + [216]) = [0]
	if ( $6 ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	CALL $222(($0 + [184]), ($2 + [216]), ($2 + [24]), ($2 + [212]))
	$6 = *($2 + [216])
	*($2 + [216]) = [0]
	if ( ($6 == 0) ){ goto $label$29 }
	
.LABEL $label$30
	CALL $9($6)
	
.LABEL $label$29
	if ( ((*($2 + [176]) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*($2 + [184]))
	
.LABEL $label$8
	$1 = *($2 + [192])
	$6 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( $6) ){ goto $label$32 }
	CALL eosio_assert([0], [15569])
	CALL eosio_assert([0], [15603])
	
.LABEL $label$32
	$5 = CALL db_next_i64(*($6 + [56]), ($2 + [24]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$33 }
	CALL $174((CASTING uint_32)(uint_64 $1), $5)
	
.LABEL $label$33
	CALL $181($3, $6)
	$global$0 = ($2 + [224])
	return 
	
.LABEL $label$7
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$6 }
	if ( ((int_32)*($4 + [200]) == (int_32)$8) ){ goto $label$5 }
	CALL eosio_assert([0], [14937])
	goto $label$5 
	
.LABEL $label$6
	$6 = CALL db_find_i64(*($8), *(($0 + [368])), (int_64)-6031319021931067904, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	if ( ((int_32)*(CALL $175($8, $6) + [200]) == (int_32)$8) ){ goto $label$5 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$5
	$1 = *($0)
	*($2 + [216]) = ($2 + [200])
	*($2 + [136]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*(($0 + [400]))) ){ goto $label$34 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$34
	*($2 + [24]) = $3
	*($2 + [28]) = ($2 + [216])
	*($2 + [32]) = ($2 + [136])
	*(($6 = CALL $7([64])) + [8]) = (int_64)0
	*($6) = (int_64)0
	*($6 + [16]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [52]) = $3
	CALL $223(($2 + [24]), $6)
	*($2 + [120]) = $6
	$1 = *($6)
	*($2 + [24]) = $1
	$7 = *($6 + [56])
	*($2 + [176]) = $7
	$4 = ($0 + [428])
	$5 = *($4)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [432]))) ){ goto $label$36 }
	*($5 + [8]) = $1
	*($5 + [16]) = $7
	*($2 + [120]) = [0]
	*($5) = $6
	*($4) = ($5 + [24])
	$6 = *($2 + [120])
	*($2 + [120]) = [0]
	if ( $6 ){ goto $label$35 }
	goto $label$2 
	
.LABEL $label$36
	CALL $218(($0 + [424]), ($2 + [120]), ($2 + [24]), ($2 + [176]))
	$6 = *($2 + [120])
	*($2 + [120]) = [0]
	if ( ($6 == 0) ){ goto $label$2 }
	
.LABEL $label$35
	CALL $9($6)
	$global$0 = ($2 + [224])
	return 
	
.LABEL $label$4
	CALL eosio_assert([0], [13783])
	$global$0 = ($2 + [224])
	return (unreachable)
	
.LABEL $label$3
	CALL $51(($2 + [176]))
	
.LABEL $label$2
	$global$0 = ($2 + [224])
}

void .FUNC $221 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *(($6 + [176]))
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = ($6 + [160])
	$9 = CALL db_lowerbound_i64(*($8), *(($6 + [168])), (int_64)-3107686822742310912, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $245($8, $9)
	*($3 + [12]) = [0]
	*($3 + [8]) = $8
	$7 = *(*(CALL $379(($3 + [8])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [176])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [15781])
	$7 = *(($6 + [176]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [176])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *($6 + [480])
	$6 = *(*($5 + [4]) + [4])
	*($1 + [16]) = *($6)
	*($1 + [24]) = *($6 + [16])
	*(($1 + [32])) = *(($6 + [24]))
	*($1 + [40]) = ((int_64)CALL $86() / (int_64)1000000)
	$2 = $2
	$6 = ($2 + [-48])
	$global$0 = $6
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = ($2 + [-4])
	CALL $380(($3 + [8]), $1)
	$7 = *($1)
	*($1 + [48]) = CALL db_store_i64(*($4 + [8]), (int_64)-3107686822742310912, *(*($0 + [8])), $7, $6, [44])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$4 = ($4 + [8])
	$7 = *($4)
	$0 = *(($0 + [8]))
	$10 = *($0)
	$11 = *($1)
	*($3 + [24]) = *(($1 + [8]))
	*($1 + [52]) = CALL db_idx64_store($7, (int_64)-3107686822742310912, $10, $11, ($3 + [24]))
	$7 = *($0)
	$10 = *($4)
	$11 = *($1)
	*($3 + [24]) = *(($1 + [40]))
	*(($1 + [56])) = CALL db_idx64_store($10, (int_64)-3107686822742310911, $7, $11, ($3 + [24]))
	$global$0 = ($3 + [32])
}

void .FUNC $222 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $80 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = [0]
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$5 }
	$1 = CALL $22($0)
	
.LABEL $label$5
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$6 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	if ( (*(($0 + [20])) == 0) ){ goto $label$3 }
	
.LABEL $label$6
	$3 = *($0 + [8])
	$2 = *($0 + [4])
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$7 }
	CALL int_64 $0((int_32 (CASTING int_64)(int_32 ($2 - $3))), (int_64 [1]), (int_32 *($0 + [40])))
	
.LABEL $label$7
	*($0 + [16]) = (int_64)0
	$2 = [0]
	*(($0 + [28])) = [0]
	*(($0 + [4])) = (int_64)0
	if ( ($1 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	if ( (*([0] + [8232]) == 0) ){ goto $label$8 }
	$4 = CALL $80(*([0] + [8232]))
	
.LABEL $label$8
	$0 = *(CALL $20())
	if ( ($0 == 0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = [0]
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$11 }
	$1 = CALL $22($0)
	
.LABEL $label$11
	$3 = *($0 + [28])
	$2 = *($0 + [20])
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$12 }
	$5 = [0]
	if ( ((int_32)*(($0 + [76])) < (int_32)[0]) ){ goto $label$13 }
	$5 = CALL $22($0)
	$3 = *(($0 + [28]))
	$2 = *(($0 + [20]))
	
.LABEL $label$13
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$16 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	if ( *(($0 + [20])) ){ goto $label$16 }
	$2 = [-1]
	if ( $5 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$3 = *($0 + [8])
	$2 = *($0 + [4])
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$17 }
	CALL int_64 $0((int_32 (CASTING int_64)(int_32 ($2 - $3))), (int_64 [1]), (int_32 *($0 + [40])))
	
.LABEL $label$17
	*($0 + [16]) = (int_64)0
	$2 = [0]
	*(($0 + [28])) = [0]
	*(($0 + [4])) = (int_64)0
	if ( ($5 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $23($0)
	
.LABEL $label$14
	$4 = ($2 | $4)
	
.LABEL $label$12
	if ( ($1 == 0) ){ goto $label$18 }
	CALL $23($0)
	
.LABEL $label$18
	$0 = *($0 + [56])
	if ( $0 ){ goto $label$10 }
	
.LABEL $label$9
	CALL $21()
	return $4
	
.LABEL $label$3
	$2 = [-1]
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	return $2
}

void .FUNC $389 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [48])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($6, $4, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = *(($3 + [56]))
	if ( ((int_32)(*(($5 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [8])
	*($6) = (*($6) + [8])
	$5 = *($0)
	$0 = ($5 + [64])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((int_32)(*($6 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$4 = *(($6 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $0, [8])
	$0 = (*($4) + [8])
	*(($4 = ($6 + [4]))) = $0
	*($2 + [8]) = *(($5 + [72]))
	if ( ((int_32)(*(($6 + [8])) - $0) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy($0, ($2 + [8]), [8])
	*($4) = (*($4) + [8])
	$0 = ($5 + [80])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((int_32)(*($6 + [8]) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$4 = *(($6 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $0, [8])
	$0 = (*($4) + [8])
	*(($4 = ($6 + [4]))) = $0
	*($2 + [8]) = *(($5 + [88]))
	if ( ((int_32)(*(($6 + [8])) - $0) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$0 = *($4)
	
.LABEL $label$6
	CALL memcpy($0, ($2 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $347(*($1), ($5 + [96]))
	$global$0 = ($2 + [16])
}

void .FUNC $388 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [24]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [40]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	*($2 + [8]) = $4
	CALL $389(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $383 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [24]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [40]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [56]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [64])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [72]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [80])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [88]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$12
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [96])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy($4, $3, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$0 = CALL $347($0, ($1 + [104]))
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $382 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [24])) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [40])) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [56])) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [64])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [72])) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [80])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$12
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [88])) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [96])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy($3, $4, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$0 = CALL $295($0, ($1 + [104]))
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $381 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [32])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [40])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($1, $4, [4])
	*($3) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $380 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [32]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [40])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $1, [4])
	*($3) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $387 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [48]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy(($2 + [48]), $4, [8])
	*(($1 + [24])) = *($2 + [48])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [48]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy(($2 + [48]), $4, [8])
	*(($1 + [40])) = *($2 + [48])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [48]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy(($2 + [48]), $4, [8])
	*(($1 + [56])) = *($2 + [48])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [64])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [48]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy(($2 + [48]), $4, [8])
	*(($1 + [72])) = *($2 + [48])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [80])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[31]) ){ goto $label$12 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$12
	$7 = ($1 + [96])
	CALL memcpy(($2 + [48]), $4, [32])
	*($3) = (*($3) + [32])
	$8 = (int_64)0
	$3 = [16]
	$5 = ($2 + [16])
	$4 = [0]
	$9 = (int_64)0
	
.LOOP $label$14:
	$6 = (($2 + [48]) + $4)
	if ( ($3 <= [2]) ){ goto $label$15 }
	$8 = ((int_64)$8 | (int_64)*($6))
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)(uint_64)$8 >> (uint_64)(int_64)56))
	$3 = ($3 + [-1])
	$8 = ((int_64)$8 << (int_64)8)
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$16 }
	CALL eosio_assert([0], [15525])
	
.LABEL $label$16
	*($5 + [8]) = $9
	*($5) = ((int_64)$8 | (int_64)*($6))
	$3 = [16]
	$5 = ($5 + [16])
	$8 = (int_64)0
	$9 = (int_64)0
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$14 }
	
.LABEL $label$13
	if ( ((int_32)$3 == (int_32)[16]) ){ goto $label$17 }
	if ( ($3 <= [2]) ){ goto $label$18 }
	CALL __ashlti3($2, $8, $9, (($3 << [3]) + [-8]))
	$9 = *(($2 + [8]))
	$8 = *($2)
	
.LABEL $label$18
	*($5) = $8
	*($5 + [8]) = $9
	
.LABEL $label$17
	*($7) = *($2 + [16])
	*(($7 + [8])) = *($2 + [24])
	*(($7 + [24])) = *((($2 + [16]) + [24]))
	*(($7 + [16])) = *((($2 + [16]) + [16]))
	$5 = ($1 + [128])
	$3 = ($0 + [4])
	$4 = *($3)
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[3]) ){ goto $label$19 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$19
	CALL memcpy($5, $4, [4])
	*($3) = (*($3) + [4])
	$global$0 = ($2 + [80])
	return $0
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $7($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $385 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [24]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [40]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [56]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [64])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [72]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [80])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($4, $3, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$3 = ($1 + [128])
	$1 = *($0 + [4])
	$0 = CALL $386($0, ($1 + [96]))
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$12 }
	CALL eosio_assert([0], [15287])
	$1 = *(($0 + [4]))
	
.LABEL $label$12
	CALL memcpy($1, $3, [4])
	*(($1 = ($0 + [4]))) = (*($1) + [4])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $384 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [136]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [15887])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)4229865212519383040)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [15833])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [15833])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $250(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $72 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $58(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $36(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [11505], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $58(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $58(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $73 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $58(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $36(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [11514], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $58(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $58(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

int_64 .FUNC $70 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [16])
	$global$0 = $3
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$4 = CALL $15([11169])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$6 }
	*($3) = ($4 << [1])
	$5 = ($3 | [1])
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $7($6)
	*($3) = ($6 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $4
	
.LABEL $label$5
	CALL memcpy($5, [11169], $4)
	
.LABEL $label$4
	*(($5 + $4)) = [0]
	*($3 + [12]) = [0]
	$4 = *($0 + [8])
	$5 = *($0)
	$6 = *(CALL $4())
	*(CALL $4()) = [0]
	$4 = ( $4 ? ($0 + [1]) : ($5 & [1]) )
	$7 = CALL $29($4, ($3 + [12]), $2)
	$0 = CALL $4()
	$5 = *($0)
	*($0) = $6
	if ( ((int_32)$5 == (int_32)[34]) ){ goto $label$2 }
	$0 = *($3 + [12])
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($0 - $4)
	
.LABEL $label$7
	if ( ((*($3) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*($3 + [8]))
	
.LABEL $label$8
	$global$0 = ($3 + [16])
	return $7
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $67($3)
	
.LABEL $label$1
	CALL $68($3)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $58(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $36(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [11436], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $58(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $58(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

int_32 .FUNC $76 (int_32 $0)
{
	return (((int_32)$0 == (int_32)[32]) | (($0 + [-9]) <= [5]))
}

int_32 .FUNC $77 (int_32 $0)
{
	return [0]
}

void .FUNC $74 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC $75 ()
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $78 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = *($0 + [28])
	CALL prints_l($3, (*($0 + [20]) - $3))
	CALL prints_l($1, $2)
	return ((*($0 + [20]) + $2) - *($0 + [28]))
}

int_64 .FUNC $79 (int_32 $0, int_64 $1, int_32 $2)
{
	return (int_64)-1
}

int_32 .FUNC $259 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [16]) = [14270]
	*($1 + [20]) = CALL $15([14270])
	*($1 + [8]) = *($1 + [16])
	CALL $99(($1 + [24]), ($1 + [8]))
	$2 = ($0 + [768])
	$4 = *(($0 + [796]))
	$3 = *(($0 + [792]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$5:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)-6030912130217508864) ){ goto $label$4 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	if ( ((int_32)*($6 + [16]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [14937])
	goto $label$2 
	
.LABEL $label$3
	$5 = CALL db_find_i64(*($2), *(($0 + [776])), (int_64)7235159550573564928, (int_64)-6030912130217508864)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$1 }
	$6 = CALL $192($2, $5)
	if ( ((int_32)*($6 + [16]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$2
	$5 = *($6 + [8])
	$global$0 = ($1 + [32])
	return $5
	
.LABEL $label$1
	$global$0 = ($1 + [32])
	return [10000]
}

int_32 .FUNC $258 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [16]) = [14259]
	*($1 + [20]) = CALL $15([14259])
	*($1 + [8]) = *($1 + [16])
	CALL $99(($1 + [24]), ($1 + [8]))
	$2 = ($0 + [768])
	$4 = *(($0 + [796]))
	$3 = *(($0 + [792]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$5:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)4154295086429667328) ){ goto $label$4 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	if ( ((int_32)*($6 + [16]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [14937])
	goto $label$2 
	
.LABEL $label$3
	$5 = CALL db_find_i64(*($2), *(($0 + [776])), (int_64)7235159550573564928, (int_64)4154295086429667328)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$1 }
	$6 = CALL $192($2, $5)
	if ( ((int_32)*($6 + [16]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$2
	$5 = *($6 + [8])
	$global$0 = ($1 + [32])
	return $5
	
.LABEL $label$1
	$global$0 = ($1 + [32])
	return [10000]
}

void .FUNC $312 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1088])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [1080])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [1080])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [15011])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$6
	CALL memcpy(($3 + [1072]), $5, [8])
	*(($3 + [8])) = $6
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $6
	*($3) = *($3 + [16])
	$2 = CALL $123(($3 + [32]), $0, $1, $3)
	CALL $164($2, *($3 + [1080]), *($3 + [1072]))
	CALL $127($2)
	$global$0 = ($3 + [1088])
}

void .FUNC $313 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [1216])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1204]) = $2
	*($3 + [1200]) = $2
	*($3 + [1208]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$2 = *($3 + [1204])
	
.LABEL $label$5
	CALL memcpy(($3 + [1192]), $2, [8])
	$2 = (*($3 + [1204]) + [8])
	*($3 + [1204]) = $2
	*($3 + [1184]) = (int_64)0
	$4 = (($3 + [1200]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$2 = *($3 + [1204])
	
.LABEL $label$6
	CALL memcpy(($3 + [1184]), $2, [8])
	$2 = (*($3 + [1204]) + [8])
	*($3 + [1204]) = $2
	*($3 + [1176]) = (int_64)0
	*($3 + [1168]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	$2 = *($3 + [1204])
	
.LABEL $label$7
	CALL memcpy(($3 + [1168]), $2, [8])
	$2 = (*($3 + [1204]) + [8])
	*($3 + [1204]) = $2
	*($3 + [48]) = (int_64)0
	$4 = (($3 + [1200]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	$2 = *($3 + [1204])
	
.LABEL $label$8
	CALL memcpy(($3 + [48]), $2, [8])
	*((($3 + [1168]) + [8])) = *($3 + [48])
	$2 = (*($3 + [1204]) + [8])
	*($3 + [1204]) = $2
	*($3 + [1160]) = (int_64)0
	*($3 + [1152]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15011])
	$2 = *($3 + [1204])
	
.LABEL $label$9
	CALL memcpy(($3 + [1152]), $2, [8])
	$2 = (*($3 + [1204]) + [8])
	*($3 + [1204]) = $2
	*($3 + [48]) = (int_64)0
	$4 = (($3 + [1200]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15011])
	$2 = *($3 + [1204])
	
.LABEL $label$10
	CALL memcpy(($3 + [48]), $2, [8])
	*((($3 + [1152]) + [8])) = *($3 + [48])
	$2 = (*($3 + [1204]) + [8])
	*($3 + [1204]) = $2
	*($3 + [1144]) = (int_64)0
	*($3 + [1136]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15011])
	$2 = *($3 + [1204])
	
.LABEL $label$11
	CALL memcpy(($3 + [1136]), $2, [8])
	$2 = (*($3 + [1204]) + [8])
	*($3 + [1204]) = $2
	*($3 + [48]) = (int_64)0
	$4 = (($3 + [1200]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15011])
	$2 = *($3 + [1204])
	
.LABEL $label$12
	CALL memcpy(($3 + [48]), $2, [8])
	*((($3 + [1136]) + [8])) = *($3 + [48])
	$2 = (*($3 + [1204]) + [8])
	*($3 + [1204]) = $2
	*($3 + [1128]) = (int_64)0
	*($3 + [1120]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [15011])
	$2 = *($3 + [1204])
	
.LABEL $label$13
	CALL memcpy(($3 + [1120]), $2, [8])
	$2 = (*($3 + [1204]) + [8])
	*($3 + [1204]) = $2
	*($3 + [48]) = (int_64)0
	$4 = (($3 + [1200]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [15011])
	$2 = *($3 + [1204])
	
.LABEL $label$14
	CALL memcpy(($3 + [48]), $2, [8])
	*((($3 + [1120]) + [8])) = *($3 + [48])
	$2 = (*($3 + [1204]) + [8])
	*($3 + [1204]) = $2
	*($3 + [1112]) = (int_64)0
	*($3 + [1104]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [15011])
	$2 = *($3 + [1204])
	
.LABEL $label$15
	CALL memcpy(($3 + [1104]), $2, [8])
	$2 = (*($3 + [1204]) + [8])
	*($3 + [1204]) = $2
	*($3 + [48]) = (int_64)0
	$4 = (($3 + [1200]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [15011])
	$2 = *($3 + [1204])
	
.LABEL $label$16
	CALL memcpy(($3 + [48]), $2, [8])
	*((($3 + [1104]) + [8])) = *($3 + [48])
	*($3 + [1204]) = (*($3 + [1204]) + [8])
	*($3 + [1096]) = [0]
	*($3 + [1088]) = (int_64)0
	CALL $295(($3 + [1200]), ($3 + [1088]))
	$2 = *($4)
	*((($3 + [32]) + [8])) = $2
	*(($3 + [8])) = $2
	$5 = *($3 + [1200])
	*($3) = $5
	*($3 + [32]) = $5
	$2 = CALL $123(($3 + [48]), $0, $1, $3)
	$0 = *($3 + [1184])
	$4 = CALL $52(($3 + [16]), ($3 + [1088]))
	CALL require_auth(*($2))
	CALL require_recipient($0)
	if ( (*($4) & [1]) ){ goto $label$19 }
	CALL $127($2)
	if ( (*($3 + [1088]) & [1]) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $9(*($4 + [8]))
	CALL $127($2)
	if ( ((*($3 + [1088]) & [1]) == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL $9(*(($3 + [1096])))
	$global$0 = ($3 + [1216])
	return 
	
.LABEL $label$17
	$global$0 = ($3 + [1216])
}

void .FUNC $314 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	$2 = ($global$0 - [1648])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [1628]) = $4
	*($3 + [1624]) = $4
	*($3 + [1632]) = ($4 + $5)
	*(($3 + [1376])) = (int_64)0
	*(($3 + [1384])) = (int_64)0
	*(($3 + [1400])) = (int_64)0
	*(($3 + [1408])) = (int_64)0
	*(($3 + [1428])) = (int_64)0
	*(($3 + [1436])) = (int_64)0
	*(($3 + [1452])) = (int_64)0
	*(($3 + [1460])) = (int_64)0
	*(($3 + [1476])) = [0]
	*(($3 + [1488])) = (int_64)0
	*($3 + [1360]) = (int_64)0
	*($3 + [1368]) = (int_64)0
	*($3 + [1392]) = (int_64)0
	*($3 + [1420 align=4]) = (int_64)0
	*($3 + [1444 align=4]) = (int_64)0
	*($3 + [1468 align=4]) = (int_64)0
	*($3 + [1480]) = (int_64)0
	*($3 + [1496]) = (int_64)0
	*(($3 + [1504])) = (int_64)0
	*(($3 + [1520])) = (int_64)0
	*(($3 + [1536])) = (int_64)0
	*(($3 + [1552])) = (int_64)0
	*(($3 + [1568])) = (int_64)0
	*(($3 + [1584])) = (int_64)0
	*(($3 + [1600])) = (int_64)0
	*(($3 + [1616])) = (int_64)0
	*($3 + [1512]) = (int_64)0
	*($3 + [1528]) = (int_64)0
	*($3 + [1544]) = (int_64)0
	*($3 + [1560]) = (int_64)0
	*($3 + [1576]) = (int_64)0
	*($3 + [1592]) = (int_64)0
	*($3 + [1608]) = (int_64)0
	*($3 + [1640]) = ($3 + [1624])
	*($3 + [316]) = (($3 + [1352]) + [8])
	$5 = (($3 + [1352]) + [16])
	*($3 + [320]) = $5
	$2 = (($3 + [1352]) + [28])
	*($3 + [324]) = $2
	$6 = (($3 + [1352]) + [40])
	*($3 + [328]) = $6
	$7 = (($3 + [1352]) + [52])
	*($3 + [332]) = $7
	*($3 + [336]) = ($3 + [1416])
	$8 = (($3 + [1352]) + [68])
	*($3 + [340]) = $8
	$9 = (($3 + [1352]) + [80])
	*($3 + [344]) = $9
	$10 = (($3 + [1352]) + [92])
	*($3 + [348]) = $10
	$11 = (($3 + [1352]) + [104])
	*($3 + [352]) = $11
	$12 = (($3 + [1352]) + [116])
	*($3 + [356]) = $12
	$13 = (($3 + [1352]) + [128])
	*($3 + [360]) = $13
	*($3 + [364]) = (($3 + [1352]) + [144])
	*($3 + [368]) = ($3 + [1512])
	*($3 + [372]) = ($3 + [1528])
	*($3 + [376]) = ($3 + [1544])
	*($3 + [380]) = ($3 + [1560])
	*($3 + [384]) = ($3 + [1576])
	*($3 + [312]) = ($3 + [1352])
	*($3 + [392]) = ($3 + [1608])
	*($3 + [388]) = ($3 + [1592])
	CALL $299(($3 + [312]), ($3 + [1640]))
	$4 = *($3 + [1632])
	*((($3 + [296]) + [8])) = $4
	*((($3 + [8]) + [8])) = $4
	$14 = *($3 + [1624])
	*($3 + [8]) = $14
	*($3 + [296]) = $14
	$4 = CALL $123(($3 + [312]), $0, $1, ($3 + [8]))
	*(($15 = (($3 + [24]) + [8]))) = *($3 + [1360])
	*($3 + [24]) = *($3 + [1352])
	CALL $52((($3 + [24]) + [16]), $5)
	CALL $52((($3 + [24]) + [28]), $2)
	CALL $52((($3 + [24]) + [40]), $6)
	CALL $52((($3 + [24]) + [52]), $7)
	*($3 + [88]) = *($3 + [1416])
	CALL $52((($3 + [24]) + [68]), $8)
	CALL $52((($3 + [24]) + [80]), $9)
	CALL $52((($3 + [24]) + [92]), $10)
	CALL $52((($3 + [24]) + [104]), $11)
	CALL $52((($3 + [24]) + [116]), $12)
	CALL memcpy((($3 + [24]) + [128]), $13, [144])
	CALL require_auth(*($4))
	CALL require_recipient(*($15))
	CALL $119(($3 + [24]))
	CALL $127($4)
	CALL $119(($3 + [1352]))
	$global$0 = ($3 + [1648])
}

void .FUNC $315 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1088])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [1080])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [1080])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [15011])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $123(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $264($2, *($3 + [1080]))
	CALL $127($2)
	$global$0 = ($3 + [1088])
}

void .FUNC $316 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1088])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1080]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [1080]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$6
	CALL memcpy(($3 + [1072]), $6, [8])
	*(($3 + [8])) = $5
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	$2 = CALL $123(($3 + [32]), $0, $1, $3)
	CALL $208($2, *($3 + [1080]), *($3 + [1072]))
	CALL $127($2)
	$global$0 = ($3 + [1088])
}

void .FUNC $317 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1088])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1080]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$5
	CALL memcpy(($3 + [1080]), $2, [8])
	*((($3 + [8]) + [8])) = $5
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $5
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $123(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $212($2, *($3 + [1080]))
	CALL $127($2)
	$global$0 = ($3 + [1088])
}

void .FUNC $251 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [132]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15633])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15678])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [15728])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*(($1 + [136])))
}

int_32 .FUNC $250 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([144])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [132]) = $0
	*(($5 + [120])) = (int_64)0
	*(($5 + [112])) = (int_64)0
	*(($5 + [104])) = (int_64)0
	CALL $387(($3 + [32]), $5)
	*($5 + [136]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $239(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $253 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = CALL $15([12285])
	if ( ($5 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [14622])
	goto $label$3 
	
.LABEL $label$4
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = (int_64)0
	
.LOOP $label$5:
	$7 = *(($5 + [12284]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$6
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$5 }
	$8 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$8 = (int_64)4
	
.LABEL $label$1
	*($0 + [8]) = $8
	*($0) = (int_64)0
	$6 = (uint_64)$8 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$6 = $9
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$6 = $9
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$7 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $7 ){ goto $label$11 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [14769])
	
.LABEL $label$7
	$5 = CALL $15([12244])
	if ( ($5 <= [8]) ){ goto $label$16 }
	CALL eosio_assert([0], [14622])
	goto $label$15 
	
.LABEL $label$16
	if ( ($5 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$6 = (int_64)0
	
.LOOP $label$17:
	$7 = *(($5 + [12243]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$18
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$17 }
	if ( ((int_64)*($2 + [8]) != (int_64)((int_64)((int_64)$6 << (int_64)8) | (int_64)4)) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	if ( ((int_64)*($2 + [8]) == (int_64)4) ){ goto $label$12 }
	
.LABEL $label$13
	$global$0 = ($4 + [32])
	return 
	
.LABEL $label$12
	$6 = ((int_64)((int_64)*($2) * (int_64)(CASTING int_64)(int_32 CALL $257($1))) / (int_64)10000)
	*($0) = $6
	if ( ($3 == 0) ){ goto $label$22 }
	$9 = (CASTING int_64)(int_32 CALL $258($1))
	CALL __multi3($4, $9, (int_64)$9 >> (int_64)63), $6, (int_64)$6 >> (int_64)63))
	$9 = *(($4 + [8]))
	$6 = *($4)
	if ( (( (uint_64)($6 <= (int_64)4611686018427387904) ? ((int_64)$9 < (int_64)0) : (int_64)($9 == 0) ) == 0) ){ goto $label$21 }
	if ( ( ((uint_64)$6 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$9 > (int_64)-1) : ((int_64)$9 == (int_64)-1) ) ){ goto $label$19 }
	CALL eosio_assert([0], [14853])
	goto $label$19 
	
.LABEL $label$22
	$9 = (CASTING int_64)(int_32 CALL $259($1))
	CALL __multi3(($4 + [16]), $9, (int_64)$9 >> (int_64)63), $6, (int_64)$6 >> (int_64)63))
	$9 = *(($4 + [24]))
	$6 = *($4 + [16])
	if ( (( (uint_64)($6 <= (int_64)4611686018427387904) ? ((int_64)$9 < (int_64)0) : (int_64)($9 == 0) ) == 0) ){ goto $label$20 }
	if ( ( ((uint_64)$6 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$9 > (int_64)-1) : ((int_64)$9 == (int_64)-1) ) ){ goto $label$19 }
	CALL eosio_assert([0], [14853])
	goto $label$19 
	
.LABEL $label$21
	CALL eosio_assert([0], [14829])
	goto $label$19 
	
.LABEL $label$20
	CALL eosio_assert([0], [14829])
	
.LABEL $label$19
	*(($0 + [8])) = $8
	*($0) = ((int_64)$6 / (int_64)10000)
	$global$0 = ($4 + [32])
}

void .FUNC $252 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [144]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15633])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15678])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [15728])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $130($5)
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $130($8)
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [148]))
}

void .FUNC $255 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	$8 = ($global$0 - [464])
	$global$0 = $8
	*($8 + [280]) = [12337]
	*($8 + [284]) = CALL $15([12337])
	*($8 + [40]) = *($8 + [280])
	$9 = CALL $99(($8 + [288]), ($8 + [40]))
	*(($10 = (($8 + [264]) + [8]))) = *(($0 + [24]))
	*($8 + [264]) = *($0 + [16 align=4])
	$11 = *($0 + [8])
	$12 = *($9)
	$9 = *($10)
	*((($8 + [208]) + [8])) = $9
	*(($10 = (($8 + [224]) + [8]))) = $9
	$13 = *($8 + [264])
	*($8 + [224]) = $13
	*($8 + [208]) = $13
	$9 = *($10)
	*((($8 + [48]) + [8])) = $9
	*((($8 + [296]) + [24])) = $9
	*($8 + [296]) = $12
	*($8 + [304]) = $11
	$11 = *($8 + [224])
	*($8 + [312]) = $11
	*($8 + [48]) = $11
	*(($8 + [336])) = $12
	*(($8 + [344])) = (int_64)-1
	*(($8 + [352])) = (int_64)0
	*(($8 + [360])) = [0]
	*(($8 + [376])) = $12
	*(($8 + [384])) = (int_64)-1
	*(($8 + [392])) = (int_64)0
	*(($8 + [400])) = [0]
	*(($8 + [416])) = $12
	*(($8 + [424])) = (int_64)-1
	*(($8 + [432])) = (int_64)0
	*(($8 + [440])) = [0]
	*($8 + [328]) = $12
	*($8 + [368]) = $12
	*($8 + [408]) = $12
	$9 = CALL db_find_i64($12, $12, (int_64)-6030912134838407168, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$10 = ($8 + [328])
	$9 = CALL $105($10, $9)
	if ( ((int_32)*($9 + [96]) == (int_32)$10) ){ goto $label$2 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$2
	if ( (*($9 + [88]) == 0) ){ goto $label$1 }
	$2 = *($9 + [8])
	
.LABEL $label$1
	if ( (int_64)($2 == 0) ){ goto $label$3 }
	if ( ((int_64)*($6) < (int_64)1) ){ goto $label$3 }
	$12 = CALL $100(*($6 + [8]))
	$11 = *($0)
	*($8 + [192]) = [13263]
	*($8 + [196]) = CALL $15([13263])
	*($8 + [32]) = *($8 + [192])
	$9 = CALL $99(($8 + [200]), ($8 + [32]))
	*($8 + [208]) = $11
	*($8 + [216]) = *($9)
	*($8 + [176]) = [13270]
	*($8 + [180]) = CALL $15([13270])
	*($8 + [24]) = *($8 + [176])
	$9 = CALL $99(($8 + [184]), ($8 + [24]))
	*(($8 + [72])) = *($6 + [8])
	*($8 + [56]) = $2
	*($8 + [48]) = *($0)
	*($8 + [64]) = *($6)
	CALL $52((($8 + [48]) + [32]), $7)
	$9 = CALL $167(($8 + [224]), ($8 + [208]), $12, *($9), ($8 + [48]))
	CALL $168($9)
	$10 = *($9 + [28])
	if ( ($10 == 0) ){ goto $label$4 }
	*(($9 + [32])) = $10
	CALL $9($10)
	
.LABEL $label$4
	$10 = *($9 + [16])
	if ( ($10 == 0) ){ goto $label$5 }
	*(($9 + [20])) = $10
	CALL $9($10)
	
.LABEL $label$5
	if ( ((*($8 + [80]) & [1]) == 0) ){ goto $label$3 }
	CALL $9(*(($8 + [88])))
	
.LABEL $label$3
	$12 = *($0)
	*($8 + [160]) = [13263]
	*($8 + [164]) = CALL $15([13263])
	*($8 + [16]) = *($8 + [160])
	$11 = *(CALL $99(($8 + [168]), ($8 + [16])))
	*($8 + [144]) = [12337]
	*($8 + [148]) = CALL $15([12337])
	*($8 + [8]) = *($8 + [144])
	$0 = CALL $99(($8 + [152]), ($8 + [8]))
	*($8 + [128]) = [15495]
	*($8 + [132]) = CALL $15([15495])
	*($8) = *($8 + [128])
	$9 = CALL $99(($8 + [136]), $8)
	*((($8 + [48]) + [24])) = *(($3 + [8]))
	*(($8 + [88])) = *(($4 + [8]))
	*(($8 + [104])) = *(($6 + [8]))
	*(($8 + [120])) = *(($5 + [8]))
	*($8 + [56]) = $2
	*($8 + [48]) = $1
	*($8 + [64]) = *($3)
	*($8 + [80]) = *($4)
	*($8 + [96]) = *($6)
	*($8 + [112]) = *($5)
	*($8 + [224]) = *($0)
	*($8 + [232]) = *($9)
	*(($0 = CALL $7([16]))) = $12
	*($0 + [8]) = $11
	*(($8 + [260])) = [0]
	$6 = ($0 + [16])
	*((($8 + [224]) + [24])) = $6
	*(($8 + [244])) = $6
	*($8 + [240]) = $0
	*($8 + [252 align=4]) = (int_64)0
	CALL $204(($8 + [252]), [80])
	$3 = ($8 + [256])
	$0 = *($3)
	$6 = *($8 + [252])
	*($8 + [212]) = $6
	*($8 + [208]) = $6
	*($8 + [216]) = $0
	*($8 + [448]) = ($8 + [208])
	*($8 + [456]) = ($8 + [48])
	CALL $261(($8 + [456]), ($8 + [448]))
	CALL $168(($8 + [224]))
	$0 = *($8 + [252])
	if ( ($0 == 0) ){ goto $label$6 }
	*($3) = $0
	CALL $9($0)
	
.LABEL $label$6
	$0 = *($8 + [240])
	if ( ($0 == 0) ){ goto $label$7 }
	*(($8 + [244])) = $0
	CALL $9($0)
	
.LABEL $label$7
	CALL $106(($8 + [296]))
	$global$0 = ($8 + [464])
}

void .FUNC $254 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$7 = ($global$0 - [512])
	$global$0 = $7
	*($7 + [264]) = [15476]
	*($7 + [268]) = CALL $15([15476])
	*($7 + [80]) = *($7 + [264])
	$8 = CALL $99(($7 + [272]), ($7 + [80]))
	$9 = *(($1 + [24]))
	*((($7 + [248]) + [8])) = $9
	$10 = *($8)
	$11 = *($1 + [8])
	$12 = *($1 + [16 align=4])
	*((($7 + [64]) + [8])) = $9
	*($7 + [248]) = $12
	*($7 + [64]) = $12
	$8 = CALL $101(($7 + [280]), $10, $11, ($7 + [64]))
	*(($9 = (($7 + [224]) + [8]))) = *(($4 + [8]))
	*(($13 = (($7 + [208]) + [8]))) = *(($5 + [8]))
	*($7 + [240]) = (int_64)0
	*($7 + [224]) = *($4)
	*($7 + [208]) = *($5)
	$6 = CALL $52(($7 + [192]), $6)
	*((($7 + [48]) + [8])) = *($9)
	*((($7 + [32]) + [8])) = *($13)
	*($7 + [48]) = *($7 + [224])
	*($7 + [32]) = *($7 + [208])
	CALL $103($0, $8, $2, $3, ($7 + [48]), ($7 + [32]), $6, ($7 + [240]))
	if ( ((*($6) & [1]) == 0) ){ goto $label$1 }
	CALL $9(*($6 + [8]))
	
.LABEL $label$1
	if ( ((int_64)*($7 + [240]) < (int_64)1) ){ goto $label$2 }
	$12 = *($1)
	*($7 + [160]) = [13263]
	*($7 + [164]) = CALL $15([13263])
	*($7 + [24]) = *($7 + [160])
	$6 = CALL $99(($7 + [168]), ($7 + [24]))
	*($7 + [176]) = $12
	*($7 + [184]) = *($6)
	*($7 + [144]) = [15476]
	*($7 + [148]) = CALL $15([15476])
	*($7 + [16]) = *($7 + [144])
	$6 = CALL $99(($7 + [152]), ($7 + [16]))
	*($7 + [128]) = [15488]
	*($7 + [132]) = CALL $15([15488])
	*($7 + [8]) = *($7 + [128])
	$9 = CALL $99(($7 + [136]), ($7 + [8]))
	$12 = *($0)
	$3 = *($0 + [8])
	if ( ((int_64)*($5 + [8]) == (int_64)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [15344])
	
.LABEL $label$3
	$12 = (int_64)
	if ( ((int_64)$12($12 - *($5))) <= (int_64)-4611686018427387904) ){ goto $label$5 }
	if ( ((int_64)$12 < (int_64)4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [15414])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [15392])
	
.LABEL $label$4
	*(($7 + [120])) = $3
	*(($7 + [104])) = *(($4 + [8]))
	*($7 + [88]) = $2
	*($7 + [112]) = $12
	*($7 + [96]) = *($4)
	$12 = CALL $86()
	*(($7 + [476])) = (int_64)0
	*(($7 + [492])) = (int_64)0
	*(($7 + [500])) = (int_64)0
	*($7 + [460]) = [0]
	*($7 + [464]) = [0]
	*($7 + [468 align=4]) = (int_64)0
	*($7 + [484 align=4]) = (int_64)0
	*($7 + [448]) = ((CASTING uint_32)(uint_64 ((int_64)$12 / (int_64)1000000)) + [60])
	CALL $260(($7 + [484]), ($7 + [176]), $6, $9, ($7 + [88]))
	$12 = ((int_64)*($1 + [72]) + (int_64)1)
	*($1 + [72]) = $12
	$2 = CALL $86()
	*($7 + [432]) = $2
	*($7 + [440]) = ((int_64)$12 | (int_64)$2 >> (int_64)63))
	CALL $171(($7 + [448]), ($7 + [432]), *($1), [0])
	CALL $172(($7 + [448]))
	
.LABEL $label$2
	if ( ((*(($8 + [136])) & [1]) == 0) ){ goto $label$6 }
	CALL $9(*(($8 + [144])))
	
.LABEL $label$6
	$4 = *(($8 + [56]))
	if ( ($4 == 0) ){ goto $label$7 }
	$6 = ($8 + [60])
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = ($1 + [-24])
	$5 = *($1)
	*($1) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$12 }
	CALL $9(*(($5 + [72])))
	
.LABEL $label$12
	CALL $9($5)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$10 }
	$1 = *(($8 + [56]))
	goto $label$8 
	
.LABEL $label$9
	$1 = $4
	
.LABEL $label$8
	*($6) = $4
	CALL $9($1)
	
.LABEL $label$7
	$global$0 = ($7 + [512])
}

int_32 .FUNC $257 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [16]) = [14252]
	*($1 + [20]) = CALL $15([14252])
	*($1 + [8]) = *($1 + [16])
	CALL $99(($1 + [24]), ($1 + [8]))
	$2 = ($0 + [768])
	$4 = *(($0 + [796]))
	$3 = *(($0 + [792]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$5:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)4264465365976743936) ){ goto $label$4 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	if ( ((int_32)*($6 + [16]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [14937])
	goto $label$2 
	
.LABEL $label$3
	$5 = CALL db_find_i64(*($2), *(($0 + [776])), (int_64)7235159550573564928, (int_64)4264465365976743936)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$1 }
	$6 = CALL $192($2, $5)
	if ( ((int_32)*($6 + [16]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$2
	$5 = *($6 + [8])
	$global$0 = ($1 + [32])
	return $5
	
.LABEL $label$1
	$global$0 = ($1 + [32])
	return [15000]
}

void .FUNC $256 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	$5 = ($global$0 - [352])
	$global$0 = $5
	$6 = CALL $100(*($3 + [8]))
	if ( ((int_64)*($2) < (int_64)1) ){ goto $label$3 }
	$7 = *($0)
	*($5 + [280]) = [13263]
	*($5 + [284]) = CALL $15([13263])
	*($5 + [96]) = *($5 + [280])
	$8 = CALL $99(($5 + [288]), ($5 + [96]))
	*($5 + [296]) = $7
	*($5 + [304]) = *($8)
	*($5 + [264]) = [13270]
	*($5 + [268]) = CALL $15([13270])
	*($5 + [88]) = *($5 + [264])
	$9 = CALL $99(($5 + [272]), ($5 + [88]))
	*($5 + [200]) = [14179]
	*($5 + [204]) = CALL $15([14179])
	*($5 + [80]) = *($5 + [200])
	$10 = CALL $99(($5 + [208]), ($5 + [80]))
	*(($5 + [192])) = [0]
	*($5 + [184]) = (int_64)0
	$8 = CALL $15([12336])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$6 }
	*($5 + [184]) = ($8 << [1])
	$11 = (($5 + [184]) | [1])
	if ( $8 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$12 = (($8 + [16]) & [-16])
	$11 = CALL $7($12)
	*($5 + [184]) = ($12 | [1])
	*($5 + [192]) = $11
	*($5 + [188]) = $8
	
.LABEL $label$5
	CALL memcpy($11, [12336], $8)
	
.LABEL $label$4
	*(($11 + $8)) = [0]
	*(($5 + [240])) = *(($2 + [8]))
	$8 = (($5 + [184]) + [8])
	*(($5 + [256])) = *($8)
	*($8) = [0]
	*($5 + [216]) = *($0)
	*($5 + [224]) = *($10)
	*($5 + [232]) = *($2)
	*($5 + [248]) = *($5 + [184])
	*($5 + [184]) = (int_64)0
	$8 = CALL $167(($5 + [312]), ($5 + [296]), $6, *($9), ($5 + [216]))
	CALL $168($8)
	$2 = *($8 + [28])
	if ( ($2 == 0) ){ goto $label$7 }
	*(($8 + [32])) = $2
	CALL $9($2)
	
.LABEL $label$7
	$2 = *($8 + [16])
	if ( ($2 == 0) ){ goto $label$8 }
	*(($8 + [20])) = $2
	CALL $9($2)
	
.LABEL $label$8
	if ( ((*(($5 + [248])) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($5 + [256])))
	
.LABEL $label$9
	if ( ((*($5 + [184]) & [1]) == 0) ){ goto $label$3 }
	CALL $9(*(($5 + [192])))
	
.LABEL $label$3
	$8 = CALL $15([12244])
	if ( ($8 <= [8]) ){ goto $label$12 }
	CALL eosio_assert([0], [14622])
	goto $label$11 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$7 = (int_64)0
	
.LOOP $label$13:
	$2 = *(($8 + [12243]))
	if ( ((($2 + [-65]) & [255]) <= [26]) ){ goto $label$14 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$14
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$13 }
	$7 = ((int_64)$7 << (int_64)8)
	goto $label$1 
	
.LABEL $label$10
	$7 = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	CALL $51(($5 + [184]))
	
.LABEL $label$1
	$13 = ((int_64)$7 | (int_64)4)
	if ( ((int_64)*(($3 + [8])) != (int_64)$13) ){ goto $label$16 }
	$7 = *($3)
	CALL __multi3(($5 + [64]), $7, (int_64)$7 >> (int_64)63), (int_64)10, (int_64)0)
	$14 = *((($5 + [64]) + [8]))
	$7 = *($5 + [64])
	if ( (( (uint_64)($7 <= (int_64)4611686018427387904) ? ((int_64)$14 < (int_64)0) : (int_64)($14 == 0) ) == 0) ){ goto $label$18 }
	if ( ( ((uint_64)$7 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$14 > (int_64)-1) : ((int_64)$14 == (int_64)-1) ) ){ goto $label$19 }
	CALL eosio_assert([0], [14853])
	
.LABEL $label$19
	$14 = ((int_64)$7 / (int_64)10000)
	if ( ((int_64)$7 >= (int_64)10000) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL eosio_assert([0], [14829])
	$14 = ((int_64)$7 / (int_64)10000)
	if ( ((int_64)$7 < (int_64)10000) ){ goto $label$16 }
	
.LABEL $label$17
	$7 = *($0)
	*($5 + [168]) = [13263]
	*($5 + [172]) = CALL $15([13263])
	*($5 + [56]) = *($5 + [168])
	$8 = CALL $99(($5 + [176]), ($5 + [56]))
	*($5 + [296]) = $7
	*($5 + [304]) = *($8)
	*($5 + [152]) = [13270]
	*($5 + [156]) = CALL $15([13270])
	*($5 + [48]) = *($5 + [152])
	$11 = CALL $99(($5 + [160]), ($5 + [48]))
	*($5 + [144]) = [14188]
	*($5 + [148]) = CALL $15([14188])
	*($5 + [40]) = *($5 + [144])
	$9 = CALL $99(($5 + [208]), ($5 + [40]))
	*(($5 + [192])) = [0]
	*($5 + [184]) = (int_64)0
	$8 = CALL $15([14197])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$22 }
	*($5 + [184]) = ($8 << [1])
	$2 = (($5 + [184]) | [1])
	if ( $8 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$10 = (($8 + [16]) & [-16])
	$2 = CALL $7($10)
	*($5 + [184]) = ($10 | [1])
	*($5 + [192]) = $2
	*($5 + [188]) = $8
	
.LABEL $label$21
	CALL memcpy($2, [14197], $8)
	
.LABEL $label$20
	*(($2 + $8)) = [0]
	*(($5 + [240])) = $13
	$8 = ($5 + [192])
	*(($5 + [256])) = *($8)
	*($8) = [0]
	*($5 + [232]) = $14
	*($5 + [216]) = *($0)
	*($5 + [224]) = *($9)
	*($5 + [248]) = *($5 + [184])
	*($5 + [184]) = (int_64)0
	$8 = CALL $167(($5 + [312]), ($5 + [296]), $6, *($11), ($5 + [216]))
	CALL $168($8)
	$2 = *($8 + [28])
	if ( ($2 == 0) ){ goto $label$23 }
	*(($8 + [32])) = $2
	CALL $9($2)
	
.LABEL $label$23
	$2 = *($8 + [16])
	if ( ($2 == 0) ){ goto $label$24 }
	*(($8 + [20])) = $2
	CALL $9($2)
	
.LABEL $label$24
	if ( ((*(($5 + [248])) & [1]) == 0) ){ goto $label$25 }
	CALL $9(*(($5 + [256])))
	
.LABEL $label$25
	if ( ((*($5 + [184]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($5 + [192])))
	
.LABEL $label$16
	if ( ($4 == 0) ){ goto $label$26 }
	$7 = *($3)
	CALL __multi3(($5 + [24]), $7, (int_64)$7 >> (int_64)63), (CASTING uint_64)(uint_32 $4), (int_64)0)
	$13 = *(($3 + [8]))
	$14 = *((($5 + [24]) + [8]))
	$7 = *($5 + [24])
	if ( (( (uint_64)($7 <= (int_64)4611686018427387904) ? ((int_64)$14 < (int_64)0) : (int_64)($14 == 0) ) == 0) ){ goto $label$29 }
	if ( ( ((uint_64)$7 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$14 > (int_64)-1) : ((int_64)$14 == (int_64)-1) ) ){ goto $label$28 }
	CALL eosio_assert([0], [14853])
	$14 = ((int_64)$7 / (int_64)10000)
	if ( ((int_64)$7 >= (int_64)10000) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	CALL eosio_assert([0], [14829])
	
.LABEL $label$28
	$14 = ((int_64)$7 / (int_64)10000)
	if ( ((int_64)$7 < (int_64)10000) ){ goto $label$26 }
	
.LABEL $label$27
	$7 = *($0)
	*($5 + [128]) = [13263]
	*($5 + [132]) = CALL $15([13263])
	*($5 + [16]) = *($5 + [128])
	$8 = CALL $99(($5 + [136]), ($5 + [16]))
	*($5 + [296]) = $7
	*($5 + [304]) = *($8)
	*($5 + [112]) = [13270]
	*($5 + [116]) = CALL $15([13270])
	*($5 + [8]) = *($5 + [112])
	$11 = CALL $99(($5 + [120]), ($5 + [8]))
	*($5 + [104]) = [14188]
	*($5 + [108]) = CALL $15([14188])
	*($5) = *($5 + [104])
	$9 = CALL $99(($5 + [208]), $5)
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$33 }
	$2 = [0]
	$3 = *([0] + [11776])
	
.LOOP $label$35:
	*((($5 + [216]) + ($8 = $2))) = *(($3 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$2 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$34 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$35 }
	
.LABEL $label$34
	*(($5 + [192])) = [0]
	*($5 + [184]) = (int_64)0
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$32 }
	*($5 + [184]) = ($2 << [1])
	$3 = (($5 + [184]) | [1])
	goto $label$31 
	
.LABEL $label$33
	*(($5 + [192])) = [0]
	*($5 + [184]) = (int_64)0
	*($5 + [184]) = [0]
	$8 = (($5 + [184]) | [1])
	goto $label$30 
	
.LABEL $label$32
	$4 = (($2 + [16]) & [-16])
	$3 = CALL $7($4)
	*($5 + [184]) = ($4 | [1])
	*($5 + [192]) = $3
	*($5 + [188]) = $2
	
.LABEL $label$31
	$4 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$36:
	*(($3 + $8)) = *((($5 + [216]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$36 }
	$8 = ($3 + $2)
	
.LABEL $label$30
	*($8) = [0]
	*(($5 + [240])) = $13
	$8 = ($5 + [192])
	*(($5 + [256])) = *($8)
	*($8) = [0]
	*($5 + [232]) = $14
	*($5 + [216]) = *($0)
	*($5 + [224]) = *($9)
	*($5 + [248]) = *($5 + [184])
	*($5 + [184]) = (int_64)0
	$8 = CALL $167(($5 + [312]), ($5 + [296]), $6, *($11), ($5 + [216]))
	CALL $168($8)
	$2 = *($8 + [28])
	if ( ($2 == 0) ){ goto $label$37 }
	*(($8 + [32])) = $2
	CALL $9($2)
	
.LABEL $label$37
	$2 = *($8 + [16])
	if ( ($2 == 0) ){ goto $label$38 }
	*(($8 + [20])) = $2
	CALL $9($2)
	
.LABEL $label$38
	if ( ((*(($5 + [248])) & [1]) == 0) ){ goto $label$26 }
	CALL $9(*(($5 + [256])))
	
.LABEL $label$26
	$global$0 = ($5 + [352])
	return (unreachable)
	
.LABEL $label$15
	CALL $51(($5 + [184]))
	(unreachable)
}

void .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [52]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15633])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15678])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [15728])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [56]))
	$9 = *($1 + [60])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4994365207729012736, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $180 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $138 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $130($1)
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $139 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [80])
	$global$0 = $3
	*($3 + [40]) = $2
	if ( ((int_64)*(($1 + [40])) == (int_64)*(($0 + [616]))) ){ goto $label$1 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$1
	$4 = ((int_64)*($2) + (int_64)*($1 + [32]))
	*(($2 = ($0 + [608]))) = $4
	if ( ((int_64)$4 > (int_64)-4611686018427387904) ){ goto $label$2 }
	CALL eosio_assert([0], [15059])
	$4 = *($2)
	
.LABEL $label$2
	if ( ((int_64)$4 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$3
	$2 = CALL $15([12285])
	if ( ($2 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [14622])
	goto $label$6 
	
.LABEL $label$7
	if ( ($2 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$4 = (int_64)0
	
.LOOP $label$8:
	$5 = *(($2 + [12284]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$9
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$4 = ((int_64)$4 << (int_64)8)
	goto $label$4 
	
.LABEL $label$5
	$4 = (int_64)0
	
.LABEL $label$4
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = ((int_64)$4 | (int_64)4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$4 = $6
	$5 = $2
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$4 = $6
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$5 = ((int_32)$2 < (int_32)[6])
	$7 = ($2 + [1])
	$2 = $7
	if ( $5 ){ goto $label$14 }
	$2 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [14769])
	
.LABEL $label$10
	$8 = ($0 + [80])
	$4 = *($1)
	$5 = *(($0 + [108]))
	$9 = *(($0 + [104]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$17 }
	
.LOOP $label$19:
	$2 = ($5 + [-24])
	$7 = *($2)
	if ( ((int_64)*($7) == (int_64)$4) ){ goto $label$18 }
	$5 = $2
	if ( ((int_32)$9 != (int_32)$2) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$17 }
	if ( ((int_32)*($7 + [28]) == (int_32)$8) ){ goto $label$20 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$20
	if ( $7 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$2 = CALL db_find_i64(*($8), *(($0 + [88])), (int_64)4264526396846665728, $4)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$15 }
	$7 = CALL $140($8, $2)
	if ( ((int_32)*($7 + [28]) == (int_32)$8) ){ goto $label$16 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$16
	*(($3 + [32])) = *(($7 + [16]))
	*($3 + [24]) = *($7 + [8])
	$2 = CALL db_next_i64(*($7 + [32]), ($3 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$21 }
	CALL $140($8, $2)
	
.LABEL $label$21
	CALL $141($8, $7)
	
.LABEL $label$15
	$4 = *($0)
	*($3 + [76]) = $1
	*($3 + [72]) = $0
	*($3 + [48]) = $4
	$5 = ($0 + [280])
	if ( ((int_64)CALL current_receiver() == (int_64)*($0 + [280])) ){ goto $label$22 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$22
	*($3 + [8]) = $5
	*($3 + [12]) = ($3 + [72])
	*($3 + [16]) = ($3 + [48])
	$2 = CALL $7([144])
	CALL $142($2)
	*($2 + [128]) = $5
	CALL $143(($3 + [8]), $2)
	*($3 + [64]) = $2
	$4 = *($2)
	*($3 + [8]) = $4
	$7 = *($2 + [132])
	*($3 + [44]) = $7
	$9 = ($0 + [308])
	$5 = *($9)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [312]))) ){ goto $label$25 }
	*($5 + [8]) = $4
	*($5 + [16]) = $7
	*($3 + [64]) = [0]
	*($5) = $2
	*($9) = ($5 + [24])
	$2 = *($3 + [64])
	*($3 + [64]) = [0]
	if ( $2 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL $144(($0 + [304]), ($3 + [64]), ($3 + [8]), ($3 + [44]))
	$2 = *($3 + [64])
	*($3 + [64]) = [0]
	if ( ($2 == 0) ){ goto $label$23 }
	
.LABEL $label$24
	CALL $9($2)
	
.LABEL $label$23
	$4 = *($0)
	*($3 + [12]) = $1
	*($3 + [8]) = $0
	*($3 + [16]) = ($3 + [24])
	*($3 + [20]) = ($3 + [40])
	*($3 + [72]) = $4
	$5 = ($0 + [240])
	if ( ((int_64)CALL current_receiver() == (int_64)*($0 + [240])) ){ goto $label$26 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$26
	*($3 + [48]) = $5
	*($3 + [52]) = ($3 + [8])
	*($3 + [56]) = ($3 + [72])
	*(($2 = CALL $7([160])) + [16]) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = (int_64)0
	*($2 + [56]) = (int_64)0
	*($2 + [64]) = (int_64)0
	*($2 + [72]) = (int_64)0
	*($2 + [80]) = (int_64)0
	*($2 + [88]) = (int_64)0
	*($2 + [148]) = $5
	CALL $145(($3 + [48]), $2)
	*($3 + [64]) = $2
	$4 = *($2)
	*($3 + [48]) = $4
	$7 = *($2 + [152])
	*($3 + [44]) = $7
	$9 = ($0 + [268])
	$5 = *($9)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [272]))) ){ goto $label$29 }
	*($5 + [8]) = $4
	*($5 + [16]) = $7
	*($3 + [64]) = [0]
	*($5) = $2
	*($9) = ($5 + [24])
	$2 = *($3 + [64])
	*($3 + [64]) = [0]
	if ( $2 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	CALL $146(($0 + [264]), ($3 + [64]), ($3 + [48]), ($3 + [44]))
	$2 = *($3 + [64])
	*($3 + [64]) = [0]
	if ( ($2 == 0) ){ goto $label$27 }
	
.LABEL $label$28
	CALL $9($2)
	
.LABEL $label$27
	$global$0 = ($3 + [80])
}

int_32 .FUNC $369 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [32]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [40])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $1, [4])
	*($3) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $269 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$2 = ($global$0 - [144])
	$global$0 = $2
	CALL require_auth($1)
	$3 = ($0 + [360])
	$5 = *(($0 + [388]))
	$4 = *(($0 + [384]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [200]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [14937])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [368])), (int_64)-6031319021931067904, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $175($3, $6)
	if ( ((int_32)*($7 + [200]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [14937])
	goto $label$1 
	
.LABEL $label$5
	CALL eosio_assert([0], [14326])
	
.LABEL $label$1
	*(($2 + [56])) = *(($7 + [56]))
	$8 = *($7 + [48])
	*($2 + [48]) = $8
	if ( ((int_64)$8 > (int_64)0) ){ goto $label$6 }
	CALL eosio_assert([0], [14342])
	
.LABEL $label$6
	$9 = ($0 + [80])
	$5 = *(($0 + [108]))
	$10 = *(($0 + [104]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$13:
	$6 = ($5 + [-24])
	$4 = *($6)
	if ( ((int_64)*($4) == (int_64)$1) ){ goto $label$12 }
	$5 = $6
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$11 }
	if ( ((int_32)*($4 + [28]) == (int_32)$9) ){ goto $label$14 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$14
	if ( $4 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$6 = CALL db_find_i64(*($9), *(($0 + [88])), (int_64)4264526396846665728, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	$4 = CALL $140($9, $6)
	if ( ((int_32)*($4 + [28]) == (int_32)$9) ){ goto $label$10 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$10
	$8 = *($0)
	*($2 + [64]) = ($2 + [48])
	CALL $270($9, $4, $8, ($2 + [64]))
	$8 = *($0)
	if ( $7 ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	$11 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*(($0 + [80]))) ){ goto $label$15 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$15
	*(($6 = CALL $7([40])) + [28]) = $9
	*($6) = $1
	*($6 + [8]) = *($2 + [48])
	*(($6 + [16])) = *((($2 + [48]) + [8]))
	*($6 + [24]) = ((int_64)CALL $86() / (int_64)1000000)
	*($2 + [112]) = (($2 + [64]) + [28])
	*($2 + [108]) = ($2 + [64])
	*($2 + [104]) = ($2 + [64])
	*($2 + [120]) = ($2 + [104])
	*($2 + [132]) = ($6 + [8])
	*($2 + [128]) = $6
	*($2 + [136]) = ($6 + [24])
	CALL $271(($2 + [128]), ($2 + [120]))
	$8 = *($6)
	$4 = CALL db_store_i64(*(($0 + [88])), (int_64)4264526396846665728, $11, $8, ($2 + [64]), [28])
	*($6 + [32]) = $4
	$5 = ($0 + [96])
	if ( (uint_64)($8 <= *($5)) ){ goto $label$16 }
	*($5) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	*($2 + [128]) = $6
	$8 = *($6)
	*($2 + [64]) = $8
	*($2 + [104]) = $4
	$10 = ($0 + [108])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [112]))) ){ goto $label$19 }
	*($5 + [8]) = $8
	*($5 + [16]) = $4
	*($2 + [128]) = [0]
	*($5) = $6
	*($10) = ($5 + [24])
	$6 = *($2 + [128])
	*($2 + [128]) = [0]
	if ( $6 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $272(($0 + [104]), ($2 + [128]), ($2 + [64]), ($2 + [104]))
	$6 = *($2 + [128])
	*($2 + [128]) = [0]
	if ( ($6 == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL $9($6)
	
.LABEL $label$17
	$8 = *($0)
	if ( $7 ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [15096])
	
.LABEL $label$7
	CALL $273($3, $7, $8)
	*((($2 + [16]) + [8])) = [0]
	*((($2 + [32]) + [8])) = *((($2 + [48]) + [8]))
	*($2 + [16]) = (int_64)0
	*($2 + [32]) = *($2 + [48])
	$6 = CALL $15([11180])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$20 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$23 }
	*($2 + [16]) = ($6 << [1])
	$5 = (($2 + [16]) | [1])
	if ( $6 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$7 = (($6 + [16]) & [-16])
	$5 = CALL $7($7)
	*($2 + [16]) = ($7 | [1])
	*($2 + [24]) = $5
	*($2 + [20]) = $6
	
.LABEL $label$22
	CALL memcpy($5, [11180], $6)
	
.LABEL $label$21
	*(($5 + $6)) = [0]
	*(($2 + [8])) = *((($2 + [32]) + [8]))
	*($2) = *($2 + [32])
	CALL $207($0, $1, $2, ($2 + [16]))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$24 }
	CALL $9(*($2 + [24]))
	
.LABEL $label$24
	$global$0 = ($2 + [144])
	return (unreachable)
	
.LABEL $label$20
	CALL $51(($2 + [16]))
}

int_32 .FUNC $130 (int_32 $0)
{
	int_32 $1
	if ( (*($0 + [132]) & [1]) ){ goto $label$15 }
	if ( (*($0 + [120]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $9(*(($0 + [140])))
	if ( ((*($0 + [120]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $9(*(($0 + [128])))
	$1 = [1]
	if ( ((*($0 + [76]) & [1]) == 0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$1 = [1]
	if ( (*($0 + [76]) & [1]) ){ goto $label$11 }
	
.LABEL $label$12
	if ( (*($0 + [64]) & $1) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $9(*(($0 + [84])))
	if ( ((*($0 + [64]) & $1) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $9(*(($0 + [72])))
	$1 = [1]
	if ( ((*($0 + [52]) & [1]) == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$1 = [1]
	if ( (*($0 + [52]) & [1]) ){ goto $label$7 }
	
.LABEL $label$8
	if ( (*($0 + [40]) & $1) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $9(*(($0 + [60])))
	if ( ((*($0 + [40]) & $1) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($0 + [48])))
	$1 = [1]
	if ( ((*($0 + [28]) & [1]) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$1 = [1]
	if ( (*($0 + [28]) & [1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( (*($0 + [8]) & $1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $9(*(($0 + [36])))
	if ( ((*($0 + [8]) & $1) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $9(*(($0 + [16])))
	return $0
	
.LABEL $label$1
	return $0
}

void .FUNC $131 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [8]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4420681754180845568, (int_64)-4420681754180845568)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $124($0, $4)
	if ( ((int_32)*($4 + [8]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$2
	*($3) = $1
	CALL $332($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $333($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $132 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [288]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	$3 = CALL memcpy($1, *($3), [284])
	$4 = $4
	$1 = ($4 + [-288])
	$global$0 = $1
	*($5 + [4]) = $1
	*($5) = $1
	*($5 + [8]) = ($4 + [-4])
	CALL $353($5, $3)
	CALL db_update_i64(*($3 + [292]), $2, $1, [284])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-4812882651501297664) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)-4812882651501297663
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

void .FUNC $133 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL $7([304])
	CALL $352($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)-4812882651501297664
	$5 = *($3 + [292])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)-4812882651501297664
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $349(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $9($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $134 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [152]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	$1 = CALL memcpy($1, *($3), [152])
	$3 = $4
	$4 = ($3 + [-160])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [32])
	*($5 + [40]) = ($1 + [48])
	*($5 + [44]) = ($1 + [64])
	*($5 + [48]) = ($1 + [80])
	*($5 + [52]) = ($1 + [96])
	*($5 + [56]) = ($1 + [112])
	*($5 + [60]) = ($1 + [120])
	*($5 + [64]) = ($1 + [128])
	*($5 + [68]) = ($1 + [136])
	*($5 + [72]) = ($1 + [144])
	CALL $355(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [156]), $2, $4, [152])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)5310426098504302592) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)5310426098504302593
	
.LABEL $label$3
	$global$0 = ($5 + [80])
}

void .FUNC $135 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL $7([168])
	CALL $354($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)5310426098504302592
	$5 = *($3 + [156])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)5310426098504302592
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $351(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $9($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($0 + [756])) = [1]
	*(($3 = ($0 + [488]))) = ((int_64)*($3) + (int_64)1)
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [14622])
	goto $label$3 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = (int_64)0
	
.LOOP $label$5:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$6
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$5 }
	$6 = ((int_64)$4 << (int_64)8)
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)0
	
.LABEL $label$1
	$4 = (uint_64)$6 >> (uint_64)(int_64)8)
	$7 = ((int_64)$6 | (int_64)4)
	$3 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$4 = $6
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$4 = $6
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$8 = ($3 + [1])
	$3 = $8
	if ( $5 ){ goto $label$11 }
	$3 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [14769])
	
.LABEL $label$7
	*(($0 + [632])) = $7
	*(($0 + [624])) = (int_64)0
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [14622])
	goto $label$14 
	
.LABEL $label$15
	if ( ($3 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$4 = (int_64)0
	
.LOOP $label$16:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$17
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$16 }
	$7 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)4)
	goto $label$12 
	
.LABEL $label$13
	$7 = (int_64)4
	
.LABEL $label$12
	$4 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$21 }
	$4 = $6
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$21
	$4 = $6
	
.LOOP $label$22:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$19 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$8 = ($3 + [1])
	$3 = $8
	if ( $5 ){ goto $label$22 }
	$3 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [14769])
	
.LABEL $label$18
	*(($0 + [648])) = $7
	*(($0 + [640])) = (int_64)0
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$26 }
	CALL eosio_assert([0], [14622])
	goto $label$25 
	
.LABEL $label$26
	if ( ($3 == 0) ){ goto $label$24 }
	
.LABEL $label$25
	$4 = (int_64)0
	
.LOOP $label$27:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$28 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$28
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$27 }
	$7 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)4)
	goto $label$23 
	
.LABEL $label$24
	$7 = (int_64)4
	
.LABEL $label$23
	$4 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$32 }
	$4 = $6
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$32
	$4 = $6
	
.LOOP $label$33:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$30 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$8 = ($3 + [1])
	$3 = $8
	if ( $5 ){ goto $label$33 }
	$3 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	CALL eosio_assert([0], [14769])
	
.LABEL $label$29
	*(($0 + [664])) = $7
	*(($0 + [656])) = (int_64)0
	$3 = CALL $15([12244])
	if ( ($3 <= [8]) ){ goto $label$37 }
	CALL eosio_assert([0], [14622])
	goto $label$36 
	
.LABEL $label$37
	if ( ($3 == 0) ){ goto $label$35 }
	
.LABEL $label$36
	$4 = (int_64)0
	
.LOOP $label$38:
	$5 = *(($3 + [12243]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$39 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$39
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$38 }
	$7 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)4)
	goto $label$34 
	
.LABEL $label$35
	$7 = (int_64)4
	
.LABEL $label$34
	$4 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$43 }
	$4 = $6
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$43
	$4 = $6
	
.LOOP $label$44:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$41 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$8 = ($3 + [1])
	$3 = $8
	if ( $5 ){ goto $label$44 }
	$3 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	CALL eosio_assert([0], [14769])
	
.LABEL $label$40
	*(($0 + [680])) = $7
	*(($0 + [672])) = (int_64)0
	$4 = *($0)
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [40]) = $4
	$5 = ($0 + [808])
	if ( ((int_64)CALL current_receiver() == (int_64)*($0 + [808])) ){ goto $label$45 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$45
	*($2 + [16]) = $5
	*($2 + [20]) = $2
	*($2 + [24]) = ($2 + [40])
	*(($3 = CALL $7([160])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [28 align=4]) = (int_64)0
	*($3 + [36 align=4]) = (int_64)0
	*($3 + [44 align=4]) = (int_64)0
	*($3 + [52 align=4]) = (int_64)0
	*($3 + [60 align=4]) = (int_64)0
	*($3 + [68 align=4]) = (int_64)0
	*($3 + [76 align=4]) = (int_64)0
	*($3 + [84]) = [0]
	*($3 + [120 align=4]) = (int_64)0
	*($3 + [128 align=4]) = (int_64)0
	*($3 + [136 align=4]) = (int_64)0
	*($3 + [144]) = $5
	CALL $137(($2 + [16]), $3)
	*($2 + [32]) = $3
	$4 = *($3)
	*($2 + [16]) = $4
	$8 = *($3 + [148])
	*($2 + [12]) = $8
	$1 = ($0 + [836])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [840]))) ){ goto $label$48 }
	*($5 + [8]) = $4
	*($5 + [16]) = $8
	*($2 + [32]) = [0]
	*($5) = $3
	*($1) = ($5 + [24])
	$3 = *($2 + [32])
	*($2 + [32]) = [0]
	if ( $3 ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$48
	CALL $138(($0 + [832]), ($2 + [32]), ($2 + [16]), ($2 + [12]))
	$3 = *($2 + [32])
	*($2 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$46 }
	
.LABEL $label$47
	CALL $130($3)
	CALL $9($3)
	
.LABEL $label$46
	$global$0 = ($2 + [48])
}

void .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($1 + [20]) = [0]
	$3 = *($0 + [4])
	*($1) = *((*($3) + [488]))
	$4 = *($0)
	CALL $54(($1 + [8]), *(($3 + [4])))
	*($1 + [112]) = ((int_64)CALL $86() / (int_64)1000000)
	*(($3 = $2)) = [0]
	CALL $356($3, $1)
	$5 = *($3)
	if ( ($5 <= [513]) ){ goto $label$2 }
	$2 = CALL $1($5)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$1
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $5)
	CALL $357($3, $1)
	$6 = *($1)
	*($1 + [148]) = CALL db_store_i64(*($4 + [8]), (int_64)7035937633859534848, *(*($0 + [8])), $6, $2, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	if ( ((uint_64)$6 >= (uint_64)*($4 + [16])) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $2($2)
	if ( (uint_64)($6 <= *($4 + [16])) ){ goto $label$3 }
	
.LABEL $label$4
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC $33 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

int_32 .FUNC $368 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [48]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [15887])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-4138934702985707520)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [15833])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [15833])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $243(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $300 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*(($0 + [32])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	*($2) = $0
	CALL $395($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $208 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$3 = ($global$0 - [80])
	$global$0 = $3
	$4 = *($0)
	*($3 + [8]) = [13146]
	*($3 + [12]) = CALL $15([13146])
	*($3) = *($3 + [8])
	CALL require_auth2($4, *(CALL $99(($3 + [16]), $3)))
	$5 = ($0 + [320])
	$6 = *(($0 + [344]))
	$7 = *(($0 + [348]))
	if ( ((int_64)$2 != (int_64)1) ){ goto $label$13 }
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$14:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$12 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$14 }
	goto $label$11 
	
.LABEL $label$13
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$8 }
	
.LOOP $label$15:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$9 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$15 }
	goto $label$8 
	
.LABEL $label$12
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$11 }
	if ( ((int_32)*($9 + [24]) == (int_32)$5) ){ goto $label$10 }
	CALL eosio_assert([0], [14937])
	if ( ((int_64)(*($9 + [8]) == 0) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$11
	$9 = [0]
	$7 = CALL db_find_i64(*(($0 + [320])), *(($0 + [328])), (int_64)4344997397894705024, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$9 = CALL $200($5, $7)
	if ( ((int_32)*($9 + [24]) == (int_32)$5) ){ goto $label$10 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$10
	if ( (int_64)(*($9 + [8]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$9
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$8 }
	if ( ((int_32)*($9 + [24]) == (int_32)$5) ){ goto $label$7 }
	CALL eosio_assert([0], [14937])
	goto $label$7 
	
.LABEL $label$8
	$7 = CALL db_find_i64(*(($0 + [320])), *(($0 + [328])), (int_64)4344997397894705024, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$6 }
	if ( ((int_32)*(CALL $200($5, $7) + [24]) == (int_32)$5) ){ goto $label$7 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$7
	CALL eosio_assert([0], [13355])
	
.LABEL $label$6
	$7 = CALL $15([12244])
	if ( ($7 <= [8]) ){ goto $label$17 }
	CALL eosio_assert([0], [14622])
	goto $label$16 
	
.LABEL $label$17
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$16
	$2 = (int_64)0
	
.LOOP $label$18:
	$8 = *(($7 + [12243]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$19 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$19
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$18 }
	$4 = ((int_64)$2 << (int_64)8)
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [13374])
	if ( ((int_64)(*([0] + [8]) == 0) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$4 = (int_64)0
	
.LABEL $label$3
	$2 = (uint_64)$4 >> (uint_64)(int_64)8)
	$10 = ((int_64)$4 | (int_64)4)
	$7 = [0]
	
.LOOP $label$22:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$23 }
	$2 = $4
	$8 = $7
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$23
	$2 = $4
	
.LOOP $label$24:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$21 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = ((int_32)$7 < (int_32)[6])
	$6 = ($7 + [1])
	$7 = $6
	if ( $8 ){ goto $label$24 }
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	CALL eosio_assert([0], [14769])
	
.LABEL $label$20
	$11 = ($0 + [400])
	$8 = *(($0 + [428]))
	$9 = *(($0 + [424]))
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$30 }
	
.LOOP $label$32:
	$7 = ($8 + [-24])
	$6 = *($7)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$31 }
	$8 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$32 }
	goto $label$30 
	
.LABEL $label$31
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$30 }
	if ( ((int_32)*($6 + [52]) == (int_32)$11) ){ goto $label$33 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$33
	if ( $6 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$7 = CALL db_find_i64(*($11), *(($0 + [408])), (int_64)-4994365207729012736, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$28 }
	$6 = CALL $174($11, $7)
	if ( ((int_32)*($6 + [52]) == (int_32)$11) ){ goto $label$29 }
	CALL eosio_assert([0], [14937])
	
.LABEL $label$29
	$2 = (int_64)0
	if ( ((int_64)*($6 + [32]) == (int_64)2) ){ goto $label$25 }
	if ( ((int_64)*(($6 + [24])) == (int_64)$10) ){ goto $label$34 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$34
	$2 = *($6 + [16])
	if ( ((int_64)$2 <= (int_64)-4611686018427387904) ){ goto $label$27 }
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$26 }
	CALL eosio_assert([0], [15078])
	goto $label$26 
	
.LABEL $label$28
	$2 = (int_64)0
	goto $label$25 
	
.LABEL $label$27
	CALL eosio_assert([0], [15059])
	
.LABEL $label$26
	if ( ((int_64)*(($6 + [24])) == (int_64)*(($0 + [600]))) ){ goto $label$35 }
	CALL eosio_assert([0], [15344])
	
.LABEL $label$35
	$4 = (int_64)
	*(($7 = ($0 + [592]))) = $4(*($7) - *(($6 + [16]))))
	if ( ((int_64)$4 > (int_64)-4611686018427387904) ){ goto $label$36 }
	CALL eosio_assert([0], [15392])
	$4 = *($7)
	
.LABEL $label$36
	if ( ((int_64)$4 < (int_64)4611686018427387904) ){ goto $label$37 }
	CALL eosio_assert([0], [15414])
	
.LABEL $label$37
	$7 = CALL db_next_i64(*($6 + [56]), ($3 + [32]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$38 }
	CALL $174($11, $7)
	
.LABEL $label$38
	CALL $181($11, $6)
	
.LABEL $label$25
	$4 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*(($0 + [320]))) ){ goto $label$39 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$39
	*(($7 = CALL $7([40])) + [24]) = $5
	*($7 + [8]) = $2
	*($7) = $1
	*($7 + [16]) = $10
	*($3 + [72]) = (($3 + [32]) + [24])
	*($3 + [68]) = ($3 + [32])
	*($3 + [64]) = ($3 + [32])
	CALL $209(($3 + [64]), $7)
	$2 = *($7)
	$6 = CALL db_store_i64(*(($0 + [328])), (int_64)4344997397894705024, $4, $2, ($3 + [32]), [24])
	*($7 + [28]) = $6
	$8 = ($0 + [336])
	if ( (uint_64)($2 <= *($8)) ){ goto $label$40 }
	*($8) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$40
	*($3 + [64]) = $7
	$2 = *($7)
	*($3 + [32]) = $2
	*($3 + [28]) = $6
	$9 = ($0 + [348])
	$8 = *($9)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [352]))) ){ goto $label$43 }
	*($8 + [8]) = $2
	*($8 + [16]) = $6
	*($3 + [64]) = [0]
	*($8) = $7
	*($9) = ($8 + [24])
	$7 = *($3 + [64])
	*($3 + [64]) = [0]
	if ( $7 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	CALL $210(($0 + [344]), ($3 + [64]), ($3 + [32]), ($3 + [28]))
	$7 = *($3 + [64])
	*($3 + [64]) = [0]
	if ( ($7 == 0) ){ goto $label$41 }
	
.LABEL $label$42
	CALL $9($7)
	
.LABEL $label$41
	$global$0 = ($3 + [80])
	return 
	
.LABEL $label$2
	CALL eosio_assert([0], [13392])
	
.LABEL $label$1
	if ( $9 ){ goto $label$44 }
	CALL eosio_assert([0], [15569])
	CALL eosio_assert([0], [15603])
	
.LABEL $label$44
	$7 = CALL db_next_i64(*($9 + [28]), ($3 + [32]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$45 }
	CALL $200($5, $7)
	
.LABEL $label$45
	CALL $211($5, $9)
	$global$0 = ($3 + [80])
}

int_32 .FUNC $209 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $202 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $6) / (int_32)[40])
	$8 = ($7 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$9 = [107374182]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[40])
	if ( ((uint_32)$6 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($6 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $7(((int_32)$9 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	*(($7 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($2)
	*($7 + [8]) = *($3)
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$2 = CALL $7([16])
	*($7 + [16]) = $2
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$8 = ($2 + [16])
	*($3) = $8
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($7 + [20])) = $8
	CALL $204(($7 + [28]), [72])
	$2 = *(($7 + [32]))
	$1 = *($7 + [28])
	*($5 + [4]) = $1
	*($5) = $1
	*($5 + [8]) = $2
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	$10 = ($6 + ((int_32)$9 * (int_32)[40]))
	$11 = ($7 + [40])
	CALL $377(($5 + [24]), ($5 + [16]))
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	$12 = ($2 - $8)
	$1 = [0]
	
.LOOP $label$7:
	$9 = ($8 + $1)
	*((($2 = ($7 + $1)) + [-32])) = *(($9 + [-32]))
	*(($2 + [-40])) = *(($9 + [-40]))
	*(($6 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($9 + [-24])
	*($6) = *($4)
	$6 = ($9 + [-16])
	*($3) = *($6)
	*($6) = [0]
	*(($6 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($9 + [-12])
	*($6) = *($3)
	*($4) = (int_64)0
	$9 = ($9 + [-4])
	*($2) = *($9)
	*($9) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$12 != (int_32)$1) ){ goto $label$7 }
	$7 = ($7 + $1)
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $7
	*(($0 + [4])) = $11
	*(($0 + [8])) = $10
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = *(($2 + [-12]))
	if ( ($9 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $9
	CALL $9($9)
	
.LABEL $label$10
	$9 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$11
	$2 = $9
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	$global$0 = ($5 + [32])
	(unreachable)
}

void .FUNC $203 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [128]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15633])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15678])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [15728])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [132]))
}

int_32 .FUNC $200 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14988])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$9 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$9
	CALL memcpy(($3 + [24]), $7, [8])
	*(($5 + [16])) = *($3 + [24])
	*($5 + [28]) = $1
	*($3 + [16]) = $5
	$9 = *($5)
	*($3 + [24]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $210(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $2($2)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $9($1)
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $201 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = ($global$0 - [48])
	$global$0 = $5
	if ( ((int_64)*($3) < (int_64)1) ){ goto $label$2 }
	*((($5 + [16]) + [8])) = [0]
	*((($5 + [32]) + [8])) = *(($3 + [8]))
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = *($3)
	$3 = CALL $15([11180])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($5 + [16]) = ($3 << [1])
	$6 = (($5 + [16]) | [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = (($3 + [16]) & [-16])
	$6 = CALL $7($7)
	*($5 + [16]) = ($7 | [1])
	*($5 + [24]) = $6
	*($5 + [20]) = $3
	
.LABEL $label$4
	CALL memcpy($6, [11180], $3)
	
.LABEL $label$3
	*(($6 + $3)) = [0]
	*(($5 + [8])) = *((($5 + [32]) + [8]))
	*($5) = *($5 + [32])
	CALL $207($0, $1, $5, ($5 + [16]))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $9(*($5 + [24]))
	
.LABEL $label$2
	$global$0 = ($5 + [48])
	return (unreachable)
	
.LABEL $label$1
	CALL $51(($5 + [16]))
}

int_32 .FUNC $206 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $335(CALL $334($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $207 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [176])
	$global$0 = $4
	$5 = *($0)
	*($4 + [104]) = [13263]
	*($4 + [108]) = CALL $15([13263])
	*($4 + [16]) = *($4 + [104])
	$6 = CALL $99(($4 + [112]), ($4 + [16]))
	*($4 + [120]) = $5
	*($4 + [128]) = *($6)
	*($4 + [88]) = [15435]
	*($4 + [92]) = CALL $15([15435])
	*($4 + [8]) = *($4 + [88])
	$6 = CALL $99(($4 + [96]), ($4 + [8]))
	*($4 + [72]) = [15444]
	*($4 + [76]) = CALL $15([15444])
	*($4) = *($4 + [72])
	$7 = CALL $99(($4 + [80]), $4)
	*(($4 + [48])) = *(($2 + [8]))
	*($4 + [32]) = $1
	*($4 + [24]) = *($0)
	*($4 + [40]) = *($2)
	CALL $52((($4 + [24]) + [32]), $3)
	$2 = CALL $167(($4 + [136]), ($4 + [120]), *($6), *($7), ($4 + [24]))
	CALL $168($2)
	$0 = *($2 + [28])
	if ( ($0 == 0) ){ goto $label$1 }
	*(($2 + [32])) = $0
	CALL $9($0)
	
.LABEL $label$1
	$0 = *($2 + [16])
	if ( ($0 == 0) ){ goto $label$2 }
	*(($2 + [20])) = $0
	CALL $9($0)
	
.LABEL $label$2
	if ( ((*($4 + [56]) & [1]) == 0) ){ goto $label$3 }
	CALL $9(*(($4 + [64])))
	
.LABEL $label$3
	$global$0 = ($4 + [176])
}

void .FUNC $204 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $7($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $82($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $9($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $205 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $347(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $8 (int_32 $0)
{
	return CALL $7($0)
}

void .FUNC $9 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

int_32 .FUNC $6 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $4())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $5($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $7 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $1($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $1($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $4 ()
{
	return [8208]
}

int_32 .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $1($1)
	
.LABEL $label$2
	*(CALL $4()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $1(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $2($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $2 (int_32 $0)
{
}

void .FUNC $3 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

void .FUNC $0 ()
{
	CALL $3()
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8256])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	CALL $13($0, $1)
}

int_32 .FUNC $15 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $16 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $17 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $10 (int_32 $0)
{
	CALL $9($0)
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $6(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $6(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	return CALL $11($0, $1)
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

int_32 .FUNC $39 (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

void .FUNC $18 (int_32 $0)
{
	*($0) = [1]
}

void .FUNC $19 (int_32 $0)
{
	*($0) = [0]
}

int_32 .FUNC $338 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $339 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $341($0, $1)
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $206($0, $6)
	$6 = ($6 + [40])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [40])) - *($1 + [36])) / (int_32)[40]))
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$6 = *(($1 + [40]))
	$4 = *(($1 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $206($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = CALL $342($0, ($1 + [48]))
	$global$0 = ($2 + [16])
	return $4
}

int_32 .FUNC $336 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	*($0) = (int_64)0
	*($0 + [12 align=4]) = (int_64)0
	*($0 + [24]) = $1
	*(($0 + [20])) = [0]
	$3 = *($1 + [4])
	$1 = *($2 + [4])
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$3 = *(($1 + [4]))
	
.LABEL $label$1
	CALL memcpy($0, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($1 + [4]))) = $4
	$5 = ($0 + [8])
	if ( ((uint_32)(*(($1 + [8])) - $4) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [4])
	*($3) = (*($3) + [4])
	CALL $295($1, ($0 + [12]))
	*($0 + [28]) = *(*($2 + [8]))
	return $0
}

void .FUNC $337 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [12]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [20])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $9($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $334 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $335 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $332 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15131])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [15177])
	
.LABEL $label$2
	*($1) = *(*($3))
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL db_update_i64(*($1 + [12]), $2, $3, [8])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-4420681754180845568) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)-4420681754180845567
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC $333 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [32])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [15293])
	
.LABEL $label$1
	*(($5 = CALL $7([24])) + [8]) = $1
	*($5) = *(*($3))
	CALL memcpy(($4 + [16]), $5, [8])
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)-4420681754180845568, $2, (int_64)-4420681754180845568, ($4 + [16]), [8])
	*($5 + [12]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-4420681754180845568) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)-4420681754180845567
	
.LABEL $label$2
	*($4 + [8]) = $5
	*($4 + [16]) = (int_64)-4420681754180845568
	*($4 + [4]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)-4420681754180845568
	*($3 + [16]) = $6
	*($4 + [8]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $331(($1 + [24]), ($4 + [8]), ($4 + [16]), ($4 + [4]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$1 = *($4 + [8])
	*($4 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $9($1)
	
.LABEL $label$5
	$global$0 = ($4 + [32])
}

void .FUNC $330 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $331 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $116 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = (CASTING int_64)(int_32 $3)
	$5 = *($2)
	CALL __multi3($4, $5, (int_64)$5 >> (int_64)63), $5, (int_64)$5 >> (int_64)63))
	$6 = *($2 + [8])
	$7 = *(($4 + [8]))
	$5 = *($4)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$14 }
	if ( (( (uint_64)($5 <= (int_64)4611686018427387904) ? ((int_64)$7 < (int_64)0) : (int_64)($7 == 0) ) == 0) ){ goto $label$13 }
	if ( ( ((uint_64)$5 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$7 > (int_64)-1) : ((int_64)$7 == (int_64)-1) ) ){ goto $label$15 }
	CALL eosio_assert([0], [14853])
	
.LABEL $label$15
	if ( ((int_64)$5 <= (int_64)-4611686018427387904) ){ goto $label$12 }
	goto $label$5 
	
.LABEL $label$14
	if ( (( (uint_64)($5 <= (int_64)4611686018427387904) ? ((int_64)$7 < (int_64)0) : (int_64)($7 == 0) ) == 0) ){ goto $label$11 }
	if ( ( ((uint_64)$5 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$7 > (int_64)-1) : ((int_64)$7 == (int_64)-1) ) ){ goto $label$16 }
	CALL eosio_assert([0], [14853])
	
.LABEL $label$16
	if ( ((int_64)$5 <= (int_64)-4611686018427387904) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$13
	CALL eosio_assert([0], [14829])
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$5 }
	
.LABEL $label$12
	CALL eosio_assert([0], [14829])
	goto $label$4 
	
.LABEL $label$11
	CALL eosio_assert([0], [14829])
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [14829])
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [14853])
	if ( ((int_64)$6 != (int_64)*($0 + [8])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((int_64)$6 == (int_64)*($0 + [8])) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [15016])
	
.LABEL $label$6
	$5 = (int_64)
	*($0) = $5(*($0) - $5))
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$17 }
	CALL eosio_assert([0], [15059])
	$5 = *($0)
	
.LABEL $label$17
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$1 }
	CALL eosio_assert([0], [15078])
	goto $label$1 
	
.LABEL $label$5
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14853])
	if ( ((int_64)$6 != (int_64)*($1 + [8])) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_64)$6 == (int_64)*($1 + [8])) ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [15016])
	
.LABEL $label$2
	$5 = (int_64)
	*($1) = $5(*($1) - $5))
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$18 }
	CALL eosio_assert([0], [15059])
	$5 = *($1)
	
.LABEL $label$18
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$1 }
	CALL eosio_assert([0], [15078])
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$1
	$global$0 = ($4 + [16])
}

void .FUNC $117 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	$5 = ($global$0 - [256])
	$global$0 = $5
	$6 = CALL $15([12244])
	if ( ($6 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [14622])
	goto $label$3 
	
.LABEL $label$4
	if ( ($6 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = (int_64)0
	
.LOOP $label$5:
	$8 = *(($6 + [12243]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$6
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$5 }
	$7 = ((int_64)$7 << (int_64)8)
	goto $label$1 
	
.LABEL $label$2
	$7 = (int_64)0
	
.LABEL $label$1
	*($5 + [240]) = (int_64)0
	*($5 + [248]) = ((int_64)$7 | (int_64)4)
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$7 = $9
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$7 = $9
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $8 ){ goto $label$11 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [14769])
	
.LABEL $label$7
	$6 = CALL $15([12244])
	if ( ($6 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [14622])
	goto $label$14 
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$7 = (int_64)0
	
.LOOP $label$16:
	$8 = *(($6 + [12243]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$17
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$16 }
	$7 = ((int_64)$7 << (int_64)8)
	goto $label$12 
	
.LABEL $label$13
	$7 = (int_64)0
	
.LABEL $label$12
	*($5 + [224]) = (int_64)0
	*($5 + [232]) = ((int_64)$7 | (int_64)4)
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$21 }
	$7 = $9
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$21
	$7 = $9
	
.LOOP $label$22:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$19 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $8 ){ goto $label$22 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [14769])
	
.LABEL $label$18
	$6 = ($1 + [152])
	$9 = *($6)
	*((($5 + [208]) + [8])) = $9
	$8 = *($0 + [116])
	$7 = *($1 + [144])
	*((($5 + [144]) + [8])) = $9
	*($5 + [208]) = $7
	*($5 + [144]) = $7
	CALL $116(($5 + [240]), ($5 + [224]), ($5 + [144]), $8)
	$8 = ($1 + [168])
	$9 = *($8)
	*((($5 + [192]) + [8])) = $9
	$10 = *($0 + [120])
	$7 = *($1 + [160])
	*((($5 + [128]) + [8])) = $9
	*($5 + [192]) = $7
	*($5 + [128]) = $7
	CALL $116(($5 + [240]), ($5 + [224]), ($5 + [128]), $10)
	$9 = *(($1 + [184]))
	*((($5 + [176]) + [8])) = $9
	$10 = *($0 + [124])
	$7 = *($1 + [176])
	*((($5 + [112]) + [8])) = $9
	*($5 + [176]) = $7
	*($5 + [112]) = $7
	CALL $116(($5 + [240]), ($5 + [224]), ($5 + [112]), $10)
	$9 = *(($1 + [200]))
	*((($5 + [160]) + [8])) = $9
	$10 = *($0 + [128])
	$7 = *($1 + [192])
	*((($5 + [96]) + [8])) = $9
	*($5 + [160]) = $7
	*($5 + [96]) = $7
	CALL $116(($5 + [240]), ($5 + [224]), ($5 + [96]), $10)
	$10 = ($1 + [160])
	$9 = *($1 + [144])
	$7 = *($6)
	if ( ((int_64)*($8) == (int_64)$7) ){ goto $label$23 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$23
	$9 = ((int_64)*($10) + (int_64)$9)
	if ( ((int_64)$9 <= (int_64)-4611686018427387904) ){ goto $label$25 }
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$24 }
	CALL eosio_assert([0], [15078])
	goto $label$24 
	
.LABEL $label$25
	CALL eosio_assert([0], [15059])
	
.LABEL $label$24
	$6 = ($1 + [176])
	if ( ((int_64)*(($1 + [184])) == (int_64)$7) ){ goto $label$26 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$26
	$9 = ((int_64)*($6) + (int_64)$9)
	if ( ((int_64)$9 <= (int_64)-4611686018427387904) ){ goto $label$28 }
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$27 }
	CALL eosio_assert([0], [15078])
	goto $label$27 
	
.LABEL $label$28
	CALL eosio_assert([0], [15059])
	
.LABEL $label$27
	$6 = ($1 + [192])
	if ( ((int_64)*(($1 + [200])) == (int_64)$7) ){ goto $label$29 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$29
	$9 = ((int_64)*($6) + (int_64)$9)
	if ( ((int_64)$9 <= (int_64)-4611686018427387904) ){ goto $label$31 }
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$30 }
	CALL eosio_assert([0], [15078])
	goto $label$30 
	
.LABEL $label$31
	CALL eosio_assert([0], [15059])
	
.LABEL $label$30
	CALL __multi3(($5 + [80]), $9, (int_64)$9 >> (int_64)63), (int_64)3, (int_64)0)
	$11 = *(($5 + [88]))
	$9 = *($5 + [80])
	if ( (( (uint_64)($9 <= (int_64)4611686018427387904) ? ((int_64)$11 < (int_64)0) : (int_64)($11 == 0) ) == 0) ){ goto $label$35 }
	if ( ( ((uint_64)$9 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$11 > (int_64)-1) : ((int_64)$11 == (int_64)-1) ) ){ goto $label$34 }
	CALL eosio_assert([0], [14853])
	if ( ((int_64)$9 >= (int_64)1) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$35
	CALL eosio_assert([0], [14829])
	
.LABEL $label$34
	if ( ((int_64)$9 < (int_64)1) ){ goto $label$32 }
	
.LABEL $label$33
	$6 = ($1 + [80])
	if ( ((int_64)$7 == (int_64)*(($1 + [88]))) ){ goto $label$36 }
	CALL eosio_assert([0], [14878])
	
.LABEL $label$36
	$11 = *($6)
	if ( ((int_64)$11 >= (int_64)$9) ){ goto $label$40 }
	*($1 + [256]) = *($6)
	*(($1 + [264])) = *(($6 + [8]))
	if ( ((int_64)*(($1 + [88])) == (int_64)$7) ){ goto $label$41 }
	CALL eosio_assert([0], [15344])
	$11 = *($6)
	
.LABEL $label$41
	$11 = (int_64)
	if ( ((int_64)$11($9 - $11)) <= (int_64)-4611686018427387904) ){ goto $label$39 }
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$38 }
	CALL eosio_assert([0], [15414])
	goto $label$38 
	
.LABEL $label$40
	*($1 + [256]) = $9
	*(($1 + [264])) = $7
	$12 = $7
	$11 = $9
	goto $label$37 
	
.LABEL $label$39
	CALL eosio_assert([0], [15392])
	
.LABEL $label$38
	CALL __multi3(($5 + [64]), $11, (int_64)$11 >> (int_64)63), (int_64)1000000, (int_64)0)
	$11 = *(($5 + [72]))
	$13 = *($5 + [64])
	if ( (( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$11 < (int_64)0) : (int_64)($11 == 0) ) == 0) ){ goto $label$43 }
	if ( ( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$11 > (int_64)-1) : ((int_64)$11 == (int_64)-1) ) ){ goto $label$42 }
	CALL eosio_assert([0], [14853])
	goto $label$42 
	
.LABEL $label$43
	CALL eosio_assert([0], [14829])
	
.LABEL $label$42
	$13 = ((int_64)$13 / (int_64)$9)
	$11 = *($5 + [240])
	$12 = *((($5 + [240]) + [8]))
	if ( ((int_64)*((($5 + [224]) + [8])) == (int_64)$12) ){ goto $label$44 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$44
	$11 = ((int_64)*($5 + [224]) + (int_64)$11)
	if ( ((int_64)$11 <= (int_64)-4611686018427387904) ){ goto $label$46 }
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$45 }
	CALL eosio_assert([0], [15078])
	goto $label$45 
	
.LABEL $label$46
	CALL eosio_assert([0], [15059])
	
.LABEL $label$45
	CALL __multi3(($5 + [48]), $11, (int_64)$11 >> (int_64)63), $13, (int_64)$13 >> (int_64)63))
	$11 = *(($5 + [56]))
	$13 = *($5 + [48])
	if ( (( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$11 < (int_64)0) : (int_64)($11 == 0) ) == 0) ){ goto $label$48 }
	if ( ( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$11 > (int_64)-1) : ((int_64)$11 == (int_64)-1) ) ){ goto $label$47 }
	CALL eosio_assert([0], [14853])
	goto $label$47 
	
.LABEL $label$48
	CALL eosio_assert([0], [14829])
	
.LABEL $label$47
	*($4 + [8]) = $12
	*($4) = ((int_64)$13 / (int_64)1000000)
	$12 = *(($1 + [264]))
	$11 = *($1 + [256])
	
.LABEL $label$37
	CALL __multi3(($5 + [32]), $11, (int_64)$11 >> (int_64)63), (int_64)1000000, (int_64)0)
	$11 = *(($5 + [40]))
	$13 = *($5 + [32])
	if ( (( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$11 < (int_64)0) : (int_64)($11 == 0) ) == 0) ){ goto $label$52 }
	if ( ( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$11 > (int_64)-1) : ((int_64)$11 == (int_64)-1) ) ){ goto $label$51 }
	CALL eosio_assert([0], [14853])
	if ( ((int_64)$12 != (int_64)$7) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	CALL eosio_assert([0], [14829])
	
.LABEL $label$51
	if ( ((int_64)$12 == (int_64)$7) ){ goto $label$49 }
	
.LABEL $label$50
	CALL eosio_assert([0], [14878])
	
.LABEL $label$49
	$7 = ((int_64)$13 / (int_64)$9)
	$7 = *($5 + [240])
	CALL __multi3(($5 + [16]), $7, (int_64)$7 >> (int_64)63), $7, (int_64)$7 >> (int_64)63))
	$9 = *((($5 + [240]) + [8]))
	$11 = *((($5 + [16]) + [8]))
	$13 = *($5 + [16])
	if ( (( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$11 < (int_64)0) : (int_64)($11 == 0) ) == 0) ){ goto $label$54 }
	if ( ( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$11 > (int_64)-1) : ((int_64)$11 == (int_64)-1) ) ){ goto $label$53 }
	CALL eosio_assert([0], [14853])
	goto $label$53 
	
.LABEL $label$54
	CALL eosio_assert([0], [14829])
	
.LABEL $label$53
	*($2 + [8]) = $9
	$11 = ((int_64)$13 / (int_64)1000000)
	*($2) = $11
	$11 = ((int_64)$11 * (int_64)9900)
	if ( ((int_64)$11 >= (int_64)4611686018427387904) ){ goto $label$56 }
	if ( ((int_64)$11 > (int_64)-4611686018427387904) ){ goto $label$55 }
	CALL eosio_assert([0], [14853])
	goto $label$55 
	
.LABEL $label$56
	CALL eosio_assert([0], [14829])
	
.LABEL $label$55
	$13 = *($5 + [224])
	CALL __multi3($5, $13, (int_64)$13 >> (int_64)63), $7, (int_64)$7 >> (int_64)63))
	*(($1 + [216])) = $9
	*($1 + [208]) = ((int_64)$11 / (int_64)10000)
	$7 = *((($5 + [224]) + [8]))
	$9 = *(($5 + [8]))
	$11 = *($5)
	if ( (( (uint_64)($11 <= (int_64)4611686018427387904) ? ((int_64)$9 < (int_64)0) : (int_64)($9 == 0) ) == 0) ){ goto $label$58 }
	if ( ( ((uint_64)$11 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$9 > (int_64)-1) : ((int_64)$9 == (int_64)-1) ) ){ goto $label$57 }
	CALL eosio_assert([0], [14853])
	goto $label$57 
	
.LABEL $label$58
	CALL eosio_assert([0], [14829])
	
.LABEL $label$57
	*(($1 + [232])) = $7
	$11 = ((int_64)$11 / (int_64)1000000)
	*($1 + [224]) = $11
	$13 = *(($1 + [208]))
	$9 = *(($1 + [216]))
	if ( ((int_64)$7 == (int_64)$9) ){ goto $label$59 }
	CALL eosio_assert([0], [15016])
	$11 = *(($1 + [224]))
	
.LABEL $label$59
	$7 = ((int_64)$11 + (int_64)$13)
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$61 }
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$60 }
	CALL eosio_assert([0], [15078])
	goto $label$60 
	
.LABEL $label$61
	CALL eosio_assert([0], [15059])
	
.LABEL $label$60
	*($1 + [240]) = $7
	*(($1 + [248])) = $9
	*(($3 + [8])) = $9
	*($3) = $7
	
.LABEL $label$32
	$global$0 = ($5 + [256])
}

void .FUNC $114 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	$8 = ($global$0 - [720])
	$global$0 = $8
	*($8 + [712]) = $1
	$9 = [0]
	*($8 + [704]) = [0]
	*($8 + [696]) = (int_64)0
	CALL $115(($8 + [696]), [0], *($3), *($3 + [4]))
	CALL $115(($8 + [696]), *($8 + [700]), *($4), *($4 + [4]))
	CALL $115(($8 + [696]), *($8 + [700]), *($5), *($5 + [4]))
	CALL $115(($8 + [696]), *($8 + [700]), *($6), *($6 + [4]))
	CALL $115(($8 + [696]), *($8 + [700]), *($7), *($7 + [4]))
	CALL memset(($8 + [176]), [0], [512])
	$5 = ([6] - $2)
	
.LOOP $label$1:
	$7 = ((int_32)((int_32)$5 % (int_32)[5]) * (int_32)[5])
	*($8 + [72]) = *((*($8 + [696]) + $7))
	$6 = (($8 + [176]) + $9)
	CALL memcpy($6, ($8 + [72]), [1])
	*($8 + [72]) = *(((*($8 + [696]) + $7) + [1]))
	CALL memcpy(($6 + [1]), ($8 + [72]), [1])
	*($8 + [72]) = *(((*($8 + [696]) + $7) + [2]))
	CALL memcpy(($6 + [2]), ($8 + [72]), [1])
	*($8 + [72]) = *(((*($8 + [696]) + $7) + [3]))
	CALL memcpy(($6 + [3]), ($8 + [72]), [1])
	*($8 + [72]) = *(((*($8 + [696]) + $7) + [4]))
	CALL memcpy(($6 + [4]), ($8 + [72]), [1])
	$5 = ($5 + [1])
	$9 = ($9 + [5])
	if ( ((int_32)$9 != (int_32)[25]) ){ goto $label$1 }
	CALL memcpy(($8 + [201]), ($8 + [712]), [8])
	CALL $83(($8 + [144]), ($8 + [176]), [33])
	*($8 + [32]) = [1]
	CALL $96(($8 + [72]), $0, ($8 + [32]))
	*((($8 + [16]) + [8])) = [0]
	*($8 + [16]) = (int_64)0
	$7 = CALL $15([13065])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$5 }
	*($8 + [16]) = ($7 << [1])
	$6 = (($8 + [16]) | [1])
	if ( $7 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$9 = (($7 + [16]) & [-16])
	$6 = CALL $7($9)
	*($8 + [16]) = ($9 | [1])
	*($8 + [24]) = $6
	*($8 + [20]) = $7
	
.LABEL $label$4
	CALL memcpy($6, [13065], $7)
	
.LABEL $label$3
	*(($6 + $7)) = [0]
	*($8 + [15]) = [1]
	CALL $97(($8 + [32]), ($8 + [16]), ($8 + [15]))
	if ( ((*($8 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $9(*($8 + [24]))
	
.LABEL $label$6
	CALL $85(($8 + [144]), ($8 + [72]), ($8 + [32]))
	$7 = *($8 + [696])
	if ( ($7 == 0) ){ goto $label$7 }
	*($8 + [700]) = $7
	CALL $9($7)
	
.LABEL $label$7
	$global$0 = ($8 + [720])
	return (unreachable)
	
.LABEL $label$2
	CALL $51(($8 + [16]))
}

int_32 .FUNC $115 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($3 - $2)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$2 }
	$6 = *($0 + [4])
	$5 = *($0 + [8])
	if ( ((int_32)$4 <= (int_32)($5 - $6)) ){ goto $label$7 }
	$7 = *($0)
	$8 = (($6 - $7) + $4)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$1 }
	$5 = ($5 - $7)
	if ( ((uint_32)$5 >= (uint_32)[1073741823]) ){ goto $label$6 }
	$6 = ($1 - $7)
	$5 = ($5 << [1])
	$8 = ( $8 ? $5 : ($5 <= $8) )
	if ( $8 ){ goto $label$5 }
	$8 = [0]
	$4 = [0]
	$7 = ([0] + $6)
	$5 = $7
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$7
	$9 = ($6 - $1)
	if ( ((int_32)$4 <= (int_32)$9) ){ goto $label$9 }
	$8 = $6
	$10 = ($2 + $9)
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$10 }
	$7 = ($0 + [4])
	$8 = $6
	$5 = $10
	
.LOOP $label$11:
	*($8) = *($5)
	$8 = (*($7) + [1])
	*($7) = $8
	$5 = ($5 + [1])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$9 >= (int_32)[1]) ){ goto $label$8 }
	goto $label$2 
	
.LABEL $label$9
	$8 = $6
	$10 = $3
	
.LABEL $label$8
	$9 = ($8 - ($1 + $4))
	$5 = ($8 - $4)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$12 }
	$3 = ($0 + [4])
	$7 = $8
	
.LOOP $label$13:
	*($7) = *($5)
	$7 = (*($3) + [1])
	*($3) = $7
	$5 = ($5 + [1])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($9 == 0) ){ goto $label$14 }
	CALL memmove(($8 - $9), $1, $9)
	
.LABEL $label$14
	$5 = ($10 - $2)
	if ( ($5 == 0) ){ goto $label$2 }
	CALL memmove($1, $2, $5)
	return $1
	
.LABEL $label$6
	$6 = ($1 - $7)
	$8 = [2147483647]
	
.LABEL $label$5
	$4 = CALL $7($8)
	$7 = ($4 + $6)
	$5 = $7
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($3 + ($6 - $2))
	$5 = $7
	
.LOOP $label$15:
	*($5) = *($2)
	$5 = ($5 + [1])
	$2 = ($2 + [1])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$15 }
	$5 = ($4 + $6)
	
.LABEL $label$3
	$6 = *($0)
	$2 = ($1 - $6)
	$3 = ($7 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$16 }
	CALL memcpy($3, $6, $2)
	
.LABEL $label$16
	$8 = ($4 + $8)
	$6 = ($0 + [4])
	$2 = (*($6) - $1)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$17 }
	CALL memcpy($5, $1, $2)
	$5 = ($5 + $2)
	
.LABEL $label$17
	*($6) = $5
	$2 = *($0)
	*($0) = $3
	*(($0 + [8])) = $8
	if ( ($2 == 0) ){ goto $label$18 }
	CALL $9($2)
	
.LABEL $label$18
	$1 = $7
	
.LABEL $label$2
	return $1
	
.LABEL $label$1
	CALL $82($0)
	return (unreachable)
}

void .FUNC $112 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	$9 = ($global$0 - [112])
	$global$0 = $9
	*($9 + [104]) = [0]
	*($9 + [96]) = (int_64)0
	$10 = CALL $52(($9 + [80]), $0)
	*(($9 + [72])) = [0]
	*($9 + [64]) = (int_64)0
	$0 = CALL $15([12895])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$5 }
	*($9 + [64]) = ($0 << [1])
	$11 = (($9 + [64]) | [1])
	if ( $0 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$12 = (($0 + [16]) & [-16])
	$11 = CALL $7($12)
	*($9 + [64]) = ($12 | [1])
	*($9 + [72]) = $11
	*($9 + [68]) = $0
	
.LABEL $label$4
	CALL memcpy($11, [12895], $0)
	
.LABEL $label$3
	*(($11 + $0)) = [0]
	CALL $90($10, ($9 + [64]), ($9 + [96]))
	if ( ((*($9 + [64]) & [1]) == 0) ){ goto $label$6 }
	CALL $9(*($9 + [72]))
	
.LABEL $label$6
	if ( ((*($10) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*($10 + [8]))
	
.LABEL $label$7
	$0 = *($9 + [96])
	if ( ((uint_32)((int_32)(*($9 + [100]) - $0) / (int_32)[12]) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12897])
	$0 = *($9 + [96])
	
.LABEL $label$8
	$0 = *($9 + [48])
	$12 = CALL $52(($9 + [48]), $0)
	if ( ( *($12 + [4]) ? uint_32($0 >> [1]) : ($0 & [1]) ) ){ goto $label$9 }
	CALL eosio_assert([0], [12970])
	
.LABEL $label$9
	*($1) = CALL $70($12, [0], [10])
	CALL $54($12, (*($9 + [96]) + [12]))
	$0 = *($9 + [48])
	$10 = ($12 + [4])
	if ( (( *($10) ? uint_32($0 >> [1]) : ($0 & [1]) ) == 0) ){ goto $label$11 }
	$0 = *($9 + [48])
	$11 = CALL $15([12908])
	if ( ((int_32)$11 != (int_32)( *($10) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$10 }
	if ( CALL $66($12, [0], [-1], [12908], $11) ){ goto $label$10 }
	
.LABEL $label$11
	CALL eosio_assert([0], [12897])
	
.LABEL $label$10
	$11 = ($12 + [1])
	$0 = ( *($12 + [8]) ? $11 : (*($9 + [48]) & [1]) )
	*($9 + [32]) = $0
	*($9 + [36]) = CALL $15($0)
	*($9 + [16]) = *($9 + [32])
	$13 = *(CALL $99(($9 + [40]), ($9 + [16])))
	*($2) = $13
	if ( CALL is_account($13) ){ goto $label$12 }
	CALL eosio_assert([0], [12910])
	
.LABEL $label$12
	CALL $54($12, (*($9 + [96]) + [24]))
	$0 = *($9 + [48])
	$10 = ($12 + [4])
	if ( (( *($10) ? uint_32($0 >> [1]) : ($0 & [1]) ) == 0) ){ goto $label$14 }
	$0 = ($0 & [1])
	$0 = *($9 + [48])
	$1 = CALL $15([12908])
	if ( ((int_32)$1 != (int_32)( *($10) ? uint_32($0 >> [1]) : $0 )) ){ goto $label$15 }
	if ( (CALL $66($12, [0], [-1], [12908], $1) == 0) ){ goto $label$14 }
	$0 = (*($9 + [48]) & [1])
	
.LABEL $label$15
	$0 = ( *(($12 + [8])) ? $11 : $0 )
	*($9 + [24]) = $0
	*($9 + [28]) = CALL $15($0)
	*($9 + [8]) = *($9 + [24])
	$13 = *(CALL $99(($9 + [40]), ($9 + [8])))
	*($3) = $13
	if ( (int_64)($13 == 0) ){ goto $label$13 }
	if ( CALL is_account($13) ){ goto $label$13 }
	CALL eosio_assert([0], [12933])
	goto $label$13 
	
.LABEL $label$14
	*($3) = (int_64)0
	
.LABEL $label$13
	CALL $54($12, (*($9 + [96]) + [36]))
	$0 = *($9 + [48])
	if ( ( *(($12 + [4])) ? uint_32($0 >> [1]) : ($0 & [1]) ) ){ goto $label$16 }
	CALL eosio_assert([0], [12981])
	
.LABEL $label$16
	$14 = CALL $69($12, [0], [10])
	$0 = CALL $15([12244])
	if ( ($0 <= [8]) ){ goto $label$19 }
	CALL eosio_assert([0], [14622])
	goto $label$18 
	
.LABEL $label$19
	if ( ($0 == 0) ){ goto $label$17 }
	
.LABEL $label$18
	$13 = (int_64)0
	
.LOOP $label$20:
	$10 = *(($0 + [12243]))
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$21 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$21
	$13 = ((int_64)((int_64)$13 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$20 }
	$13 = ((int_64)$13 << (int_64)8)
	goto $label$1 
	
.LABEL $label$17
	$13 = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	CALL $51(($9 + [64]))
	
.LABEL $label$1
	if ( (uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$22 }
	CALL eosio_assert([0], [14720])
	
.LABEL $label$22
	$15 = ((int_64)$13 | (int_64)4)
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$25:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$24 }
	$16 = (uint_64)$13 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$13 & (int_64)65280) == (int_64)0) ){ goto $label$26 }
	$13 = $16
	$10 = $0
	$0 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$26
	$13 = $16
	
.LOOP $label$27:
	if ( ((int_64)((int_64)$13 & (int_64)65280) != (int_64)0) ){ goto $label$24 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$10 = ((int_32)$0 < (int_32)[6])
	$11 = ($0 + [1])
	$0 = $11
	if ( $10 ){ goto $label$27 }
	$0 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$24
	CALL eosio_assert([0], [14769])
	
.LABEL $label$23
	*($4 + [8]) = $15
	*($4) = $14
	if ( ((int_64)$14 > (int_64)-1) ){ goto $label$28 }
	CALL eosio_assert([0], [12981])
	
.LABEL $label$28
	CALL $54($12, (*($9 + [96]) + [48]))
	$0 = *($9 + [48])
	if ( ( *(($12 + [4])) ? uint_32($0 >> [1]) : ($0 & [1]) ) ){ goto $label$29 }
	CALL eosio_assert([0], [12999])
	
.LABEL $label$29
	$14 = CALL $69($12, [0], [10])
	$0 = CALL $15([12244])
	if ( ($0 <= [8]) ){ goto $label$33 }
	CALL eosio_assert([0], [14622])
	goto $label$32 
	
.LABEL $label$33
	if ( ($0 == 0) ){ goto $label$31 }
	
.LABEL $label$32
	$13 = (int_64)0
	
.LOOP $label$34:
	$10 = *(($0 + [12243]))
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$35 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$35
	$13 = ((int_64)((int_64)$13 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$34 }
	$13 = ((int_64)$13 << (int_64)8)
	goto $label$30 
	
.LABEL $label$31
	$13 = (int_64)0
	
.LABEL $label$30
	if ( (uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$36 }
	CALL eosio_assert([0], [14720])
	
.LABEL $label$36
	$15 = ((int_64)$13 | (int_64)4)
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$39:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$38 }
	$16 = (uint_64)$13 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$13 & (int_64)65280) == (int_64)0) ){ goto $label$40 }
	$13 = $16
	$10 = $0
	$0 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$39 }
	goto $label$37 
	
.LABEL $label$40
	$13 = $16
	
.LOOP $label$41:
	if ( ((int_64)((int_64)$13 & (int_64)65280) != (int_64)0) ){ goto $label$38 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$10 = ((int_32)$0 < (int_32)[6])
	$11 = ($0 + [1])
	$0 = $11
	if ( $10 ){ goto $label$41 }
	$0 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$39 }
	goto $label$37 
	
.LABEL $label$38
	CALL eosio_assert([0], [14769])
	
.LABEL $label$37
	*($5 + [8]) = $15
	*($5) = $14
	if ( ((int_64)$14 > (int_64)-1) ){ goto $label$42 }
	CALL eosio_assert([0], [12999])
	
.LABEL $label$42
	CALL $54($12, (*($9 + [96]) + [60]))
	$0 = *($9 + [48])
	if ( ( *(($12 + [4])) ? uint_32($0 >> [1]) : ($0 & [1]) ) ){ goto $label$43 }
	CALL eosio_assert([0], [13017])
	
.LABEL $label$43
	$14 = CALL $69($12, [0], [10])
	$0 = CALL $15([12244])
	if ( ($0 <= [8]) ){ goto $label$47 }
	CALL eosio_assert([0], [14622])
	goto $label$46 
	
.LABEL $label$47
	if ( ($0 == 0) ){ goto $label$45 }
	
.LABEL $label$46
	$13 = (int_64)0
	
.LOOP $label$48:
	$10 = *(($0 + [12243]))
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$49 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$49
	$13 = ((int_64)((int_64)$13 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$48 }
	$13 = ((int_64)$13 << (int_64)8)
	goto $label$44 
	
.LABEL $label$45
	$13 = (int_64)0
	
.LABEL $label$44
	if ( (uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$50 }
	CALL eosio_assert([0], [14720])
	
.LABEL $label$50
	$15 = ((int_64)$13 | (int_64)4)
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$53:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$52 }
	$16 = (uint_64)$13 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$13 & (int_64)65280) == (int_64)0) ){ goto $label$54 }
	$13 = $16
	$10 = $0
	$0 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$54
	$13 = $16
	
.LOOP $label$55:
	if ( ((int_64)((int_64)$13 & (int_64)65280) != (int_64)0) ){ goto $label$52 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$10 = ((int_32)$0 < (int_32)[6])
	$11 = ($0 + [1])
	$0 = $11
	if ( $10 ){ goto $label$55 }
	$0 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$52
	CALL eosio_assert([0], [14769])
	
.LABEL $label$51
	*($6 + [8]) = $15
	*($6) = $14
	if ( ((int_64)$14 > (int_64)-1) ){ goto $label$56 }
	CALL eosio_assert([0], [13017])
	
.LABEL $label$56
	CALL $54($12, (*($9 + [96]) + [72]))
	$0 = *($9 + [48])
	if ( ( *(($12 + [4])) ? uint_32($0 >> [1]) : ($0 & [1]) ) ){ goto $label$57 }
	CALL eosio_assert([0], [13034])
	
.LABEL $label$57
	$14 = CALL $69($12, [0], [10])
	$0 = CALL $15([12244])
	if ( ($0 <= [8]) ){ goto $label$61 }
	CALL eosio_assert([0], [14622])
	goto $label$60 
	
.LABEL $label$61
	if ( ($0 == 0) ){ goto $label$59 }
	
.LABEL $label$60
	$13 = (int_64)0
	
.LOOP $label$62:
	$10 = *(($0 + [12243]))
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$63 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$63
	$13 = ((int_64)((int_64)$13 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$62 }
	$15 = ((int_64)((int_64)$13 << (int_64)8) | (int_64)4)
	goto $label$58 
	
.LABEL $label$59
	$15 = (int_64)4
	
.LABEL $label$58
	if ( (uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$64 }
	CALL eosio_assert([0], [14720])
	
.LABEL $label$64
	$13 = (uint_64)$15 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$67:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$66 }
	$16 = (uint_64)$13 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$13 & (int_64)65280) == (int_64)0) ){ goto $label$68 }
	$13 = $16
	$10 = $0
	$0 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$67 }
	goto $label$65 
	
.LABEL $label$68
	$13 = $16
	
.LOOP $label$69:
	if ( ((int_64)((int_64)$13 & (int_64)65280) != (int_64)0) ){ goto $label$66 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$10 = ((int_32)$0 < (int_32)[6])
	$11 = ($0 + [1])
	$0 = $11
	if ( $10 ){ goto $label$69 }
	$0 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$67 }
	goto $label$65 
	
.LABEL $label$66
	CALL eosio_assert([0], [14769])
	
.LABEL $label$65
	*($7 + [8]) = $15
	*($7) = $14
	if ( ((int_64)$14 > (int_64)-1) ){ goto $label$70 }
	CALL eosio_assert([0], [13034])
	
.LABEL $label$70
	CALL $54($12, (*($9 + [96]) + [84]))
	$0 = *($9 + [48])
	if ( (( *(($12 + [4])) ? uint_32($0 >> [1]) : ($0 & [1]) ) == 0) ){ goto $label$77 }
	CALL $54($8, $12)
	if ( (*($9 + [48]) & [1]) ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$77
	CALL eosio_assert([0], [13054])
	CALL $54($8, $12)
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$75 }
	
.LABEL $label$76
	CALL $9(*(($12 + [8])))
	$11 = *($9 + [96])
	if ( $11 ){ goto $label$74 }
	goto $label$73 
	
.LABEL $label$75
	$11 = *($9 + [96])
	if ( ($11 == 0) ){ goto $label$73 }
	
.LABEL $label$74
	$10 = *($9 + [100])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$72 }
	
.LOOP $label$78:
	$0 = ($10 + [-12])
	if ( ((*($0) & [1]) == 0) ){ goto $label$79 }
	CALL $9(*(($10 + [-4])))
	
.LABEL $label$79
	$10 = $0
	if ( ((int_32)$11 != (int_32)$0) ){ goto $label$78 }
	$0 = *($9 + [96])
	goto $label$71 
	
.LABEL $label$73
	$global$0 = ($9 + [112])
	return 
	
.LABEL $label$72
	$0 = $11
	
.LABEL $label$71
	*($9 + [100]) = $11
	CALL $9($0)
	$global$0 = ($9 + [112])
	(unreachable)
}

void .FUNC $113 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	$5 = *($1)
	if ( ((int_64)$5 <= (int_64)0) ){ goto $label$5 }
	$6 = (CASTING int_64)(int_32 CALL $87($2))
	CALL __multi3(($4 + [32]), $6, (int_64)$6 >> (int_64)63), $5, (int_64)$5 >> (int_64)63))
	$7 = *($1 + [8])
	$6 = *(($4 + [40]))
	$5 = *($4 + [32])
	if ( (( (uint_64)($5 <= (int_64)4611686018427387904) ? ((int_64)$6 < (int_64)0) : (int_64)($6 == 0) ) == 0) ){ goto $label$4 }
	if ( ( ((uint_64)$5 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$6 > (int_64)-1) : ((int_64)$6 == (int_64)-1) ) ){ goto $label$6 }
	CALL eosio_assert([0], [14853])
	
.LABEL $label$6
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	*($0) = (int_64)0
	$5 = *($1 + [8])
	*($0 + [8]) = $5
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$5 = $6
	$0 = $1
	$1 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$9
	$5 = $6
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$0 = ((int_32)$1 < (int_32)[6])
	$2 = ($1 + [1])
	$1 = $2
	if ( $0 ){ goto $label$10 }
	$1 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$7
	CALL eosio_assert([0], [14769])
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$4
	CALL eosio_assert([0], [14829])
	if ( ((int_32)$2 >= (int_32)[1]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$11 }
	*($0 + [8]) = $7
	*($0) = (int_64)0
	$5 = (uint_64)$7 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$5 = $6
	$0 = $1
	$1 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$13 }
	goto $label$1 
	
.LABEL $label$14
	$5 = $6
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$0 = ((int_32)$1 < (int_32)[6])
	$2 = ($1 + [1])
	$1 = $2
	if ( $0 ){ goto $label$15 }
	$1 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$13 }
	goto $label$1 
	
.LABEL $label$12
	CALL eosio_assert([0], [14769])
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$11
	$6 = (CASTING int_64)(int_32 $2)
	$5 = *($1)
	CALL __multi3(($4 + [16]), $5, (int_64)$5 >> (int_64)63), $6, (int_64)$6 >> (int_64)63))
	*($0) = $5
	*(($0 + [8])) = *(($1 + [8]))
	$5 = *((($4 + [16]) + [8]))
	$6 = *($4 + [16])
	if ( (( (uint_64)($6 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ) == 0) ){ goto $label$16 }
	if ( ( ((uint_64)$6 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ) ){ goto $label$17 }
	CALL eosio_assert([0], [14853])
	
.LABEL $label$17
	*($0) = $6
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$16
	CALL eosio_assert([0], [14829])
	*($0) = $6
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$2
	if ( ((int_64)$7 == (int_64)*($3 + [8])) ){ goto $label$18 }
	CALL eosio_assert([0], [15016])
	
.LABEL $label$18
	$6 = ((int_64)*($3) + (int_64)$5)
	*($3) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$19 }
	CALL eosio_assert([0], [15059])
	$6 = *($3)
	
.LABEL $label$19
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$20 }
	CALL eosio_assert([0], [15078])
	
.LABEL $label$20
	CALL __multi3($4, $5, (int_64)$5 >> (int_64)63), (int_64)9850, (int_64)0)
	$5 = *(($4 + [8]))
	$6 = *($4)
	if ( (( (uint_64)($6 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ) == 0) ){ goto $label$22 }
	if ( ( ((uint_64)$6 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ) ){ goto $label$21 }
	CALL eosio_assert([0], [14853])
	goto $label$21 
	
.LABEL $label$22
	CALL eosio_assert([0], [14829])
	
.LABEL $label$21
	*($0 + [8]) = $7
	*($0) = ((int_64)$6 / (int_64)10000)
	
.LABEL $label$1
	$global$0 = ($4 + [48])
}

void .FUNC $110 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	$5 = (*($1 + [4]) - *($1))
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = CALL $7($5)
	*(($4 + [8])) = ($6 + $5)
	*($4) = $6
	*($4 + [4]) = $6
	$5 = *($1)
	$1 = (*(($1 + [4])) - $5)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($6, $5, $1)
	*($4 + [4]) = ($6 + $1)
	
.LABEL $label$4
	CALL $109($0, $4)
	$1 = *($4)
	if ( ($1 == 0) ){ goto $label$5 }
	*($4 + [4]) = $1
	CALL $9($1)
	
.LABEL $label$5
	$1 = ($2 + [-1])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$11 }
	goto $label$24 
	
.LABEL $label$24
	CALL $60($0, [12821])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$23
	CALL $60($0, [12477])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$22
	CALL $60($0, [12527])
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$21
	CALL $60($0, [12605])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$20
	CALL $60($0, [12745])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$19
	CALL $60($0, [12650])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$18
	CALL $60($0, [12578])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$17
	CALL $60($0, [12783])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$16
	CALL $60($0, [12504])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$15
	CALL $60($0, [12802])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$14
	CALL $60($0, [12764])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$13
	CALL $60($0, [12688])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$12
	CALL $60($0, [12445])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$11
	CALL eosio_assert([0], [12840])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$10
	CALL $60($0, [12726])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$9
	CALL $60($0, [12707])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$8
	CALL $60($0, [12669])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	CALL $60($0, [12631])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$6
	CALL $60($0, [12555])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $82($4)
	
.LABEL $label$2
	if ( ($3 == 0) ){ goto $label$25 }
	CALL $60($0, [12872])
	
.LABEL $label$25
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$1
	CALL $60($0, [12856])
	$global$0 = ($4 + [16])
	$1
	(unreachable)
}

int_32 .FUNC $111 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$4 = ($global$0 - [112])
	$global$0 = $4
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$5 }
	$6 = uint_32($5 >> [1])
	$7 = ($0 + [1])
	$5 = CALL $15([12887])
	if ( ($5 == 0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = *($0 + [4])
	$7 = *($0 + [8])
	$5 = CALL $15([12887])
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = [0]
	if ( ((int_32)$6 < (int_32)$5) ){ goto $label$2 }
	$9 = ($7 + $6)
	$10 = $7
	
.LOOP $label$6:
	$6 = (($6 - $5) + [1])
	if ( ($6 == 0) ){ goto $label$2 }
	$6 = CALL $16($10, [98], $6)
	if ( ($6 == 0) ){ goto $label$2 }
	if ( (CALL $17($6, [12887], $5) == 0) ){ goto $label$7 }
	$10 = ($6 + [1])
	$6 = ($9 - $10)
	if ( ((int_32)$6 >= (int_32)$5) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$7
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$2 }
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $53(($4 + [96]), $0, [7], [-1], $0)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = [0]
	goto $label$8 
	
.LABEL $label$9
	*(*($0 + [8])) = [0]
	*($0 + [4]) = [0]
	
.LABEL $label$8
	CALL $56($0, [0])
	*(($0 + [8])) = *((($4 + [96]) + [8]))
	*($0) = *($4 + [96])
	*($4 + [104]) = [0]
	*($4 + [96]) = (int_64)0
	$6 = CALL $52(($4 + [80]), $0)
	*((($4 + [64]) + [8])) = [0]
	*($4 + [64]) = (int_64)0
	$5 = CALL $15([12895])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$12 }
	*($4 + [64]) = ($5 << [1])
	$0 = (($4 + [64]) | [1])
	if ( $5 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$10 = (($5 + [16]) & [-16])
	$0 = CALL $7($10)
	*($4 + [64]) = ($10 | [1])
	*($4 + [72]) = $0
	*($4 + [68]) = $5
	
.LABEL $label$11
	CALL memcpy($0, [12895], $5)
	
.LABEL $label$10
	*(($0 + $5)) = [0]
	CALL $90($6, ($4 + [64]), ($4 + [96]))
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*($4 + [72]))
	
.LABEL $label$13
	if ( ((*($6) & [1]) == 0) ){ goto $label$14 }
	CALL $9(*($6 + [8]))
	
.LABEL $label$14
	$5 = *($4 + [96])
	if ( ((uint_32)((int_32)(*($4 + [100]) - $5) / (int_32)[12]) > (uint_32)[2]) ){ goto $label$15 }
	CALL eosio_assert([0], [12897])
	$5 = *($4 + [96])
	
.LABEL $label$15
	$6 = *($4 + [48])
	$5 = CALL $52(($4 + [48]), $5)
	if ( (( *($5 + [4]) ? uint_32($6 >> [1]) : ($6 & [1]) ) == 0) ){ goto $label$17 }
	$6 = *($4 + [48])
	$0 = CALL $15([12908])
	if ( ((int_32)$0 != (int_32)( *(($5 + [4])) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$16 }
	if ( CALL $66($5, [0], [-1], [12908], $0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL eosio_assert([0], [12897])
	
.LABEL $label$16
	$10 = ($5 + [1])
	$6 = ( *($5 + [8]) ? $10 : (*($4 + [48]) & [1]) )
	*($4 + [32]) = $6
	*($4 + [36]) = CALL $15($6)
	*($4 + [16]) = *($4 + [32])
	$11 = *(CALL $99(($4 + [40]), ($4 + [16])))
	*($1) = $11
	if ( CALL is_account($11) ){ goto $label$18 }
	CALL eosio_assert([0], [12910])
	
.LABEL $label$18
	CALL $54($5, (*($4 + [96]) + [12]))
	$6 = *($4 + [48])
	$0 = ($5 + [4])
	if ( (( *($0) ? uint_32($6 >> [1]) : ($6 & [1]) ) == 0) ){ goto $label$20 }
	$6 = ($6 & [1])
	$6 = *($4 + [48])
	$9 = CALL $15([12908])
	if ( ((int_32)$9 != (int_32)( *($0) ? uint_32($6 >> [1]) : $6 )) ){ goto $label$21 }
	if ( (CALL $66($5, [0], [-1], [12908], $9) == 0) ){ goto $label$20 }
	$6 = (*($4 + [48]) & [1])
	
.LABEL $label$21
	$6 = ( *(($5 + [8])) ? $10 : $6 )
	*($4 + [24]) = $6
	*($4 + [28]) = CALL $15($6)
	*($4 + [8]) = *($4 + [24])
	$11 = *(CALL $99(($4 + [40]), ($4 + [8])))
	*($2) = $11
	if ( (int_64)($11 == 0) ){ goto $label$19 }
	if ( CALL is_account($11) ){ goto $label$19 }
	CALL eosio_assert([0], [12933])
	goto $label$19 
	
.LABEL $label$20
	*($2) = (int_64)0
	
.LABEL $label$19
	CALL $54($5, (*($4 + [96]) + [24]))
	$6 = *($4 + [48])
	if ( ( *(($5 + [4])) ? uint_32($6 >> [1]) : ($6 & [1]) ) ){ goto $label$22 }
	CALL eosio_assert([0], [12958])
	
.LABEL $label$22
	*($3) = CALL $69($5, [0], [10])
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$23 }
	CALL $9(*(($5 + [8])))
	
.LABEL $label$23
	$0 = *($4 + [96])
	if ( ($0 == 0) ){ goto $label$24 }
	$6 = *($4 + [100])
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$26 }
	
.LOOP $label$27:
	$5 = ($6 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$28 }
	CALL $9(*(($6 + [-4])))
	
.LABEL $label$28
	$6 = $5
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$27 }
	$5 = *($4 + [96])
	goto $label$25 
	
.LABEL $label$26
	$5 = $0
	
.LABEL $label$25
	*($4 + [100]) = $0
	CALL $9($5)
	
.LABEL $label$24
	$8 = [1]
	
.LABEL $label$2
	$global$0 = ($4 + [112])
	return $8
	
.LABEL $label$1
	CALL $51(($4 + [64]))
	return (unreachable)
}

void .FUNC $118 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	*($0 + [8]) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [40]) = (int_64)0
	*($0 + [68 align=4]) = (int_64)0
	*($0 + [92 align=4]) = (int_64)0
	*($0 + [116 align=4]) = (int_64)0
	*($0 + [128]) = (int_64)0
	*($0 + [144]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*(($0 + [32])) = (int_64)0
	*(($0 + [48])) = (int_64)0
	*(($0 + [56])) = (int_64)0
	*(($0 + [76])) = (int_64)0
	*(($0 + [84])) = (int_64)0
	*(($0 + [100])) = (int_64)0
	*(($0 + [108])) = (int_64)0
	*(($0 + [124])) = [0]
	*(($7 = ($0 + [136]))) = (int_64)0
	*($0 + [160]) = (int_64)0
	*(($8 = ($0 + [152]))) = (int_64)0
	*(($9 = ($0 + [168]))) = (int_64)0
	*($0 + [176]) = (int_64)0
	*(($10 = ($0 + [184]))) = (int_64)0
	*($0 + [192]) = (int_64)0
	*(($11 = ($0 + [200]))) = (int_64)0
	*($0 + [208]) = (int_64)0
	*(($12 = ($0 + [216]))) = (int_64)0
	*($0 + [224]) = (int_64)0
	*(($13 = ($0 + [232]))) = (int_64)0
	*($0 + [240]) = (int_64)0
	*(($14 = ($0 + [248]))) = (int_64)0
	*($0 + [256]) = (int_64)0
	*(($15 = ($0 + [264]))) = (int_64)0
	*($0) = *($1)
	*($0 + [8]) = *($2)
	CALL $57(($0 + [16]), [13065])
	CALL $54(($0 + [28]), ($1 + [8]))
	CALL $54(($0 + [40]), ($1 + [120]))
	CALL $54(($0 + [52]), ($1 + [132]))
	*($0 + [64]) = *($1 + [24])
	CALL $54(($0 + [68]), ($1 + [28]))
	CALL $54(($0 + [80]), ($1 + [40]))
	CALL $54(($0 + [92]), ($1 + [52]))
	CALL $54(($0 + [104]), ($1 + [64]))
	CALL $54(($0 + [116]), ($1 + [76]))
	*($7) = *(($2 + [24]))
	*($0 + [128]) = *($2 + [16])
	*($0 + [144]) = *($2 + [32])
	*($8) = *(($2 + [40]))
	*($0 + [160]) = *($2 + [48])
	*($9) = *(($2 + [56]))
	*($0 + [176]) = *($2 + [64])
	*($10) = *(($2 + [72]))
	*($11) = *(($2 + [88]))
	*($0 + [192]) = *($2 + [80])
	*($12) = *(($3 + [8]))
	*($0 + [208]) = *($3)
	*($13) = *(($4 + [8]))
	*($0 + [224]) = *($4)
	*($14) = *(($5 + [8]))
	*($0 + [240]) = *($5)
	*($0 + [256]) = *($6)
	*($15) = *(($6 + [8]))
}

int_32 .FUNC $119 (int_32 $0)
{
	int_32 $1
	if ( (*($0 + [116]) & [1]) ){ goto $label$17 }
	if ( (*($0 + [104]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $9(*(($0 + [124])))
	if ( ((*($0 + [104]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $9(*(($0 + [112])))
	$1 = [1]
	if ( ((*($0 + [92]) & [1]) == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$1 = [1]
	if ( (*($0 + [92]) & [1]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( (*($0 + [80]) & $1) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $9(*(($0 + [100])))
	if ( ((*($0 + [80]) & $1) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $9(*(($0 + [88])))
	$1 = [1]
	if ( ((*($0 + [68]) & [1]) == 0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$1 = [1]
	if ( (*($0 + [68]) & [1]) ){ goto $label$9 }
	
.LABEL $label$10
	if ( (*($0 + [52]) & $1) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*(($0 + [76])))
	if ( ((*($0 + [52]) & $1) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($0 + [60])))
	$1 = [1]
	if ( ((*($0 + [40]) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$1 = [1]
	if ( (*($0 + [40]) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	if ( (*($0 + [28]) & $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $9(*(($0 + [48])))
	if ( ((*($0 + [28]) & $1) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $9(*(($0 + [36])))
	if ( ((*($0 + [16]) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($0 + [16]) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	return $0
	
.LABEL $label$1
	CALL $9(*(($0 + [24])))
	return $0
}

void .FUNC $299 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $295(*($1), *($0 + [8]))
	CALL $295(*($1), *($0 + [12]))
	CALL $295(*($1), *($0 + [16]))
	CALL $295(*($1), *($0 + [20]))
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	CALL $295(*($1), *($0 + [28]))
	CALL $295(*($1), *($0 + [32]))
	CALL $295(*($1), *($0 + [36]))
	CALL $295(*($1), *($0 + [40]))
	CALL $295(*($1), *($0 + [44]))
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [52])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [56])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [60])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [64])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [68])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [72])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$17
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [76])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$18
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$19
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [80])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$20 }
	CALL eosio_assert([0], [15011])
	$1 = *(($0 + [4]))
	
.LABEL $label$20
	CALL memcpy($4, $1, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $1) > (uint_32)[7]) ){ goto $label$21 }
	CALL eosio_assert([0], [15011])
	$1 = *(($0 + [4]))
	
.LABEL $label$21
	CALL memcpy(($2 + [8]), $1, [8])
	*($4 + [8]) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $298 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$2 = ($global$0 - [352])
	$global$0 = $2
	*(($3 = (($2 + [160]) + [8]))) = *(($1 + [24]))
	*(($4 = (($2 + [144]) + [8]))) = *(($1 + [40]))
	*(($5 = (($2 + [128]) + [8]))) = *(($1 + [56]))
	*(($6 = (($2 + [112]) + [8]))) = *(($1 + [72]))
	*($2 + [160]) = *($1 + [16])
	*($2 + [144]) = *($1 + [32])
	*($2 + [128]) = *($1 + [48])
	*($2 + [112]) = *($1 + [64])
	$7 = *($1 + [8])
	$8 = *($1)
	*(($9 = (($2 + [96]) + [8]))) = *(($1 + [88]))
	*($2 + [96]) = *($1 + [80])
	$1 = CALL $52(($2 + [80]), ($1 + [96]))
	*((($2 + [240]) + [8])) = *($9)
	*((($2 + [224]) + [8])) = *($6)
	*((($2 + [208]) + [8])) = *($5)
	*((($2 + [192]) + [8])) = *($4)
	*((($2 + [176]) + [8])) = *($3)
	*($2 + [240]) = *($2 + [96])
	*($2 + [224]) = *($2 + [112])
	*($2 + [208]) = *($2 + [128])
	*($2 + [192]) = *($2 + [144])
	*($2 + [176]) = *($2 + [160])
	$0 = *($0 + [4])
	$4 = *($0 + [4])
	$3 = (*($0) + int_32($4 >> [1]))
	$0 = *($0)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($5 = (($2 + [336]) + [8]))) = *((($2 + [176]) + [8]))
	*(($6 = (($2 + [320]) + [8]))) = *((($2 + [192]) + [8]))
	*(($9 = (($2 + [304]) + [8]))) = *((($2 + [208]) + [8]))
	*(($10 = (($2 + [288]) + [8]))) = *((($2 + [224]) + [8]))
	*(($11 = (($2 + [272]) + [8]))) = *((($2 + [240]) + [8]))
	*($2 + [336]) = *($2 + [176])
	*($2 + [320]) = *($2 + [192])
	*($2 + [304]) = *($2 + [208])
	*($2 + [288]) = *($2 + [224])
	*($2 + [272]) = *($2 + [240])
	$4 = CALL $52(($2 + [256]), $1)
	*((($2 + [64]) + [8])) = *($5)
	*((($2 + [48]) + [8])) = *($6)
	*((($2 + [32]) + [8])) = *($9)
	*((($2 + [16]) + [8])) = *($10)
	*(($2 + [8])) = *($11)
	*($2 + [64]) = *($2 + [336])
	*($2 + [48]) = *($2 + [320])
	*($2 + [32]) = *($2 + [304])
	*($2 + [16]) = *($2 + [288])
	*($2) = *($2 + [272])
	CALL void $3((int_32 $8), (int_64 $7), (int_64 ($2 + [64])), (int_32 ($2 + [48])), (int_32 ($2 + [32])), (int_32 ($2 + [16])), (int_32 $2), (int_32 $4), (int_32 $0))
	if ( (*($2 + [256]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($4 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [352])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [352])
}

int_32 .FUNC $295 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $308($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $7($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $56($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $56($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $51($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $9($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $294 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $52(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $52(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $297 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [24])) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [40])) = *($2 + [8])
	*($5) = (*($5) + [8])
	*($2 + [8]) = $4
	CALL $394(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $296 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $295(*($1), *($0 + [4]))
	CALL $295(*($1), *($0 + [8]))
	CALL $295(*($1), *($0 + [12]))
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	CALL $396(*($1), *($0 + [20]))
	CALL $396(*($1), *($0 + [24]))
	CALL $396(*($1), *($0 + [28]))
	CALL $396(*($1), *($0 + [32]))
	CALL $396(*($1), *($0 + [36]))
	$2 = *($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [44])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [48])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [52])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [56])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [60])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [64])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [15011])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [68])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [15011])
	$4 = *(($3 + [4]))
	
.LABEL $label$10
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [72])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$11 }
	CALL eosio_assert([0], [15011])
	$4 = *(($3 + [4]))
	
.LABEL $label$11
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [76])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$12 }
	CALL eosio_assert([0], [15011])
	$1 = *(($0 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

int_32 .FUNC $291 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	$3 = ($global$0 - [1360])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [1176]))) = (int_64)0
	*(($8 = ($4 + [1192]))) = (int_64)0
	*(($9 = ($4 + [1208]))) = (int_64)0
	*($4 + [1152]) = (int_64)0
	*($4 + [1144]) = (int_64)0
	*($4 + [1160]) = (int_64)0
	*($4 + [1168]) = (int_64)0
	*($4 + [1184]) = (int_64)0
	*($4 + [1200]) = (int_64)0
	*($4 + [1132]) = $2
	*($4 + [1128]) = $2
	*($4 + [1136]) = ($2 + $7)
	*($4 + [1344]) = ($4 + [1128])
	*($4 + [88]) = ($4 + [1144])
	CALL $300(($4 + [88]), ($4 + [1344]))
	$10 = *($4 + [1136])
	*((($4 + [72]) + [8])) = $10
	*((($4 + [56]) + [8])) = $10
	$11 = *($4 + [1128])
	*($4 + [56]) = $11
	*($4 + [72]) = $11
	$10 = CALL $123(($4 + [88]), $0, $1, ($4 + [56]))
	*(($12 = (($4 + [1248]) + [8]))) = *($3)
	*(($3 = (($4 + [1232]) + [8]))) = *($8)
	*(($8 = (($4 + [1216]) + [8]))) = *($9)
	*($4 + [1248]) = *($4 + [1168])
	*($4 + [1232]) = *($4 + [1184])
	*($4 + [1216]) = *($4 + [1200])
	$0 = *($4 + [1160])
	$1 = *($4 + [1152])
	$11 = *($4 + [1144])
	*((($4 + [1296]) + [8])) = *($8)
	*((($4 + [1280]) + [8])) = *($3)
	*((($4 + [1264]) + [8])) = *($12)
	*($4 + [1296]) = *($4 + [1216])
	*($4 + [1280]) = *($4 + [1232])
	*($4 + [1264]) = *($4 + [1248])
	$3 = (($4 + [88]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$13 = *((($4 + [1264]) + [8]))
	*((($4 + [1344]) + [8])) = $13
	$14 = *((($4 + [1280]) + [8]))
	*((($4 + [1328]) + [8])) = $14
	$15 = *((($4 + [1296]) + [8]))
	*((($4 + [1312]) + [8])) = $15
	*((($4 + [40]) + [8])) = $13
	*((($4 + [24]) + [8])) = $14
	*((($4 + [8]) + [8])) = $15
	$13 = *($4 + [1264])
	*($4 + [1344]) = $13
	$14 = *($4 + [1280])
	*($4 + [1328]) = $14
	*($4 + [40]) = $13
	*($4 + [24]) = $14
	$13 = *($4 + [1296])
	*($4 + [8]) = $13
	*($4 + [1312]) = $13
	CALL void $3((int_32 $11), (int_64 $1), (int_64 $0), (int_64 ($4 + [40])), (int_32 ($4 + [24])), (int_32 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	CALL $127($10)
	$global$0 = ($4 + [1360])
	return [1]
}

int_32 .FUNC $290 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [1520])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	CALL memset(($4 + [1096]), [0], [136])
	*(($4 + [1112])) = (int_64)0
	*(($4 + [1120])) = (int_64)0
	*(($4 + [1136])) = [0]
	*(($4 + [1152])) = (int_64)0
	*(($4 + [1160])) = (int_64)0
	*(($4 + [1176])) = (int_64)0
	*(($4 + [1184])) = (int_64)0
	*(($4 + [1200])) = [0]
	*($4 + [1104]) = (int_64)0
	*($4 + [1128]) = (int_64)0
	*($4 + [1144]) = (int_64)0
	*($4 + [1168]) = (int_64)0
	*($4 + [1192]) = (int_64)0
	*($4 + [1232]) = (int_64)0
	*($4 + [1240]) = [0]
	*($4 + [1084]) = $2
	*($4 + [1080]) = $2
	*($4 + [1088]) = ($2 + $7)
	*($4 + [1384]) = ($4 + [1080])
	*($4 + [40]) = ($4 + [1096])
	CALL $305(($4 + [40]), ($4 + [1384]))
	$3 = *($4 + [1088])
	*((($4 + [24]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$8 = *($4 + [1080])
	*($4 + [8]) = $8
	*($4 + [24]) = $8
	$9 = CALL $123(($4 + [40]), $0, $1, ($4 + [8]))
	$10 = (($4 + [40]) + int_32($5 >> [1]))
	$3 = CALL $154(($4 + [1248]), ($4 + [1096]))
	$11 = *($4 + [1240])
	$0 = *($4 + [1232])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($10) + $6))
	
.LABEL $label$4
	$5 = CALL $154(($4 + [1384]), $3)
	CALL void $10((int_32 $5), (int_32 $0), (int_64 $11), (int_32 $6))
	CALL $156($5)
	CALL $156($3)
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $127($9)
	CALL $156(($4 + [1096]))
	$global$0 = ($4 + [1520])
	return [1]
}

void .FUNC $293 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $295(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $292 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [1136])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [1088]) = (int_64)0
	*($4 + [1096]) = (int_64)0
	*($4 + [1076]) = $2
	*($4 + [1072]) = $2
	*($4 + [1080]) = ($2 + $7)
	CALL $295(($4 + [1072]), ($4 + [1088]))
	$3 = ($4 + [1100])
	$8 = *($4 + [1076])
	if ( ((uint_32)(*($4 + [1080]) - $8) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$8 = *($4 + [1076])
	
.LABEL $label$5
	CALL memcpy($3, $8, [4])
	*($4 + [1076]) = (*($4 + [1076]) + [4])
	$8 = *((($4 + [1072]) + [8]))
	*((($4 + [16]) + [8])) = $8
	*(($4 + [8])) = $8
	$9 = *($4 + [1072])
	*($4) = $9
	*($4 + [16]) = $9
	$10 = CALL $123(($4 + [32]), $0, $1, $4)
	$8 = (($4 + [32]) + int_32($5 >> [1]))
	$11 = CALL $52(($4 + [1104]), ($4 + [1088]))
	$3 = *($3)
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($8) + $6))
	
.LABEL $label$6
	$5 = CALL $52(($4 + [1120]), $11)
	CALL void $8((int_32 $5), (int_32 $3), (int_32 $6))
	if ( (*($4 + [1120]) & [1]) ){ goto $label$11 }
	if ( (*($4 + [1104]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $9(*($5 + [8]))
	if ( ((*($4 + [1104]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $9(*($11 + [8]))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ($7 <= [513]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($2)
	
.LABEL $label$7
	CALL $127($10)
	if ( ((*($4 + [1088]) & [1]) == 0) ){ goto $label$12 }
	CALL $9(*(($4 + [1096])))
	
.LABEL $label$12
	$global$0 = ($4 + [1136])
	return [1]
}

void .FUNC $198 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_64 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_64 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_64 $36
	int_64 $37
	int_32 $38
	int_64 $39
	$2 = ($global$0 - [544])
	$global$0 = $2
	$3 = *($0)
	*($2 + [448]) = [13146]
	*($2 + [452]) = CALL $15([13146])
	*($2 + [104]) = *($2 + [448])
	CALL require_auth2($3, *(CALL $99(($2 + [456]), ($2 + [104]))))
	$4 = ($0 + [280])
	$5 = CALL db_lowerbound_i64(*($0 + [280]), *(($0 + [288])), (int_64)-8463262820711136768, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $199($4, $5)
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [13211])
	
.LABEL $label$1
	$5 = CALL db_lowerbound_i64(*(($0 + [280])), *(($0 + [288])), (int_64)-8463262820711136768, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$6 = CALL $199($4, $5)
	if ( (int_64)($1 == 0) ){ goto $label$4 }
	$7 = ($0 + [320])
	$8 = ($2 + [516])
	$9 = ($2 + [168])
	$10 = (($2 + [424]) + [8])
	$11 = (($2 + [112]) + [24])
	$12 = (($2 + [376]) + [16])
	$13 = (($2 + [112]) + [32])
	$14 = (($2 + [312]) | [1])
	$15 = (($2 + [216]) | [1])
	$16 = ($0 + [348])
	$17 = ($0 + [344])
	$18 = ($0 + [328])
	$19 = ($0 + [616])
	$20 = ($0 + [608])
	$21 = ($2 + [508])
	$22 = ($2 + [152])
	$23 = ($2 + [500])
	$24 = ($2 + [492])
	$25 = ($2 + [524])
	$26 = ($2 + [532])
	$27 = ($0 + [72])
	$28 = $1
	
.LOOP $label$6:
	$3 = *($6 + [8])
	$30 = *($16)
	$29 = *($17)
	if ( ((int_32)$29 == (int_32)$30) ){ goto $label$11 }
	
.LOOP $label$13:
	$5 = ($30 + [-24])
	$31 = *($5)
	if ( ((int_64)*($31) == (int_64)$3) ){ goto $label$12 }
	$30 = $5
	if ( ((int_32)$29 != (int_32)$5) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((int_32)$29 == (int_32)$30) ){ goto $label$11 }
	if ( ((int_32)*($31 + [24]) != (int_32)$7) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$5 = CALL db_find_i64(*($7), *($18), (int_64)4344997397894705024, $3)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$8 }
	if ( ((int_32)*(CALL $200($7, $5) + [24]) == (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [14937])
	
.LABEL $label$9
	if ( $6 ){ goto $label$14 }
	CALL eosio_assert([0], [15603])
	
.LABEL $label$14
	$5 = [0]
	$30 = CALL db_next_i64(*($6 + [132]), ($2 + [112]))
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	$5 = CALL $199($4, $30)
	
.LABEL $label$15
	if ( ($5 == 0) ){ goto $label$5 }
	goto $label$7 
	
.LABEL $label$8
	$32 = *(($6 + [8]))
	$3 = *(($6 + [24]))
	$33 = *($6 + [16])
	*((($2 + [376]) + [24])) = *(($6 + [96]))
	*((($2 + [424]) + [16])) = *(($6 + [32]))
	*($10) = $3
	*(($30 = (($2 + [408]) + [8]))) = *(($6 + [64]))
	*((($2 + [376]) + [8])) = *(($6 + [80]))
	*($12) = *(($6 + [88]))
	*($2 + [424]) = $33
	*($2 + [408]) = *($6 + [56])
	*($2 + [376]) = *($6 + [72])
	$3 = *($6 + [40])
	$34 = *($6 + [120])
	$35 = *($6 + [112])
	$36 = *($6 + [104])
	$37 = *(($6 + [48]))
	if ( ((int_64)$37 == (int_64)*($19)) ){ goto $label$16 }
	CALL eosio_assert([0], [15344])
	
.LABEL $label$16
	$33 = (int_64)
	*($20) = $33(*($20) - $3))
	if ( ((int_64)$33 <= (int_64)-4611686018427387904) ){ goto $label$34 }
	if ( ((int_64)$33 >= (int_64)4611686018427387904) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	CALL eosio_assert([0], [15392])
	if ( ((int_64)*($20) < (int_64)4611686018427387904) ){ goto $label$32 }
	
.LABEL $label$33
	CALL eosio_assert([0], [15414])
	if ( ((int_64)$34 == (int_64)4) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	if ( ((int_64)$34 != (int_64)4) ){ goto $label$30 }
	
.LABEL $label$31
	*(($29 = (($2 + [216]) + [8]))) = [0]
	*($2 + [216]) = (int_64)0
	$5 = CALL $15([13231])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$18 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$29 }
	*($2 + [216]) = ($5 << [1])
	$30 = $15
	if ( $5 ){ goto $label$28 }
	*(($30 + $5)) = [0]
	if ( ((int_64)$3 >= (int_64)1) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$30
	*(($31 = (($2 + [312]) + [8]))) = [0]
	*($2 + [312]) = (int_64)0
	$5 = CALL $15([13279])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$17 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$25 }
	*($2 + [312]) = ($5 << [1])
	$29 = $14
	if ( $5 ){ goto $label$24 }
	*(($29 + $5)) = [0]
	if ( ((int_64)$3 >= (int_64)1) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$29
	$31 = (($5 + [16]) & [-16])
	$30 = CALL $7($31)
	*($29) = $30
	*($2 + [216]) = ($31 | [1])
	*($2 + [220]) = $5
	
.LABEL $label$28
	CALL memcpy($30, [13231], $5)
	*(($30 + $5)) = [0]
	if ( ((int_64)$3 < (int_64)1) ){ goto $label$26 }
	
.LABEL $label$27
	$33 = *($0)
	*($2 + [360]) = [13263]
	*($2 + [364]) = CALL $15([13263])
	*($2 + [24]) = *($2 + [360])
	CALL $99(($2 + [368]), ($2 + [24]))
	*((($2 + [464]) + [8])) = *($2 + [368])
	*($2 + [464]) = $33
	*($2 + [344]) = [12273]
	*($2 + [348]) = CALL $15([12273])
	*($2 + [16]) = *($2 + [344])
	CALL $99(($2 + [352]), ($2 + [16]))
	*($2 + [328]) = [13270]
	*($2 + [332]) = CALL $15([13270])
	*($2 + [8]) = *($2 + [328])
	CALL $99(($2 + [336]), ($2 + [8]))
	*((($2 + [112]) + [8])) = $32
	*((($2 + [112]) + [16])) = $3
	*($11) = $37
	*($2 + [112]) = *($0)
	CALL $52($13, ($2 + [216]))
	CALL $168(CALL $167(($2 + [480]), ($2 + [464]), *($2 + [352]), *($2 + [336]), ($2 + [112])))
	$5 = *($21)
	if ( ($5 == 0) ){ goto $label$35 }
	*((($2 + [480]) + [32])) = $5
	CALL $9($5)
	
.LABEL $label$35
	$5 = *((($2 + [480]) + [16]))
	if ( ($5 == 0) ){ goto $label$36 }
	*($23) = $5
	CALL $9($5)
	
.LABEL $label$36
	if ( ((*($13) & [1]) == 0) ){ goto $label$26 }
	CALL $9(*($22))
	
.LABEL $label$26
	if ( ((*($2 + [216]) & [1]) == 0) ){ goto $label$21 }
	CALL $9(*($29))
	if ( ($6 == 0) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$25
	$38 = (($5 + [16]) & [-16])
	$29 = CALL $7($38)
	*($31) = $29
	*($2 + [312]) = ($38 | [1])
	*($2 + [316]) = $5
	
.LABEL $label$24
	CALL memcpy($29, [13279], $5)
	*(($29 + $5)) = [0]
	if ( ((int_64)$3 < (int_64)1) ){ goto $label$22 }
	
.LABEL $label$23
	$33 = *($0)
	*($2 + [296]) = [13263]
	*($2 + [300]) = CALL $15([13263])
	*($2 + [96]) = *($2 + [296])
	CALL $99(($2 + [304]), ($2 + [96]))
	*((($2 + [464]) + [8])) = *($2 + [304])
	*($2 + [464]) = $33
	*($2 + [280]) = [12273]
	*($2 + [284]) = CALL $15([12273])
	*($2 + [88]) = *($2 + [280])
	CALL $99(($2 + [288]), ($2 + [88]))
	*($2 + [264]) = [13270]
	*($2 + [268]) = CALL $15([13270])
	*($2 + [80]) = *($2 + [264])
	CALL $99(($2 + [272]), ($2 + [80]))
	*((($2 + [112]) + [8])) = $32
	*((($2 + [112]) + [16])) = $3
	*($11) = $37
	*($2 + [112]) = *($0)
	CALL $52($13, ($2 + [312]))
	CALL $168(CALL $167(($2 + [480]), ($2 + [464]), *($2 + [288]), *($2 + [272]), ($2 + [112])))
	$5 = *($21)
	if ( ($5 == 0) ){ goto $label$37 }
	*((($2 + [480]) + [32])) = $5
	CALL $9($5)
	
.LABEL $label$37
	$5 = *((($2 + [480]) + [16]))
	if ( ($5 == 0) ){ goto $label$38 }
	*($23) = $5
	CALL $9($5)
	
.LABEL $label$38
	if ( ((*($13) & [1]) == 0) ){ goto $label$22 }
	CALL $9(*($22))
	
.LABEL $label$22
	$34 = *($30)
	*((($2 + [248]) + [8])) = $34
	$39 = *(($12 + [8]))
	*((($2 + [232]) + [8])) = $39
	$33 = *($12)
	*((($2 + [64]) + [8])) = $34
	*((($2 + [48]) + [8])) = $39
	$34 = *($2 + [408])
	*($2 + [248]) = $34
	*($2 + [232]) = $33
	*($2 + [64]) = $34
	*($2 + [48]) = $33
	CALL $201($0, $32, $3, ($2 + [64]), ($2 + [48]))
	$33 = *($0)
	*($2 + [200]) = [13263]
	*($2 + [204]) = CALL $15([13263])
	*($2 + [40]) = *($2 + [200])
	CALL $99(($2 + [208]), ($2 + [40]))
	*((($2 + [216]) + [8])) = *($2 + [208])
	*($2 + [216]) = $33
	*($2 + [184]) = [13317]
	*($2 + [188]) = CALL $15([13317])
	*($2 + [32]) = *($2 + [184])
	$5 = CALL $99(($2 + [192]), ($2 + [32]))
	*((($2 + [112]) + [8])) = $35
	*((($2 + [112]) + [16])) = $32
	*($22) = $3
	*((($2 + [112]) + [48])) = $37
	*($11) = *($10)
	*(($11 + [8])) = *(($10 + [8]))
	*($9) = *($2 + [408])
	*(($9 + [8])) = *($30)
	*($2 + [112]) = $36
	$3 = CALL $86()
	*($24) = [0]
	*((($2 + [480]) + [16])) = [0]
	*($23) = (int_64)0
	*($21) = (int_64)0
	*($8) = (int_64)0
	*($25) = (int_64)0
	*($26) = (int_64)0
	*($2 + [480]) = ((CASTING uint_32)(uint_64 ((int_64)$3 / (int_64)1000000)) + [60])
	CALL $202($8, ($2 + [216]), $0, $5, ($2 + [112]))
	$3 = ((int_64)*($27) + (int_64)1)
	*($27) = $3
	$32 = CALL $86()
	*($2 + [464]) = $32
	*($2 + [472]) = ((int_64)$3 | (int_64)$32 >> (int_64)63))
	CALL $171(($2 + [480]), ($2 + [464]), *($0), [0])
	CALL $172(($2 + [480]))
	if ( ((*($2 + [312]) & [1]) == 0) ){ goto $label$21 }
	CALL $9(*($31))
	
.LABEL $label$21
	if ( $6 ){ goto $label$19 }
	
.LABEL $label$20
	CALL eosio_assert([0], [15569])
	CALL eosio_assert([0], [15603])
	
.LABEL $label$19
	$5 = [0]
	$30 = CALL db_next_i64(*($6 + [132]), ($2 + [112]))
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$39 }
	$5 = CALL $199($4, $30)
	
.LABEL $label$39
	CALL $203($4, $6)
	$28 = ((int_64)$28 + (int_64)-1)
	if ( $5 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$18
	CALL $51(($2 + [216]))
	
.LABEL $label$17
	CALL $51(($2 + [312]))
	
.LABEL $label$7
	$6 = $5
	if ( ((int_64)$28 != (int_64)0) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ((int_64)$28 != (int_64)$1) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [13328])
	
.LABEL $label$3
	$global$0 = ($2 + [544])
	(unreachable)
	(unreachable)
}

void .FUNC $349 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $348 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [4])
	$4 = ($0 + [8])
	$5 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$1
	CALL memcpy($1, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [8])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$2
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [16])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [24])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [32])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [40])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [48])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$7
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [56])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [64])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$9
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$10
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [72])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [80])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$11
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$12
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [88])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [96])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$13
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$14
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [104])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [112])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$15
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$16
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [120])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [128])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$17
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$18
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [136])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [144])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$19
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$20 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$20
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [152])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [160])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$21 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$21
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$22 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$22
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [168])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [176])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$23 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$23
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$24 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$24
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [184])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [192])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$25 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$25
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$26 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$26
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [200])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [208])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$27 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$27
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$28 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$28
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [216])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [224])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$29 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$29
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$30 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$30
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [232])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [240])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$31 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$31
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$32 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$32
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [248])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [256])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$33 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$33
	CALL memcpy($6, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$34 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$34
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [264])) = *($2 + [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($1 + [272])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[3]) ){ goto $label$35 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$35
	CALL memcpy($6, $5, [4])
	$5 = (*($3) + [4])
	*($3) = $5
	$6 = ($1 + [276])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[3]) ){ goto $label$36 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$36
	CALL memcpy($6, $5, [4])
	$5 = (*($3) + [4])
	*($3) = $5
	$1 = ($1 + [280])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[3]) ){ goto $label$37 }
	CALL eosio_assert([0], [15011])
	$5 = *($3)
	
.LABEL $label$37
	CALL memcpy($1, $5, [4])
	*(($3 = ($0 + [4]))) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $347 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $346 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $82($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [64]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [72])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $9($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $345 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15011])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [16])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [32])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $4, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [52])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [15011])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($5, $4, [4])
	$4 = (*($3) + [4])
	*($3) = $4
	$3 = ($1 + [56])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15011])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $4, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$0 = CALL $295($0, ($1 + [64]))
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $212 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$2 = ($global$0 - [272])
	$global$0 = $2
	$3 = *($0)
	*($2 + [256]) = [13146]
	*($2 + [260]) = CALL $15([13146])
	*($2 + [48]) = *($2 + [256])
	CALL require_auth2($3, *(CALL $99(($2 + [264]), ($2 + [48]))))
	$4 = ($0 + [320])
	$6 = *(($0 + [348]))
	$5 = *(($0 + [344]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [24]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [14937])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [328])), (int_64)4344997397894705024, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $200($4, $7)
	if ( ((int_32)*($8 + [24]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [14937])
	goto $label$1 
	
.LABEL $label$5
	CALL eosio_assert([0], [13374])
	
.LABEL $label$1
	$9 = *(($8 + [16]))
	$3 = *($0)
	$10 = *($8 + [8])
	if ( $8 ){ goto $label$6 }
	CALL eosio_assert([0], [15096])
	
.LABEL $label$6
	CALL $213($4, $8, $3)
	$7 = CALL $15([12285])
	if ( ($7 <= [8]) ){ goto $label$10 }
	CALL eosio_assert([0], [14622])
	goto $label$9 
	
.LABEL $label$10
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	$3 = (int_64)0
	
.LOOP $label$11:
	$6 = *(($7 + [12284]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$12 }
	CALL eosio_assert([0], [14667])
	
.LABEL $label$12
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$11 }
	$11 = ((int_64)$3 << (int_64)8)
	goto $label$7 
	
.LABEL $label$8
	$11 = (int_64)0
	
.LABEL $label$7
	$3 = (uint_64)$11 >> (uint_64)(int_64)8)
	$12 = ((int_64)$11 | (int_64)4)
	$7 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$11 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$16 }
	$3 = $11
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$16
	$3 = $11
	
.LOOP $label$17:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$14 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $6 ){ goto $label$17 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	CALL eosio_assert([0], [14769])
	
.LABEL $label$13
	$7 = CALL db_lowerbound_i64(*($0 + [280]), *(($0 + [288])), (int_64)-8463262820711136768, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$20 }
	$5 = ($0 + [280])
	$7 = CALL $199($5, $7)
	$3 = (int_64)0
	$13 = ($0 + [616])
	$8 = ($0 + [608])
	
.LOOP $label$22:
	if ( ((int_64)*($7 + [8]) != (int_64)$1) ){ goto $label$28 }
	$6 = ($7 + [48])
	if ( ((int_64)*($6) == (int_64)*($13)) ){ goto $label$29 }
	CALL eosio_assert([0], [15344])
	
.LABEL $label$29
	$11 = (int_64)
	*($8) = $11(*($8) - *($7 + [40])))
	if ( ((int_64)$11 <= (int_64)-4611686018427387904) ){ goto $label$27 }
	if ( ((int_64)$11 >= (int_64)4611686018427387904) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$6 = *($7 + [132])
	$7 = [0]
	$6 = CALL db_next_i64($6, ($2 + [88]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$30 }
	$7 = CALL $199($5, $6)
	
.LABEL $label$30
	if ( $7 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$27
	CALL eosio_assert([0], [15392])
	if ( ((int_64)*($8) < (int_64)4611686018427387904) ){ goto $label$25 }
	
.LABEL $label$26
	CALL eosio_assert([0], [15414])
	if ( ((int_64)*($6) != (int_64)$9) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	if ( ((int_64)*($6) == (int_64)$9) ){ goto $label$23 }
	
.LABEL $label$24
	CALL eosio_assert([0], [15016])
	
.LABEL $label$23
	$10 = ((int_64)*(($7 + [40])) + (int_64)$10)
	if ( ((int_64)$10 <= (int_64)-4611686018427387904) ){ goto $label$39 }
	if ( ((int_64)$10 >= (int_64)4611686018427387904) ){ goto $label$38 }
	if ( ((int_64)*(($7 + [64])) != (int_64)$12) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$39
	CALL eosio_assert([0], [15059])
	if ( ((int_64)*(($7 + [64])) == (int_64)$12) ){ goto $label$36 }
	goto $label$37 
	
.LABEL $label$38
	CALL eosio_assert([0], [15078])
	if ( ((int_64)*(($7 + [64])) == (int_64)$12) ){ goto $label$36 }
	
.LABEL $label$37
	CALL eosio_assert([0], [15016])
	$3 = ((int_64)*($7 + [56]) + (int_64)$3)
	if ( ((int_64)$3 > (int_64)-4611686018427387904) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	$3 = ((int_64)*($7 + [56]) + (int_64)$3)
	if ( ((int_64)$3 <= (int_64)-4611686018427387904) ){ goto $label$34 }
	
.LABEL $label$35
	if ( ((int_64)$3 < (int_64)4611686018427387904) ){ goto $label$33 }
	CALL eosio_assert([0], [15078])
	if ( ($7 == 0) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	CALL eosio_assert([0], [15059])
	
.LABEL $label$33
	if ( $7 ){ goto $label$31 }
	
.LABEL $label$32
	CALL eosio_assert([0], [15569])
	CALL eosio_assert([0], [15603])
	
.LABEL $label$31
	$6 = [0]
	$4 = CALL db_next_i64(*($7 + [132]), ($2 + [88]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$40 }
	$6 = CALL $199($5, $4)
	
.LABEL $label$40
	CALL $203($5, $7)
	$7 = $6
	if ( $6 ){ goto $label$22 }
	
.LABEL $label$21
	if ( ((int_64)$10 <= (int_64)0) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$3 = (int_64)0
	if ( ((int_64)$10 > (int_64)0) ){ goto $label$18 }
	
.LABEL $label$19
	CALL eosio_assert([0], [13409])
	
.LABEL $label$18
	*(($2 + [248])) = [0]
	*($2 + [240]) = (int_64)0
	$7 = CALL $15([13428])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$42 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$45 }
	*($2 + [240]) = ($7 << [1])
	$6 = (($2 + [240]) | [1])
	if ( $7 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$45
	$8 = (($7 + [16]) & [-16])
	$6 = CALL $7($8)
	*($2 + [240]) = ($8 | [1])
	*($2 + [248]) = $6
	*($2 + [244]) = $7
	
.LABEL $label$44
	CALL memcpy($6, [13428], $7)
	
.LABEL $label$43
	*(($6 + $7)) = [0]
	$11 = *($0)
	*($2 + [168]) = [13263]
	*($2 + [172]) = CALL $15([13263])
	*($2 + [40]) = *($2 + [168])
	$7 = CALL $99(($2 + [176]), ($2 + [40]))
	*($2 + [184]) = $11
	*($2 + [192]) = *($7)
	*($2 + [152]) = [12273]
	*($2 + [156]) = CALL $15([12273])
	*($2 + [32]) = *($2 + [152])
	$7 = CALL $99(($2 + [160]), ($2 + [32]))
	*($2 + [136]) = [13270]
	*($2 + [140]) = CALL $15([13270])
	*($2 + [24]) = *($2 + [136])
	$6 = CALL $99(($2 + [144]), ($2 + [24]))
	*(($2 + [112])) = $9
	*($2 + [96]) = $1
	*($2 + [104]) = $10
	*($2 + [88]) = *($0)
	CALL $52((($2 + [88]) + [32]), ($2 + [240]))
	$7 = CALL $167(($2 + [200]), ($2 + [184]), *($7), *($6), ($2 + [88]))
	CALL $168($7)
	$6 = *($7 + [28])
	if ( ($6 == 0) ){ goto $label$46 }
	*(($7 + [32])) = $6
	CALL $9($6)
	
.LABEL $label$46
	$6 = *($7 + [16])
	if ( ($6 == 0) ){ goto $label$47 }
	*(($7 + [20])) = $6
	CALL $9($6)
	
.LABEL $label$47
	if ( ((*($2 + [120]) & [1]) == 0) ){ goto $label$48 }
	CALL $9(*(($2 + [128])))
	
.LABEL $label$48
	if ( ((int_64)$3 <= (int_64)0) ){ goto $label$49 }
	*(($2 + [64])) = [0]
	*($2 + [80]) = $12
	*($2 + [72]) = $3
	*($2 + [56]) = (int_64)0
	$7 = CALL $15([11180])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$41 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$52 }
	*($2 + [56]) = ($7 << [1])
	$6 = (($2 + [56]) | [1])
	if ( $7 ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$52
	$8 = (($7 + [16]) & [-16])
	$6 = CALL $7($8)
	*($2 + [56]) = ($8 | [1])
	*($2 + [64]) = $6
	*($2 + [60]) = $7
	
.LABEL $label$51
	CALL memcpy($6, [11180], $7)
	
.LABEL $label$50
	*(($6 + $7)) = [0]
	*((($2 + [8]) + [8])) = *((($2 + [72]) + [8]))
	*($2 + [8]) = *($2 + [72])
	CALL $207($0, $1, ($2 + [8]), ($2 + [56]))
	if ( ((*($2 + [56]) & [1]) == 0) ){ goto $label$49 }
	CALL $9(*($2 + [64]))
	
.LABEL $label$49
	if ( ((*($2 + [240]) & [1]) == 0) ){ goto $label$53 }
	CALL $9(*($2 + [248]))
	
.LABEL $label$53
	$global$0 = ($2 + [272])
	return (unreachable)
	
.LABEL $label$42
	CALL $51(($2 + [240]))
	
.LABEL $label$41
	CALL $51(($2 + [56]))
	(unreachable)
}

void .FUNC $343 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [48])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($6, $4, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = *(($3 + [56]))
	if ( ((int_32)(*(($5 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [8])
	*($6) = (*($6) + [8])
	$0 = *($0)
	$4 = ($0 + [64])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$6 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $4, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = *(($0 + [72]))
	if ( ((int_32)(*(($5 + [8])) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$4 = *($6)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [8]), [8])
	*($6) = (*($6) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $342 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [15287])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $335($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

int_32 .FUNC $341 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [15287])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [15287])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $340 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *(($0 + [16]))
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15287])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = ($0 + [24])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $1) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15287])
	$1 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $5, [8])
	$1 = (*($1) + [8])
	*(($1 = ($4 + [4]))) = $1
	*($2 + [8]) = *(($0 + [32]))
	if ( ((int_32)(*(($4 + [8])) - $1) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15287])
	$1 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL $37($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $283 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [1088])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [1080]) = (int_64)0
	*($4 + [1072]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [1072]) + [8])
	CALL memcpy(($4 + [1072]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [8])) = $3
	*($4 + [16]) = $2
	*($4 + [20]) = ($2 + [16])
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $123(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *((($4 + [1072]) + [8]))
	$1 = *($4 + [1072])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $2($2)
	
.LABEL $label$8
	CALL $127($8)
	$global$0 = ($4 + [1088])
	return [1]
}

int_32 .FUNC $36 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $32([2], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

int_32 .FUNC $37 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL $4()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL $4()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $34 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

void .FUNC $35 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

int_32 .FUNC $32 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [1] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $34($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $34($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $34($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $34($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [8656]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $34($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $34($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $34($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

int_32 .FUNC $280 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [1088])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [1080]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15011])
	
.LABEL $label$5
	CALL memcpy(($4 + [1080]), $2, [8])
	*((($4 + [8]) + [8])) = $3
	*($4 + [28]) = ($2 + [8])
	*($4 + [24]) = $2
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$8 = CALL $123(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *($4 + [1080])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	CALL $127($8)
	$global$0 = ($4 + [1088])
	return [1]
}

int_64 .FUNC $30 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [4]) = $0
	*($3 + [44]) = $0
	*($3) = [0]
	*($3 + [76]) = [-1]
	*($3 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL $26($3, (int_64)0)
	$4 = CALL $28($3, $2, [1], (int_64)-9223372036854775808)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + ((*($3 + [4]) + *($3 + [120])) - *(($3 + [8]))))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return $4
}

int_32 .FUNC $31 (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [2] ? [3] : (int_64)(((int_64)$2 | (int_64)$0) == 0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

int_32 .FUNC $281 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [1136])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [1096]) = [0]
	*($4 + [1088]) = (int_64)0
	*($4 + [1076]) = $2
	*($4 + [1072]) = $2
	*($4 + [1080]) = ($2 + $7)
	CALL $295(($4 + [1072]), ($4 + [1088]))
	$3 = *($4 + [1080])
	*((($4 + [16]) + [8])) = $3
	*(($4 + [8])) = $3
	$8 = *($4 + [1072])
	*($4) = $8
	*($4 + [16]) = $8
	$9 = CALL $123(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$10 = CALL $52(($4 + [1104]), ($4 + [1088]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$5 = CALL $52(($4 + [1120]), $10)
	CALL void $3((int_32 $5), (int_32 $6))
	if ( (*($4 + [1120]) & [1]) ){ goto $label$9 }
	if ( (*($4 + [1104]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*($5 + [8]))
	if ( ((*($4 + [1104]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*($10 + [8]))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ($7 <= [513]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $2($2)
	
.LABEL $label$5
	CALL $127($9)
	if ( ((*($4 + [1088]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($4 + [1096])))
	
.LABEL $label$10
	$global$0 = ($4 + [1136])
	return [1]
}