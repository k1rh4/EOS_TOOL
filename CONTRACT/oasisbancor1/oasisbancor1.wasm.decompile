(data (i32.const 8192) "poker_1_a\00")
(data (i32.const 8202) "poker_2_a\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 8298) "poker_3_a\00")
(data (i32.const 8308) "poker_4_a\00")
(data (i32.const 8318) "poker_1_2\00")
(data (i32.const 8328) "poker_2_2\00")
(data (i32.const 8338) "poker_3_2\00")
(data (i32.const 8348) "poker_4_2\00")
(data (i32.const 8358) "poker_1_3\00")
(data (i32.const 8368) "poker_2_3\00")
(data (i32.const 8378) "poker_3_3\00")
(data (i32.const 8388) "poker_4_3\00")
(data (i32.const 8398) "poker_1_4\00")
(data (i32.const 8408) "poker_2_4\00")
(data (i32.const 8418) "poker_3_4\00")
(data (i32.const 8428) "poker_4_4\00")
(data (i32.const 8438) "poker_1_5\00")
(data (i32.const 8448) "poker_2_5\00")
(data (i32.const 8458) "poker_3_5\00")
(data (i32.const 8468) "poker_4_5\00")
(data (i32.const 8478) "poker_1_6\00")
(data (i32.const 8488) "poker_2_6\00")
(data (i32.const 8498) "poker_3_6\00")
(data (i32.const 8508) "poker_4_6\00")
(data (i32.const 8518) "poker_1_7\00")
(data (i32.const 8528) "poker_2_7\00")
(data (i32.const 8538) "poker_3_7\00")
(data (i32.const 8548) "poker_4_7\00")
(data (i32.const 8558) "poker_1_8\00")
(data (i32.const 8568) "poker_2_8\00")
(data (i32.const 8578) "poker_3_8\00")
(data (i32.const 8588) "poker_4_8\00")
(data (i32.const 8598) "poker_1_9\00")
(data (i32.const 8608) "poker_2_9\00")
(data (i32.const 8618) "poker_3_9\00")
(data (i32.const 8628) "poker_4_9\00")
(data (i32.const 8638) "poker_1_10\00")
(data (i32.const 8649) "poker_2_10\00")
(data (i32.const 8660) "poker_3_10\00")
(data (i32.const 8671) "poker_4_10\00")
(data (i32.const 8682) "poker_1_j\00")
(data (i32.const 8692) "poker_2_j\00")
(data (i32.const 8702) "poker_3_j\00")
(data (i32.const 8712) "poker_4_j\00")
(data (i32.const 8722) "poker_1_q\00")
(data (i32.const 8732) "poker_2_q\00")
(data (i32.const 8742) "poker_3_q\00")
(data (i32.const 8752) "poker_4_q\00")
(data (i32.const 8762) "poker_1_k\00")
(data (i32.const 8772) "poker_2_k\00")
(data (i32.const 8782) "poker_3_k\00")
(data (i32.const 8792) "poker_4_k\00")
(data (i32.const 8802) "poker_joker_s\00")
(data (i32.const 8816) "poker_joker_b\00")
(data (i32.const 8830) "000\00")
(data (i32.const 8834) "100\00")
(data (i32.const 8838) "200\00")
(data (i32.const 8842) "300\00")
(data (i32.const 8846) "400\00")
(data (i32.const 8850) "010\00")
(data (i32.const 8854) "110\00")
(data (i32.const 8858) "210\00")
(data (i32.const 8862) "310\00")
(data (i32.const 8866) "410\00")
(data (i32.const 8870) "001\00")
(data (i32.const 8874) "101\00")
(data (i32.const 8878) "201\00")
(data (i32.const 8882) "301\00")
(data (i32.const 8886) "401\00")
(data (i32.const 8890) "011\00")
(data (i32.const 8894) "111\00")
(data (i32.const 8898) "211\00")
(data (i32.const 8902) "311\00")
(data (i32.const 8906) "411\00")
(data (i32.const 8910) "unfind dy settingid\00")
(data (i32.const 8930) "not found accessControl\00")
(data (i32.const 8954) "account does not exist\00")
(data (i32.const 8977) "accessControl not found \00")
(data (i32.const 9002) "symbol.precision error 4\00")
(data (i32.const 9027) "user1 account does not exist\00")
(data (i32.const 9056) "user2 account does not exist\00")
(data (i32.const 9085) "user3 account does not exist\00")
(data (i32.const 9114) "user4 account does not exist\00")
(data (i32.const 9143) "user5 account does not exist\00")
(data (i32.const 9172) "user6 account does not exist\00")
(data (i32.const 9201) "user7 account does not exist\00")
(data (i32.const 9230) "user8 account does not exist\00")
(data (i32.const 9259) "user9 account does not exist\00")
(data (i32.const 9288) "gamebet brokerage gameid:\00")
(data (i32.const 9314) "eosio.token\00")
(data (i32.const 9326) "transfer\00")
(data (i32.const 9335) "oasisbancor2\00")
(data (i32.const 9348) "addbancor\00")
(data (i32.const 9359) ":\00")
(data (i32.const 9361) ",\00")
(data (i32.const 9363) "&&\00")
(data (i32.const 9366) "gamebet reward EOS \00")
(data (i32.const 9386) "symbol not found\00")
(data (i32.const 9403) "The quantity must be between 0.1 EOS and 20 EOS\00")
(data (i32.const 9451) "single battle poker brokerage gameid:\00")
(data (i32.const 9489) "addbancor2\00")
(data (i32.const 9500) "single battle poker reward EOS \00")
(data (i32.const 9532) "battle poker brokerage gameid:\00")
(data (i32.const 9563) "addbancor3\00")
(data (i32.const 9574) "battle poker reward EOS \00")
(data (i32.const 9599) "username account does not exist\00")
(data (i32.const 9631) "The quantity must be between 0.1 EOS and 100 EOS\00")
(data (i32.const 9680) "single poker brokerage gameid:\00")
(data (i32.const 9711) "single poker reward EOS \00")
(data (i32.const 9736) "user account does not exist\00")
(data (i32.const 9764) "user not found\00")
(data (i32.const 9779) "point not enough\00")
(data (i32.const 9796) "interval 1 hours\00")
(data (i32.const 9813) "oasiswallet5\00")
(data (i32.const 9826) "luckydraw reward\00")
(data (i32.const 9843) "mined More than one day limit(50000)\00")
(data (i32.const 9880) "miner\00")
(data (i32.const 9886) " \00")
(data (i32.const 9888) "s1\00")
(data (i32.const 9891) " s2\00")
(data (i32.const 9895) " s3\00")
(data (i32.const 9899) " s4:\00")
(data (i32.const 9904) "te\00")
(data (i32.const 9907) "1\00")
(data (i32.const 9909) "battle\00")
(data (i32.const 9916) " share reward ref: \00")
(data (i32.const 9936) "minner transfer amount error\00")
(data (i32.const 9965) "EOS balance :\00")
(data (i32.const 9979) "arpgspecial1\00")
(data (i32.const 9992) "BALANCE DEAL\00")
(data (i32.const 10005) "arpgspecial2\00")
(data (i32.const 10018) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 10082) "0123456789\00")
(data (i32.const 10093) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 10142) "invalid symbol name\00")
(data (i32.const 10162) "write\00")
(data (i32.const 10168) "\bc\'\00\00")
(data (i32.const 10172) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 10205) "main contract closed\00")
(data (i32.const 10226) "no balance object found\00")
(data (i32.const 10250) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 10301) "error reading iterator\00")
(data (i32.const 10324) "read\00")
(data (i32.const 10329) "cannot create objects in table of another contract\00")
(data (i32.const 10380) "cannot pass end iterator to modify\00")
(data (i32.const 10415) "object passed to modify is not in multi_index\00")
(data (i32.const 10461) "cannot modify objects in table of another contract\00")
(data (i32.const 10512) "updater cannot change primary key when modifying an object\00")
(data (i32.const 10571) ".\00")
(data (i32.const 10573) "get\00")
(import "env" "memcpy" (func $fimport$0 (param i32 i32 i32) (result i32)))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "db_find_i64" (func $fimport$2 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$3 (result i64)))
(import "env" "current_time" (func $fimport$4 (result i64)))
(import "env" "db_store_i64" (func $fimport$5 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "is_account" (func $fimport$6 (param i64) (result i32)))
(import "env" "require_auth" (func $fimport$7 (param i64)))
(import "env" "db_update_i64" (func $fimport$8 (param i32 i64 i32 i32)))
(import "env" "send_inline" (func $fimport$9 (param i32 i32)))
(import "env" "tapos_block_num" (func $fimport$10 (result i32)))
(import "env" "tapos_block_prefix" (func $fimport$11 (result i32)))
(import "env" "memset" (func $fimport$12 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$13 (param i32 i32 i32) (result i32)))
(import "env" "sha256" (func $fimport$14 (param i32 i32 i32)))
(import "env" "prints" (func $fimport$15 (param i32)))
(import "env" "prints_l" (func $fimport$16 (param i32 i32)))
(import "env" "action_data_size" (func $fimport$17 (result i32)))
(import "env" "read_action_data" (func $fimport$18 (param i32 i32) (result i32)))
(import "env" "db_get_i64" (func $fimport$19 (param i32 i32 i32) (result i32)))
(import "env" "abort" (func $fimport$20))
(import "env" "printi" (func $fimport$21 (param i64)))
(import "env" "printui" (func $fimport$22 (param i64)))
(import "env" "__unordtf2" (func $fimport$23 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$24 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$25 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$26 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$27 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$28 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$29 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$30 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$31 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$32 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$33 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$34 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$35 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$36 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$37 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$38 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$39 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$40 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$41 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $56))
(export "_ZdlPv" (func $91))
(export "_Znwj" (func $89))
(export "_Znaj" (func $90))
(export "_ZdaPv" (func $92))
(table $0 11 11 anyfunc)
(elem (i32.const 1) $51 $58 $37 $15 $53 $28 $33 $41 $40 $14)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 18988))
(global $global$2 i32 (i32.const 18988))


void .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $99 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL _ZdlPv($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $95 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $97($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $97 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL _ZdlPv($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $114($0)
	
.LABEL $label$1
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC $93 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($0 + [4])
	$0 = *($0 + [4])
	if ( ($0 == 0) ){ goto $label$2 }
	$3 = ($1 + [1])
	$4 = ($1 + [4])
	$5 = ($1 + [8])
	$6 = $2
	
.LOOP $label$3:
	$11 = ($9 <= $10)
	$7 = ($7 & [1])
	$7 = *($0 + [16])
	$10 = ( *(($0 + [20])) ? uint_32($7 >> [1]) : $7 )
	$8 = ($7 & [1])
	$7 = *($1)
	$9 = ( *($4) ? uint_32($7 >> [1]) : $8 )
	$12 = ( $9 ? $10 : $11 )
	if ( ($12 == 0) ){ goto $label$5 }
	$7 = CALL $109(( *(($0 + [24])) ? (($0 + [16]) + [1]) : $7 ), ( *($5) ? $3 : $8 ), $12)
	if ( $7 ){ goto $label$4 }
	
.LABEL $label$5
	$7 = ( [-1] ? $11 : ($10 <= $9) )
	
.LABEL $label$4
	$6 = ( $6 ? $0 : ((int_32)$7 < (int_32)[0]) )
	$0 = *(($0 + (uint_32($7 >> [29]) & [4])))
	if ( $0 ){ goto $label$3 }
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$2 }
	$10 = ($7 & [1])
	$7 = *($1)
	$7 = ( *(($1 + [4])) ? uint_32($7 >> [1]) : $10 )
	$9 = ($0 & [1])
	$0 = *($6 + [16])
	$0 = ( *($6 + [20]) ? uint_32($0 >> [1]) : $9 )
	$8 = ( $0 ? $7 : ($0 <= $7) )
	if ( ($8 == 0) ){ goto $label$6 }
	$9 = CALL $109(( *(($1 + [8])) ? $3 : $10 ), ( *($6 + [24]) ? (($6 + [16]) + [1]) : $9 ), $8)
	if ( ($9 == 0) ){ goto $label$6 }
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$6
	if ( ((uint_32)$7 >= (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = $2
	
.LABEL $label$1
	return $6
}

void .FUNC $49 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $105($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[3]), [10162])
	CALL memcpy(*($3 + [4]), $2, [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[3]), [10162])
	CALL memcpy(*($3 + [4]), $2, [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), $2, [8])
	$4 = (*($3 + [4]) + [8])
	*($3 + [4]) = $4
	CALL eosio_assert(((int_32)(*($3 + [8]) - $4) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), ($2 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0 + [16])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[3]), [10162])
	CALL memcpy(*($3 + [4]), $0, [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
}

void .FUNC $43 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $105($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [10301])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $111($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [10324])
	CALL memcpy($5, $2, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [10324])
	CALL memcpy(($5 + [8]), ($2 + [8]), [4])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $43(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $114($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $41 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	$2 = ($global$0 - [272])
	$global$0 = $2
	CALL eosio_assert(((int_32)*(($0 + [144])) == (int_32)[1]), [10205])
	CALL require_auth(*($0))
	CALL eosio_assert(CALL $fimport$6($1), [9736])
	$3 = CALL tapos_block_num()
	$4 = CALL tapos_block_prefix()
	$5 = [0]
	if ( ((int_64)*([0]) != (int_64)0) ){ goto $label$1 }
	*([0]) = ((int_64)((int_64)(CASTING int_64)(int_32 ((int_32)$4 * (int_32)$3)) + (int_64)$1) + (int_64)CALL current_time())
	
.LABEL $label$1
	*(($2 + [248])) = *([0])
	*($2 + [240]) = *([0])
	$6 = CALL $22(($2 + [240]), [10001])
	CALL eosio_assert([1], [10093])
	$7 = (int_64)5459781
	
.LOOP $label$3:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$7 = $9
	$8 = [1]
	$3 = $5
	$5 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = ((int_32)$5 < (int_32)[6])
	$4 = ($5 + [1])
	$5 = $4
	if ( $3 ){ goto $label$5 }
	$8 = [1]
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$3 }
	
.LABEL $label$2
	CALL eosio_assert($8, [10142])
	if ( ((uint_32)$6 >= (uint_32)[9886]) ){ goto $label$23 }
	CALL eosio_assert([1], [10093])
	$7 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$25 }
	$7 = $9
	$3 = [1]
	$4 = $5
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$24 }
	goto $label$21 
	
.LABEL $label$25
	$7 = $9
	
.LOOP $label$26:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$22 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = ((int_32)$5 < (int_32)[6])
	$4 = ($5 + [1])
	$5 = $4
	if ( $3 ){ goto $label$26 }
	$3 = [1]
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$24 }
	goto $label$21 
	
.LABEL $label$23
	if ( ((uint_32)$6 >= (uint_32)[9986]) ){ goto $label$20 }
	CALL eosio_assert([1], [10093])
	$7 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$27:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$28 }
	$7 = $9
	$3 = [1]
	$4 = $5
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$27 }
	goto $label$18 
	
.LABEL $label$28
	$7 = $9
	
.LOOP $label$29:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$19 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = ((int_32)$5 < (int_32)[6])
	$4 = ($5 + [1])
	$5 = $4
	if ( $3 ){ goto $label$29 }
	$3 = [1]
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$27 }
	goto $label$18 
	
.LABEL $label$22
	$3 = [0]
	
.LABEL $label$21
	CALL eosio_assert($3, [10142])
	$10 = (int_64)5
	goto $label$6 
	
.LABEL $label$20
	if ( ((uint_32)$6 >= (uint_32)[9994]) ){ goto $label$17 }
	CALL eosio_assert([1], [10093])
	$7 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$30:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$31 }
	$7 = $9
	$3 = [1]
	$4 = $5
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$30 }
	goto $label$15 
	
.LABEL $label$31
	$7 = $9
	
.LOOP $label$32:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$16 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = ((int_32)$5 < (int_32)[6])
	$4 = ($5 + [1])
	$5 = $4
	if ( $3 ){ goto $label$32 }
	$3 = [1]
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$30 }
	goto $label$15 
	
.LABEL $label$19
	$3 = [0]
	
.LABEL $label$18
	CALL eosio_assert($3, [10142])
	$10 = (int_64)50
	goto $label$6 
	
.LABEL $label$17
	if ( ((uint_32)$6 >= (uint_32)[9998]) ){ goto $label$14 }
	CALL eosio_assert([1], [10093])
	$7 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$34 }
	$7 = $9
	$3 = [1]
	$4 = $5
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$33 }
	goto $label$12 
	
.LABEL $label$34
	$7 = $9
	
.LOOP $label$35:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$13 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = ((int_32)$5 < (int_32)[6])
	$4 = ($5 + [1])
	$5 = $4
	if ( $3 ){ goto $label$35 }
	$3 = [1]
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$33 }
	goto $label$12 
	
.LABEL $label$16
	$3 = [0]
	
.LABEL $label$15
	CALL eosio_assert($3, [10142])
	$10 = (int_64)500
	goto $label$6 
	
.LABEL $label$14
	if ( ((uint_32)$6 >= (uint_32)[10000]) ){ goto $label$11 }
	CALL eosio_assert([1], [10093])
	$7 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$36:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$37 }
	$7 = $9
	$3 = [1]
	$4 = $5
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$36 }
	goto $label$9 
	
.LABEL $label$37
	$7 = $9
	
.LOOP $label$38:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = ((int_32)$5 < (int_32)[6])
	$4 = ($5 + [1])
	$5 = $4
	if ( $3 ){ goto $label$38 }
	$3 = [1]
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$36 }
	goto $label$9 
	
.LABEL $label$13
	$3 = [0]
	
.LABEL $label$12
	CALL eosio_assert($3, [10142])
	$10 = (int_64)5000
	goto $label$6 
	
.LABEL $label$11
	$10 = (int_64)5
	if ( ((int_32)$6 != (int_32)[10000]) ){ goto $label$6 }
	CALL eosio_assert([1], [10093])
	$7 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$39:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$40 }
	$7 = $9
	$3 = [1]
	$4 = $5
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$39 }
	goto $label$7 
	
.LABEL $label$40
	$7 = $9
	
.LOOP $label$41:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = ((int_32)$5 < (int_32)[6])
	$4 = ($5 + [1])
	$5 = $4
	if ( $3 ){ goto $label$41 }
	$3 = [1]
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$39 }
	goto $label$7 
	
.LABEL $label$10
	$3 = [0]
	
.LABEL $label$9
	CALL eosio_assert($3, [10142])
	$10 = (int_64)50000
	goto $label$6 
	
.LABEL $label$8
	$3 = [0]
	
.LABEL $label$7
	CALL eosio_assert($3, [10142])
	$10 = (int_64)500000
	
.LABEL $label$6
	*((($2 + [200]) + [32])) = [0]
	*($2 + [216]) = (int_64)-1
	*($2 + [224]) = (int_64)0
	$7 = *($0)
	*($2 + [200]) = $7
	*($2 + [208]) = $1
	$5 = CALL db_find_i64($7, $1, (int_64)-3020384829779738624, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$43 }
	CALL eosio_assert(((int_32)*(CALL $42(($2 + [200]), $5) + [16]) == (int_32)($2 + [200])), [10250])
	goto $label$42 
	
.LABEL $label$43
	$9 = *($0)
	CALL eosio_assert(((int_64)*($2 + [200]) == (int_64)CALL $fimport$3()), [10329])
	*(($5 = CALL _Znwj([32])) + [16]) = ($2 + [200])
	*($5) = $1
	*($5 + [8]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert([1], [10162])
	CALL memcpy(($2 + [16]), $5, [8])
	CALL eosio_assert([1], [10162])
	CALL memcpy((($2 + [16]) | [8]), ($5 + [8]), [4])
	$7 = *($5)
	$4 = CALL db_store_i64(*((($2 + [200]) + [8])), (int_64)-3020384829779738624, $9, $7, ($2 + [16]), [12])
	*($5 + [20]) = $4
	$3 = ($2 + [216])
	if ( (uint_64)($7 <= *($3)) ){ goto $label$44 }
	*($3) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$44
	*($2 + [160]) = $5
	$7 = *($5)
	*($2 + [16]) = $7
	*($2 + [120]) = $4
	$8 = ($2 + [228])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($2 + [232]))) ){ goto $label$46 }
	*($3 + [8]) = $7
	*($3 + [16]) = $4
	*($2 + [160]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	$5 = *($2 + [160])
	*($2 + [160]) = [0]
	if ( $5 ){ goto $label$45 }
	goto $label$42 
	
.LABEL $label$46
	CALL $43(($2 + [224]), ($2 + [160]), ($2 + [16]), ($2 + [120]))
	$5 = *($2 + [160])
	*($2 + [160]) = [0]
	if ( ($5 == 0) ){ goto $label$42 }
	
.LABEL $label$45
	CALL _ZdlPv($5)
	
.LABEL $label$42
	*(($2 + [192])) = [0]
	*($2 + [176]) = (int_64)-1
	*($2 + [184]) = (int_64)0
	$7 = *($0)
	*($2 + [160]) = $7
	*($2 + [168]) = $1
	$5 = CALL db_find_i64($7, $1, (int_64)-3020372933462163456, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$48 }
	$5 = CALL $44(($2 + [160]), $5)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($2 + [160])), [10250])
	goto $label$47 
	
.LABEL $label$48
	$9 = *($0)
	CALL eosio_assert(((int_64)*($2 + [160]) == (int_64)CALL $fimport$3()), [10329])
	*(($5 = CALL _Znwj([40])) + [24]) = ($2 + [160])
	*($5) = $1
	*($5 + [8]) = (int_64)1
	$7 = CALL current_time()
	*($5 + [20]) = [0]
	*($5 + [16]) = ((uint_64)$7 / (uint_64)(int_64)1000000)
	*($2 + [88]) = (($2 + [16]) + [24])
	*($2 + [84]) = ($2 + [16])
	*($2 + [80]) = ($2 + [16])
	*($2 + [64]) = ($2 + [80])
	*($2 + [124]) = ($5 + [8])
	*($2 + [120]) = $5
	*($2 + [128]) = ($5 + [12])
	*($2 + [132]) = ($5 + [16])
	*($2 + [136]) = ($5 + [20])
	CALL $45(($2 + [120]), ($2 + [64]))
	$7 = *($5)
	$4 = CALL db_store_i64(*((($2 + [160]) + [8])), (int_64)-3020372933462163456, $9, $7, ($2 + [16]), [24])
	*($5 + [28]) = $4
	$3 = (($2 + [160]) + [16])
	if ( (uint_64)($7 <= *($3)) ){ goto $label$49 }
	*($3) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$49
	*($2 + [120]) = $5
	$7 = *($5)
	*($2 + [16]) = $7
	*($2 + [80]) = $4
	$8 = ($2 + [188])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($2 + [192]))) ){ goto $label$52 }
	*($3 + [8]) = $7
	*($3 + [16]) = $4
	*($2 + [120]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	$5 = *($2 + [120])
	*($2 + [120]) = [0]
	if ( $5 ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$52
	CALL $46(($2 + [184]), ($2 + [120]), ($2 + [16]), ($2 + [80]))
	$5 = *($2 + [120])
	*($2 + [120]) = [0]
	if ( ($5 == 0) ){ goto $label$50 }
	
.LABEL $label$51
	CALL _ZdlPv($5)
	
.LABEL $label$50
	$4 = *(($2 + [188]))
	$8 = *(($2 + [184]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$53 }
	
.LOOP $label$55:
	$3 = ($4 + [-24])
	$5 = *($3)
	if ( ((int_64)*($5) == (int_64)$1) ){ goto $label$54 }
	$4 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$55 }
	goto $label$53 
	
.LABEL $label$54
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$53 }
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($2 + [160])), [10250])
	goto $label$47 
	
.LABEL $label$53
	$5 = [0]
	$3 = CALL db_find_i64(*($2 + [160]), *(($2 + [168])), (int_64)-3020372933462163456, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$47 }
	$5 = CALL $44(($2 + [160]), $3)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($2 + [160])), [10250])
	
.LABEL $label$47
	$3 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($3, [9764])
	if ( ((uint_32)((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [-1541548800]) / (uint_32)[86400]) <= (uint_32)((uint_32)(*($5 + [16]) + [-1541548800]) / (uint_32)[86400])) ){ goto $label$56 }
	CALL eosio_assert($3, [10380])
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($2 + [160])), [10415])
	CALL eosio_assert(((int_64)*($2 + [160]) == (int_64)CALL $fimport$3()), [10461])
	*($5 + [8]) = (int_64)1
	$7 = *($5)
	$9 = CALL current_time()
	*($5 + [20]) = [0]
	*($5 + [16]) = ((uint_64)$9 / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$7 == (int_64)*($5)), [10512])
	*($2 + [88]) = (($2 + [16]) + [24])
	*($2 + [84]) = ($2 + [16])
	*($2 + [80]) = ($2 + [16])
	*($2 + [64]) = ($2 + [80])
	*($2 + [124]) = ($5 + [8])
	*($2 + [120]) = $5
	*($2 + [128]) = ($5 + [12])
	*($2 + [132]) = ($5 + [16])
	*($2 + [136]) = ($5 + [20])
	CALL $45(($2 + [120]), ($2 + [64]))
	CALL db_update_i64(*($5 + [28]), (int_64)0, ($2 + [16]), [24])
	$5 = (($2 + [160]) + [16])
	if ( (uint_64)($7 <= *($5)) ){ goto $label$57 }
	*($5) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$57
	$4 = *(($2 + [188]))
	$8 = *((($2 + [160]) + [24]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$58 }
	
.LOOP $label$60:
	$3 = ($4 + [-24])
	$5 = *($3)
	if ( ((int_64)*($5) == (int_64)$1) ){ goto $label$59 }
	$4 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$60 }
	goto $label$58 
	
.LABEL $label$59
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$58 }
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($2 + [160])), [10250])
	goto $label$56 
	
.LABEL $label$58
	$5 = [0]
	$3 = CALL db_find_i64(*($2 + [160]), *(($2 + [168])), (int_64)-3020372933462163456, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$56 }
	$5 = CALL $44(($2 + [160]), $3)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($2 + [160])), [10250])
	
.LABEL $label$56
	CALL eosio_assert(((uint_32)*($5 + [8]) > (uint_32)*($5 + [12])), [9779])
	if ( (*($5 + [20]) == 0) ){ goto $label$61 }
	if ( (*(($5 + [12])) == 0) ){ goto $label$61 }
	CALL eosio_assert(((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000)) - *(($5 + [20]))) > (uint_32)[3599]), [9796])
	
.LABEL $label$61
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [10380])
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($2 + [160])), [10415])
	CALL eosio_assert(((int_64)*($2 + [160]) == (int_64)CALL $fimport$3()), [10461])
	*($5 + [12]) = (*($5 + [12]) + [1])
	$7 = *($5)
	*($5 + [20]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$7 == (int_64)*($5)), [10512])
	*($2 + [88]) = (($2 + [16]) + [24])
	*($2 + [84]) = ($2 + [16])
	*($2 + [80]) = ($2 + [16])
	*($2 + [64]) = ($2 + [80])
	*($2 + [124]) = ($5 + [8])
	*($2 + [120]) = $5
	*($2 + [128]) = ($5 + [12])
	*($2 + [132]) = ($5 + [16])
	*($2 + [136]) = ($5 + [20])
	CALL $45(($2 + [120]), ($2 + [64]))
	CALL db_update_i64(*($5 + [28]), (int_64)0, ($2 + [16]), [24])
	$5 = (($2 + [160]) + [16])
	if ( (uint_64)($7 <= *($5)) ){ goto $label$62 }
	*($5) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$62
	$11 = ((int_64)1397703936 | (int_64)4)
	*((($2 + [120]) + [32])) = [0]
	*($2 + [136]) = (int_64)-1
	*($2 + [144]) = (int_64)0
	$7 = *($0)
	*($2 + [120]) = $7
	*($2 + [128]) = $1
	$5 = CALL db_find_i64($7, $1, (int_64)5606357913267339264, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$64 }
	$5 = CALL $47(($2 + [120]), $5)
	CALL eosio_assert(((int_32)*($5 + [36]) == (int_32)($2 + [120])), [10250])
	CALL eosio_assert([1], [10380])
	CALL eosio_assert(((int_32)*($5 + [36]) == (int_32)($2 + [120])), [10415])
	CALL eosio_assert(((int_64)*($2 + [120]) == (int_64)CALL $fimport$3()), [10461])
	*($5 + [12]) = $6
	*($5 + [16]) = $10
	*(($5 + [24])) = $11
	*($5 + [8]) = (*($5 + [8]) + [1])
	$7 = *($5)
	*($5 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$7 == (int_64)*($5)), [10512])
	*($2 + [72]) = (($2 + [16]) + [36])
	*($2 + [68]) = ($2 + [16])
	*($2 + [64]) = ($2 + [16])
	*($2 + [256]) = ($2 + [64])
	*($2 + [84]) = ($5 + [8])
	*($2 + [80]) = $5
	*($2 + [88]) = ($5 + [12])
	*($2 + [92]) = ($5 + [16])
	*($2 + [96]) = ($5 + [32])
	CALL $48(($2 + [80]), ($2 + [256]))
	CALL db_update_i64(*($5 + [40]), (int_64)0, ($2 + [16]), [36])
	$5 = (($2 + [120]) + [16])
	if ( (uint_64)($7 <= *($5)) ){ goto $label$63 }
	*($5) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	goto $label$63 
	
.LABEL $label$64
	$12 = *($0)
	CALL eosio_assert(((int_64)*($2 + [120]) == (int_64)CALL $fimport$3()), [10329])
	*(($8 = CALL _Znwj([48])) + [24]) = (int_64)1398362884
	*($8 + [16]) = (int_64)0
	CALL eosio_assert([1], [10093])
	$0 = ($8 + [16])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$67:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$66 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$68 }
	$7 = $9
	$3 = [1]
	$4 = $5
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$67 }
	goto $label$65 
	
.LABEL $label$68
	$7 = $9
	
.LOOP $label$69:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$66 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = ((int_32)$5 < (int_32)[6])
	$4 = ($5 + [1])
	$5 = $4
	if ( $3 ){ goto $label$69 }
	$3 = [1]
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$67 }
	goto $label$65 
	
.LABEL $label$66
	$3 = [0]
	
.LABEL $label$65
	CALL eosio_assert($3, [10142])
	*($8 + [36]) = ($2 + [120])
	*($8 + [12]) = $6
	*($8) = $1
	*(($8 + [16])) = $10
	*(($8 + [24])) = $11
	*($8 + [8]) = (*($8 + [8]) + [1])
	*($8 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($2 + [72]) = (($2 + [16]) + [36])
	*($2 + [68]) = ($2 + [16])
	*($2 + [64]) = ($2 + [16])
	*($2 + [256]) = ($2 + [64])
	*($2 + [84]) = ($8 + [8])
	*($2 + [80]) = $8
	*($2 + [88]) = ($8 + [12])
	*($2 + [92]) = $0
	*($2 + [96]) = ($8 + [32])
	CALL $48(($2 + [80]), ($2 + [256]))
	$7 = *($8)
	$3 = CALL db_store_i64(*((($2 + [120]) + [8])), (int_64)5606357913267339264, $12, $7, ($2 + [16]), [36])
	*($8 + [40]) = $3
	$5 = (($2 + [120]) + [16])
	if ( (uint_64)($7 <= *($5)) ){ goto $label$70 }
	*($5) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$70
	*($2 + [80]) = $8
	$7 = *($8)
	*($2 + [16]) = $7
	*($2 + [64]) = $3
	$4 = ($2 + [148])
	$5 = *($4)
	if ( ((uint_32)$5 >= (uint_32)*((($2 + [120]) + [32]))) ){ goto $label$72 }
	*($5 + [8]) = $7
	*($5 + [16]) = $3
	*($2 + [80]) = [0]
	*($5) = $8
	*($4) = ($5 + [24])
	$5 = *($2 + [80])
	*($2 + [80]) = [0]
	if ( $5 ){ goto $label$71 }
	goto $label$63 
	
.LABEL $label$72
	CALL $49(($2 + [144]), ($2 + [80]), ($2 + [16]), ($2 + [64]))
	$5 = *($2 + [80])
	*($2 + [80]) = [0]
	if ( ($5 == 0) ){ goto $label$63 }
	
.LABEL $label$71
	CALL _ZdlPv($5)
	
.LABEL $label$63
	$7 = (int_64)0
	$9 = (int_64)59
	$5 = [9813]
	$13 = (int_64)0
	
.LOOP $label$73:
	$12 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$74 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$76 }
	$3 = ($3 + [-91])
	goto $label$75 
	
.LABEL $label$76
	$3 = ( ($3 + [-48]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$75
	$12 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $3) & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$74
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)4294967291)
	if ( ((int_64)$9 != (int_64)55834574842) ){ goto $label$73 }
	$7 = (int_64)6
	
.LOOP $label$77:
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)13) ){ goto $label$77 }
	*($2 + [72]) = (int_64)3617214756542218240
	*($2 + [64]) = $13
	$7 = (int_64)0
	$12 = (int_64)59
	$5 = [9314]
	$13 = (int_64)0
	
.LOOP $label$78:
	if ( ((uint_64)$7 > (uint_64)(int_64)10) ){ goto $label$83 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$82 }
	$3 = ($3 + [-91])
	goto $label$81 
	
.LABEL $label$83
	$9 = (int_64)0
	if ( ((int_64)$7 == (int_64)11) ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$82
	$3 = ( ($3 + [-48]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$81
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$80
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$79
	$5 = ($5 + [1])
	$12 = ((int_64)$12 + (int_64)4294967291)
	$13 = ((int_64)$9 | (int_64)$13)
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)13) ){ goto $label$78 }
	$7 = (int_64)0
	$12 = (int_64)59
	$5 = [9326]
	$14 = (int_64)0
	
.LOOP $label$84:
	if ( ((uint_64)$7 > (uint_64)(int_64)7) ){ goto $label$89 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$88 }
	$3 = ($3 + [-91])
	goto $label$87 
	
.LABEL $label$89
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$86 }
	goto $label$85 
	
.LABEL $label$88
	$3 = ( ($3 + [-48]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$87
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$86
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$85
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$14 = ((int_64)$9 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)4294967291)
	if ( ((int_64)$12 != (int_64)55834574842) ){ goto $label$84 }
	$7 = (int_64)0
	$9 = (int_64)59
	$5 = [9813]
	$15 = (int_64)0
	
.LOOP $label$90:
	$12 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$91 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$93 }
	$3 = ($3 + [-91])
	goto $label$92 
	
.LABEL $label$93
	$3 = ( ($3 + [-48]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$92
	$12 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $3) & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$91
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$15 = ((int_64)$12 | (int_64)$15)
	$9 = ((int_64)$9 + (int_64)4294967291)
	if ( ((int_64)$9 != (int_64)55834574842) ){ goto $label$90 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	$5 = CALL $110([9826])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$104 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$107 }
	*($2) = ($5 << [1])
	$3 = ($2 | [1])
	if ( $5 ){ goto $label$106 }
	goto $label$105 
	
.LABEL $label$107
	$4 = (($5 + [16]) & [-16])
	$3 = CALL _Znwj($4)
	*($2) = ($4 | [1])
	*($2 + [8]) = $3
	*($2 + [4]) = $5
	
.LABEL $label$106
	CALL memcpy($3, [9826], $5)
	
.LABEL $label$105
	*(($3 + $5)) = [0]
	*(($2 + [40])) = $11
	$5 = ($2 + [8])
	*(($2 + [56])) = *($5)
	*($5) = [0]
	*($2 + [24]) = $1
	*($2 + [16]) = $15
	*($2 + [32]) = $10
	*($2 + [48]) = *($2)
	*($2) = (int_64)0
	$5 = CALL $17(($2 + [80]), ($2 + [64]), $13, $14, ($2 + [16]))
	CALL $18(($2 + [256]), $5)
	$3 = *($2 + [256])
	CALL send_inline($3, (*($2 + [260]) - $3))
	$3 = *($2 + [256])
	if ( ($3 == 0) ){ goto $label$108 }
	*($2 + [260]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$108
	$3 = *($5 + [28])
	if ( ($3 == 0) ){ goto $label$109 }
	*(($5 + [32])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$109
	$3 = *($5 + [16])
	if ( ($3 == 0) ){ goto $label$110 }
	*(($5 + [20])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$110
	if ( (*(($2 + [48])) & [1]) ){ goto $label$112 }
	if ( (*($2) & [1]) ){ goto $label$111 }
	goto $label$103 
	
.LABEL $label$112
	CALL _ZdlPv(*(($2 + [56])))
	if ( ((*($2) & [1]) == 0) ){ goto $label$103 }
	
.LABEL $label$111
	CALL _ZdlPv(*(($2 + [8])))
	$4 = *($2 + [144])
	if ( $4 ){ goto $label$102 }
	goto $label$101 
	
.LABEL $label$104
	CALL $93($2)
	
.LABEL $label$103
	$4 = *($2 + [144])
	if ( ($4 == 0) ){ goto $label$101 }
	
.LABEL $label$102
	$8 = ($2 + [148])
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$100 }
	
.LOOP $label$113:
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$114 }
	CALL _ZdlPv($3)
	
.LABEL $label$114
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$113 }
	$5 = *(($2 + [144]))
	*($8) = $4
	CALL _ZdlPv($5)
	$4 = *($2 + [184])
	if ( $4 ){ goto $label$99 }
	goto $label$98 
	
.LABEL $label$101
	$4 = *($2 + [184])
	if ( ($4 == 0) ){ goto $label$98 }
	goto $label$99 
	
.LABEL $label$100
	*($8) = $4
	CALL _ZdlPv($4)
	$4 = *($2 + [184])
	if ( ($4 == 0) ){ goto $label$98 }
	
.LABEL $label$99
	$8 = ($2 + [188])
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$115 }
	
.LOOP $label$116:
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$117 }
	CALL _ZdlPv($3)
	
.LABEL $label$117
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$116 }
	$5 = *(($2 + [184]))
	*($8) = $4
	CALL _ZdlPv($5)
	$4 = *($2 + [224])
	if ( $4 ){ goto $label$97 }
	goto $label$96 
	
.LABEL $label$115
	*($8) = $4
	CALL _ZdlPv($4)
	$4 = *($2 + [224])
	if ( $4 ){ goto $label$97 }
	goto $label$96 
	
.LABEL $label$98
	$4 = *($2 + [224])
	if ( ($4 == 0) ){ goto $label$96 }
	
.LABEL $label$97
	$8 = ($2 + [228])
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$95 }
	
.LOOP $label$118:
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$119 }
	CALL _ZdlPv($3)
	
.LABEL $label$119
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$118 }
	$5 = *(($2 + [224]))
	goto $label$94 
	
.LABEL $label$96
	$global$0 = ($2 + [272])
	return 
	
.LABEL $label$95
	$5 = $4
	
.LABEL $label$94
	*($8) = $4
	CALL _ZdlPv($5)
	$global$0 = ($2 + [272])
	(unreachable)
}

void .FUNC $40 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6, int_64 $7, int_64 $8, int_64 $9, int_64 $10, int_64 $11)
{
	int_32 $12
	int_64 $13
	int_64 $14
	$12 = ($global$0 - [32])
	$global$0 = $12
	CALL eosio_assert(((int_32)*(($0 + [144])) == (int_32)[1]), [10205])
	CALL require_auth(*($0))
	$13 = *(($2 + [8]))
	*((($12 + [16]) + [8])) = $13
	$14 = *($2)
	*(($12 + [8])) = $13
	*($12) = $14
	*($12 + [16]) = $14
	CALL $16($0, $1, $12, $3, $4, $5, $6, $7, $8, $9, $10, $11)
	$global$0 = ($12 + [32])
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [10301])
	if ( ($6 <= [513]) ){ goto $label$5 }
	$7 = CALL $111($6)
	goto $label$4 
	
.LABEL $label$5
	$7 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$4
	$8 = ($0 + [24])
	CALL db_get_i64($1, $7, $6)
	*($3 + [20]) = $7
	*($3 + [16]) = $7
	*($3 + [24]) = ($7 + $6)
	*(($9 = CALL _Znwj([48])) + [24]) = (int_64)1398362884
	*($9 + [16]) = (int_64)0
	CALL eosio_assert([1], [10093])
	$10 = ($9 + [16])
	$11 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$12 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$11 = $12
	$4 = [1]
	$2 = $5
	$5 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$11 = $12
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$4 = ((int_32)$5 < (int_32)[6])
	$2 = ($5 + [1])
	$5 = $2
	if ( $4 ){ goto $label$10 }
	$4 = [1]
	$5 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$4 = [0]
	
.LABEL $label$6
	CALL eosio_assert($4, [10142])
	*($9 + [36]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($9 + [8])
	*($3 + [40]) = $9
	*($3 + [48]) = ($9 + [12])
	*($3 + [52]) = $10
	*($3 + [56]) = ($9 + [32])
	CALL $84(($3 + [40]), ($3 + [32]))
	*($9 + [40]) = $1
	*($3 + [32]) = $9
	$11 = *($9)
	*($3 + [40]) = $11
	*($3 + [12]) = $1
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($5 + [8]) = $11
	*($5 + [16]) = $1
	*($3 + [32]) = [0]
	*($5) = $9
	*($4) = ($5 + [24])
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $49($8, ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 <= [513]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $114($7)
	
.LABEL $label$11
	$5 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($5 == 0) ){ goto $label$14 }
	CALL _ZdlPv($5)
	
.LABEL $label$14
	$global$0 = ($3 + [64])
	return $9
}

void .FUNC $46 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $105($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[3]), [10162])
	CALL memcpy(*($3 + [4]), $2, [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[3]), [10162])
	CALL memcpy(*($3 + [4]), $2, [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[3]), [10162])
	CALL memcpy(*($3 + [4]), $2, [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$3 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [10162])
	CALL memcpy(*($0 + [4]), $3, [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

int_32 .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [10301])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $111($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $4)
	*(($5 = CALL _Znwj([40])) + [24]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [12])
	*($3 + [52]) = ($5 + [16])
	*($3 + [56]) = ($5 + [20])
	CALL $83(($3 + [40]), ($3 + [32]))
	*($5 + [28]) = $1
	*($3 + [32]) = $5
	$6 = *($5)
	*($3 + [40]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [32]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $46(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $114($2)
	
.LABEL $label$6
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[3]), [10162])
	CALL memcpy(*($3 + [4]), $2, [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[3]), [10162])
	CALL memcpy(*($3 + [4]), $2, [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[3]), [10162])
	CALL memcpy(*($3 + [4]), $2, [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$2 = *($0 + [16])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[3]), [10162])
	CALL memcpy(*($3 + [4]), $2, [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$3 = *($0 + [20])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [10162])
	CALL memcpy(*($0 + [4]), $3, [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $9 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $105($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $6 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($0 + [4])
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$2 }
	$6 = ($1 + [16])
	$10 = ($9 & [1])
	$9 = *($4)
	$9 = ( *($4 + [4]) ? uint_32($9 >> [1]) : $10 )
	$8 = ($7 & [1])
	$7 = *($1 + [16])
	$7 = ( *($1 + [20]) ? uint_32($7 >> [1]) : $8 )
	$11 = ( $7 ? $9 : ($7 <= $9) )
	if ( ($11 == 0) ){ goto $label$3 }
	$8 = CALL $109(( *($4 + [8]) ? ($4 + [1]) : $10 ), ( *($1 + [24]) ? ($6 + [1]) : $8 ), $11)
	if ( ($8 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((uint_32)$9 >= (uint_32)$7) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)$1) ){ goto $label$9 }
	$9 = *($1)
	if ( ($9 == 0) ){ goto $label$8 }
	
.LOOP $label$10:
	$7 = $9
	$9 = *($7 + [4])
	if ( $9 ){ goto $label$10 }
	goto $label$7 
	
.LABEL $label$9
	$7 = $1
	if ( *($1) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$9 = $1
	
.LOOP $label$11:
	$7 = *($9 + [8])
	$3 = ((int_32)*($7) == (int_32)$9)
	$9 = $7
	if ( $3 ){ goto $label$11 }
	
.LABEL $label$7
	$5 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *(($7 + [20])) ? uint_32($3 >> [1]) : $5 )
	$6 = ($9 & [1])
	$9 = *($4)
	$9 = ( *($4 + [4]) ? uint_32($9 >> [1]) : $6 )
	$8 = ( $9 ? $3 : ($9 <= $3) )
	if ( ($8 == 0) ){ goto $label$13 }
	$6 = CALL $109(( *(($7 + [24])) ? (($7 + [16]) + [1]) : $5 ), ( *($4 + [8]) ? ($4 + [1]) : $6 ), $8)
	if ( ($6 == 0) ){ goto $label$13 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$12 }
	goto $label$4 
	
.LABEL $label$13
	if ( ((uint_32)$3 >= (uint_32)$9) ){ goto $label$4 }
	
.LABEL $label$12
	if ( (*($1) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*($2) = $7
	return ($7 + [4])
	
.LABEL $label$5
	*($2) = $1
	return $1
	
.LABEL $label$4
	return CALL $78($0, $2, $4)
	
.LABEL $label$1
	$10 = ($9 & [1])
	$9 = *(($1 + [16]))
	$9 = ( *(($1 + [20])) ? uint_32($9 >> [1]) : $10 )
	$8 = ($7 & [1])
	$7 = *($4)
	$7 = ( *(($4 + [4])) ? uint_32($7 >> [1]) : $8 )
	$11 = ( $7 ? $9 : ($7 <= $9) )
	if ( ($11 == 0) ){ goto $label$16 }
	$6 = CALL $109(( *($1 + [24]) ? ($6 + [1]) : $10 ), ( *($4 + [8]) ? ($4 + [1]) : $8 ), $11)
	if ( ($6 == 0) ){ goto $label$16 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( ((uint_32)$9 >= (uint_32)$7) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = *($1 + [4])
	if ( ($7 == 0) ){ goto $label$18 }
	
.LOOP $label$19:
	$9 = $7
	$7 = *($9)
	if ( $7 ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	$9 = *($1 + [8])
	if ( ((int_32)*($9) == (int_32)$1) ){ goto $label$17 }
	$3 = ($1 + [8])
	
.LOOP $label$20:
	$7 = *($3)
	$3 = ($7 + [8])
	$9 = *($7 + [8])
	if ( ((int_32)$7 != (int_32)*($9)) ){ goto $label$20 }
	
.LABEL $label$17
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$22 }
	$5 = ($3 & [1])
	$3 = *($4)
	$3 = ( *(($4 + [4])) ? uint_32($3 >> [1]) : $5 )
	$6 = ($7 & [1])
	$7 = *($9 + [16])
	$7 = ( *($9 + [20]) ? uint_32($7 >> [1]) : $6 )
	$8 = ( $7 ? $3 : ($7 <= $3) )
	if ( ($8 == 0) ){ goto $label$23 }
	$6 = CALL $109(( *($4 + [8]) ? ($4 + [1]) : $5 ), ( *($9 + [24]) ? (($9 + [16]) + [1]) : $6 ), $8)
	if ( ($6 == 0) ){ goto $label$23 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	if ( ((uint_32)$3 >= (uint_32)$7) ){ goto $label$21 }
	
.LABEL $label$22
	$7 = ($1 + [4])
	if ( (*($7) == 0) ){ goto $label$24 }
	*($2) = $9
	return $9
	
.LABEL $label$24
	*($2) = $1
	return $7
	
.LABEL $label$21
	return CALL $78($0, $2, $4)
	
.LABEL $label$14
	*($2) = $1
	*($3) = $1
	return $3
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [10301])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $111($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $4)
	*(($5 = CALL _Znwj([48])) + [32]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [4])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [8])
	*($3 + [52]) = ($5 + [16])
	*($3 + [56]) = ($5 + [20])
	*($3 + [60]) = ($5 + [24])
	CALL $80(($3 + [40]), ($3 + [32]))
	*($5 + [36]) = $1
	*($3 + [32]) = $5
	$6 = *($5)
	*($3 + [40]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [32]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $114($2)
	
.LABEL $label$6
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [64])
	return $5
}

int_32 .FUNC $4 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($0 + [4])
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$2 }
	$6 = ($1 + [16])
	$10 = ($9 & [1])
	$9 = *($4)
	$9 = ( *($4 + [4]) ? uint_32($9 >> [1]) : $10 )
	$8 = ($7 & [1])
	$7 = *($1 + [16])
	$7 = ( *($1 + [20]) ? uint_32($7 >> [1]) : $8 )
	$11 = ( $7 ? $9 : ($7 <= $9) )
	if ( ($11 == 0) ){ goto $label$3 }
	$8 = CALL $109(( *($4 + [8]) ? ($4 + [1]) : $10 ), ( *($1 + [24]) ? ($6 + [1]) : $8 ), $11)
	if ( ($8 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((uint_32)$9 >= (uint_32)$7) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)$1) ){ goto $label$9 }
	$9 = *($1)
	if ( ($9 == 0) ){ goto $label$8 }
	
.LOOP $label$10:
	$7 = $9
	$9 = *($7 + [4])
	if ( $9 ){ goto $label$10 }
	goto $label$7 
	
.LABEL $label$9
	$7 = $1
	if ( *($1) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$9 = $1
	
.LOOP $label$11:
	$7 = *($9 + [8])
	$3 = ((int_32)*($7) == (int_32)$9)
	$9 = $7
	if ( $3 ){ goto $label$11 }
	
.LABEL $label$7
	$5 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *(($7 + [20])) ? uint_32($3 >> [1]) : $5 )
	$6 = ($9 & [1])
	$9 = *($4)
	$9 = ( *($4 + [4]) ? uint_32($9 >> [1]) : $6 )
	$8 = ( $9 ? $3 : ($9 <= $3) )
	if ( ($8 == 0) ){ goto $label$13 }
	$6 = CALL $109(( *(($7 + [24])) ? (($7 + [16]) + [1]) : $5 ), ( *($4 + [8]) ? ($4 + [1]) : $6 ), $8)
	if ( ($6 == 0) ){ goto $label$13 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$12 }
	goto $label$4 
	
.LABEL $label$13
	if ( ((uint_32)$3 >= (uint_32)$9) ){ goto $label$4 }
	
.LABEL $label$12
	if ( (*($1) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*($2) = $7
	return ($7 + [4])
	
.LABEL $label$5
	*($2) = $1
	return $1
	
.LABEL $label$4
	return CALL $77($0, $2, $4)
	
.LABEL $label$1
	$10 = ($9 & [1])
	$9 = *(($1 + [16]))
	$9 = ( *(($1 + [20])) ? uint_32($9 >> [1]) : $10 )
	$8 = ($7 & [1])
	$7 = *($4)
	$7 = ( *(($4 + [4])) ? uint_32($7 >> [1]) : $8 )
	$11 = ( $7 ? $9 : ($7 <= $9) )
	if ( ($11 == 0) ){ goto $label$16 }
	$6 = CALL $109(( *($1 + [24]) ? ($6 + [1]) : $10 ), ( *($4 + [8]) ? ($4 + [1]) : $8 ), $11)
	if ( ($6 == 0) ){ goto $label$16 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( ((uint_32)$9 >= (uint_32)$7) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = *($1 + [4])
	if ( ($7 == 0) ){ goto $label$18 }
	
.LOOP $label$19:
	$9 = $7
	$7 = *($9)
	if ( $7 ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	$9 = *($1 + [8])
	if ( ((int_32)*($9) == (int_32)$1) ){ goto $label$17 }
	$3 = ($1 + [8])
	
.LOOP $label$20:
	$7 = *($3)
	$3 = ($7 + [8])
	$9 = *($7 + [8])
	if ( ((int_32)$7 != (int_32)*($9)) ){ goto $label$20 }
	
.LABEL $label$17
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$22 }
	$5 = ($3 & [1])
	$3 = *($4)
	$3 = ( *(($4 + [4])) ? uint_32($3 >> [1]) : $5 )
	$6 = ($7 & [1])
	$7 = *($9 + [16])
	$7 = ( *($9 + [20]) ? uint_32($7 >> [1]) : $6 )
	$8 = ( $7 ? $3 : ($7 <= $3) )
	if ( ($8 == 0) ){ goto $label$23 }
	$6 = CALL $109(( *($4 + [8]) ? ($4 + [1]) : $5 ), ( *($9 + [24]) ? (($9 + [16]) + [1]) : $6 ), $8)
	if ( ($6 == 0) ){ goto $label$23 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	if ( ((uint_32)$3 >= (uint_32)$7) ){ goto $label$21 }
	
.LABEL $label$22
	$7 = ($1 + [4])
	if ( (*($7) == 0) ){ goto $label$24 }
	*($2) = $9
	return $9
	
.LABEL $label$24
	*($2) = $1
	return $7
	
.LABEL $label$21
	return CALL $77($0, $2, $4)
	
.LABEL $label$14
	*($2) = $1
	*($3) = $1
	return $3
}

void .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $2
	if ( $2 ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($1 + [8])
	if ( *($3 + [12]) ){ goto $label$3 }
	$4 = ($3 + [12])
	$2 = *($3 + [8])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$2 }
	if ( *($5 + [12]) ){ goto $label$2 }
	$3 = ($5 + [12])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [12]) ){ goto $label$1 }
	$3 = ($5 + [12])
	
.LABEL $label$5
	*($4) = [1]
	*($2 + [12]) = ((int_32)$2 == (int_32)$0)
	*($3) = [1]
	$1 = $2
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	if ( ((int_32)*($3) != (int_32)$1) ){ goto $label$7 }
	$5 = *($1 + [4])
	*($3) = $5
	if ( ($5 == 0) ){ goto $label$8 }
	*($5 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$8
	*(($5 = ($1 + [8]))) = $2
	*((($0 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$3) ))) = $1
	*($2) = $1
	*(($1 + [4])) = $3
	$4 = ($1 + [12])
	$2 = *($5)
	
.LABEL $label$7
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2 + [4])
	$5 = *($3)
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$9 }
	*($5 + [8]) = $2
	
.LABEL $label$9
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*($3) = $2
	return 
	
.LABEL $label$1
	if ( ((int_32)*($3) == (int_32)$1) ){ goto $label$10 }
	$5 = *($3 + [4])
	$1 = *($5)
	*($3 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$11
	*($5 + [8]) = $2
	*((($1 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($1) == (int_32)$3) ))) = $5
	*($2) = $5
	*($5) = $3
	$4 = ($5 + [12])
	$2 = *($5 + [8])
	
.LABEL $label$10
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2)
	$5 = *($3 + [4])
	*($2) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*(($3 + [4])) = $2
}

void .FUNC $2 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = *($0)
	$3 = ((int_32)(*($0 + [4]) - $2) / (int_32)[12])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$2 = ((int_32)(*($0 + [8]) - $2) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = CALL _Znwj(((int_32)$5 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $105($0)
	
.LABEL $label$1
	$4 = ($2 + ((int_32)$5 * (int_32)[12]))
	$1 = CALL $94(($2 + ((int_32)$3 * (int_32)[12])), $1)
	$6 = ($1 + [12])
	$2 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = ($5 + [-4])
	*(($1 + [-4])) = *($3)
	$5 = ($5 + [-12])
	*(($1 = ($1 + [-12]))) = *($5)
	*($5) = (int_64)0
	*($3) = [0]
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$3 = $2
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($2 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($2 + [-4])))
	
.LABEL $label$10
	$2 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$11 }
	CALL _ZdlPv($3)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $3 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$2 = ($global$0 - [912])
	$global$0 = $2
	*($0) = $1
	*($0 + [8]) = (int_64)4294967307
	*($0 + [16]) = $1
	*($0 + [96]) = $1
	*($0 + [152 align=4]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*(($0 + [32])) = (int_64)-1
	*(($0 + [40])) = (int_64)0
	*(($0 + [48])) = [0]
	*(($0 + [88])) = [1]
	*(($0 + [104])) = (int_64)0
	*(($0 + [112])) = (int_64)-1
	*(($0 + [120])) = (int_64)0
	*(($0 + [128])) = [0]
	*(($0 + [160])) = [0]
	$3 = ($0 + [152])
	$4 = CALL $110([8192])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$163 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$166 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$165 }
	goto $label$164 
	
.LABEL $label$166
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*($0 + [152]) = ($5 | [1])
	*(($0 + [160])) = $3
	*(($0 + [156])) = $4
	
.LABEL $label$165
	CALL memcpy($3, [8192], $4)
	
.LABEL $label$164
	*(($3 + $4)) = [0]
	*(($0 + [172])) = [0]
	*(($3 = ($0 + [164]))) = (int_64)0
	$4 = CALL $110([8202])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$162 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$169 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$168 }
	goto $label$167 
	
.LABEL $label$169
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [164])) = ($5 | [1])
	*(($0 + [172])) = $3
	*(($0 + [168])) = $4
	
.LABEL $label$168
	CALL memcpy($3, [8202], $4)
	
.LABEL $label$167
	*(($3 + $4)) = [0]
	*(($0 + [184])) = [0]
	*(($3 = ($0 + [176]))) = (int_64)0
	$4 = CALL $110([8298])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$161 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$172 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$171 }
	goto $label$170 
	
.LABEL $label$172
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [176])) = ($5 | [1])
	*(($0 + [184])) = $3
	*(($0 + [180])) = $4
	
.LABEL $label$171
	CALL memcpy($3, [8298], $4)
	
.LABEL $label$170
	*(($3 + $4)) = [0]
	*(($0 + [196])) = [0]
	*(($3 = ($0 + [188]))) = (int_64)0
	$4 = CALL $110([8308])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$160 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$175 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$174 }
	goto $label$173 
	
.LABEL $label$175
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [188])) = ($5 | [1])
	*(($0 + [196])) = $3
	*(($0 + [192])) = $4
	
.LABEL $label$174
	CALL memcpy($3, [8308], $4)
	
.LABEL $label$173
	*(($3 + $4)) = [0]
	*(($0 + [208])) = [0]
	*(($3 = ($0 + [200]))) = (int_64)0
	$4 = CALL $110([8318])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$159 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$178 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$177 }
	goto $label$176 
	
.LABEL $label$178
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [200])) = ($5 | [1])
	*(($0 + [208])) = $3
	*(($0 + [204])) = $4
	
.LABEL $label$177
	CALL memcpy($3, [8318], $4)
	
.LABEL $label$176
	*(($3 + $4)) = [0]
	*(($0 + [220])) = [0]
	*(($3 = ($0 + [212]))) = (int_64)0
	$4 = CALL $110([8328])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$158 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$181 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$180 }
	goto $label$179 
	
.LABEL $label$181
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [212])) = ($5 | [1])
	*(($0 + [220])) = $3
	*(($0 + [216])) = $4
	
.LABEL $label$180
	CALL memcpy($3, [8328], $4)
	
.LABEL $label$179
	*(($3 + $4)) = [0]
	*(($0 + [232])) = [0]
	*(($3 = ($0 + [224]))) = (int_64)0
	$4 = CALL $110([8338])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$157 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$184 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$183 }
	goto $label$182 
	
.LABEL $label$184
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [224])) = ($5 | [1])
	*(($0 + [232])) = $3
	*(($0 + [228])) = $4
	
.LABEL $label$183
	CALL memcpy($3, [8338], $4)
	
.LABEL $label$182
	*(($3 + $4)) = [0]
	*(($0 + [244])) = [0]
	*(($3 = ($0 + [236]))) = (int_64)0
	$4 = CALL $110([8348])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$156 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$187 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$186 }
	goto $label$185 
	
.LABEL $label$187
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [236])) = ($5 | [1])
	*(($0 + [244])) = $3
	*(($0 + [240])) = $4
	
.LABEL $label$186
	CALL memcpy($3, [8348], $4)
	
.LABEL $label$185
	*(($3 + $4)) = [0]
	*(($0 + [256])) = [0]
	*(($3 = ($0 + [248]))) = (int_64)0
	$4 = CALL $110([8358])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$155 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$190 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$189 }
	goto $label$188 
	
.LABEL $label$190
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [248])) = ($5 | [1])
	*(($0 + [256])) = $3
	*(($0 + [252])) = $4
	
.LABEL $label$189
	CALL memcpy($3, [8358], $4)
	
.LABEL $label$188
	*(($3 + $4)) = [0]
	*(($0 + [268])) = [0]
	*(($3 = ($0 + [260]))) = (int_64)0
	$4 = CALL $110([8368])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$154 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$193 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$192 }
	goto $label$191 
	
.LABEL $label$193
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [260])) = ($5 | [1])
	*(($0 + [268])) = $3
	*(($0 + [264])) = $4
	
.LABEL $label$192
	CALL memcpy($3, [8368], $4)
	
.LABEL $label$191
	*(($3 + $4)) = [0]
	*(($0 + [280])) = [0]
	*(($3 = ($0 + [272]))) = (int_64)0
	$4 = CALL $110([8378])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$153 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$196 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$195 }
	goto $label$194 
	
.LABEL $label$196
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [272])) = ($5 | [1])
	*(($0 + [280])) = $3
	*(($0 + [276])) = $4
	
.LABEL $label$195
	CALL memcpy($3, [8378], $4)
	
.LABEL $label$194
	*(($3 + $4)) = [0]
	*(($0 + [292])) = [0]
	*(($3 = ($0 + [284]))) = (int_64)0
	$4 = CALL $110([8388])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$152 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$199 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$198 }
	goto $label$197 
	
.LABEL $label$199
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [284])) = ($5 | [1])
	*(($0 + [292])) = $3
	*(($0 + [288])) = $4
	
.LABEL $label$198
	CALL memcpy($3, [8388], $4)
	
.LABEL $label$197
	*(($3 + $4)) = [0]
	*(($0 + [304])) = [0]
	*(($3 = ($0 + [296]))) = (int_64)0
	$4 = CALL $110([8398])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$151 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$202 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$201 }
	goto $label$200 
	
.LABEL $label$202
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [296])) = ($5 | [1])
	*(($0 + [304])) = $3
	*(($0 + [300])) = $4
	
.LABEL $label$201
	CALL memcpy($3, [8398], $4)
	
.LABEL $label$200
	*(($3 + $4)) = [0]
	*(($0 + [316])) = [0]
	*(($3 = ($0 + [308]))) = (int_64)0
	$4 = CALL $110([8408])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$150 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$205 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$204 }
	goto $label$203 
	
.LABEL $label$205
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [308])) = ($5 | [1])
	*(($0 + [316])) = $3
	*(($0 + [312])) = $4
	
.LABEL $label$204
	CALL memcpy($3, [8408], $4)
	
.LABEL $label$203
	*(($3 + $4)) = [0]
	*(($0 + [328])) = [0]
	*(($3 = ($0 + [320]))) = (int_64)0
	$4 = CALL $110([8418])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$149 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$208 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$207 }
	goto $label$206 
	
.LABEL $label$208
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [320])) = ($5 | [1])
	*(($0 + [328])) = $3
	*(($0 + [324])) = $4
	
.LABEL $label$207
	CALL memcpy($3, [8418], $4)
	
.LABEL $label$206
	*(($3 + $4)) = [0]
	*(($0 + [340])) = [0]
	*(($3 = ($0 + [332]))) = (int_64)0
	$4 = CALL $110([8428])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$148 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$211 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$210 }
	goto $label$209 
	
.LABEL $label$211
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [332])) = ($5 | [1])
	*(($0 + [340])) = $3
	*(($0 + [336])) = $4
	
.LABEL $label$210
	CALL memcpy($3, [8428], $4)
	
.LABEL $label$209
	*(($3 + $4)) = [0]
	*(($0 + [352])) = [0]
	*(($3 = ($0 + [344]))) = (int_64)0
	$4 = CALL $110([8438])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$147 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$214 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$213 }
	goto $label$212 
	
.LABEL $label$214
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [344])) = ($5 | [1])
	*(($0 + [352])) = $3
	*(($0 + [348])) = $4
	
.LABEL $label$213
	CALL memcpy($3, [8438], $4)
	
.LABEL $label$212
	*(($3 + $4)) = [0]
	*(($0 + [364])) = [0]
	*(($3 = ($0 + [356]))) = (int_64)0
	$4 = CALL $110([8448])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$146 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$217 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$216 }
	goto $label$215 
	
.LABEL $label$217
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [356])) = ($5 | [1])
	*(($0 + [364])) = $3
	*(($0 + [360])) = $4
	
.LABEL $label$216
	CALL memcpy($3, [8448], $4)
	
.LABEL $label$215
	*(($3 + $4)) = [0]
	*(($0 + [376])) = [0]
	*(($3 = ($0 + [368]))) = (int_64)0
	$4 = CALL $110([8458])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$145 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$220 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$219 }
	goto $label$218 
	
.LABEL $label$220
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [368])) = ($5 | [1])
	*(($0 + [376])) = $3
	*(($0 + [372])) = $4
	
.LABEL $label$219
	CALL memcpy($3, [8458], $4)
	
.LABEL $label$218
	*(($3 + $4)) = [0]
	*(($0 + [388])) = [0]
	*(($3 = ($0 + [380]))) = (int_64)0
	$4 = CALL $110([8468])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$144 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$223 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$222 }
	goto $label$221 
	
.LABEL $label$223
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [380])) = ($5 | [1])
	*(($0 + [388])) = $3
	*(($0 + [384])) = $4
	
.LABEL $label$222
	CALL memcpy($3, [8468], $4)
	
.LABEL $label$221
	*(($3 + $4)) = [0]
	*(($0 + [400])) = [0]
	*(($3 = ($0 + [392]))) = (int_64)0
	$4 = CALL $110([8478])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$143 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$226 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$225 }
	goto $label$224 
	
.LABEL $label$226
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [392])) = ($5 | [1])
	*(($0 + [400])) = $3
	*(($0 + [396])) = $4
	
.LABEL $label$225
	CALL memcpy($3, [8478], $4)
	
.LABEL $label$224
	*(($3 + $4)) = [0]
	*(($0 + [412])) = [0]
	*(($3 = ($0 + [404]))) = (int_64)0
	$4 = CALL $110([8488])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$142 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$229 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$228 }
	goto $label$227 
	
.LABEL $label$229
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [404])) = ($5 | [1])
	*(($0 + [412])) = $3
	*(($0 + [408])) = $4
	
.LABEL $label$228
	CALL memcpy($3, [8488], $4)
	
.LABEL $label$227
	*(($3 + $4)) = [0]
	*(($0 + [424])) = [0]
	*(($3 = ($0 + [416]))) = (int_64)0
	$4 = CALL $110([8498])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$141 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$232 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$231 }
	goto $label$230 
	
.LABEL $label$232
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [416])) = ($5 | [1])
	*(($0 + [424])) = $3
	*(($0 + [420])) = $4
	
.LABEL $label$231
	CALL memcpy($3, [8498], $4)
	
.LABEL $label$230
	*(($3 + $4)) = [0]
	*(($0 + [436])) = [0]
	*(($3 = ($0 + [428]))) = (int_64)0
	$4 = CALL $110([8508])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$140 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$235 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$234 }
	goto $label$233 
	
.LABEL $label$235
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [428])) = ($5 | [1])
	*(($0 + [436])) = $3
	*(($0 + [432])) = $4
	
.LABEL $label$234
	CALL memcpy($3, [8508], $4)
	
.LABEL $label$233
	*(($3 + $4)) = [0]
	*(($0 + [448])) = [0]
	*(($3 = ($0 + [440]))) = (int_64)0
	$4 = CALL $110([8518])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$139 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$238 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$237 }
	goto $label$236 
	
.LABEL $label$238
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [440])) = ($5 | [1])
	*(($0 + [448])) = $3
	*(($0 + [444])) = $4
	
.LABEL $label$237
	CALL memcpy($3, [8518], $4)
	
.LABEL $label$236
	*(($3 + $4)) = [0]
	*(($0 + [460])) = [0]
	*(($3 = ($0 + [452]))) = (int_64)0
	$4 = CALL $110([8528])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$138 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$241 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$240 }
	goto $label$239 
	
.LABEL $label$241
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [452])) = ($5 | [1])
	*(($0 + [460])) = $3
	*(($0 + [456])) = $4
	
.LABEL $label$240
	CALL memcpy($3, [8528], $4)
	
.LABEL $label$239
	*(($3 + $4)) = [0]
	*(($0 + [472])) = [0]
	*(($3 = ($0 + [464]))) = (int_64)0
	$4 = CALL $110([8538])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$137 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$244 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$243 }
	goto $label$242 
	
.LABEL $label$244
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [464])) = ($5 | [1])
	*(($0 + [472])) = $3
	*(($0 + [468])) = $4
	
.LABEL $label$243
	CALL memcpy($3, [8538], $4)
	
.LABEL $label$242
	*(($3 + $4)) = [0]
	*(($0 + [484])) = [0]
	*(($3 = ($0 + [476]))) = (int_64)0
	$4 = CALL $110([8548])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$136 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$247 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$246 }
	goto $label$245 
	
.LABEL $label$247
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [476])) = ($5 | [1])
	*(($0 + [484])) = $3
	*(($0 + [480])) = $4
	
.LABEL $label$246
	CALL memcpy($3, [8548], $4)
	
.LABEL $label$245
	*(($3 + $4)) = [0]
	*(($0 + [496])) = [0]
	*(($3 = ($0 + [488]))) = (int_64)0
	$4 = CALL $110([8558])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$135 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$250 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$249 }
	goto $label$248 
	
.LABEL $label$250
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [488])) = ($5 | [1])
	*(($0 + [496])) = $3
	*(($0 + [492])) = $4
	
.LABEL $label$249
	CALL memcpy($3, [8558], $4)
	
.LABEL $label$248
	*(($3 + $4)) = [0]
	*(($0 + [508])) = [0]
	*(($3 = ($0 + [500]))) = (int_64)0
	$4 = CALL $110([8568])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$134 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$253 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$252 }
	goto $label$251 
	
.LABEL $label$253
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [500])) = ($5 | [1])
	*(($0 + [508])) = $3
	*(($0 + [504])) = $4
	
.LABEL $label$252
	CALL memcpy($3, [8568], $4)
	
.LABEL $label$251
	*(($3 + $4)) = [0]
	*(($0 + [520])) = [0]
	*(($3 = ($0 + [512]))) = (int_64)0
	$4 = CALL $110([8578])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$133 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$256 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$255 }
	goto $label$254 
	
.LABEL $label$256
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [512])) = ($5 | [1])
	*(($0 + [520])) = $3
	*(($0 + [516])) = $4
	
.LABEL $label$255
	CALL memcpy($3, [8578], $4)
	
.LABEL $label$254
	*(($3 + $4)) = [0]
	*(($0 + [532])) = [0]
	*(($3 = ($0 + [524]))) = (int_64)0
	$4 = CALL $110([8588])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$132 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$259 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$258 }
	goto $label$257 
	
.LABEL $label$259
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [524])) = ($5 | [1])
	*(($0 + [532])) = $3
	*(($0 + [528])) = $4
	
.LABEL $label$258
	CALL memcpy($3, [8588], $4)
	
.LABEL $label$257
	*(($3 + $4)) = [0]
	*(($0 + [544])) = [0]
	*(($3 = ($0 + [536]))) = (int_64)0
	$4 = CALL $110([8598])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$131 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$262 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$261 }
	goto $label$260 
	
.LABEL $label$262
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [536])) = ($5 | [1])
	*(($0 + [544])) = $3
	*(($0 + [540])) = $4
	
.LABEL $label$261
	CALL memcpy($3, [8598], $4)
	
.LABEL $label$260
	*(($3 + $4)) = [0]
	*(($0 + [556])) = [0]
	*(($3 = ($0 + [548]))) = (int_64)0
	$4 = CALL $110([8608])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$130 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$265 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$264 }
	goto $label$263 
	
.LABEL $label$265
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [548])) = ($5 | [1])
	*(($0 + [556])) = $3
	*(($0 + [552])) = $4
	
.LABEL $label$264
	CALL memcpy($3, [8608], $4)
	
.LABEL $label$263
	*(($3 + $4)) = [0]
	*(($0 + [568])) = [0]
	*(($3 = ($0 + [560]))) = (int_64)0
	$4 = CALL $110([8618])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$129 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$268 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$267 }
	goto $label$266 
	
.LABEL $label$268
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [560])) = ($5 | [1])
	*(($0 + [568])) = $3
	*(($0 + [564])) = $4
	
.LABEL $label$267
	CALL memcpy($3, [8618], $4)
	
.LABEL $label$266
	*(($3 + $4)) = [0]
	*(($0 + [580])) = [0]
	*(($3 = ($0 + [572]))) = (int_64)0
	$4 = CALL $110([8628])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$128 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$271 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$270 }
	goto $label$269 
	
.LABEL $label$271
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [572])) = ($5 | [1])
	*(($0 + [580])) = $3
	*(($0 + [576])) = $4
	
.LABEL $label$270
	CALL memcpy($3, [8628], $4)
	
.LABEL $label$269
	*(($3 + $4)) = [0]
	*(($0 + [592])) = [0]
	*(($3 = ($0 + [584]))) = (int_64)0
	$4 = CALL $110([8638])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$127 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$274 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$273 }
	goto $label$272 
	
.LABEL $label$274
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [584])) = ($5 | [1])
	*(($0 + [592])) = $3
	*(($0 + [588])) = $4
	
.LABEL $label$273
	CALL memcpy($3, [8638], $4)
	
.LABEL $label$272
	*(($3 + $4)) = [0]
	*(($0 + [604])) = [0]
	*(($3 = ($0 + [596]))) = (int_64)0
	$4 = CALL $110([8649])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$126 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$277 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$276 }
	goto $label$275 
	
.LABEL $label$277
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [596])) = ($5 | [1])
	*(($0 + [604])) = $3
	*(($0 + [600])) = $4
	
.LABEL $label$276
	CALL memcpy($3, [8649], $4)
	
.LABEL $label$275
	*(($3 + $4)) = [0]
	*(($0 + [616])) = [0]
	*(($3 = ($0 + [608]))) = (int_64)0
	$4 = CALL $110([8660])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$125 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$280 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$279 }
	goto $label$278 
	
.LABEL $label$280
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [608])) = ($5 | [1])
	*(($0 + [616])) = $3
	*(($0 + [612])) = $4
	
.LABEL $label$279
	CALL memcpy($3, [8660], $4)
	
.LABEL $label$278
	*(($3 + $4)) = [0]
	*(($0 + [628])) = [0]
	*(($3 = ($0 + [620]))) = (int_64)0
	$4 = CALL $110([8671])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$124 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$283 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$282 }
	goto $label$281 
	
.LABEL $label$283
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [620])) = ($5 | [1])
	*(($0 + [628])) = $3
	*(($0 + [624])) = $4
	
.LABEL $label$282
	CALL memcpy($3, [8671], $4)
	
.LABEL $label$281
	*(($3 + $4)) = [0]
	*(($0 + [640])) = [0]
	*(($3 = ($0 + [632]))) = (int_64)0
	$4 = CALL $110([8682])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$123 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$286 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$285 }
	goto $label$284 
	
.LABEL $label$286
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [632])) = ($5 | [1])
	*(($0 + [640])) = $3
	*(($0 + [636])) = $4
	
.LABEL $label$285
	CALL memcpy($3, [8682], $4)
	
.LABEL $label$284
	*(($3 + $4)) = [0]
	*(($0 + [652])) = [0]
	*(($3 = ($0 + [644]))) = (int_64)0
	$4 = CALL $110([8692])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$122 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$289 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$288 }
	goto $label$287 
	
.LABEL $label$289
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [644])) = ($5 | [1])
	*(($0 + [652])) = $3
	*(($0 + [648])) = $4
	
.LABEL $label$288
	CALL memcpy($3, [8692], $4)
	
.LABEL $label$287
	*(($3 + $4)) = [0]
	*(($0 + [664])) = [0]
	*(($3 = ($0 + [656]))) = (int_64)0
	$4 = CALL $110([8702])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$121 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$292 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$291 }
	goto $label$290 
	
.LABEL $label$292
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [656])) = ($5 | [1])
	*(($0 + [664])) = $3
	*(($0 + [660])) = $4
	
.LABEL $label$291
	CALL memcpy($3, [8702], $4)
	
.LABEL $label$290
	*(($3 + $4)) = [0]
	*(($0 + [676])) = [0]
	*(($3 = ($0 + [668]))) = (int_64)0
	$4 = CALL $110([8712])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$120 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$295 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$294 }
	goto $label$293 
	
.LABEL $label$295
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [668])) = ($5 | [1])
	*(($0 + [676])) = $3
	*(($0 + [672])) = $4
	
.LABEL $label$294
	CALL memcpy($3, [8712], $4)
	
.LABEL $label$293
	*(($3 + $4)) = [0]
	*(($0 + [688])) = [0]
	*(($3 = ($0 + [680]))) = (int_64)0
	$4 = CALL $110([8722])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$119 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$298 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$297 }
	goto $label$296 
	
.LABEL $label$298
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [680])) = ($5 | [1])
	*(($0 + [688])) = $3
	*(($0 + [684])) = $4
	
.LABEL $label$297
	CALL memcpy($3, [8722], $4)
	
.LABEL $label$296
	*(($3 + $4)) = [0]
	*(($0 + [700])) = [0]
	*(($3 = ($0 + [692]))) = (int_64)0
	$4 = CALL $110([8732])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$118 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$301 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$300 }
	goto $label$299 
	
.LABEL $label$301
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [692])) = ($5 | [1])
	*(($0 + [700])) = $3
	*(($0 + [696])) = $4
	
.LABEL $label$300
	CALL memcpy($3, [8732], $4)
	
.LABEL $label$299
	*(($3 + $4)) = [0]
	*(($0 + [712])) = [0]
	*(($3 = ($0 + [704]))) = (int_64)0
	$4 = CALL $110([8742])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$117 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$304 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$303 }
	goto $label$302 
	
.LABEL $label$304
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [704])) = ($5 | [1])
	*(($0 + [712])) = $3
	*(($0 + [708])) = $4
	
.LABEL $label$303
	CALL memcpy($3, [8742], $4)
	
.LABEL $label$302
	*(($3 + $4)) = [0]
	*(($0 + [724])) = [0]
	*(($3 = ($0 + [716]))) = (int_64)0
	$4 = CALL $110([8752])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$116 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$307 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$306 }
	goto $label$305 
	
.LABEL $label$307
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [716])) = ($5 | [1])
	*(($0 + [724])) = $3
	*(($0 + [720])) = $4
	
.LABEL $label$306
	CALL memcpy($3, [8752], $4)
	
.LABEL $label$305
	*(($3 + $4)) = [0]
	*(($0 + [736])) = [0]
	*(($3 = ($0 + [728]))) = (int_64)0
	$4 = CALL $110([8762])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$115 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$310 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$309 }
	goto $label$308 
	
.LABEL $label$310
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [728])) = ($5 | [1])
	*(($0 + [736])) = $3
	*(($0 + [732])) = $4
	
.LABEL $label$309
	CALL memcpy($3, [8762], $4)
	
.LABEL $label$308
	*(($3 + $4)) = [0]
	*(($0 + [748])) = [0]
	*(($3 = ($0 + [740]))) = (int_64)0
	$4 = CALL $110([8772])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$114 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$313 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$312 }
	goto $label$311 
	
.LABEL $label$313
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [740])) = ($5 | [1])
	*(($0 + [748])) = $3
	*(($0 + [744])) = $4
	
.LABEL $label$312
	CALL memcpy($3, [8772], $4)
	
.LABEL $label$311
	*(($3 + $4)) = [0]
	*(($0 + [760])) = [0]
	*(($3 = ($0 + [752]))) = (int_64)0
	$4 = CALL $110([8782])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$113 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$316 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$315 }
	goto $label$314 
	
.LABEL $label$316
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [752])) = ($5 | [1])
	*(($0 + [760])) = $3
	*(($0 + [756])) = $4
	
.LABEL $label$315
	CALL memcpy($3, [8782], $4)
	
.LABEL $label$314
	*(($3 + $4)) = [0]
	*(($0 + [772])) = [0]
	*(($3 = ($0 + [764]))) = (int_64)0
	$4 = CALL $110([8792])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$112 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$319 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$318 }
	goto $label$317 
	
.LABEL $label$319
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [764])) = ($5 | [1])
	*(($0 + [772])) = $3
	*(($0 + [768])) = $4
	
.LABEL $label$318
	CALL memcpy($3, [8792], $4)
	
.LABEL $label$317
	*(($3 + $4)) = [0]
	*(($0 + [784])) = [0]
	*(($3 = ($0 + [776]))) = (int_64)0
	$4 = CALL $110([8802])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$111 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$322 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$321 }
	goto $label$320 
	
.LABEL $label$322
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [776])) = ($5 | [1])
	*(($0 + [784])) = $3
	*(($0 + [780])) = $4
	
.LABEL $label$321
	CALL memcpy($3, [8802], $4)
	
.LABEL $label$320
	*(($3 + $4)) = [0]
	*(($0 + [796])) = [0]
	*(($3 = ($0 + [788]))) = (int_64)0
	$4 = CALL $110([8816])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$110 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$325 }
	*($3) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$324 }
	goto $label$323 
	
.LABEL $label$325
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($0 + [788])) = ($5 | [1])
	*(($0 + [796])) = $3
	*(($0 + [792])) = $4
	
.LABEL $label$324
	CALL memcpy($3, [8816], $4)
	
.LABEL $label$323
	*(($3 + $4)) = [0]
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	$4 = CALL $110([8192])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$326 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$329 }
	*($2) = ($4 << [1])
	$3 = ($2 | [1])
	if ( $4 ){ goto $label$328 }
	goto $label$327 
	
.LABEL $label$329
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*($2) = ($5 | [1])
	*($2 + [8]) = $3
	*($2 + [4]) = $4
	
.LABEL $label$328
	CALL memcpy($3, [8192], $4)
	
.LABEL $label$327
	*(($3 + $4)) = [0]
	*(($2 + [24])) = [0]
	*($2 + [16]) = (int_64)0
	*($2 + [12]) = [2]
	$3 = ($2 + [16])
	$4 = CALL $110([8202])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$109 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$332 }
	*(($2 + [16])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$331 }
	goto $label$330 
	
.LABEL $label$332
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [24])) = $3
	*(($2 + [20])) = $4
	*($2 + [16]) = ($5 | [1])
	
.LABEL $label$331
	CALL memcpy($3, [8202], $4)
	
.LABEL $label$330
	*(($3 + $4)) = [0]
	*(($2 + [40])) = [0]
	*(($2 + [28])) = [2]
	*($2 + [32]) = (int_64)0
	$3 = ($2 + [32])
	$4 = CALL $110([8298])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$108 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$335 }
	*(($2 + [32])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$334 }
	goto $label$333 
	
.LABEL $label$335
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [40])) = $3
	*(($2 + [36])) = $4
	*($2 + [32]) = ($5 | [1])
	
.LABEL $label$334
	CALL memcpy($3, [8298], $4)
	
.LABEL $label$333
	*(($3 + $4)) = [0]
	*(($2 + [56])) = [0]
	*(($2 + [44])) = [2]
	*($2 + [48]) = (int_64)0
	$3 = ($2 + [48])
	$4 = CALL $110([8308])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$107 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$338 }
	*(($2 + [48])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$337 }
	goto $label$336 
	
.LABEL $label$338
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [56])) = $3
	*(($2 + [52])) = $4
	*($2 + [48]) = ($5 | [1])
	
.LABEL $label$337
	CALL memcpy($3, [8308], $4)
	
.LABEL $label$336
	*(($3 + $4)) = [0]
	*(($2 + [72])) = [0]
	*(($2 + [60])) = [2]
	*($2 + [64]) = (int_64)0
	$3 = ($2 + [64])
	$4 = CALL $110([8318])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$106 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$341 }
	*(($2 + [64])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$340 }
	goto $label$339 
	
.LABEL $label$341
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [72])) = $3
	*(($2 + [68])) = $4
	*($2 + [64]) = ($5 | [1])
	
.LABEL $label$340
	CALL memcpy($3, [8318], $4)
	
.LABEL $label$339
	*(($3 + $4)) = [0]
	*(($2 + [88])) = [0]
	*(($2 + [76])) = [4]
	*($2 + [80]) = (int_64)0
	$3 = ($2 + [80])
	$4 = CALL $110([8328])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$105 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$344 }
	*(($2 + [80])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$343 }
	goto $label$342 
	
.LABEL $label$344
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [88])) = $3
	*(($2 + [84])) = $4
	*($2 + [80]) = ($5 | [1])
	
.LABEL $label$343
	CALL memcpy($3, [8328], $4)
	
.LABEL $label$342
	*(($3 + $4)) = [0]
	*(($2 + [104])) = [0]
	*(($2 + [92])) = [4]
	*($2 + [96]) = (int_64)0
	$3 = ($2 + [96])
	$4 = CALL $110([8338])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$104 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$347 }
	*(($2 + [96])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$346 }
	goto $label$345 
	
.LABEL $label$347
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [104])) = $3
	*(($2 + [100])) = $4
	*($2 + [96]) = ($5 | [1])
	
.LABEL $label$346
	CALL memcpy($3, [8338], $4)
	
.LABEL $label$345
	*(($3 + $4)) = [0]
	*(($2 + [120])) = [0]
	*(($2 + [108])) = [4]
	*($2 + [112]) = (int_64)0
	$3 = ($2 + [112])
	$4 = CALL $110([8348])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$103 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$350 }
	*(($2 + [112])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$349 }
	goto $label$348 
	
.LABEL $label$350
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [120])) = $3
	*(($2 + [116])) = $4
	*($2 + [112]) = ($5 | [1])
	
.LABEL $label$349
	CALL memcpy($3, [8348], $4)
	
.LABEL $label$348
	*(($3 + $4)) = [0]
	*(($2 + [136])) = [0]
	*(($2 + [124])) = [4]
	*($2 + [128]) = (int_64)0
	$3 = ($2 + [128])
	$4 = CALL $110([8358])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$102 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$353 }
	*(($2 + [128])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$352 }
	goto $label$351 
	
.LABEL $label$353
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [136])) = $3
	*(($2 + [132])) = $4
	*($2 + [128]) = ($5 | [1])
	
.LABEL $label$352
	CALL memcpy($3, [8358], $4)
	
.LABEL $label$351
	*(($3 + $4)) = [0]
	*(($2 + [152])) = [0]
	*(($2 + [140])) = [4]
	*($2 + [144]) = (int_64)0
	$3 = ($2 + [144])
	$4 = CALL $110([8368])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$101 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$356 }
	*(($2 + [144])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$355 }
	goto $label$354 
	
.LABEL $label$356
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [152])) = $3
	*(($2 + [148])) = $4
	*($2 + [144]) = ($5 | [1])
	
.LABEL $label$355
	CALL memcpy($3, [8368], $4)
	
.LABEL $label$354
	*(($3 + $4)) = [0]
	*(($2 + [168])) = [0]
	*(($2 + [156])) = [4]
	*($2 + [160]) = (int_64)0
	$3 = ($2 + [160])
	$4 = CALL $110([8378])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$100 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$359 }
	*(($2 + [160])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$358 }
	goto $label$357 
	
.LABEL $label$359
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [168])) = $3
	*(($2 + [164])) = $4
	*($2 + [160]) = ($5 | [1])
	
.LABEL $label$358
	CALL memcpy($3, [8378], $4)
	
.LABEL $label$357
	*(($3 + $4)) = [0]
	*(($2 + [184])) = [0]
	*(($2 + [172])) = [4]
	*($2 + [176]) = (int_64)0
	$3 = ($2 + [176])
	$4 = CALL $110([8388])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$99 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$362 }
	*(($2 + [176])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$361 }
	goto $label$360 
	
.LABEL $label$362
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [184])) = $3
	*(($2 + [180])) = $4
	*($2 + [176]) = ($5 | [1])
	
.LABEL $label$361
	CALL memcpy($3, [8388], $4)
	
.LABEL $label$360
	*(($3 + $4)) = [0]
	*(($2 + [200])) = [0]
	*(($2 + [188])) = [4]
	*($2 + [192]) = (int_64)0
	$3 = ($2 + [192])
	$4 = CALL $110([8398])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$98 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$365 }
	*(($2 + [192])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$364 }
	goto $label$363 
	
.LABEL $label$365
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [200])) = $3
	*(($2 + [196])) = $4
	*($2 + [192]) = ($5 | [1])
	
.LABEL $label$364
	CALL memcpy($3, [8398], $4)
	
.LABEL $label$363
	*(($3 + $4)) = [0]
	*(($2 + [216])) = [0]
	*(($2 + [204])) = [4]
	*($2 + [208]) = (int_64)0
	$3 = ($2 + [208])
	$4 = CALL $110([8408])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$97 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$368 }
	*(($2 + [208])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$367 }
	goto $label$366 
	
.LABEL $label$368
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [216])) = $3
	*(($2 + [212])) = $4
	*($2 + [208]) = ($5 | [1])
	
.LABEL $label$367
	CALL memcpy($3, [8408], $4)
	
.LABEL $label$366
	*(($3 + $4)) = [0]
	*(($2 + [232])) = [0]
	*(($2 + [220])) = [4]
	*($2 + [224]) = (int_64)0
	$3 = ($2 + [224])
	$4 = CALL $110([8418])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$96 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$371 }
	*(($2 + [224])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$370 }
	goto $label$369 
	
.LABEL $label$371
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [232])) = $3
	*(($2 + [228])) = $4
	*($2 + [224]) = ($5 | [1])
	
.LABEL $label$370
	CALL memcpy($3, [8418], $4)
	
.LABEL $label$369
	*(($3 + $4)) = [0]
	*(($2 + [248])) = [0]
	*(($2 + [236])) = [4]
	*($2 + [240]) = (int_64)0
	$3 = ($2 + [240])
	$4 = CALL $110([8428])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$95 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$374 }
	*(($2 + [240])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$373 }
	goto $label$372 
	
.LABEL $label$374
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [248])) = $3
	*(($2 + [244])) = $4
	*($2 + [240]) = ($5 | [1])
	
.LABEL $label$373
	CALL memcpy($3, [8428], $4)
	
.LABEL $label$372
	*(($3 + $4)) = [0]
	*(($2 + [264])) = [0]
	*(($2 + [252])) = [4]
	*($2 + [256]) = (int_64)0
	$3 = ($2 + [256])
	$4 = CALL $110([8438])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$94 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$377 }
	*(($2 + [256])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$376 }
	goto $label$375 
	
.LABEL $label$377
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [264])) = $3
	*(($2 + [260])) = $4
	*($2 + [256]) = ($5 | [1])
	
.LABEL $label$376
	CALL memcpy($3, [8438], $4)
	
.LABEL $label$375
	*(($3 + $4)) = [0]
	*(($2 + [280])) = [0]
	*(($2 + [268])) = [4]
	*($2 + [272]) = (int_64)0
	$3 = ($2 + [272])
	$4 = CALL $110([8448])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$93 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$380 }
	*(($2 + [272])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$379 }
	goto $label$378 
	
.LABEL $label$380
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [280])) = $3
	*(($2 + [276])) = $4
	*($2 + [272]) = ($5 | [1])
	
.LABEL $label$379
	CALL memcpy($3, [8448], $4)
	
.LABEL $label$378
	*(($3 + $4)) = [0]
	*(($2 + [296])) = [0]
	*(($2 + [284])) = [4]
	*($2 + [288]) = (int_64)0
	$3 = ($2 + [288])
	$4 = CALL $110([8458])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$92 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$383 }
	*(($2 + [288])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$382 }
	goto $label$381 
	
.LABEL $label$383
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [296])) = $3
	*(($2 + [292])) = $4
	*($2 + [288]) = ($5 | [1])
	
.LABEL $label$382
	CALL memcpy($3, [8458], $4)
	
.LABEL $label$381
	*(($3 + $4)) = [0]
	*(($2 + [312])) = [0]
	*(($2 + [300])) = [4]
	*($2 + [304]) = (int_64)0
	$3 = ($2 + [304])
	$4 = CALL $110([8468])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$91 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$386 }
	*(($2 + [304])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$385 }
	goto $label$384 
	
.LABEL $label$386
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [312])) = $3
	*(($2 + [308])) = $4
	*($2 + [304]) = ($5 | [1])
	
.LABEL $label$385
	CALL memcpy($3, [8468], $4)
	
.LABEL $label$384
	*(($3 + $4)) = [0]
	*(($2 + [328])) = [0]
	*(($2 + [316])) = [4]
	*($2 + [320]) = (int_64)0
	$3 = ($2 + [320])
	$4 = CALL $110([8478])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$90 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$389 }
	*(($2 + [320])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$388 }
	goto $label$387 
	
.LABEL $label$389
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [328])) = $3
	*(($2 + [324])) = $4
	*($2 + [320]) = ($5 | [1])
	
.LABEL $label$388
	CALL memcpy($3, [8478], $4)
	
.LABEL $label$387
	*(($3 + $4)) = [0]
	*(($2 + [344])) = [0]
	*(($2 + [332])) = [4]
	*($2 + [336]) = (int_64)0
	$3 = ($2 + [336])
	$4 = CALL $110([8488])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$89 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$392 }
	*(($2 + [336])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$391 }
	goto $label$390 
	
.LABEL $label$392
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [344])) = $3
	*(($2 + [340])) = $4
	*($2 + [336]) = ($5 | [1])
	
.LABEL $label$391
	CALL memcpy($3, [8488], $4)
	
.LABEL $label$390
	*(($3 + $4)) = [0]
	*(($2 + [360])) = [0]
	*(($2 + [348])) = [4]
	*($2 + [352]) = (int_64)0
	$3 = ($2 + [352])
	$4 = CALL $110([8498])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$88 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$395 }
	*(($2 + [352])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$394 }
	goto $label$393 
	
.LABEL $label$395
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [360])) = $3
	*(($2 + [356])) = $4
	*($2 + [352]) = ($5 | [1])
	
.LABEL $label$394
	CALL memcpy($3, [8498], $4)
	
.LABEL $label$393
	*(($3 + $4)) = [0]
	*(($2 + [376])) = [0]
	*(($2 + [364])) = [4]
	*($2 + [368]) = (int_64)0
	$3 = ($2 + [368])
	$4 = CALL $110([8508])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$87 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$398 }
	*(($2 + [368])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$397 }
	goto $label$396 
	
.LABEL $label$398
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [376])) = $3
	*(($2 + [372])) = $4
	*($2 + [368]) = ($5 | [1])
	
.LABEL $label$397
	CALL memcpy($3, [8508], $4)
	
.LABEL $label$396
	*(($3 + $4)) = [0]
	*(($2 + [392])) = [0]
	*(($2 + [380])) = [4]
	*($2 + [384]) = (int_64)0
	$3 = ($2 + [384])
	$4 = CALL $110([8518])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$86 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$401 }
	*(($2 + [384])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$400 }
	goto $label$399 
	
.LABEL $label$401
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [392])) = $3
	*(($2 + [388])) = $4
	*($2 + [384]) = ($5 | [1])
	
.LABEL $label$400
	CALL memcpy($3, [8518], $4)
	
.LABEL $label$399
	*(($3 + $4)) = [0]
	*(($2 + [408])) = [0]
	*(($2 + [396])) = [4]
	*($2 + [400]) = (int_64)0
	$3 = ($2 + [400])
	$4 = CALL $110([8528])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$85 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$404 }
	*(($2 + [400])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$403 }
	goto $label$402 
	
.LABEL $label$404
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [408])) = $3
	*(($2 + [404])) = $4
	*($2 + [400]) = ($5 | [1])
	
.LABEL $label$403
	CALL memcpy($3, [8528], $4)
	
.LABEL $label$402
	*(($3 + $4)) = [0]
	*(($2 + [424])) = [0]
	*(($2 + [412])) = [4]
	*($2 + [416]) = (int_64)0
	$3 = ($2 + [416])
	$4 = CALL $110([8538])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$84 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$407 }
	*(($2 + [416])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$406 }
	goto $label$405 
	
.LABEL $label$407
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [424])) = $3
	*(($2 + [420])) = $4
	*($2 + [416]) = ($5 | [1])
	
.LABEL $label$406
	CALL memcpy($3, [8538], $4)
	
.LABEL $label$405
	*(($3 + $4)) = [0]
	*(($2 + [440])) = [0]
	*(($2 + [428])) = [4]
	*($2 + [432]) = (int_64)0
	$3 = ($2 + [432])
	$4 = CALL $110([8548])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$83 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$410 }
	*(($2 + [432])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$409 }
	goto $label$408 
	
.LABEL $label$410
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [440])) = $3
	*(($2 + [436])) = $4
	*($2 + [432]) = ($5 | [1])
	
.LABEL $label$409
	CALL memcpy($3, [8548], $4)
	
.LABEL $label$408
	*(($3 + $4)) = [0]
	*(($2 + [456])) = [0]
	*(($2 + [444])) = [4]
	*($2 + [448]) = (int_64)0
	$3 = ($2 + [448])
	$4 = CALL $110([8558])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$82 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$413 }
	*(($2 + [448])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$412 }
	goto $label$411 
	
.LABEL $label$413
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [456])) = $3
	*(($2 + [452])) = $4
	*($2 + [448]) = ($5 | [1])
	
.LABEL $label$412
	CALL memcpy($3, [8558], $4)
	
.LABEL $label$411
	*(($3 + $4)) = [0]
	*(($2 + [472])) = [0]
	*(($2 + [460])) = [4]
	*($2 + [464]) = (int_64)0
	$3 = ($2 + [464])
	$4 = CALL $110([8568])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$81 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$416 }
	*(($2 + [464])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$415 }
	goto $label$414 
	
.LABEL $label$416
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [472])) = $3
	*(($2 + [468])) = $4
	*($2 + [464]) = ($5 | [1])
	
.LABEL $label$415
	CALL memcpy($3, [8568], $4)
	
.LABEL $label$414
	*(($3 + $4)) = [0]
	*(($2 + [488])) = [0]
	*(($2 + [476])) = [4]
	*($2 + [480]) = (int_64)0
	$3 = ($2 + [480])
	$4 = CALL $110([8578])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$80 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$419 }
	*(($2 + [480])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$418 }
	goto $label$417 
	
.LABEL $label$419
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [488])) = $3
	*(($2 + [484])) = $4
	*($2 + [480]) = ($5 | [1])
	
.LABEL $label$418
	CALL memcpy($3, [8578], $4)
	
.LABEL $label$417
	*(($3 + $4)) = [0]
	*(($2 + [504])) = [0]
	*(($2 + [492])) = [4]
	*($2 + [496]) = (int_64)0
	$3 = ($2 + [496])
	$4 = CALL $110([8588])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$79 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$422 }
	*(($2 + [496])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$421 }
	goto $label$420 
	
.LABEL $label$422
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [504])) = $3
	*(($2 + [500])) = $4
	*($2 + [496]) = ($5 | [1])
	
.LABEL $label$421
	CALL memcpy($3, [8588], $4)
	
.LABEL $label$420
	*(($3 + $4)) = [0]
	*(($2 + [520])) = [0]
	*(($2 + [508])) = [4]
	*($2 + [512]) = (int_64)0
	$3 = ($2 + [512])
	$4 = CALL $110([8598])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$78 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$425 }
	*(($2 + [512])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$424 }
	goto $label$423 
	
.LABEL $label$425
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [520])) = $3
	*(($2 + [516])) = $4
	*($2 + [512]) = ($5 | [1])
	
.LABEL $label$424
	CALL memcpy($3, [8598], $4)
	
.LABEL $label$423
	*(($3 + $4)) = [0]
	*(($2 + [536])) = [0]
	*(($2 + [524])) = [4]
	*($2 + [528]) = (int_64)0
	$3 = ($2 + [528])
	$4 = CALL $110([8608])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$77 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$428 }
	*(($2 + [528])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$427 }
	goto $label$426 
	
.LABEL $label$428
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [536])) = $3
	*(($2 + [532])) = $4
	*($2 + [528]) = ($5 | [1])
	
.LABEL $label$427
	CALL memcpy($3, [8608], $4)
	
.LABEL $label$426
	*(($3 + $4)) = [0]
	*(($2 + [552])) = [0]
	*(($2 + [540])) = [4]
	*($2 + [544]) = (int_64)0
	$3 = ($2 + [544])
	$4 = CALL $110([8618])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$76 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$431 }
	*(($2 + [544])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$430 }
	goto $label$429 
	
.LABEL $label$431
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [552])) = $3
	*(($2 + [548])) = $4
	*($2 + [544]) = ($5 | [1])
	
.LABEL $label$430
	CALL memcpy($3, [8618], $4)
	
.LABEL $label$429
	*(($3 + $4)) = [0]
	*(($2 + [568])) = [0]
	*(($2 + [556])) = [4]
	*($2 + [560]) = (int_64)0
	$3 = ($2 + [560])
	$4 = CALL $110([8628])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$75 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$434 }
	*(($2 + [560])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$433 }
	goto $label$432 
	
.LABEL $label$434
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [568])) = $3
	*(($2 + [564])) = $4
	*($2 + [560]) = ($5 | [1])
	
.LABEL $label$433
	CALL memcpy($3, [8628], $4)
	
.LABEL $label$432
	*(($3 + $4)) = [0]
	*(($2 + [584])) = [0]
	*(($2 + [572])) = [4]
	*($2 + [576]) = (int_64)0
	$3 = ($2 + [576])
	$4 = CALL $110([8638])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$74 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$437 }
	*(($2 + [576])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$436 }
	goto $label$435 
	
.LABEL $label$437
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [584])) = $3
	*(($2 + [580])) = $4
	*($2 + [576]) = ($5 | [1])
	
.LABEL $label$436
	CALL memcpy($3, [8638], $4)
	
.LABEL $label$435
	*(($3 + $4)) = [0]
	*(($2 + [600])) = [0]
	*(($2 + [588])) = [4]
	*($2 + [592]) = (int_64)0
	$3 = ($2 + [592])
	$4 = CALL $110([8649])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$73 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$440 }
	*(($2 + [592])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$439 }
	goto $label$438 
	
.LABEL $label$440
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [600])) = $3
	*(($2 + [596])) = $4
	*($2 + [592]) = ($5 | [1])
	
.LABEL $label$439
	CALL memcpy($3, [8649], $4)
	
.LABEL $label$438
	*(($3 + $4)) = [0]
	*(($2 + [616])) = [0]
	*(($2 + [604])) = [4]
	*($2 + [608]) = (int_64)0
	$3 = ($2 + [608])
	$4 = CALL $110([8660])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$72 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$443 }
	*(($2 + [608])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$442 }
	goto $label$441 
	
.LABEL $label$443
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [616])) = $3
	*(($2 + [612])) = $4
	*($2 + [608]) = ($5 | [1])
	
.LABEL $label$442
	CALL memcpy($3, [8660], $4)
	
.LABEL $label$441
	*(($3 + $4)) = [0]
	*(($2 + [632])) = [0]
	*(($2 + [620])) = [4]
	*($2 + [624]) = (int_64)0
	$3 = ($2 + [624])
	$4 = CALL $110([8671])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$71 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$446 }
	*(($2 + [624])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$445 }
	goto $label$444 
	
.LABEL $label$446
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [632])) = $3
	*(($2 + [628])) = $4
	*($2 + [624]) = ($5 | [1])
	
.LABEL $label$445
	CALL memcpy($3, [8671], $4)
	
.LABEL $label$444
	*(($3 + $4)) = [0]
	*(($2 + [648])) = [0]
	*(($2 + [636])) = [4]
	*($2 + [640]) = (int_64)0
	$3 = ($2 + [640])
	$4 = CALL $110([8682])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$70 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$449 }
	*(($2 + [640])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$448 }
	goto $label$447 
	
.LABEL $label$449
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [648])) = $3
	*(($2 + [644])) = $4
	*($2 + [640]) = ($5 | [1])
	
.LABEL $label$448
	CALL memcpy($3, [8682], $4)
	
.LABEL $label$447
	*(($3 + $4)) = [0]
	*(($2 + [664])) = [0]
	*(($2 + [652])) = [4]
	*($2 + [656]) = (int_64)0
	$3 = ($2 + [656])
	$4 = CALL $110([8692])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$69 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$452 }
	*(($2 + [656])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$451 }
	goto $label$450 
	
.LABEL $label$452
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [664])) = $3
	*(($2 + [660])) = $4
	*($2 + [656]) = ($5 | [1])
	
.LABEL $label$451
	CALL memcpy($3, [8692], $4)
	
.LABEL $label$450
	*(($3 + $4)) = [0]
	*(($2 + [680])) = [0]
	*(($2 + [668])) = [4]
	*($2 + [672]) = (int_64)0
	$3 = ($2 + [672])
	$4 = CALL $110([8702])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$68 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$455 }
	*(($2 + [672])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$454 }
	goto $label$453 
	
.LABEL $label$455
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [680])) = $3
	*(($2 + [676])) = $4
	*($2 + [672]) = ($5 | [1])
	
.LABEL $label$454
	CALL memcpy($3, [8702], $4)
	
.LABEL $label$453
	*(($3 + $4)) = [0]
	*(($2 + [696])) = [0]
	*(($2 + [684])) = [4]
	*($2 + [688]) = (int_64)0
	$3 = ($2 + [688])
	$4 = CALL $110([8712])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$67 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$458 }
	*(($2 + [688])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$457 }
	goto $label$456 
	
.LABEL $label$458
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [696])) = $3
	*(($2 + [692])) = $4
	*($2 + [688]) = ($5 | [1])
	
.LABEL $label$457
	CALL memcpy($3, [8712], $4)
	
.LABEL $label$456
	*(($3 + $4)) = [0]
	*(($2 + [712])) = [0]
	*(($2 + [700])) = [4]
	*($2 + [704]) = (int_64)0
	$3 = ($2 + [704])
	$4 = CALL $110([8722])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$66 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$461 }
	*(($2 + [704])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$460 }
	goto $label$459 
	
.LABEL $label$461
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [712])) = $3
	*(($2 + [708])) = $4
	*($2 + [704]) = ($5 | [1])
	
.LABEL $label$460
	CALL memcpy($3, [8722], $4)
	
.LABEL $label$459
	*(($3 + $4)) = [0]
	*(($2 + [728])) = [0]
	*(($2 + [716])) = [4]
	*($2 + [720]) = (int_64)0
	$3 = ($2 + [720])
	$4 = CALL $110([8732])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$65 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$464 }
	*(($2 + [720])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$463 }
	goto $label$462 
	
.LABEL $label$464
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [728])) = $3
	*(($2 + [724])) = $4
	*($2 + [720]) = ($5 | [1])
	
.LABEL $label$463
	CALL memcpy($3, [8732], $4)
	
.LABEL $label$462
	*(($3 + $4)) = [0]
	*(($2 + [744])) = [0]
	*(($2 + [732])) = [4]
	*($2 + [736]) = (int_64)0
	$3 = ($2 + [736])
	$4 = CALL $110([8742])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$64 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$467 }
	*(($2 + [736])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$466 }
	goto $label$465 
	
.LABEL $label$467
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [744])) = $3
	*(($2 + [740])) = $4
	*($2 + [736]) = ($5 | [1])
	
.LABEL $label$466
	CALL memcpy($3, [8742], $4)
	
.LABEL $label$465
	*(($3 + $4)) = [0]
	*(($2 + [760])) = [0]
	*(($2 + [748])) = [4]
	*($2 + [752]) = (int_64)0
	$3 = ($2 + [752])
	$4 = CALL $110([8752])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$63 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$470 }
	*(($2 + [752])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$469 }
	goto $label$468 
	
.LABEL $label$470
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [760])) = $3
	*(($2 + [756])) = $4
	*($2 + [752]) = ($5 | [1])
	
.LABEL $label$469
	CALL memcpy($3, [8752], $4)
	
.LABEL $label$468
	*(($3 + $4)) = [0]
	*(($2 + [776])) = [0]
	*(($2 + [764])) = [4]
	*($2 + [768]) = (int_64)0
	$3 = ($2 + [768])
	$4 = CALL $110([8762])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$62 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$473 }
	*(($2 + [768])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$472 }
	goto $label$471 
	
.LABEL $label$473
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [776])) = $3
	*(($2 + [772])) = $4
	*($2 + [768]) = ($5 | [1])
	
.LABEL $label$472
	CALL memcpy($3, [8762], $4)
	
.LABEL $label$471
	*(($3 + $4)) = [0]
	*(($2 + [792])) = [0]
	*(($2 + [780])) = [4]
	*($2 + [784]) = (int_64)0
	$3 = ($2 + [784])
	$4 = CALL $110([8772])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$61 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$476 }
	*(($2 + [784])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$475 }
	goto $label$474 
	
.LABEL $label$476
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [792])) = $3
	*(($2 + [788])) = $4
	*($2 + [784]) = ($5 | [1])
	
.LABEL $label$475
	CALL memcpy($3, [8772], $4)
	
.LABEL $label$474
	*(($3 + $4)) = [0]
	*(($2 + [808])) = [0]
	*(($2 + [796])) = [4]
	*($2 + [800]) = (int_64)0
	$3 = ($2 + [800])
	$4 = CALL $110([8782])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$60 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$479 }
	*(($2 + [800])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$478 }
	goto $label$477 
	
.LABEL $label$479
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [808])) = $3
	*(($2 + [804])) = $4
	*($2 + [800]) = ($5 | [1])
	
.LABEL $label$478
	CALL memcpy($3, [8782], $4)
	
.LABEL $label$477
	*(($3 + $4)) = [0]
	*(($2 + [824])) = [0]
	*(($2 + [812])) = [4]
	*($2 + [816]) = (int_64)0
	$3 = ($2 + [816])
	$4 = CALL $110([8792])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$59 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$482 }
	*(($2 + [816])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$481 }
	goto $label$480 
	
.LABEL $label$482
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [824])) = $3
	*(($2 + [820])) = $4
	*($2 + [816]) = ($5 | [1])
	
.LABEL $label$481
	CALL memcpy($3, [8792], $4)
	
.LABEL $label$480
	*(($3 + $4)) = [0]
	*(($2 + [840])) = [0]
	*(($2 + [828])) = [4]
	*($2 + [832]) = (int_64)0
	$3 = ($2 + [832])
	$4 = CALL $110([8802])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$58 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$485 }
	*(($2 + [832])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$484 }
	goto $label$483 
	
.LABEL $label$485
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [840])) = $3
	*(($2 + [836])) = $4
	*($2 + [832]) = ($5 | [1])
	
.LABEL $label$484
	CALL memcpy($3, [8802], $4)
	
.LABEL $label$483
	*(($3 + $4)) = [0]
	*(($2 + [856])) = [0]
	*(($2 + [844])) = [2]
	*($2 + [848]) = (int_64)0
	$4 = ($2 + [848])
	$3 = CALL $110([8816])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$57 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$488 }
	*(($2 + [848])) = ($3 << [1])
	$5 = ($4 + [1])
	if ( $3 ){ goto $label$487 }
	goto $label$486 
	
.LABEL $label$488
	$4 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($4)
	*(($2 + [856])) = $5
	*(($2 + [852])) = $3
	*($2 + [848]) = ($4 | [1])
	
.LABEL $label$487
	CALL memcpy($5, [8816], $3)
	
.LABEL $label$486
	$6 = ($0 + [96])
	$7 = ($0 + [16])
	$8 = ($0 + [800])
	$4 = [0]
	*(($5 + $3)) = [0]
	*(($2 + [860])) = [2]
	*(($9 = ($0 + [804]))) = (int_64)0
	*($0 + [800]) = $9
	$10 = ($0 + [808])
	
.LOOP $label$490:
	$5 = ($2 + $4)
	$11 = CALL $4($8, $9, ($2 + [888]), ($2 + [864]), $5)
	if ( (*($11) == 0) ){ goto $label$491 }
	$4 = ($4 + [16])
	if ( ((int_32)$4 != (int_32)[864]) ){ goto $label$490 }
	goto $label$489 
	
.LABEL $label$491
	$3 = CALL _Znwj([32])
	CALL $94(($3 + [16]), $5)
	*($3) = (int_64)0
	*($3 + [8]) = *($2 + [888])
	*($11) = $3
	*($3 + [28]) = *(($5 + [12]))
	$5 = *(*($8))
	if ( ($5 == 0) ){ goto $label$492 }
	*($8) = $5
	$3 = *($11)
	
.LABEL $label$492
	CALL $5(*($9), $3)
	*($10) = (*($10) + [1])
	$4 = ($4 + [16])
	if ( ((int_32)$4 != (int_32)[864]) ){ goto $label$490 }
	
.LABEL $label$489
	$4 = [864]
	
.LOOP $label$493:
	$3 = ($2 + $4)
	if ( ((*(($3 + [-16])) & [1]) == 0) ){ goto $label$494 }
	CALL _ZdlPv(*(($3 + [-8])))
	
.LABEL $label$494
	$4 = ($4 + [-16])
	if ( $4 ){ goto $label$493 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	$4 = CALL $110([8830])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$326 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$497 }
	*($2) = ($4 << [1])
	$3 = ($2 | [1])
	if ( $4 ){ goto $label$496 }
	goto $label$495 
	
.LABEL $label$497
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*($2) = ($5 | [1])
	*($2 + [8]) = $3
	*($2 + [4]) = $4
	
.LABEL $label$496
	CALL memcpy($3, [8830], $4)
	
.LABEL $label$495
	*(($3 + $4)) = [0]
	*(($2 + [32])) = [0]
	*($2 + [24]) = (int_64)0
	*($2 + [16]) = (int_64)0
	$3 = ($2 + [24])
	$4 = CALL $110([8834])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$56 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$500 }
	*(($2 + [24])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$499 }
	goto $label$498 
	
.LABEL $label$500
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [32])) = $3
	*(($2 + [28])) = $4
	*($2 + [24]) = ($5 | [1])
	
.LABEL $label$499
	CALL memcpy($3, [8834], $4)
	
.LABEL $label$498
	*(($3 + $4)) = [0]
	*(($2 + [56])) = [0]
	*(($2 + [40])) = (int_64)4608083138725491507
	*($2 + [48]) = (int_64)0
	$3 = ($2 + [48])
	$4 = CALL $110([8838])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$55 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$503 }
	*(($2 + [48])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$502 }
	goto $label$501 
	
.LABEL $label$503
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [56])) = $3
	*(($2 + [52])) = $4
	*($2 + [48]) = ($5 | [1])
	
.LABEL $label$502
	CALL memcpy($3, [8838], $4)
	
.LABEL $label$501
	*(($3 + $4)) = [0]
	*(($2 + [80])) = [0]
	*(($2 + [64])) = (int_64)4612811918334230528
	*($2 + [72]) = (int_64)0
	$3 = ($2 + [72])
	$4 = CALL $110([8842])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$54 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$506 }
	*(($2 + [72])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$505 }
	goto $label$504 
	
.LABEL $label$506
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [80])) = $3
	*(($2 + [76])) = $4
	*($2 + [72]) = ($5 | [1])
	
.LABEL $label$505
	CALL memcpy($3, [8842], $4)
	
.LABEL $label$504
	*(($3 + $4)) = [0]
	*(($2 + [104])) = [0]
	*(($2 + [88])) = (int_64)4621819117588971520
	*($2 + [96]) = (int_64)0
	$3 = ($2 + [96])
	$4 = CALL $110([8846])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$53 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$509 }
	*(($2 + [96])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$508 }
	goto $label$507 
	
.LABEL $label$509
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [104])) = $3
	*(($2 + [100])) = $4
	*($2 + [96]) = ($5 | [1])
	
.LABEL $label$508
	CALL memcpy($3, [8846], $4)
	
.LABEL $label$507
	*(($3 + $4)) = [0]
	*(($2 + [128])) = [0]
	*(($2 + [112])) = (int_64)4644565814144401408
	*($2 + [120]) = (int_64)0
	$3 = ($2 + [120])
	$4 = CALL $110([8850])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$52 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$512 }
	*(($2 + [120])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$511 }
	goto $label$510 
	
.LABEL $label$512
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [128])) = $3
	*(($2 + [124])) = $4
	*($2 + [120]) = ($5 | [1])
	
.LABEL $label$511
	CALL memcpy($3, [8850], $4)
	
.LABEL $label$510
	*(($3 + $4)) = [0]
	*(($2 + [152])) = [0]
	*(($2 + [136])) = (int_64)4609434218613702656
	*($2 + [144]) = (int_64)0
	$3 = ($2 + [144])
	$4 = CALL $110([8854])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$51 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$515 }
	*(($2 + [144])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$514 }
	goto $label$513 
	
.LABEL $label$515
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [152])) = $3
	*(($2 + [148])) = $4
	*($2 + [144]) = ($5 | [1])
	
.LABEL $label$514
	CALL memcpy($3, [8854], $4)
	
.LABEL $label$513
	*(($3 + $4)) = [0]
	*(($2 + [176])) = [0]
	*(($2 + [160])) = (int_64)4610785298501913805
	*($2 + [168]) = (int_64)0
	$3 = ($2 + [168])
	$4 = CALL $110([8858])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$50 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$518 }
	*(($2 + [168])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$517 }
	goto $label$516 
	
.LABEL $label$518
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [176])) = $3
	*(($2 + [172])) = $4
	*($2 + [168]) = ($5 | [1])
	
.LABEL $label$517
	CALL memcpy($3, [8858], $4)
	
.LABEL $label$516
	*(($3 + $4)) = [0]
	*(($2 + [200])) = [0]
	*(($2 + [184])) = (int_64)4615626668101337088
	*($2 + [192]) = (int_64)0
	$3 = ($2 + [192])
	$4 = CALL $110([8862])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$49 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$521 }
	*(($2 + [192])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$520 }
	goto $label$519 
	
.LABEL $label$521
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [200])) = $3
	*(($2 + [196])) = $4
	*($2 + [192]) = ($5 | [1])
	
.LABEL $label$520
	CALL memcpy($3, [8862], $4)
	
.LABEL $label$519
	*(($3 + $4)) = [0]
	*(($2 + [224])) = [0]
	*(($2 + [208])) = (int_64)4627026404658118656
	*($2 + [216]) = (int_64)0
	$3 = ($2 + [216])
	$4 = CALL $110([8866])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$48 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$524 }
	*(($2 + [216])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$523 }
	goto $label$522 
	
.LABEL $label$524
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [224])) = $3
	*(($2 + [220])) = $4
	*($2 + [216]) = ($5 | [1])
	
.LABEL $label$523
	CALL memcpy($3, [8866], $4)
	
.LABEL $label$522
	*(($3 + $4)) = [0]
	*(($2 + [248])) = [0]
	*(($2 + [232])) = (int_64)4647494913120796672
	*($2 + [240]) = (int_64)0
	$3 = ($2 + [240])
	$4 = CALL $110([8870])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$47 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$527 }
	*(($2 + [240])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$526 }
	goto $label$525 
	
.LABEL $label$527
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [248])) = $3
	*(($2 + [244])) = $4
	*($2 + [240]) = ($5 | [1])
	
.LABEL $label$526
	CALL memcpy($3, [8870], $4)
	
.LABEL $label$525
	*(($3 + $4)) = [0]
	*(($2 + [272])) = [0]
	*(($2 + [256])) = (int_64)4611686018427387904
	*($2 + [264]) = (int_64)0
	$3 = ($2 + [264])
	$4 = CALL $110([8874])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$46 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$530 }
	*(($2 + [264])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$529 }
	goto $label$528 
	
.LABEL $label$530
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [272])) = $3
	*(($2 + [268])) = $4
	*($2 + [264]) = ($5 | [1])
	
.LABEL $label$529
	CALL memcpy($3, [8874], $4)
	
.LABEL $label$528
	*(($3 + $4)) = [0]
	*(($2 + [296])) = [0]
	*(($2 + [280])) = (int_64)4612586738352862003
	*($2 + [288]) = (int_64)0
	$3 = ($2 + [288])
	$4 = CALL $110([8878])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$45 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$533 }
	*(($2 + [288])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$532 }
	goto $label$531 
	
.LABEL $label$533
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [296])) = $3
	*(($2 + [292])) = $4
	*($2 + [288]) = ($5 | [1])
	
.LABEL $label$532
	CALL memcpy($3, [8878], $4)
	
.LABEL $label$531
	*(($3 + $4)) = [0]
	*(($2 + [320])) = [0]
	*(($2 + [304])) = (int_64)4617315517961601024
	*($2 + [312]) = (int_64)0
	$3 = ($2 + [312])
	$4 = CALL $110([8882])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$44 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$536 }
	*(($2 + [312])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$535 }
	goto $label$534 
	
.LABEL $label$536
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [320])) = $3
	*(($2 + [316])) = $4
	*($2 + [312]) = ($5 | [1])
	
.LABEL $label$535
	CALL memcpy($3, [8882], $4)
	
.LABEL $label$534
	*(($3 + $4)) = [0]
	*(($2 + [344])) = [0]
	*(($2 + [328])) = (int_64)4629137466983448576
	*($2 + [336]) = (int_64)0
	$3 = ($2 + [336])
	$4 = CALL $110([8886])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$43 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$539 }
	*(($2 + [336])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$538 }
	goto $label$537 
	
.LABEL $label$539
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [344])) = $3
	*(($2 + [340])) = $4
	*($2 + [336]) = ($5 | [1])
	
.LABEL $label$538
	CALL memcpy($3, [8886], $4)
	
.LABEL $label$537
	*(($3 + $4)) = [0]
	*(($2 + [368])) = [0]
	*(($2 + [352])) = (int_64)4649069413771771904
	*($2 + [360]) = (int_64)0
	$3 = ($2 + [360])
	$4 = CALL $110([8890])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$42 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$542 }
	*(($2 + [360])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$541 }
	goto $label$540 
	
.LABEL $label$542
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [368])) = $3
	*(($2 + [364])) = $4
	*($2 + [360]) = ($5 | [1])
	
.LABEL $label$541
	CALL memcpy($3, [8890], $4)
	
.LABEL $label$540
	*(($3 + $4)) = [0]
	*(($2 + [392])) = [0]
	*(($2 + [376])) = (int_64)4613937818241073152
	*($2 + [384]) = (int_64)0
	$3 = ($2 + [384])
	$4 = CALL $110([8894])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$41 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$545 }
	*(($2 + [384])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$544 }
	goto $label$543 
	
.LABEL $label$545
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [392])) = $3
	*(($2 + [388])) = $4
	*($2 + [384]) = ($5 | [1])
	
.LABEL $label$544
	CALL memcpy($3, [8894], $4)
	
.LABEL $label$543
	*(($3 + $4)) = [0]
	*(($2 + [416])) = [0]
	*(($2 + [400])) = (int_64)4615288898129284301
	*($2 + [408]) = (int_64)0
	$3 = ($2 + [408])
	$4 = CALL $110([8898])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$40 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$548 }
	*(($2 + [408])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$547 }
	goto $label$546 
	
.LABEL $label$548
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [416])) = $3
	*(($2 + [412])) = $4
	*($2 + [408]) = ($5 | [1])
	
.LABEL $label$547
	CALL memcpy($3, [8898], $4)
	
.LABEL $label$546
	*(($3 + $4)) = [0]
	*(($2 + [440])) = [0]
	*(($2 + [424])) = (int_64)4620130267728707584
	*($2 + [432]) = (int_64)0
	$3 = ($2 + [432])
	$4 = CALL $110([8902])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$39 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$551 }
	*(($2 + [432])) = ($4 << [1])
	$3 = ($3 + [1])
	if ( $4 ){ goto $label$550 }
	goto $label$549 
	
.LABEL $label$551
	$5 = (($4 + [16]) & [-16])
	$3 = CALL _Znwj($5)
	*(($2 + [440])) = $3
	*(($2 + [436])) = $4
	*($2 + [432]) = ($5 | [1])
	
.LABEL $label$550
	CALL memcpy($3, [8902], $4)
	
.LABEL $label$549
	*(($3 + $4)) = [0]
	*(($2 + [464])) = [0]
	*(($2 + [448])) = (int_64)4631530004285489152
	*($2 + [456]) = (int_64)0
	$4 = ($2 + [456])
	$3 = CALL $110([8906])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$38 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$554 }
	*(($2 + [456])) = ($3 << [1])
	$5 = ($4 + [1])
	if ( $3 ){ goto $label$553 }
	goto $label$552 
	
.LABEL $label$554
	$4 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($4)
	*(($2 + [464])) = $5
	*(($2 + [460])) = $3
	*($2 + [456]) = ($4 | [1])
	
.LABEL $label$553
	CALL memcpy($5, [8906], $3)
	
.LABEL $label$552
	$8 = ($0 + [812])
	$4 = [0]
	*(($5 + $3)) = [0]
	*(($2 + [472])) = (int_64)4651998512748167168
	*(($9 = ($0 + [816]))) = (int_64)0
	*($0 + [812]) = $9
	$10 = ($0 + [820])
	
.LOOP $label$556:
	$5 = ($2 + $4)
	$11 = CALL $6($8, $9, ($2 + [888]), ($2 + [864]), $5)
	if ( (*($11) == 0) ){ goto $label$557 }
	$4 = ($4 + [24])
	if ( ((int_32)$4 != (int_32)[480]) ){ goto $label$556 }
	goto $label$555 
	
.LABEL $label$557
	$3 = CALL _Znwj([40])
	CALL $94(($3 + [16]), $5)
	*($3) = (int_64)0
	*($3 + [8]) = *($2 + [888])
	*($11) = $3
	*($3 + [32]) = *(($5 + [16]))
	$5 = *(*($8))
	if ( ($5 == 0) ){ goto $label$558 }
	*($8) = $5
	$3 = *($11)
	
.LABEL $label$558
	CALL $5(*($9), $3)
	*($10) = (*($10) + [1])
	$4 = ($4 + [24])
	if ( ((int_32)$4 != (int_32)[480]) ){ goto $label$556 }
	
.LABEL $label$555
	if ( (*($2 + [456]) & [1]) ){ goto $label$560 }
	if ( (*($2 + [432]) & [1]) ){ goto $label$559 }
	goto $label$37 
	
.LABEL $label$560
	CALL _ZdlPv(*(($2 + [464])))
	if ( ((*($2 + [432]) & [1]) == 0) ){ goto $label$37 }
	
.LABEL $label$559
	CALL _ZdlPv(*(($2 + [440])))
	$4 = [1]
	if ( ((*($2 + [408]) & [1]) == 0) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$326
	CALL $93($2)
	
.LABEL $label$163
	CALL $93($3)
	
.LABEL $label$162
	CALL $93($3)
	
.LABEL $label$161
	CALL $93($3)
	
.LABEL $label$160
	CALL $93($3)
	
.LABEL $label$159
	CALL $93($3)
	
.LABEL $label$158
	CALL $93($3)
	
.LABEL $label$157
	CALL $93($3)
	
.LABEL $label$156
	CALL $93($3)
	
.LABEL $label$155
	CALL $93($3)
	
.LABEL $label$154
	CALL $93($3)
	
.LABEL $label$153
	CALL $93($3)
	
.LABEL $label$152
	CALL $93($3)
	
.LABEL $label$151
	CALL $93($3)
	
.LABEL $label$150
	CALL $93($3)
	
.LABEL $label$149
	CALL $93($3)
	
.LABEL $label$148
	CALL $93($3)
	
.LABEL $label$147
	CALL $93($3)
	
.LABEL $label$146
	CALL $93($3)
	
.LABEL $label$145
	CALL $93($3)
	
.LABEL $label$144
	CALL $93($3)
	
.LABEL $label$143
	CALL $93($3)
	
.LABEL $label$142
	CALL $93($3)
	
.LABEL $label$141
	CALL $93($3)
	
.LABEL $label$140
	CALL $93($3)
	
.LABEL $label$139
	CALL $93($3)
	
.LABEL $label$138
	CALL $93($3)
	
.LABEL $label$137
	CALL $93($3)
	
.LABEL $label$136
	CALL $93($3)
	
.LABEL $label$135
	CALL $93($3)
	
.LABEL $label$134
	CALL $93($3)
	
.LABEL $label$133
	CALL $93($3)
	
.LABEL $label$132
	CALL $93($3)
	
.LABEL $label$131
	CALL $93($3)
	
.LABEL $label$130
	CALL $93($3)
	
.LABEL $label$129
	CALL $93($3)
	
.LABEL $label$128
	CALL $93($3)
	
.LABEL $label$127
	CALL $93($3)
	
.LABEL $label$126
	CALL $93($3)
	
.LABEL $label$125
	CALL $93($3)
	
.LABEL $label$124
	CALL $93($3)
	
.LABEL $label$123
	CALL $93($3)
	
.LABEL $label$122
	CALL $93($3)
	
.LABEL $label$121
	CALL $93($3)
	
.LABEL $label$120
	CALL $93($3)
	
.LABEL $label$119
	CALL $93($3)
	
.LABEL $label$118
	CALL $93($3)
	
.LABEL $label$117
	CALL $93($3)
	
.LABEL $label$116
	CALL $93($3)
	
.LABEL $label$115
	CALL $93($3)
	
.LABEL $label$114
	CALL $93($3)
	
.LABEL $label$113
	CALL $93($3)
	
.LABEL $label$112
	CALL $93($3)
	
.LABEL $label$111
	CALL $93($3)
	
.LABEL $label$110
	CALL $93($3)
	
.LABEL $label$109
	CALL $93($3)
	
.LABEL $label$108
	CALL $93($3)
	
.LABEL $label$107
	CALL $93($3)
	
.LABEL $label$106
	CALL $93($3)
	
.LABEL $label$105
	CALL $93($3)
	
.LABEL $label$104
	CALL $93($3)
	
.LABEL $label$103
	CALL $93($3)
	
.LABEL $label$102
	CALL $93($3)
	
.LABEL $label$101
	CALL $93($3)
	
.LABEL $label$100
	CALL $93($3)
	
.LABEL $label$99
	CALL $93($3)
	
.LABEL $label$98
	CALL $93($3)
	
.LABEL $label$97
	CALL $93($3)
	
.LABEL $label$96
	CALL $93($3)
	
.LABEL $label$95
	CALL $93($3)
	
.LABEL $label$94
	CALL $93($3)
	
.LABEL $label$93
	CALL $93($3)
	
.LABEL $label$92
	CALL $93($3)
	
.LABEL $label$91
	CALL $93($3)
	
.LABEL $label$90
	CALL $93($3)
	
.LABEL $label$89
	CALL $93($3)
	
.LABEL $label$88
	CALL $93($3)
	
.LABEL $label$87
	CALL $93($3)
	
.LABEL $label$86
	CALL $93($3)
	
.LABEL $label$85
	CALL $93($3)
	
.LABEL $label$84
	CALL $93($3)
	
.LABEL $label$83
	CALL $93($3)
	
.LABEL $label$82
	CALL $93($3)
	
.LABEL $label$81
	CALL $93($3)
	
.LABEL $label$80
	CALL $93($3)
	
.LABEL $label$79
	CALL $93($3)
	
.LABEL $label$78
	CALL $93($3)
	
.LABEL $label$77
	CALL $93($3)
	
.LABEL $label$76
	CALL $93($3)
	
.LABEL $label$75
	CALL $93($3)
	
.LABEL $label$74
	CALL $93($3)
	
.LABEL $label$73
	CALL $93($3)
	
.LABEL $label$72
	CALL $93($3)
	
.LABEL $label$71
	CALL $93($3)
	
.LABEL $label$70
	CALL $93($3)
	
.LABEL $label$69
	CALL $93($3)
	
.LABEL $label$68
	CALL $93($3)
	
.LABEL $label$67
	CALL $93($3)
	
.LABEL $label$66
	CALL $93($3)
	
.LABEL $label$65
	CALL $93($3)
	
.LABEL $label$64
	CALL $93($3)
	
.LABEL $label$63
	CALL $93($3)
	
.LABEL $label$62
	CALL $93($3)
	
.LABEL $label$61
	CALL $93($3)
	
.LABEL $label$60
	CALL $93($3)
	
.LABEL $label$59
	CALL $93($3)
	
.LABEL $label$58
	CALL $93($3)
	
.LABEL $label$57
	CALL $93($4)
	
.LABEL $label$56
	CALL $93($3)
	
.LABEL $label$55
	CALL $93($3)
	
.LABEL $label$54
	CALL $93($3)
	
.LABEL $label$53
	CALL $93($3)
	
.LABEL $label$52
	CALL $93($3)
	
.LABEL $label$51
	CALL $93($3)
	
.LABEL $label$50
	CALL $93($3)
	
.LABEL $label$49
	CALL $93($3)
	
.LABEL $label$48
	CALL $93($3)
	
.LABEL $label$47
	CALL $93($3)
	
.LABEL $label$46
	CALL $93($3)
	
.LABEL $label$45
	CALL $93($3)
	
.LABEL $label$44
	CALL $93($3)
	
.LABEL $label$43
	CALL $93($3)
	
.LABEL $label$42
	CALL $93($3)
	
.LABEL $label$41
	CALL $93($3)
	
.LABEL $label$40
	CALL $93($3)
	
.LABEL $label$39
	CALL $93($3)
	
.LABEL $label$38
	CALL $93($4)
	
.LABEL $label$37
	$4 = [1]
	if ( (*($2 + [408]) & [1]) ){ goto $label$35 }
	
.LABEL $label$36
	if ( (*($2 + [384]) & $4) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	CALL _ZdlPv(*(($2 + [416])))
	if ( ((*($2 + [384]) & $4) == 0) ){ goto $label$33 }
	
.LABEL $label$34
	CALL _ZdlPv(*(($2 + [392])))
	$4 = [1]
	if ( ((*($2 + [360]) & [1]) == 0) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	$4 = [1]
	if ( (*($2 + [360]) & [1]) ){ goto $label$31 }
	
.LABEL $label$32
	if ( (*($2 + [336]) & $4) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	CALL _ZdlPv(*(($2 + [368])))
	if ( ((*($2 + [336]) & $4) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	CALL _ZdlPv(*(($2 + [344])))
	$4 = [1]
	if ( ((*($2 + [312]) & [1]) == 0) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$4 = [1]
	if ( (*($2 + [312]) & [1]) ){ goto $label$27 }
	
.LABEL $label$28
	if ( (*($2 + [288]) & $4) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	CALL _ZdlPv(*(($2 + [320])))
	if ( ((*($2 + [288]) & $4) == 0) ){ goto $label$25 }
	
.LABEL $label$26
	CALL _ZdlPv(*(($2 + [296])))
	$4 = [1]
	if ( ((*($2 + [264]) & [1]) == 0) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$4 = [1]
	if ( (*($2 + [264]) & [1]) ){ goto $label$23 }
	
.LABEL $label$24
	if ( (*($2 + [240]) & $4) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	CALL _ZdlPv(*(($2 + [272])))
	if ( ((*($2 + [240]) & $4) == 0) ){ goto $label$21 }
	
.LABEL $label$22
	CALL _ZdlPv(*(($2 + [248])))
	$4 = [1]
	if ( ((*($2 + [216]) & [1]) == 0) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$4 = [1]
	if ( (*($2 + [216]) & [1]) ){ goto $label$19 }
	
.LABEL $label$20
	if ( (*($2 + [192]) & $4) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL _ZdlPv(*(($2 + [224])))
	if ( ((*($2 + [192]) & $4) == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL _ZdlPv(*(($2 + [200])))
	$4 = [1]
	if ( ((*($2 + [168]) & [1]) == 0) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$4 = [1]
	if ( (*($2 + [168]) & [1]) ){ goto $label$15 }
	
.LABEL $label$16
	if ( (*($2 + [144]) & $4) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL _ZdlPv(*(($2 + [176])))
	if ( ((*($2 + [144]) & $4) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL _ZdlPv(*(($2 + [152])))
	$4 = [1]
	if ( ((*($2 + [120]) & [1]) == 0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$4 = [1]
	if ( (*($2 + [120]) & [1]) ){ goto $label$11 }
	
.LABEL $label$12
	if ( (*($2 + [96]) & $4) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL _ZdlPv(*(($2 + [128])))
	if ( ((*($2 + [96]) & $4) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL _ZdlPv(*(($2 + [104])))
	$4 = [1]
	if ( ((*($2 + [72]) & [1]) == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$4 = [1]
	if ( (*($2 + [72]) & [1]) ){ goto $label$7 }
	
.LABEL $label$8
	if ( (*($2 + [48]) & $4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL _ZdlPv(*(($2 + [80])))
	if ( ((*($2 + [48]) & $4) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv(*(($2 + [56])))
	$4 = [1]
	if ( ((*($2 + [24]) & [1]) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = [1]
	if ( (*($2 + [24]) & [1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ((*($2) & $4) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL _ZdlPv(*(($2 + [32])))
	if ( ((*($2) & $4) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*($2 + [8]))
	
.LABEL $label$1
	$1 = *(($0 + [12]))
	$3 = *(($0 + [44]))
	$5 = *(($0 + [40]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$563 }
	
.LOOP $label$565:
	$4 = ($3 + [-24])
	$8 = *($4)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$564 }
	$3 = $4
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$565 }
	goto $label$563 
	
.LABEL $label$564
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$563 }
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)$7), [10250])
	if ( $8 ){ goto $label$561 }
	goto $label$562 
	
.LABEL $label$563
	$4 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)7235159541906332864, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$562 }
	CALL eosio_assert(((int_32)*(CALL $7($7, $4) + [32]) == (int_32)$7), [10250])
	goto $label$561 
	
.LABEL $label$562
	$12 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)CALL $fimport$3()), [10329])
	*(($4 = CALL _Znwj([48])) + [32]) = $7
	*($4 + [8]) = (int_64)4569063951553953530
	*($4 + [4]) = [300]
	*($4 + [16]) = [50000]
	$1 = CALL current_time()
	*($4 + [20]) = [0]
	*($4 + [24]) = ((uint_64)$1 / (uint_64)(int_64)1000000)
	*($4) = *(($0 + [12]))
	*($2 + [872]) = ($2 + [28])
	*($2 + [868]) = $2
	*($2 + [864]) = $2
	*($2 + [880]) = ($2 + [864])
	*($2 + [892]) = ($4 + [4])
	*($2 + [888]) = $4
	*($2 + [896]) = ($4 + [8])
	*($2 + [900]) = ($4 + [16])
	*($2 + [904]) = ($4 + [20])
	*($2 + [908]) = ($4 + [24])
	CALL $8(($2 + [888]), ($2 + [880]))
	$1 = *($4)
	$5 = CALL db_store_i64(*(($0 + [24])), (int_64)7235159541906332864, $12, $1, $2, [28])
	*($4 + [36]) = $5
	$3 = ($0 + [32])
	if ( ((uint_64)*($3) > (uint_64)$1) ){ goto $label$566 }
	*($3) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$566
	*($2 + [888]) = $4
	$1 = *($4)
	*($2) = $1
	*($2 + [864]) = $5
	$8 = ($0 + [44])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [48]))) ){ goto $label$568 }
	*($3 + [8]) = $1
	*($3 + [16]) = $5
	*($2 + [888]) = [0]
	*($3) = $4
	*($8) = ($3 + [24])
	$4 = *($2 + [888])
	*($2 + [888]) = [0]
	if ( $4 ){ goto $label$567 }
	goto $label$561 
	
.LABEL $label$568
	CALL $9(($0 + [40]), ($2 + [888]), $2, ($2 + [864]))
	$4 = *($2 + [888])
	*($2 + [888]) = [0]
	if ( ($4 == 0) ){ goto $label$561 }
	
.LABEL $label$567
	CALL _ZdlPv($4)
	
.LABEL $label$561
	$4 = CALL $10($7, *(($0 + [12])), [8910])
	*($0 + [56]) = *($4)
	*(($0 + [80])) = *(($4 + [24]))
	*(($0 + [72])) = *(($4 + [16]))
	*(($0 + [64])) = *(($4 + [8]))
	$1 = *(($0 + [88]))
	$3 = *(($0 + [124]))
	$5 = *(($0 + [120]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$571 }
	
.LOOP $label$573:
	$4 = ($3 + [-24])
	$8 = *($4)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$572 }
	$3 = $4
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$573 }
	goto $label$571 
	
.LABEL $label$572
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$571 }
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$6), [10250])
	if ( $8 ){ goto $label$569 }
	goto $label$570 
	
.LABEL $label$571
	$4 = CALL db_find_i64(*(($0 + [96])), *(($0 + [104])), (int_64)3607572834567340032, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$570 }
	CALL eosio_assert(((int_32)*(CALL $11($6, $4) + [16]) == (int_32)$6), [10250])
	goto $label$569 
	
.LABEL $label$570
	$12 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [96])) == (int_64)CALL $fimport$3()), [10329])
	*(($4 = CALL _Znwj([32])) + [16]) = $6
	*($4 + [8]) = [1]
	*($4) = *(($0 + [88]))
	CALL eosio_assert([1], [10162])
	CALL memcpy($2, $4, [8])
	CALL eosio_assert([1], [10162])
	CALL memcpy(($2 | [8]), ($4 + [8]), [4])
	$1 = *($4)
	$5 = CALL db_store_i64(*(($0 + [104])), (int_64)3607572834567340032, $12, $1, $2, [12])
	*($4 + [20]) = $5
	$3 = ($0 + [112])
	if ( (uint_64)($1 <= *($3)) ){ goto $label$574 }
	*($3) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$574
	*($2 + [888]) = $4
	$1 = *($4)
	*($2) = $1
	*($2 + [864]) = $5
	$8 = ($0 + [124])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [128]))) ){ goto $label$576 }
	*($3 + [8]) = $1
	*($3 + [16]) = $5
	*($2 + [888]) = [0]
	*($3) = $4
	*($8) = ($3 + [24])
	$4 = *($2 + [888])
	*($2 + [888]) = [0]
	if ( $4 ){ goto $label$575 }
	goto $label$569 
	
.LABEL $label$576
	CALL $12(($0 + [120]), ($2 + [888]), $2, ($2 + [864]))
	$4 = *($2 + [888])
	*($2 + [888]) = [0]
	if ( ($4 == 0) ){ goto $label$569 }
	
.LABEL $label$575
	CALL _ZdlPv($4)
	
.LABEL $label$569
	$4 = CALL $13($6, *(($0 + [88])), [8930])
	*($0 + [136]) = *($4)
	*(($0 + [144])) = *(($4 + [8]))
	$global$0 = ($2 + [912])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return $0
}

void .FUNC memory ()
{
}

void .FUNC $1 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = *($2)
	$6 = ($5 & [1])
	$4 = ($2 + [1])
	CALL $102($1, ( *($2 + [8]) ? $4 : $6 ), ( *($2 + [4]) ? uint_32($5 >> [1]) : $6 ))
	$6 = *($1)
	if ( ($6 & [1]) ){ goto $label$7 }
	$5 = [1]
	$7 = uint_32($6 >> [1])
	if ( ((int_32)$7 >= (int_32)[1]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$5 = [1]
	$7 = *($1 + [4])
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($1 + $5)
	$9 = [0]
	$10 = ($2 + [4])
	$11 = ($2 + [8])
	if ( (($6 & $5) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$12 = [2]
	goto $label$1 
	
.LABEL $label$4
	$12 = [2]
	goto $label$1 
	
.LABEL $label$3
	$12 = [14]
	goto $label$1 
	
.LABEL $label$2
	$12 = [4]
	
.LABEL $label$1
	
.LOOP $label$8:
	goto $label$36 
	
.LABEL $label$48
	$6 = *($1)
	if ( ($6 & $5) ){ goto $label$26 }
	$12 = [14]
	goto $label$8 
	
.LABEL $label$47
	$13 = $8
	$14 = uint_32(($6 & [254]) >> $5)
	if ( ((uint_32)$14 >= (uint_32)$9) ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$46
	$13 = *(($1 + [8]))
	$14 = *(($1 + [4]))
	if ( ($14 <= $9) ){ goto $label$25 }
	$12 = [5]
	goto $label$8 
	
.LABEL $label$45
	$6 = $9
	$16 = ($15 & $5)
	$15 = *($2)
	$15 = ( *($10) ? uint_32($15 >> $5) : $16 )
	if ( ($15 == 0) ){ goto $label$23 }
	$12 = [6]
	goto $label$8 
	
.LABEL $label$44
	$14 = ($13 + $9)
	$17 = ($13 + $14)
	$6 = ($17 - $14)
	if ( ((int_32)$6 < (int_32)$15) ){ goto $label$19 }
	$12 = [7]
	goto $label$8 
	
.LABEL $label$43
	$18 = ( *($11) ? $4 : $16 )
	$16 = *($18)
	$12 = [8]
	goto $label$8 
	
.LABEL $label$42
	$6 = (($6 - $15) + $5)
	if ( ($6 == 0) ){ goto $label$17 }
	$12 = [9]
	goto $label$8 
	
.LABEL $label$41
	$6 = CALL $108($14, $16, $6)
	if ( ($6 == 0) ){ goto $label$16 }
	$12 = [10]
	goto $label$8 
	
.LABEL $label$40
	if ( (CALL $109($6, $18, $15) == 0) ){ goto $label$15 }
	$12 = [11]
	goto $label$8 
	
.LABEL $label$39
	$14 = ($6 + $5)
	$6 = ($17 - $14)
	if ( ((int_32)$6 >= (int_32)$15) ){ goto $label$18 }
	$12 = [12]
	goto $label$8 
	
.LABEL $label$38
	$6 = $17
	$12 = [13]
	goto $label$8 
	
.LABEL $label$37
	$6 = ( [-1] ? ($6 - $13) : ((int_32)$6 == (int_32)$17) )
	$12 = [0]
	goto $label$8 
	
.LABEL $label$36
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$24 }
	$12 = [15]
	goto $label$8 
	
.LABEL $label$35
	$9 = CALL $95($3, $1, $9, ($6 - $9), $1)
	$15 = ($0 + [4])
	$14 = *($15)
	if ( ((int_32)$14 == (int_32)*(($0 + [8]))) ){ goto $label$14 }
	$12 = [16]
	goto $label$8 
	
.LABEL $label$34
	CALL $94($14, $9)
	*($15) = (*($15) + [12])
	$15 = *($2)
	if ( ($15 & $5) ){ goto $label$12 }
	$12 = [20]
	goto $label$8 
	
.LABEL $label$33
	$6 = ($6 + uint_32($15 >> $5))
	if ( (*($3) & $5) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$32
	CALL $2($0, $9)
	$15 = *($2)
	if ( (($15 & $5) == 0) ){ goto $label$13 }
	$12 = [17]
	goto $label$8 
	
.LABEL $label$31
	$6 = ($6 + *($10))
	if ( ((*($3) & $5) == 0) ){ goto $label$11 }
	$12 = [18]
	goto $label$8 
	
.LABEL $label$30
	CALL _ZdlPv(*(($3 + [8])))
	$12 = [19]
	goto $label$8 
	
.LABEL $label$29
	$9 = ($6 + [-1])
	$12 = [1]
	goto $label$8 
	
.LABEL $label$28
	$9 = ($9 + $5)
	if ( ((int_32)$9 < (int_32)$7) ){ goto $label$20 }
	$12 = [2]
	goto $label$8 
	
.LABEL $label$27
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$26
	$12 = [4]
	goto $label$8 
	
.LABEL $label$25
	$12 = [1]
	goto $label$8 
	
.LABEL $label$24
	$12 = [1]
	goto $label$8 
	
.LABEL $label$23
	$12 = [0]
	goto $label$8 
	
.LABEL $label$22
	$12 = [1]
	goto $label$8 
	
.LABEL $label$21
	$12 = [5]
	goto $label$8 
	
.LABEL $label$20
	$12 = [3]
	goto $label$8 
	
.LABEL $label$19
	$12 = [12]
	goto $label$8 
	
.LABEL $label$18
	$12 = [8]
	goto $label$8 
	
.LABEL $label$17
	$12 = [12]
	goto $label$8 
	
.LABEL $label$16
	$12 = [12]
	goto $label$8 
	
.LABEL $label$15
	$12 = [13]
	goto $label$8 
	
.LABEL $label$14
	$12 = [21]
	goto $label$8 
	
.LABEL $label$13
	$12 = [20]
	goto $label$8 
	
.LABEL $label$12
	$12 = [17]
	goto $label$8 
	
.LABEL $label$11
	$12 = [19]
	goto $label$8 
	
.LABEL $label$10
	$12 = [19]
	goto $label$8 
	
.LABEL $label$9
	$12 = [18]
	goto $label$8 
	$12
}

void .FUNC $14 (int_32 $0, int_64 $1)
{
	CALL eosio_assert(CALL $fimport$6($1), [8954])
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = ($0 + [96])
	$4 = *($0 + [88])
	$6 = *(($0 + [124]))
	$5 = *(($0 + [120]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$3), [10250])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($3), *(($0 + [104])), (int_64)3607572834567340032, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $11($3, $7)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$3), [10250])
	
.LABEL $label$1
	$7 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($7, [8977])
	CALL eosio_assert($7, [10380])
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$3), [10415])
	CALL eosio_assert(((int_64)*(($0 + [96])) == (int_64)CALL $fimport$3()), [10461])
	*($8 + [8]) = $1
	$4 = *($8)
	CALL eosio_assert([1], [10512])
	CALL eosio_assert([1], [10162])
	CALL memcpy($2, $8, [8])
	CALL eosio_assert([1], [10162])
	CALL memcpy(($2 | [8]), ($8 + [8]), [4])
	CALL db_update_i64(*($8 + [20]), (int_64)0, $2, [12])
	$7 = ($0 + [112])
	if ( (uint_64)($4 <= *($7)) ){ goto $label$5 }
	*($7) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($2 + [16])
}

void .FUNC $16 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6, int_64 $7, int_64 $8, int_64 $9, int_64 $10, int_64 $11)
{
	int_32 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_64 $24
	int_64 $25
	int_64 $26
	int_64 $27
	float_64 $28
	int_32 $29
	float_32 $30
	float_64 $31
	float_64 $32
	float_64 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	int_32 $41
	int_32 $42
	int_32 $43
	int_32 $44
	int_32 $45
	int_32 $46
	int_32 $47
	int_32 $48
	int_32 $49
	$12 = ($global$0 - [592])
	$global$0 = $12
	*($12 + [568]) = $1
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)4), [9002])
	CALL eosio_assert(CALL $fimport$6($3), [9027])
	CALL eosio_assert(CALL $fimport$6($4), [9056])
	CALL eosio_assert(CALL $fimport$6($5), [9085])
	CALL eosio_assert(CALL $fimport$6($6), [9114])
	CALL eosio_assert(CALL $fimport$6($7), [9143])
	CALL eosio_assert(CALL $fimport$6($8), [9172])
	CALL eosio_assert(CALL $fimport$6($9), [9201])
	CALL eosio_assert(CALL $fimport$6($10), [9230])
	CALL eosio_assert(CALL $fimport$6($11), [9259])
	*($12 + [504]) = $4
	*($12 + [496]) = $3
	*($12 + [512]) = $5
	*($12 + [520]) = $6
	*($12 + [528]) = $7
	*($12 + [536]) = $8
	*($12 + [544]) = $9
	*($12 + [552]) = $10
	*($12 + [560]) = $11
	$1 = ((int_64)*($2) * (int_64)9)
	$13 = ((int_64)((int_64)$1 * (int_64)*(($0 + [60]))) / (int_64)10000)
	CALL eosio_assert((uint_64)(((int_64)$13 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [10093])
	$14 = (int_64))($1 - $13)
	$15 = [0]
	$1 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$16 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$1 = $16
	$17 = [1]
	$18 = $15
	$15 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$1 = $16
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$17 = ((int_32)$15 < (int_32)[6])
	$18 = ($15 + [1])
	$15 = $18
	if ( $17 ){ goto $label$5 }
	$17 = [1]
	$15 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$17 = [0]
	
.LABEL $label$1
	CALL eosio_assert($17, [10142])
	*(($12 + [248])) = [0]
	*($12 + [240]) = (int_64)0
	$15 = CALL $110([9288])
	if ( ((uint_32)$15 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$15 >= (uint_32)[11]) ){ goto $label$12 }
	*($12 + [240]) = ($15 << [1])
	$17 = (($12 + [240]) | [1])
	if ( $15 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$18 = (($15 + [16]) & [-16])
	$17 = CALL _Znwj($18)
	*($12 + [240]) = ($18 | [1])
	*($12 + [248]) = $17
	*($12 + [244]) = $15
	
.LABEL $label$11
	CALL memcpy($17, [9288], $15)
	
.LABEL $label$10
	*(($17 + $15)) = [0]
	*($12 + [32]) = (int_64)0
	*($12 + [40]) = [0]
	$1 = *($12 + [568])
	CALL $98(($12 + [32]), [40])
	
.LOOP $label$13:
	$16 = ((int_64)$1 / (int_64)10)
	CALL $101(($12 + [32]), *(((CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$16 * (int_64)10))) + [10082])))
	$19 = ((int_64)$1 + (int_64)9)
	$1 = $16
	if ( ((uint_64)$19 > (uint_64)(int_64)18) ){ goto $label$13 }
	$20 = (($12 + [32]) | [1])
	$21 = *((($12 + [32]) + [8]))
	$18 = ($15 & [1])
	$15 = *($12 + [32])
	$23 = uint_32($15 >> [1])
	$22 = *($12 + [36])
	$17 = ( $22 ? $23 : $18 )
	if ( ($17 == 0) ){ goto $label$14 }
	$15 = ( $21 ? $20 : $18 )
	$17 = (($15 + $17) + [-1])
	if ( ((uint_32)$17 <= (uint_32)$15) ){ goto $label$14 }
	
.LOOP $label$15:
	$18 = *($15)
	*($15) = *($17)
	*($17) = $18
	$17 = ($17 + [-1])
	$15 = ($15 + [1])
	if ( ($15 <= $17) ){ goto $label$15 }
	$15 = *($12 + [32])
	$23 = uint_32($15 >> [1])
	$18 = ($15 & [1])
	$21 = *(($12 + [40]))
	$22 = *($12 + [36])
	
.LABEL $label$14
	$15 = CALL $102(($12 + [240]), ( $21 ? $20 : $18 ), ( $22 ? $23 : $18 ))
	$17 = ($15 + [8])
	*((($12 + [480]) + [8])) = *($17)
	*($12 + [480]) = *($15)
	*($15) = (int_64)0
	*($17) = [0]
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*(($12 + [40])))
	
.LABEL $label$16
	if ( ((*($12 + [240]) & [1]) == 0) ){ goto $label$17 }
	CALL _ZdlPv(*($12 + [248]))
	
.LABEL $label$17
	$24 = *($0)
	$1 = (int_64)6
	
.LOOP $label$18:
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$18 }
	*($12 + [104]) = (int_64)3617214756542218240
	*($12 + [96]) = $24
	$1 = (int_64)0
	$19 = (int_64)59
	$15 = [9314]
	$25 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$24 }
	$17 = *($15)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$17 = ($17 + [-91])
	goto $label$22 
	
.LABEL $label$24
	$16 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$17 = ( ($17 + [-48]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$19 & (int_64)4294967295))
	
.LABEL $label$20
	$15 = ($15 + [1])
	$19 = ((int_64)$19 + (int_64)4294967291)
	$25 = ((int_64)$16 | (int_64)$25)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$19 }
	$1 = (int_64)0
	$19 = (int_64)59
	$15 = [9326]
	$26 = (int_64)0
	
.LOOP $label$25:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$30 }
	$17 = *($15)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$17 = ($17 + [-91])
	goto $label$28 
	
.LABEL $label$30
	$16 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$17 = ( ($17 + [-48]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$19 & (int_64)4294967295))
	
.LABEL $label$26
	$15 = ($15 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$26 = ((int_64)$16 | (int_64)$26)
	$19 = ((int_64)$19 + (int_64)4294967291)
	if ( ((int_64)$19 != (int_64)55834574842) ){ goto $label$25 }
	$1 = (int_64)0
	$16 = (int_64)59
	$15 = [9335]
	$27 = (int_64)0
	
.LOOP $label$31:
	$19 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$32 }
	$17 = *($15)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$17 = ($17 + [-91])
	goto $label$33 
	
.LABEL $label$34
	$17 = ( ($17 + [-48]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$19 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $17) & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$32
	$15 = ($15 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$27 = ((int_64)$19 | (int_64)$27)
	$16 = ((int_64)$16 + (int_64)4294967291)
	if ( ((int_64)$16 != (int_64)55834574842) ){ goto $label$31 }
	*(($12 + [264])) = (int_64)1397703940
	*($12 + [248]) = $27
	*($12 + [240]) = $24
	*($12 + [256]) = $13
	CALL $94(($12 + [272]), ($12 + [480]))
	$15 = CALL $17(($12 + [32]), ($12 + [96]), $25, $26, ($12 + [240]))
	CALL $18(($12 + [464]), $15)
	$17 = *($12 + [464])
	CALL send_inline($17, (*($12 + [468]) - $17))
	$17 = *($12 + [464])
	if ( ($17 == 0) ){ goto $label$35 }
	*($12 + [468]) = $17
	CALL _ZdlPv($17)
	
.LABEL $label$35
	$17 = *($15 + [28])
	if ( ($17 == 0) ){ goto $label$36 }
	*(($15 + [32])) = $17
	CALL _ZdlPv($17)
	
.LABEL $label$36
	$17 = *($15 + [16])
	if ( ($17 == 0) ){ goto $label$37 }
	*(($15 + [20])) = $17
	CALL _ZdlPv($17)
	
.LABEL $label$37
	if ( ((*($12 + [272]) & [1]) == 0) ){ goto $label$38 }
	CALL _ZdlPv(*(($12 + [280])))
	
.LABEL $label$38
	$27 = *($0)
	$1 = (int_64)6
	
.LOOP $label$39:
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$39 }
	$1 = (int_64)0
	$16 = (int_64)59
	$15 = [9335]
	$25 = (int_64)0
	
.LOOP $label$40:
	$19 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$41 }
	$17 = *($15)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$43 }
	$17 = ($17 + [-91])
	goto $label$42 
	
.LABEL $label$43
	$17 = ( ($17 + [-48]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$42
	$19 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $17) & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$41
	$15 = ($15 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$25 = ((int_64)$19 | (int_64)$25)
	$16 = ((int_64)$16 + (int_64)4294967291)
	if ( ((int_64)$16 != (int_64)55834574842) ){ goto $label$40 }
	$1 = (int_64)0
	$19 = (int_64)59
	$15 = [9348]
	$26 = (int_64)0
	
.LOOP $label$44:
	if ( ((uint_64)$1 > (uint_64)(int_64)8) ){ goto $label$49 }
	$17 = *($15)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$17 = ($17 + [-91])
	goto $label$47 
	
.LABEL $label$49
	$16 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$48
	$17 = ( ($17 + [-48]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$46
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$19 & (int_64)4294967295))
	
.LABEL $label$45
	$15 = ($15 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$26 = ((int_64)$16 | (int_64)$26)
	$19 = ((int_64)$19 + (int_64)4294967291)
	if ( ((int_64)$19 != (int_64)55834574842) ){ goto $label$44 }
	*($12 + [240]) = *($12 + [568])
	*($12 + [248]) = *($12 + [496])
	*($12 + [256]) = *($12 + [504])
	*($12 + [264]) = *((($12 + [496]) + [16]))
	*($12 + [272]) = *((($12 + [496]) + [24]))
	*($12 + [280]) = *((($12 + [496]) + [32]))
	*($12 + [288]) = *(($12 + [536]))
	*($12 + [296]) = *(($12 + [544]))
	*($12 + [304]) = *(($12 + [552]))
	*(($17 = (($12 + [32]) + [24]))) = [0]
	*(($12 + [328])) = *(($2 + [8]))
	*($12 + [32]) = $25
	*($12 + [40]) = $26
	*($12 + [48]) = (int_64)0
	*($12 + [312]) = *(($12 + [560]))
	*($12 + [320]) = *($2)
	*(($15 = CALL _Znwj([16]))) = $27
	*($15 + [8]) = (int_64)3617214756542218240
	*(($12 + [68])) = [0]
	$18 = ($15 + [16])
	*($17) = $18
	*(($12 + [52])) = $18
	*($12 + [48]) = $15
	*($12 + [60 align=4]) = (int_64)0
	CALL $19(($12 + [60]), [96])
	$15 = *((($12 + [32]) + [32]))
	$17 = *($12 + [60])
	*($12 + [100]) = $17
	*($12 + [96]) = $17
	*($12 + [104]) = $15
	*($12 + [80]) = ($12 + [96])
	*($12 + [464]) = ($12 + [240])
	CALL $20(($12 + [464]), ($12 + [80]))
	CALL $18(($12 + [96]), ($12 + [32]))
	$15 = *($12 + [96])
	CALL send_inline($15, (*($12 + [100]) - $15))
	$15 = *($12 + [96])
	if ( ($15 == 0) ){ goto $label$50 }
	*($12 + [100]) = $15
	CALL _ZdlPv($15)
	
.LABEL $label$50
	$15 = *($12 + [60])
	if ( ($15 == 0) ){ goto $label$51 }
	*(($12 + [64])) = $15
	CALL _ZdlPv($15)
	
.LABEL $label$51
	$15 = *($12 + [48])
	if ( ($15 == 0) ){ goto $label$52 }
	*(($12 + [52])) = $15
	CALL _ZdlPv($15)
	
.LABEL $label$52
	$28 = CALL $107((CASTING float_64)(uint_64 ((int_64)((int_64))(((int_64)((int_64))((int_64))((int_64))(((int_64)$4 + (int_64)$3) - $5) - $6) - $7) + (int_64)$8) + (int_64)$9) - $10) + (int_64)$11) + (int_64)*($12 + [568]))))
	$15 = CALL tapos_block_num()
	$17 = CALL tapos_block_prefix()
	if ( ((int_64)*([0]) != (int_64)0) ){ goto $label$53 }
	$1 = (CASTING int_64)(int_32 ((int_32)$17 * (int_32)$15))
	if ( ((float_64)(float_64)|$28| < (float_64)(float_64)9223372036854775808) ){ goto $label$55 }
	$16 = (int_64)-9223372036854775808
	goto $label$54 
	
.LABEL $label$55
	$16 = (Rounds 0)($28)
	
.LABEL $label$54
	*([0]) = ((int_64)((int_64)$1 + (int_64)$16) + (int_64)CALL current_time())
	
.LABEL $label$53
	*((($12 + [464]) + [8])) = *([0])
	*($12 + [464]) = *([0])
	CALL memset(($12 + [240]), [0], [216])
	*($12 + [232]) = [0]
	*($12 + [224]) = (int_64)0
	*($12 + [32]) = [0]
	$15 = [0]
	$17 = [0]
	if ( ((int_32)[0] != (int_32)[0]) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	CALL $93(($12 + [240]))
	
.LABEL $label$8
	$29 = [153]
	goto $label$6 
	
.LABEL $label$7
	$29 = [0]
	
.LABEL $label$6
	
.LOOP $label$56:
	goto $label$322 
	
.LABEL $label$323
	$15 = *($12 + [228])
	if ( ((int_32)$15 == (int_32)*((($12 + [224]) + [8]))) ){ goto $label$169 }
	$29 = [0]
	goto $label$56 
	
.LABEL $label$322
	*($15) = $17
	*($12 + [228]) = ($15 + [4])
	goto $label$168 
	
.LABEL $label$321
	CALL $21(($12 + [224]), ($12 + [32]))
	$29 = [1]
	goto $label$56 
	
.LABEL $label$320
	$15 = *($12 + [32])
	$17 = ($15 + [1])
	*($12 + [32]) = $17
	if ( ((int_32)$15 <= (int_32)[52]) ){ goto $label$167 }
	$29 = [2]
	goto $label$56 
	
.LABEL $label$319
	$17 = [0]
	$15 = *($12 + [228])
	$29 = [3]
	goto $label$56 
	
.LABEL $label$318
	$15 = CALL $22(($12 + [464]), int_32(($15 - *($12 + [224])) >> [2]))
	$15 = (*($12 + [224]) + ($15 << [2]))
	*((($12 + [240]) + $17)) = *($15)
	$21 = ($15 + [4])
	$18 = (*($12 + [228]) - $21)
	$2 = int_32($18 >> [2])
	if ( ($18 == 0) ){ goto $label$165 }
	$29 = [4]
	goto $label$56 
	
.LABEL $label$317
	CALL memmove($15, $21, $18)
	$29 = [5]
	goto $label$56 
	
.LABEL $label$316
	$15 = ($15 + ($2 << [2]))
	*($12 + [228]) = $15
	$17 = ($17 + [4])
	if ( ((int_32)$17 != (int_32)[216]) ){ goto $label$166 }
	$29 = [6]
	goto $label$56 
	
.LABEL $label$315
	*(($12 + [216])) = [0]
	*($12 + [208]) = (int_64)0
	$15 = CALL $110([9358])
	if ( ((uint_32)$15 >= (uint_32)[-16]) ){ goto $label$164 }
	$29 = [7]
	goto $label$56 
	
.LABEL $label$314
	if ( ((uint_32)$15 >= (uint_32)[11]) ){ goto $label$163 }
	$29 = [150]
	goto $label$56 
	
.LABEL $label$313
	*($12 + [208]) = ($15 << [1])
	$17 = (($12 + [208]) | [1])
	if ( $15 ){ goto $label$161 }
	goto $label$162 
	
.LABEL $label$312
	$18 = (($15 + [16]) & [-16])
	$17 = CALL _Znwj($18)
	*($12 + [208]) = ($18 | [1])
	*($12 + [216]) = $17
	*($12 + [212]) = $15
	$29 = [9]
	goto $label$56 
	
.LABEL $label$311
	CALL memcpy($17, [9358], $15)
	$29 = [10]
	goto $label$56 
	
.LABEL $label$310
	*(($17 + $15)) = [0]
	*(($12 + [200])) = [0]
	*($12 + [192]) = (int_64)0
	$15 = CALL $110([9358])
	if ( ((uint_32)$15 >= (uint_32)[-16]) ){ goto $label$160 }
	$29 = [11]
	goto $label$56 
	
.LABEL $label$309
	if ( ((uint_32)$15 >= (uint_32)[11]) ){ goto $label$159 }
	$29 = [148]
	goto $label$56 
	
.LABEL $label$308
	*($12 + [192]) = ($15 << [1])
	$17 = (($12 + [192]) | [1])
	if ( $15 ){ goto $label$157 }
	goto $label$158 
	
.LABEL $label$307
	$18 = (($15 + [16]) & [-16])
	$17 = CALL _Znwj($18)
	*($12 + [192]) = ($18 | [1])
	*($12 + [200]) = $17
	*($12 + [196]) = $15
	$29 = [13]
	goto $label$56 
	
.LABEL $label$306
	CALL memcpy($17, [9358], $15)
	$29 = [14]
	goto $label$56 
	
.LABEL $label$305
	*(($17 + $15)) = [0]
	$30 = (CASTING float_32)(int_64 $14)
	$31 = (PROMOTE float_64)(float_32 ((float_32)$30 / (float_32)(float_32)9))
	$32 = (PROMOTE float_64)(float_32 ((float_32)((float_32)$30 + (float_32)$30) / (float_32)(float_32)9))
	$33 = (PROMOTE float_64)(float_32 ((float_32)((float_32)$30 * (float_32)(float_32)3) / (float_32)(float_32)9))
	$34 = ($12 | [1])
	$35 = (($12 + [16]) | [1])
	$20 = (($12 + [32]) | [1])
	$36 = (($12 + [136]) | [1])
	$37 = (($12 + [152]) | [1])
	$23 = ($12 + [240])
	$38 = (($12 + [32]) + [16])
	$39 = (($12 + [32]) + [32])
	$40 = ($12 + [124])
	$41 = ($12 + [116])
	$11 = (int_64)0
	$42 = [0]
	goto $label$156 
	
.LABEL $label$304
	CALL _ZdlPv(*($2))
	if ( ((*($12 + [152]) & [1]) == 0) ){ goto $label$117 }
	$29 = [45]
	goto $label$56 
	
.LABEL $label$303
	CALL _ZdlPv(*($22))
	if ( (*($12 + [168]) & [1]) ){ goto $label$114 }
	goto $label$115 
	
.LABEL $label$302
	CALL _ZdlPv(*($18))
	if ( ((*($12) & [1]) == 0) ){ goto $label$64 }
	$29 = [110]
	goto $label$56 
	
.LABEL $label$301
	CALL _ZdlPv(*($43))
	if ( (*($12 + [16]) & [1]) ){ goto $label$120 }
	goto $label$121 
	
.LABEL $label$300
	$44 = (($12 + [496]) + ($42 << [3]))
	*($12 + [184]) = *($44)
	CALL $23(($12 + [32]), ($12 + [184]))
	$15 = CALL $100(($12 + [32]), [9359])
	$17 = ($15 + [8])
	*(($45 = (($12 + [168]) + [8]))) = *($17)
	*($12 + [168]) = *($15)
	*($15) = (int_64)0
	*($17) = [0]
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$154 }
	$29 = [16]
	goto $label$56 
	
.LABEL $label$299
	CALL _ZdlPv(*((($12 + [32]) + [8])))
	$29 = [17]
	goto $label$56 
	
.LABEL $label$298
	*(($22 = (($12 + [152]) + [8]))) = [0]
	*($12 + [152]) = (int_64)0
	$17 = CALL $110([9358])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$153 }
	$29 = [18]
	goto $label$56 
	
.LABEL $label$297
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$152 }
	$29 = [146]
	goto $label$56 
	
.LABEL $label$296
	*($12 + [152]) = ($17 << [1])
	$18 = $37
	if ( $17 ){ goto $label$150 }
	goto $label$151 
	
.LABEL $label$295
	$15 = (($17 + [16]) & [-16])
	$18 = CALL _Znwj($15)
	*($22) = $18
	*($12 + [152]) = ($15 | [1])
	*($12 + [156]) = $17
	$29 = [20]
	goto $label$56 
	
.LABEL $label$294
	CALL memcpy($18, [9358], $17)
	$29 = [21]
	goto $label$56 
	
.LABEL $label$293
	$15 = [0]
	*(($18 + $17)) = [0]
	$28 = (float_64)0
	$17 = $23
	goto $label$149 
	
.LABEL $label$292
	$28 = ((float_64)$28 + (float_64)$33)
	goto $label$136 
	
.LABEL $label$291
	$18 = CALL $94(($12 + [32]), (($0 + ((int_32)*($17) * (int_32)[12])) + [152]))
	$2 = *($12 + [32])
	$21 = CALL $110([8192])
	if ( ((int_32)$21 != (int_32)( *($12 + [36]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$147 }
	$29 = [145]
	goto $label$56 
	
.LABEL $label$290
	if ( (CALL $104($18, [0], [-1], [8192], $21) == 0) ){ goto $label$146 }
	$29 = [23]
	goto $label$56 
	
.LABEL $label$289
	$2 = *($12 + [32])
	$21 = CALL $110([8202])
	if ( ((int_32)$21 != (int_32)( *($12 + [36]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$145 }
	$29 = [144]
	goto $label$56 
	
.LABEL $label$288
	if ( (CALL $104($18, [0], [-1], [8202], $21) == 0) ){ goto $label$144 }
	$29 = [24]
	goto $label$56 
	
.LABEL $label$287
	$2 = *($12 + [32])
	$21 = CALL $110([8298])
	if ( ((int_32)$21 != (int_32)( *($12 + [36]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$143 }
	$29 = [143]
	goto $label$56 
	
.LABEL $label$286
	if ( (CALL $104($18, [0], [-1], [8298], $21) == 0) ){ goto $label$142 }
	$29 = [25]
	goto $label$56 
	
.LABEL $label$285
	$2 = *($12 + [32])
	$21 = CALL $110([8308])
	if ( ((int_32)$21 != (int_32)( *($12 + [36]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$141 }
	$29 = [141]
	goto $label$56 
	
.LABEL $label$284
	if ( (CALL $104($18, [0], [-1], [8308], $21) == 0) ){ goto $label$140 }
	$29 = [26]
	goto $label$56 
	
.LABEL $label$283
	$2 = *($12 + [32])
	$21 = CALL $110([8816])
	if ( ((int_32)$21 != (int_32)( *($12 + [36]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$139 }
	$29 = [139]
	goto $label$56 
	
.LABEL $label$282
	if ( (CALL $104($18, [0], [-1], [8816], $21) == 0) ){ goto $label$138 }
	$29 = [27]
	goto $label$56 
	
.LABEL $label$281
	$2 = *($12 + [32])
	$21 = CALL $110([8802])
	if ( ((int_32)$21 != (int_32)( *($12 + [36]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$135 }
	$29 = [138]
	goto $label$56 
	
.LABEL $label$280
	$28 = ( $28 ? ((float_64)$28 + (float_64)$32) : CALL $104($18, [0], [-1], [8802], $21) )
	goto $label$137 
	
.LABEL $label$279
	$28 = ((float_64)$28 + (float_64)$31)
	$29 = [28]
	goto $label$56 
	
.LABEL $label$278
	$18 = *($12 + [32])
	$2 = ($18 & [1])
	$21 = (($12 + [32]) + [8])
	CALL $102(($12 + [152]), ( *($21) ? $20 : $2 ), ( *($12 + [36]) ? uint_32($18 >> [1]) : $2 ))
	if ( ((uint_32)$15 > (uint_32)[4]) ){ goto $label$134 }
	$29 = [137]
	goto $label$56 
	
.LABEL $label$277
	CALL $100(($12 + [152]), [9361])
	$29 = [29]
	goto $label$56 
	
.LABEL $label$276
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$133 }
	$29 = [30]
	goto $label$56 
	
.LABEL $label$275
	CALL _ZdlPv(*($21))
	$29 = [31]
	goto $label$56 
	
.LABEL $label$274
	$17 = ($17 + [4])
	$15 = ($15 + [1])
	if ( ((int_32)$15 != (int_32)[6]) ){ goto $label$148 }
	$29 = [32]
	goto $label$56 
	
.LABEL $label$273
	CALL $24(($12 + [32]), ($12 + [168]), ($12 + [152]))
	if ( (*($12 + [152]) & [1]) ){ goto $label$132 }
	$29 = [136]
	goto $label$56 
	
.LABEL $label$272
	*($12 + [152]) = [0]
	goto $label$131 
	
.LABEL $label$271
	*(*($22)) = [0]
	*($12 + [156]) = [0]
	$29 = [34]
	goto $label$56 
	
.LABEL $label$270
	CALL $98(($12 + [152]), [0])
	$15 = *($21)
	*($22) = $15
	*($12 + [152]) = *($12 + [32])
	$17 = *($12 + [152])
	$18 = ($17 & [1])
	CALL $102(($12 + [208]), ( $15 ? $37 : $18 ), ( *($12 + [156]) ? uint_32($17 >> [1]) : $18 ))
	CALL $100(($12 + [208]), [9363])
	*(($2 = (($12 + [136]) + [8]))) = [0]
	*($12 + [136]) = (int_64)0
	CALL $98(($12 + [136]), [40])
	if ( ((float_64)(float_64)|$28| < (float_64)(float_64)9223372036854775808) ){ goto $label$130 }
	$29 = [135]
	goto $label$56 
	
.LABEL $label$269
	$27 = (int_64)-9223372036854775808
	goto $label$129 
	
.LABEL $label$268
	$27 = (Rounds 0)($28)
	$29 = [36]
	goto $label$56 
	
.LABEL $label$267
	$1 = $27
	$29 = [37]
	goto $label$56 
	
.LABEL $label$266
	$16 = ((int_64)$1 / (int_64)10)
	CALL $101(($12 + [136]), *(((CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$16 * (int_64)10))) + [10082])))
	$19 = ((int_64)$1 + (int_64)9)
	$1 = $16
	if ( ((uint_64)$19 > (uint_64)(int_64)18) ){ goto $label$128 }
	$29 = [38]
	goto $label$56 
	
.LABEL $label$265
	$15 = ($15 & [1])
	$15 = *($12 + [136])
	$17 = ( *($12 + [140]) ? uint_32($15 >> [1]) : $15 )
	if ( ($17 == 0) ){ goto $label$127 }
	$29 = [39]
	goto $label$56 
	
.LABEL $label$264
	$15 = ( *($2) ? $36 : $15 )
	$17 = (($15 + $17) + [-1])
	if ( ((uint_32)$17 <= (uint_32)$15) ){ goto $label$126 }
	$29 = [134]
	goto $label$56 
	
.LABEL $label$263
	$18 = *($15)
	*($15) = *($17)
	*($17) = $18
	$17 = ($17 + [-1])
	$15 = ($15 + [1])
	if ( ($15 <= $17) ){ goto $label$125 }
	$29 = [40]
	goto $label$56 
	
.LABEL $label$262
	CALL $24(($12 + [32]), ($12 + [168]), ($12 + [136]))
	$15 = *($12 + [32])
	$17 = ($15 & [1])
	CALL $102(($12 + [192]), ( *($21) ? $20 : $17 ), ( *($12 + [36]) ? uint_32($15 >> [1]) : $17 ))
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$124 }
	$29 = [41]
	goto $label$56 
	
.LABEL $label$261
	CALL _ZdlPv(*($21))
	$29 = [42]
	goto $label$56 
	
.LABEL $label$260
	CALL $100(($12 + [192]), [9363])
	if ( (((float_64)$28 > (float_64)(float_64)0) == 0) ){ goto $label$123 }
	$29 = [81]
	goto $label$56 
	
.LABEL $label$259
	CALL eosio_assert((uint_64)(((int_64)$27 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [10093])
	$1 = (int_64)5459781
	$15 = [0]
	$29 = [82]
	goto $label$56 
	
.LABEL $label$258
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$86 }
	$29 = [128]
	goto $label$56 
	
.LABEL $label$257
	$16 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$58 }
	$29 = [129]
	goto $label$56 
	
.LABEL $label$256
	$1 = $16
	$17 = [1]
	$18 = $15
	$15 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[6]) ){ goto $label$89 }
	goto $label$88 
	
.LABEL $label$255
	$1 = $16
	$29 = [131]
	goto $label$56 
	
.LABEL $label$254
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$87 }
	$29 = [132]
	goto $label$56 
	
.LABEL $label$253
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$17 = ((int_32)$15 < (int_32)[6])
	$18 = ($15 + [1])
	$15 = $18
	if ( $17 ){ goto $label$57 }
	$29 = [133]
	goto $label$56 
	
.LABEL $label$252
	$17 = [1]
	$15 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[6]) ){ goto $label$91 }
	goto $label$90 
	
.LABEL $label$251
	$17 = [0]
	$29 = [84]
	goto $label$56 
	
.LABEL $label$250
	CALL eosio_assert($17, [10142])
	$16 = *($0)
	$1 = (int_64)6
	$29 = [85]
	goto $label$56 
	
.LABEL $label$249
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$85 }
	$29 = [86]
	goto $label$56 
	
.LABEL $label$248
	*((($12 + [80]) + [8])) = (int_64)3617214756542218240
	*($12 + [80]) = $16
	$1 = (int_64)0
	$19 = (int_64)59
	$15 = [9314]
	$25 = (int_64)0
	$29 = [87]
	goto $label$56 
	
.LABEL $label$247
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$83 }
	$29 = [124]
	goto $label$56 
	
.LABEL $label$246
	$17 = *($15)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$60 }
	$29 = [127]
	goto $label$56 
	
.LABEL $label$245
	$17 = ($17 + [-91])
	goto $label$59 
	
.LABEL $label$244
	$16 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$243
	$17 = ( ($17 + [-48]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	$29 = [126]
	goto $label$56 
	
.LABEL $label$242
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	$29 = [123]
	goto $label$56 
	
.LABEL $label$241
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$19 & (int_64)4294967295))
	$29 = [89]
	goto $label$56 
	
.LABEL $label$240
	$15 = ($15 + [1])
	$19 = ((int_64)$19 + (int_64)4294967291)
	$25 = ((int_64)$16 | (int_64)$25)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$84 }
	$29 = [90]
	goto $label$56 
	
.LABEL $label$239
	$1 = (int_64)0
	$19 = (int_64)59
	$15 = [9326]
	$26 = (int_64)0
	$29 = [91]
	goto $label$56 
	
.LABEL $label$238
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$79 }
	$29 = [119]
	goto $label$56 
	
.LABEL $label$237
	$17 = *($15)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$62 }
	$29 = [122]
	goto $label$56 
	
.LABEL $label$236
	$17 = ($17 + [-91])
	goto $label$61 
	
.LABEL $label$235
	$16 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$78 }
	goto $label$77 
	
.LABEL $label$234
	$17 = ( ($17 + [-48]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	$29 = [121]
	goto $label$56 
	
.LABEL $label$233
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	$29 = [118]
	goto $label$56 
	
.LABEL $label$232
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$19 & (int_64)4294967295))
	$29 = [93]
	goto $label$56 
	
.LABEL $label$231
	$15 = ($15 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$26 = ((int_64)$16 | (int_64)$26)
	$19 = ((int_64)$19 + (int_64)4294967291)
	if ( ((int_64)$19 != (int_64)55834574842) ){ goto $label$80 }
	$29 = [94]
	goto $label$56 
	
.LABEL $label$230
	*(($46 = (($12 + [16]) + [8]))) = [0]
	*($12 + [16]) = (int_64)0
	$15 = CALL $110([9366])
	if ( ((uint_32)$15 >= (uint_32)[-16]) ){ goto $label$76 }
	$29 = [95]
	goto $label$56 
	
.LABEL $label$229
	if ( ((uint_32)$15 >= (uint_32)[11]) ){ goto $label$75 }
	$29 = [116]
	goto $label$56 
	
.LABEL $label$228
	*($12 + [16]) = ($15 << [1])
	$17 = $35
	if ( $15 ){ goto $label$73 }
	goto $label$74 
	
.LABEL $label$227
	$18 = (($15 + [16]) & [-16])
	$17 = CALL _Znwj($18)
	*($46) = $17
	*($12 + [16]) = ($18 | [1])
	*($12 + [20]) = $15
	$29 = [97]
	goto $label$56 
	
.LABEL $label$226
	CALL memcpy($17, [9366], $15)
	$29 = [98]
	goto $label$56 
	
.LABEL $label$225
	*(($17 + $15)) = [0]
	*(($43 = ($12 + [8]))) = [0]
	*($12) = (int_64)0
	CALL $98($12, [40])
	$1 = $11
	$29 = [99]
	goto $label$56 
	
.LABEL $label$224
	$16 = ((int_64)$1 / (int_64)10)
	CALL $101($12, *(((CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$16 * (int_64)10))) + [10082])))
	$19 = ((int_64)$1 + (int_64)9)
	$1 = $16
	if ( ((uint_64)$19 > (uint_64)(int_64)18) ){ goto $label$72 }
	$29 = [100]
	goto $label$56 
	
.LABEL $label$223
	$47 = *($43)
	$18 = ($15 & [1])
	$15 = *($12)
	$49 = uint_32($15 >> [1])
	$48 = *($12 + [4])
	$17 = ( $48 ? $49 : $18 )
	if ( ($17 == 0) ){ goto $label$71 }
	$29 = [101]
	goto $label$56 
	
.LABEL $label$222
	$15 = ( $47 ? $34 : $18 )
	$17 = (($15 + $17) + [-1])
	if ( ((uint_32)$17 <= (uint_32)$15) ){ goto $label$70 }
	$29 = [114]
	goto $label$56 
	
.LABEL $label$221
	$18 = *($15)
	*($15) = *($17)
	*($17) = $18
	$17 = ($17 + [-1])
	$15 = ($15 + [1])
	if ( ($15 <= $17) ){ goto $label$63 }
	$29 = [115]
	goto $label$56 
	
.LABEL $label$220
	$15 = *($12)
	$49 = uint_32($15 >> [1])
	$18 = ($15 & [1])
	$47 = *($43)
	$48 = *($12 + [4])
	$29 = [102]
	goto $label$56 
	
.LABEL $label$219
	$15 = CALL $102(($12 + [16]), ( $47 ? $34 : $18 ), ( $48 ? $49 : $18 ))
	$1 = *($15)
	*($15) = (int_64)0
	$17 = *($15 + [8])
	*($15 + [8]) = [0]
	*($21) = *($44)
	*($38) = $27
	*((($12 + [32]) + [24])) = (int_64)1397703940
	*($39) = $1
	*(($18 = (($12 + [32]) + [40]))) = $17
	*($12 + [32]) = *($0)
	CALL $18(($12 + [576]), CALL $17(($12 + [96]), ($12 + [80]), $25, $26, ($12 + [32])))
	$15 = *($12 + [576])
	CALL send_inline($15, (*($12 + [580]) - $15))
	$15 = *($12 + [576])
	if ( ($15 == 0) ){ goto $label$69 }
	$29 = [103]
	goto $label$56 
	
.LABEL $label$218
	*($12 + [580]) = $15
	CALL _ZdlPv($15)
	$29 = [104]
	goto $label$56 
	
.LABEL $label$217
	$15 = *($40)
	if ( ($15 == 0) ){ goto $label$68 }
	$29 = [105]
	goto $label$56 
	
.LABEL $label$216
	*((($12 + [96]) + [32])) = $15
	CALL _ZdlPv($15)
	$29 = [106]
	goto $label$56 
	
.LABEL $label$215
	$15 = *((($12 + [96]) + [16]))
	if ( ($15 == 0) ){ goto $label$67 }
	$29 = [107]
	goto $label$56 
	
.LABEL $label$214
	*($41) = $15
	CALL _ZdlPv($15)
	$29 = [108]
	goto $label$56 
	
.LABEL $label$213
	if ( (*($39) & [1]) ){ goto $label$66 }
	$29 = [113]
	goto $label$56 
	
.LABEL $label$212
	if ( (*($12) & [1]) ){ goto $label$65 }
	$29 = [112]
	goto $label$56 
	
.LABEL $label$211
	if ( ((*($12 + [16]) & [1]) == 0) ){ goto $label$122 }
	$29 = [111]
	goto $label$56 
	
.LABEL $label$210
	CALL _ZdlPv(*($46))
	$29 = [43]
	goto $label$56 
	
.LABEL $label$209
	if ( (*($12 + [136]) & [1]) ){ goto $label$119 }
	$29 = [80]
	goto $label$56 
	
.LABEL $label$208
	if ( (*($12 + [152]) & [1]) ){ goto $label$118 }
	$29 = [79]
	goto $label$56 
	
.LABEL $label$207
	if ( ((*($12 + [168]) & [1]) == 0) ){ goto $label$116 }
	$29 = [46]
	goto $label$56 
	
.LABEL $label$206
	CALL _ZdlPv(*($45))
	$29 = [47]
	goto $label$56 
	
.LABEL $label$205
	$23 = ($23 + [24])
	$42 = ($42 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	if ( (uint_64)($11 <= (int_64)9) ){ goto $label$155 }
	$29 = [48]
	goto $label$56 
	
.LABEL $label$204
	$1 = *($12 + [568])
	if ( (int_64)($1 == 0) ){ goto $label$113 }
	$29 = [49]
	goto $label$56 
	
.LABEL $label$203
	*(($18 = ($12 + [64]))) = [0]
	*($12 + [40]) = $1
	*($12 + [48]) = (int_64)-1
	*($12 + [56]) = (int_64)0
	$1 = *($0)
	*($12 + [32]) = $1
	*($12 + [84]) = ($12 + [208])
	*($12 + [80]) = ($12 + [568])
	*($12 + [88]) = ($12 + [192])
	*($12 + [576]) = $1
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$3()), [10329])
	*($12 + [100]) = ($12 + [80])
	*($12 + [96]) = ($12 + [32])
	*($12 + [104]) = ($12 + [576])
	*(($15 = CALL _Znwj([48])) + [8 align=4]) = (int_64)0
	*($15 + [16 align=4]) = (int_64)0
	*($15 + [24 align=4]) = (int_64)0
	*($15 + [32]) = ($12 + [32])
	CALL $25(($12 + [96]), $15)
	*($12 + [168]) = $15
	$1 = *($15)
	*($12 + [96]) = $1
	$2 = *($15 + [36])
	*($12 + [152]) = $2
	$21 = ($12 + [60])
	$17 = *($21)
	if ( ((uint_32)$17 >= (uint_32)*($18)) ){ goto $label$112 }
	$29 = [78]
	goto $label$56 
	
.LABEL $label$202
	*($17 + [8]) = $1
	*($17 + [16]) = $2
	*($12 + [168]) = [0]
	*($17) = $15
	*($21) = ($17 + [24])
	$15 = *($12 + [168])
	*($12 + [168]) = [0]
	if ( ($15 == 0) ){ goto $label$110 }
	$29 = [51]
	goto $label$56 
	
.LABEL $label$201
	if ( ((*($15 + [20]) & [1]) == 0) ){ goto $label$109 }
	$29 = [52]
	goto $label$56 
	
.LABEL $label$200
	CALL _ZdlPv(*(($15 + [28])))
	$29 = [53]
	goto $label$56 
	
.LABEL $label$199
	if ( ((*($15 + [8]) & [1]) == 0) ){ goto $label$108 }
	$29 = [54]
	goto $label$56 
	
.LABEL $label$198
	CALL _ZdlPv(*(($15 + [16])))
	$29 = [55]
	goto $label$56 
	
.LABEL $label$197
	CALL _ZdlPv($15)
	$18 = *($12 + [56])
	if ( $18 ){ goto $label$106 }
	$29 = [76]
	goto $label$56 
	
.LABEL $label$196
	$15 = [1]
	if ( (*($12 + [192]) & [1]) ){ goto $label$99 }
	$29 = [74]
	goto $label$56 
	
.LABEL $label$195
	if ( (*($12 + [208]) & $15) ){ goto $label$97 }
	$29 = [73]
	goto $label$56 
	
.LABEL $label$194
	$15 = *($12 + [224])
	if ( ($15 == 0) ){ goto $label$95 }
	$29 = [69]
	goto $label$56 
	
.LABEL $label$193
	*($12 + [228]) = $15
	CALL _ZdlPv($15)
	$29 = [70]
	goto $label$56 
	
.LABEL $label$192
	if ( ((*($12 + [480]) & [1]) == 0) ){ goto $label$92 }
	$29 = [71]
	goto $label$56 
	
.LABEL $label$191
	CALL _ZdlPv(*($12 + [488]))
	$29 = [72]
	goto $label$56 
	
.LABEL $label$190
	$global$0 = ($12 + [592])
	return (unreachable)
	
.LABEL $label$189
	CALL $26(($12 + [56]), ($12 + [168]), ($12 + [96]), ($12 + [152]))
	$15 = *($12 + [168])
	*($12 + [168]) = [0]
	if ( $15 ){ goto $label$111 }
	$29 = [77]
	goto $label$56 
	
.LABEL $label$188
	$18 = *($12 + [56])
	if ( ($18 == 0) ){ goto $label$107 }
	$29 = [56]
	goto $label$56 
	
.LABEL $label$187
	$2 = (($12 + [32]) + [28])
	$17 = *($2)
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$105 }
	$29 = [57]
	goto $label$56 
	
.LABEL $label$186
	$29 = [58]
	goto $label$56 
	
.LABEL $label$185
	$17 = ($17 + [-24])
	$15 = *($17)
	*($17) = [0]
	if ( ($15 == 0) ){ goto $label$103 }
	$29 = [59]
	goto $label$56 
	
.LABEL $label$184
	if ( ((*($15 + [20]) & [1]) == 0) ){ goto $label$102 }
	$29 = [60]
	goto $label$56 
	
.LABEL $label$183
	CALL _ZdlPv(*(($15 + [28])))
	$29 = [61]
	goto $label$56 
	
.LABEL $label$182
	if ( ((*($15 + [8]) & [1]) == 0) ){ goto $label$101 }
	$29 = [62]
	goto $label$56 
	
.LABEL $label$181
	CALL _ZdlPv(*(($15 + [16])))
	$29 = [63]
	goto $label$56 
	
.LABEL $label$180
	CALL _ZdlPv($15)
	$29 = [64]
	goto $label$56 
	
.LABEL $label$179
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$104 }
	$29 = [65]
	goto $label$56 
	
.LABEL $label$178
	$15 = *(($12 + [56]))
	goto $label$100 
	
.LABEL $label$177
	$15 = $18
	$29 = [66]
	goto $label$56 
	
.LABEL $label$176
	*($2) = $18
	CALL _ZdlPv($15)
	$15 = [1]
	if ( ((*($12 + [192]) & [1]) == 0) ){ goto $label$98 }
	$29 = [67]
	goto $label$56 
	
.LABEL $label$175
	CALL _ZdlPv(*($12 + [200]))
	if ( ((*($12 + [208]) & $15) == 0) ){ goto $label$96 }
	$29 = [68]
	goto $label$56 
	
.LABEL $label$174
	CALL _ZdlPv(*($12 + [216]))
	$15 = *($12 + [224])
	if ( $15 ){ goto $label$93 }
	goto $label$94 
	
.LABEL $label$173
	CALL $93(($12 + [152]))
	
.LABEL $label$172
	CALL $93(($12 + [16]))
	
.LABEL $label$171
	CALL $93(($12 + [208]))
	
.LABEL $label$170
	CALL $93(($12 + [192]))
	
.LABEL $label$169
	$29 = [153]
	goto $label$56 
	
.LABEL $label$168
	$29 = [1]
	goto $label$56 
	
.LABEL $label$167
	$29 = [152]
	goto $label$56 
	
.LABEL $label$166
	$29 = [3]
	goto $label$56 
	
.LABEL $label$165
	$29 = [5]
	goto $label$56 
	
.LABEL $label$164
	$29 = [151]
	goto $label$56 
	
.LABEL $label$163
	$29 = [8]
	goto $label$56 
	
.LABEL $label$162
	$29 = [10]
	goto $label$56 
	
.LABEL $label$161
	$29 = [9]
	goto $label$56 
	
.LABEL $label$160
	$29 = [149]
	goto $label$56 
	
.LABEL $label$159
	$29 = [12]
	goto $label$56 
	
.LABEL $label$158
	$29 = [14]
	goto $label$56 
	
.LABEL $label$157
	$29 = [13]
	goto $label$56 
	
.LABEL $label$156
	$29 = [15]
	goto $label$56 
	
.LABEL $label$155
	$29 = [15]
	goto $label$56 
	
.LABEL $label$154
	$29 = [17]
	goto $label$56 
	
.LABEL $label$153
	$29 = [147]
	goto $label$56 
	
.LABEL $label$152
	$29 = [19]
	goto $label$56 
	
.LABEL $label$151
	$29 = [21]
	goto $label$56 
	
.LABEL $label$150
	$29 = [20]
	goto $label$56 
	
.LABEL $label$149
	$29 = [22]
	goto $label$56 
	
.LABEL $label$148
	$29 = [22]
	goto $label$56 
	
.LABEL $label$147
	$29 = [23]
	goto $label$56 
	
.LABEL $label$146
	$29 = [142]
	goto $label$56 
	
.LABEL $label$145
	$29 = [24]
	goto $label$56 
	
.LABEL $label$144
	$29 = [142]
	goto $label$56 
	
.LABEL $label$143
	$29 = [25]
	goto $label$56 
	
.LABEL $label$142
	$29 = [142]
	goto $label$56 
	
.LABEL $label$141
	$29 = [26]
	goto $label$56 
	
.LABEL $label$140
	$29 = [142]
	goto $label$56 
	
.LABEL $label$139
	$29 = [27]
	goto $label$56 
	
.LABEL $label$138
	$29 = [140]
	goto $label$56 
	
.LABEL $label$137
	$29 = [28]
	goto $label$56 
	
.LABEL $label$136
	$29 = [28]
	goto $label$56 
	
.LABEL $label$135
	$29 = [28]
	goto $label$56 
	
.LABEL $label$134
	$29 = [29]
	goto $label$56 
	
.LABEL $label$133
	$29 = [31]
	goto $label$56 
	
.LABEL $label$132
	$29 = [33]
	goto $label$56 
	
.LABEL $label$131
	$29 = [34]
	goto $label$56 
	
.LABEL $label$130
	$29 = [35]
	goto $label$56 
	
.LABEL $label$129
	$29 = [36]
	goto $label$56 
	
.LABEL $label$128
	$29 = [37]
	goto $label$56 
	
.LABEL $label$127
	$29 = [40]
	goto $label$56 
	
.LABEL $label$126
	$29 = [40]
	goto $label$56 
	
.LABEL $label$125
	$29 = [134]
	goto $label$56 
	
.LABEL $label$124
	$29 = [42]
	goto $label$56 
	
.LABEL $label$123
	$29 = [43]
	goto $label$56 
	
.LABEL $label$122
	$29 = [43]
	goto $label$56 
	
.LABEL $label$121
	$29 = [43]
	goto $label$56 
	
.LABEL $label$120
	$29 = [111]
	goto $label$56 
	
.LABEL $label$119
	$29 = [44]
	goto $label$56 
	
.LABEL $label$118
	$29 = [45]
	goto $label$56 
	
.LABEL $label$117
	$29 = [79]
	goto $label$56 
	
.LABEL $label$116
	$29 = [47]
	goto $label$56 
	
.LABEL $label$115
	$29 = [47]
	goto $label$56 
	
.LABEL $label$114
	$29 = [46]
	goto $label$56 
	
.LABEL $label$113
	$29 = [76]
	goto $label$56 
	
.LABEL $label$112
	$29 = [50]
	goto $label$56 
	
.LABEL $label$111
	$29 = [51]
	goto $label$56 
	
.LABEL $label$110
	$29 = [77]
	goto $label$56 
	
.LABEL $label$109
	$29 = [53]
	goto $label$56 
	
.LABEL $label$108
	$29 = [55]
	goto $label$56 
	
.LABEL $label$107
	$29 = [76]
	goto $label$56 
	
.LABEL $label$106
	$29 = [56]
	goto $label$56 
	
.LABEL $label$105
	$29 = [75]
	goto $label$56 
	
.LABEL $label$104
	$29 = [58]
	goto $label$56 
	
.LABEL $label$103
	$29 = [64]
	goto $label$56 
	
.LABEL $label$102
	$29 = [61]
	goto $label$56 
	
.LABEL $label$101
	$29 = [63]
	goto $label$56 
	
.LABEL $label$100
	$29 = [66]
	goto $label$56 
	
.LABEL $label$99
	$29 = [67]
	goto $label$56 
	
.LABEL $label$98
	$29 = [74]
	goto $label$56 
	
.LABEL $label$97
	$29 = [68]
	goto $label$56 
	
.LABEL $label$96
	$29 = [73]
	goto $label$56 
	
.LABEL $label$95
	$29 = [70]
	goto $label$56 
	
.LABEL $label$94
	$29 = [70]
	goto $label$56 
	
.LABEL $label$93
	$29 = [69]
	goto $label$56 
	
.LABEL $label$92
	$29 = [72]
	goto $label$56 
	
.LABEL $label$91
	$29 = [82]
	goto $label$56 
	
.LABEL $label$90
	$29 = [84]
	goto $label$56 
	
.LABEL $label$89
	$29 = [82]
	goto $label$56 
	
.LABEL $label$88
	$29 = [84]
	goto $label$56 
	
.LABEL $label$87
	$29 = [83]
	goto $label$56 
	
.LABEL $label$86
	$29 = [83]
	goto $label$56 
	
.LABEL $label$85
	$29 = [85]
	goto $label$56 
	
.LABEL $label$84
	$29 = [87]
	goto $label$56 
	
.LABEL $label$83
	$29 = [88]
	goto $label$56 
	
.LABEL $label$82
	$29 = [123]
	goto $label$56 
	
.LABEL $label$81
	$29 = [89]
	goto $label$56 
	
.LABEL $label$80
	$29 = [91]
	goto $label$56 
	
.LABEL $label$79
	$29 = [92]
	goto $label$56 
	
.LABEL $label$78
	$29 = [118]
	goto $label$56 
	
.LABEL $label$77
	$29 = [93]
	goto $label$56 
	
.LABEL $label$76
	$29 = [117]
	goto $label$56 
	
.LABEL $label$75
	$29 = [96]
	goto $label$56 
	
.LABEL $label$74
	$29 = [98]
	goto $label$56 
	
.LABEL $label$73
	$29 = [97]
	goto $label$56 
	
.LABEL $label$72
	$29 = [99]
	goto $label$56 
	
.LABEL $label$71
	$29 = [102]
	goto $label$56 
	
.LABEL $label$70
	$29 = [102]
	goto $label$56 
	
.LABEL $label$69
	$29 = [104]
	goto $label$56 
	
.LABEL $label$68
	$29 = [106]
	goto $label$56 
	
.LABEL $label$67
	$29 = [108]
	goto $label$56 
	
.LABEL $label$66
	$29 = [109]
	goto $label$56 
	
.LABEL $label$65
	$29 = [110]
	goto $label$56 
	
.LABEL $label$64
	$29 = [112]
	goto $label$56 
	
.LABEL $label$63
	$29 = [114]
	goto $label$56 
	
.LABEL $label$62
	$29 = [120]
	goto $label$56 
	
.LABEL $label$61
	$29 = [121]
	goto $label$56 
	
.LABEL $label$60
	$29 = [125]
	goto $label$56 
	
.LABEL $label$59
	$29 = [126]
	goto $label$56 
	
.LABEL $label$58
	$29 = [130]
	goto $label$56 
	
.LABEL $label$57
	$29 = [131]
	goto $label$56 
	(unreachable)
	$29
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $17 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL _Znwj([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $19($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $27(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

int_32 .FUNC $10 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$0), [10250])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
	
.LABEL $label$1
	$5 = [0]
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7235159541906332864, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $7($0, $4)
	CALL eosio_assert(((int_32)*($5 + [32]) == (int_32)$0), [10250])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), $2)
	return $5
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [10301])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $111($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [10324])
	CALL memcpy($5, $2, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [10324])
	CALL memcpy(($5 + [8]), ($2 + [8]), [4])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $12(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $114($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $12 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $105($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $13 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [10250])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
	
.LABEL $label$1
	$5 = [0]
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607572834567340032, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $11($0, $4)
	CALL eosio_assert(((int_32)*($5 + [16]) == (int_32)$0), [10250])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), $2)
	return $5
}

int_32 .FUNC $75 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [10093])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$3 = $5
	$6 = [1]
	$7 = $4
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$3 = $5
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$7 = ($4 + [1])
	$4 = $7
	if ( $6 ){ goto $label$5 }
	$6 = [1]
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [10142])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy($0, *($4 + [4]), [8])
	$6 = (*($4 + [4]) + [8])
	*($4 + [4]) = $6
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $6) > (uint_32)[7]), [10324])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

void .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = [16]
	$4 = ($1 + [16])
	$6 = *($1 + [16])
	$5 = *(($1 + [20]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [4]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = (($7 & [-16]) + $3)
	
.LABEL $label$2
	$6 = *(($1 + [32]))
	$5 = *($1 + [28])
	$3 = (($5 - $3) - $6)
	$7 = ($1 + [28])
	$8 = (CASTING uint_64)(uint_32 ($6 - $5))
	
.LOOP $label$3:
	$3 = ($3 + [-1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	$5 = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $19($0, ([0] - $3))
	$5 = *(($0 + [4]))
	$3 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$3 = [0]
	
.LABEL $label$4
	*($2) = $3
	*($2 + [8]) = $5
	$0 = ($5 - $3)
	CALL eosio_assert(((int_32)$0 > (int_32)[7]), [10162])
	CALL memcpy($3, $1, [8])
	CALL eosio_assert(((int_32)($0 + [-8]) > (int_32)[7]), [10162])
	CALL memcpy(($3 + [8]), ($1 + [8]), [8])
	*($2 + [4]) = ($3 + [16])
	CALL $73(CALL $72($2, $4), $7)
	$global$0 = ($2 + [16])
}

void .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $105($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $58 (int_32 $0, int_64 $1)
{
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$2 = CALL $111($1)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($1 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $1)
	
.LABEL $label$1
	*($3 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [10324])
	CALL memcpy(($3 + [8]), $2, [8])
	$6 = *($3 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL $114($2)
	
.LABEL $label$5
	$1 = ($0 + int_32($4 >> [1]))
	if ( (($4 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $6), (int_64 $5))
	$global$0 = ($3 + [16])
	return [1]
}

void .FUNC $50 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	$4 = ($global$0 - [112])
	$global$0 = $4
	$5 = CALL current_time()
	$6 = ($0 + [16])
	$7 = ((uint_32)(*(($0 + [80])) + [-1541548800]) / (uint_32)[86400])
	$8 = ((uint_32)((CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000)) + [-1541548800]) / (uint_32)[86400])
	$5 = *($0 + [12])
	$10 = *(($0 + [44]))
	$9 = *(($0 + [40]))
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$3 }
	
.LOOP $label$5:
	$11 = ($10 + [-24])
	$12 = *($11)
	if ( ((int_64)*($12) == (int_64)$5) ){ goto $label$4 }
	$10 = $11
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($12 + [32]) == (int_32)$6), [10250])
	if ( ((uint_32)$8 > (uint_32)$7) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$12 = [0]
	$11 = CALL db_find_i64(*($6), *(($0 + [24])), (int_64)7235159541906332864, $5)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$6 }
	$12 = CALL $7($6, $11)
	CALL eosio_assert(((int_32)*($12 + [32]) == (int_32)$6), [10250])
	
.LABEL $label$6
	if ( ((uint_32)$8 <= (uint_32)$7) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [10380])
	CALL eosio_assert(((int_32)*($12 + [32]) == (int_32)$6), [10415])
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)CALL $fimport$3()), [10461])
	$11 = *($12)
	$5 = CALL current_time()
	*($12 + [20]) = [0]
	*($12 + [24]) = ((uint_64)$5 / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_32)$11 == (int_32)*($12)), [10512])
	*($4 + [72]) = (($4 + [32]) + [28])
	*($4 + [68]) = ($4 + [32])
	*($4 + [64]) = ($4 + [32])
	*($4 + [80]) = ($4 + [64])
	*($4 + [92]) = ($12 + [4])
	*($4 + [88]) = $12
	*($4 + [96]) = ($12 + [8])
	*($4 + [100]) = ($12 + [16])
	*($4 + [104]) = ($12 + [20])
	*($4 + [108]) = ($12 + [24])
	CALL $8(($4 + [88]), ($4 + [80]))
	CALL db_update_i64(*(($12 + [36])), (int_64)0, ($4 + [32]), [28])
	$5 = (CASTING uint_64)(uint_32 $11)
	$12 = ($0 + [32])
	if ( ((uint_64)*($12) > (uint_64)$5) ){ goto $label$7 }
	*($12) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$5 = *(($0 + [12]))
	$10 = *(($0 + [44]))
	$9 = *(($0 + [40]))
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$8 }
	
.LOOP $label$10:
	$11 = ($10 + [-24])
	$12 = *($11)
	if ( ((int_64)*($12) == (int_64)$5) ){ goto $label$9 }
	$10 = $11
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$8 }
	CALL eosio_assert(((int_32)*($12 + [32]) == (int_32)$6), [10250])
	goto $label$1 
	
.LABEL $label$8
	$12 = [0]
	$11 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)7235159541906332864, $5)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$1 }
	$12 = CALL $7($6, $11)
	CALL eosio_assert(((int_32)*($12 + [32]) == (int_32)$6), [10250])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)*($12 + [20]) < (int_32)*($12 + [16])), [9843])
	if ( ((int_32)*($12 + [20]) >= (int_32)*($12 + [16])) ){ goto $label$11 }
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [10380])
	CALL eosio_assert(((int_32)*($12 + [32]) == (int_32)$6), [10415])
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)CALL $fimport$3()), [10461])
	*($12 + [20]) = (*($12 + [20]) + [1])
	$5 = *($12)
	CALL eosio_assert([1], [10512])
	*($4 + [72]) = (($4 + [32]) + [28])
	*($4 + [68]) = ($4 + [32])
	*($4 + [64]) = ($4 + [32])
	*($4 + [80]) = ($4 + [64])
	*($4 + [92]) = ($12 + [4])
	*($4 + [88]) = $12
	*($4 + [96]) = ($12 + [8])
	*($4 + [100]) = ($12 + [16])
	*($4 + [104]) = ($12 + [20])
	*($4 + [108]) = ($12 + [24])
	CALL $8(($4 + [88]), ($4 + [80]))
	CALL db_update_i64(*(($12 + [36])), (int_64)0, ($4 + [32]), [28])
	$12 = ($0 + [32])
	if ( ((uint_64)*($12) > (uint_64)$5) ){ goto $label$11 }
	*($12) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$11
	$13 = *(($2 + [8]))
	*((($4 + [16]) + [8])) = $13
	$5 = *($2)
	*(($4 + [8])) = $13
	*($4 + [16]) = $5
	*($4) = $5
	CALL $16($0, (int_64)0, $4, $3, $3, $3, $3, $3, $3, $3, $3, $3)
	$global$0 = ($4 + [112])
}

void .FUNC $51 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	float_64 $16
	float_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	$5 = ($global$0 - [288])
	$global$0 = $5
	CALL eosio_assert(((int_32)*(($0 + [144])) == (int_32)[1]), [10205])
	$6 = *($0)
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$19 }
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$19 }
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$21 }
	if ( uint_32($7 >> [1]) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	if ( (*($4 + [4]) == 0) ){ goto $label$19 }
	
.LABEL $label$20
	CALL require_auth($1)
	$6 = *($3 + [8])
	if ( ((int_64)$6 != (int_64)1397703940) ){ goto $label$19 }
	$7 = *($4)
	$8 = CALL $110([9880])
	if ( ((int_32)$8 != (int_32)( *($4 + [4]) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$23 }
	if ( (CALL $104($4, [0], [-1], [9880], $8) == 0) ){ goto $label$22 }
	
.LABEL $label$23
	$7 = CALL $94(($5 + [216]), $4)
	*(($5 + [208])) = [0]
	*($5 + [200]) = (int_64)0
	$4 = CALL $110([9886])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$26 }
	*($5 + [200]) = ($4 << [1])
	$8 = (($5 + [200]) | [1])
	if ( $4 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$9 = (($4 + [16]) & [-16])
	$8 = CALL _Znwj($9)
	*($5 + [200]) = ($9 | [1])
	*($5 + [208]) = $8
	*($5 + [204]) = $4
	
.LABEL $label$25
	CALL memcpy($8, [9886], $4)
	
.LABEL $label$24
	*(($8 + $4)) = [0]
	CALL $1(($5 + [232]), $7, ($5 + [200]))
	if ( ((*($5 + [200]) & [1]) == 0) ){ goto $label$27 }
	CALL _ZdlPv(*($5 + [208]))
	
.LABEL $label$27
	if ( ((*($7) & [1]) == 0) ){ goto $label$28 }
	CALL _ZdlPv(*($7 + [8]))
	
.LABEL $label$28
	$4 = *($5 + [232])
	CALL $52([9888], $4, [9891], ($4 + [12]), [9895], ($4 + [24]), [9899], ($4 + [36]))
	if ( (((int_32)(*($5 + [236]) - *($5 + [232])) / (int_32)[12]) <= [4]) ){ goto $label$4 }
	CALL prints([9904])
	$10 = CALL $94(($5 + [184]), (*($5 + [232]) + [24]))
	$4 = *($5 + [184])
	$7 = CALL $110([9907])
	if ( ((int_32)$7 != (int_32)( *($10 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) )) ){ goto $label$29 }
	if ( (CALL $104($10, [0], [-1], [9907], $7) == 0) ){ goto $label$16 }
	
.LABEL $label$29
	$11 = CALL $94(($5 + [168]), (*($5 + [232]) + [36]))
	$12 = CALL $94(($5 + [152]), $10)
	*($5 + [32]) = $1
	CALL $23(($5 + [136]), ($5 + [32]))
	$4 = ( *($12 + [8]) ? ($12 + [1]) : (*($5 + [152]) & [1]) )
	$7 = [0]
	
.LOOP $label$30:
	$8 = ($4 + $7)
	$9 = ($7 + [1])
	$7 = $9
	if ( *($8) ){ goto $label$30 }
	$13 = (CASTING uint_64)(uint_32 ($9 + [-1]))
	$2 = (int_64)0
	$6 = (int_64)59
	$14 = (int_64)0
	
.LOOP $label$31:
	$15 = (int_64)0
	if ( ((uint_64)$2 >= (uint_64)$13) ){ goto $label$32 }
	$7 = *($4)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$7 = ($7 + [-91])
	goto $label$33 
	
.LABEL $label$34
	$7 = ( ($7 + [-48]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$36 }
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	goto $label$35 
	
.LABEL $label$36
	$15 = ((int_64)$15 & (int_64)15)
	
.LABEL $label$35
	$4 = ($4 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$6 = ((int_64)$6 + (int_64)4294967291)
	if ( ((int_64)$6 != (int_64)55834574842) ){ goto $label$31 }
	$16 = *(($0 + [64]))
	$2 = *($3)
	CALL eosio_assert([1], [10093])
	$17 = (CASTING float_64)(int_64 $2)
	$16 = ((float_64)$16 * (float_64)$17)
	if ( (((float_64)$16 < (float_64)(float_64)4294967296) & ((float_64)$16 >= (float_64)(float_64)0)) ){ goto $label$18 }
	$4 = [0]
	goto $label$17 
	
.LABEL $label$22
	$7 = *($4)
	$8 = CALL $110([9880])
	if ( ((int_32)$8 != (int_32)( *(($4 + [4])) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$19 }
	$7 = [0]
	if ( CALL $104($4, [0], [-1], [9880], $8) ){ goto $label$19 }
	$2 = *($3)
	CALL eosio_assert((((int_64)$2 < (int_64)9000001) & (int_64)(((int_64)$2 % (int_64)9000) == 0)), [9936])
	$14 = ((int_64)$2 / (int_64)9)
	CALL eosio_assert((uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [10093])
	$2 = (uint_64)$6 >> (uint_64)(int_64)8)
	
.LOOP $label$38:
	$9 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$15 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$39 }
	$2 = $15
	$9 = [1]
	$4 = $7
	$7 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	$2 = $15
	
.LOOP $label$40:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$37 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $4 ){ goto $label$40 }
	$9 = [1]
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$38 }
	
.LABEL $label$37
	CALL eosio_assert($9, [10142])
	*(($5 + [8])) = $6
	*($5 + [24]) = $6
	*($5) = $14
	*($5 + [16]) = $14
	CALL $50($0, $2, $5, $1)
	
.LABEL $label$19
	$global$0 = ($5 + [288])
	return (unreachable)
	
.LABEL $label$18
	$4 = (CASTING uint_32)(float_64 $16)
	
.LABEL $label$17
	$18 = (CASTING uint_64)(uint_32 $4)
	$2 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$43:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$42 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$44 }
	$2 = $6
	$7 = [1]
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$44
	$2 = $6
	
.LOOP $label$45:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$42 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$4 < (int_32)[6])
	$8 = ($4 + [1])
	$4 = $8
	if ( $7 ){ goto $label$45 }
	$7 = [1]
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$42
	$7 = [0]
	
.LABEL $label$41
	CALL eosio_assert($7, [10142])
	$4 = *($5 + [168])
	$7 = CALL $110([9909])
	if ( ((int_32)$7 != (int_32)( *($11 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) )) ){ goto $label$13 }
	if ( CALL $104($11, [0], [-1], [9909], $7) ){ goto $label$13 }
	$16 = *(($0 + [64]))
	CALL eosio_assert([1], [10093])
	$16 = ((float_64)((float_64)$16 * (float_64)$17) / (float_64)(float_64)9)
	if ( (((float_64)$16 < (float_64)(float_64)4294967296) & ((float_64)$16 >= (float_64)(float_64)0)) ){ goto $label$15 }
	$4 = [0]
	goto $label$14 
	
.LABEL $label$16
	if ( ((*($5 + [184]) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*($10 + [8]))
	$8 = *($5 + [232])
	if ( $8 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$15
	$4 = (CASTING uint_32)(float_64 $16)
	
.LABEL $label$14
	$18 = (CASTING uint_64)(uint_32 $4)
	$2 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$48:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$47 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$49 }
	$2 = $6
	$7 = [1]
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$48 }
	goto $label$46 
	
.LABEL $label$49
	$2 = $6
	
.LOOP $label$50:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$47 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$4 < (int_32)[6])
	$8 = ($4 + [1])
	$4 = $8
	if ( $7 ){ goto $label$50 }
	$7 = [1]
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$48 }
	goto $label$46 
	
.LABEL $label$47
	$7 = [0]
	
.LABEL $label$46
	CALL eosio_assert($7, [10142])
	
.LABEL $label$13
	$4 = CALL is_account($14)
	if ( (int_64)($18 == 0) ){ goto $label$5 }
	if ( ((int_64)$14 == (int_64)$1) ){ goto $label$5 }
	if ( ($4 == 0) ){ goto $label$5 }
	$8 = CALL $94(($5 + [80]), ($5 + [136]))
	*(($5 + [272])) = [0]
	*($5 + [264]) = (int_64)0
	$4 = CALL $110([9916])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$53 }
	*($5 + [264]) = ($4 << [1])
	$9 = (($5 + [264]) | [1])
	$7 = $9
	if ( $4 ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$53
	$9 = (($4 + [16]) & [-16])
	$7 = CALL _Znwj($9)
	*($5 + [264]) = ($9 | [1])
	*($5 + [272]) = $7
	*($5 + [268]) = $4
	$9 = (($5 + [264]) | [1])
	
.LABEL $label$52
	CALL memcpy($7, [9916], $4)
	
.LABEL $label$51
	*(($7 + $4)) = [0]
	$4 = *($5 + [264])
	$7 = ($4 & [1])
	$4 = CALL $102($8, ( *($5 + [272]) ? $9 : $7 ), ( *($5 + [268]) ? uint_32($4 >> [1]) : $7 ))
	$7 = ($4 + [8])
	*((($5 + [32]) + [8])) = *($7)
	*($5 + [32]) = *($4)
	*($4) = (int_64)0
	*($7) = [0]
	$7 = *($5 + [248])
	$9 = ($7 & [1])
	$4 = CALL $94(($5 + [248]), $12)
	$7 = CALL $102(($5 + [32]), ( *($4 + [8]) ? ($4 + [1]) : $9 ), ( *($4 + [4]) ? uint_32($7 >> [1]) : $9 ))
	$9 = ($7 + [8])
	*((($5 + [120]) + [8])) = *($9)
	*($5 + [120]) = *($7)
	*($7) = (int_64)0
	*($9) = [0]
	if ( (*($5 + [248]) & [1]) ){ goto $label$55 }
	if ( (*($5 + [32]) & [1]) ){ goto $label$54 }
	goto $label$10 
	
.LABEL $label$55
	CALL _ZdlPv(*(($4 + [8])))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$54
	CALL _ZdlPv(*($5 + [40]))
	$4 = [1]
	if ( ((*($5 + [264]) & [1]) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$12
	CALL $93(($5 + [200]))
	
.LABEL $label$11
	CALL $93(($5 + [264]))
	
.LABEL $label$10
	$4 = [1]
	if ( (*($5 + [264]) & [1]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((*($5 + [80]) & $4) == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	CALL _ZdlPv(*(($5 + [272])))
	if ( ((*($5 + [80]) & $4) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*($8 + [8]))
	
.LABEL $label$6
	$2 = (int_64)0
	$6 = (int_64)59
	$4 = [9813]
	$13 = (int_64)0
	
.LOOP $label$56:
	$15 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$57 }
	$7 = *($4)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$7 = ($7 + [-91])
	goto $label$58 
	
.LABEL $label$59
	$7 = ( ($7 + [-48]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$15 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$57
	$4 = ($4 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$13 = ((int_64)$15 | (int_64)$13)
	$6 = ((int_64)$6 + (int_64)4294967291)
	if ( ((int_64)$6 != (int_64)55834574842) ){ goto $label$56 }
	$2 = (int_64)6
	
.LOOP $label$60:
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$60 }
	*($5 + [272]) = (int_64)3617214756542218240
	*($5 + [264]) = $13
	$2 = (int_64)0
	$15 = (int_64)59
	$4 = [9314]
	$13 = (int_64)0
	
.LOOP $label$61:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$66 }
	$7 = *($4)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$65 }
	$7 = ($7 + [-91])
	goto $label$64 
	
.LABEL $label$66
	$6 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$65
	$7 = ( ($7 + [-48]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$64
	$6 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$63
	$6 = ((int_64)((int_64)$6 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$62
	$4 = ($4 + [1])
	$15 = ((int_64)$15 + (int_64)4294967291)
	$13 = ((int_64)$6 | (int_64)$13)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$61 }
	$2 = (int_64)0
	$15 = (int_64)59
	$4 = [9326]
	$19 = (int_64)0
	
.LOOP $label$67:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$72 }
	$7 = *($4)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$71 }
	$7 = ($7 + [-91])
	goto $label$70 
	
.LABEL $label$72
	$6 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$71
	$7 = ( ($7 + [-48]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$70
	$6 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$69
	$6 = ((int_64)((int_64)$6 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$68
	$4 = ($4 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$19 = ((int_64)$6 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)4294967291)
	if ( ((int_64)$15 != (int_64)55834574842) ){ goto $label$67 }
	$2 = (int_64)0
	$6 = (int_64)59
	$4 = [9813]
	$20 = (int_64)0
	
.LOOP $label$73:
	$15 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$74 }
	$7 = *($4)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$76 }
	$7 = ($7 + [-91])
	goto $label$75 
	
.LABEL $label$76
	$7 = ( ($7 + [-48]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$75
	$15 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$74
	$4 = ($4 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$20 = ((int_64)$15 | (int_64)$20)
	$6 = ((int_64)$6 + (int_64)4294967291)
	if ( ((int_64)$6 != (int_64)55834574842) ){ goto $label$73 }
	*(($5 + [56])) = (int_64)1397703940
	*($5 + [40]) = $14
	*($5 + [32]) = $20
	*($5 + [48]) = $18
	CALL $94(($5 + [64]), ($5 + [120]))
	$4 = CALL $17(($5 + [80]), ($5 + [264]), $13, $19, ($5 + [32]))
	CALL $18(($5 + [248]), $4)
	$7 = *($5 + [248])
	CALL send_inline($7, (*($5 + [252]) - $7))
	$7 = *($5 + [248])
	if ( ($7 == 0) ){ goto $label$77 }
	*($5 + [252]) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$77
	$7 = *($4 + [28])
	if ( ($7 == 0) ){ goto $label$78 }
	*(($4 + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$78
	$7 = *($4 + [16])
	if ( ($7 == 0) ){ goto $label$79 }
	*(($4 + [20])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$79
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$80 }
	CALL _ZdlPv(*(($5 + [72])))
	
.LABEL $label$80
	if ( ((*($5 + [120]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($5 + [128]))
	
.LABEL $label$5
	if ( (*($5 + [136]) & [1]) ){ goto $label$86 }
	if ( (*($5 + [152]) & [1]) ){ goto $label$85 }
	goto $label$84 
	
.LABEL $label$86
	CALL _ZdlPv(*($5 + [144]))
	if ( ((*($5 + [152]) & [1]) == 0) ){ goto $label$84 }
	
.LABEL $label$85
	CALL _ZdlPv(*(($12 + [8])))
	$4 = [1]
	if ( ((*($5 + [168]) & [1]) == 0) ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$84
	$4 = [1]
	if ( (*($5 + [168]) & [1]) ){ goto $label$82 }
	
.LABEL $label$83
	if ( ((*($5 + [184]) & $4) == 0) ){ goto $label$4 }
	goto $label$81 
	
.LABEL $label$82
	CALL _ZdlPv(*($11 + [8]))
	if ( ((*($5 + [184]) & $4) == 0) ){ goto $label$4 }
	
.LABEL $label$81
	CALL _ZdlPv(*($10 + [8]))
	
.LABEL $label$4
	*(($5 + [64])) = [0]
	*($5 + [48]) = (int_64)-1
	*($5 + [56]) = (int_64)0
	$2 = *($0)
	*($5 + [32]) = $2
	*($5 + [40]) = $1
	$4 = CALL db_find_i64($2, $1, (int_64)-3020372933462163456, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$93 }
	$4 = CALL $44(($5 + [32]), $4)
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)($5 + [32])), [10250])
	$7 = ($4 + [12])
	$8 = ($4 + [8])
	$9 = ($4 + [16])
	if ( ((uint_32)((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [-1541548800]) / (uint_32)[86400]) <= (uint_32)((uint_32)(*($4 + [16]) + [-1541548800]) / (uint_32)[86400])) ){ goto $label$92 }
	$0 = ($4 + [20])
	$3 = [1]
	$10 = [0]
	$12 = [0]
	goto $label$91 
	
.LABEL $label$93
	$6 = *($0)
	CALL eosio_assert(((int_64)$2 == (int_64)CALL $fimport$3()), [10329])
	*(($4 = CALL _Znwj([40])) + [24]) = ($5 + [32])
	*($4 + [8]) = [1]
	*($4) = $1
	*($4 + [16]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($5 + [256]) = (($5 + [80]) + [24])
	*($5 + [252]) = ($5 + [80])
	*($5 + [248]) = ($5 + [80])
	*($5 + [184]) = ($5 + [248])
	*($5 + [268]) = ($4 + [8])
	*($5 + [264]) = $4
	*($5 + [272]) = ($4 + [12])
	*($5 + [276]) = ($4 + [16])
	*($5 + [280]) = ($4 + [20])
	CALL $45(($5 + [264]), ($5 + [184]))
	$2 = *($4)
	$8 = CALL db_store_i64(*((($5 + [32]) + [8])), (int_64)-3020372933462163456, $6, $2, ($5 + [80]), [24])
	*($4 + [28]) = $8
	$7 = (($5 + [32]) + [16])
	if ( (uint_64)($2 <= *($7)) ){ goto $label$94 }
	*($7) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$94
	*($5 + [264]) = $4
	$2 = *($4)
	*($5 + [80]) = $2
	*($5 + [248]) = $8
	$0 = ($5 + [60])
	$7 = *($0)
	if ( ((uint_32)$7 >= (uint_32)*(($5 + [64]))) ){ goto $label$90 }
	*($7 + [8]) = $2
	*($7 + [16]) = $8
	*($5 + [264]) = [0]
	*($7) = $4
	*($0) = ($7 + [24])
	$4 = *($5 + [264])
	*($5 + [264]) = [0]
	if ( $4 ){ goto $label$89 }
	goto $label$88 
	
.LABEL $label$92
	$0 = *($0 + [8])
	$3 = *($4 + [8])
	$3 = ( ($3 + [1]) ? $0 : ((int_32)$3 < (int_32)$0) )
	$0 = ($4 + [20])
	$10 = *($7)
	$12 = *($4 + [20])
	
.LABEL $label$91
	CALL eosio_assert([1], [10380])
	CALL eosio_assert(((int_32)*(($4 + [24])) == (int_32)($5 + [32])), [10415])
	CALL eosio_assert(((int_64)*($5 + [32]) == (int_64)CALL $fimport$3()), [10461])
	*(($4 + [8])) = $3
	*(($4 + [12])) = $10
	$2 = *($4)
	$6 = CALL current_time()
	*(($4 + [20])) = $12
	*(($4 + [16])) = ((uint_64)$6 / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$2 == (int_64)*($4)), [10512])
	*($5 + [256]) = (($5 + [80]) + [24])
	*($5 + [252]) = ($5 + [80])
	*($5 + [248]) = ($5 + [80])
	*($5 + [184]) = ($5 + [248])
	*($5 + [268]) = $8
	*($5 + [264]) = $4
	*($5 + [272]) = $7
	*($5 + [276]) = $9
	*($5 + [280]) = $0
	CALL $45(($5 + [264]), ($5 + [184]))
	CALL db_update_i64(*($4 + [28]), (int_64)0, ($5 + [80]), [24])
	$4 = (($5 + [32]) + [16])
	if ( (uint_64)($2 <= *($4)) ){ goto $label$88 }
	*($4) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	$8 = *($5 + [56])
	if ( $8 ){ goto $label$87 }
	goto $label$3 
	
.LABEL $label$90
	CALL $46(($5 + [56]), ($5 + [264]), ($5 + [80]), ($5 + [248]))
	$4 = *($5 + [264])
	*($5 + [264]) = [0]
	if ( ($4 == 0) ){ goto $label$88 }
	
.LABEL $label$89
	CALL _ZdlPv($4)
	
.LABEL $label$88
	$8 = *($5 + [56])
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$87
	$0 = ($5 + [60])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$96 }
	
.LOOP $label$97:
	$4 = ($4 + [-24])
	$7 = *($4)
	*($4) = [0]
	if ( ($7 == 0) ){ goto $label$98 }
	CALL _ZdlPv($7)
	
.LABEL $label$98
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$97 }
	$4 = *(($5 + [56]))
	goto $label$95 
	
.LABEL $label$96
	$4 = $8
	
.LABEL $label$95
	*($0) = $8
	CALL _ZdlPv($4)
	
.LABEL $label$3
	$8 = *($5 + [232])
	if ( ($8 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = *($5 + [236])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$100 }
	
.LOOP $label$101:
	$4 = ($7 + [-12])
	if ( ((*($4) & [1]) == 0) ){ goto $label$102 }
	CALL _ZdlPv(*(($7 + [-4])))
	
.LABEL $label$102
	$7 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$101 }
	$4 = *($5 + [232])
	goto $label$99 
	
.LABEL $label$100
	$4 = $8
	
.LABEL $label$99
	*($5 + [236]) = $8
	CALL _ZdlPv($4)
	
.LABEL $label$1
	$global$0 = ($5 + [288])
	(unreachable)
}

void .FUNC $52 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	CALL prints($0)
	$0 = *($1)
	$8 = ($0 & [1])
	CALL prints_l(( *($1 + [8]) ? ($1 + [1]) : $8 ), ( *($1 + [4]) ? uint_32($0 >> [1]) : $8 ))
	CALL prints($2)
	$1 = *($3)
	$2 = ($1 & [1])
	CALL prints_l(( *($3 + [8]) ? ($3 + [1]) : $2 ), ( *($3 + [4]) ? uint_32($1 >> [1]) : $2 ))
	CALL prints($4)
	$3 = *($5)
	$1 = ($3 & [1])
	CALL prints_l(( *($5 + [8]) ? ($5 + [1]) : $1 ), ( *($5 + [4]) ? uint_32($3 >> [1]) : $1 ))
	CALL prints($6)
	$5 = *($7)
	$3 = ($5 & [1])
	CALL prints_l(( *($7 + [8]) ? ($7 + [1]) : $3 ), ( *($7 + [4]) ? uint_32($5 >> [1]) : $3 ))
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	float_64 $12
	float_64 $13
	$2 = ($global$0 - [160])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = *($0)
	$4 = (int_64)0
	$5 = (int_64)59
	$6 = [9314]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$4 > (uint_64)(int_64)10) ){ goto $label$6 }
	$8 = *($6)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$8 = ($8 + [-91])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((int_64)$4 == (int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$5 = ((int_64)$5 + (int_64)4294967291)
	$7 = ((int_64)$9 | (int_64)$7)
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$1 }
	*(($2 + [152])) = [0]
	*($2 + [128]) = $3
	*($2 + [120]) = $7
	*($2 + [136]) = (int_64)-1
	*($2 + [144]) = (int_64)0
	$6 = CALL $54(($2 + [120]), (int_64)5459781, [10226])
	*((($2 + [104]) + [8])) = *(($6 + [8]))
	*($2 + [104]) = *($6)
	$10 = *($2 + [144])
	if ( ($10 == 0) ){ goto $label$7 }
	$11 = ($2 + [148])
	$6 = *($11)
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$9 }
	
.LOOP $label$10:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$11 }
	CALL _ZdlPv($8)
	
.LABEL $label$11
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$10 }
	$6 = *(($2 + [144]))
	goto $label$8 
	
.LABEL $label$9
	$6 = $10
	
.LABEL $label$8
	*($11) = $10
	CALL _ZdlPv($6)
	
.LABEL $label$7
	CALL prints([9965])
	CALL $55(($2 + [104]))
	$4 = *($2 + [104])
	if ( ((int_64)$4 < (int_64)150000001) ){ goto $label$14 }
	$3 = ((int_64)$4 + (int_64)-100000000)
	$4 = (int_64)0
	$9 = (int_64)59
	$6 = [9979]
	$7 = (int_64)0
	
.LOOP $label$15:
	$5 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$16 }
	$8 = *($6)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$8 = ($8 + [-91])
	goto $label$17 
	
.LABEL $label$18
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$5 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$16
	$6 = ($6 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$9 = ((int_64)$9 + (int_64)4294967291)
	if ( ((int_64)$9 != (int_64)55834574842) ){ goto $label$15 }
	*($2 + [96]) = (int_64)1397703940
	$12 = (CASTING float_64)(int_64 $3)
	$13 = ((float_64)$12 * (float_64)(float_64)0.8)
	if ( ((float_64)(float_64)|$13| < (float_64)(float_64)9223372036854775808) ){ goto $label$20 }
	$4 = (int_64)-9223372036854775808
	goto $label$19 
	
.LABEL $label$20
	$4 = (Rounds 0)($13)
	
.LABEL $label$19
	*($2 + [88]) = $4
	CALL eosio_assert((uint_64)(((int_64)$4 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [10093])
	$4 = (uint_64)*($2 + [96]) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$9 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$24 }
	$4 = $9
	$8 = [1]
	$10 = $6
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$24
	$4 = $9
	
.LOOP $label$25:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$22 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $8 ){ goto $label$25 }
	$8 = [1]
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$8 = [0]
	
.LABEL $label$21
	CALL eosio_assert($8, [10142])
	*(($2 + [80])) = [0]
	*($2 + [72]) = (int_64)0
	$6 = CALL $110([9992])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$28 }
	*($2 + [72]) = ($6 << [1])
	$8 = (($2 + [72]) | [1])
	if ( $6 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$10 = (($6 + [16]) & [-16])
	$8 = CALL _Znwj($10)
	*($2 + [72]) = ($10 | [1])
	*($2 + [80]) = $8
	*($2 + [76]) = $6
	
.LABEL $label$27
	CALL memcpy($8, [9992], $6)
	
.LABEL $label$26
	*(($8 + $6)) = [0]
	*((($2 + [24]) + [8])) = *((($2 + [88]) + [8]))
	*($2 + [24]) = *($2 + [88])
	CALL $29($0, $7, ($2 + [24]), ($2 + [72]))
	if ( ((*($2 + [72]) & [1]) == 0) ){ goto $label$29 }
	CALL _ZdlPv(*($2 + [80]))
	
.LABEL $label$29
	$4 = (int_64)0
	$9 = (int_64)59
	$6 = [10005]
	$7 = (int_64)0
	
.LOOP $label$30:
	$5 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$31 }
	$8 = *($6)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$8 = ($8 + [-91])
	goto $label$32 
	
.LABEL $label$33
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$5 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$31
	$6 = ($6 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$9 = ((int_64)$9 + (int_64)4294967291)
	if ( ((int_64)$9 != (int_64)55834574842) ){ goto $label$30 }
	*($2 + [64]) = (int_64)1397703940
	$12 = ((float_64)$12 * (float_64)(float_64)0.2)
	if ( ((float_64)(float_64)|$12| < (float_64)(float_64)9223372036854775808) ){ goto $label$35 }
	$4 = (int_64)-9223372036854775808
	goto $label$34 
	
.LABEL $label$35
	$4 = (Rounds 0)($12)
	
.LABEL $label$34
	*($2 + [56]) = $4
	CALL eosio_assert((uint_64)(((int_64)$4 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [10093])
	$4 = (int_64)5459781
	$6 = [0]
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$9 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$39 }
	$4 = $9
	$8 = [1]
	$10 = $6
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$39
	$4 = $9
	
.LOOP $label$40:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$37 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $8 ){ goto $label$40 }
	$8 = [1]
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$37
	$8 = [0]
	
.LABEL $label$36
	CALL eosio_assert($8, [10142])
	*(($2 + [48])) = [0]
	*($2 + [40]) = (int_64)0
	$6 = CALL $110([9992])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$43 }
	*($2 + [40]) = ($6 << [1])
	$8 = (($2 + [40]) | [1])
	if ( $6 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	$10 = (($6 + [16]) & [-16])
	$8 = CALL _Znwj($10)
	*($2 + [40]) = ($10 | [1])
	*($2 + [48]) = $8
	*($2 + [44]) = $6
	
.LABEL $label$42
	CALL memcpy($8, [9992], $6)
	
.LABEL $label$41
	*(($8 + $6)) = [0]
	*((($2 + [8]) + [8])) = *((($2 + [56]) + [8]))
	*($2 + [8]) = *($2 + [56])
	CALL $29($0, $7, ($2 + [8]), ($2 + [40]))
	if ( ((*($2 + [40]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*($2 + [48]))
	
.LABEL $label$14
	$global$0 = ($2 + [160])
	return (unreachable)
	
.LABEL $label$13
	CALL $93(($2 + [72]))
	
.LABEL $label$12
	CALL $93(($2 + [40]))
	(unreachable)
}

int_32 .FUNC $54 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [10250])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
	
.LABEL $label$1
	$5 = [0]
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $74($0, $4)
	CALL eosio_assert(((int_32)*($5 + [16]) == (int_32)$0), [10250])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), $2)
	return $5
}

void .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($0 + [4]), ($3 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($0 + [4]), ($3 + [16]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($0 + [4]), ($3 + [24]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((int_32)(*($1 + [8]) - *($1 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($1 + [4]), ($3 + [32]), [8])
	$0 = (*($1 + [4]) + [8])
	*($1 + [4]) = $0
	CALL eosio_assert(((int_32)(*($1 + [8]) - $0) > (int_32)[7]), [10162])
	CALL memcpy(*($1 + [4]), ($3 + [40]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [992])
	$global$0 = $3
	CALL memory()
	$4 = (int_64)7
	
.LOOP $label$1:
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$1 }
	if ( ((int_64)-6569208335818555392 != (int_64)$2) ){ goto $label$2 }
	$4 = (int_64)5
	
.LOOP $label$3:
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$3 }
	CALL eosio_assert(((int_64)6138663577826885632 == (int_64)$1), [10018])
	
.LABEL $label$2
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$6 }
	$4 = (int_64)0
	$5 = (int_64)59
	$6 = [9326]
	$7 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$12 }
	$8 = *($6)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$8 = ($8 + [-91])
	goto $label$10 
	
.LABEL $label$12
	$9 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$8
	$6 = ($6 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$7 = ((int_64)$9 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)4294967291)
	if ( ((int_64)$5 != (int_64)55834574842) ){ goto $label$7 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$5 }
	
.LABEL $label$6
	$4 = (int_64)0
	$5 = (int_64)59
	$6 = [9314]
	$7 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$4 > (uint_64)(int_64)10) ){ goto $label$18 }
	$8 = *($6)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$8 = ($8 + [-91])
	goto $label$16 
	
.LABEL $label$18
	$9 = (int_64)0
	if ( ((int_64)$4 == (int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$14
	$6 = ($6 + [1])
	$5 = ((int_64)$5 + (int_64)4294967291)
	$7 = ((int_64)$9 | (int_64)$7)
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$13 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$19 }
	$4 = (int_64)0
	$5 = (int_64)59
	$6 = [9326]
	$7 = (int_64)0
	
.LOOP $label$20:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$25 }
	$8 = *($6)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$8 = ($8 + [-91])
	goto $label$23 
	
.LABEL $label$25
	$9 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$22
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$21
	$6 = ($6 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$7 = ((int_64)$9 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)4294967291)
	if ( ((int_64)$5 != (int_64)55834574842) ){ goto $label$20 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$5 }
	
.LABEL $label$19
	$4 = (int_64)7
	
.LOOP $label$26:
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$26 }
	if ( ((int_64)-6569208335818555392 != (int_64)$2) ){ goto $label$4 }
	
.LABEL $label$5
	$6 = CALL $3(($3 + [168]), $0)
	if ( ((int_64)$2 > (int_64)-2764395523103784961) ){ goto $label$36 }
	if ( ((int_64)$2 <= (int_64)-4992616317517534833) ){ goto $label$35 }
	if ( ((int_64)$2 == (int_64)-4992616317517534832) ){ goto $label$33 }
	if ( ((int_64)$2 == (int_64)-4348567762427288928) ){ goto $label$32 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$27 }
	*($3 + [132]) = [0]
	*($3 + [128]) = [1]
	*($3 + [40]) = *($3 + [128])
	CALL $57($6, ($3 + [40]))
	goto $label$27 
	
.LABEL $label$36
	if ( ((int_64)$2 <= (int_64)4157834739933425151) ){ goto $label$34 }
	if ( ((int_64)$2 == (int_64)4157834739933425152) ){ goto $label$31 }
	if ( ((int_64)$2 == (int_64)5606348217378668544) ){ goto $label$30 }
	if ( ((int_64)$2 != (int_64)5606348767134482432) ){ goto $label$27 }
	*($3 + [140]) = [0]
	*($3 + [136]) = [2]
	*($3 + [32]) = *($3 + [136])
	CALL $59($6, ($3 + [32]))
	goto $label$27 
	
.LABEL $label$35
	if ( ((int_64)$2 == (int_64)-4994130327835885568) ){ goto $label$29 }
	if ( ((int_64)$2 != (int_64)-4994130327835884544) ){ goto $label$27 }
	*($3 + [156]) = [0]
	*($3 + [152]) = [3]
	*($3 + [16]) = *($3 + [152])
	CALL $60($6, ($3 + [16]))
	goto $label$27 
	
.LABEL $label$34
	if ( ((int_64)$2 == (int_64)-2764395523103784960) ){ goto $label$28 }
	if ( ((int_64)$2 != (int_64)3607572829840605184) ){ goto $label$27 }
	*($3 + [124]) = [0]
	*($3 + [120]) = [4]
	*($3 + [48]) = *($3 + [120])
	CALL $61($6, ($3 + [48]))
	goto $label$27 
	
.LABEL $label$33
	*($3 + [116]) = [0]
	*($3 + [112]) = [5]
	*($3 + [56]) = *($3 + [112])
	CALL $61($6, ($3 + [56]))
	goto $label$27 
	
.LABEL $label$32
	*($3 + [92]) = [0]
	*($3 + [88]) = [6]
	*($3 + [80]) = *($3 + [88])
	CALL $60($6, ($3 + [80]))
	goto $label$27 
	
.LABEL $label$31
	*($3 + [108]) = [0]
	*($3 + [104]) = [7]
	*($3 + [64]) = *($3 + [104])
	CALL $62($6, ($3 + [64]))
	goto $label$27 
	
.LABEL $label$30
	*($3 + [148]) = [0]
	*($3 + [144]) = [8]
	*($3 + [24]) = *($3 + [144])
	CALL $59($6, ($3 + [24]))
	goto $label$27 
	
.LABEL $label$29
	*($3 + [164]) = [0]
	*($3 + [160]) = [9]
	*($3 + [8]) = *($3 + [160])
	CALL $63($6, ($3 + [8]))
	goto $label$27 
	
.LABEL $label$28
	*($3 + [100]) = [0]
	*($3 + [96]) = [10]
	*($3 + [72]) = *($3 + [96])
	CALL $59($6, ($3 + [72]))
	
.LABEL $label$27
	CALL $64($6)
	
.LABEL $label$4
	CALL $106([0])
	$global$0 = ($3 + [992])
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = $2) + [60]) = $0
	*($3 + [48]) = *($1)
	$1 = [0]
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$4 = CALL $111($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [24])) = (int_64)1398362884
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = (int_64)0
	CALL eosio_assert([1], [10093])
	$6 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$6 = $7
	$2 = [1]
	$0 = $1
	$1 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$6 = $7
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$2 = ((int_32)$1 < (int_32)[6])
	$0 = ($1 + [1])
	$1 = $0
	if ( $2 ){ goto $label$8 }
	$2 = [1]
	$1 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	
.LABEL $label$4
	CALL eosio_assert($2, [10142])
	*(($3 + [40])) = [0]
	*($3 + [32]) = (int_64)0
	*($3 + [68]) = $4
	*($3 + [64]) = $4
	*($3 + [72]) = ($4 + $5)
	*($3 + [80]) = ($3 + [64])
	*($3 + [88]) = $3
	CALL $67(($3 + [88]), ($3 + [80]))
	if ( ($5 <= [513]) ){ goto $label$9 }
	CALL $114($4)
	
.LABEL $label$9
	*($3 + [68]) = ($3 + [48])
	*($3 + [64]) = ($3 + [60])
	CALL $68(($3 + [64]), $3)
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($3 + [40])))
	
.LABEL $label$10
	$global$0 = ($3 + [96])
	return [1]
}

void .FUNC $114 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [18976])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [18784]
	$3 = (((int_32)$1 * (int_32)[12]) + [18784])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

void .FUNC $35 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [48])
	$global$0 = $4
	$5 = CALL tapos_block_num()
	$6 = CALL tapos_block_prefix()
	if ( ((int_64)*([0]) != (int_64)0) ){ goto $label$1 }
	*([0]) = ((int_64)((int_64)(CASTING int_64)(int_32 ((int_32)$6 * (int_32)$5)) + (int_64)$1) + (int_64)CALL current_time())
	
.LABEL $label$1
	*((($4 + [32]) + [8])) = *([0])
	*($4 + [32]) = *([0])
	*($4 + [24]) = [0]
	*($4 + [16]) = (int_64)0
	*($4 + [12]) = [0]
	$5 = [0]
	$6 = [0]
	if ( ((int_32)[0] != (int_32)[0]) ){ goto $label$3 }
	$7 = [10]
	goto $label$2 
	
.LABEL $label$3
	$7 = [0]
	
.LABEL $label$2
	
.LOOP $label$4:
	goto $label$20 
	
.LABEL $label$21
	$5 = *($4 + [20])
	if ( ((int_32)$5 == (int_32)*((($4 + [16]) + [8]))) ){ goto $label$10 }
	$7 = [0]
	goto $label$4 
	
.LABEL $label$20
	*($5) = $6
	*($4 + [20]) = ($5 + [4])
	goto $label$9 
	
.LABEL $label$19
	CALL $21(($4 + [16]), ($4 + [12]))
	$7 = [1]
	goto $label$4 
	
.LABEL $label$18
	$5 = *($4 + [12])
	$6 = ($5 + [1])
	*($4 + [12]) = $6
	if ( ((int_32)$5 <= (int_32)[52]) ){ goto $label$8 }
	$7 = [2]
	goto $label$4 
	
.LABEL $label$17
	$6 = [0]
	$5 = *($4 + [20])
	$7 = [3]
	goto $label$4 
	
.LABEL $label$16
	$5 = CALL $22(($4 + [32]), int_32(($5 - *($4 + [16])) >> [2]))
	$5 = (*($4 + [16]) + ($5 << [2]))
	*(($2 + $6)) = *($5)
	$8 = ($5 + [4])
	$9 = (*($4 + [20]) - $8)
	$10 = int_32($9 >> [2])
	if ( ($9 == 0) ){ goto $label$6 }
	$7 = [4]
	goto $label$4 
	
.LABEL $label$15
	CALL memmove($5, $8, $9)
	$7 = [5]
	goto $label$4 
	
.LABEL $label$14
	$5 = ($5 + ($10 << [2]))
	*($4 + [20]) = $5
	$6 = ($6 + [4])
	if ( ((int_32)$6 != (int_32)[216]) ){ goto $label$7 }
	$7 = [6]
	goto $label$4 
	
.LABEL $label$13
	$5 = *($4 + [16])
	if ( ($5 == 0) ){ goto $label$5 }
	$7 = [7]
	goto $label$4 
	
.LABEL $label$12
	*($4 + [20]) = $5
	CALL _ZdlPv($5)
	$7 = [8]
	goto $label$4 
	
.LABEL $label$11
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$10
	$7 = [10]
	goto $label$4 
	
.LABEL $label$9
	$7 = [1]
	goto $label$4 
	
.LABEL $label$8
	$7 = [9]
	goto $label$4 
	
.LABEL $label$7
	$7 = [3]
	goto $label$4 
	
.LABEL $label$6
	$7 = [5]
	goto $label$4 
	
.LABEL $label$5
	$7 = [8]
	goto $label$4 
	$7
}

int_32 .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $113($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($9)), [8212])
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$10:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$12 }
	
.LOOP $label$13:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$12 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$13 }
	
.LABEL $label$12
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$14 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$11
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$10 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $113 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10584]) == 0) ){ goto $label$2 }
	$2 = *([0] + [10588])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [10584]) = [1]
	$2 = ($2 << [16])
	*([0] + [10588]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10588])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [10588]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [10584]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [10584]) = [1]
	$3 = ($3 << [16])
	*([0] + [10588]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10588])
	
.LABEL $label$10
	*([0] + [10588]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

int_32 .FUNC $110 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $111 (int_32 $0)
{
	return CALL $112([10592], $0)
}

void .FUNC $29 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$4 = ($global$0 - [128])
	$global$0 = $4
	if ( ((int_64)*($2) < (int_64)1) ){ goto $label$1 }
	$5 = *($0)
	$6 = (int_64)6
	
.LOOP $label$2:
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$2 }
	*($4 + [64]) = (int_64)3617214756542218240
	*($4 + [56]) = $5
	$6 = (int_64)0
	$7 = (int_64)59
	$0 = [9314]
	$8 = (int_64)0
	
.LOOP $label$3:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$8 }
	$9 = *($0)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$9 = ($9 + [-91])
	goto $label$6 
	
.LABEL $label$8
	$10 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$9 = ( ($9 + [-48]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$4
	$0 = ($0 + [1])
	$7 = ((int_64)$7 + (int_64)4294967291)
	$8 = ((int_64)$10 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$3 }
	$6 = (int_64)0
	$7 = (int_64)59
	$0 = [9326]
	$11 = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$14 }
	$9 = *($0)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$9 = ($9 + [-91])
	goto $label$12 
	
.LABEL $label$14
	$10 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$9 = ( ($9 + [-48]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$10
	$0 = ($0 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$7 = ((int_64)$7 + (int_64)4294967291)
	if ( ((int_64)$7 != (int_64)55834574842) ){ goto $label$9 }
	*(($4 + [32])) = *(($2 + [8]))
	*($4 + [16]) = $1
	*($4 + [8]) = $5
	*($4 + [24]) = *($2)
	CALL $94(($4 + [40]), $3)
	$0 = CALL $17(($4 + [72]), ($4 + [56]), $8, $11, ($4 + [8]))
	CALL $18(($4 + [112]), $0)
	$9 = *($4 + [112])
	CALL send_inline($9, (*($4 + [116]) - $9))
	$9 = *($4 + [112])
	if ( ($9 == 0) ){ goto $label$15 }
	*($4 + [116]) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$15
	$9 = *($0 + [28])
	if ( ($9 == 0) ){ goto $label$16 }
	*(($0 + [32])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$16
	$9 = *($0 + [16])
	if ( ($9 == 0) ){ goto $label$17 }
	*(($0 + [20])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$17
	if ( ((*($4 + [40]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($4 + [48])))
	
.LABEL $label$1
	$global$0 = ($4 + [128])
}

void .FUNC $28 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	float_64 $11
	float_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_64 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	float_64 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_64 $32
	int_32 $33
	$4 = ($global$0 - [592])
	$global$0 = $4
	*($4 + [568]) = $1
	CALL eosio_assert(((int_32)*(($0 + [144])) == (int_32)[1]), [10205])
	CALL require_auth(*($0))
	$1 = *($2 + [8])
	CALL eosio_assert(((int_64)((int_64)$1 & (int_64)255) == (int_64)4), [9002])
	CALL eosio_assert(((int_64)$1 == (int_64)1397703940), [9386])
	CALL eosio_assert(CALL $fimport$6($3), [9027])
	$5 = *($2)
	CALL eosio_assert((uint_64)(((int_64)$5 + (int_64)-1000) <= (int_64)199001), [9403])
	*($4 + [496]) = $3
	$1 = *($0)
	*($4 + [504]) = $1
	*($4 + [512]) = $1
	*($4 + [520]) = $1
	*($4 + [528]) = $1
	*($4 + [536]) = $1
	*($4 + [544]) = $1
	*($4 + [552]) = $1
	*($4 + [560]) = $1
	$6 = ((int_64)$5 * (int_64)9)
	CALL eosio_assert((uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [10093])
	$7 = [0]
	$1 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$1 = $8
	$9 = [1]
	$10 = $7
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$1 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$10 = ($7 + [1])
	$7 = $10
	if ( $9 ){ goto $label$5 }
	$9 = [1]
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [10142])
	$11 = ((float_64)(CASTING float_64)(int_32 *(($0 + [60]))) / (float_64)(float_64)1e4)
	$12 = ((float_64)$11 * (float_64)(CASTING float_64)(int_64 $5))
	if ( ((float_64)(float_64)|$12| < (float_64)(float_64)9223372036854775808) ){ goto $label$7 }
	$13 = (int_64)-9223372036854775808
	goto $label$6 
	
.LABEL $label$7
	$13 = (Rounds 0)($12)
	
.LABEL $label$6
	CALL eosio_assert((uint_64)(((int_64)$13 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [10093])
	$1 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$8 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$1 = $8
	$9 = [1]
	$10 = $7
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$1 = $8
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$10 = ($7 + [1])
	$7 = $10
	if ( $9 ){ goto $label$12 }
	$9 = [1]
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$9 = [0]
	
.LABEL $label$8
	CALL eosio_assert($9, [10142])
	*(($4 + [232])) = [0]
	*($4 + [224]) = (int_64)0
	$7 = CALL $110([9451])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$23 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$26 }
	*($4 + [224]) = ($7 << [1])
	$9 = (($4 + [224]) | [1])
	if ( $7 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$10 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($4 + [224]) = ($10 | [1])
	*($4 + [232]) = $9
	*($4 + [228]) = $7
	
.LABEL $label$25
	CALL memcpy($9, [9451], $7)
	
.LABEL $label$24
	*(($9 + $7)) = [0]
	*($4 + [160]) = (int_64)0
	*($4 + [168]) = [0]
	$1 = *($4 + [568])
	CALL $98(($4 + [160]), [40])
	
.LOOP $label$27:
	$8 = ((int_64)$1 / (int_64)10)
	CALL $101(($4 + [160]), *(((CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$8 * (int_64)10))) + [10082])))
	$5 = ((int_64)$1 + (int_64)9)
	$1 = $8
	if ( ((uint_64)$5 > (uint_64)(int_64)18) ){ goto $label$27 }
	$14 = (($4 + [160]) | [1])
	$15 = *((($4 + [160]) + [8]))
	$10 = ($7 & [1])
	$7 = *($4 + [160])
	$17 = uint_32($7 >> [1])
	$16 = *($4 + [164])
	$9 = ( $16 ? $17 : $10 )
	if ( ($9 == 0) ){ goto $label$28 }
	$7 = ( $15 ? $14 : $10 )
	$9 = (($7 + $9) + [-1])
	if ( ((uint_32)$9 <= (uint_32)$7) ){ goto $label$28 }
	
.LOOP $label$29:
	$10 = *($7)
	*($7) = *($9)
	*($9) = $10
	$9 = ($9 + [-1])
	$7 = ($7 + [1])
	if ( ($7 <= $9) ){ goto $label$29 }
	$7 = *($4 + [160])
	$17 = uint_32($7 >> [1])
	$10 = ($7 & [1])
	$15 = *(($4 + [168]))
	$16 = *($4 + [164])
	
.LABEL $label$28
	$7 = CALL $102(($4 + [224]), ( $15 ? $14 : $10 ), ( $16 ? $17 : $10 ))
	$9 = ($7 + [8])
	*((($4 + [480]) + [8])) = *($9)
	*($4 + [480]) = *($7)
	*($7) = (int_64)0
	*($9) = [0]
	if ( ((*($4 + [160]) & [1]) == 0) ){ goto $label$30 }
	CALL _ZdlPv(*(($4 + [168])))
	
.LABEL $label$30
	if ( ((*($4 + [224]) & [1]) == 0) ){ goto $label$31 }
	CALL _ZdlPv(*($4 + [232]))
	
.LABEL $label$31
	$1 = (int_64)0
	$8 = (int_64)59
	$7 = [9335]
	$18 = (int_64)0
	
.LOOP $label$32:
	$5 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$33 }
	$9 = *($7)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$35 }
	$9 = ($9 + [-91])
	goto $label$34 
	
.LABEL $label$35
	$9 = ( ($9 + [-48]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$34
	$5 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $9) & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$33
	$7 = ($7 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$18 = ((int_64)$5 | (int_64)$18)
	$8 = ((int_64)$8 + (int_64)4294967291)
	if ( ((int_64)$8 != (int_64)55834574842) ){ goto $label$32 }
	*($4 + [472]) = (int_64)1397703940
	*($4 + [464]) = $13
	$7 = CALL $94(($4 + [448]), ($4 + [480]))
	*(($4 + [8])) = *($4 + [472])
	*($4) = *($4 + [464])
	CALL $29($0, $18, $4, $7)
	if ( ((*($7) & [1]) == 0) ){ goto $label$36 }
	CALL _ZdlPv(*($7 + [8]))
	
.LABEL $label$36
	$19 = *($0)
	$1 = (int_64)6
	
.LOOP $label$37:
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$37 }
	$1 = (int_64)0
	$8 = (int_64)59
	$7 = [9335]
	$18 = (int_64)0
	
.LOOP $label$38:
	$5 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$39 }
	$9 = *($7)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$41 }
	$9 = ($9 + [-91])
	goto $label$40 
	
.LABEL $label$41
	$9 = ( ($9 + [-48]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$40
	$5 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $9) & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$39
	$7 = ($7 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$18 = ((int_64)$5 | (int_64)$18)
	$8 = ((int_64)$8 + (int_64)4294967291)
	if ( ((int_64)$8 != (int_64)55834574842) ){ goto $label$38 }
	$1 = (int_64)0
	$5 = (int_64)59
	$7 = [9489]
	$13 = (int_64)0
	
.LOOP $label$42:
	if ( ((uint_64)$1 > (uint_64)(int_64)9) ){ goto $label$47 }
	$9 = *($7)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$46 }
	$9 = ($9 + [-91])
	goto $label$45 
	
.LABEL $label$47
	$8 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$46
	$9 = ( ($9 + [-48]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$45
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$44
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$43
	$7 = ($7 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$13 = ((int_64)$8 | (int_64)$13)
	$5 = ((int_64)$5 + (int_64)4294967291)
	if ( ((int_64)$5 != (int_64)55834574842) ){ goto $label$42 }
	*(($9 = (($4 + [224]) + [24]))) = [0]
	*((($4 + [160]) + [24])) = *(($2 + [8]))
	*($4 + [168]) = $3
	*($4 + [224]) = $18
	*($4 + [232]) = $13
	*($4 + [240]) = (int_64)0
	*($4 + [160]) = *($4 + [568])
	*($4 + [176]) = *($2)
	*(($7 = CALL _Znwj([16]))) = $19
	*($7 + [8]) = (int_64)3617214756542218240
	*(($4 + [260])) = [0]
	$10 = ($7 + [16])
	*($9) = $10
	*(($4 + [244])) = $10
	*($4 + [240]) = $7
	*($4 + [252 align=4]) = (int_64)0
	CALL $19(($4 + [252]), [32])
	$7 = *((($4 + [224]) + [32]))
	$9 = *($4 + [252])
	*($4 + [68]) = $9
	*($4 + [64]) = $9
	*($4 + [72]) = $7
	*($4 + [576]) = ($4 + [64])
	*($4 + [48]) = ($4 + [160])
	CALL $30(($4 + [48]), ($4 + [576]))
	CALL $18(($4 + [64]), ($4 + [224]))
	$7 = *($4 + [64])
	CALL send_inline($7, (*($4 + [68]) - $7))
	$7 = *($4 + [64])
	if ( ($7 == 0) ){ goto $label$48 }
	*($4 + [68]) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$48
	$7 = *($4 + [252])
	if ( ($7 == 0) ){ goto $label$49 }
	*(($4 + [256])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$49
	$7 = *($4 + [240])
	if ( ($7 == 0) ){ goto $label$50 }
	*(($4 + [244])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$50
	$12 = CALL $107(((float_64)((float_64)(CASTING float_64)(uint_64 $3) / (float_64)(float_64)4894) + (float_64)(CASTING float_64)(uint_64 *($4 + [568]))))
	CALL memset(($4 + [224]), [0], [216])
	if ( ((float_64)(float_64)|$12| < (float_64)(float_64)9223372036854775808) ){ goto $label$52 }
	$1 = (int_64)-9223372036854775808
	goto $label$51 
	
.LABEL $label$52
	$1 = (Rounds 0)($12)
	
.LABEL $label$51
	CALL $31($0, $1, ($4 + [224]), $4)
	*(($9 = (($4 + [160]) + [24]))) = (int_64)0
	*(($10 = (($4 + [160]) + [40]))) = (int_64)0
	*($4 + [160]) = $3
	*($4 + [168]) = (int_64)0
	$1 = *($0)
	*($4 + [176]) = $1
	*($4 + [192]) = $1
	*(($7 = CALL _Znwj([48]))) = *($4 + [160])
	*(($7 + [8])) = *($4 + [168])
	*($7 + [16]) = *($4 + [176])
	*(($7 + [24])) = *($9)
	*($7 + [32]) = *($4 + [192])
	*(($7 + [40])) = *($10)
	*($4 + [208]) = $7
	$7 = ($7 + [48])
	*($4 + [216]) = $7
	*($4 + [212]) = $7
	*((($4 + [144]) + [8])) = [0]
	*($4 + [144]) = (int_64)0
	$7 = CALL $110([9358])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$53 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$56 }
	*($4 + [144]) = ($7 << [1])
	$9 = (($4 + [144]) | [1])
	if ( $7 ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	$10 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($4 + [144]) = ($10 | [1])
	*($4 + [152]) = $9
	*($4 + [148]) = $7
	
.LABEL $label$55
	CALL memcpy($9, [9358], $7)
	
.LABEL $label$54
	*(($9 + $7)) = [0]
	$17 = (($4 + [48]) | [1])
	$20 = (($4 + [64]) | [1])
	$21 = ($4 + [224])
	$22 = [0]
	
.LOOP $label$57:
	*($4 + [576]) = *((($4 + [496]) + ($22 << [3])))
	CALL $23(($4 + [64]), ($4 + [576]))
	$7 = CALL $100(($4 + [64]), [9359])
	$9 = ($7 + [8])
	*(($23 = (($4 + [160]) + [8]))) = *($9)
	*($4 + [160]) = *($7)
	*($7) = (int_64)0
	*($9) = [0]
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$58 }
	CALL _ZdlPv(*((($4 + [64]) + [8])))
	
.LABEL $label$58
	*(($24 = (($4 + [64]) + [8]))) = [0]
	*($4 + [64]) = (int_64)0
	$7 = CALL $110([9358])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$22 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$61 }
	*($4 + [64]) = ($7 << [1])
	$9 = $20
	if ( $7 ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$61
	$10 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($24) = $9
	*($4 + [64]) = ($10 | [1])
	*($4 + [68]) = $7
	
.LABEL $label$60
	CALL memcpy($9, [9358], $7)
	
.LABEL $label$59
	$14 = [0]
	*(($9 + $7)) = [0]
	$7 = $21
	$9 = [0]
	
.LOOP $label$62:
	$10 = CALL $94(($4 + [48]), (($0 + ((int_32)*($7) * (int_32)[12])) + [152]))
	$15 = *($4 + [48])
	$16 = CALL $110([8192])
	if ( ((int_32)$16 != (int_32)( *($4 + [52]) ? uint_32($15 >> [1]) : ($15 & [1]) )) ){ goto $label$65 }
	if ( (CALL $104($10, [0], [-1], [8192], $16) == 0) ){ goto $label$64 }
	
.LABEL $label$65
	$15 = *($4 + [48])
	$16 = CALL $110([8202])
	if ( ((int_32)$16 != (int_32)( *($4 + [52]) ? uint_32($15 >> [1]) : ($15 & [1]) )) ){ goto $label$66 }
	if ( (CALL $104($10, [0], [-1], [8202], $16) == 0) ){ goto $label$64 }
	
.LABEL $label$66
	$15 = *($4 + [48])
	$16 = CALL $110([8298])
	if ( ((int_32)$16 != (int_32)( *($4 + [52]) ? uint_32($15 >> [1]) : ($15 & [1]) )) ){ goto $label$67 }
	if ( (CALL $104($10, [0], [-1], [8298], $16) == 0) ){ goto $label$64 }
	
.LABEL $label$67
	$15 = *($4 + [48])
	$16 = CALL $110([8308])
	if ( ((int_32)$16 != (int_32)( *($4 + [52]) ? uint_32($15 >> [1]) : ($15 & [1]) )) ){ goto $label$68 }
	if ( (CALL $104($10, [0], [-1], [8308], $16) == 0) ){ goto $label$64 }
	
.LABEL $label$68
	$15 = *($4 + [48])
	$16 = CALL $110([8816])
	if ( ((int_32)$16 != (int_32)( *($4 + [52]) ? uint_32($15 >> [1]) : ($15 & [1]) )) ){ goto $label$69 }
	if ( CALL $104($10, [0], [-1], [8816], $16) ){ goto $label$69 }
	$14 = ($14 + [3])
	goto $label$63 
	
.LABEL $label$69
	$15 = *($4 + [48])
	$16 = CALL $110([8802])
	if ( ((int_32)$16 != (int_32)( *($4 + [52]) ? uint_32($15 >> [1]) : ($15 & [1]) )) ){ goto $label$63 }
	$14 = ( $14 ? ($14 + [2]) : CALL $104($10, [0], [-1], [8802], $16) )
	goto $label$63 
	
.LABEL $label$64
	$14 = ($14 + [1])
	
.LABEL $label$63
	$10 = *($4 + [48])
	$15 = ($10 & [1])
	$16 = (($4 + [48]) + [8])
	CALL $102(($4 + [64]), ( *($16) ? $17 : $15 ), ( *($4 + [52]) ? uint_32($10 >> [1]) : $15 ))
	if ( ((uint_32)$9 > (uint_32)[4]) ){ goto $label$73 }
	CALL $100(($4 + [64]), [9361])
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$73
	if ( (*($4 + [48]) & [1]) ){ goto $label$71 }
	
.LABEL $label$72
	$7 = ($7 + [4])
	$9 = ($9 + [1])
	if ( ((int_32)$9 != (int_32)[6]) ){ goto $label$62 }
	goto $label$70 
	
.LABEL $label$71
	CALL _ZdlPv(*($16))
	$7 = ($7 + [4])
	$9 = ($9 + [1])
	if ( ((int_32)$9 != (int_32)[6]) ){ goto $label$62 }
	
.LABEL $label$70
	if ( ((uint_32)$22 >= (uint_32)[3]) ){ goto $label$74 }
	*((*($4 + [208]) + ($22 << [4])) + [8]) = $14
	
.LABEL $label$74
	CALL $24(($4 + [48]), ($4 + [160]), ($4 + [64]))
	if ( (*($4 + [64]) & [1]) ){ goto $label$76 }
	*($4 + [64]) = [0]
	goto $label$75 
	
.LABEL $label$76
	*(*($24)) = [0]
	*($4 + [68]) = [0]
	
.LABEL $label$75
	CALL $98(($4 + [64]), [0])
	$7 = *($16)
	*($24) = $7
	*($4 + [64]) = *($4 + [48])
	$9 = *($4 + [64])
	$10 = ($9 & [1])
	CALL $102(($4 + [144]), ( $7 ? $20 : $10 ), ( *($4 + [68]) ? uint_32($9 >> [1]) : $10 ))
	CALL $100(($4 + [144]), [9363])
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$77 }
	CALL _ZdlPv(*($24))
	
.LABEL $label$77
	if ( ((*($4 + [160]) & [1]) == 0) ){ goto $label$78 }
	CALL _ZdlPv(*($23))
	
.LABEL $label$78
	$21 = ($21 + [24])
	$22 = ($22 + [1])
	if ( ($22 <= [9]) ){ goto $label$57 }
	*(($4 + [136])) = [0]
	*($4 + [128]) = (int_64)0
	$7 = CALL $110([9358])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$79 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$82 }
	*($4 + [128]) = ($7 << [1])
	$9 = (($4 + [128]) | [1])
	if ( $7 ){ goto $label$81 }
	goto $label$80 
	
.LABEL $label$82
	$10 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($4 + [128]) = ($10 | [1])
	*($4 + [136]) = $9
	*($4 + [132]) = $7
	
.LABEL $label$81
	CALL memcpy($9, [9358], $7)
	
.LABEL $label$80
	*(($9 + $7)) = [0]
	$25 = (($4 + [16]) | [1])
	$26 = (($4 + [32]) | [1])
	$17 = (($4 + [160]) | [1])
	$22 = (($4 + [104]) | [1])
	$23 = (($4 + [64]) | [1])
	$27 = (CASTING float_64)(int_64 $6)
	$28 = (($4 + [160]) + [16])
	$29 = (($4 + [160]) + [32])
	$30 = ($4 + [92])
	$31 = ($4 + [84])
	$19 = (int_64)0
	
.LOOP $label$84:
	$9 = *($4 + [208])
	$7 = ($9 + ((CASTING uint_32)(uint_64 $19) << [4]))
	$10 = *($7 + [12])
	$32 = *($7)
	$15 = *($9 + [8])
	$7 = *($7 + [8])
	if ( ((int_32)$7 <= (int_32)$15) ){ goto $label$90 }
	$10 = ($10 + $7)
	$15 = *(($9 + [24]))
	if ( ((int_32)$7 > (int_32)$15) ){ goto $label$89 }
	goto $label$88 
	
.LABEL $label$90
	$10 = ($10 - ( $15 ? [0] : ((int_32)$7 < (int_32)$15) ))
	$15 = *(($9 + [24]))
	if ( ((int_32)$7 <= (int_32)$15) ){ goto $label$88 }
	
.LABEL $label$89
	$10 = ($10 + $7)
	$9 = *(($9 + [40]))
	if ( ((int_32)$7 <= (int_32)$9) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$88
	$10 = ($10 - ( $15 ? [0] : ((int_32)$7 < (int_32)$15) ))
	$9 = *(($9 + [40]))
	if ( ((int_32)$7 > (int_32)$9) ){ goto $label$86 }
	
.LABEL $label$87
	$7 = ($10 - ( $9 ? [0] : ((int_32)$7 < (int_32)$9) ))
	goto $label$85 
	
.LABEL $label$86
	$7 = ($10 + $7)
	
.LABEL $label$85
	*($4 + [120]) = $32
	CALL $23(($4 + [160]), ($4 + [120]))
	$9 = CALL $100(($4 + [160]), [9359])
	$10 = ($9 + [8])
	*(($14 = (($4 + [104]) + [8]))) = *($10)
	*($4 + [104]) = *($9)
	*($9) = (int_64)0
	*($10) = [0]
	if ( ((*($4 + [160]) & [1]) == 0) ){ goto $label$91 }
	CALL _ZdlPv(*((($4 + [160]) + [8])))
	
.LABEL $label$91
	if ( ((int_32)$7 <= (int_32)[0]) ){ goto $label$96 }
	$1 = ((int_64)*($2) * (int_64)(CASTING int_64)(int_32 $7))
	$12 = (float_64)
	if ( ((float_64)(float_64)|$12((CASTING float_64)(int_64 ((int_64)$1 + (int_64)$6)) - ((float_64)$11 * (float_64)(CASTING float_64)(int_64 $1))))| < (float_64)(float_64)9223372036854775808) ){ goto $label$93 }
	goto $label$95 
	
.LABEL $label$96
	if ( $7 ){ goto $label$94 }
	$12 = (float_64)
	if ( (((float_64)(float_64)|$12($27 - ((float_64)$11 * (float_64)(CASTING float_64)(int_64 *($2)))))| < (float_64)(float_64)9223372036854775808) == 0) ){ goto $label$95 }
	$3 = (Rounds 0)($12)
	goto $label$92 
	
.LABEL $label$95
	$3 = (int_64)-9223372036854775808
	goto $label$92 
	
.LABEL $label$94
	$3 = ((int_64)((int_64)*($2) * (int_64)(CASTING int_64)(int_32 $7)) + (int_64)$6)
	goto $label$92 
	
.LABEL $label$93
	$3 = (Rounds 0)($12)
	
.LABEL $label$92
	*(($16 = (($4 + [64]) + [8]))) = [0]
	*($4 + [64]) = (int_64)0
	CALL $98(($4 + [64]), [40])
	$1 = $3
	
.LOOP $label$97:
	$8 = ((int_64)$1 / (int_64)10)
	CALL $101(($4 + [64]), *(((CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$8 * (int_64)10))) + [10082])))
	$5 = ((int_64)$1 + (int_64)9)
	$1 = $8
	if ( ((uint_64)$5 > (uint_64)(int_64)18) ){ goto $label$97 }
	$7 = ($7 & [1])
	$7 = *($4 + [64])
	$9 = ( *($4 + [68]) ? uint_32($7 >> [1]) : $7 )
	if ( ($9 == 0) ){ goto $label$98 }
	$7 = ( *($16) ? $23 : $7 )
	$9 = (($7 + $9) + [-1])
	if ( ((uint_32)$9 <= (uint_32)$7) ){ goto $label$98 }
	
.LOOP $label$99:
	$10 = *($7)
	*($7) = *($9)
	*($9) = $10
	$9 = ($9 + [-1])
	$7 = ($7 + [1])
	if ( ($7 <= $9) ){ goto $label$99 }
	
.LABEL $label$98
	$7 = *($4 + [104])
	$9 = ($7 & [1])
	$7 = CALL $103(($4 + [64]), [0], ( *($14) ? $22 : $9 ), ( *($4 + [108]) ? uint_32($7 >> [1]) : $9 ))
	$9 = ($7 + [8])
	*(($15 = (($4 + [160]) + [8]))) = *($9)
	*($4 + [160]) = *($7)
	*($7) = (int_64)0
	*($9) = [0]
	$7 = *($4 + [160])
	$9 = ($7 & [1])
	CALL $102(($4 + [128]), ( *($15) ? $17 : $9 ), ( *($4 + [164]) ? uint_32($7 >> [1]) : $9 ))
	if ( ((*($4 + [160]) & [1]) == 0) ){ goto $label$100 }
	CALL _ZdlPv(*($15))
	
.LABEL $label$100
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$101 }
	CALL _ZdlPv(*($16))
	
.LABEL $label$101
	CALL $100(($4 + [128]), [9363])
	if ( ((int_64)$3 < (int_64)1) ){ goto $label$102 }
	if ( ((int_64)$32 == (int_64)*($0)) ){ goto $label$102 }
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [10093])
	$1 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$105:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$104 }
	$8 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$106 }
	$1 = $8
	$9 = [1]
	$10 = $7
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$105 }
	goto $label$103 
	
.LABEL $label$106
	$1 = $8
	
.LOOP $label$107:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$104 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$10 = ($7 + [1])
	$7 = $10
	if ( $9 ){ goto $label$107 }
	$9 = [1]
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$105 }
	goto $label$103 
	
.LABEL $label$104
	$9 = [0]
	
.LABEL $label$103
	CALL eosio_assert($9, [10142])
	$8 = *($0)
	$1 = (int_64)6
	
.LOOP $label$108:
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$108 }
	*((($4 + [48]) + [8])) = (int_64)3617214756542218240
	*($4 + [48]) = $8
	$1 = (int_64)0
	$5 = (int_64)59
	$7 = [9314]
	$18 = (int_64)0
	
.LOOP $label$109:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$114 }
	$9 = *($7)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$113 }
	$9 = ($9 + [-91])
	goto $label$112 
	
.LABEL $label$114
	$8 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$111 }
	goto $label$110 
	
.LABEL $label$113
	$9 = ( ($9 + [-48]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$112
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$111
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$110
	$7 = ($7 + [1])
	$5 = ((int_64)$5 + (int_64)4294967291)
	$18 = ((int_64)$8 | (int_64)$18)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$109 }
	$1 = (int_64)0
	$5 = (int_64)59
	$7 = [9326]
	$13 = (int_64)0
	
.LOOP $label$115:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$120 }
	$9 = *($7)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$119 }
	$9 = ($9 + [-91])
	goto $label$118 
	
.LABEL $label$120
	$8 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$117 }
	goto $label$116 
	
.LABEL $label$119
	$9 = ( ($9 + [-48]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$118
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$117
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$116
	$7 = ($7 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$13 = ((int_64)$8 | (int_64)$13)
	$5 = ((int_64)$5 + (int_64)4294967291)
	if ( ((int_64)$5 != (int_64)55834574842) ){ goto $label$115 }
	*(($33 = (($4 + [32]) + [8]))) = [0]
	*($4 + [32]) = (int_64)0
	$7 = CALL $110([9500])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$83 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$123 }
	*($4 + [32]) = ($7 << [1])
	$9 = $26
	if ( $7 ){ goto $label$122 }
	goto $label$121 
	
.LABEL $label$123
	$10 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($33) = $9
	*($4 + [32]) = ($10 | [1])
	*($4 + [36]) = $7
	
.LABEL $label$122
	CALL memcpy($9, [9500], $7)
	
.LABEL $label$121
	*(($9 + $7)) = [0]
	*(($24 = (($4 + [16]) + [8]))) = [0]
	*($4 + [16]) = (int_64)0
	CALL $98(($4 + [16]), [40])
	$1 = $19
	
.LOOP $label$124:
	$8 = ((int_64)$1 / (int_64)10)
	CALL $101(($4 + [16]), *(((CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$8 * (int_64)10))) + [10082])))
	$5 = ((int_64)$1 + (int_64)9)
	$1 = $8
	if ( ((uint_64)$5 > (uint_64)(int_64)18) ){ goto $label$124 }
	$16 = *($24)
	$10 = ($7 & [1])
	$7 = *($4 + [16])
	$20 = uint_32($7 >> [1])
	$21 = *($4 + [20])
	$9 = ( $21 ? $20 : $10 )
	if ( ($9 == 0) ){ goto $label$125 }
	$7 = ( $16 ? $25 : $10 )
	$9 = (($7 + $9) + [-1])
	if ( ((uint_32)$9 <= (uint_32)$7) ){ goto $label$125 }
	
.LOOP $label$126:
	$10 = *($7)
	*($7) = *($9)
	*($9) = $10
	$9 = ($9 + [-1])
	$7 = ($7 + [1])
	if ( ($7 <= $9) ){ goto $label$126 }
	$7 = *($4 + [16])
	$20 = uint_32($7 >> [1])
	$10 = ($7 & [1])
	$16 = *($24)
	$21 = *($4 + [20])
	
.LABEL $label$125
	$7 = CALL $102(($4 + [32]), ( $16 ? $25 : $10 ), ( $21 ? $20 : $10 ))
	$1 = *($7)
	*($7) = (int_64)0
	$9 = *($7 + [8])
	*($7 + [8]) = [0]
	*($15) = $32
	*($28) = $3
	*((($4 + [160]) + [24])) = (int_64)1397703940
	*($29) = $1
	*(($10 = (($4 + [160]) + [40]))) = $9
	*($4 + [160]) = *($0)
	CALL $18(($4 + [576]), CALL $17(($4 + [64]), ($4 + [48]), $18, $13, ($4 + [160])))
	$7 = *($4 + [576])
	CALL send_inline($7, (*($4 + [580]) - $7))
	$7 = *($4 + [576])
	if ( ($7 == 0) ){ goto $label$127 }
	*($4 + [580]) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$127
	$7 = *($30)
	if ( ($7 == 0) ){ goto $label$128 }
	*((($4 + [64]) + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$128
	$7 = *((($4 + [64]) + [16]))
	if ( ($7 == 0) ){ goto $label$129 }
	*($31) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$129
	if ( ((*($29) & [1]) == 0) ){ goto $label$133 }
	CALL _ZdlPv(*($10))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$131 }
	goto $label$132 
	
.LABEL $label$133
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$131 }
	
.LABEL $label$132
	CALL _ZdlPv(*($24))
	if ( (*($4 + [32]) & [1]) ){ goto $label$130 }
	goto $label$102 
	
.LABEL $label$131
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$102 }
	
.LABEL $label$130
	CALL _ZdlPv(*($33))
	
.LABEL $label$102
	if ( ((*($4 + [104]) & [1]) == 0) ){ goto $label$134 }
	CALL _ZdlPv(*($14))
	
.LABEL $label$134
	$19 = ((int_64)$19 + (int_64)1)
	if ( (uint_64)($19 <= (int_64)3) ){ goto $label$84 }
	$1 = *($4 + [568])
	if ( (int_64)($1 == 0) ){ goto $label$20 }
	*(($10 = ($4 + [192]))) = [0]
	*($4 + [168]) = $1
	*($4 + [176]) = (int_64)-1
	*($4 + [184]) = (int_64)0
	$1 = *($0)
	*($4 + [160]) = $1
	*($4 + [52]) = ($4 + [144])
	*($4 + [48]) = ($4 + [568])
	*($4 + [56]) = ($4 + [128])
	*($4 + [576]) = $1
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$3()), [10329])
	*($4 + [68]) = ($4 + [48])
	*($4 + [64]) = ($4 + [160])
	*($4 + [72]) = ($4 + [576])
	*(($7 = CALL _Znwj([48])) + [8 align=4]) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*($7 + [24 align=4]) = (int_64)0
	*($7 + [32]) = ($4 + [160])
	CALL $32(($4 + [64]), $7)
	*($4 + [104]) = $7
	$1 = *($7)
	*($4 + [64]) = $1
	$15 = *($7 + [36])
	*($4 + [32]) = $15
	$14 = ($4 + [188])
	$9 = *($14)
	if ( ((uint_32)$9 >= (uint_32)*($10)) ){ goto $label$136 }
	*($9 + [8]) = $1
	*($9 + [16]) = $15
	*($4 + [104]) = [0]
	*($9) = $7
	*($14) = ($9 + [24])
	$7 = *($4 + [104])
	*($4 + [104]) = [0]
	if ( ($7 == 0) ){ goto $label$135 }
	goto $label$21 
	
.LABEL $label$136
	CALL $26(($4 + [184]), ($4 + [104]), ($4 + [64]), ($4 + [32]))
	$7 = *($4 + [104])
	*($4 + [104]) = [0]
	if ( $7 ){ goto $label$21 }
	
.LABEL $label$135
	$10 = *($4 + [184])
	if ( ($10 == 0) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$83
	CALL $93(($4 + [32]))
	
.LABEL $label$79
	CALL $93(($4 + [128]))
	
.LABEL $label$53
	CALL $93(($4 + [144]))
	
.LABEL $label$23
	CALL $93(($4 + [224]))
	
.LABEL $label$22
	CALL $93(($4 + [64]))
	
.LABEL $label$21
	if ( ((*($7 + [20]) & [1]) == 0) ){ goto $label$137 }
	CALL _ZdlPv(*(($7 + [28])))
	
.LABEL $label$137
	if ( ((*($7 + [8]) & [1]) == 0) ){ goto $label$138 }
	CALL _ZdlPv(*(($7 + [16])))
	
.LABEL $label$138
	CALL _ZdlPv($7)
	$10 = *($4 + [184])
	if ( $10 ){ goto $label$19 }
	
.LABEL $label$20
	$7 = [1]
	if ( (*($4 + [128]) & [1]) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$15 = (($4 + [160]) + [28])
	$9 = *($15)
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$140 }
	
.LOOP $label$141:
	$9 = ($9 + [-24])
	$7 = *($9)
	*($9) = [0]
	if ( ($7 == 0) ){ goto $label$142 }
	if ( ((*($7 + [20]) & [1]) == 0) ){ goto $label$143 }
	CALL _ZdlPv(*(($7 + [28])))
	
.LABEL $label$143
	if ( ((*($7 + [8]) & [1]) == 0) ){ goto $label$144 }
	CALL _ZdlPv(*(($7 + [16])))
	
.LABEL $label$144
	CALL _ZdlPv($7)
	
.LABEL $label$142
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$141 }
	$7 = *(($4 + [184]))
	goto $label$139 
	
.LABEL $label$140
	$7 = $10
	
.LABEL $label$139
	*($15) = $10
	CALL _ZdlPv($7)
	$7 = [1]
	if ( ((*($4 + [128]) & [1]) == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL _ZdlPv(*($4 + [136]))
	if ( ((*($4 + [144]) & $7) == 0) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	if ( (*($4 + [144]) & $7) ){ goto $label$15 }
	
.LABEL $label$16
	$7 = *($4 + [208])
	if ( ($7 == 0) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	CALL _ZdlPv(*($4 + [152]))
	$7 = *($4 + [208])
	if ( ($7 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	*($4 + [212]) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$13
	if ( ((*($4 + [480]) & [1]) == 0) ){ goto $label$145 }
	CALL _ZdlPv(*($4 + [488]))
	
.LABEL $label$145
	$global$0 = ($4 + [592])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $55 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$1 = $global$0
	$2 = $1
	$3 = *($0 + [8])
	$4 = (int_64)($3 == 0)
	if ( $4 ){ goto $label$2 }
	$5 = ((int_64)$3 + (int_64)1)
	$6 = (int_64)1
	
.LOOP $label$3:
	$6 = ((int_64)$6 * (int_64)10)
	$5 = ((int_64)$5 + (int_64)-1)
	if ( ((int_64)$5 > (int_64)1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)1
	
.LABEL $label$1
	$7 = ($0 + [8])
	$8 = (CASTING uint_32)(uint_64 $3)
	$1 = ($1 - (($8 + [16]) & [496]))
	$global$0 = $1
	*(($9 = ($1 + $8))) = [0]
	$10 = *($0)
	if ( $4 ){ goto $label$4 }
	$3 = ((int_64)$3 + (int_64)1)
	$5 = ((int_64)$10 % (int_64)$6)
	$0 = ($9 + [-1])
	
.LOOP $label$5:
	$11 = ((int_64)$5 / (int_64)10)
	*($0) = ((CASTING uint_32)(uint_64 (int_64))($5 - ((int_64)$11 * (int_64)10))) + [48])
	$0 = ($0 + [-1])
	$5 = $11
	$3 = ((int_64)$3 + (int_64)-1)
	if ( ((int_64)$3 > (int_64)1) ){ goto $label$5 }
	
.LABEL $label$4
	CALL printi(((int_64)$10 / (int_64)$6))
	CALL prints([10571])
	CALL prints_l($1, $8)
	CALL prints([9886])
	CALL $85($7, [0])
	$global$0 = $2
}

int_64 .FUNC $107 (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

void .FUNC $106 (int_32 $0)
{
}

void .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [2])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$6 = [1073741823]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [2]) > (uint_32)[536870910]) ){ goto $label$5 }
	$6 = int_32($7 >> [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[1073741824]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL _Znwj(($6 << [2]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $105($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [2])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [2]))
	$5 = ($4 + [4])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL _ZdlPv($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0)
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($0 + [4]), ($4 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($0 + [4]), ($4 + [16]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($0 + [4]), ($4 + [24]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($2 + [8]) = $4
	CALL $81(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = CALL _Znwj([16])
	*($0 + [8]) = $3
	*($0) = (int_64)55834574865
	CALL memset($3, [46], [13])
	*($3 + [13]) = [0]
	$5 = *($1)
	$1 = (CASTING uint_32)(uint_64 $5)
	$4 = *([0] + [10168])
	*($3 + [12]) = *(($4 + ($1 & [15])))
	*($3 + [11]) = *(($4 + (uint_32($1 >> [4]) & [31])))
	*($3 + [10]) = *(($4 + (uint_32($1 >> [9]) & [31])))
	*($3 + [9]) = *(($4 + (uint_32($1 >> [14]) & [31])))
	*($3 + [8]) = *(($4 + (uint_32($1 >> [19]) & [31])))
	*($3 + [7]) = *(($4 + (uint_32($1 >> [24]) & [31])))
	*($3 + [6]) = *(($4 + ((CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)29)) & [31])))
	*($3 + [5]) = *(($4 + ((CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)34)) & [31])))
	*($3 + [4]) = *(($4 + ((CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)39)) & [31])))
	*($3 + [3]) = *(($4 + ((CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)44)) & [31])))
	*($3 + [2]) = *(($4 + ((CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)49)) & [31])))
	*($3 + [1]) = *(($4 + ((CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)54)) & [31])))
	*(*($0 + [8])) = *(($4 + (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)59))))
	$4 = ($3 & [1])
	$3 = *($0)
	$3 = ( *($0 + [4]) ? uint_32($3 >> [1]) : $4 )
	$1 = ( *($0 + [8]) ? ($0 + [1]) : $4 )
	
.LOOP $label$2:
	if ( ($3 == 0) ){ goto $label$1 }
	$4 = ($1 + $3)
	$6 = ($3 + [-1])
	$3 = $6
	if ( ((int_32)*(($4 + [-1])) == (int_32)[46]) ){ goto $label$2 }
	if ( ((int_32)$6 == (int_32)[-1]) ){ goto $label$1 }
	CALL $95($2, $0, [0], ($6 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$4 }
	*($0) = [0]
	goto $label$3 
	
.LABEL $label$4
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$3
	CALL $98($0, [0])
	*(($0 + [8])) = *(($2 + [8]))
	*($0) = *($2)
	
.LABEL $label$1
	$global$0 = ($2 + [16])
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	*($2) = (int_64)0
	*($2 + [8]) = [0]
	$3 = *($0 + [8])
	CALL $98($2, [40])
	$4 = ($0 + [8])
	
.LOOP $label$1:
	$5 = ((int_64)$3 / (int_64)10)
	CALL $101($2, *(((CASTING uint_32)(uint_64 (int_64))($3 - ((int_64)$5 * (int_64)10))) + [10082])))
	$6 = ((int_64)$3 + (int_64)9)
	$3 = $5
	if ( ((uint_64)$6 > (uint_64)(int_64)18) ){ goto $label$1 }
	$0 = ($0 & [1])
	$0 = *($2)
	$7 = ( *($2 + [4]) ? uint_32($0 >> [1]) : $0 )
	if ( ($7 == 0) ){ goto $label$2 }
	$0 = ( *(($2 + [8])) ? ($2 | [1]) : $0 )
	$7 = (($0 + $7) + [-1])
	if ( ((uint_32)$7 <= (uint_32)$0) ){ goto $label$2 }
	
.LOOP $label$3:
	$8 = *($0)
	*($0) = *($7)
	*($7) = $8
	$7 = ($7 + [-1])
	$0 = ($0 + [1])
	if ( ($0 <= $7) ){ goto $label$3 }
	
.LABEL $label$2
	CALL sha256($4, [8], ($2 + [16]))
	$3 = ((int_64)((int_64)*($2 + [17]) << (int_64)32) | (int_64)*($2 + [16]))
	*($4) = $3
	$0 = (CASTING uint_32)(uint_64 ((uint_64)$3 % (uint_64)(CASTING uint_64)(uint_32 $1)))
	if ( ((*($2) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*(($2 + [8])))
	
.LABEL $label$4
	$global$0 = ($2 + [48])
	return $0
}

void .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = ($1 + [8])
	CALL $96($6, *($4 + [4]))
	$7 = ($1 + [20])
	CALL $96($7, *($4 + [8]))
	$4 = *($1 + [8])
	$8 = ( *(($1 + [12])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($8 + [8])
	$9 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	$8 = *(($1 + [20]))
	$8 = ( *(($1 + [24])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$4 = ($8 + $4)
	$9 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ($4 <= [513]) ){ goto $label$4 }
	$2 = CALL $111($4)
	goto $label$3 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	CALL eosio_assert(((int_32)$4 > (int_32)[7]), [10162])
	CALL memcpy($2, $1, [8])
	*($3 + [4]) = ($2 + [8])
	CALL $79($3, $6)
	CALL $79($3, $7)
	$9 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($5 + [8]), (int_64)4229853544465694720, *(*($0 + [8])), $9, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	if ( ((uint_64)$9 >= (uint_64)*($5 + [16])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $114($2)
	if ( (uint_64)($9 <= *($5 + [16])) ){ goto $label$5 }
	
.LABEL $label$6
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [16])
}

void .FUNC $24 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = ($3 & [1])
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : $5 )
	$3 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$6 = ($4 + $3)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$6 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$6 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($6 + [16]) & [-16])
	$6 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*(($0 + [8])) = $6
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($6, ( $7 ? ($1 + [1]) : $5 ), $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL $102($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $93($0)
}

void .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $79(*($1), ($0 + [32]))
}

void .FUNC $26 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $105($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [28])))
	
.LABEL $label$11
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*(($1 + [16])))
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL _ZdlPv($2)
	
.LABEL $label$13
	(unreachable)
}

int_32 .FUNC $109 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [10324])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($0 + [40]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $94(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*(*($0)) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $94(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

int_32 .FUNC $108 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

void .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $3) > (uint_32)[7]), [10324])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($0 + [24]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($0 + [32]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($2 + [8]) = $0
	CALL $86(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $64 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $70(($0 + [812]), *(($0 + [816])))
	CALL $71(($0 + [800]), *(($0 + [804])))
	$1 = [648]
	
.LOOP $label$1:
	$2 = ($0 + $1)
	if ( ((*(($2 + [140])) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*(($2 + [148])))
	
.LABEL $label$2
	$1 = ($1 + [-12])
	if ( $1 ){ goto $label$1 }
	$3 = *(($0 + [120]))
	if ( ($3 == 0) ){ goto $label$3 }
	$4 = ($0 + [124])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	$1 = ($1 + [-24])
	$2 = *($1)
	*($1) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL _ZdlPv($2)
	
.LABEL $label$7
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$6 }
	$1 = *(($0 + [120]))
	goto $label$4 
	
.LABEL $label$5
	$1 = $3
	
.LABEL $label$4
	*($4) = $3
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$3 = *(($0 + [40]))
	if ( ($3 == 0) ){ goto $label$8 }
	$4 = ($0 + [44])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$10 }
	
.LOOP $label$11:
	$1 = ($1 + [-24])
	$2 = *($1)
	*($1) = [0]
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$11 }
	$1 = *(($0 + [40]))
	goto $label$9 
	
.LABEL $label$10
	$1 = $3
	
.LABEL $label$9
	*($4) = $3
	CALL _ZdlPv($1)
	
.LABEL $label$8
	return $0
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [10324])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $87(*($1), ($0 + [32]))
}

void .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [10324])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

int_32 .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [4])
	$5 = *($1)
	$6 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL $111($1)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($2 - (($1 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($3 + [8]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[3]), [10324])
	CALL memcpy(($3 + [8]), $6, [4])
	$2 = *($3 + [8])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL $114($6)
	
.LABEL $label$4
	$1 = ($0 + int_32($4 >> [1]))
	if ( (($4 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $2), (int_32 $5))
	$global$0 = ($3 + [16])
	return [1]
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [4])
	$5 = *($1)
	$1 = [0]
	$6 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$6 = CALL $111($7)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($2 - (($7 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$2
	CALL read_action_data($6, $7)
	
.LABEL $label$1
	*(($3 + [32])) = (int_64)1398362884
	*($3 + [24]) = (int_64)0
	*($3 + [16]) = (int_64)0
	CALL eosio_assert([1], [10093])
	$8 = (int_64)5462355
	
.LOOP $label$5:
	$9 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$10 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$8 = $10
	$9 = [1]
	$2 = $1
	$1 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$8 = $10
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$2 = ((int_32)$1 < (int_32)[6])
	$11 = ($1 + [1])
	$1 = $11
	if ( $2 ){ goto $label$7 }
	$9 = [1]
	$1 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($9, [10142])
	*($3 + [40]) = (int_64)0
	*($3 + [84]) = $6
	*($3 + [80]) = $6
	*($3 + [88]) = ($6 + $7)
	*($3 + [48]) = ($3 + [80])
	*($3 + [64]) = ($3 + [16])
	CALL $66(($3 + [64]), ($3 + [48]))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $114($6)
	
.LABEL $label$8
	*(($1 = (($3 + [48]) + [8]))) = *(($3 + [32]))
	*($3 + [48]) = *($3 + [24])
	$8 = *(($3 + [40]))
	$10 = *($3 + [16])
	*((($3 + [64]) + [8])) = *($1)
	*($3 + [64]) = *($3 + [48])
	$1 = ($0 + int_32($4 >> [1]))
	if ( (($4 & [1]) == 0) ){ goto $label$9 }
	$5 = *((*($1) + $5))
	
.LABEL $label$9
	$12 = *((($3 + [64]) + [8]))
	*((($3 + [80]) + [8])) = $12
	*(($3 + [8])) = $12
	$12 = *($3 + [64])
	*($3) = $12
	*($3 + [80]) = $12
	CALL void $1((int_32 $10), (int_64 $3), (int_32 $8), (int_64 $5))
	$global$0 = ($3 + [96])
	return [1]
}

int_32 .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [4])
	$5 = *($1)
	$1 = [0]
	$6 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$6 = CALL $111($7)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($2 - (($7 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$2
	CALL read_action_data($6, $7)
	
.LABEL $label$1
	*(($3 + [32])) = (int_64)1398362884
	*($3 + [24]) = (int_64)0
	*($3 + [16]) = (int_64)0
	CALL eosio_assert([1], [10093])
	$8 = (int_64)5462355
	
.LOOP $label$5:
	$9 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$10 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$8 = $10
	$9 = [1]
	$2 = $1
	$1 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$8 = $10
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$2 = ((int_32)$1 < (int_32)[6])
	$11 = ($1 + [1])
	$1 = $11
	if ( $2 ){ goto $label$7 }
	$9 = [1]
	$1 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($9, [10142])
	*($3 + [48]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [56]) = (int_64)0
	*($3 + [64]) = (int_64)0
	*($3 + [72]) = (int_64)0
	*($3 + [80]) = (int_64)0
	*($3 + [88]) = (int_64)0
	*($3 + [96]) = (int_64)0
	*($3 + [104]) = (int_64)0
	*($3 + [148]) = $6
	*($3 + [144]) = $6
	*($3 + [152]) = ($6 + $7)
	*($3 + [112]) = ($3 + [144])
	*($3 + [128]) = ($3 + [16])
	CALL $65(($3 + [128]), ($3 + [112]))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $114($6)
	
.LABEL $label$8
	*(($1 = (($3 + [112]) + [8]))) = *(($3 + [32]))
	*($3 + [112]) = *($3 + [24])
	$8 = *(($3 + [40]))
	$10 = *(($3 + [48]))
	$12 = *(($3 + [56]))
	$13 = *(($3 + [64]))
	$14 = *(($3 + [72]))
	$15 = *(($3 + [80]))
	$16 = *(($3 + [88]))
	$17 = *(($3 + [96]))
	$18 = *(($3 + [104]))
	$19 = *($3 + [16])
	*((($3 + [128]) + [8])) = *($1)
	*($3 + [128]) = *($3 + [112])
	$1 = ($0 + int_32($4 >> [1]))
	if ( (($4 & [1]) == 0) ){ goto $label$9 }
	$5 = *((*($1) + $5))
	
.LABEL $label$9
	$20 = *((($3 + [128]) + [8]))
	*((($3 + [144]) + [8])) = $20
	*(($3 + [8])) = $20
	$20 = *($3 + [128])
	*($3) = $20
	*($3 + [144]) = $20
	CALL void $1((int_32 $19), (int_64 $3), (int_32 $8), (int_64 $10), (int_64 $12), (int_64 $13), (int_64 $14), (int_64 $15), (int_64 $16), (int_64 $17), (int_64 $18), (int_64 $5))
	$global$0 = ($3 + [160])
	return [1]
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [4])
	$5 = *($1)
	$1 = [0]
	$6 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$6 = CALL $111($7)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($2 - (($7 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$2
	CALL read_action_data($6, $7)
	
.LABEL $label$1
	*(($3 + [32])) = (int_64)1398362884
	*($3 + [24]) = (int_64)0
	*($3 + [16]) = (int_64)0
	CALL eosio_assert([1], [10093])
	$8 = (int_64)5462355
	
.LOOP $label$5:
	$9 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$10 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$8 = $10
	$9 = [1]
	$2 = $1
	$1 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$8 = $10
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$2 = ((int_32)$1 < (int_32)[6])
	$11 = ($1 + [1])
	$1 = $11
	if ( $2 ){ goto $label$7 }
	$9 = [1]
	$1 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($9, [10142])
	*($3 + [48]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [56]) = (int_64)0
	*($3 + [100]) = $6
	*($3 + [96]) = $6
	*($3 + [104]) = ($6 + $7)
	*($3 + [64]) = ($3 + [96])
	*($3 + [80]) = ($3 + [16])
	CALL $69(($3 + [80]), ($3 + [64]))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $114($6)
	
.LABEL $label$8
	*(($1 = (($3 + [64]) + [8]))) = *(($3 + [32]))
	*($3 + [64]) = *($3 + [24])
	$8 = *(($3 + [40]))
	$10 = *(($3 + [48]))
	$12 = *(($3 + [56]))
	$13 = *($3 + [16])
	*((($3 + [80]) + [8])) = *($1)
	*($3 + [80]) = *($3 + [64])
	$1 = ($0 + int_32($4 >> [1]))
	if ( (($4 & [1]) == 0) ){ goto $label$9 }
	$5 = *((*($1) + $5))
	
.LABEL $label$9
	$14 = *((($3 + [80]) + [8]))
	*((($3 + [96]) + [8])) = $14
	*(($3 + [8])) = $14
	$14 = *($3 + [80])
	*($3) = $14
	*($3 + [96]) = $14
	CALL void $1((int_32 $13), (int_64 $3), (int_32 $8), (int_64 $10), (int_64 $12), (int_64 $5))
	$global$0 = ($3 + [112])
	return [1]
}

void .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$3 = ($2 & [1])
	if ( ($3 == 0) ){ goto $label$6 }
	$4 = ((*($0) & [-2]) + [-1])
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = [10]
	$2 = uint_32($2 >> [1])
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $99($0, $4, [1], $4, $4, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($2 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($2 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $2)) + [1]) = [0]
	*($0) = $1
}

int_32 .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $110($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $97($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_32 .FUNC $103 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0)
	$5 = ($4 & [1])
	if ( $5 ){ goto $label$5 }
	$4 = uint_32($4 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = [10]
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$6
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$10 }
	CALL $97($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	goto $label$9 
	
.LABEL $label$10
	if ( ($3 == 0) ){ goto $label$9 }
	if ( $5 ){ goto $label$8 }
	$5 = ($0 + [1])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$7
	CALL memmove($6, $2, $3)
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL memmove(($6 + $3), $6, $1)
	CALL memmove($6, ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) ), $3)
	
.LABEL $label$1
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($3 << [1])
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$11
	*($0 + [4]) = $3
	*(($5 + $3)) = [0]
	(unreachable)
	return $0
}

int_32 .FUNC $102 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $97($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $105 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $104 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $109(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $111($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10580])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $111($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = [0]
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($2 <= *($5)), [10573])
	$2 = *($6)
	$7 = *($2)
	$2 = ($2 + [1])
	*($6) = $2
	$3 = ($3 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $3)))
	$3 = ($3 + [7])
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $4)
	$7 = *($1)
	$3 = *($1 + [4])
	$5 = ($3 - $7)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$3 }
	CALL $19($1, ($6 - $5))
	$2 = *(($0 + [4]))
	$3 = *(($1 + [4]))
	$7 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$2 }
	$3 = ($7 + $6)
	*(($1 + [4])) = $3
	
.LABEL $label$2
	$2 = ($3 - $7)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $2) >= (uint_32)$2), [10324])
	$3 = ($0 + [4])
	CALL memcpy($7, *($3), $2)
	*($3) = (*($3) + $2)
	return $0
}

int_32 .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $88($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $98($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $98($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $93($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($2 + [40]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($3 + [48]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($3 + [56]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($3 + [64]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($3 + [72]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($3 + [80]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy(($3 + [88]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ($1 == 0) ){ goto $label$1 }
	CALL printui(*($0))
	CALL prints([9361])
	
.LABEL $label$1
	$3 = *($0)
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)8)
	*($2 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($2 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)16)
	*($2 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($2 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)24)
	*($2 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($2 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	*($2 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($2 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)40)
	*($2 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($2 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)48)
	*($2 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($2 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)56)
	*($2 + [15]) = $0)
	if ( ($0 == 0) ){ goto $label$2 }
	CALL prints_l(($2 + [15]), [1])
	
.LABEL $label$2
	$global$0 = ($2 + [16])
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [10324])
	CALL memcpy($2, *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [10324])
	CALL memcpy($2, *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy($2, *($3 + [4]), [8])
	$4 = (*($3 + [4]) + [8])
	*($3 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]), [10324])
	CALL memcpy(($2 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0 + [16])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [10324])
	CALL memcpy($0, *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [10324])
	CALL memcpy($2, *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [10324])
	CALL memcpy($2, *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [10324])
	CALL memcpy($2, *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$3 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [10324])
	CALL memcpy($3, *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), ($2 + [64]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), ($0 + [72]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), ($0 + [80]), [8])
	$1 = (*($3 + [4]) + [8])
	*($3 + [4]) = $1
	CALL eosio_assert(((int_32)(*($3 + [8]) - $1) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), ($0 + [88]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($4 + [4]), ($3 + [32]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0)
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($0 + [4]), ($4 + [40]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($0 + [4]), ($4 + [48]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($0 + [4]), ($4 + [56]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($2 + [8]) = $4
	CALL $82(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [10324])
	CALL memcpy($2, *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [10324])
	CALL memcpy($2, *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [10324])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [10324])
	CALL memcpy($2, *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$2 = *($0 + [16])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [10324])
	CALL memcpy($2, *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$3 = *($0 + [20])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [10324])
	CALL memcpy($3, *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [10162])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$2 }
	$6 = ($0 + [4])
	
.LOOP $label$3:
	$5 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[7]), [10162])
	CALL memcpy(*($6), $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[7]), [10162])
	CALL memcpy(*($6), ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [10162])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $4) >= (int_32)$6), [10162])
	$4 = ($0 + [4])
	CALL memcpy(*($4), $7, $6)
	*($4) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $70($0, *($1))
	CALL $70($0, *($1 + [4]))
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*(($1 + [24])))
	
.LABEL $label$2
	CALL _ZdlPv($1)
	
.LABEL $label$1
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $71($0, *($1))
	CALL $71($0, *($1 + [4]))
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*(($1 + [24])))
	
.LABEL $label$2
	CALL _ZdlPv($1)
	
.LABEL $label$1
}

void .FUNC $76 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $105($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $77 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = ($0 + [4])
	$0 = *($0 + [4])
	if ( ($0 == 0) ){ goto $label$1 }
	$4 = ($2 + [1])
	$5 = ($2 + [8])
	
.LOOP $label$3:
	$7 = ($0 + [16])
	$12 = ($11 & [1])
	$11 = *($2)
	$10 = ($2 + [4])
	$11 = ( *($10) ? uint_32($11 >> [1]) : $12 )
	$9 = ($6 & [1])
	$6 = *($0 + [16])
	$8 = ($0 + [20])
	$6 = ( *($8) ? uint_32($6 >> [1]) : $9 )
	$13 = ( $6 ? $11 : ($6 <= $11) )
	if ( ($13 == 0) ){ goto $label$7 }
	$9 = CALL $109(( *($5) ? $4 : $12 ), ( *(($0 + [24])) ? ($7 + [1]) : $9 ), $13)
	if ( ($9 == 0) ){ goto $label$7 }
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((uint_32)$11 >= (uint_32)$6) ){ goto $label$5 }
	
.LABEL $label$6
	$6 = *($0)
	if ( $6 ){ goto $label$4 }
	*($1) = $0
	return $0
	
.LABEL $label$5
	$12 = ($11 & [1])
	$11 = *($7)
	$11 = ( *($8) ? uint_32($11 >> [1]) : $12 )
	$9 = ($6 & [1])
	$6 = *($2)
	$6 = ( *($10) ? uint_32($6 >> [1]) : $9 )
	$13 = ( $6 ? $11 : ($6 <= $11) )
	if ( ($13 == 0) ){ goto $label$9 }
	$7 = CALL $109(( *(($0 + [24])) ? ($7 + [1]) : $12 ), ( *($5) ? $4 : $9 ), $13)
	if ( ($7 == 0) ){ goto $label$9 }
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((uint_32)$11 >= (uint_32)$6) ){ goto $label$2 }
	
.LABEL $label$8
	$3 = ($0 + [4])
	$6 = *($0 + [4])
	if ( ($6 == 0) ){ goto $label$2 }
	$0 = $3
	
.LABEL $label$4
	$3 = $0
	$0 = $6
	goto $label$3 
	
.LABEL $label$2
	*($1) = $0
	return $3
	
.LABEL $label$1
	*($1) = $3
	return $3
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($3 = $2) + [44]) = $1
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [10301])
	if ( ($5 <= [513]) ){ goto $label$5 }
	$4 = CALL $111($5)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*($3 + [12]) = ($3 + [32])
	*($3 + [16]) = ($3 + [44])
	*($3 + [8]) = $0
	$1 = CALL _Znwj([32])
	$6 = CALL $75($1, $0, ($3 + [8]))
	*($3 + [24]) = $1
	$7 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	*($3 + [8]) = $7)
	$8 = *($1 + [20])
	*($3 + [4]) = $8
	$9 = ($0 + [28])
	$2 = *($9)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($2 + [8]) = $7
	*($2 + [16]) = $8
	*($3 + [24]) = [0]
	*($2) = $1
	*($9) = ($2 + [24])
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $76(($0 + [24]), ($3 + [24]), ($3 + [8]), ($3 + [4]))
	if ( ($5 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $114($4)
	
.LABEL $label$6
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$9 }
	CALL _ZdlPv($5)
	
.LABEL $label$9
	$global$0 = ($3 + [48])
	return $6
}

void .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = ($1 + [8])
	CALL $96($6, *($4 + [4]))
	$7 = ($1 + [20])
	CALL $96($7, *($4 + [8]))
	$4 = *($1 + [8])
	$8 = ( *(($1 + [12])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($8 + [8])
	$9 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	$8 = *(($1 + [20]))
	$8 = ( *(($1 + [24])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$4 = ($8 + $4)
	$9 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ($4 <= [513]) ){ goto $label$4 }
	$2 = CALL $111($4)
	goto $label$3 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	CALL eosio_assert(((int_32)$4 > (int_32)[7]), [10162])
	CALL memcpy($2, $1, [8])
	*($3 + [4]) = ($2 + [8])
	CALL $79($3, $6)
	CALL $79($3, $7)
	$9 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($5 + [8]), (int_64)4229853544465694720, *(*($0 + [8])), $9, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	if ( ((uint_64)$9 >= (uint_64)*($5 + [16])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $114($2)
	if ( (uint_64)($9 <= *($5 + [16])) ){ goto $label$5 }
	
.LABEL $label$6
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [16])
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = ($1 + [8])
	CALL $96($6, *($4 + [4]))
	$7 = ($1 + [20])
	CALL $96($7, *($4 + [8]))
	$4 = *($1 + [8])
	$8 = ( *(($1 + [12])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($8 + [8])
	$9 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	$8 = *(($1 + [20]))
	$8 = ( *(($1 + [24])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$4 = ($8 + $4)
	$9 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ($4 <= [513]) ){ goto $label$4 }
	$2 = CALL $111($4)
	goto $label$3 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	CALL eosio_assert(((int_32)$4 > (int_32)[7]), [10162])
	CALL memcpy($2, $1, [8])
	*($3 + [4]) = ($2 + [8])
	CALL $79($3, $6)
	CALL $79($3, $7)
	$9 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($5 + [8]), (int_64)4229853544465694720, *(*($0 + [8])), $9, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	if ( ((uint_64)$9 >= (uint_64)*($5 + [16])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $114($2)
	if ( (uint_64)($9 <= *($5 + [16])) ){ goto $label$5 }
	
.LABEL $label$6
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [16])
}

void .FUNC $37 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	float_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	int_32 $41
	float_64 $42
	$4 = ($global$0 - [576])
	$global$0 = $4
	*($4 + [552]) = $1
	CALL eosio_assert(((int_32)*(($0 + [144])) == (int_32)[1]), [10205])
	CALL require_auth(*($0))
	$1 = *($2 + [8])
	CALL eosio_assert(((int_64)((int_64)$1 & (int_64)255) == (int_64)4), [9002])
	CALL eosio_assert(CALL $fimport$6($3), [9599])
	CALL eosio_assert(((int_64)$1 == (int_64)1397703940), [9386])
	$5 = *($2)
	CALL eosio_assert((uint_64)(((int_64)$5 + (int_64)-1000) <= (int_64)999001), [9631])
	*($4 + [480]) = $3
	$1 = *($0)
	*($4 + [488]) = $1
	*($4 + [496]) = $1
	*($4 + [504]) = $1
	*($4 + [512]) = $1
	*($4 + [520]) = $1
	*($4 + [528]) = $1
	*($4 + [536]) = $1
	*($4 + [544]) = $1
	$6 = ((int_64)((int_64)$5 * (int_64)*(($0 + [60]))) / (int_64)10000)
	CALL eosio_assert((uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [10093])
	$7 = (CASTING float_64)(int_64 $5)
	$8 = [0]
	$1 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$1 = $5
	$9 = [1]
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$1 = $5
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$9 = ((int_32)$8 < (int_32)[6])
	$10 = ($8 + [1])
	$8 = $10
	if ( $9 ){ goto $label$5 }
	$9 = [1]
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [10142])
	*(($4 + [248])) = [0]
	*($4 + [240]) = (int_64)0
	$8 = CALL $110([9680])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$18 }
	*($4 + [240]) = ($8 << [1])
	$9 = (($4 + [240]) | [1])
	if ( $8 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$10 = (($8 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($4 + [240]) = ($10 | [1])
	*($4 + [248]) = $9
	*($4 + [244]) = $8
	
.LABEL $label$17
	CALL memcpy($9, [9680], $8)
	
.LABEL $label$16
	*(($9 + $8)) = [0]
	*($4 + [32]) = (int_64)0
	*($4 + [40]) = [0]
	$1 = *($4 + [552])
	CALL $98(($4 + [32]), [40])
	
.LOOP $label$19:
	$5 = ((int_64)$1 / (int_64)10)
	CALL $101(($4 + [32]), *(((CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$5 * (int_64)10))) + [10082])))
	$11 = ((int_64)$1 + (int_64)9)
	$1 = $5
	if ( ((uint_64)$11 > (uint_64)(int_64)18) ){ goto $label$19 }
	$12 = (($4 + [32]) | [1])
	$13 = *((($4 + [32]) + [8]))
	$10 = ($8 & [1])
	$8 = *($4 + [32])
	$15 = uint_32($8 >> [1])
	$14 = *($4 + [36])
	$9 = ( $14 ? $15 : $10 )
	if ( ($9 == 0) ){ goto $label$20 }
	$8 = ( $13 ? $12 : $10 )
	$9 = (($8 + $9) + [-1])
	if ( ((uint_32)$9 <= (uint_32)$8) ){ goto $label$20 }
	
.LOOP $label$21:
	$10 = *($8)
	*($8) = *($9)
	*($9) = $10
	$9 = ($9 + [-1])
	$8 = ($8 + [1])
	if ( ($8 <= $9) ){ goto $label$21 }
	$8 = *($4 + [32])
	$15 = uint_32($8 >> [1])
	$10 = ($8 & [1])
	$13 = *(($4 + [40]))
	$14 = *($4 + [36])
	
.LABEL $label$20
	$8 = CALL $102(($4 + [240]), ( $13 ? $12 : $10 ), ( $14 ? $15 : $10 ))
	$9 = ($8 + [8])
	*((($4 + [464]) + [8])) = *($9)
	*($4 + [464]) = *($8)
	*($8) = (int_64)0
	*($9) = [0]
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$22 }
	CALL _ZdlPv(*(($4 + [40])))
	
.LABEL $label$22
	if ( ((*($4 + [240]) & [1]) == 0) ){ goto $label$23 }
	CALL _ZdlPv(*($4 + [248]))
	
.LABEL $label$23
	$16 = *($0)
	$1 = (int_64)6
	
.LOOP $label$24:
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$24 }
	*($4 + [104]) = (int_64)3617214756542218240
	*($4 + [96]) = $16
	$1 = (int_64)0
	$11 = (int_64)59
	$8 = [9314]
	$17 = (int_64)0
	
.LOOP $label$25:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$30 }
	$9 = *($8)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$9 = ($9 + [-91])
	goto $label$28 
	
.LABEL $label$30
	$5 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$9 = ( ($9 + [-48]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$26
	$8 = ($8 + [1])
	$11 = ((int_64)$11 + (int_64)4294967291)
	$17 = ((int_64)$5 | (int_64)$17)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$25 }
	$1 = (int_64)0
	$11 = (int_64)59
	$8 = [9326]
	$18 = (int_64)0
	
.LOOP $label$31:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$36 }
	$9 = *($8)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$35 }
	$9 = ($9 + [-91])
	goto $label$34 
	
.LABEL $label$36
	$5 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$35
	$9 = ( ($9 + [-48]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$34
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$33
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$32
	$8 = ($8 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$18 = ((int_64)$5 | (int_64)$18)
	$11 = ((int_64)$11 + (int_64)4294967291)
	if ( ((int_64)$11 != (int_64)55834574842) ){ goto $label$31 }
	$1 = (int_64)0
	$5 = (int_64)59
	$8 = [9335]
	$19 = (int_64)0
	
.LOOP $label$37:
	$11 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$38 }
	$9 = *($8)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$9 = ($9 + [-91])
	goto $label$39 
	
.LABEL $label$40
	$9 = ( ($9 + [-48]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$11 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $9) & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$38
	$8 = ($8 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$19 = ((int_64)$11 | (int_64)$19)
	$5 = ((int_64)$5 + (int_64)4294967291)
	if ( ((int_64)$5 != (int_64)55834574842) ){ goto $label$37 }
	*(($4 + [264])) = (int_64)1397703940
	*($4 + [248]) = $19
	*($4 + [240]) = $16
	*($4 + [256]) = $6
	CALL $94(($4 + [272]), ($4 + [464]))
	$8 = CALL $17(($4 + [32]), ($4 + [96]), $17, $18, ($4 + [240]))
	CALL $18(($4 + [80]), $8)
	$9 = *($4 + [80])
	CALL send_inline($9, (*($4 + [84]) - $9))
	$9 = *($4 + [80])
	if ( ($9 == 0) ){ goto $label$41 }
	*($4 + [84]) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$41
	$9 = *($8 + [28])
	if ( ($9 == 0) ){ goto $label$42 }
	*(($8 + [32])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$42
	$9 = *($8 + [16])
	if ( ($9 == 0) ){ goto $label$43 }
	*(($8 + [20])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$43
	if ( ((*($4 + [272]) & [1]) == 0) ){ goto $label$44 }
	CALL _ZdlPv(*(($4 + [280])))
	
.LABEL $label$44
	$19 = *($0)
	$1 = (int_64)6
	
.LOOP $label$45:
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$45 }
	$1 = (int_64)0
	$5 = (int_64)59
	$8 = [9335]
	$17 = (int_64)0
	
.LOOP $label$46:
	$11 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$47 }
	$9 = *($8)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$49 }
	$9 = ($9 + [-91])
	goto $label$48 
	
.LABEL $label$49
	$9 = ( ($9 + [-48]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$48
	$11 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $9) & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$47
	$8 = ($8 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$17 = ((int_64)$11 | (int_64)$17)
	$5 = ((int_64)$5 + (int_64)4294967291)
	if ( ((int_64)$5 != (int_64)55834574842) ){ goto $label$46 }
	$1 = (int_64)0
	$11 = (int_64)59
	$8 = [9489]
	$18 = (int_64)0
	
.LOOP $label$50:
	if ( ((uint_64)$1 > (uint_64)(int_64)9) ){ goto $label$55 }
	$9 = *($8)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$54 }
	$9 = ($9 + [-91])
	goto $label$53 
	
.LABEL $label$55
	$5 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$54
	$9 = ( ($9 + [-48]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$53
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$52
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$51
	$8 = ($8 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$18 = ((int_64)$5 | (int_64)$18)
	$11 = ((int_64)$11 + (int_64)4294967291)
	if ( ((int_64)$11 != (int_64)55834574842) ){ goto $label$50 }
	*(($9 = (($4 + [240]) + [24]))) = [0]
	*((($4 + [32]) + [24])) = *(($2 + [8]))
	*($4 + [40]) = $3
	*($4 + [240]) = $17
	*($4 + [248]) = $18
	*($4 + [256]) = (int_64)0
	*($4 + [32]) = *($4 + [552])
	*($4 + [48]) = *($2)
	*(($8 = CALL _Znwj([16]))) = $19
	*($8 + [8]) = (int_64)3617214756542218240
	*(($4 + [276])) = [0]
	$10 = ($8 + [16])
	*($9) = $10
	*(($4 + [260])) = $10
	*($4 + [256]) = $8
	*($4 + [268 align=4]) = (int_64)0
	CALL $19(($4 + [268]), [32])
	$8 = *((($4 + [240]) + [32]))
	$9 = *($4 + [268])
	*($4 + [100]) = $9
	*($4 + [96]) = $9
	*($4 + [104]) = $8
	*($4 + [560]) = ($4 + [96])
	*($4 + [80]) = ($4 + [32])
	CALL $30(($4 + [80]), ($4 + [560]))
	CALL $18(($4 + [96]), ($4 + [240]))
	$8 = *($4 + [96])
	CALL send_inline($8, (*($4 + [100]) - $8))
	$8 = *($4 + [96])
	if ( ($8 == 0) ){ goto $label$56 }
	*($4 + [100]) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$56
	$8 = *($4 + [268])
	if ( ($8 == 0) ){ goto $label$57 }
	*(($4 + [272])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$57
	$8 = *($4 + [256])
	if ( ($8 == 0) ){ goto $label$58 }
	*(($4 + [260])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$58
	$1 = *($4 + [552])
	CALL memset(($4 + [240]), [0], [216])
	CALL $35($4, $1, ($4 + [240]), $4)
	*(($4 + [232])) = [0]
	*($4 + [224]) = (int_64)0
	$8 = CALL $110([9358])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$59 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$62 }
	*($4 + [224]) = ($8 << [1])
	$9 = (($4 + [224]) | [1])
	if ( $8 ){ goto $label$61 }
	goto $label$60 
	
.LABEL $label$62
	$10 = (($8 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($4 + [224]) = ($10 | [1])
	*($4 + [232]) = $9
	*($4 + [228]) = $8
	
.LABEL $label$61
	CALL memcpy($9, [9358], $8)
	
.LABEL $label$60
	*(($9 + $8)) = [0]
	*(($4 + [216])) = [0]
	*($4 + [208]) = (int_64)0
	$8 = CALL $110([9358])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$63 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$66 }
	*($4 + [208]) = ($8 << [1])
	$9 = (($4 + [208]) | [1])
	if ( $8 ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$66
	$10 = (($8 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($4 + [208]) = ($10 | [1])
	*($4 + [216]) = $9
	*($4 + [212]) = $8
	
.LABEL $label$65
	CALL memcpy($9, [9358], $8)
	
.LABEL $label$64
	*(($9 + $8)) = [0]
	$20 = ($0 + [816])
	$21 = ($0 + [812])
	$22 = ($4 | [1])
	$23 = (($4 + [16]) | [1])
	$14 = (($4 + [32]) | [1])
	$24 = (($4 + [136]) | [1])
	$25 = (($4 + [560]) | [1])
	$26 = (($4 + [80]) | [1])
	$27 = (($4 + [96]) | [1])
	$28 = (($4 + [168]) | [1])
	$29 = ($4 + [240])
	$30 = (($4 + [32]) + [16])
	$31 = (($4 + [32]) + [32])
	$32 = ($4 + [124])
	$33 = ($4 + [116])
	$3 = (int_64)0
	$34 = [0]
	
.LOOP $label$68:
	$37 = (($4 + [480]) + ($34 << [3]))
	*($4 + [200]) = *($37)
	CALL $23(($4 + [32]), ($4 + [200]))
	$8 = CALL $100(($4 + [32]), [9359])
	$9 = ($8 + [8])
	*(($38 = (($4 + [184]) + [8]))) = *($9)
	*($4 + [184]) = *($8)
	*($8) = (int_64)0
	*($9) = [0]
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$69 }
	CALL _ZdlPv(*((($4 + [32]) + [8])))
	
.LABEL $label$69
	*(($36 = (($4 + [168]) + [8]))) = [0]
	*($4 + [168]) = (int_64)0
	$9 = CALL $110([9358])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$75 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$78 }
	*($4 + [168]) = ($9 << [1])
	$10 = $28
	if ( $9 ){ goto $label$77 }
	goto $label$76 
	
.LABEL $label$78
	$8 = (($9 + [16]) & [-16])
	$10 = CALL _Znwj($8)
	*($36) = $10
	*($4 + [168]) = ($8 | [1])
	*($4 + [172]) = $9
	
.LABEL $label$77
	CALL memcpy($10, [9358], $9)
	
.LABEL $label$76
	$8 = [0]
	*(($10 + $9)) = [0]
	$9 = $29
	$39 = [0]
	$15 = [0]
	$12 = [0]
	
.LOOP $label$79:
	$10 = CALL $94(($4 + [32]), (($0 + ((int_32)*($9) * (int_32)[12])) + [152]))
	$2 = *($4 + [32])
	$13 = CALL $110([8192])
	if ( ((int_32)$13 != (int_32)( *($4 + [36]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$82 }
	if ( (CALL $104($10, [0], [-1], [8192], $13) == 0) ){ goto $label$81 }
	
.LABEL $label$82
	$2 = *($4 + [32])
	$13 = CALL $110([8202])
	if ( ((int_32)$13 != (int_32)( *($4 + [36]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$83 }
	if ( (CALL $104($10, [0], [-1], [8202], $13) == 0) ){ goto $label$81 }
	
.LABEL $label$83
	$2 = *($4 + [32])
	$13 = CALL $110([8298])
	if ( ((int_32)$13 != (int_32)( *($4 + [36]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$84 }
	if ( (CALL $104($10, [0], [-1], [8298], $13) == 0) ){ goto $label$81 }
	
.LABEL $label$84
	$2 = *($4 + [32])
	$13 = CALL $110([8308])
	if ( ((int_32)$13 != (int_32)( *($4 + [36]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$85 }
	if ( (CALL $104($10, [0], [-1], [8308], $13) == 0) ){ goto $label$81 }
	
.LABEL $label$85
	$2 = *($4 + [32])
	$13 = CALL $110([8816])
	if ( ((int_32)$13 != (int_32)( *($4 + [36]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$86 }
	if ( CALL $104($10, [0], [-1], [8816], $13) ){ goto $label$86 }
	$39 = ($39 + [1])
	goto $label$80 
	
.LABEL $label$86
	$2 = *($4 + [32])
	$13 = CALL $110([8802])
	if ( ((int_32)$13 != (int_32)( *($4 + [36]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$80 }
	$15 = ($15 + (CALL $104($10, [0], [-1], [8802], $13) == 0))
	goto $label$80 
	
.LABEL $label$81
	$12 = ($12 + [1])
	
.LABEL $label$80
	$10 = *($4 + [32])
	$2 = ($10 & [1])
	$13 = (($4 + [32]) + [8])
	CALL $102(($4 + [168]), ( *($13) ? $14 : $2 ), ( *($4 + [36]) ? uint_32($10 >> [1]) : $2 ))
	if ( ((uint_32)$8 > (uint_32)[4]) ){ goto $label$87 }
	CALL $100(($4 + [168]), [9361])
	
.LABEL $label$87
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$88 }
	CALL _ZdlPv(*($13))
	
.LABEL $label$88
	$9 = ($9 + [4])
	$8 = ($8 + [1])
	if ( ((int_32)$8 != (int_32)[6]) ){ goto $label$79 }
	*(($40 = (($4 + [96]) + [8]))) = [0]
	*($4 + [96]) = (int_64)0
	CALL $98(($4 + [96]), [40])
	$1 = (CASTING int_64)(int_32 $12)
	
.LOOP $label$89:
	$5 = ((int_64)$1 / (int_64)10)
	CALL $101(($4 + [96]), *(((CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$5 * (int_64)10))) + [10082])))
	$11 = ((int_64)$1 + (int_64)9)
	$1 = $5
	if ( ((uint_64)$11 > (uint_64)(int_64)18) ){ goto $label$89 }
	$8 = ($8 & [1])
	$8 = *($4 + [96])
	$9 = ( *($4 + [100]) ? uint_32($8 >> [1]) : $8 )
	if ( ($9 == 0) ){ goto $label$90 }
	$8 = ( *($40) ? $27 : $8 )
	$9 = (($8 + $9) + [-1])
	if ( ((uint_32)$9 <= (uint_32)$8) ){ goto $label$90 }
	
.LOOP $label$91:
	$10 = *($8)
	*($8) = *($9)
	*($9) = $10
	$9 = ($9 + [-1])
	$8 = ($8 + [1])
	if ( ($8 <= $9) ){ goto $label$91 }
	
.LABEL $label$90
	*(($2 = (($4 + [80]) + [8]))) = [0]
	*($4 + [80]) = (int_64)0
	CALL $98(($4 + [80]), [40])
	$1 = (CASTING int_64)(int_32 $15)
	
.LOOP $label$92:
	$5 = ((int_64)$1 / (int_64)10)
	CALL $101(($4 + [80]), *(((CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$5 * (int_64)10))) + [10082])))
	$11 = ((int_64)$1 + (int_64)9)
	$1 = $5
	if ( ((uint_64)$11 > (uint_64)(int_64)18) ){ goto $label$92 }
	$12 = *($2)
	$10 = ($8 & [1])
	$8 = *($4 + [80])
	$41 = uint_32($8 >> [1])
	$15 = *($4 + [84])
	$9 = ( $15 ? $41 : $10 )
	if ( ($9 == 0) ){ goto $label$93 }
	$8 = ( $12 ? $26 : $10 )
	$9 = (($8 + $9) + [-1])
	if ( ((uint_32)$9 <= (uint_32)$8) ){ goto $label$93 }
	
.LOOP $label$94:
	$10 = *($8)
	*($8) = *($9)
	*($9) = $10
	$9 = ($9 + [-1])
	$8 = ($8 + [1])
	if ( ($8 <= $9) ){ goto $label$94 }
	$8 = *($4 + [80])
	$41 = uint_32($8 >> [1])
	$10 = ($8 & [1])
	$12 = *($2)
	$15 = *($4 + [84])
	
.LABEL $label$93
	$8 = CALL $102(($4 + [96]), ( $12 ? $26 : $10 ), ( $15 ? $41 : $10 ))
	$9 = ($8 + [8])
	*($13) = *($9)
	*($4 + [32]) = *($8)
	*($8) = (int_64)0
	*($9) = [0]
	*(($15 = (($4 + [560]) + [8]))) = [0]
	*($4 + [560]) = (int_64)0
	CALL $98(($4 + [560]), [40])
	$1 = (CASTING int_64)(int_32 $39)
	
.LOOP $label$95:
	$5 = ((int_64)$1 / (int_64)10)
	CALL $101(($4 + [560]), *(((CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$5 * (int_64)10))) + [10082])))
	$11 = ((int_64)$1 + (int_64)9)
	$1 = $5
	if ( ((uint_64)$11 > (uint_64)(int_64)18) ){ goto $label$95 }
	$12 = *($15)
	$10 = ($8 & [1])
	$8 = *($4 + [560])
	$41 = uint_32($8 >> [1])
	$39 = *($4 + [564])
	$9 = ( $39 ? $41 : $10 )
	if ( ($9 == 0) ){ goto $label$96 }
	$8 = ( $12 ? $25 : $10 )
	$9 = (($8 + $9) + [-1])
	if ( ((uint_32)$9 <= (uint_32)$8) ){ goto $label$96 }
	
.LOOP $label$97:
	$10 = *($8)
	*($8) = *($9)
	*($9) = $10
	$9 = ($9 + [-1])
	$8 = ($8 + [1])
	if ( ($8 <= $9) ){ goto $label$97 }
	$8 = *($4 + [560])
	$41 = uint_32($8 >> [1])
	$10 = ($8 & [1])
	$12 = *($15)
	$39 = *($4 + [564])
	
.LABEL $label$96
	$8 = CALL $102(($4 + [32]), ( $12 ? $25 : $10 ), ( $39 ? $41 : $10 ))
	$9 = ($8 + [8])
	*(($35 = (($4 + [152]) + [8]))) = *($9)
	*($4 + [152]) = *($8)
	*($8) = (int_64)0
	*($9) = [0]
	if ( (*($4 + [560]) & [1]) ){ goto $label$99 }
	if ( (*($4 + [32]) & [1]) ){ goto $label$98 }
	goto $label$74 
	
.LABEL $label$99
	CALL _ZdlPv(*($15))
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$74 }
	
.LABEL $label$98
	CALL _ZdlPv(*($13))
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$75
	CALL $93(($4 + [168]))
	
.LABEL $label$74
	if ( (*($4 + [80]) & [1]) ){ goto $label$72 }
	
.LABEL $label$73
	if ( ((*($4 + [96]) & [1]) == 0) ){ goto $label$70 }
	goto $label$71 
	
.LABEL $label$72
	CALL _ZdlPv(*($2))
	if ( ((*($4 + [96]) & [1]) == 0) ){ goto $label$70 }
	
.LABEL $label$71
	CALL _ZdlPv(*($40))
	
.LABEL $label$70
	$8 = CALL $38($21, ($4 + [152]))
	if ( ((int_32)$20 == (int_32)$8) ){ goto $label$101 }
	$42 = *($8 + [32])
	goto $label$100 
	
.LABEL $label$101
	$42 = (float_64)0
	
.LABEL $label$100
	$42 = ((float_64)$42 * (float_64)$7)
	CALL $24(($4 + [32]), ($4 + [184]), ($4 + [168]))
	if ( (*($4 + [168]) & [1]) ){ goto $label$103 }
	*($4 + [168]) = [0]
	goto $label$102 
	
.LABEL $label$103
	*(*($36)) = [0]
	*($4 + [172]) = [0]
	
.LABEL $label$102
	CALL $98(($4 + [168]), [0])
	$8 = *($13)
	*($36) = $8
	*($4 + [168]) = *($4 + [32])
	$9 = *($4 + [168])
	$10 = ($9 & [1])
	CALL $102(($4 + [224]), ( $8 ? $28 : $10 ), ( *($4 + [172]) ? uint_32($9 >> [1]) : $10 ))
	CALL $100(($4 + [224]), [9363])
	*(($12 = (($4 + [136]) + [8]))) = [0]
	*($4 + [136]) = (int_64)0
	CALL $98(($4 + [136]), [40])
	if ( ((float_64)(float_64)|$42| < (float_64)(float_64)9223372036854775808) ){ goto $label$105 }
	$19 = (int_64)-9223372036854775808
	goto $label$104 
	
.LABEL $label$105
	$19 = (Rounds 0)($42)
	
.LABEL $label$104
	$1 = $19
	
.LOOP $label$106:
	$5 = ((int_64)$1 / (int_64)10)
	CALL $101(($4 + [136]), *(((CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$5 * (int_64)10))) + [10082])))
	$11 = ((int_64)$1 + (int_64)9)
	$1 = $5
	if ( ((uint_64)$11 > (uint_64)(int_64)18) ){ goto $label$106 }
	$8 = ($8 & [1])
	$8 = *($4 + [136])
	$9 = ( *($4 + [140]) ? uint_32($8 >> [1]) : $8 )
	if ( ($9 == 0) ){ goto $label$107 }
	$8 = ( *($12) ? $24 : $8 )
	$9 = (($8 + $9) + [-1])
	if ( ((uint_32)$9 <= (uint_32)$8) ){ goto $label$107 }
	
.LOOP $label$108:
	$10 = *($8)
	*($8) = *($9)
	*($9) = $10
	$9 = ($9 + [-1])
	$8 = ($8 + [1])
	if ( ($8 <= $9) ){ goto $label$108 }
	
.LABEL $label$107
	CALL $24(($4 + [32]), ($4 + [184]), ($4 + [136]))
	$8 = *($4 + [32])
	$9 = ($8 & [1])
	CALL $102(($4 + [208]), ( *($13) ? $14 : $9 ), ( *($4 + [36]) ? uint_32($8 >> [1]) : $9 ))
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$109 }
	CALL _ZdlPv(*($13))
	
.LABEL $label$109
	CALL $100(($4 + [208]), [9363])
	if ( ((int_32)((float_64)$42 > (float_64)(float_64)0) ^ (int_32)[1]) ){ goto $label$110 }
	if ( ((int_64)*($37) == (int_64)*($0)) ){ goto $label$110 }
	CALL eosio_assert((uint_64)(((int_64)$19 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [10093])
	$1 = (int_64)5459781
	$8 = [0]
	
.LOOP $label$113:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$112 }
	$5 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$114 }
	$1 = $5
	$9 = [1]
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$113 }
	goto $label$111 
	
.LABEL $label$114
	$1 = $5
	
.LOOP $label$115:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$112 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$9 = ((int_32)$8 < (int_32)[6])
	$10 = ($8 + [1])
	$8 = $10
	if ( $9 ){ goto $label$115 }
	$9 = [1]
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$113 }
	goto $label$111 
	
.LABEL $label$112
	$9 = [0]
	
.LABEL $label$111
	CALL eosio_assert($9, [10142])
	$5 = *($0)
	$1 = (int_64)6
	
.LOOP $label$116:
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$116 }
	*($2) = (int_64)3617214756542218240
	*($4 + [80]) = $5
	$1 = (int_64)0
	$11 = (int_64)59
	$8 = [9314]
	$17 = (int_64)0
	
.LOOP $label$117:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$122 }
	$9 = *($8)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$121 }
	$9 = ($9 + [-91])
	goto $label$120 
	
.LABEL $label$122
	$5 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$119 }
	goto $label$118 
	
.LABEL $label$121
	$9 = ( ($9 + [-48]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$120
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$119
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$118
	$8 = ($8 + [1])
	$11 = ((int_64)$11 + (int_64)4294967291)
	$17 = ((int_64)$5 | (int_64)$17)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$117 }
	$1 = (int_64)0
	$11 = (int_64)59
	$8 = [9326]
	$18 = (int_64)0
	
.LOOP $label$123:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$128 }
	$9 = *($8)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$127 }
	$9 = ($9 + [-91])
	goto $label$126 
	
.LABEL $label$128
	$5 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$125 }
	goto $label$124 
	
.LABEL $label$127
	$9 = ( ($9 + [-48]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$126
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$125
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$124
	$8 = ($8 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$18 = ((int_64)$5 | (int_64)$18)
	$11 = ((int_64)$11 + (int_64)4294967291)
	if ( ((int_64)$11 != (int_64)55834574842) ){ goto $label$123 }
	*(($40 = (($4 + [16]) + [8]))) = [0]
	*($4 + [16]) = (int_64)0
	$8 = CALL $110([9711])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$67 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$131 }
	*($4 + [16]) = ($8 << [1])
	$9 = $23
	if ( $8 ){ goto $label$130 }
	goto $label$129 
	
.LABEL $label$131
	$10 = (($8 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($40) = $9
	*($4 + [16]) = ($10 | [1])
	*($4 + [20]) = $8
	
.LABEL $label$130
	CALL memcpy($9, [9711], $8)
	
.LABEL $label$129
	*(($9 + $8)) = [0]
	*(($15 = ($4 + [8]))) = [0]
	*($4) = (int_64)0
	CALL $98($4, [40])
	$1 = $3
	
.LOOP $label$132:
	$5 = ((int_64)$1 / (int_64)10)
	CALL $101($4, *(((CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$5 * (int_64)10))) + [10082])))
	$11 = ((int_64)$1 + (int_64)9)
	$1 = $5
	if ( ((uint_64)$11 > (uint_64)(int_64)18) ){ goto $label$132 }
	$2 = *($15)
	$10 = ($8 & [1])
	$8 = *($4)
	$41 = uint_32($8 >> [1])
	$39 = *($4 + [4])
	$9 = ( $39 ? $41 : $10 )
	if ( ($9 == 0) ){ goto $label$133 }
	$8 = ( $2 ? $22 : $10 )
	$9 = (($8 + $9) + [-1])
	if ( ((uint_32)$9 <= (uint_32)$8) ){ goto $label$133 }
	
.LOOP $label$134:
	$10 = *($8)
	*($8) = *($9)
	*($9) = $10
	$9 = ($9 + [-1])
	$8 = ($8 + [1])
	if ( ($8 <= $9) ){ goto $label$134 }
	$8 = *($4)
	$41 = uint_32($8 >> [1])
	$10 = ($8 & [1])
	$2 = *($15)
	$39 = *($4 + [4])
	
.LABEL $label$133
	$8 = CALL $102(($4 + [16]), ( $2 ? $22 : $10 ), ( $39 ? $41 : $10 ))
	$1 = *($8)
	*($8) = (int_64)0
	$9 = *($8 + [8])
	*($8 + [8]) = [0]
	*($13) = *($37)
	*($30) = $19
	*((($4 + [32]) + [24])) = (int_64)1397703940
	*($31) = $1
	*(($10 = (($4 + [32]) + [40]))) = $9
	*($4 + [32]) = *($0)
	CALL $18(($4 + [560]), CALL $17(($4 + [96]), ($4 + [80]), $17, $18, ($4 + [32])))
	$8 = *($4 + [560])
	CALL send_inline($8, (*($4 + [564]) - $8))
	$8 = *($4 + [560])
	if ( ($8 == 0) ){ goto $label$135 }
	*($4 + [564]) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$135
	$8 = *($32)
	if ( ($8 == 0) ){ goto $label$136 }
	*((($4 + [96]) + [32])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$136
	$8 = *((($4 + [96]) + [16]))
	if ( ($8 == 0) ){ goto $label$137 }
	*($33) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$137
	if ( ((*($31) & [1]) == 0) ){ goto $label$141 }
	CALL _ZdlPv(*($10))
	if ( ((*($4) & [1]) == 0) ){ goto $label$139 }
	goto $label$140 
	
.LABEL $label$141
	if ( ((*($4) & [1]) == 0) ){ goto $label$139 }
	
.LABEL $label$140
	CALL _ZdlPv(*($15))
	if ( (*($4 + [16]) & [1]) ){ goto $label$138 }
	goto $label$110 
	
.LABEL $label$139
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$110 }
	
.LABEL $label$138
	CALL _ZdlPv(*($40))
	
.LABEL $label$110
	if ( ((*($4 + [136]) & [1]) == 0) ){ goto $label$148 }
	CALL _ZdlPv(*($12))
	if ( ((*($4 + [152]) & [1]) == 0) ){ goto $label$146 }
	goto $label$147 
	
.LABEL $label$148
	if ( ((*($4 + [152]) & [1]) == 0) ){ goto $label$146 }
	
.LABEL $label$147
	CALL _ZdlPv(*($35))
	if ( ((*($4 + [168]) & [1]) == 0) ){ goto $label$144 }
	goto $label$145 
	
.LABEL $label$146
	if ( ((*($4 + [168]) & [1]) == 0) ){ goto $label$144 }
	
.LABEL $label$145
	CALL _ZdlPv(*($36))
	if ( (*($4 + [184]) & [1]) ){ goto $label$143 }
	goto $label$142 
	
.LABEL $label$144
	if ( ((*($4 + [184]) & [1]) == 0) ){ goto $label$142 }
	
.LABEL $label$143
	CALL _ZdlPv(*($38))
	
.LABEL $label$142
	$29 = ($29 + [24])
	$34 = ($34 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	if ( (uint_64)($3 <= (int_64)9) ){ goto $label$68 }
	$1 = *($4 + [552])
	if ( (int_64)($1 == 0) ){ goto $label$13 }
	*(($10 = ($4 + [64]))) = [0]
	*($4 + [40]) = $1
	*($4 + [48]) = (int_64)-1
	*($4 + [56]) = (int_64)0
	$1 = *($0)
	*($4 + [32]) = $1
	*($4 + [84]) = ($4 + [224])
	*($4 + [80]) = ($4 + [552])
	*($4 + [88]) = ($4 + [208])
	*($4 + [560]) = $1
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$3()), [10329])
	*($4 + [100]) = ($4 + [80])
	*($4 + [96]) = ($4 + [32])
	*($4 + [104]) = ($4 + [560])
	*(($8 = CALL _Znwj([48])) + [8 align=4]) = (int_64)0
	*($8 + [16 align=4]) = (int_64)0
	*($8 + [24 align=4]) = (int_64)0
	*($8 + [32]) = ($4 + [32])
	CALL $39(($4 + [96]), $8)
	*($4 + [184]) = $8
	$1 = *($8)
	*($4 + [96]) = $1
	$2 = *($8 + [36])
	*($4 + [168]) = $2
	$13 = ($4 + [60])
	$9 = *($13)
	if ( ((uint_32)$9 >= (uint_32)*($10)) ){ goto $label$150 }
	*($9 + [8]) = $1
	*($9 + [16]) = $2
	*($4 + [184]) = [0]
	*($9) = $8
	*($13) = ($9 + [24])
	$8 = *($4 + [184])
	*($4 + [184]) = [0]
	if ( ($8 == 0) ){ goto $label$149 }
	goto $label$14 
	
.LABEL $label$150
	CALL $26(($4 + [56]), ($4 + [184]), ($4 + [96]), ($4 + [168]))
	$8 = *($4 + [184])
	*($4 + [184]) = [0]
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$149
	$10 = *($4 + [56])
	if ( ($10 == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$67
	CALL $93(($4 + [16]))
	
.LABEL $label$63
	CALL $93(($4 + [208]))
	
.LABEL $label$59
	CALL $93(($4 + [224]))
	
.LABEL $label$15
	CALL $93(($4 + [240]))
	
.LABEL $label$14
	if ( ((*($8 + [20]) & [1]) == 0) ){ goto $label$151 }
	CALL _ZdlPv(*(($8 + [28])))
	
.LABEL $label$151
	if ( ((*($8 + [8]) & [1]) == 0) ){ goto $label$152 }
	CALL _ZdlPv(*(($8 + [16])))
	
.LABEL $label$152
	CALL _ZdlPv($8)
	$10 = *($4 + [56])
	if ( $10 ){ goto $label$12 }
	
.LABEL $label$13
	$8 = [1]
	if ( (*($4 + [208]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$2 = (($4 + [32]) + [28])
	$9 = *($2)
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$154 }
	
.LOOP $label$155:
	$9 = ($9 + [-24])
	$8 = *($9)
	*($9) = [0]
	if ( ($8 == 0) ){ goto $label$156 }
	if ( ((*($8 + [20]) & [1]) == 0) ){ goto $label$157 }
	CALL _ZdlPv(*(($8 + [28])))
	
.LABEL $label$157
	if ( ((*($8 + [8]) & [1]) == 0) ){ goto $label$158 }
	CALL _ZdlPv(*(($8 + [16])))
	
.LABEL $label$158
	CALL _ZdlPv($8)
	
.LABEL $label$156
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$155 }
	$8 = *(($4 + [56]))
	goto $label$153 
	
.LABEL $label$154
	$8 = $10
	
.LABEL $label$153
	*($2) = $10
	CALL _ZdlPv($8)
	$8 = [1]
	if ( ((*($4 + [208]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL _ZdlPv(*($4 + [216]))
	if ( ((*($4 + [224]) & $8) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	if ( (*($4 + [224]) & $8) ){ goto $label$8 }
	
.LABEL $label$9
	if ( (*($4 + [464]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL _ZdlPv(*($4 + [232]))
	if ( ((*($4 + [464]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*($4 + [472]))
	$global$0 = ($4 + [576])
	return 
	
.LABEL $label$6
	$global$0 = ($4 + [576])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $78 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = ($0 + [4])
	$0 = *($0 + [4])
	if ( ($0 == 0) ){ goto $label$1 }
	$4 = ($2 + [1])
	$5 = ($2 + [8])
	
.LOOP $label$3:
	$7 = ($0 + [16])
	$12 = ($11 & [1])
	$11 = *($2)
	$10 = ($2 + [4])
	$11 = ( *($10) ? uint_32($11 >> [1]) : $12 )
	$9 = ($6 & [1])
	$6 = *($0 + [16])
	$8 = ($0 + [20])
	$6 = ( *($8) ? uint_32($6 >> [1]) : $9 )
	$13 = ( $6 ? $11 : ($6 <= $11) )
	if ( ($13 == 0) ){ goto $label$7 }
	$9 = CALL $109(( *($5) ? $4 : $12 ), ( *(($0 + [24])) ? ($7 + [1]) : $9 ), $13)
	if ( ($9 == 0) ){ goto $label$7 }
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((uint_32)$11 >= (uint_32)$6) ){ goto $label$5 }
	
.LABEL $label$6
	$6 = *($0)
	if ( $6 ){ goto $label$4 }
	*($1) = $0
	return $0
	
.LABEL $label$5
	$12 = ($11 & [1])
	$11 = *($7)
	$11 = ( *($8) ? uint_32($11 >> [1]) : $12 )
	$9 = ($6 & [1])
	$6 = *($2)
	$6 = ( *($10) ? uint_32($6 >> [1]) : $9 )
	$13 = ( $6 ? $11 : ($6 <= $11) )
	if ( ($13 == 0) ){ goto $label$9 }
	$7 = CALL $109(( *(($0 + [24])) ? ($7 + [1]) : $12 ), ( *($5) ? $4 : $9 ), $13)
	if ( ($7 == 0) ){ goto $label$9 }
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((uint_32)$11 >= (uint_32)$6) ){ goto $label$2 }
	
.LABEL $label$8
	$3 = ($0 + [4])
	$6 = *($0 + [4])
	if ( ($6 == 0) ){ goto $label$2 }
	$0 = $3
	
.LABEL $label$4
	$3 = $0
	$0 = $6
	goto $label$3 
	
.LABEL $label$2
	*($1) = $0
	return $3
	
.LABEL $label$1
	*($1) = $3
	return $3
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($6) - $5) > (int_32)[0]), [10162])
	CALL memcpy(*($3), ($2 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $8 ){ goto $label$1 }
	$7 = ($3 & [1])
	$3 = *($1)
	$3 = ( *(($1 + [4])) ? uint_32($3 >> [1]) : $7 )
	if ( ($3 == 0) ){ goto $label$2 }
	$8 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) >= (int_32)$3), [10162])
	$5 = ($0 + [4])
	CALL memcpy(*($5), ( $8 ? ($1 + [1]) : $7 ), $3)
	*($5) = (*($5) + $3)
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = ($1 + [8])
	CALL $96($6, *($4 + [4]))
	$7 = ($1 + [20])
	CALL $96($7, *($4 + [8]))
	$4 = *($1 + [8])
	$8 = ( *(($1 + [12])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($8 + [8])
	$9 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	$8 = *(($1 + [20]))
	$8 = ( *(($1 + [24])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$4 = ($8 + $4)
	$9 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ($4 <= [513]) ){ goto $label$4 }
	$2 = CALL $111($4)
	goto $label$3 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	CALL eosio_assert(((int_32)$4 > (int_32)[7]), [10162])
	CALL memcpy($2, $1, [8])
	*($3 + [4]) = ($2 + [8])
	CALL $79($3, $6)
	CALL $79($3, $7)
	$9 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($5 + [8]), (int_64)4229853544465694720, *(*($0 + [8])), $9, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	if ( ((uint_64)$9 >= (uint_64)*($5 + [16])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $114($2)
	if ( (uint_64)($9 <= *($5 + [16])) ){ goto $label$5 }
	
.LABEL $label$6
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [16])
}

void .FUNC $33 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4, int_64 $5)
{
	int_32 $6
	int_64 $7
	int_64 $8
	float_64 $9
	float_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_64 $20
	float_64 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	$6 = ($global$0 - [592])
	$global$0 = $6
	*($6 + [568]) = $1
	CALL eosio_assert(((int_32)*(($0 + [144])) == (int_32)[1]), [10205])
	CALL require_auth(*($0))
	$1 = *($2 + [8])
	CALL eosio_assert(((int_64)((int_64)$1 & (int_64)255) == (int_64)4), [9002])
	CALL eosio_assert(((int_64)$1 == (int_64)1397703940), [9386])
	CALL eosio_assert(CALL $fimport$6($3), [9027])
	CALL eosio_assert(CALL $fimport$6($4), [9056])
	CALL eosio_assert(CALL $fimport$6($5), [9085])
	*($6 + [504]) = $4
	*($6 + [496]) = $3
	*($6 + [512]) = $5
	$1 = *($0)
	*($6 + [520]) = $1
	*($6 + [528]) = $1
	*($6 + [536]) = $1
	*($6 + [544]) = $1
	*($6 + [552]) = $1
	*($6 + [560]) = $1
	$7 = *($2)
	$1 = ((int_64)$7 * (int_64)*(($0 + [60])))
	$8 = ((int_64)((int_64)$1 * (int_64)3) / (int_64)10000)
	CALL eosio_assert((uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [10093])
	$7 = ((int_64)$7 * (int_64)9)
	$9 = ((float_64)((float_64)(CASTING float_64)(int_64 $7) + (float_64)((float_64)(CASTING float_64)(int_64 $1) / (float_64)(float_64)-1e4)) / (float_64)(float_64)9)
	$10 = (CASTING float_64)(int_64 (int_64))($7 - ((int_64)$1 / (int_64)10000)))
	$11 = [0]
	$1 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$1 = $7
	$12 = [1]
	$13 = $11
	$11 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$1 = $7
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$12 = ((int_32)$11 < (int_32)[6])
	$13 = ($11 + [1])
	$11 = $13
	if ( $12 ){ goto $label$5 }
	$12 = [1]
	$11 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$12 = [0]
	
.LABEL $label$1
	CALL eosio_assert($12, [10142])
	*(($6 + [232])) = [0]
	*($6 + [224]) = (int_64)0
	$11 = CALL $110([9532])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$19 }
	*($6 + [224]) = ($11 << [1])
	$12 = (($6 + [224]) | [1])
	if ( $11 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$13 = (($11 + [16]) & [-16])
	$12 = CALL _Znwj($13)
	*($6 + [224]) = ($13 | [1])
	*($6 + [232]) = $12
	*($6 + [228]) = $11
	
.LABEL $label$18
	CALL memcpy($12, [9532], $11)
	
.LABEL $label$17
	*(($12 + $11)) = [0]
	*($6 + [160]) = (int_64)0
	*($6 + [168]) = [0]
	$1 = *($6 + [568])
	CALL $98(($6 + [160]), [40])
	
.LOOP $label$20:
	$7 = ((int_64)$1 / (int_64)10)
	CALL $101(($6 + [160]), *(((CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$7 * (int_64)10))) + [10082])))
	$14 = ((int_64)$1 + (int_64)9)
	$1 = $7
	if ( ((uint_64)$14 > (uint_64)(int_64)18) ){ goto $label$20 }
	$15 = (($6 + [160]) | [1])
	$16 = *((($6 + [160]) + [8]))
	$13 = ($11 & [1])
	$11 = *($6 + [160])
	$18 = uint_32($11 >> [1])
	$17 = *($6 + [164])
	$12 = ( $17 ? $18 : $13 )
	if ( ($12 == 0) ){ goto $label$21 }
	$11 = ( $16 ? $15 : $13 )
	$12 = (($11 + $12) + [-1])
	if ( ((uint_32)$12 <= (uint_32)$11) ){ goto $label$21 }
	
.LOOP $label$22:
	$13 = *($11)
	*($11) = *($12)
	*($12) = $13
	$12 = ($12 + [-1])
	$11 = ($11 + [1])
	if ( ($11 <= $12) ){ goto $label$22 }
	$11 = *($6 + [160])
	$18 = uint_32($11 >> [1])
	$13 = ($11 & [1])
	$16 = *(($6 + [168]))
	$17 = *($6 + [164])
	
.LABEL $label$21
	$11 = CALL $102(($6 + [224]), ( $16 ? $15 : $13 ), ( $17 ? $18 : $13 ))
	$12 = ($11 + [8])
	*((($6 + [480]) + [8])) = *($12)
	*($6 + [480]) = *($11)
	*($11) = (int_64)0
	*($12) = [0]
	if ( ((*($6 + [160]) & [1]) == 0) ){ goto $label$23 }
	CALL _ZdlPv(*(($6 + [168])))
	
.LABEL $label$23
	if ( ((*($6 + [224]) & [1]) == 0) ){ goto $label$24 }
	CALL _ZdlPv(*($6 + [232]))
	
.LABEL $label$24
	$1 = (int_64)0
	$7 = (int_64)59
	$11 = [9335]
	$19 = (int_64)0
	
.LOOP $label$25:
	$14 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$26 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$12 = ($12 + [-91])
	goto $label$27 
	
.LABEL $label$28
	$12 = ( ($12 + [-48]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$14 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $12) & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$26
	$11 = ($11 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$19 = ((int_64)$14 | (int_64)$19)
	$7 = ((int_64)$7 + (int_64)4294967291)
	if ( ((int_64)$7 != (int_64)55834574842) ){ goto $label$25 }
	*($6 + [472]) = (int_64)1397703940
	*($6 + [464]) = $8
	$11 = CALL $94(($6 + [448]), ($6 + [480]))
	*(($6 + [8])) = *($6 + [472])
	*($6) = *($6 + [464])
	CALL $29($0, $19, $6, $11)
	if ( ((*($11) & [1]) == 0) ){ goto $label$29 }
	CALL _ZdlPv(*($11 + [8]))
	
.LABEL $label$29
	$20 = *($0)
	$1 = (int_64)6
	
.LOOP $label$30:
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$30 }
	$1 = (int_64)0
	$7 = (int_64)59
	$11 = [9335]
	$19 = (int_64)0
	
.LOOP $label$31:
	$14 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$32 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$12 = ($12 + [-91])
	goto $label$33 
	
.LABEL $label$34
	$12 = ( ($12 + [-48]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$14 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $12) & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$32
	$11 = ($11 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$19 = ((int_64)$14 | (int_64)$19)
	$7 = ((int_64)$7 + (int_64)4294967291)
	if ( ((int_64)$7 != (int_64)55834574842) ){ goto $label$31 }
	$1 = (int_64)0
	$14 = (int_64)59
	$11 = [9563]
	$8 = (int_64)0
	
.LOOP $label$35:
	if ( ((uint_64)$1 > (uint_64)(int_64)9) ){ goto $label$40 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$12 = ($12 + [-91])
	goto $label$38 
	
.LABEL $label$40
	$7 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$39
	$12 = ( ($12 + [-48]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$37
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$36
	$11 = ($11 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$8 = ((int_64)$7 | (int_64)$8)
	$14 = ((int_64)$14 + (int_64)4294967291)
	if ( ((int_64)$14 != (int_64)55834574842) ){ goto $label$35 }
	*(($12 = ($6 + [184]))) = [0]
	*(($6 + [264])) = *(($2 + [8]))
	*($6 + [232]) = $3
	*($6 + [240]) = $4
	*($6 + [248]) = $5
	*($6 + [160]) = $19
	*($6 + [168]) = $8
	*($6 + [176]) = (int_64)0
	*($6 + [224]) = *($6 + [568])
	*($6 + [256]) = *($2)
	*(($11 = CALL _Znwj([16]))) = $20
	*($11 + [8]) = (int_64)3617214756542218240
	*(($6 + [196])) = [0]
	$13 = ($11 + [16])
	*($12) = $13
	*(($6 + [180])) = $13
	*($6 + [176]) = $11
	*($6 + [188 align=4]) = (int_64)0
	CALL $19(($6 + [188]), [48])
	$11 = *(($6 + [192]))
	$12 = *($6 + [188])
	*($6 + [68]) = $12
	*($6 + [64]) = $12
	*($6 + [72]) = $11
	*($6 + [576]) = ($6 + [64])
	*($6 + [48]) = ($6 + [224])
	CALL $34(($6 + [48]), ($6 + [576]))
	CALL $18(($6 + [64]), ($6 + [160]))
	$11 = *($6 + [64])
	CALL send_inline($11, (*($6 + [68]) - $11))
	$11 = *($6 + [64])
	if ( ($11 == 0) ){ goto $label$41 }
	*($6 + [68]) = $11
	CALL _ZdlPv($11)
	
.LABEL $label$41
	$11 = *($6 + [188])
	if ( ($11 == 0) ){ goto $label$42 }
	*(($6 + [192])) = $11
	CALL _ZdlPv($11)
	
.LABEL $label$42
	$11 = *($6 + [176])
	if ( ($11 == 0) ){ goto $label$43 }
	*(($6 + [180])) = $11
	CALL _ZdlPv($11)
	
.LABEL $label$43
	$21 = CALL $107((CASTING float_64)(uint_64 ((int_64))(((int_64)$4 + (int_64)$3) - $5) + (int_64)*($6 + [568]))))
	CALL memset(($6 + [224]), [0], [216])
	if ( ((float_64)(float_64)|$21| < (float_64)(float_64)9223372036854775808) ){ goto $label$45 }
	$1 = (int_64)-9223372036854775808
	goto $label$44 
	
.LABEL $label$45
	$1 = (Rounds 0)($21)
	
.LABEL $label$44
	CALL $35($6, $1, ($6 + [224]), $6)
	*(($12 = (($6 + [160]) + [24]))) = (int_64)0
	*(($13 = (($6 + [160]) + [40]))) = (int_64)0
	*($6 + [160]) = $3
	*($6 + [168]) = (int_64)0
	*($6 + [176]) = $4
	*($6 + [192]) = $5
	*(($11 = CALL _Znwj([48]))) = *($6 + [160])
	*(($11 + [8])) = *($6 + [168])
	*($11 + [16]) = *($6 + [176])
	*(($11 + [24])) = *($12)
	*($11 + [32]) = *($6 + [192])
	*(($11 + [40])) = *($13)
	*($6 + [208]) = $11
	$11 = ($11 + [48])
	*($6 + [216]) = $11
	*($6 + [212]) = $11
	*((($6 + [144]) + [8])) = [0]
	*($6 + [144]) = (int_64)0
	$11 = CALL $110([9358])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$46 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$49 }
	*($6 + [144]) = ($11 << [1])
	$12 = (($6 + [144]) | [1])
	if ( $11 ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$49
	$13 = (($11 + [16]) & [-16])
	$12 = CALL _Znwj($13)
	*($6 + [144]) = ($13 | [1])
	*($6 + [152]) = $12
	*($6 + [148]) = $11
	
.LABEL $label$48
	CALL memcpy($12, [9358], $11)
	
.LABEL $label$47
	*(($12 + $11)) = [0]
	$17 = (($6 + [48]) | [1])
	$22 = (($6 + [64]) | [1])
	$23 = ($6 + [224])
	$18 = [0]
	
.LOOP $label$50:
	*($6 + [576]) = *((($6 + [496]) + ($18 << [3])))
	CALL $23(($6 + [64]), ($6 + [576]))
	$11 = CALL $100(($6 + [64]), [9359])
	$12 = ($11 + [8])
	*(($24 = (($6 + [160]) + [8]))) = *($12)
	*($6 + [160]) = *($11)
	*($11) = (int_64)0
	*($12) = [0]
	if ( ((*($6 + [64]) & [1]) == 0) ){ goto $label$51 }
	CALL _ZdlPv(*((($6 + [64]) + [8])))
	
.LABEL $label$51
	*(($25 = (($6 + [64]) + [8]))) = [0]
	*($6 + [64]) = (int_64)0
	$11 = CALL $110([9358])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$54 }
	*($6 + [64]) = ($11 << [1])
	$12 = $22
	if ( $11 ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$54
	$13 = (($11 + [16]) & [-16])
	$12 = CALL _Znwj($13)
	*($25) = $12
	*($6 + [64]) = ($13 | [1])
	*($6 + [68]) = $11
	
.LABEL $label$53
	CALL memcpy($12, [9358], $11)
	
.LABEL $label$52
	$16 = [0]
	*(($12 + $11)) = [0]
	$11 = $23
	$12 = [0]
	
.LOOP $label$55:
	$13 = CALL $94(($6 + [48]), (($0 + ((int_32)*($11) * (int_32)[12])) + [152]))
	$2 = *($6 + [48])
	$15 = CALL $110([8192])
	if ( ((int_32)$15 != (int_32)( *($6 + [52]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$58 }
	if ( (CALL $104($13, [0], [-1], [8192], $15) == 0) ){ goto $label$57 }
	
.LABEL $label$58
	$2 = *($6 + [48])
	$15 = CALL $110([8202])
	if ( ((int_32)$15 != (int_32)( *($6 + [52]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$59 }
	if ( (CALL $104($13, [0], [-1], [8202], $15) == 0) ){ goto $label$57 }
	
.LABEL $label$59
	$2 = *($6 + [48])
	$15 = CALL $110([8298])
	if ( ((int_32)$15 != (int_32)( *($6 + [52]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$60 }
	if ( (CALL $104($13, [0], [-1], [8298], $15) == 0) ){ goto $label$57 }
	
.LABEL $label$60
	$2 = *($6 + [48])
	$15 = CALL $110([8308])
	if ( ((int_32)$15 != (int_32)( *($6 + [52]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$61 }
	if ( (CALL $104($13, [0], [-1], [8308], $15) == 0) ){ goto $label$57 }
	
.LABEL $label$61
	$2 = *($6 + [48])
	$15 = CALL $110([8816])
	if ( ((int_32)$15 != (int_32)( *($6 + [52]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$62 }
	if ( CALL $104($13, [0], [-1], [8816], $15) ){ goto $label$62 }
	$16 = ($16 + [3])
	goto $label$56 
	
.LABEL $label$62
	$2 = *($6 + [48])
	$15 = CALL $110([8802])
	if ( ((int_32)$15 != (int_32)( *($6 + [52]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$56 }
	$16 = ( $16 ? ($16 + [2]) : CALL $104($13, [0], [-1], [8802], $15) )
	goto $label$56 
	
.LABEL $label$57
	$16 = ($16 + [1])
	
.LABEL $label$56
	$13 = *($6 + [48])
	$2 = ($13 & [1])
	$15 = (($6 + [48]) + [8])
	CALL $102(($6 + [64]), ( *($15) ? $17 : $2 ), ( *($6 + [52]) ? uint_32($13 >> [1]) : $2 ))
	if ( ((uint_32)$12 > (uint_32)[4]) ){ goto $label$66 }
	CALL $100(($6 + [64]), [9361])
	if ( ((*($6 + [48]) & [1]) == 0) ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$66
	if ( (*($6 + [48]) & [1]) ){ goto $label$64 }
	
.LABEL $label$65
	$11 = ($11 + [4])
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)[6]) ){ goto $label$55 }
	goto $label$63 
	
.LABEL $label$64
	CALL _ZdlPv(*($15))
	$11 = ($11 + [4])
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)[6]) ){ goto $label$55 }
	
.LABEL $label$63
	if ( ((uint_32)$18 >= (uint_32)[3]) ){ goto $label$67 }
	*((*($6 + [208]) + ($18 << [4])) + [8]) = $16
	
.LABEL $label$67
	CALL $24(($6 + [48]), ($6 + [160]), ($6 + [64]))
	if ( (*($6 + [64]) & [1]) ){ goto $label$69 }
	*($6 + [64]) = [0]
	goto $label$68 
	
.LABEL $label$69
	*(*($25)) = [0]
	*($6 + [68]) = [0]
	
.LABEL $label$68
	CALL $98(($6 + [64]), [0])
	$11 = *($15)
	*($25) = $11
	*($6 + [64]) = *($6 + [48])
	$12 = *($6 + [64])
	$13 = ($12 & [1])
	CALL $102(($6 + [144]), ( $11 ? $22 : $13 ), ( *($6 + [68]) ? uint_32($12 >> [1]) : $13 ))
	CALL $100(($6 + [144]), [9363])
	if ( ((*($6 + [64]) & [1]) == 0) ){ goto $label$70 }
	CALL _ZdlPv(*($25))
	
.LABEL $label$70
	if ( ((*($6 + [160]) & [1]) == 0) ){ goto $label$71 }
	CALL _ZdlPv(*($24))
	
.LABEL $label$71
	$23 = ($23 + [24])
	$18 = ($18 + [1])
	if ( ($18 <= [9]) ){ goto $label$50 }
	*(($6 + [136])) = [0]
	*($6 + [128]) = (int_64)0
	$11 = CALL $110([9358])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$72 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$75 }
	*($6 + [128]) = ($11 << [1])
	$12 = (($6 + [128]) | [1])
	if ( $11 ){ goto $label$74 }
	goto $label$73 
	
.LABEL $label$75
	$13 = (($11 + [16]) & [-16])
	$12 = CALL _Znwj($13)
	*($6 + [128]) = ($13 | [1])
	*($6 + [136]) = $12
	*($6 + [132]) = $11
	
.LABEL $label$74
	CALL memcpy($12, [9358], $11)
	
.LABEL $label$73
	*(($12 + $11)) = [0]
	$26 = (($6 + [16]) | [1])
	$27 = (($6 + [32]) | [1])
	$17 = (($6 + [160]) | [1])
	$18 = (($6 + [104]) | [1])
	$24 = (($6 + [64]) | [1])
	$28 = (($6 + [160]) + [16])
	$29 = (($6 + [160]) + [32])
	$30 = ($6 + [92])
	$31 = ($6 + [84])
	$4 = (int_64)0
	
.LOOP $label$77:
	$12 = *($6 + [208])
	$11 = ($12 + ((CASTING uint_32)(uint_64 $4) << [4]))
	$13 = *($11 + [12])
	$3 = *($11)
	$2 = *($12 + [8])
	$11 = *($11 + [8])
	if ( ((int_32)$11 <= (int_32)$2) ){ goto $label$83 }
	$13 = ($13 + $11)
	$2 = *(($12 + [24]))
	if ( ((int_32)$11 > (int_32)$2) ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$83
	$13 = ($13 - ( $2 ? [0] : ((int_32)$11 < (int_32)$2) ))
	$2 = *(($12 + [24]))
	if ( ((int_32)$11 <= (int_32)$2) ){ goto $label$81 }
	
.LABEL $label$82
	$13 = ($13 + $11)
	$12 = *(($12 + [40]))
	if ( ((int_32)$11 <= (int_32)$12) ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$81
	$13 = ($13 - ( $2 ? [0] : ((int_32)$11 < (int_32)$2) ))
	$12 = *(($12 + [40]))
	if ( ((int_32)$11 > (int_32)$12) ){ goto $label$79 }
	
.LABEL $label$80
	$12 = ($13 - ( $12 ? [0] : ((int_32)$11 < (int_32)$12) ))
	goto $label$78 
	
.LABEL $label$79
	$12 = ($13 + $11)
	
.LABEL $label$78
	*($6 + [120]) = $3
	CALL $23(($6 + [160]), ($6 + [120]))
	$11 = CALL $100(($6 + [160]), [9359])
	$13 = ($11 + [8])
	*(($16 = (($6 + [104]) + [8]))) = *($13)
	*($6 + [104]) = *($11)
	*($11) = (int_64)0
	*($13) = [0]
	if ( ((*($6 + [160]) & [1]) == 0) ){ goto $label$84 }
	CALL _ZdlPv(*((($6 + [160]) + [8])))
	
.LABEL $label$84
	*(($15 = (($6 + [64]) + [8]))) = [0]
	*($6 + [64]) = (int_64)0
	CALL $98(($6 + [64]), [40])
	$21 = ((float_64)((float_64)$9 * (float_64)(CASTING float_64)(int_32 $12)) + (float_64)$10)
	if ( ((float_64)(float_64)|$21| < (float_64)(float_64)9223372036854775808) ){ goto $label$86 }
	$5 = (int_64)-9223372036854775808
	goto $label$85 
	
.LABEL $label$86
	$5 = (Rounds 0)($21)
	
.LABEL $label$85
	$1 = $5
	
.LOOP $label$87:
	$7 = ((int_64)$1 / (int_64)10)
	CALL $101(($6 + [64]), *(((CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$7 * (int_64)10))) + [10082])))
	$14 = ((int_64)$1 + (int_64)9)
	$1 = $7
	if ( ((uint_64)$14 > (uint_64)(int_64)18) ){ goto $label$87 }
	$11 = ($11 & [1])
	$11 = *($6 + [64])
	$12 = ( *($6 + [68]) ? uint_32($11 >> [1]) : $11 )
	if ( ($12 == 0) ){ goto $label$88 }
	$11 = ( *($15) ? $24 : $11 )
	$12 = (($11 + $12) + [-1])
	if ( ((uint_32)$12 <= (uint_32)$11) ){ goto $label$88 }
	
.LOOP $label$89:
	$13 = *($11)
	*($11) = *($12)
	*($12) = $13
	$12 = ($12 + [-1])
	$11 = ($11 + [1])
	if ( ($11 <= $12) ){ goto $label$89 }
	
.LABEL $label$88
	$11 = *($6 + [104])
	$12 = ($11 & [1])
	$11 = CALL $103(($6 + [64]), [0], ( *($16) ? $18 : $12 ), ( *($6 + [108]) ? uint_32($11 >> [1]) : $12 ))
	$12 = ($11 + [8])
	*(($2 = (($6 + [160]) + [8]))) = *($12)
	*($6 + [160]) = *($11)
	*($11) = (int_64)0
	*($12) = [0]
	$11 = *($6 + [160])
	$12 = ($11 & [1])
	CALL $102(($6 + [128]), ( *($2) ? $17 : $12 ), ( *($6 + [164]) ? uint_32($11 >> [1]) : $12 ))
	if ( ((*($6 + [160]) & [1]) == 0) ){ goto $label$90 }
	CALL _ZdlPv(*($2))
	
.LABEL $label$90
	if ( ((*($6 + [64]) & [1]) == 0) ){ goto $label$91 }
	CALL _ZdlPv(*($15))
	
.LABEL $label$91
	CALL $100(($6 + [128]), [9363])
	if ( ((int_64)$5 <= (int_64)0) ){ goto $label$92 }
	if ( ((int_64)$3 == (int_64)*($0)) ){ goto $label$92 }
	CALL eosio_assert((uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [10093])
	$1 = (int_64)5459781
	$11 = [0]
	
.LOOP $label$95:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$94 }
	$7 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$96 }
	$1 = $7
	$12 = [1]
	$13 = $11
	$11 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$95 }
	goto $label$93 
	
.LABEL $label$96
	$1 = $7
	
.LOOP $label$97:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$94 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$12 = ((int_32)$11 < (int_32)[6])
	$13 = ($11 + [1])
	$11 = $13
	if ( $12 ){ goto $label$97 }
	$12 = [1]
	$11 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$95 }
	goto $label$93 
	
.LABEL $label$94
	$12 = [0]
	
.LABEL $label$93
	CALL eosio_assert($12, [10142])
	$7 = *($0)
	$1 = (int_64)6
	
.LOOP $label$98:
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$98 }
	*((($6 + [48]) + [8])) = (int_64)3617214756542218240
	*($6 + [48]) = $7
	$1 = (int_64)0
	$14 = (int_64)59
	$11 = [9314]
	$19 = (int_64)0
	
.LOOP $label$99:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$104 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$103 }
	$12 = ($12 + [-91])
	goto $label$102 
	
.LABEL $label$104
	$7 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$101 }
	goto $label$100 
	
.LABEL $label$103
	$12 = ( ($12 + [-48]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$102
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$101
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$100
	$11 = ($11 + [1])
	$14 = ((int_64)$14 + (int_64)4294967291)
	$19 = ((int_64)$7 | (int_64)$19)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$99 }
	$1 = (int_64)0
	$14 = (int_64)59
	$11 = [9326]
	$8 = (int_64)0
	
.LOOP $label$105:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$110 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$109 }
	$12 = ($12 + [-91])
	goto $label$108 
	
.LABEL $label$110
	$7 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$107 }
	goto $label$106 
	
.LABEL $label$109
	$12 = ( ($12 + [-48]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$108
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$107
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$106
	$11 = ($11 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$8 = ((int_64)$7 | (int_64)$8)
	$14 = ((int_64)$14 + (int_64)4294967291)
	if ( ((int_64)$14 != (int_64)55834574842) ){ goto $label$105 }
	*(($32 = (($6 + [32]) + [8]))) = [0]
	*($6 + [32]) = (int_64)0
	$11 = CALL $110([9574])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$76 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$113 }
	*($6 + [32]) = ($11 << [1])
	$12 = $27
	if ( $11 ){ goto $label$112 }
	goto $label$111 
	
.LABEL $label$113
	$13 = (($11 + [16]) & [-16])
	$12 = CALL _Znwj($13)
	*($32) = $12
	*($6 + [32]) = ($13 | [1])
	*($6 + [36]) = $11
	
.LABEL $label$112
	CALL memcpy($12, [9574], $11)
	
.LABEL $label$111
	*(($12 + $11)) = [0]
	*(($25 = (($6 + [16]) + [8]))) = [0]
	*($6 + [16]) = (int_64)0
	CALL $98(($6 + [16]), [40])
	$1 = $4
	
.LOOP $label$114:
	$7 = ((int_64)$1 / (int_64)10)
	CALL $101(($6 + [16]), *(((CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$7 * (int_64)10))) + [10082])))
	$14 = ((int_64)$1 + (int_64)9)
	$1 = $7
	if ( ((uint_64)$14 > (uint_64)(int_64)18) ){ goto $label$114 }
	$15 = *($25)
	$13 = ($11 & [1])
	$11 = *($6 + [16])
	$22 = uint_32($11 >> [1])
	$23 = *($6 + [20])
	$12 = ( $23 ? $22 : $13 )
	if ( ($12 == 0) ){ goto $label$115 }
	$11 = ( $15 ? $26 : $13 )
	$12 = (($11 + $12) + [-1])
	if ( ((uint_32)$12 <= (uint_32)$11) ){ goto $label$115 }
	
.LOOP $label$116:
	$13 = *($11)
	*($11) = *($12)
	*($12) = $13
	$12 = ($12 + [-1])
	$11 = ($11 + [1])
	if ( ($11 <= $12) ){ goto $label$116 }
	$11 = *($6 + [16])
	$22 = uint_32($11 >> [1])
	$13 = ($11 & [1])
	$15 = *($25)
	$23 = *($6 + [20])
	
.LABEL $label$115
	$11 = CALL $102(($6 + [32]), ( $15 ? $26 : $13 ), ( $23 ? $22 : $13 ))
	$1 = *($11)
	*($11) = (int_64)0
	$12 = *($11 + [8])
	*($11 + [8]) = [0]
	*($2) = $3
	*($28) = $5
	*((($6 + [160]) + [24])) = (int_64)1397703940
	*($29) = $1
	*(($13 = (($6 + [160]) + [40]))) = $12
	*($6 + [160]) = *($0)
	CALL $18(($6 + [576]), CALL $17(($6 + [64]), ($6 + [48]), $19, $8, ($6 + [160])))
	$11 = *($6 + [576])
	CALL send_inline($11, (*($6 + [580]) - $11))
	$11 = *($6 + [576])
	if ( ($11 == 0) ){ goto $label$117 }
	*($6 + [580]) = $11
	CALL _ZdlPv($11)
	
.LABEL $label$117
	$11 = *($30)
	if ( ($11 == 0) ){ goto $label$118 }
	*((($6 + [64]) + [32])) = $11
	CALL _ZdlPv($11)
	
.LABEL $label$118
	$11 = *((($6 + [64]) + [16]))
	if ( ($11 == 0) ){ goto $label$119 }
	*($31) = $11
	CALL _ZdlPv($11)
	
.LABEL $label$119
	if ( ((*($29) & [1]) == 0) ){ goto $label$123 }
	CALL _ZdlPv(*($13))
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$121 }
	goto $label$122 
	
.LABEL $label$123
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$121 }
	
.LABEL $label$122
	CALL _ZdlPv(*($25))
	if ( (*($6 + [32]) & [1]) ){ goto $label$120 }
	goto $label$92 
	
.LABEL $label$121
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$92 }
	
.LABEL $label$120
	CALL _ZdlPv(*($32))
	
.LABEL $label$92
	if ( ((*($6 + [104]) & [1]) == 0) ){ goto $label$124 }
	CALL _ZdlPv(*($16))
	
.LABEL $label$124
	$4 = ((int_64)$4 + (int_64)1)
	if ( (uint_64)($4 <= (int_64)3) ){ goto $label$77 }
	$1 = *($6 + [568])
	if ( (int_64)($1 == 0) ){ goto $label$13 }
	*(($13 = ($6 + [192]))) = [0]
	*($6 + [168]) = $1
	*($6 + [176]) = (int_64)-1
	*($6 + [184]) = (int_64)0
	$1 = *($0)
	*($6 + [160]) = $1
	*($6 + [52]) = ($6 + [144])
	*($6 + [48]) = ($6 + [568])
	*($6 + [56]) = ($6 + [128])
	*($6 + [576]) = $1
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$3()), [10329])
	*($6 + [68]) = ($6 + [48])
	*($6 + [64]) = ($6 + [160])
	*($6 + [72]) = ($6 + [576])
	*(($11 = CALL _Znwj([48])) + [8 align=4]) = (int_64)0
	*($11 + [16 align=4]) = (int_64)0
	*($11 + [24 align=4]) = (int_64)0
	*($11 + [32]) = ($6 + [160])
	CALL $36(($6 + [64]), $11)
	*($6 + [104]) = $11
	$1 = *($11)
	*($6 + [64]) = $1
	$2 = *($11 + [36])
	*($6 + [32]) = $2
	$16 = ($6 + [188])
	$12 = *($16)
	if ( ((uint_32)$12 >= (uint_32)*($13)) ){ goto $label$126 }
	*($12 + [8]) = $1
	*($12 + [16]) = $2
	*($6 + [104]) = [0]
	*($12) = $11
	*($16) = ($12 + [24])
	$11 = *($6 + [104])
	*($6 + [104]) = [0]
	if ( ($11 == 0) ){ goto $label$125 }
	goto $label$14 
	
.LABEL $label$126
	CALL $26(($6 + [184]), ($6 + [104]), ($6 + [64]), ($6 + [32]))
	$11 = *($6 + [104])
	*($6 + [104]) = [0]
	if ( $11 ){ goto $label$14 }
	
.LABEL $label$125
	$13 = *($6 + [184])
	if ( ($13 == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$76
	CALL $93(($6 + [32]))
	
.LABEL $label$72
	CALL $93(($6 + [128]))
	
.LABEL $label$46
	CALL $93(($6 + [144]))
	
.LABEL $label$16
	CALL $93(($6 + [224]))
	
.LABEL $label$15
	CALL $93(($6 + [64]))
	
.LABEL $label$14
	if ( ((*($11 + [20]) & [1]) == 0) ){ goto $label$127 }
	CALL _ZdlPv(*(($11 + [28])))
	
.LABEL $label$127
	if ( ((*($11 + [8]) & [1]) == 0) ){ goto $label$128 }
	CALL _ZdlPv(*(($11 + [16])))
	
.LABEL $label$128
	CALL _ZdlPv($11)
	$13 = *($6 + [184])
	if ( $13 ){ goto $label$12 }
	
.LABEL $label$13
	$11 = [1]
	if ( (*($6 + [128]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$2 = (($6 + [160]) + [28])
	$12 = *($2)
	if ( ((int_32)$12 == (int_32)$13) ){ goto $label$130 }
	
.LOOP $label$131:
	$12 = ($12 + [-24])
	$11 = *($12)
	*($12) = [0]
	if ( ($11 == 0) ){ goto $label$132 }
	if ( ((*($11 + [20]) & [1]) == 0) ){ goto $label$133 }
	CALL _ZdlPv(*(($11 + [28])))
	
.LABEL $label$133
	if ( ((*($11 + [8]) & [1]) == 0) ){ goto $label$134 }
	CALL _ZdlPv(*(($11 + [16])))
	
.LABEL $label$134
	CALL _ZdlPv($11)
	
.LABEL $label$132
	if ( ((int_32)$13 != (int_32)$12) ){ goto $label$131 }
	$11 = *(($6 + [184]))
	goto $label$129 
	
.LABEL $label$130
	$11 = $13
	
.LABEL $label$129
	*($2) = $13
	CALL _ZdlPv($11)
	$11 = [1]
	if ( ((*($6 + [128]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL _ZdlPv(*($6 + [136]))
	if ( ((*($6 + [144]) & $11) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	if ( (*($6 + [144]) & $11) ){ goto $label$8 }
	
.LABEL $label$9
	$11 = *($6 + [208])
	if ( ($11 == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	CALL _ZdlPv(*($6 + [152]))
	$11 = *($6 + [208])
	if ( ($11 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	*($6 + [212]) = $11
	CALL _ZdlPv($11)
	
.LABEL $label$6
	if ( ((*($6 + [480]) & [1]) == 0) ){ goto $label$135 }
	CALL _ZdlPv(*($6 + [488]))
	
.LABEL $label$135
	$global$0 = ($6 + [592])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$1 = (*($3 + [4]) + [8])
	*($3 + [4]) = $1
	CALL eosio_assert(((int_32)(*($3 + [8]) - $1) > (int_32)[7]), [10162])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC $31 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [48])
	$global$0 = $4
	$5 = CALL tapos_block_num()
	$6 = CALL tapos_block_prefix()
	if ( ((int_64)*([0]) != (int_64)0) ){ goto $label$1 }
	*([0]) = ((int_64)((int_64)(CASTING int_64)(int_32 ((int_32)$6 * (int_32)$5)) + (int_64)$1) + (int_64)CALL current_time())
	
.LABEL $label$1
	*((($4 + [32]) + [8])) = *([0])
	*($4 + [32]) = *([0])
	*($4 + [24]) = [0]
	*($4 + [16]) = (int_64)0
	*($4 + [12]) = [0]
	$7 = ($0 + [804])
	$5 = *($0 + [800])
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$3 }
	$8 = [0]
	$6 = (($4 + [16]) + [8])
	
.LOOP $label$4:
	$9 = $5
	$5 = *($9 + [28])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	
.LOOP $label$7:
	$0 = *($4 + [20])
	if ( ((int_32)$0 == (int_32)*($6)) ){ goto $label$8 }
	*($0) = *($4 + [12])
	*($4 + [20]) = ($0 + [4])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $21(($4 + [16]), ($4 + [12]))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$7 }
	
.LABEL $label$6
	$8 = *($4 + [12])
	
.LABEL $label$5
	$8 = ($8 + [1])
	*($4 + [12]) = $8
	$0 = *($9 + [4])
	if ( ($0 == 0) ){ goto $label$10 }
	
.LOOP $label$11:
	$5 = $0
	$0 = *($5)
	if ( $0 ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$5 = *($9 + [8])
	if ( ((int_32)*($5) == (int_32)$9) ){ goto $label$9 }
	$9 = ($9 + [8])
	
.LOOP $label$12:
	$0 = *($9)
	$9 = ($0 + [8])
	$5 = *($0 + [8])
	if ( ((int_32)$0 != (int_32)*($5)) ){ goto $label$12 }
	
.LABEL $label$9
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	$6 = *($4 + [20])
	goto $label$2 
	
.LABEL $label$3
	$6 = [0]
	
.LABEL $label$2
	$7 = [0]
	
.LOOP $label$13:
	$5 = CALL $22(($4 + [32]), int_32(($6 - *($4 + [16])) >> [2]))
	$0 = *($4 + [16])
	$10 = *(($0 + ($5 << [2])))
	*(($8 = ($2 + ($7 << [2])))) = $10
	$6 = *($4 + [20])
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$15 }
	$9 = [0]
	$5 = ($0 + [4])
	if ( ((int_32)*($0) != (int_32)$10) ){ goto $label$16 }
	$11 = [4]
	goto $label$14 
	
.LABEL $label$16
	$11 = [2]
	goto $label$14 
	
.LABEL $label$15
	$11 = [3]
	
.LABEL $label$14
	
.LOOP $label$17:
	goto $label$25 
	
.LABEL $label$30
	$5 = ($0 + [4])
	if ( ((int_32)*($0) != (int_32)*($8)) ){ goto $label$23 }
	$11 = [4]
	goto $label$17 
	
.LABEL $label$29
	$6 = ($6 - $5)
	$9 = int_32($6 >> [2])
	if ( ($6 == 0) ){ goto $label$18 }
	$11 = [5]
	goto $label$17 
	
.LABEL $label$28
	CALL memmove($0, $5, $6)
	$11 = [6]
	goto $label$17 
	
.LABEL $label$27
	$6 = ($0 + ($9 << [2]))
	*($4 + [20]) = $6
	$9 = [1]
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$26
	if ( ($9 & [1]) ){ goto $label$21 }
	$11 = [0]
	goto $label$17 
	
.LABEL $label$25
	$9 = [0]
	$0 = $5
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$22 }
	$11 = [3]
	goto $label$17 
	
.LABEL $label$24
	$7 = ($7 + [1])
	if ( ((int_32)$7 != (int_32)[54]) ){ goto $label$13 }
	$0 = *($4 + [16])
	if ( ($0 == 0) ){ goto $label$31 }
	*($4 + [20]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$31
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$23
	$11 = [2]
	goto $label$17 
	
.LABEL $label$22
	$11 = [1]
	goto $label$17 
	
.LABEL $label$21
	$11 = [3]
	goto $label$17 
	
.LABEL $label$20
	$11 = [3]
	goto $label$17 
	
.LABEL $label$19
	$11 = [1]
	goto $label$17 
	
.LABEL $label$18
	$11 = [6]
	goto $label$17 
	$11
}