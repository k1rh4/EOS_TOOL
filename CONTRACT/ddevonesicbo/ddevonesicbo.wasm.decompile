(data (i32.const 4) "`q\00\00")
(data (i32.const 16) "solve\00")
(data (i32.const 32) "ddevonesicbo\00")
(data (i32.const 48) "@@@@@@@@\00")
(data (i32.const 64) "sicbo apply: (receiver, code, action): (\00")
(data (i32.const 112) ",\00")
(data (i32.const 128) ",@@\00")
(data (i32.const 144) "@@)\n\00")
(data (i32.const 160) "eosio\00")
(data (i32.const 176) "onerror\00")
(data (i32.const 192) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 256) "eosio.token\00")
(data (i32.const 272) "ddevminepool\00")
(data (i32.const 288) "betdicetoken\00")
(data (i32.const 304) "bitpietokens\00")
(data (i32.const 320) "transfer\00")
(data (i32.const 336) "clear\00")
(data (i32.const 352) "presolve\00")
(data (i32.const 368) "actdraw\00")
(data (i32.const 384) "maintain\00")
(data (i32.const 400) "setmaintain\00")
(data (i32.const 416) "senddividend\00")
(data (i32.const 432) "setdivpool\00")
(data (i32.const 448) "unlockuser\00")
(data (i32.const 464) "startarena\00")
(data (i32.const 480) "stoparena\00")
(data (i32.const 496) "arenadraw\00")
(data (i32.const 512) "arenasolve\00")
(data (i32.const 528) "arenasettle\00")
(data (i32.const 544) "arenapnr\00")
(data (i32.const 560) "arenapnrdly\00")
(data (i32.const 576) "arenasetnext\00")
(data (i32.const 592) "cleararena\00")
(data (i32.const 608) "cannot pass end iterator to erase\00")
(data (i32.const 656) "cannot increment end iterator\00")
(data (i32.const 688) "object passed to erase is not in multi_index\00")
(data (i32.const 736) "cannot erase objects in table of another contract\00")
(data (i32.const 800) "attempt to remove object that was not in multi_index\00")
(data (i32.const 864) "error reading iterator\00")
(data (i32.const 896) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 960) "invalid symbol name\00")
(data (i32.const 992) "read\00")
(data (i32.const 1008) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 1072) "cannot decrement iterator at beginning of table\00")
(data (i32.const 1120) "get\00")
(data (i32.const 1136) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 1200) "arena not found\00")
(data (i32.const 1216) "cannot pass end iterator to modify\00")
(data (i32.const 1264) "object passed to modify is not in multi_index\00")
(data (i32.const 1312) "cannot modify objects in table of another contract\00")
(data (i32.const 1376) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1440) "write\00")
(data (i32.const 1456) "arenaresume\00")
(data (i32.const 1472) "active\00")
(data (i32.const 1488) "arenapause\00")
(data (i32.const 1504) "arena under maintence\00")
(data (i32.const 1536) "cannot find activity\00")
(data (i32.const 1568) "Arena under maintence\00")
(data (i32.const 1600) "attempt to subtract asset with different symbol\00")
(data (i32.const 1648) "subtraction underflow\00")
(data (i32.const 1680) "subtraction overflow\00")
(data (i32.const 1712) "attempt to add asset with different symbol\00")
(data (i32.const 1760) "addition underflow\00")
(data (i32.const 1792) "addition overflow\00")
(data (i32.const 1824) "system error, delay time too short\00")
(data (i32.const 1872) "cannot create objects in table of another contract\00")
(data (i32.const 1936) "next primary key in table is at autoincrement limit\00")
(data (i32.const 2000) "Arena not found\00")
(data (i32.const 2016) "Can not find activity\00")
(data (i32.const 2048) "Bet count not supported\00")
(data (i32.const 2080) "Waiting for arena game start\00")
(data (i32.const 2112) "Arena game\'s up\00")
(data (i32.const 2128) "Game already exists\00")
(data (i32.const 2160) "arenapay\00")
(data (i32.const 2176) "\e7\ab\9e\e5\a5\96\e6\89\a3\e8\b4\b9\00")
(data (i32.const 2192) "cannot find activity!\00")
(data (i32.const 2224) "not auto pause\00")
(data (i32.const 2240) "ddevonedice1\00")
(data (i32.const 2256) "ddevbaccarat\00")
(data (i32.const 2272) "ERROR\00")
(data (i32.const 2304) "We do not support this token currently\00")
(data (i32.const 2352) "ddevsparebag\00")
(data (i32.const 2368) "ddevactivity\00")
(data (i32.const 2384) "multiplication overflow\00")
(data (i32.const 2416) "multiplication underflow\00")
(data (i32.const 2448) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 2512) "Quantity not enough\00")
(data (i32.const 2544) "Bet amount out of range\00")
(data (i32.const 2576) "GAME UNDER MAINTAIN\00")
(data (i32.const 2608) "System error!\00")
(data (i32.const 2624) "dBet Sicbo (https://tt.dbet.one \e6\9c\80\e9\ab\98\e8\b5\94\e7\8e\87\e6\9c\80\e9\ab\98\e5\88\86\e7\ba\a2\e9\aa\b0\e5\ae\9d\e6\b8\b8\e6\88\8f) \e9\82\80\e8\af\b7\e7\94\a8\e6\88\b7\00")
(data (i32.const 2720) "\e5\a5\96\e5\8a\b1!\00")
(data (i32.const 2736) "addenergy\00")
(data (i32.const 2752) "sendeos\00")
(data (i32.const 2760) "\d0\n\00\00")
(data (i32.const 2768) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 2816) "GAME UNDER MAINTAIN!\00")
(data (i32.const 2848) "-\00")
(data (i32.const 2864) "EOS without bet type\00")
(data (i32.const 2896) "Bet type not found\00")
(data (i32.const 2928) "Quantity must be positive number\00")
(data (i32.const 2976) "Bet type must be positive number\00")
(data (i32.const 3024) "offertype error\00")
(data (i32.const 3040) "Bet must be positive\00")
(data (i32.const 3088) "draw-\00")
(data (i32.const 3104) "account name not found\00")
(data (i32.const 3136) "can not draw for other user\00")
(data (i32.const 3168) "draw number not found\00")
(data (i32.const 3200) "draw number out of range\00")
(data (i32.const 3232) "draw\00")
(data (i32.const 3248) "candy\00")
(data (i32.const 3264) "Invalid token transfer\00")
(data (i32.const 3296) "Quantity must be biger than 0.1 EOS\00")
(data (i32.const 3344) "Quantity must be biger than 100 DBET\00")
(data (i32.const 3392) "Quantity must be biger than 10 DICE\00")
(data (i32.const 3440) "Quantity must be biger than 0.1 EUSD\00")
(data (i32.const 3488) "sicbo\e4\b8\8b\e6\b3\a8\e5\a4\b1\e8\b4\a5\e9\80\80\e8\bf\98\00")
(data (i32.const 3520) "Invalid name\00")
(data (i32.const 3536) "Invalid account\00")
(data (i32.const 3552) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?\01\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?\03\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?\02\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?\04\00\00\00\00\00\00\00\00\00\00\00\00\00P@\05\00\00\00\00\00\00\00\00\00\00\00\00\00@@\06\00\00\00\00\00\00\00\00\00\00\00\00\002@\07\00\00\00\00\00\00\00\00\00\00\00\00\00(@\08\00\00\00\00\00\00\00\00\00\00\00\00\00 @\t\00\00\00\00\00\00\00\00\00\00\00\00\00\18@\n\00\00\00\00\00\00\00\00\00\00\00\00\00\18@\0b\00\00\00\00\00\00\00\00\00\00\00\00\00\18@\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\18@\0d\00\00\00\00\00\00\00\00\00\00\00\00\00 @\0e\00\00\00\00\00\00\00\00\00\00\00\00\00(@\0f\00\00\00\00\00\00\00\00\00\00\00\00\002@\10\00\00\00\00\00\00\00\00\00\00\00\00\00@@\11\00\00\00\00\00\00\00\00\00\00\00\00\00P@d\00\00\00\00\00\00\00\9a\99\99\99\99\99\f1?\c8\00\00\00\00\00\00\00\9a\99\99\99\99\99\f1?,\01\00\00\00\00\00\00\9a\99\99\99\99\99\f1?\90\01\00\00\00\00\00\00\9a\99\99\99\99\99\f1?\f4\01\00\00\00\00\00\00\9a\99\99\99\99\99\f1?X\02\00\00\00\00\00\00\9a\99\99\99\99\99\f1?n\00\00\00\00\00\00\00\00\00\00\00\00\00(@\dc\00\00\00\00\00\00\00\00\00\00\00\00\00(@J\01\00\00\00\00\00\00\00\00\00\00\00\00(@\b8\01\00\00\00\00\00\00\00\00\00\00\00\00(@&\02\00\00\00\00\00\00\00\00\00\00\00\00(@\94\02\00\00\00\00\00\00\00\00\00\00\00\00(@o\00\00\00\00\00\00\00\00\00\00\00\00\00i@\de\00\00\00\00\00\00\00\00\00\00\00\00\00i@M\01\00\00\00\00\00\00\00\00\00\00\00\00i@\bc\01\00\00\00\00\00\00\00\00\00\00\00\00i@+\02\00\00\00\00\00\00\00\00\00\00\00\00i@\9a\02\00\00\00\00\00\00\00\00\00\00\00\00i@\t\03\00\00\00\00\00\00\00\00\00\00\00\00@@")
(data (i32.const 12544) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "__multi3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "abort" (func $fimport$1))
(import "env" "action_data_size" (func $fimport$2 (result i32)))
(import "env" "current_receiver" (func $fimport$3 (result i64)))
(import "env" "current_time" (func $fimport$4 (result i64)))
(import "env" "db_end_i64" (func $fimport$5 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$6 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$8 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$9 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$10 (param i32)))
(import "env" "db_idx64_store" (func $fimport$11 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$12 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$13 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$14 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$15 (param i32)))
(import "env" "db_store_i64" (func $fimport$16 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$17 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$18 (param i32 i32)))
(import "env" "is_account" (func $fimport$19 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$20 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$21 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$22 (param i32 i32 i32) (result i32)))
(import "env" "printn" (func $fimport$23 (param i64)))
(import "env" "prints" (func $fimport$24 (param i32)))
(import "env" "read_action_data" (func $fimport$25 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$26 (param i64)))
(import "env" "require_auth2" (func $fimport$27 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$28 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$29 (param i32 i32)))
(import "env" "sha512" (func $fimport$30 (param i32 i32 i32)))
(import "env" "tapos_block_num" (func $fimport$31 (result i32)))
(import "env" "tapos_block_prefix" (func $fimport$32 (result i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN13transfer_args8get_nameEv" (func $5))
(export "_ZN13transfer_args11get_accountEv" (func $6))
(export "apply" (func $7))
(export "_ZN5sicbo8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $12))
(export "_ZN5sicbo8presolveEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $14))
(export "_ZN5sicbo5solveEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $15))
(export "_ZN5sicbo7actdrawEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $16))
(export "_ZN5sicbo8maintainEN5eosio5assetE" (func $18))
(export "_ZN5sicbo11setmaintainEN5eosio5assetE" (func $20))
(export "_ZN5sicbo10unlockuserEyN5eosio5assetE" (func $21))
(export "_ZN5sicbo12senddividendEN5eosio5assetE" (func $23))
(export "_ZN5sicbo10setdivpoolEyN5eosio5assetE" (func $24))
(export "_ZN5sicbo10startarenaEN5eosio5assetEmh" (func $25))
(export "_ZN5sicbo9stoparenaEhh" (func $27))
(export "_ZN5sicbo9arenadrawEyyh" (func $29))
(export "_ZN5sicbo10arenasolveEyyhy" (func $31))
(export "_ZN5sicbo11arenasettleEv" (func $33))
(export "_ZN5sicbo8arenapnrEv" (func $35))
(export "_ZN5sicbo11arenapnrdlyEv" (func $36))
(export "_ZN5sicbo12arenasetnextEy" (func $37))
(export "_ZN5sicbo5clearEy" (func $39))
(export "_ZN5sicbo10cleararenaEy" (func $40))
(export "_ZN5sicbo10arenadelayEy" (func $77))
(export "_ZN5sicbo6moddivEN5eosio5assetE" (func $102))
(export "_ZN5sicbo11transfer_toEyN5eosio5assetERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEo" (func $109))
(export "_ZN5sicbo12_split_extraENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPN5eosio5assetEPySA_NS7_11symbol_typeESA_" (func $121))
(export "_ZN5sicbo11_getWinsMapEPi" (func $129))
(export "_ZN5sicbo7str2eosENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN5eosio11symbol_typeE" (func $132))
(export "_ZN5sicbo14_split_batchidENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPy" (func $137))
(export "_Z8isdecnumNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE" (func $151))
(export "_Z8isdecnumPKc" (func $152))
(export "_ZN5sicbo16_generateRandNumEyPt" (func $153))
(export "_ZN5sicbo17require_offertypeEi" (func $154))
(export "_ZN5sicbo11timeinrangeEyyy" (func $155))
(export "_ZN5sicbo12gethourtodayEyy" (func $156))
(export "malloc" (func $157))
(export "free" (func $160))
(export "isdigit" (func $175))
(export "atoi" (func $176))
(export "atoll" (func $177))
(export "memchr" (func $178))
(export "memcmp" (func $179))
(export "strlen" (func $180))
(table $0 20 20 anyfunc)
(elem (i32.const 0) $181 $36 $12 $40 $14 $16 $15 $33 $24 $29 $35 $25 $27 $31 $39 $18 $21 $20 $37 $23)



int_32 .FUNC $174 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $161($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_64 .FUNC _ZN13transfer_args11get_accountEv ()
{
	int_32 $0
	int_32 $1
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	$3 = (int_64)0
	$2 = (int_64)59
	$1 = [32]
	$4 = (int_64)0
	
.LOOP $label$1:
	$5 = (int_64)0
	if ( ((uint_64)$3 > (uint_64)(int_64)11) ){ goto $label$2 }
	$0 = *($1)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$0 = ($0 + [165])
	goto $label$3 
	
.LABEL $label$4
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($0 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$2
	$1 = ($1 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$4 = ((int_64)$5 | (int_64)$4)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$1 }
	return $4
}

int_32 .FUNC atoi (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	
.LOOP $label$1:
	$3 = *($0)
	$1 = int_32(($3 << [24]) >> [24])
	$2 = ($1 + [-9])
	$4 = ($0 + [1])
	$0 = $4
	if ( ((int_32)$3 == (int_32)[32]) ){ goto $label$1 }
	$0 = $4
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$1 = [1]
	goto $label$4 
	
.LABEL $label$5
	$1 = [0]
	
.LABEL $label$4
	$3 = *($4)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 + [-1])
	$1 = [0]
	
.LABEL $label$2
	$2 = [0]
	$3 = (int_32(($3 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$3 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($4 + [1])
	$2 = [0]
	
.LOOP $label$7:
	$2 = (((int_32)$2 * (int_32)[10]) - $3)
	$3 = *($0)
	$0 = ($0 + [1])
	$3 = ($3 + [-48])
	if ( ($3 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $2 ? ([0] - $2) : $1 )
}

int_64 .FUNC atoll (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	
.LOOP $label$1:
	$3 = *($0)
	$1 = int_32(($3 << [24]) >> [24])
	$2 = ($1 + [-9])
	$4 = ($0 + [1])
	$0 = $4
	if ( ((int_32)$3 == (int_32)[32]) ){ goto $label$1 }
	$0 = $4
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$2 = [1]
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	
.LABEL $label$4
	$3 = *($4)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 + [-1])
	$2 = [0]
	
.LABEL $label$2
	$5 = (int_64)0
	$3 = (int_32(($3 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$3 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($4 + [1])
	$5 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64))(((int_64)$5 * (int_64)10) - (CASTING int_64)(int_32 $3))
	$3 = *($0)
	$0 = ($0 + [1])
	$3 = ($3 + [-48])
	if ( ($3 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $5 ? (int_64))((int_64)0 - $5) : $2 )
}

int_32 .FUNC $170 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$3 }
	$4 = uint_32($5 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( $6 ){ goto $label$5 }
	$6 = [10]
	goto $label$4 
	
.LABEL $label$5
	$5 = *($0)
	$6 = (($5 & [-2]) + [-1])
	
.LABEL $label$4
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$6 }
	CALL $165($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	return $0
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ($5 & [1]) ){ goto $label$8 }
	$5 = ($0 + [1])
	goto $label$7 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	
.LABEL $label$7
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$10 }
	CALL memmove(($6 + $3), $6, $1)
	$2 = ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) )
	
.LABEL $label$10
	CALL memmove($6, $2, $3)
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$12 }
	*($0) = ($3 << [1])
	goto $label$11 
	
.LABEL $label$12
	*($0 + [4]) = $3
	
.LABEL $label$11
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $171 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$3 = ($6 & [1])
	if ( $3 ){ goto $label$3 }
	$4 = uint_32($6 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $3 ){ goto $label$6 }
	$5 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $3 ? $2 : ($3 <= $2) )
	$3 = ($4 - $1)
	$3 = ($3 - $2)
	if ( ($3 == 0) ){ goto $label$7 }
	$1 = ($5 + $1)
	CALL memmove($1, ($1 + $2), $3)
	$6 = *($0)
	
.LABEL $label$7
	$2 = ($4 - $2)
	if ( ($6 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($5 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $172 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [608])
	*([0] + [4]) = $9
	CALL prints([48])
	CALL prints([64])
	CALL printn($0)
	CALL prints([112])
	CALL printn($1)
	CALL prints([128])
	CALL printn($2)
	CALL prints([144])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [160]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [176]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [160]
	$7 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$19 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$3 = ($3 + [165])
	goto $label$17 
	
.LABEL $label$19
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$15
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$14 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [192])
	$4 = CALL $8(($9 + [344]), $0)
	CALL $9(($9 + [304]))
	CALL $10($4, ($9 + [304]))
	$3 = *($9 + [320])
	if ( ($3 == 0) ){ goto $label$20 }
	*(($9 + [324])) = $3
	CALL $162($3)
	
.LABEL $label$20
	CALL $11($4)
	
.LABEL $label$7
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [256]
	$7 = (int_64)0
	
.LOOP $label$21:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$26 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$3 = ($3 + [165])
	goto $label$24 
	
.LABEL $label$26
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$23
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$22
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$21 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$30 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [272]
	$7 = (int_64)0
	
.LOOP $label$31:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$32 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$3 = ($3 + [165])
	goto $label$33 
	
.LABEL $label$34
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$32
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$31 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$30 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [288]
	$7 = (int_64)0
	
.LOOP $label$35:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$36 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$3 = ($3 + [165])
	goto $label$37 
	
.LABEL $label$38
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$36
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$35 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$30 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [304]
	$7 = (int_64)0
	
.LOOP $label$39:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$40 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$3 = ($3 + [165])
	goto $label$41 
	
.LABEL $label$42
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$40
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$39 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$29 }
	
.LABEL $label$30
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [320]
	$7 = (int_64)0
	
.LOOP $label$43:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$48 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$3 = ($3 + [165])
	goto $label$46 
	
.LABEL $label$48
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$47
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$45
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$44
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$43 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	
.LABEL $label$29
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$27 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [336]
	$7 = (int_64)0
	
.LOOP $label$49:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$54 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$53 }
	$3 = ($3 + [165])
	goto $label$52 
	
.LABEL $label$54
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$53
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$52
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$51
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$50
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$49 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$7 = (int_64)0
	
.LOOP $label$55:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$60 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$3 = ($3 + [165])
	goto $label$58 
	
.LABEL $label$60
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$59
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$57
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$56
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$55 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [16]
	$7 = (int_64)0
	
.LOOP $label$61:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$66 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$65 }
	$3 = ($3 + [165])
	goto $label$64 
	
.LABEL $label$66
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$65
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$64
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$63
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$62
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$61 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [368]
	$7 = (int_64)0
	
.LOOP $label$67:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$72 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$71 }
	$3 = ($3 + [165])
	goto $label$70 
	
.LABEL $label$72
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$71
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$70
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$69
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$68
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$67 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [384]
	$7 = (int_64)0
	
.LOOP $label$73:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$78 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$77 }
	$3 = ($3 + [165])
	goto $label$76 
	
.LABEL $label$78
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$77
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$76
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$75
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$74
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$73 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [400]
	$7 = (int_64)0
	
.LOOP $label$79:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$84 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$83 }
	$3 = ($3 + [165])
	goto $label$82 
	
.LABEL $label$84
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$81 }
	goto $label$80 
	
.LABEL $label$83
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$82
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$81
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$80
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$79 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [416]
	$7 = (int_64)0
	
.LOOP $label$85:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$86 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$88 }
	$3 = ($3 + [165])
	goto $label$87 
	
.LABEL $label$88
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$87
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$86
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$85 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [432]
	$7 = (int_64)0
	
.LOOP $label$89:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$94 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$93 }
	$3 = ($3 + [165])
	goto $label$92 
	
.LABEL $label$94
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$91 }
	goto $label$90 
	
.LABEL $label$93
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$92
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$91
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$90
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$89 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [448]
	$7 = (int_64)0
	
.LOOP $label$95:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$100 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$99 }
	$3 = ($3 + [165])
	goto $label$98 
	
.LABEL $label$100
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$97 }
	goto $label$96 
	
.LABEL $label$99
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$98
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$97
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$96
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$95 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [464]
	$7 = (int_64)0
	
.LOOP $label$101:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$106 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$105 }
	$3 = ($3 + [165])
	goto $label$104 
	
.LABEL $label$106
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$103 }
	goto $label$102 
	
.LABEL $label$105
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$104
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$103
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$102
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$101 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [480]
	$7 = (int_64)0
	
.LOOP $label$107:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$112 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$111 }
	$3 = ($3 + [165])
	goto $label$110 
	
.LABEL $label$112
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$109 }
	goto $label$108 
	
.LABEL $label$111
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$110
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$109
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$108
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$107 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [496]
	$7 = (int_64)0
	
.LOOP $label$113:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$118 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$117 }
	$3 = ($3 + [165])
	goto $label$116 
	
.LABEL $label$118
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$115 }
	goto $label$114 
	
.LABEL $label$117
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$116
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$115
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$114
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$113 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [512]
	$7 = (int_64)0
	
.LOOP $label$119:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$124 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$123 }
	$3 = ($3 + [165])
	goto $label$122 
	
.LABEL $label$124
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$121 }
	goto $label$120 
	
.LABEL $label$123
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$122
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$121
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$120
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$119 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [528]
	$7 = (int_64)0
	
.LOOP $label$125:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$130 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$129 }
	$3 = ($3 + [165])
	goto $label$128 
	
.LABEL $label$130
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$127 }
	goto $label$126 
	
.LABEL $label$129
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$128
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$127
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$126
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$125 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [544]
	$7 = (int_64)0
	
.LOOP $label$131:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$136 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$135 }
	$3 = ($3 + [165])
	goto $label$134 
	
.LABEL $label$136
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$133 }
	goto $label$132 
	
.LABEL $label$135
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$134
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$133
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$132
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$131 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [560]
	$7 = (int_64)0
	
.LOOP $label$137:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$142 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$141 }
	$3 = ($3 + [165])
	goto $label$140 
	
.LABEL $label$142
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$139 }
	goto $label$138 
	
.LABEL $label$141
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$140
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$139
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$138
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$137 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [576]
	$7 = (int_64)0
	
.LOOP $label$143:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$144 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$146 }
	$3 = ($3 + [165])
	goto $label$145 
	
.LABEL $label$146
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$145
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$144
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$143 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [592]
	$7 = (int_64)0
	
.LOOP $label$147:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$152 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$151 }
	$3 = ($3 + [165])
	goto $label$150 
	
.LABEL $label$152
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$149 }
	goto $label$148 
	
.LABEL $label$151
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$150
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$149
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$148
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$147 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$27 }
	
.LABEL $label$28
	$4 = CALL $8(($9 + [344]), $0)
	if ( ((int_64)$2 <= (int_64)-3106564261919997953) ){ goto $label$171 }
	if ( ((int_64)$2 > (int_64)3879063147257707407) ){ goto $label$170 }
	if ( ((int_64)$2 <= (int_64)3879062896224763903) ){ goto $label$168 }
	if ( ((int_64)$2 == (int_64)3879062896224763904) ){ goto $label$164 }
	if ( ((int_64)$2 == (int_64)3879063100506243072) ){ goto $label$163 }
	if ( ((int_64)$2 != (int_64)3879063100511255552) ){ goto $label$153 }
	*($9 + [180]) = [0]
	*($9 + [176]) = [1]
	*($9 + [120 align=4]) = *($9 + [176])
	CALL $34($4, ($9 + [120]))
	goto $label$153 
	
.LABEL $label$171
	if ( ((int_64)$2 <= (int_64)-4417148075471821313) ){ goto $label$169 }
	if ( ((int_64)$2 <= (int_64)-4157529876190363649) ){ goto $label$167 }
	if ( ((int_64)$2 == (int_64)-4157529876190363648) ){ goto $label$162 }
	if ( ((int_64)$2 == (int_64)-4149693921352482816) ){ goto $label$161 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$153 }
	*($9 + [300]) = [0]
	*($9 + [296]) = [2]
	*($9) = *($9 + [296])
	CALL $13($4, $9)
	goto $label$153 
	
.LABEL $label$170
	if ( ((int_64)$2 <= (int_64)3879063152496377855) ){ goto $label$166 }
	if ( ((int_64)$2 == (int_64)3879063152496377856) ){ goto $label$160 }
	if ( ((int_64)$2 == (int_64)4923678490122780672) ){ goto $label$159 }
	if ( ((int_64)$2 != (int_64)4923678605727858688) ){ goto $label$153 }
	*($9 + [156]) = [0]
	*($9 + [152]) = [3]
	*($9 + [144 align=4]) = *($9 + [152])
	CALL $38($4, ($9 + [144]))
	goto $label$153 
	
.LABEL $label$169
	if ( ((int_64)$2 > (int_64)-4420682451487381873) ){ goto $label$165 }
	if ( ((int_64)$2 == (int_64)-7954134735498772480) ){ goto $label$158 }
	if ( ((int_64)$2 != (int_64)-5920674095782952960) ){ goto $label$153 }
	*($9 + [292]) = [0]
	*($9 + [288]) = [4]
	*($9 + [8 align=4]) = *($9 + [288])
	CALL $13($4, ($9 + [8]))
	goto $label$153 
	
.LABEL $label$168
	if ( ((int_64)$2 == (int_64)-3106564261919997952) ){ goto $label$157 }
	if ( ((int_64)$2 != (int_64)3617124542901649408) ){ goto $label$153 }
	*($9 + [276]) = [0]
	*($9 + [272]) = [5]
	*($9 + [24 align=4]) = *($9 + [272])
	CALL $17($4, ($9 + [24]))
	goto $label$153 
	
.LABEL $label$167
	if ( ((int_64)$2 == (int_64)-4417148075471821312) ){ goto $label$156 }
	if ( ((int_64)$2 != (int_64)-4241347412448247808) ){ goto $label$153 }
	*($9 + [284]) = [0]
	*($9 + [280]) = [6]
	*($9 + [16 align=4]) = *($9 + [280])
	CALL $13($4, ($9 + [16]))
	goto $label$153 
	
.LABEL $label$166
	if ( ((int_64)$2 == (int_64)3879063147257707408) ){ goto $label$155 }
	if ( ((int_64)$2 != (int_64)3879063147260957696) ){ goto $label$153 }
	*($9 + [196]) = [0]
	*($9 + [192]) = [7]
	*($9 + [104 align=4]) = *($9 + [192])
	CALL $34($4, ($9 + [104]))
	goto $label$153 
	
.LABEL $label$165
	if ( ((int_64)$2 == (int_64)-4420682451487381872) ){ goto $label$154 }
	if ( ((int_64)$2 != (int_64)-4417301782764175360) ){ goto $label$153 }
	*($9 + [236]) = [0]
	*($9 + [232]) = [8]
	*($9 + [64 align=4]) = *($9 + [232])
	CALL $22($4, ($9 + [64]))
	goto $label$153 
	
.LABEL $label$164
	*($9 + [212]) = [0]
	*($9 + [208]) = [9]
	*($9 + [88 align=4]) = *($9 + [208])
	CALL $30($4, ($9 + [88]))
	goto $label$153 
	
.LABEL $label$163
	*($9 + [188]) = [0]
	*($9 + [184]) = [10]
	*($9 + [112 align=4]) = *($9 + [184])
	CALL $34($4, ($9 + [112]))
	goto $label$153 
	
.LABEL $label$162
	*($9 + [228]) = [0]
	*($9 + [224]) = [11]
	*($9 + [72 align=4]) = *($9 + [224])
	CALL $26($4, ($9 + [72]))
	goto $label$153 
	
.LABEL $label$161
	*($9 + [220]) = [0]
	*($9 + [216]) = [12]
	*($9 + [80 align=4]) = *($9 + [216])
	CALL $28($4, ($9 + [80]))
	goto $label$153 
	
.LABEL $label$160
	*($9 + [204]) = [0]
	*($9 + [200]) = [13]
	*($9 + [96 align=4]) = *($9 + [200])
	CALL $32($4, ($9 + [96]))
	goto $label$153 
	
.LABEL $label$159
	*($9 + [164]) = [0]
	*($9 + [160]) = [14]
	*($9 + [136 align=4]) = *($9 + [160])
	CALL $38($4, ($9 + [136]))
	goto $label$153 
	
.LABEL $label$158
	*($9 + [268]) = [0]
	*($9 + [264]) = [15]
	*($9 + [32 align=4]) = *($9 + [264])
	CALL $19($4, ($9 + [32]))
	goto $label$153 
	
.LABEL $label$157
	*($9 + [252]) = [0]
	*($9 + [248]) = [16]
	*($9 + [48 align=4]) = *($9 + [248])
	CALL $22($4, ($9 + [48]))
	goto $label$153 
	
.LABEL $label$156
	*($9 + [260]) = [0]
	*($9 + [256]) = [17]
	*($9 + [40 align=4]) = *($9 + [256])
	CALL $19($4, ($9 + [40]))
	goto $label$153 
	
.LABEL $label$155
	*($9 + [172]) = [0]
	*($9 + [168]) = [18]
	*($9 + [128 align=4]) = *($9 + [168])
	CALL $38($4, ($9 + [128]))
	goto $label$153 
	
.LABEL $label$154
	*($9 + [244]) = [0]
	*($9 + [240]) = [19]
	*($9 + [56 align=4]) = *($9 + [240])
	CALL $19($4, ($9 + [56]))
	
.LABEL $label$153
	CALL $11($4)
	
.LABEL $label$27
	*([0] + [4]) = ($9 + [608])
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

int_64 .FUNC _ZN13transfer_args8get_nameEv ()
{
	int_32 $0
	int_32 $1
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	$3 = (int_64)0
	$2 = (int_64)59
	$1 = [16]
	$4 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$3 > (uint_64)(int_64)4) ){ goto $label$6 }
	$0 = *($1)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$0 = ($0 + [165])
	goto $label$4 
	
.LABEL $label$6
	$5 = (int_64)0
	if ( ((uint_64)$3 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$2
	$1 = ($1 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$4 = ((int_64)$5 | (int_64)$4)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$1 }
	return $4
}

void .FUNC $127 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$7 = ( $6 ? $8 : ($8 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $161(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $172($0)
	
.LABEL $label$1
	*(($8 = ($6 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $161([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $54(($8 + [28]), [20])
	$2 = *($8 + [28])
	$1 = (*($2) - $2)
	CALL eosio_assert(((int_32)$1 > (int_32)[7]), [1440])
	CALL memcpy($2, $4, [8])
	CALL eosio_assert(((int_32)($1 + [-8]) > (int_32)[7]), [1440])
	CALL memcpy(($2 + [8]), ($4 + [8]), [8])
	CALL eosio_assert(((int_32)($1 + [-16]) > (int_32)[3]), [1440])
	CALL memcpy(($2 + [16]), ($4 + [16]), [4])
	$3 = ($6 + ((int_32)$7 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$6 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($4 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($4) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($4 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($4) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $6) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$1 = ([0] - $4)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $162($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $162($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $162($4)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC $49 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [24]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1072])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-4354846573189230592)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1008])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1008])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $48(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [864])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $161([32])) + [16]) = [0]
	*($6 + [8 align=4]) = (int_64)0
	*($6 + [20]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [992])
	CALL memcpy($6, $4, [8])
	*($8 + [36]) = ($4 + [8])
	CALL $51(($8 + [32]), ($6 + [8]))
	*($6 + [24]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [24])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $52(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$10 }
	CALL $162(*(($4 + [16])))
	
.LABEL $label$10
	CALL $162($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [992])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [992])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [992])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [992])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [992])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [992])
	CALL memcpy(($1 + [48]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $42 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [52]) == (int_32)$0), [688])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [736])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [800])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $162($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $162($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [56]))
	$7 = *($1 + [60])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3879062938829455360, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [864])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $161([64])) + [32]) = (int_64)1398362884
	*($4 + [24]) = (int_64)0
	CALL eosio_assert([1], [896])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [960])
	*($4 + [52]) = $0
	*($4 + [48]) = [0]
	CALL $43(($8 + [32]), $4)
	*($4 + [60]) = [-1]
	*($4 + [56]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [56])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $44($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $162($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC _ZN5sicbo10cleararenaEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL require_auth(*($0))
	$4 = CALL db_lowerbound_i64(*($0 + [224]), *(($0 + [232])), (int_64)3879062938829455360, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$2 = ($0 + [224])
	$0 = CALL $41($2, $4)
	
.LOOP $label$2:
	if ( ((uint_64)*($0) >= (uint_64)$1) ){ goto $label$1 }
	$4 = [0]
	$3 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($3, [608])
	CALL eosio_assert($3, [656])
	$3 = CALL db_next_i64(*($0 + [56]), ($5 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $41($2, $3)
	
.LABEL $label$3
	CALL $42($2, $0)
	$0 = $4
	if ( $4 ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [80]) == (int_32)$0), [688])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [736])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [800])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $162($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $162($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [84]))
	$7 = *(($1 + [88]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4354846489561792512, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	$7 = *(($1 + [92]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4354846489561792511, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $46 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [84]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1072])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-4354846489561792512)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1008])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1008])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $45(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [864])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $161([96])
	$4 = CALL $55($6)
	*($6 + [80]) = $0
	CALL $56(($8 + [32]), $4)
	*($6 + [88]) = [-1]
	*($6 + [84]) = $1
	*($6 + [92]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [84])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $57(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $162($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $161(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $172($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $162($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $162($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $167 (int_32 $0, int_32 $1)
{
	return CALL $168($0, $1, CALL $180($1))
}

void .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $161(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $162($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $165 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $161($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $162($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $164 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$4 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $4 )
	$5 = ($1 + [1])
	$6 = *($1 + [8])
	$1 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$3 = *($0)
	$1 = (($3 & [-2]) + [-1])
	
.LABEL $label$5
	$5 = ( $6 ? $5 : $4 )
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $4 ){ goto $label$7 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $4 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$3 = *($0 + [4])
	
.LABEL $label$6
	CALL $165($0, $1, ($2 - $1), $3, [0], $3, $2, $5)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $5, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $163 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $162 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $161 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [12636])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [12528])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [12336]
	$1 = (((int_32)$2 * (int_32)[12]) + [12336])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $169 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $170($0, $1, $2, CALL $180($2))
}

int_32 .FUNC $168 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $165($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

int_32 .FUNC isdigit (int_32 $0)
{
	return (($0 + [-48]) <= [10])
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [864])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [20]) = $4
	*($8 + [16]) = $4
	*($8 + [24]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $161([88])) + [72]) = $0
	*($8 + [32]) = ($8 + [16])
	*($8 + [44]) = ($6 + [8])
	*($8 + [40]) = $6
	*($8 + [48]) = ($6 + [16])
	*($8 + [52]) = ($6 + [24])
	*($8 + [56]) = ($6 + [32])
	*($8 + [60]) = ($6 + [40])
	*($8 + [64]) = ($6 + [48])
	*($8 + [68]) = ($6 + [56])
	*($8 + [72]) = ($6 + [64])
	CALL $60(($8 + [40]), ($8 + [32]))
	*($6 + [76]) = $1
	*($8 + [32]) = $6
	$5 = *($6)
	*($8 + [40]) = $5
	$7 = *($6 + [76])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [32]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $61(($0 + [24]), ($8 + [32]), ($8 + [40]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [32])
	*($8 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $162($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [80])
	return $6
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [32])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), $2, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [688])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [736])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [800])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$7 }
	CALL $162(*(($4 + [16])))
	
.LABEL $label$7
	CALL $162($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$10 }
	CALL $162(*(($4 + [16])))
	
.LABEL $label$10
	CALL $162($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [24]))
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $53($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $166($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $161($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $166($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $162($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $163($7)
	return (unreachable)
}

void .FUNC $52 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $161(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $172($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $162(*(($1 + [16])))
	
.LABEL $label$11
	CALL $162($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $162($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1120])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $54($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [992])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $161($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $172($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $162($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $55 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [32]) = (int_64)0
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	CALL eosio_assert([1], [896])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [960])
	*(($2 = ($0 + [64]))) = (int_64)1398362884
	*($0 + [56]) = (int_64)0
	CALL eosio_assert([1], [896])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [960])
	*($0 + [72]) = [0]
	return $0
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [992])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [992])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [992])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [992])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [992])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [992])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [992])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [992])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [992])
	CALL memcpy(($1 + [72]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [992])
	CALL memcpy(($1 + [76]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC $57 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $161(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $172($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $162($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $162($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $173 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $161($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC _Z8isdecnumPKc (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	if ( ($0 == 0) ){ goto $label$6 }
	*(($6 + [24])) = [0]
	*($6 + [16]) = (int_64)0
	$4 = CALL strlen($0)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$5 }
	*($6 + [16]) = ($4 << [1])
	$2 = (($6 + [16]) | [1])
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$5 = [0]
	goto $label$2 
	
.LABEL $label$5
	$1 = (($4 + [16]) & [-16])
	$2 = CALL $161($1)
	*($6 + [16]) = ($1 | [1])
	*($6 + [24]) = $2
	*($6 + [20]) = $4
	
.LABEL $label$4
	CALL memcpy($2, $0, $4)
	
.LABEL $label$3
	$0 = [0]
	*(($2 + $4)) = [0]
	CALL $173($6, ($6 + [16]))
	$5 = [1]
	$1 = ($6 | [1])
	$3 = ($6 + [8])
	
.LOOP $label$8:
	$2 = ($4 & [1])
	$4 = *($6)
	if ( ((uint_32)$0 >= (uint_32)( *($6 + [4]) ? uint_32($4 >> [1]) : $2 )) ){ goto $label$7 }
	$4 = (( *($3) ? $1 : $2 ) + $0)
	$0 = ($0 + [1])
	if ( CALL isdigit(*($4)) ){ goto $label$8 }
	$5 = [0]
	$4 = *($6)
	
.LABEL $label$7
	if ( (($4 & [1]) == 0) ){ goto $label$9 }
	CALL $162(*(($6 + [8])))
	
.LABEL $label$9
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $162(*($6 + [24]))
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [32])
	return $5
	
.LABEL $label$1
	CALL $163(($6 + [16]))
	return (unreachable)
}

void .FUNC _ZN5sicbo16_generateRandNumEyPt (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	*($4 + [8]) = ((int_64)((int_64)((int_64)((int_64)(uint_64)$1 >> (uint_64)(int_64)20) & (int_64)16777215) * (int_64)((int_64)$1 & (int_64)1048575)) + (int_64)(uint_64)$1 >> (uint_64)(int_64)38)) + (int_64)(CASTING int_64)(int_32 ((int_32)CALL tapos_block_num() * (int_32)CALL $fimport$32())))
	CALL sha512(($4 + [8]), [4], ($4 + [16]))
	$3 = [0]
	
.LOOP $label$1:
	*(($2 + $3)) = *((($4 + [16]) + $3))
	$3 = ($3 + [2])
	if ( ((int_32)$3 != (int_32)[60]) ){ goto $label$1 }
	*([0] + [4]) = ($4 + [80])
}

void .FUNC $150 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$6 = *($0)
	$3 = int_32(($7 - $6) >> [4])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$3 }
	$5 = [268435455]
	$2 = ($2 - $6)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$5 = int_32($2 >> [3])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $161(($5 << [4]))
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$1 
	
.LABEL $label$5
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $172($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$7 = ($7 - $6)
	$3 = ($2 + ($3 << [4]))
	$4 = ($3 - $7)
	$1 = ($3 + ($1 << [4]))
	$5 = ($2 + ($5 << [4]))
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($4, $6, $7)
	$6 = *($0)
	
.LABEL $label$7
	*($0) = $4
	*(($0 + [4])) = $1
	*(($0 + [8])) = $5
	if ( ($6 == 0) ){ goto $label$8 }
	CALL $162($6)
	
.LABEL $label$8
	(unreachable)
}

int_32 .FUNC _Z8isdecnumNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($0 + [1])
	$5 = [0]
	$4 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$2:
	$6 = *($0)
	$2 = ($6 & [1])
	if ( $2 ){ goto $label$4 }
	if ( ($5 <= uint_32($6 >> [1])) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)*($3)) ){ goto $label$1 }
	
.LABEL $label$3
	$6 = $1
	if ( ($2 == 0) ){ goto $label$5 }
	$6 = *($4)
	
.LABEL $label$5
	$6 = ($6 + $5)
	$5 = ($5 + [1])
	if ( CALL isdigit(*($6)) ){ goto $label$2 }
	return [0]
	
.LABEL $label$1
	return [1]
}

int_64 .FUNC _ZN5sicbo12gethourtodayEyy (int_32 $0, int_64 $1, int_64 $2)
{
	$2 = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	return (int_64))(((int_64)((int_64)((int_64)$2 * (int_64)86400) + (int_64)((int_64)$1 * (int_64)3600)) + (int_64)$2) - ((uint_64)((int_64)$2 + (int_64)28800) % (uint_64)(int_64)86400))
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $158([4144], $0)
}

void .FUNC _ZN5sicbo17require_offertypeEi (int_32 $0, int_32 $1)
{
	if ( ((int_32)$1 > (int_32)[299]) ){ goto $label$3 }
	if ( ((uint_32)$1 > (uint_32)[222]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_32)$1 <= (int_32)[499]) ){ goto $label$7 }
	if ( ((int_32)$1 <= (int_32)[599]) ){ goto $label$6 }
	if ( ((int_32)$1 > (int_32)[665]) ){ goto $label$4 }
	if ( ((int_32)$1 == (int_32)[600]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[660]) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$7
	if ( ((int_32)$1 > (int_32)[399]) ){ goto $label$5 }
	if ( ((int_32)$1 == (int_32)[300]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[330]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[333]) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[500]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[550]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[555]) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	if ( ((int_32)$1 == (int_32)[400]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[440]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[444]) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_32)$1 == (int_32)[666]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[777]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [3024])
	return 
	
.LABEL $label$1
	$1
}

int_32 .FUNC _ZN5sicbo11timeinrangeEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	$3 = ((uint_64)((uint_64)((int_64)$3 + (int_64)28800) % (uint_64)(int_64)86400) / (uint_64)(int_64)3600)
	return ((uint_64)($3 <= $2) & ((uint_64)$3 >= (uint_64)$1))
}

int_32 .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $159($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [12544])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $159 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [12630]) == 0) ){ goto $label$2 }
	$7 = *([0] + [12632])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [12630]) = [1]
	$7 = ($7 << [16])
	*([0] + [12632]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [12632])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [12632]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [12630]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [12630]) = [1]
	$3 = ($3 << [16])
	*([0] + [12632]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [12632])
	
.LABEL $label$8
	*([0] + [12632]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1440])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1440])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1440])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [1440])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $69($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $64 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $162($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $162($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $162($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $162($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $162($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $162($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $162($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $162($5)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1440])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1440])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1440])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $69(CALL $70($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [1440])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [1440])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1440])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1440])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $161(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $172($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $162($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $162($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [32])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $65($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $54($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $66($4, $1)
	CALL $68(CALL $67(CALL $67($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $62 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $9) / (int_32)[40])
	$8 = ($5 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[40])
	if ( ((uint_32)$9 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($9 << [1])
	$7 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $161(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $172($0)
	
.LABEL $label$1
	*(($9 = ($8 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($9 + [8]) = *($3)
	*($9 + [16 align=4]) = (int_64)0
	*(($3 = ($9 + [24]))) = [0]
	$2 = CALL $161([16])
	*($9 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($9 + [20])) = $5
	*($9 + [28]) = [0]
	*(($9 + [32])) = [0]
	*(($9 + [36])) = [0]
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$6 = ($9 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($9 + [-32])) = *(($2 + [-12]))
	*(($9 + [-40])) = *(($2 + [-20]))
	*(($1 = ($9 + [-24]))) = (int_64)0
	*(($7 = ($9 + [-16]))) = [0]
	$8 = ($2 + [-4])
	*($1) = *($8)
	*(($9 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($7) = *($1)
	*($1) = [0]
	*(($1 = ($9 + [-12]))) = (int_64)0
	*($8) = (int_64)0
	*(($7 = ($9 + [-4]))) = [0]
	$8 = ($2 + [8])
	*($1) = *($8)
	*(($9 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($7) = *($1)
	*($1) = [0]
	*($8) = (int_64)0
	$9 = ($9 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$7 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$7 = $2
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$8 }
	$1 = ([0] - $7)
	$9 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($9 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($9 + [16])) = $2
	CALL $162($2)
	
.LABEL $label$10
	$2 = *($9)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($9 + [4])) = $2
	CALL $162($2)
	
.LABEL $label$11
	$9 = ($9 + [-40])
	if ( ((int_32)($9 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($7 == 0) ){ goto $label$12 }
	CALL $162($7)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC $89 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [56]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1072])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)3879062938829455360)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1008])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1008])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $41(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [992])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [992])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [992])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $87 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [36]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1072])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)3879063169729036288)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1008])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1008])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $86(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [864])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $161([48])) + [32]) = $0
	CALL $88(($8 + [32]), $6)
	*($6 + [40]) = [-1]
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $85(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $162($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $85 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $161(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $172($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $162($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $162($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$9 = (*([0] + [4]) - [16])
	$12 = $9
	*([0] + [4]) = $9
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$8 = ($4 + [200])
	$7 = *($8)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$5 = ($4 + [184])
	$6 = CALL db_lowerbound_i64(*($5), *(($4 + [192])), (int_64)3879063169729036288, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $86($5, $6)
	*($12 + [12]) = [0]
	*($12 + [8]) = $5
	$7 = *(*(CALL $87(($12 + [8])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [200])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [1936])
	*($1) = *($8)
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [24]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$9 = $9
	$3 = ($9 + [-32])
	*([0] + [4]) = $3
	CALL eosio_assert([1], [1440])
	CALL memcpy($3, $1, [8])
	CALL eosio_assert([1], [1440])
	$4 = ($1 + [8])
	CALL memcpy(($9 + [-24]), $4, [8])
	CALL eosio_assert([1], [1440])
	CALL memcpy(($9 + [-16]), ($1 + [16]), [8])
	CALL eosio_assert([1], [1440])
	CALL memcpy(($9 + [-8]), ($1 + [24]), [4])
	$7 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)3879063169729036288, *(*($0 + [8])), $7, $3, [28])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$7 = *(($2 + [8]))
	$10 = *(*(($0 + [8])))
	$11 = *($1)
	*($12 + [8]) = *($4)
	*($1 + [40]) = CALL db_idx64_store($7, (int_64)3879063169729036288, $10, $11, ($12 + [8]))
	*([0] + [4]) = ($12 + [16])
}

void .FUNC $83 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [96])
	*([0] + [4]) = $15
	CALL eosio_assert(((int_32)*($1 + [120]) == (int_32)$0), [1264])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1312])
	*($1 + [48]) = *(*($2))
	$4 = *($2 + [12])
	$3 = *($1)
	*($1 + [56]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($1 + [80]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$14 = *($2 + [4])
	*($1 + [88]) = *($14)
	*(($1 + [96])) = *(($14 + [8]))
	*(($14 = $15) + [64]) = *(*(*($2 + [8]) + [4]) + [8])
	$9 = ($1 + [72])
	$8 = ($1 + [88])
	$7 = ($1 + [80])
	$6 = ($1 + [56])
	$5 = ($1 + [48])
	$10 = *($1 + [72])
	if ( ((uint_64)$10 > (uint_64)(int_64)99999) ){ goto $label$1 }
	*($9) = ((int_64)$10 + (int_64)1)
	$10 = *($4)
	*($14 + [48]) = $4
	*($14 + [56]) = *($2)
	*($14 + [52]) = ($14 + [64])
	*($14 + [88]) = $10
	CALL eosio_assert(((int_64)*($4 + [184]) == (int_64)CALL $fimport$3()), [1872])
	$12 = ($4 + [184])
	*($14) = $12
	*($14 + [4]) = ($14 + [48])
	*($14 + [8]) = ($14 + [88])
	*(($2 = CALL $161([48])) + [32]) = $12
	CALL $84($14, $2)
	*($14 + [80]) = $2
	$10 = *($2)
	*($14) = $10
	$11 = *($2 + [36])
	*($14 + [76]) = $11
	$13 = ($4 + [212])
	$12 = *($13)
	if ( ((uint_32)$12 >= (uint_32)*(($4 + [216]))) ){ goto $label$3 }
	*($12 + [8]) = $10
	*($12 + [16]) = $11
	*($14 + [80]) = [0]
	*($12) = $2
	*($13) = ($12 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $85(($4 + [208]), ($14 + [80]), $14, ($14 + [76]))
	
.LABEL $label$2
	$2 = *($14 + [80])
	*($14 + [80]) = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	CALL $162($2)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [1376])
	$4 = $15
	$2 = ($4 + [-128])
	*([0] + [4]) = $2
	*($14 + [52]) = $2
	*($14 + [48]) = $2
	*($14 + [56]) = ($4 + [-12])
	*($14 + [88]) = ($14 + [48])
	*($14 + [4]) = ($1 + [8])
	*($14) = $1
	*($14 + [8]) = ($1 + [24])
	*($14 + [12]) = ($1 + [40])
	*($14 + [16]) = $5
	*($14 + [20]) = $6
	*($14 + [24]) = ($1 + [60])
	*($14 + [28]) = ($1 + [64])
	*($14 + [32]) = $9
	*($14 + [36]) = $7
	*($14 + [40]) = $8
	*($14 + [44]) = ($1 + [104])
	CALL $76($14, ($14 + [88]))
	CALL db_update_i64(*($1 + [124]), (int_64)0, $2, [116])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*([0] + [4]) = ($14 + [96])
}

void .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [32])
	$11 = $12
	*([0] + [4]) = $12
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$8 = ($4 + [240])
	$7 = *($8)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$5 = ($4 + [224])
	$6 = CALL db_lowerbound_i64(*($5), *(($4 + [232])), (int_64)3879062938829455360, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $41($5, $6)
	*($11 + [12]) = [0]
	*($11 + [8]) = $5
	$7 = *(*(CALL $89(($11 + [8])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [240])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [1936])
	*($1) = *($8)
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	$4 = *($3 + [12])
	*($1 + [24]) = *($4)
	*(($1 + [32])) = *(($4 + [8]))
	*($1 + [40]) = *(*($3 + [16]))
	*($1 + [48]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$12 = $12
	$3 = ($12 + [-64])
	*([0] + [4]) = $3
	*($11 + [12]) = $3
	*($11 + [8]) = $3
	*($11 + [16]) = ($12 + [-12])
	CALL $90(($11 + [8]), $1)
	$7 = *($1)
	*($1 + [56]) = CALL db_store_i64(*($2 + [8]), (int_64)3879062938829455360, *(*($0 + [8])), $7, $3, [52])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$7 = *(($2 + [8]))
	$9 = *(*(($0 + [8])))
	$10 = *($1)
	*($11 + [24]) = *(($1 + [8]))
	*($1 + [60]) = CALL db_idx64_store($7, (int_64)3879062938829455360, $9, $10, ($11 + [24]))
	*([0] + [4]) = ($11 + [32])
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [992])
	CALL memcpy(($0 + [16]), *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [992])
	CALL memcpy(($0 + [24]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC $80 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $161(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $172($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $162($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $162($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [1120])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [4])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $150($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [4]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [992])
	CALL memcpy($7, *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [992])
	CALL memcpy(($7 + [8]), *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)((int_32)($8 - $7) / (int_32)[40]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($7 - $4) / (int_32)[40])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$3 }
	$7 = [107374182]
	$8 = ((int_32)($8 - $4) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$6 }
	$7 = ($8 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$8 = CALL $161(((int_32)$7 * (int_32)[40]))
	goto $label$2 
	
.LABEL $label$5
	$8 = ($0 + [4])
	
.LOOP $label$7:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = (*($8) + [40])
	*($8) = $7
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$8 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $172($0)
	
.LABEL $label$2
	$2 = ($8 + ((int_32)$7 * (int_32)[40]))
	$8 = ($8 + ((int_32)$5 * (int_32)[40]))
	$7 = $8
	
.LOOP $label$8:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = ($7 + [40])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$10 }
	$3 = ([0] - $4)
	$1 = ($1 + [-20])
	
.LOOP $label$11:
	*(($8 + [-32])) = *(($1 + [-12]))
	*(($8 + [-40])) = *(($1 + [-20]))
	*(($4 = ($8 + [-24]))) = (int_64)0
	*(($5 = ($8 + [-16]))) = [0]
	$6 = ($1 + [-4])
	*($4) = *($6)
	*(($8 + [-20])) = *($1)
	$4 = ($1 + [4])
	*($5) = *($4)
	*($4) = [0]
	*(($4 = ($8 + [-12]))) = (int_64)0
	*($6) = (int_64)0
	*(($5 = ($8 + [-4]))) = [0]
	$6 = ($1 + [8])
	*($4) = *($6)
	*(($8 + [-8])) = *(($1 + [12]))
	$4 = ($1 + [16])
	*($5) = *($4)
	*($4) = [0]
	*($6) = (int_64)0
	$8 = ($8 + [-40])
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $3) != (int_32)[-20]) ){ goto $label$11 }
	$4 = *(($0 + [4]))
	$5 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$5 = $4
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $7
	*(($0 + [8])) = $2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$12 }
	$1 = ([0] - $5)
	$7 = ($4 + [-24])
	
.LOOP $label$13:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$14 }
	*(($7 + [16])) = $8
	CALL $162($8)
	
.LABEL $label$14
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$15 }
	*(($7 + [4])) = $8
	CALL $162($8)
	
.LABEL $label$15
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $1) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($5 == 0) ){ goto $label$1 }
	CALL $162($5)
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $145 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)1398362884
	CALL eosio_assert([1], [896])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [960])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [12]) = $1
	*($6 + [8]) = $1
	*($6 + [16]) = ($1 + $2)
	*($6 + [24]) = ($6 + [8])
	*($6 + [36]) = ($0 + [8])
	*($6 + [32]) = $0
	*($6 + [40]) = ($0 + [16])
	*($6 + [44]) = ($0 + [32])
	CALL $146(($6 + [32]), ($6 + [24]))
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $144 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$2 = *($1 + [8])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [16]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	CALL eosio_assert(((int_64)$2 == (int_64)$7), [3520])
	$2 = *($1)
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [32]
	$7 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$8 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$3 = ($3 + [165])
	goto $label$9 
	
.LABEL $label$10
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$8
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$7 }
	CALL eosio_assert(((int_64)$2 == (int_64)$7), [3536])
	$4 = *($1 + [28])
	CALL $145($0, $4, (*(($1 + [32])) - $4))
}

void .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)int_32(($8 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$4 = int_32(($7 - $5) >> [4])
	$7 = ($4 + $1)
	if ( ((uint_32)$7 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$8 = ($8 - $5)
	if ( ((uint_32)int_32($8 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($8 >> [3])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$8 = CALL $161(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $7
	$8 = $1
	
.LOOP $label$7:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$7 }
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $172($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$2 = ($8 + ($6 << [4]))
	$8 = ($8 + ($4 << [4]))
	$6 = $8
	$7 = $1
	
.LOOP $label$8:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$3 = ($8 + ($1 << [4]))
	$6 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$10 }
	$4 = ([0] - $6)
	$6 = ($7 + [-16])
	
.LOOP $label$11:
	*(($8 + [-16])) = *($6)
	*(($7 = ($8 + [-12]))) = (int_64)0
	*(($1 = ($8 + [-4]))) = [0]
	$5 = ($6 + [4])
	*($7) = *($5)
	*(($8 + [-8])) = *(($6 + [8]))
	$7 = ($6 + [12])
	*($1) = *($7)
	*($7) = [0]
	*($5) = (int_64)0
	$8 = ($8 + [-16])
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $4) != (int_32)[-16]) ){ goto $label$11 }
	$6 = *(($0 + [4]))
	$1 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$1 = $6
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$12 }
	$7 = ([0] - $1)
	$6 = ($6 + [-12])
	
.LOOP $label$13:
	$8 = *($6)
	if ( ($8 == 0) ){ goto $label$14 }
	*(($6 + [4])) = $8
	CALL $162($8)
	
.LABEL $label$14
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $7) != (int_32)[-12]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $162($1)
	
.LABEL $label$15
	(unreachable)
}

void .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [992])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $51(*($1), *($0 + [12]))
}

int_32 .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [1120])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$6 = *($1)
	$2 = *($1 + [4])
	$7 = ((int_32)($2 - $6) / (int_32)[40])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$7) ){ goto $label$3 }
	CALL $148($1, ($4 - $7))
	$2 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$7) ){ goto $label$2 }
	$4 = ((int_32)$4 * (int_32)[40])
	$3 = ($6 + $4)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$4 }
	$6 = (([0] - $6) - $4)
	$4 = ($2 + [-24])
	
.LOOP $label$5:
	$7 = *(($4 + [12]))
	if ( ($7 == 0) ){ goto $label$6 }
	*(($4 + [16])) = $7
	CALL $162($7)
	
.LABEL $label$6
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [4])) = $7
	CALL $162($7)
	
.LABEL $label$7
	$4 = ($4 + [-40])
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $3
	$2 = $3
	
.LABEL $label$2
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	$4 = ($0 + [4])
	
.LOOP $label$9:
	$6 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($6) - *($4)) > (uint_32)[7]), [992])
	CALL memcpy($7, *($4), [8])
	$3 = (*($4) + [8])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[7]), [992])
	CALL memcpy(($7 + [8]), *($4), [8])
	*($4) = (*($4) + [8])
	CALL $53(CALL $149($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$9 }
	
.LABEL $label$8
	return $0
}

int_32 .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [992])
	CALL memcpy($1, *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [992])
	CALL memcpy(($1 + [4]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [992])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	$6 = [0]
	$5 = (int_64)0
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *(($0 + [8]))), [1120])
	$7 = ($0 + [4])
	$4 = *($7)
	$2 = *($4)
	$4 = ($4 + [1])
	*($7) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$1 }
	*($1 + [12]) = $5
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)*($3) != (int_32)$4), [992])
	$4 = ($0 + [4])
	CALL memcpy(($1 + [16]), *($4), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	$7 = [0]
	$5 = (int_64)0
	
.LOOP $label$2:
	CALL eosio_assert(($6 <= *($3)), [1120])
	$6 = *($4)
	$2 = *($6)
	$6 = ($6 + [1])
	*($4) = $6
	$7 = ($7 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $7)) | (int_64)$5)
	$7 = ($7 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$2 }
	*($1 + [20]) = $5
	return $0
}

int_32 .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0) = *($1)
	*(($0 + [8])) = *(($1 + [8]))
	*($0 + [16 align=4]) = (int_64)0
	*(($0 + [24])) = [0]
	$4 = (*(($1 + [20])) - *($1 + [16]))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	$4 = CALL $161($4)
	*(($0 + [16])) = $4
	*(($0 + [24])) = ($4 + ($5 << [4]))
	*(($5 = ($0 + [20]))) = $4
	$2 = *(($1 + [16]))
	$3 = (*(($1 + [20])) - $2)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($4, $2, $3)
	*($5) = (*($5) + $3)
	
.LABEL $label$3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$4 = (*(($1 + [32])) - *($1 + [28]))
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$1 }
	$5 = CALL $161($4)
	*(($0 + [28])) = $5
	*(($0 + [36])) = ($5 + $4)
	*(($4 = ($0 + [32]))) = $5
	$3 = *(($1 + [28]))
	$1 = (*(($1 + [32])) - $3)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($5, $3, $1)
	*($4) = (*($4) + $1)
	
.LABEL $label$4
	return $0
	
.LABEL $label$2
	CALL $172(($0 + [16]))
	
.LABEL $label$1
	CALL $172(($0 + [28]))
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1120])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$3 = *($1)
	$7 = *($1 + [4])
	$5 = int_32(($7 - $3) >> [4])
	$4 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$3 }
	CALL $147($1, ($4 - $5))
	$7 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$5) ){ goto $label$2 }
	$4 = ($4 << [4])
	$2 = ($3 + $4)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$3 = (([0] - $3) - $4)
	$4 = ($7 + [-12])
	
.LOOP $label$5:
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [4])) = $5
	CALL $162($5)
	
.LABEL $label$6
	$4 = ($4 + [-16])
	if ( ((int_32)($4 + $3) != (int_32)[-12]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $2
	$7 = $2
	
.LABEL $label$2
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$7 }
	$3 = ($0 + [8])
	
.LOOP $label$8:
	$5 = ($0 + [4])
	CALL eosio_assert(((uint_32)(*($3) - *($5)) > (uint_32)[1]), [992])
	CALL memcpy($4, *($5), [2])
	*($5) = (*($5) + [2])
	CALL $53($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$7
	return $0
}

int_32 .FUNC $72 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [896])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [960])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [896])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [960])
	*(($2 = ($0 + [96]))) = (int_64)1398362884
	*($0 + [88]) = (int_64)0
	CALL eosio_assert([1], [896])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [960])
	*(($2 = ($0 + [112]))) = (int_64)1398362884
	*($0 + [104]) = (int_64)0
	CALL eosio_assert([1], [896])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [960])
	return $0
}

void .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [992])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [992])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [992])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [992])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [992])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [992])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [44])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($2, *($0 + [4]), [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]), [992])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [1440])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1440])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1440])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [864])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $161([136])
	CALL $72($6)
	*($6 + [120]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [24])
	*($8 + [44]) = ($6 + [40])
	*($8 + [48]) = ($6 + [48])
	*($8 + [52]) = ($6 + [56])
	*($8 + [56]) = ($6 + [60])
	*($8 + [60]) = ($6 + [64])
	*($8 + [64]) = ($6 + [72])
	*($8 + [68]) = ($6 + [80])
	*($8 + [72]) = ($6 + [88])
	*($8 + [76]) = ($6 + [104])
	CALL $73(($8 + [32]), ($8 + [24]))
	*($6 + [124]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [124])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $74(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $162($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [80])
	return $6
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1440])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1440])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1440])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [44])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), $2, [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	CALL eosio_assert(((int_32)(*($0 + [8]) - $1) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC _ZN5sicbo10arenadelayEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [112])
	*([0] + [4]) = $10
	CALL require_auth(*($0))
	$7 = (int_64)0
	$9 = (int_64)59
	$4 = [32]
	$5 = (int_64)0
	
.LOOP $label$1:
	$6 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = (int_64)59
	$4 = [528]
	$8 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$7 > (uint_64)(int_64)10) ){ goto $label$10 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$2 = ($2 + [165])
	goto $label$8 
	
.LABEL $label$10
	$9 = (int_64)0
	if ( ((int_64)$7 == (int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$6
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)-5)
	$8 = ((int_64)$9 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)13) ){ goto $label$5 }
	*($10 + [96]) = $1
	*($10 + [104]) = ((int_64)$8 + (int_64)$5)
	$7 = CALL current_time()
	*(($10 + [60])) = [0]
	*(($10 + [64])) = [0]
	*($10 + [44]) = [0]
	*($10 + [48]) = [0]
	*($10 + [52]) = [0]
	*($10 + [56]) = [0]
	*($10 + [32]) = ((CASTING uint_32)(uint_64 ((uint_64)$7 / (uint_64)(int_64)1000000)) + [60])
	*($10 + [68]) = [0]
	*(($10 + [72])) = [0]
	*(($10 + [76])) = [0]
	*($10 + [80]) = [0]
	*(($10 + [84])) = [0]
	*(($10 + [88])) = [0]
	$3 = ($10 + [68])
	$8 = *($0)
	$7 = (int_64)0
	$6 = (int_64)59
	$4 = [1472]
	$5 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$7 > (uint_64)(int_64)5) ){ goto $label$16 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$2 = ($2 + [165])
	goto $label$14 
	
.LABEL $label$16
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$12
	$4 = ($4 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$5 = ((int_64)$9 | (int_64)$5)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$11 }
	*($10 + [24]) = $5
	*($10 + [16]) = $8
	$7 = (int_64)0
	$6 = (int_64)59
	$4 = [528]
	$5 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$7 > (uint_64)(int_64)10) ){ goto $label$22 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$2 = ($2 + [165])
	goto $label$20 
	
.LABEL $label$22
	$9 = (int_64)0
	if ( ((int_64)$7 == (int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$18
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)-5)
	$5 = ((int_64)$9 | (int_64)$5)
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)13) ){ goto $label$17 }
	*($10 + [8]) = $5
	CALL $62($3, ($10 + [16]), $0, ($10 + [8]), $10)
	*(($10 + [52])) = (int_64))($1 - ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
	$7 = *($0)
	CALL $63(($10 + [16]), ($10 + [32]))
	$4 = *($10 + [16])
	CALL send_deferred(($10 + [96]), $7, $4, (*($10 + [20]) - $4), [0])
	$4 = *($10 + [16])
	if ( ($4 == 0) ){ goto $label$23 }
	*($10 + [20]) = $4
	CALL $162($4)
	
.LABEL $label$23
	CALL $64(($10 + [32]))
	*([0] + [4]) = ($10 + [112])
}

void .FUNC $74 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $161(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $172($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $162($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $162($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [864])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $161([80])
	CALL $78($6)
	*($6 + [64]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [16])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [32])
	*($8 + [44]) = ($6 + [48])
	CALL $79(($8 + [32]), ($8 + [24]))
	*($6 + [68]) = $1
	*($8 + [24]) = $6
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($8 + [32]) = $5)
	$7 = *($6 + [68])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $80(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $162($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $78 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [896])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [960])
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [896])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [960])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [896])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [960])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [896])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [960])
	return $0
}

void .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [992])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [992])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [992])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($0, *($2 + [4]), [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $1) > (uint_32)[7]), [992])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [80])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$8 = ($4 + [160])
	$7 = *($8)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$5 = ($4 + [144])
	$6 = CALL db_lowerbound_i64(*($5), *(($4 + [152])), (int_64)3879063041846280192, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $71($5, $6)
	*($9 + [36]) = [0]
	*($9 + [32]) = $5
	$7 = *(*(CALL $101(($9 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [160])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [1936])
	*($1) = *($8)
	$4 = *($3 + [4])
	*($1 + [8]) = *($4)
	*(($1 + [16])) = *(($4 + [8]))
	$4 = *(*($3 + [8]) + [4])
	*($1 + [24]) = *($4)
	*(($1 + [32])) = *(($4 + [8]))
	*($1 + [40]) = (int_64)0
	*($1 + [48]) = (int_64)0
	$7 = CALL current_time()
	$3 = *($3 + [12])
	*($1 + [64]) = (int_64)1
	*($1 + [72]) = (int_64)0
	*(($1 + [96])) = (int_64)340414906884
	$3 = *($3)
	*($1 + [60]) = [0]
	*($1 + [56]) = ($3 + (CASTING uint_32)(uint_64 ((uint_64)$7 / (uint_64)(int_64)1000000)))
	*(($1 + [112])) = (int_64)1397703940
	$10 = $10
	$3 = ($10 + [-128])
	*([0] + [4]) = $3
	*($9 + [12]) = $3
	*($9 + [8]) = $3
	*($9 + [16]) = ($10 + [-12])
	*($9 + [24]) = ($9 + [8])
	*($9 + [36]) = ($1 + [8])
	*($9 + [32]) = $1
	*($9 + [40]) = ($1 + [24])
	*($9 + [44]) = ($1 + [40])
	*($9 + [48]) = ($1 + [48])
	*($9 + [52]) = ($1 + [56])
	*($9 + [56]) = ($1 + [60])
	*($9 + [60]) = ($1 + [64])
	*($9 + [64]) = ($1 + [72])
	*($9 + [68]) = ($1 + [80])
	*($9 + [72]) = ($1 + [88])
	*($9 + [76]) = ($1 + [104])
	CALL $76(($9 + [32]), ($9 + [24]))
	$7 = *($1)
	*($1 + [124]) = CALL db_store_i64(*($2 + [8]), (int_64)3879063041846280192, *(*($0 + [8])), $7, $3, [116])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [80])
}

void .FUNC $99 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [80])
	$14 = $15
	*([0] + [4]) = $15
	CALL eosio_assert(((int_32)*($1 + [120]) == (int_32)$0), [1264])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1312])
	$12 = *($2 + [8])
	$3 = *($1)
	$8 = CALL current_time()
	$13 = *(*($2) + [4])
	$7 = *($13 + [60])
	*($1 + [60]) = [0]
	*($1 + [56]) = (((CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000)) - $7) + *($13 + [56]))
	$6 = ($1 + [48])
	$5 = ($1 + [60])
	$4 = ($1 + [56])
	if ( (int_64)(*($1 + [48]) == 0) ){ goto $label$2 }
	$7 = ($1 + [24])
	$12 = ($1 + [8])
	goto $label$1 
	
.LABEL $label$2
	$8 = *(*($2 + [4]) + [8])
	*(($14 + [64])) = [0]
	*($14 + [56]) = (int_64)0
	$9 = *($12)
	*($14 + [32]) = $9
	*($14 + [48]) = (int_64)-1
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($14 + [40]) = $8)
	$13 = CALL db_find_i64($9, $8, (int_64)5455799419163115520, $8)
	if ( ((int_32)$13 <= (int_32)[-1]) ){ goto $label$4 }
	$13 = CALL $75(($14 + [32]), $13)
	CALL eosio_assert(((int_32)*($13 + [64]) == (int_32)($14 + [32])), [1136])
	$11 = ($14 + [56])
	$12 = *($14 + [56])
	goto $label$3 
	
.LABEL $label$4
	$11 = ($14 + [56])
	$12 = [0]
	$13 = [0]
	
.LABEL $label$3
	*($1 + [24]) = *($13)
	*(($1 + [32])) = *(($13 + [8]))
	$13 = *(($2 + [4]))
	*($1 + [8]) = *($13)
	*(($1 + [16])) = *(($13 + [8]))
	if ( ($12 == 0) ){ goto $label$5 }
	$7 = $12
	$10 = ($14 + [60])
	$13 = *($10)
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$6 }
	
.LOOP $label$7:
	$13 = ($13 + [-24])
	$7 = *($13)
	*($13) = [0]
	if ( ($7 == 0) ){ goto $label$8 }
	CALL $162($7)
	
.LABEL $label$8
	if ( ((int_32)$12 != (int_32)$13) ){ goto $label$7 }
	$7 = *($11)
	
.LABEL $label$6
	*($10) = $12
	CALL $162($7)
	
.LABEL $label$5
	$12 = ($1 + [8])
	$7 = ($1 + [24])
	
.LABEL $label$1
	*(($1 + [56])) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + *(*($2 + [12])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [1376])
	$2 = $15
	$13 = ($2 + [-128])
	*([0] + [4]) = $13
	*($14 + [12]) = $13
	*($14 + [8]) = $13
	*($14 + [16]) = ($2 + [-12])
	*($14 + [24]) = ($14 + [8])
	*($14 + [36]) = $12
	*($14 + [32]) = $1
	*($14 + [40]) = $7
	*($14 + [44]) = ($1 + [40])
	*($14 + [48]) = $6
	*($14 + [52]) = $4
	*($14 + [56]) = $5
	*($14 + [60]) = ($1 + [64])
	*($14 + [64]) = ($1 + [72])
	*($14 + [68]) = ($1 + [80])
	*($14 + [72]) = ($1 + [88])
	*($14 + [76]) = ($1 + [104])
	CALL $76(($14 + [32]), ($14 + [24]))
	CALL db_update_i64(*($1 + [124]), (int_64)0, $13, [116])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($14 + [80])
}

void .FUNC $94 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $161(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $172($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $161([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $54(($8 + [28]), [25])
	$2 = *($2)
	$1 = *($8 + [28])
	*($9 + [4]) = $1
	*($9) = $1
	*($9 + [8]) = $2
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	CALL $95(($9 + [24]), ($9 + [16]))
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $162($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $162($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $162($6)
	
.LABEL $label$12
	*([0] + [4]) = ($9 + [32])
	(unreachable)
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), ($0 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [1440])
	CALL memcpy(*($2 + [4]), ($0 + [16]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$1 = *($1)
	CALL eosio_assert(((int_32)(*($1 + [8]) - *($1 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($1 + [4]), ($0 + [24]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

int_32 .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1440])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1440])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [992])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [992])
	CALL memcpy(($0 + [16]), *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [992])
	CALL memcpy(($0 + [20]), *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $91 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)3879062938829455360, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [52]) == (int_32)$4), [1136])
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$8 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)3879062938829455360, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$2 = CALL $41($4, $8)
	CALL eosio_assert(((int_32)*($2 + [52]) == (int_32)$4), [1136])
	
.LABEL $label$4
	*($2 + [60]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $92 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $161([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [24])
	$1 = ( *(($4 + [28])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [24])
	$2 = (CASTING uint_64)(uint_32 $1)
	$5 = ($4 + [24])
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $54($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9) = $8
	*($9 + [8]) = $1
	CALL eosio_assert(((int_32)($1 - $8) > (int_32)[7]), [1440])
	CALL memcpy($8, $4, [8])
	$6 = ($8 + [8])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[7]), [1440])
	CALL memcpy($6, ($4 + [8]), [8])
	$6 = ($8 + [16])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[7]), [1440])
	CALL memcpy($6, ($4 + [16]), [8])
	*($9 + [4]) = ($8 + [24])
	CALL $96($9, $5)
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $54($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [1440])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [1440])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $69(CALL $70($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $138 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-4354846489561792512, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [80]) == (int_32)$4), [1136])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $45($4, CALL $fimport$6(*($4), *($4 + [8]), (int_64)-4354846489561792512, $5))
	CALL eosio_assert(((int_32)*($2 + [80]) == (int_32)$4), [1136])
	
.LABEL $label$4
	*($2 + [88]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $139 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $139($0, *($1))
	CALL $139($0, *($1 + [4]))
	CALL $162($1)
	
.LABEL $label$1
}

void .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$7 = (*([0] + [4]) - [16])
	$8 = $7
	*([0] + [4]) = $7
	$5 = *($0 + [4])
	*($1) = *(*($5))
	$2 = *($0)
	$3 = ($1 + [8])
	CALL $164($3, *($5 + [4]))
	$5 = *($1 + [8])
	$4 = ( *(($1 + [12])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($4 + [8])
	$6 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$7 = CALL malloc($5)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($7 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$2
	*($8) = $7
	*($8 + [8]) = ($7 + $5)
	CALL eosio_assert(((int_32)$5 > (int_32)[7]), [1440])
	CALL memcpy($7, $1, [8])
	*($8 + [4]) = ($7 + [8])
	CALL $96($8, $3)
	$6 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($2 + [8]), (int_64)-4354846573189230592, *(*($0 + [8])), $6, $7, $5)
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL free($7)
	
.LABEL $label$4
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$5 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [1440])
	CALL memcpy(*($0 + [4]), ($1 + [76]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC _ZN5sicbo7str2eosENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN5eosio11symbol_typeE (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [896])
	$5 = [0]
	$4 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [960])
	if ( (*($2) & [1]) ){ goto $label$7 }
	$5 = ($2 + [1])
	goto $label$6 
	
.LABEL $label$7
	$5 = *($2 + [8])
	
.LABEL $label$6
	$4 = (CASTING int_64)(int_32 CALL atoi($5))
	*($0) = $4
	if ( ((int_64)$3 != (int_64)293455873288) ){ goto $label$8 }
	*($0) = ((int_64)$4 * (int_64)10000)
	
.LABEL $label$8
	*(($0 + [8])) = $3
}

void .FUNC $133 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$7 = *($1 + [4])
	if ( ($7 == 0) ){ goto $label$3 }
	$8 = ($1 + [4])
	$6 = *($2)
	
.LOOP $label$4:
	$2 = *($7 + [16])
	if ( ((int_32)$6 >= (int_32)$2) ){ goto $label$6 }
	$2 = *($7)
	if ( $2 ){ goto $label$5 }
	goto $label$2 
	
.LABEL $label$6
	if ( ((int_32)$2 >= (int_32)$6) ){ goto $label$1 }
	$8 = ($7 + [4])
	$2 = *($7 + [4])
	if ( ($2 == 0) ){ goto $label$1 }
	$7 = $8
	
.LABEL $label$5
	$8 = $7
	$7 = $2
	goto $label$4 
	
.LABEL $label$3
	$7 = ($1 + [4])
	
.LABEL $label$2
	$8 = $7
	
.LABEL $label$1
	$2 = [0]
	$6 = *($8)
	if ( $6 ){ goto $label$7 }
	*(($6 = CALL $161([40])) + [24]) = (int_64)0
	*($6 + [16]) = *(*($4))
	*($6 + [32]) = (int_64)1398362884
	CALL eosio_assert([1], [896])
	$9 = (int_64)5462355
	$2 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$4 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$4 = [0]
	
.LABEL $label$8
	CALL eosio_assert($4, [960])
	*($6 + [8]) = $7
	*($6) = (int_64)0
	*($8) = $6
	$7 = *(*($1))
	if ( ($7 == 0) ){ goto $label$14 }
	*($1) = $7
	$7 = *($8)
	goto $label$13 
	
.LABEL $label$14
	$7 = $6
	
.LABEL $label$13
	CALL $122(*($1 + [4]), $7)
	$2 = [1]
	*($1 + [8]) = (*($1 + [8]) + [1])
	
.LABEL $label$7
	*($0 + [4]) = $2
	*($0) = $6
}

void .FUNC $134 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = *($0)
	$9 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $161(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $172($0)
	
.LABEL $label$1
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$9 = ($8 + ((int_32)$9 * (int_32)[40]))
	$8 = CALL $103($9, $1, *($2), *($3), $4)
	$6 = ($8 + [40])
	$7 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$6 }
	$4 = ([0] - $7)
	$7 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($7 + [-12]))
	*(($8 + [-40])) = *(($7 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($2 = ($8 + [-16]))) = [0]
	$3 = ($7 + [-4])
	*($1) = *($3)
	*(($8 + [-20])) = *($7)
	$1 = ($7 + [4])
	*($2) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($3) = (int_64)0
	*(($2 = ($8 + [-4]))) = [0]
	$3 = ($7 + [8])
	*($1) = *($3)
	*(($8 + [-8])) = *(($7 + [12]))
	$8 = ($7 + [16])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$9 = ($9 + [-40])
	$8 = $9
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $4) != (int_32)[-20]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $7
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	$9 = ([0] - $1)
	$7 = ($7 + [-24])
	
.LOOP $label$9:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $162($8)
	
.LABEL $label$10
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$11 }
	*(($7 + [4])) = $8
	CALL $162($8)
	
.LABEL $label$11
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $162($1)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [992])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [992])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [992])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $51(*($1), ($0 + [32]))
}

void .FUNC $136 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $173(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $173(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $162(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $162(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

void .FUNC _ZN5sicbo14_split_batchidENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPy (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [48])
	*([0] + [4]) = $11
	CALL $173(($11 + [32]), $1)
	if ( ($2 == 0) ){ goto $label$1 }
	*($2) = (int_64)0
	$10 = *($11 + [32])
	$8 = (($11 + [32]) | [1])
	$6 = *($11 + [40])
	$7 = *($11 + [36])
	$1 = CALL strlen([2848])
	if ( ($1 == 0) ){ goto $label$2 }
	$3 = ($10 & [1])
	$10 = ( $7 ? uint_32($10 >> [1]) : $3 )
	if ( ((int_32)$10 < (int_32)$1) ){ goto $label$1 }
	$3 = ( $6 ? $8 : $3 )
	$6 = ($3 + $10)
	$7 = $3
	
.LOOP $label$3:
	$10 = (($10 - $1) + [1])
	if ( ($10 == 0) ){ goto $label$1 }
	$10 = CALL memchr($7, [45], $10)
	if ( ($10 == 0) ){ goto $label$1 }
	if ( (CALL memcmp($10, [2848], $1) == 0) ){ goto $label$4 }
	$7 = ($10 + [1])
	$10 = ($6 - $7)
	if ( ((int_32)$10 >= (int_32)$1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$1 }
	if ( ((int_32)($10 - $3) == (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = *($11 + [32])
	$3 = ($11 + [40])
	$6 = *($3)
	$4 = *($11 + [36])
	$1 = [0]
	$10 = CALL strlen([2848])
	if ( ($10 == 0) ){ goto $label$5 }
	$7 = ( $4 ? uint_32($7 >> [1]) : $1 )
	$1 = ($7 & [1])
	$5 = ( $6 ? $8 : $1 )
	$6 = ($5 + $7)
	$1 = $6
	if ( ((int_32)$7 < (int_32)$10) ){ goto $label$6 }
	$1 = $5
	
.LOOP $label$8:
	$7 = (($7 - $10) + [1])
	if ( ($7 == 0) ){ goto $label$7 }
	$1 = CALL memchr($1, [45], $7)
	if ( ($1 == 0) ){ goto $label$7 }
	if ( (CALL memcmp($1, [2848], $10) == 0) ){ goto $label$6 }
	$1 = ($1 + [1])
	$7 = ($6 - $1)
	if ( ((int_32)$7 >= (int_32)$10) ){ goto $label$8 }
	
.LABEL $label$7
	$1 = $6
	
.LABEL $label$6
	$1 = ( [-1] ? ($1 - $5) : ((int_32)$1 == (int_32)$6) )
	
.LABEL $label$5
	CALL $174(($11 + [16]), ($11 + [32]), [0], $1, ($11 + [32]))
	$1 = *($11 + [32])
	$6 = *($3)
	$3 = *($11 + [36])
	$7 = [1]
	$10 = CALL strlen([2848])
	if ( ($10 == 0) ){ goto $label$9 }
	$7 = ( $3 ? uint_32($1 >> [1]) : $7 )
	$7 = ($1 & [1])
	$8 = ( $6 ? $8 : $7 )
	$6 = ($8 + $7)
	$1 = $6
	if ( ((int_32)$7 < (int_32)$10) ){ goto $label$10 }
	$1 = $8
	
.LOOP $label$12:
	$7 = (($7 - $10) + [1])
	if ( ($7 == 0) ){ goto $label$11 }
	$1 = CALL memchr($1, [45], $7)
	if ( ($1 == 0) ){ goto $label$11 }
	if ( (CALL memcmp($1, [2848], $10) == 0) ){ goto $label$10 }
	$1 = ($1 + [1])
	$7 = ($6 - $1)
	if ( ((int_32)$7 >= (int_32)$10) ){ goto $label$12 }
	
.LABEL $label$11
	$1 = $6
	
.LABEL $label$10
	$7 = ( [0] ? (([1] - $8) + $1) : ((int_32)$1 == (int_32)$6) )
	
.LABEL $label$9
	$1 = [0]
	CALL $164(($11 + [32]), CALL $171(($11 + [32]), [0], $7))
	CALL $173($11, ($11 + [16]))
	$6 = ($11 | [1])
	$8 = ($11 + [8])
	
.LOOP $label$16:
	$7 = ($10 & [1])
	$10 = *($11)
	if ( ((uint_32)$1 >= (uint_32)( *($11 + [4]) ? uint_32($10 >> [1]) : $7 )) ){ goto $label$15 }
	$10 = (( *($8) ? $6 : $7 ) + $1)
	$1 = ($1 + [1])
	if ( CALL isdigit(*($10)) ){ goto $label$16 }
	$1 = [0]
	if ( (*($11) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$1 = [1]
	if ( (($10 & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $162(*(($11 + [8])))
	
.LABEL $label$13
	if ( ($1 == 0) ){ goto $label$17 }
	$9 = CALL atoll(( *($11 + [24]) ? (($11 + [16]) | [1]) : (*($11 + [16]) & [1]) ))
	*($2) = $9
	if ( ((int_64)$9 == (int_64)1) ){ goto $label$18 }
	if ( ((int_64)$9 != (int_64)10) ){ goto $label$17 }
	
.LABEL $label$18
	if ( ((*($11 + [16]) & [1]) == 0) ){ goto $label$1 }
	CALL $162(*(($11 + [24])))
	goto $label$1 
	
.LABEL $label$17
	if ( ((*($11 + [16]) & [1]) == 0) ){ goto $label$1 }
	CALL $162(*($11 + [24]))
	
.LABEL $label$1
	if ( ((*($11 + [32]) & [1]) == 0) ){ goto $label$19 }
	CALL $162(*($11 + [40]))
	
.LABEL $label$19
	*([0] + [4]) = ($11 + [48])
}

void .FUNC $181 ()
{
	(unreachable)
}

void .FUNC _ZN5sicbo11_getWinsMapEPi (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0 + [4]) = [0]
	$7 = ($0 + [4])
	*($0) = $7
	$3 = *($2 + [8])
	$6 = *($2)
	$8 = *($2 + [4])
	$4 = (($8 + $6) + $3)
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$15 }
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$15 }
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$14 }
	*(($8 + [20])) = [1]
	goto $label$4 
	
.LABEL $label$15
	if ( ((uint_32)($4 + [-4]) > (uint_32)[6]) ){ goto $label$18 }
	$6 = *($7)
	if ( $6 ){ goto $label$17 }
	*(($6 = CALL $161([24]))) = (int_64)0
	*(($8 = ($0 + [4]))) = $6
	*($6 + [20]) = [0]
	*($6 + [16]) = [0]
	*($6 + [8]) = $7
	$3 = *(*($0))
	if ( ($3 == 0) ){ goto $label$19 }
	*($0) = $3
	
.LABEL $label$19
	CALL $122(*($8), $6)
	*(($8 = ($0 + [8]))) = (*($8) + [1])
	goto $label$17 
	
.LABEL $label$18
	$6 = [0]
	if ( ((uint_32)($4 + [-11]) > (uint_32)[6]) ){ goto $label$16 }
	$6 = *($7)
	if ( $6 ){ goto $label$17 }
	*(($6 = CALL $161([24]))) = (int_64)0
	*(($8 = ($0 + [4]))) = $6
	*($6 + [20]) = [0]
	*($6 + [16]) = [1]
	*($6 + [8]) = $7
	$3 = *(*($0))
	if ( ($3 == 0) ){ goto $label$20 }
	*($0) = $3
	
.LABEL $label$20
	CALL $122(*($8), $6)
	*(($8 = ($0 + [8]))) = (*($8) + [1])
	
.LABEL $label$17
	*(($6 + [20])) = [1]
	$6 = *($7)
	
.LABEL $label$16
	if ( ($4 & [1]) ){ goto $label$21 }
	if ( ($6 == 0) ){ goto $label$13 }
	$3 = $7
	
.LOOP $label$22:
	$8 = *($6 + [16])
	if ( ((int_32)$8 < (int_32)[3]) ){ goto $label$24 }
	$3 = $6
	$8 = *($6)
	if ( $8 ){ goto $label$23 }
	goto $label$11 
	
.LABEL $label$24
	if ( ((int_32)$8 == (int_32)[2]) ){ goto $label$10 }
	$3 = ($6 + [4])
	$8 = *($6 + [4])
	if ( ($8 == 0) ){ goto $label$10 }
	
.LABEL $label$23
	$6 = $8
	goto $label$22 
	
.LABEL $label$21
	if ( ($6 == 0) ){ goto $label$12 }
	$3 = $7
	
.LOOP $label$25:
	$8 = *($6 + [16])
	if ( ((int_32)$8 < (int_32)[4]) ){ goto $label$27 }
	$3 = $6
	$8 = *($6)
	if ( $8 ){ goto $label$26 }
	goto $label$8 
	
.LABEL $label$27
	if ( ((int_32)$8 == (int_32)[3]) ){ goto $label$7 }
	$3 = ($6 + [4])
	$8 = *($6 + [4])
	if ( ($8 == 0) ){ goto $label$7 }
	
.LABEL $label$26
	$6 = $8
	goto $label$25 
	
.LABEL $label$14
	*(($8 = CALL $161([24]))) = (int_64)0
	*(($3 = ($0 + [4]))) = $8
	*($8 + [20]) = [0]
	*($8 + [16]) = ((int_32)$6 * (int_32)[111])
	*($8 + [8]) = $7
	$6 = *(*($0))
	if ( ($6 == 0) ){ goto $label$28 }
	*($0) = $6
	
.LABEL $label$28
	CALL $122(*($3), $8)
	*($8 + [20]) = [1]
	*(($6 = ($0 + [8]))) = (*($6) + [1])
	$6 = *($3)
	if ( ($6 == 0) ){ goto $label$4 }
	$3 = $7
	
.LOOP $label$29:
	$8 = *($6 + [16])
	if ( ((int_32)$8 < (int_32)[778]) ){ goto $label$31 }
	$3 = $6
	$8 = *($6)
	if ( $8 ){ goto $label$30 }
	goto $label$5 
	
.LABEL $label$31
	if ( ((int_32)$8 == (int_32)[777]) ){ goto $label$3 }
	$3 = ($6 + [4])
	$8 = *($6 + [4])
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$30
	$6 = $8
	goto $label$29 
	
.LABEL $label$13
	$6 = $7
	$3 = $7
	$8 = *($3)
	if ( $8 ){ goto $label$1 }
	goto $label$9 
	
.LABEL $label$12
	$6 = $7
	$3 = $7
	$8 = *($3)
	if ( $8 ){ goto $label$1 }
	goto $label$6 
	
.LABEL $label$11
	$3 = $6
	
.LABEL $label$10
	$8 = *($3)
	if ( $8 ){ goto $label$1 }
	
.LABEL $label$9
	*(($8 = CALL $161([24]))) = (int_64)0
	*($8 + [8]) = $6
	*($3) = $8
	*($8 + [20]) = [0]
	*($8 + [16]) = [2]
	$6 = $8
	$5 = *(*($0))
	if ( ($5 == 0) ){ goto $label$32 }
	*($0) = $5
	$6 = *($3)
	
.LABEL $label$32
	CALL $122(*(($0 + [4])), $6)
	*(($6 = ($0 + [8]))) = (*($6) + [1])
	goto $label$1 
	
.LABEL $label$8
	$3 = $6
	
.LABEL $label$7
	$8 = *($3)
	if ( $8 ){ goto $label$1 }
	
.LABEL $label$6
	*(($8 = CALL $161([24]))) = (int_64)0
	*($8 + [8]) = $6
	*($3) = $8
	*($8 + [20]) = [0]
	*($8 + [16]) = [3]
	$6 = $8
	$5 = *(*($0))
	if ( ($5 == 0) ){ goto $label$33 }
	*($0) = $5
	$6 = *($3)
	
.LABEL $label$33
	CALL $122(*(($0 + [4])), $6)
	*(($6 = ($0 + [8]))) = (*($6) + [1])
	goto $label$1 
	
.LABEL $label$5
	$3 = $6
	$8 = *($3)
	if ( $8 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$6 = $7
	$3 = $7
	
.LABEL $label$3
	$8 = *($3)
	if ( $8 ){ goto $label$1 }
	
.LABEL $label$2
	*(($8 = CALL $161([24]))) = (int_64)0
	*($8 + [8]) = $6
	*($3) = $8
	*($8 + [20]) = [0]
	*($8 + [16]) = [777]
	$6 = $8
	$5 = *(*($0))
	if ( ($5 == 0) ){ goto $label$34 }
	*($0) = $5
	$6 = *($3)
	
.LABEL $label$34
	CALL $122(*(($0 + [4])), $6)
	*(($6 = ($0 + [8]))) = (*($6) + [1])
	
.LABEL $label$1
	*(($8 + [20])) = [1]
	if ( ((uint_32)($4 + [-4]) > (uint_32)[13]) ){ goto $label$35 }
	$6 = *($7)
	if ( ($6 == 0) ){ goto $label$40 }
	$3 = $7
	
.LOOP $label$41:
	$8 = *($6 + [16])
	if ( ((int_32)$4 >= (int_32)$8) ){ goto $label$43 }
	$3 = $6
	$8 = *($6)
	if ( $8 ){ goto $label$42 }
	goto $label$39 
	
.LABEL $label$43
	if ( ((int_32)$8 >= (int_32)$4) ){ goto $label$38 }
	$3 = ($6 + [4])
	$8 = *($6 + [4])
	if ( ($8 == 0) ){ goto $label$38 }
	
.LABEL $label$42
	$6 = $8
	goto $label$41 
	
.LABEL $label$40
	$6 = $7
	$3 = $7
	$8 = *($3)
	if ( $8 ){ goto $label$36 }
	goto $label$37 
	
.LABEL $label$39
	$3 = $6
	
.LABEL $label$38
	$8 = *($3)
	if ( $8 ){ goto $label$36 }
	
.LABEL $label$37
	*(($8 = CALL $161([24]))) = (int_64)0
	*($8 + [8]) = $6
	*($3) = $8
	*($8 + [20]) = [0]
	*($8 + [16]) = $4
	$6 = $8
	$4 = *(*($0))
	if ( ($4 == 0) ){ goto $label$44 }
	*($0) = $4
	$6 = *($3)
	
.LABEL $label$44
	CALL $122(*(($0 + [4])), $6)
	*(($6 = ($0 + [8]))) = (*($6) + [1])
	
.LABEL $label$36
	*(($8 + [20])) = [1]
	
.LABEL $label$35
	$3 = ((int_32)*($2) * (int_32)[100])
	$6 = *($7)
	if ( ($6 == 0) ){ goto $label$49 }
	$4 = $6
	$5 = $7
	
.LOOP $label$50:
	$8 = *($4 + [16])
	if ( ((int_32)$3 >= (int_32)$8) ){ goto $label$52 }
	$5 = $4
	$8 = *($4)
	if ( $8 ){ goto $label$51 }
	goto $label$48 
	
.LABEL $label$52
	if ( ((int_32)$8 >= (int_32)$3) ){ goto $label$47 }
	$5 = ($4 + [4])
	$8 = *($4 + [4])
	if ( ($8 == 0) ){ goto $label$47 }
	
.LABEL $label$51
	$4 = $8
	goto $label$50 
	
.LABEL $label$49
	$4 = $7
	$5 = $7
	$8 = *($5)
	if ( $8 ){ goto $label$45 }
	goto $label$46 
	
.LABEL $label$48
	$5 = $4
	
.LABEL $label$47
	$8 = *($5)
	if ( $8 ){ goto $label$45 }
	
.LABEL $label$46
	*(($8 = CALL $161([24]))) = (int_64)0
	*($8 + [8]) = $4
	*($5) = $8
	*($8 + [20]) = [0]
	*($8 + [16]) = $3
	$6 = $8
	$4 = *(*($0))
	if ( ($4 == 0) ){ goto $label$53 }
	*($0) = $4
	$6 = *($5)
	
.LABEL $label$53
	$4 = ($0 + [4])
	CALL $122(*($4), $6)
	*(($6 = ($0 + [8]))) = (*($6) + [1])
	$6 = *($4)
	
.LABEL $label$45
	*(($8 + [20])) = [1]
	$3 = ((int_32)*(($2 + [4])) * (int_32)[100])
	if ( ($6 == 0) ){ goto $label$58 }
	$4 = $6
	$5 = $7
	
.LOOP $label$59:
	$8 = *($4 + [16])
	if ( ((int_32)$3 >= (int_32)$8) ){ goto $label$61 }
	$5 = $4
	$8 = *($4)
	if ( $8 ){ goto $label$60 }
	goto $label$57 
	
.LABEL $label$61
	if ( ((int_32)$8 >= (int_32)$3) ){ goto $label$56 }
	$5 = ($4 + [4])
	$8 = *($4 + [4])
	if ( ($8 == 0) ){ goto $label$56 }
	
.LABEL $label$60
	$4 = $8
	goto $label$59 
	
.LABEL $label$58
	$4 = $7
	$5 = $7
	$8 = *($5)
	if ( $8 ){ goto $label$54 }
	goto $label$55 
	
.LABEL $label$57
	$5 = $4
	
.LABEL $label$56
	$8 = *($5)
	if ( $8 ){ goto $label$54 }
	
.LABEL $label$55
	*(($8 = CALL $161([24]))) = (int_64)0
	*($8 + [8]) = $4
	*($5) = $8
	*($8 + [20]) = [0]
	*($8 + [16]) = $3
	$6 = $8
	$4 = *(*($0))
	if ( ($4 == 0) ){ goto $label$62 }
	*($0) = $4
	$6 = *($5)
	
.LABEL $label$62
	$4 = ($0 + [4])
	CALL $122(*($4), $6)
	*(($6 = ($0 + [8]))) = (*($6) + [1])
	$6 = *($4)
	
.LABEL $label$54
	*(($8 + [20])) = [1]
	$8 = ((int_32)*(($2 + [8])) * (int_32)[100])
	if ( ($6 == 0) ){ goto $label$67 }
	$3 = $7
	
.LOOP $label$68:
	$4 = *($6 + [16])
	if ( ((int_32)$8 >= (int_32)$4) ){ goto $label$70 }
	$3 = $6
	$4 = *($6)
	if ( $4 ){ goto $label$69 }
	goto $label$66 
	
.LABEL $label$70
	if ( ((int_32)$4 >= (int_32)$8) ){ goto $label$65 }
	$3 = ($6 + [4])
	$4 = *($6 + [4])
	if ( ($4 == 0) ){ goto $label$65 }
	
.LABEL $label$69
	$6 = $4
	goto $label$68 
	
.LABEL $label$67
	$6 = $7
	$3 = $7
	$4 = *($3)
	if ( $4 ){ goto $label$63 }
	goto $label$64 
	
.LABEL $label$66
	$3 = $6
	
.LABEL $label$65
	$4 = *($3)
	if ( $4 ){ goto $label$63 }
	
.LABEL $label$64
	*(($4 = CALL $161([24]))) = (int_64)0
	*($4 + [8]) = $6
	*($3) = $4
	*($4 + [20]) = [0]
	*($4 + [16]) = $8
	$6 = $4
	$8 = *(*($0))
	if ( ($8 == 0) ){ goto $label$71 }
	*($0) = $8
	$6 = *($3)
	
.LABEL $label$71
	CALL $122(*(($0 + [4])), $6)
	*(($6 = ($0 + [8]))) = (*($6) + [1])
	
.LABEL $label$63
	*(($4 + [20])) = [1]
	$6 = *(($2 + [4]))
	$4 = *($2)
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$74 }
	$6 = $4
	if ( ((int_32)$6 >= (int_32)[1]) ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$74
	$8 = *(($2 + [8]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$75 }
	$6 = $4
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$72 }
	
.LABEL $label$75
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$72 }
	
.LABEL $label$73
	$8 = ((int_32)$6 * (int_32)[110])
	$6 = *($7)
	if ( ($6 == 0) ){ goto $label$80 }
	
.LOOP $label$81:
	$4 = *($6 + [16])
	if ( ((int_32)$8 >= (int_32)$4) ){ goto $label$83 }
	$7 = $6
	$4 = *($6)
	if ( $4 ){ goto $label$82 }
	goto $label$79 
	
.LABEL $label$83
	if ( ((int_32)$4 >= (int_32)$8) ){ goto $label$78 }
	$7 = ($6 + [4])
	$4 = *($6 + [4])
	if ( ($4 == 0) ){ goto $label$78 }
	
.LABEL $label$82
	$6 = $4
	goto $label$81 
	
.LABEL $label$80
	$6 = $7
	$4 = *($7)
	if ( $4 ){ goto $label$76 }
	goto $label$77 
	
.LABEL $label$79
	$7 = $6
	
.LABEL $label$78
	$4 = *($7)
	if ( $4 ){ goto $label$76 }
	
.LABEL $label$77
	*(($4 = CALL $161([24]))) = (int_64)0
	*($4 + [8]) = $6
	*($7) = $4
	*($4 + [20]) = [0]
	*($4 + [16]) = $8
	$6 = $4
	$8 = *(*($0))
	if ( ($8 == 0) ){ goto $label$84 }
	*($0) = $8
	$6 = *($7)
	
.LABEL $label$84
	CALL $122(*(($0 + [4])), $6)
	*(($6 = ($0 + [8]))) = (*($6) + [1])
	
.LABEL $label$76
	*(($4 + [20])) = [1]
	
.LABEL $label$72
}

void .FUNC $128 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $128($0, *($1))
	CALL $128($0, *($1 + [4]))
	CALL $162($1)
	
.LABEL $label$1
}

int_32 .FUNC $8 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	*($0) = $1
	$3 = [0]
	*(($2 = ($0 + [12]))) = [0]
	*(($4 = ($0 + [16]))) = [0]
	*($0 + [8]) = $2
	$7 = [3552]
	if ( ((int_32)$2 != (int_32)$2) ){ goto $label$2 }
	$10 = [24]
	goto $label$1 
	
.LABEL $label$2
	$10 = [3]
	
.LABEL $label$1
	
.LOOP $label$3:
	goto $label$36 
	
.LABEL $label$58
	$3 = *(($0 + [12]))
	if ( ((int_32)*(($0 + [8])) == (int_32)$2) ){ goto $label$32 }
	$10 = [3]
	goto $label$3 
	
.LABEL $label$57
	$8 = $3
	if ( ($3 == 0) ){ goto $label$14 }
	$10 = [4]
	goto $label$3 
	
.LABEL $label$56
	$9 = $8
	$8 = *($9 + [4])
	if ( $8 ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$55
	$9 = $2
	if ( $3 ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$54
	$8 = $2
	$10 = [23]
	goto $label$3 
	
.LABEL $label$53
	$9 = *($8 + [8])
	$5 = ((int_32)*($9) == (int_32)$8)
	$8 = $9
	if ( $5 ){ goto $label$13 }
	$10 = [5]
	goto $label$3 
	
.LABEL $label$52
	$8 = *($7)
	if ( ((int_32)*($9 + [16]) >= (int_32)$8) ){ goto $label$12 }
	$10 = [20]
	goto $label$3 
	
.LABEL $label$51
	if ( ($3 == 0) ){ goto $label$31 }
	$10 = [21]
	goto $label$3 
	
.LABEL $label$50
	$3 = ($9 + [4])
	if ( *($3) ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$49
	if ( ($3 == 0) ){ goto $label$28 }
	$10 = [7]
	goto $label$3 
	
.LABEL $label$48
	$5 = $2
	goto $label$11 
	
.LABEL $label$47
	$5 = $3
	$3 = $9
	$10 = [8]
	goto $label$3 
	
.LABEL $label$46
	$9 = *($3 + [16])
	if ( ((int_32)$8 >= (int_32)$9) ){ goto $label$10 }
	$10 = [18]
	goto $label$3 
	
.LABEL $label$45
	$9 = *($3)
	if ( $9 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$44
	if ( ((int_32)$9 >= (int_32)$8) ){ goto $label$9 }
	$10 = [14]
	goto $label$3 
	
.LABEL $label$43
	$5 = ($3 + [4])
	$9 = *($3 + [4])
	if ( ($9 == 0) ){ goto $label$7 }
	$10 = [15]
	goto $label$3 
	
.LABEL $label$42
	$3 = $5
	goto $label$6 
	
.LABEL $label$41
	$9 = $2
	$3 = $2
	if ( *($3) ){ goto $label$19 }
	$10 = [11]
	goto $label$3 
	
.LABEL $label$40
	$8 = CALL $161([32])
	$1 = *(($7 + [8]))
	$6 = *($7)
	*($8) = (int_64)0
	*(($8 + [24])) = $1
	*($8 + [16]) = $6
	*($8 + [8]) = $9
	*($3) = $8
	$9 = ($0 + [8])
	$5 = *(*($9))
	if ( ($5 == 0) ){ goto $label$8 }
	$10 = [12]
	goto $label$3 
	
.LABEL $label$39
	*($9) = $5
	$8 = *($3)
	$10 = [13]
	goto $label$3 
	
.LABEL $label$38
	CALL $122(*(($0 + [12])), $8)
	*($4) = (*($4) + [1])
	$10 = [1]
	goto $label$3 
	
.LABEL $label$37
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)[4144]) ){ goto $label$17 }
	goto $label$18 
	
.LABEL $label$36
	$9 = $3
	if ( *($3) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$35
	$9 = $3
	$3 = $5
	if ( *($3) ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$34
	$9 = $3
	$3 = $5
	if ( *($3) ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$33
	$1 = *($0)
	*($0 + [24]) = $1
	*(($0 + [32])) = $1
	*(($0 + [40])) = (int_64)-1
	*(($0 + [48])) = (int_64)0
	*(($0 + [56])) = [0]
	*(($0 + [60])) = [0]
	*($0 + [64]) = $1
	*(($0 + [72])) = $1
	*(($0 + [80])) = (int_64)-1
	*(($0 + [88])) = [0]
	*(($0 + [92])) = [0]
	*(($0 + [96])) = [0]
	*($0 + [104]) = $1
	*(($0 + [112])) = $1
	*(($0 + [120])) = (int_64)-1
	*(($0 + [128])) = [0]
	*(($0 + [132])) = [0]
	*(($0 + [136])) = [0]
	*($0 + [144]) = $1
	*(($0 + [152])) = $1
	*(($0 + [160])) = (int_64)-1
	*(($0 + [168])) = [0]
	*(($0 + [172])) = [0]
	*(($0 + [176])) = [0]
	*($0 + [184]) = $1
	*(($0 + [192])) = $1
	*(($0 + [200])) = (int_64)-1
	*(($0 + [208])) = [0]
	*(($0 + [212])) = [0]
	*(($0 + [216])) = [0]
	*(($0 + [220])) = [0]
	*($0 + [224]) = $1
	*(($0 + [232])) = $1
	*(($0 + [240])) = (int_64)-1
	*(($0 + [248])) = [0]
	*(($0 + [252])) = [0]
	*(($0 + [256])) = [0]
	*(($0 + [260])) = [0]
	return $0
	
.LABEL $label$32
	$10 = [24]
	goto $label$3 
	
.LABEL $label$31
	$10 = [19]
	goto $label$3 
	
.LABEL $label$30
	$10 = [11]
	goto $label$3 
	
.LABEL $label$29
	$10 = [1]
	goto $label$3 
	
.LABEL $label$28
	$10 = [19]
	goto $label$3 
	
.LABEL $label$27
	$10 = [11]
	goto $label$3 
	
.LABEL $label$26
	$10 = [1]
	goto $label$3 
	
.LABEL $label$25
	$10 = [11]
	goto $label$3 
	
.LABEL $label$24
	$10 = [1]
	goto $label$3 
	
.LABEL $label$23
	$10 = [11]
	goto $label$3 
	
.LABEL $label$22
	$10 = [1]
	goto $label$3 
	
.LABEL $label$21
	$10 = [0]
	goto $label$3 
	
.LABEL $label$20
	$10 = [16]
	goto $label$3 
	
.LABEL $label$19
	$10 = [1]
	goto $label$3 
	
.LABEL $label$18
	$10 = [25]
	goto $label$3 
	
.LABEL $label$17
	$10 = [2]
	goto $label$3 
	
.LABEL $label$16
	$10 = [5]
	goto $label$3 
	
.LABEL $label$15
	$10 = [4]
	goto $label$3 
	
.LABEL $label$14
	$10 = [22]
	goto $label$3 
	
.LABEL $label$13
	$10 = [23]
	goto $label$3 
	
.LABEL $label$12
	$10 = [6]
	goto $label$3 
	
.LABEL $label$11
	$10 = [8]
	goto $label$3 
	
.LABEL $label$10
	$10 = [9]
	goto $label$3 
	
.LABEL $label$9
	$10 = [10]
	goto $label$3 
	
.LABEL $label$8
	$10 = [13]
	goto $label$3 
	
.LABEL $label$7
	$10 = [17]
	goto $label$3 
	
.LABEL $label$6
	$10 = [16]
	goto $label$3 
	
.LABEL $label$5
	$10 = [19]
	goto $label$3 
	
.LABEL $label$4
	$10 = [21]
	goto $label$3 
	return $10
}

void .FUNC $9 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [24])) = [0]
	*($0 + [16 align=4]) = (int_64)0
	*($3 + [8]) = ($2 + $1)
	*($3) = $2
	CALL eosio_assert(((uint_32)$1 > (uint_32)[15]), [992])
	CALL memcpy($0, $2, [16])
	*($3 + [4]) = ($2 + [16])
	CALL $53($3, ($0 + [16]))
	if ( ($1 <= [513]) ){ goto $label$3 }
	CALL free($2)
	
.LABEL $label$3
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [64])
	$11 = $12
	*([0] + [4]) = $12
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$6 = ($4 + [40])
	$7 = *($6)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$5 = ($4 + [24])
	$8 = CALL db_lowerbound_i64(*($5), *(($4 + [32])), (int_64)-4354846489561792512, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	CALL $45($5, $8)
	*($11 + [36]) = [0]
	*($11 + [32]) = $5
	$7 = *(*(CALL $46(($11 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [40])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [1936])
	$7 = *($6)
	*($1) = $7
	*($11 + [16]) = $7
	*($1 + [8]) = *(*($3 + [4]))
	$7 = *(*($3 + [8]))
	*($1 + [16]) = ( (int_64)0 ? $7 : ((int_64)$7 == (int_64)*(*($3 + [4]))) )
	*($1 + [24]) = *(*($3 + [12]))
	$6 = *($3 + [16])
	*($1 + [32]) = *($6)
	*(($1 + [40])) = *(($6 + [8]))
	*($1 + [48]) = *(*($3 + [20]))
	$6 = *($3 + [24])
	*($1 + [56]) = *($6)
	*(($1 + [64])) = *(($6 + [8]))
	$7 = CALL current_time()
	*($1 + [76]) = [0]
	*($1 + [72]) = ((uint_64)$7 / (uint_64)(int_64)1000000)
	$7 = *($4)
	*($11 + [12]) = *($3 + [28])
	*($11 + [8]) = ($11 + [16])
	*($11 + [56]) = $7
	CALL eosio_assert(((int_64)*($4 + [64]) == (int_64)CALL $fimport$3()), [1872])
	$6 = ($4 + [64])
	*($11 + [32]) = $6
	*($11 + [36]) = ($11 + [8])
	*($11 + [40]) = ($11 + [56])
	*(($3 = CALL $161([32])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [20]) = $6
	CALL $130(($11 + [32]), $3)
	*($11 + [48]) = $3
	$7 = *($3)
	*($11 + [32]) = $7
	$5 = *($3 + [24])
	*($11 + [28]) = $5
	$8 = ($4 + [92])
	$6 = *($8)
	if ( ((uint_32)$6 >= (uint_32)*(($4 + [96]))) ){ goto $label$4 }
	*($6 + [8]) = $7
	*($6 + [16]) = $5
	*($11 + [48]) = [0]
	*($6) = $3
	*($8) = ($6 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $52(($4 + [88]), ($11 + [48]), ($11 + [32]), ($11 + [28]))
	
.LABEL $label$3
	$3 = *($11 + [48])
	*($11 + [48]) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$6 }
	CALL $162(*(($3 + [16])))
	
.LABEL $label$6
	CALL $162($3)
	
.LABEL $label$5
	$4 = $12
	$3 = ($4 + [-80])
	*([0] + [4]) = $3
	*($11 + [36]) = $3
	*($11 + [32]) = $3
	*($11 + [40]) = ($4 + [-3])
	CALL $131(($11 + [32]), $1)
	$7 = *($1)
	*($1 + [84]) = CALL db_store_i64(*($2 + [8]), (int_64)-4354846489561792512, *(*($0 + [8])), $7, $3, [77])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$7 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$3 = ($2 + [8])
	$7 = *($3)
	$4 = *(($0 + [8]))
	$9 = *($4)
	$10 = *($1)
	*($11 + [56]) = *(($1 + [24]))
	*($1 + [88]) = CALL db_idx64_store($7, (int_64)-4354846489561792512, $9, $10, ($11 + [56]))
	$7 = *($4)
	$9 = *($3)
	$10 = *($1)
	*($11 + [56]) = *(($1 + [8]))
	*(($1 + [92])) = CALL db_idx64_store($9, (int_64)-4354846489561792511, $7, $10, ($11 + [56]))
	*([0] + [4]) = ($11 + [64])
}

void .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $3
	if ( $3 ){ goto $label$3 }
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( *($2 + [12]) ){ goto $label$3 }
	$3 = *($2 + [8])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	if ( ($4 == 0) ){ goto $label$8 }
	if ( *($4 + [12]) ){ goto $label$8 }
	$4 = ($4 + [12])
	goto $label$9 
	
.LABEL $label$10
	$4 = *($3 + [4])
	if ( ($4 == 0) ){ goto $label$6 }
	if ( *($4 + [12]) ){ goto $label$6 }
	$4 = ($4 + [12])
	
.LABEL $label$9
	*(($2 + [12])) = [1]
	$2 = ((int_32)$3 == (int_32)$0)
	*($3 + [12]) = $2
	*($4) = [1]
	$1 = $3
	if ( ($2 == 0) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$8
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$5 }
	$4 = $2
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$2 }
	$4 = *($2 + [4])
	$1 = *($4)
	*($2 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$11
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*($4) = $2
	$3 = *($4 + [8])
	goto $label$1 
	
.LABEL $label$5
	$4 = *($2)
	$1 = *($4 + [4])
	*($2) = $1
	if ( ($1 == 0) ){ goto $label$12 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$12
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*(($4 + [4])) = $2
	$3 = *($4 + [8])
	
.LABEL $label$4
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3 + [4])
	$4 = *($2)
	*($3 + [4]) = $4
	if ( ($4 == 0) ){ goto $label$13 }
	*($4 + [8]) = $3
	
.LABEL $label$13
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*($2) = $3
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	$4 = $2
	
.LABEL $label$1
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3)
	$4 = *($2 + [4])
	*($3) = $4
	if ( ($4 == 0) ){ goto $label$14 }
	*($4 + [8]) = $3
	
.LABEL $label$14
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*(($2 + [4])) = $3
}

void .FUNC _ZN5sicbo12_split_extraENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPN5eosio5assetEPySA_NS7_11symbol_typeESA_ (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_64 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_32 $21
	int_32 $22
	$22 = (*([0] + [4]) - [176])
	*([0] + [4]) = $22
	CALL $173(($22 + [136]), $2)
	$15 = [0]
	*($0 + [8]) = [0]
	*($0 + [4]) = [0]
	$8 = ($0 + [4])
	*($0) = $8
	*($7) = (int_64)0
	$16 = *($22 + [136])
	$9 = (($22 + [136]) | [1])
	$12 = *($22 + [144])
	$21 = *($22 + [140])
	$2 = CALL strlen([2848])
	if ( ($2 == 0) ){ goto $label$7 }
	$11 = ($16 & [1])
	$16 = ( $21 ? uint_32($16 >> [1]) : $11 )
	if ( ((int_32)$16 < (int_32)$2) ){ goto $label$6 }
	$11 = ( $12 ? $9 : $11 )
	$12 = ($11 + $16)
	$21 = $11
	
.LOOP $label$8:
	$16 = (($16 - $2) + [1])
	if ( ($16 == 0) ){ goto $label$6 }
	$16 = CALL memchr($21, [45], $16)
	if ( ($16 == 0) ){ goto $label$6 }
	if ( (CALL memcmp($16, [2848], $2) == 0) ){ goto $label$9 }
	$21 = ($16 + [1])
	$16 = ($12 - $21)
	if ( ((int_32)$16 >= (int_32)$2) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	if ( ((int_32)$16 == (int_32)$12) ){ goto $label$6 }
	if ( ((int_32)($16 - $11) == (int_32)[-1]) ){ goto $label$6 }
	
.LABEL $label$7
	$21 = *($22 + [136])
	$15 = ($22 + [144])
	$12 = *($15)
	$13 = *($22 + [140])
	$11 = [0]
	$2 = [0]
	$16 = CALL strlen([2848])
	if ( ($16 == 0) ){ goto $label$10 }
	$21 = ( $13 ? uint_32($21 >> [1]) : $2 )
	$2 = ($21 & [1])
	$14 = ( $12 ? $9 : $2 )
	$12 = ($14 + $21)
	$2 = $12
	if ( ((int_32)$21 < (int_32)$16) ){ goto $label$11 }
	$2 = $14
	
.LOOP $label$13:
	$21 = (($21 - $16) + [1])
	if ( ($21 == 0) ){ goto $label$12 }
	$2 = CALL memchr($2, [45], $21)
	if ( ($2 == 0) ){ goto $label$12 }
	if ( (CALL memcmp($2, [2848], $16) == 0) ){ goto $label$11 }
	$2 = ($2 + [1])
	$21 = ($12 - $2)
	if ( ((int_32)$21 >= (int_32)$16) ){ goto $label$13 }
	
.LABEL $label$12
	$2 = $12
	
.LABEL $label$11
	$2 = ( [-1] ? ($2 - $14) : ((int_32)$2 == (int_32)$12) )
	
.LABEL $label$10
	CALL $174(($22 + [16]), ($22 + [136]), [0], $2, ($22 + [136]))
	$2 = *($22 + [136])
	$21 = *($15)
	$12 = *($22 + [140])
	$16 = CALL strlen([2848])
	if ( ($16 == 0) ){ goto $label$14 }
	$21 = ( $12 ? uint_32($2 >> [1]) : $15 )
	$15 = ($2 & [1])
	$11 = ( $21 ? $9 : $15 )
	$12 = ($11 + $21)
	$2 = $12
	if ( ((int_32)$21 < (int_32)$16) ){ goto $label$15 }
	$2 = $11
	
.LOOP $label$17:
	$21 = (($21 - $16) + [1])
	if ( ($21 == 0) ){ goto $label$16 }
	$2 = CALL memchr($2, [45], $21)
	if ( ($2 == 0) ){ goto $label$16 }
	if ( (CALL memcmp($2, [2848], $16) == 0) ){ goto $label$15 }
	$2 = ($2 + [1])
	$21 = ($12 - $2)
	if ( ((int_32)$21 >= (int_32)$16) ){ goto $label$17 }
	
.LABEL $label$16
	$2 = $12
	
.LABEL $label$15
	$11 = ( [-1] ? ($2 - $11) : ((int_32)$2 == (int_32)$12) )
	
.LABEL $label$14
	$2 = [0]
	CALL $164(($22 + [136]), CALL $171(($22 + [136]), [0], ($11 + [1])))
	CALL $173(($22 + [120]), ($22 + [16]))
	$12 = (($22 + [120]) | [1])
	$11 = ($22 + [128])
	
.LOOP $label$21:
	$21 = ($16 & [1])
	$16 = *($22 + [120])
	if ( ((uint_32)$2 >= (uint_32)( *($22 + [124]) ? uint_32($16 >> [1]) : $21 )) ){ goto $label$20 }
	$16 = (( *($11) ? $12 : $21 ) + $2)
	$2 = ($2 + [1])
	if ( CALL isdigit(*($16)) ){ goto $label$21 }
	$21 = [0]
	if ( (*($22 + [120]) & [1]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$21 = [1]
	if ( (($16 & [1]) == 0) ){ goto $label$18 }
	
.LABEL $label$19
	CALL $162(*(($22 + [128])))
	
.LABEL $label$18
	$2 = [0]
	if ( ($21 == 0) ){ goto $label$23 }
	$15 = [1]
	$18 = CALL atoll(( *($22 + [24]) ? (($22 + [16]) | [1]) : (*($22 + [16]) & [1]) ))
	*($7) = $18
	if ( ((int_64)$18 == (int_64)10) ){ goto $label$24 }
	if ( ((int_64)$18 != (int_64)1) ){ goto $label$22 }
	
.LABEL $label$24
	$15 = [0]
	$2 = [1]
	goto $label$22 
	
.LABEL $label$23
	$15 = [1]
	
.LABEL $label$22
	if ( ((*($22 + [16]) & [1]) == 0) ){ goto $label$25 }
	CALL $162(*($22 + [24]))
	
.LABEL $label$25
	if ( ($2 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	if ( ($4 == 0) ){ goto $label$26 }
	*($4) = (int_64)0
	$16 = *($22 + [136])
	$11 = ($22 + [144])
	$12 = *($11)
	$21 = *($22 + [140])
	$2 = CALL strlen([2848])
	if ( ($2 == 0) ){ goto $label$27 }
	$7 = ($16 & [1])
	$16 = ( $21 ? uint_32($16 >> [1]) : $7 )
	if ( ((int_32)$16 < (int_32)$2) ){ goto $label$26 }
	$7 = ( $12 ? $9 : $7 )
	$12 = ($7 + $16)
	$21 = $7
	
.LOOP $label$28:
	$16 = (($16 - $2) + [1])
	if ( ($16 == 0) ){ goto $label$26 }
	$16 = CALL memchr($21, [45], $16)
	if ( ($16 == 0) ){ goto $label$26 }
	if ( (CALL memcmp($16, [2848], $2) == 0) ){ goto $label$29 }
	$21 = ($16 + [1])
	$16 = ($12 - $21)
	if ( ((int_32)$16 >= (int_32)$2) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$29
	if ( ((int_32)$16 == (int_32)$12) ){ goto $label$26 }
	if ( ((int_32)($16 - $7) == (int_32)[-1]) ){ goto $label$26 }
	
.LABEL $label$27
	$21 = *($22 + [136])
	$12 = *($11)
	$7 = *($22 + [140])
	$11 = [0]
	$2 = [0]
	$16 = CALL strlen([2848])
	if ( ($16 == 0) ){ goto $label$30 }
	$21 = ( $7 ? uint_32($21 >> [1]) : $2 )
	$2 = ($21 & [1])
	$13 = ( $12 ? $9 : $2 )
	$12 = ($13 + $21)
	$2 = $12
	if ( ((int_32)$21 < (int_32)$16) ){ goto $label$31 }
	$2 = $13
	
.LOOP $label$33:
	$21 = (($21 - $16) + [1])
	if ( ($21 == 0) ){ goto $label$32 }
	$2 = CALL memchr($2, [45], $21)
	if ( ($2 == 0) ){ goto $label$32 }
	if ( (CALL memcmp($2, [2848], $16) == 0) ){ goto $label$31 }
	$2 = ($2 + [1])
	$21 = ($12 - $2)
	if ( ((int_32)$21 >= (int_32)$16) ){ goto $label$33 }
	
.LABEL $label$32
	$2 = $12
	
.LABEL $label$31
	$2 = ( [-1] ? ($2 - $13) : ((int_32)$2 == (int_32)$12) )
	
.LABEL $label$30
	CALL $174(($22 + [16]), ($22 + [136]), [0], $2, ($22 + [136]))
	$2 = *($22 + [136])
	$21 = *((($22 + [136]) + [8]))
	$12 = *($22 + [140])
	$16 = CALL strlen([2848])
	if ( ($16 == 0) ){ goto $label$34 }
	$21 = ( $12 ? uint_32($2 >> [1]) : $7 )
	$7 = ($2 & [1])
	$11 = ( $21 ? $9 : $7 )
	$12 = ($11 + $21)
	$2 = $12
	if ( ((int_32)$21 < (int_32)$16) ){ goto $label$35 }
	$2 = $11
	
.LOOP $label$37:
	$21 = (($21 - $16) + [1])
	if ( ($21 == 0) ){ goto $label$36 }
	$2 = CALL memchr($2, [45], $21)
	if ( ($2 == 0) ){ goto $label$36 }
	if ( (CALL memcmp($2, [2848], $16) == 0) ){ goto $label$35 }
	$2 = ($2 + [1])
	$21 = ($12 - $2)
	if ( ((int_32)$21 >= (int_32)$16) ){ goto $label$37 }
	
.LABEL $label$36
	$2 = $12
	
.LABEL $label$35
	$11 = ( [-1] ? ($2 - $11) : ((int_32)$2 == (int_32)$12) )
	
.LABEL $label$34
	$2 = [0]
	CALL $164(($22 + [136]), CALL $171(($22 + [136]), [0], ($11 + [1])))
	CALL $173(($22 + [104]), ($22 + [16]))
	$12 = (($22 + [104]) | [1])
	$11 = (($22 + [104]) + [8])
	
.LOOP $label$41:
	$21 = ($16 & [1])
	$16 = *($22 + [104])
	if ( ((uint_32)$2 >= (uint_32)( *($22 + [108]) ? uint_32($16 >> [1]) : $21 )) ){ goto $label$40 }
	$16 = (( *($11) ? $12 : $21 ) + $2)
	$2 = ($2 + [1])
	if ( CALL isdigit(*($16)) ){ goto $label$41 }
	$21 = [0]
	if ( (*($22 + [104]) & [1]) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	$21 = [1]
	if ( (($16 & [1]) == 0) ){ goto $label$38 }
	
.LABEL $label$39
	CALL $162(*(($22 + [112])))
	
.LABEL $label$38
	$2 = [0]
	$16 = [1]
	if ( ($21 == 0) ){ goto $label$42 }
	$2 = [1]
	*($4) = CALL atoll(( *($22 + [24]) ? (($22 + [16]) | [1]) : (*($22 + [16]) & [1]) ))
	$16 = $15
	
.LABEL $label$42
	if ( ((*($22 + [16]) & [1]) == 0) ){ goto $label$43 }
	CALL $162(*($22 + [24]))
	
.LABEL $label$43
	$15 = $16
	if ( ($2 == 0) ){ goto $label$5 }
	
.LABEL $label$26
	if ( ($5 == 0) ){ goto $label$2 }
	$16 = *($22 + [136])
	$11 = ($22 + [144])
	$12 = *($11)
	$21 = *($22 + [140])
	$2 = CALL strlen([2848])
	if ( ($2 == 0) ){ goto $label$3 }
	$4 = ($16 & [1])
	$16 = ( $21 ? uint_32($16 >> [1]) : $4 )
	if ( ((int_32)$16 < (int_32)$2) ){ goto $label$2 }
	$4 = ( $12 ? $9 : $4 )
	$12 = ($4 + $16)
	$21 = $4
	
.LOOP $label$44:
	$16 = (($16 - $2) + [1])
	if ( ($16 == 0) ){ goto $label$2 }
	$16 = CALL memchr($21, [45], $16)
	if ( ($16 == 0) ){ goto $label$2 }
	if ( (CALL memcmp($16, [2848], $2) == 0) ){ goto $label$4 }
	$21 = ($16 + [1])
	$16 = ($12 - $21)
	if ( ((int_32)$16 >= (int_32)$2) ){ goto $label$44 }
	goto $label$2 
	
.LABEL $label$5
	if ( $15 ){ goto $label$1 }
	CALL $128($0, *(($0 + [4])))
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$16 == (int_32)$12) ){ goto $label$2 }
	if ( ((int_32)($16 - $4) == (int_32)[-1]) ){ goto $label$2 }
	
.LABEL $label$3
	$21 = *($22 + [136])
	$12 = *($11)
	$11 = *($22 + [140])
	$2 = [0]
	$16 = CALL strlen([2848])
	if ( ($16 == 0) ){ goto $label$45 }
	$21 = ( $11 ? uint_32($21 >> [1]) : $2 )
	$2 = ($21 & [1])
	$4 = ( $12 ? $9 : $2 )
	$12 = ($4 + $21)
	$2 = $12
	if ( ((int_32)$21 < (int_32)$16) ){ goto $label$46 }
	$2 = $4
	
.LOOP $label$48:
	$21 = (($21 - $16) + [1])
	if ( ($21 == 0) ){ goto $label$47 }
	$2 = CALL memchr($2, [45], $21)
	if ( ($2 == 0) ){ goto $label$47 }
	if ( (CALL memcmp($2, [2848], $16) == 0) ){ goto $label$46 }
	$2 = ($2 + [1])
	$21 = ($12 - $2)
	if ( ((int_32)$21 >= (int_32)$16) ){ goto $label$48 }
	
.LABEL $label$47
	$2 = $12
	
.LABEL $label$46
	$2 = ( [-1] ? ($2 - $4) : ((int_32)$2 == (int_32)$12) )
	
.LABEL $label$45
	CALL $174(($22 + [16]), ($22 + [136]), [0], $2, ($22 + [136]))
	$21 = *($22 + [136])
	$12 = *(($22 + [144]))
	$11 = *($22 + [140])
	$2 = [1]
	$16 = CALL strlen([2848])
	if ( ($16 == 0) ){ goto $label$49 }
	$21 = ( $11 ? uint_32($21 >> [1]) : $2 )
	$2 = ($21 & [1])
	$4 = ( $12 ? $9 : $2 )
	$12 = ($4 + $21)
	$2 = $12
	if ( ((int_32)$21 < (int_32)$16) ){ goto $label$50 }
	$2 = $4
	
.LOOP $label$52:
	$21 = (($21 - $16) + [1])
	if ( ($21 == 0) ){ goto $label$51 }
	$2 = CALL memchr($2, [45], $21)
	if ( ($2 == 0) ){ goto $label$51 }
	if ( (CALL memcmp($2, [2848], $16) == 0) ){ goto $label$50 }
	$2 = ($2 + [1])
	$21 = ($12 - $2)
	if ( ((int_32)$21 >= (int_32)$16) ){ goto $label$52 }
	
.LABEL $label$51
	$2 = $12
	
.LABEL $label$50
	$2 = ( [0] ? (($2 - $4) + [1]) : ((int_32)$2 == (int_32)$12) )
	
.LABEL $label$49
	CALL $164(($22 + [136]), CALL $171(($22 + [136]), [0], $2))
	$2 = ($2 & [1])
	$2 = *($22 + [16])
	if ( ((int_32)( *($22 + [20]) ? uint_32($2 >> [1]) : $2 ) != (int_32)[12]) ){ goto $label$53 }
	$2 = ( *($22 + [24]) ? (($22 + [16]) | [1]) : $2 )
	$16 = [-1]
	
.LOOP $label$54:
	$21 = ($2 + $16)
	$12 = ($16 + [1])
	$16 = $12
	if ( *(($21 + [1])) ){ goto $label$54 }
	$10 = (CASTING uint_64)(uint_32 $12)
	$18 = (int_64)0
	$17 = (int_64)59
	$19 = (int_64)0
	
.LOOP $label$55:
	$20 = (int_64)0
	if ( ((uint_64)$18 >= (uint_64)$10) ){ goto $label$56 }
	$16 = *($2)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$58 }
	$16 = ($16 + [165])
	goto $label$57 
	
.LABEL $label$58
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$57
	$20 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$56
	if ( ((uint_64)$18 > (uint_64)(int_64)11) ){ goto $label$60 }
	$20 = ((int_64)((int_64)$20 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	goto $label$59 
	
.LABEL $label$60
	$20 = ((int_64)$20 & (int_64)15)
	
.LABEL $label$59
	$2 = ($2 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$19 = ((int_64)$20 | (int_64)$19)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$55 }
	if ( (CALL is_account($19) == 0) ){ goto $label$53 }
	*($5) = $19
	
.LABEL $label$53
	if ( ((*($22 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $162(*($22 + [24]))
	
.LABEL $label$2
	$13 = (($22 + [72]) | [1])
	$12 = (($22 + [40]) | [1])
	$11 = (($22 + [56]) | [1])
	$7 = (($22 + [136]) + [8])
	
.LOOP $label$61:
	$16 = *($22 + [136])
	$21 = ($16 & [1])
	$15 = *($7)
	$4 = *($22 + [140])
	$2 = CALL strlen([2848])
	if ( ($2 == 0) ){ goto $label$62 }
	$16 = ( $4 ? uint_32($16 >> [1]) : $21 )
	if ( ((int_32)$16 < (int_32)$2) ){ goto $label$1 }
	$15 = ( $15 ? $9 : $21 )
	$4 = ($15 + $16)
	$21 = $15
	
.LOOP $label$63:
	$16 = (($16 - $2) + [1])
	if ( ($16 == 0) ){ goto $label$1 }
	$16 = CALL memchr($21, [45], $16)
	if ( ($16 == 0) ){ goto $label$1 }
	if ( (CALL memcmp($16, [2848], $2) == 0) ){ goto $label$64 }
	$21 = ($16 + [1])
	$16 = ($4 - $21)
	if ( ((int_32)$16 >= (int_32)$2) ){ goto $label$63 }
	goto $label$1 
	
.LABEL $label$64
	if ( ((int_32)$16 == (int_32)$4) ){ goto $label$1 }
	if ( ((int_32)($16 - $15) == (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$62
	$21 = *($22 + [136])
	$4 = *($7)
	$5 = *($22 + [140])
	$15 = [0]
	$2 = [0]
	$16 = CALL strlen([2848])
	if ( ($16 == 0) ){ goto $label$65 }
	$21 = ( $5 ? uint_32($21 >> [1]) : $2 )
	$2 = ($21 & [1])
	$14 = ( $4 ? $9 : $2 )
	$4 = ($14 + $21)
	$2 = $4
	if ( ((int_32)$21 < (int_32)$16) ){ goto $label$66 }
	$2 = $14
	
.LOOP $label$68:
	$21 = (($21 - $16) + [1])
	if ( ($21 == 0) ){ goto $label$67 }
	$2 = CALL memchr($2, [45], $21)
	if ( ($2 == 0) ){ goto $label$67 }
	if ( (CALL memcmp($2, [2848], $16) == 0) ){ goto $label$66 }
	$2 = ($2 + [1])
	$21 = ($4 - $2)
	if ( ((int_32)$21 >= (int_32)$16) ){ goto $label$68 }
	
.LABEL $label$67
	$2 = $4
	
.LABEL $label$66
	$2 = ( [-1] ? ($2 - $14) : ((int_32)$2 == (int_32)$4) )
	
.LABEL $label$65
	CALL $174(($22 + [88]), ($22 + [136]), [0], $2, ($22 + [136]))
	$2 = *($22 + [136])
	$21 = *($7)
	$4 = *($22 + [140])
	$16 = CALL strlen([2848])
	if ( ($16 == 0) ){ goto $label$69 }
	$21 = ( $4 ? uint_32($2 >> [1]) : $5 )
	$5 = ($2 & [1])
	$15 = ( $21 ? $9 : $5 )
	$4 = ($15 + $21)
	$2 = $4
	if ( ((int_32)$21 < (int_32)$16) ){ goto $label$70 }
	$2 = $15
	
.LOOP $label$72:
	$21 = (($21 - $16) + [1])
	if ( ($21 == 0) ){ goto $label$71 }
	$2 = CALL memchr($2, [45], $21)
	if ( ($2 == 0) ){ goto $label$71 }
	if ( (CALL memcmp($2, [2848], $16) == 0) ){ goto $label$70 }
	$2 = ($2 + [1])
	$21 = ($4 - $2)
	if ( ((int_32)$21 >= (int_32)$16) ){ goto $label$72 }
	
.LABEL $label$71
	$2 = $4
	
.LABEL $label$70
	$15 = ( [-1] ? ($2 - $15) : ((int_32)$2 == (int_32)$4) )
	
.LABEL $label$69
	$5 = [0]
	CALL $164(($22 + [136]), CALL $171(($22 + [136]), [0], ($15 + [1])))
	$21 = *($22 + [136])
	$4 = *($7)
	$15 = *($22 + [140])
	$2 = [0]
	$16 = CALL strlen([2848])
	if ( ($16 == 0) ){ goto $label$73 }
	$21 = ( $15 ? uint_32($21 >> [1]) : $2 )
	$2 = ($21 & [1])
	$14 = ( $4 ? $9 : $2 )
	$4 = ($14 + $21)
	$2 = $4
	if ( ((int_32)$21 < (int_32)$16) ){ goto $label$74 }
	$2 = $14
	
.LOOP $label$76:
	$21 = (($21 - $16) + [1])
	if ( ($21 == 0) ){ goto $label$75 }
	$2 = CALL memchr($2, [45], $21)
	if ( ($2 == 0) ){ goto $label$75 }
	if ( (CALL memcmp($2, [2848], $16) == 0) ){ goto $label$74 }
	$2 = ($2 + [1])
	$21 = ($4 - $2)
	if ( ((int_32)$21 >= (int_32)$16) ){ goto $label$76 }
	
.LABEL $label$75
	$2 = $4
	
.LABEL $label$74
	$2 = ( [-1] ? ($2 - $14) : ((int_32)$2 == (int_32)$4) )
	
.LABEL $label$73
	CALL eosio_assert(((int_32)$2 != (int_32)[-1]), [2864])
	$2 = *($22 + [136])
	$21 = *($7)
	$4 = *($22 + [140])
	$16 = CALL strlen([2848])
	if ( ($16 == 0) ){ goto $label$77 }
	$21 = ( $4 ? uint_32($2 >> [1]) : $5 )
	$5 = ($2 & [1])
	$15 = ( $21 ? $9 : $5 )
	$4 = ($15 + $21)
	$2 = $4
	if ( ((int_32)$21 < (int_32)$16) ){ goto $label$78 }
	$2 = $15
	
.LOOP $label$80:
	$21 = (($21 - $16) + [1])
	if ( ($21 == 0) ){ goto $label$79 }
	$2 = CALL memchr($2, [45], $21)
	if ( ($2 == 0) ){ goto $label$79 }
	if ( (CALL memcmp($2, [2848], $16) == 0) ){ goto $label$78 }
	$2 = ($2 + [1])
	$21 = ($4 - $2)
	if ( ((int_32)$21 >= (int_32)$16) ){ goto $label$80 }
	
.LABEL $label$79
	$2 = $4
	
.LABEL $label$78
	$5 = ( [-1] ? ($2 - $15) : ((int_32)$2 == (int_32)$4) )
	
.LABEL $label$77
	$2 = [0]
	CALL $174(($22 + [72]), ($22 + [136]), [0], $5, ($22 + [136]))
	$4 = *($22 + [136])
	$15 = *($7)
	$5 = *($22 + [140])
	$16 = [0]
	$21 = CALL strlen([2848])
	if ( ($21 == 0) ){ goto $label$81 }
	$4 = ( $5 ? uint_32($4 >> [1]) : $16 )
	$16 = ($4 & [1])
	$14 = ( $15 ? $9 : $16 )
	$15 = ($14 + $4)
	$16 = $15
	if ( ((int_32)$4 < (int_32)$21) ){ goto $label$82 }
	$16 = $14
	
.LOOP $label$84:
	$4 = (($4 - $21) + [1])
	if ( ($4 == 0) ){ goto $label$83 }
	$16 = CALL memchr($16, [45], $4)
	if ( ($16 == 0) ){ goto $label$83 }
	if ( (CALL memcmp($16, [2848], $21) == 0) ){ goto $label$82 }
	$16 = ($16 + [1])
	$4 = ($15 - $16)
	if ( ((int_32)$4 >= (int_32)$21) ){ goto $label$84 }
	
.LABEL $label$83
	$16 = $15
	
.LABEL $label$82
	$16 = ( [-1] ? ($16 - $14) : ((int_32)$16 == (int_32)$15) )
	
.LABEL $label$81
	CALL $164(($22 + [136]), CALL $171(($22 + [136]), [0], ($16 + [1])))
	$16 = *($22 + [72])
	CALL eosio_assert(( *($22 + [76]) ? uint_32($16 >> [1]) : ($16 & [1]) ), [2896])
	CALL $173(($22 + [56]), ($22 + [88]))
	
.LOOP $label$86:
	$21 = [1]
	$16 = ($16 & [1])
	$16 = *($22 + [56])
	if ( ((uint_32)$2 >= (uint_32)( *($22 + [60]) ? uint_32($16 >> [1]) : $16 )) ){ goto $label$85 }
	$16 = (( *((($22 + [56]) + [8])) ? $11 : $16 ) + $2)
	$2 = ($2 + [1])
	if ( CALL isdigit(*($16)) ){ goto $label$86 }
	$21 = [0]
	
.LABEL $label$85
	CALL eosio_assert($21, [2928])
	if ( ((*($22 + [56]) & [1]) == 0) ){ goto $label$87 }
	CALL $162(*((($22 + [56]) + [8])))
	
.LABEL $label$87
	CALL $173(($22 + [40]), ($22 + [72]))
	$2 = [0]
	
.LOOP $label$89:
	$21 = [1]
	$16 = ($16 & [1])
	$16 = *($22 + [40])
	if ( ((uint_32)$2 >= (uint_32)( *($22 + [44]) ? uint_32($16 >> [1]) : $16 )) ){ goto $label$88 }
	$16 = (( *((($22 + [40]) + [8])) ? $12 : $16 ) + $2)
	$2 = ($2 + [1])
	if ( CALL isdigit(*($16)) ){ goto $label$89 }
	$21 = [0]
	
.LABEL $label$88
	CALL eosio_assert($21, [2976])
	if ( ((*($22 + [40]) & [1]) == 0) ){ goto $label$90 }
	CALL $162(*((($22 + [40]) + [8])))
	
.LABEL $label$90
	$4 = (($22 + [72]) + [8])
	$2 = CALL atoi(( *($4) ? $13 : (*($22 + [72]) & [1]) ))
	*($22 + [36]) = $2
	if ( ((int_32)$2 > (int_32)[299]) ){ goto $label$93 }
	if ( ((uint_32)$2 > (uint_32)[222]) ){ goto $label$92 }
	goto $label$91 
	
.LABEL $label$93
	if ( ((int_32)$2 <= (int_32)[499]) ){ goto $label$97 }
	if ( ((int_32)$2 <= (int_32)[599]) ){ goto $label$96 }
	if ( ((int_32)$2 > (int_32)[665]) ){ goto $label$94 }
	if ( ((int_32)$2 == (int_32)[600]) ){ goto $label$91 }
	if ( ((int_32)$2 == (int_32)[660]) ){ goto $label$91 }
	goto $label$92 
	
.LABEL $label$97
	if ( ((int_32)$2 > (int_32)[399]) ){ goto $label$95 }
	if ( ((int_32)$2 == (int_32)[300]) ){ goto $label$91 }
	if ( ((int_32)$2 == (int_32)[330]) ){ goto $label$91 }
	if ( ((int_32)$2 == (int_32)[333]) ){ goto $label$91 }
	goto $label$92 
	
.LABEL $label$96
	if ( ((int_32)$2 == (int_32)[500]) ){ goto $label$91 }
	if ( ((int_32)$2 == (int_32)[550]) ){ goto $label$91 }
	if ( ((int_32)$2 == (int_32)[555]) ){ goto $label$91 }
	goto $label$92 
	
.LABEL $label$95
	if ( ((int_32)$2 == (int_32)[400]) ){ goto $label$91 }
	if ( ((int_32)$2 == (int_32)[440]) ){ goto $label$91 }
	if ( ((int_32)$2 == (int_32)[444]) ){ goto $label$91 }
	goto $label$92 
	
.LABEL $label$94
	if ( ((int_32)$2 == (int_32)[666]) ){ goto $label$91 }
	if ( ((int_32)$2 == (int_32)[777]) ){ goto $label$91 }
	
.LABEL $label$92
	CALL eosio_assert([0], [3024])
	
.LABEL $label$91
	CALL $173($22, ($22 + [88]))
	CALL _ZN5sicbo7str2eosENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN5eosio11symbol_typeE(($22 + [16]), $22, $22, $6)
	if ( ((*($22) & [1]) == 0) ){ goto $label$98 }
	CALL $162(*(($22 + [8])))
	
.LABEL $label$98
	$18 = *($22 + [16])
	CALL eosio_assert(((int_64)$18 > (int_64)0), [3040])
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$100 }
	$16 = *($22 + [36])
	$21 = $8
	
.LOOP $label$102:
	if ( ((int_32)*($2 + [16]) < (int_32)$16) ){ goto $label$103 }
	$21 = $2
	$15 = *($2)
	$2 = $15
	if ( $15 ){ goto $label$102 }
	goto $label$101 
	
.LABEL $label$103
	$2 = *($2 + [4])
	if ( $2 ){ goto $label$102 }
	
.LABEL $label$101
	if ( ((int_32)$21 == (int_32)$8) ){ goto $label$100 }
	if ( ((int_32)$16 >= (int_32)*($21 + [16])) ){ goto $label$99 }
	
.LABEL $label$100
	$21 = $8
	
.LABEL $label$99
	*($22 + [160]) = ($22 + [36])
	CALL $133(($22 + [168]), $0, ($22 + [36]), [3072], ($22 + [160]), ($22 + [152]))
	$16 = *($22 + [168])
	$2 = ($16 + [24])
	if ( ((int_32)$21 == (int_32)$8) ){ goto $label$105 }
	CALL eosio_assert(((int_64)*((($22 + [16]) + [8])) == (int_64)*(($16 + [32]))), [1712])
	$17 = ((int_64)*($2) + (int_64)$18)
	*($2) = $17
	CALL eosio_assert(((int_64)$17 > (int_64)-4611686018427387904), [1760])
	CALL eosio_assert(((int_64)*($2) < (int_64)4611686018427387904), [1792])
	goto $label$104 
	
.LABEL $label$105
	*($2) = *($22 + [16])
	*(($2 + [8])) = *((($22 + [16]) + [8]))
	
.LABEL $label$104
	CALL eosio_assert(((int_64)*((($22 + [16]) + [8])) == (int_64)*(($3 + [8]))), [1712])
	$18 = ((int_64)*($3) + (int_64)$18)
	*($3) = $18
	CALL eosio_assert(((int_64)$18 > (int_64)-4611686018427387904), [1760])
	CALL eosio_assert(((int_64)*($3) < (int_64)4611686018427387904), [1792])
	if ( ((*($22 + [72]) & [1]) == 0) ){ goto $label$106 }
	CALL $162(*($4))
	
.LABEL $label$106
	if ( ((*($22 + [88]) & [1]) == 0) ){ goto $label$61 }
	CALL $162(*((($22 + [88]) + [8])))
	goto $label$61 
	
.LABEL $label$1
	if ( ((*($22 + [136]) & [1]) == 0) ){ goto $label$107 }
	CALL $162(*(($22 + [144])))
	
.LABEL $label$107
	*([0] + [4]) = ($22 + [176])
	$2
}

void .FUNC $120 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [1264])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1312])
	$5 = *($1 + [8])
	$2 = *($2)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)$5), [1600])
	$3 = (int_64)
	*($1) = $3(*($1) - *($2)))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [1648])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1680])
	CALL eosio_assert([1], [896])
	$3 = (uint_64)$5 >> (uint_64)(int_64)8)
	$5 = (int_64)5462355
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [960])
	$5 = *(($1 + [8]))
	$7 = (int_64)0
	$4 = *($1)
	if ( ((int_64)$4 < (int_64)1) ){ goto $label$6 }
	$7 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $4) * (float_64)(float_64)0.5))
	
.LABEL $label$6
	*($1 + [16]) = $7
	*(($1 + [24])) = $5
	CALL eosio_assert(((int_64)$3 == (int_64)(uint_64)$5 >> (uint_64)(int_64)8)), [1376])
	$6 = $9
	$2 = ($6 + [-64])
	*([0] + [4]) = $2
	*($8 + [12]) = $2
	*($8 + [8]) = $2
	*($8 + [16]) = $6
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($1 + [16])
	*($8 + [32]) = $1
	*($8 + [40]) = ($1 + [32])
	*($8 + [44]) = ($1 + [48])
	CALL $107(($8 + [32]), ($8 + [24]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [64])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [48])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

void .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = CALL $161([16])
	*($0 + [8]) = $6
	*($0) = (int_64)55834574865
	CALL memset($6, [46], [13])
	*($6 + [13]) = [0]
	$2 = ($0 + [1])
	$8 = *($1)
	$7 = [17]
	$5 = ($0 + [8])
	$6 = [12]
	
.LOOP $label$1:
	$4 = ((int_32)$6 == (int_32)[12])
	$3 = *((*([0] + [2760]) + (CASTING uint_32)(uint_64 ((int_64)( (int_64)15 ? (int_64)31 : $4 ) & (int_64)$8))))
	$1 = $2
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	$1 = *($5)
	
.LABEL $label$2
	*(($1 + $6)) = $3
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ($6 + [-1])
	$8 = (uint_64)$8 >> (uint_64)( (int_64)4 ? (int_64)5 : $4 ))
	$7 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($6 & [1])
	$6 = *($0)
	$6 = ( *(($0 + [4])) ? uint_32($6 >> [1]) : $1 )
	$7 = ( *(($0 + [8])) ? $2 : $1 )
	
.LOOP $label$5:
	if ( ($6 == 0) ){ goto $label$4 }
	$1 = ($7 + $6)
	$3 = ($6 + [-1])
	$6 = $3
	if ( ((int_32)*(($1 + [-1])) == (int_32)[46]) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	CALL $174($9, $0, [0], ($3 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$6
	CALL $166($0, [0])
	*(($0 + [8])) = *(($9 + [8]))
	*($0) = *($9)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $125 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [128])
	$12 = $13
	*([0] + [4]) = $13
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1264])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1312])
	$9 = ((int_64)((int_64)*(*($2)) + (int_64)*($1 + [8])) + (int_64)1)
	*($1 + [8]) = $9
	$4 = ($1 + [8])
	$7 = *($2 + [4])
	$3 = *($1)
	if ( ((uint_32)(CASTING uint_32)(uint_64 $9) > (uint_32)[9]) ){ goto $label$2 }
	$11 = $3
	if ( ((CASTING uint_32)(uint_64 (uint_64)$9 >> (uint_64)(int_64)32)) <= [3]) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = *($2 + [8])
	$9 = *($8)
	$11 = *($7)
	*($12 + [8]) = $11
	*($12 + [16]) = $9
	*($12 + [24]) = (int_64)-1
	$10 = [0]
	*($12 + [32]) = [0]
	*(($12 + [36])) = [0]
	*((($12 + [8]) + [32])) = [0]
	$8 = CALL db_find_i64($11, $9, (int_64)-5918304704032407552, *($8))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	$10 = CALL $108(($12 + [8]), $8)
	CALL eosio_assert(((int_32)*($10 + [40]) == (int_32)($12 + [8])), [1136])
	if ( (int_64)(*($10 + [32]) == 0) ){ goto $label$9 }
	CALL eosio_assert([0], [2816])
	$7 = *($12 + [32])
	if ( $7 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$10
	$8 = *($2 + [12])
	$6 = *($2 + [16])
	$5 = *($7)
	CALL eosio_assert(((int_64)$11 == (int_64)CALL $fimport$3()), [1872])
	*(($2 = CALL $161([56])) + [8]) = (int_64)1398362884
	*($2) = (int_64)0
	CALL eosio_assert([1], [896])
	$9 = (int_64)5462355
	
.LOOP $label$12:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$7 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	CALL eosio_assert($7, [960])
	*($2 + [40]) = ($12 + [8])
	$9 = *($6 + [8])
	*($2 + [32]) = (int_64)0
	*(($10 = ($2 + [8]))) = $9
	*($2 + [16]) = *($8)
	*($12 + [96]) = (($12 + [48]) + [40])
	*($12 + [92]) = ($12 + [48])
	*($12 + [88]) = ($12 + [48])
	*($12 + [104]) = ($12 + [88])
	*($12 + [116]) = ($2 + [16])
	*($12 + [112]) = $2
	*($12 + [120]) = ($2 + [24])
	*($12 + [124]) = ($2 + [32])
	CALL $110(($12 + [112]), ($12 + [104]))
	$9 = (uint_64)*($10) >> (uint_64)(int_64)8
	$7 = CALL db_store_i64(*((($12 + [8]) + [8])), (int_64)-5918304704032407552, $5, $9), ($12 + [48]), [40]
	*($2 + [44]) = $7)
	$8 = (($12 + [8]) + [16])
	if ( (uint_64)($9 <= *($8)) ){ goto $label$15 }
	*($8) = ((int_64)$9 + (int_64)1)
	
.LABEL $label$15
	*($12 + [112]) = $2
	$9 = (uint_64)*($10) >> (uint_64)(int_64)8
	*($12 + [48]) = $9)
	*($12 + [88]) = $7
	$8 = ($12 + [36])
	$10 = *($8)
	if ( ((uint_32)$10 >= (uint_32)*((($12 + [8]) + [32]))) ){ goto $label$8 }
	*($10 + [8]) = $9
	*($10 + [16]) = $7
	*($12 + [112]) = [0]
	*($10) = $2
	*($8) = ($10 + [24])
	goto $label$7 
	
.LABEL $label$9
	$7 = ($10 + [32])
	$8 = *($2 + [12])
	$11 = *($10 + [16])
	CALL eosio_assert([1], [1216])
	CALL eosio_assert(((int_32)*(($10 + [40])) == (int_32)($12 + [8])), [1264])
	CALL eosio_assert(((int_64)*($12 + [8]) == (int_64)CALL $fimport$3()), [1312])
	$2 = ($10 + [16])
	$9 = (uint_64)*($10 + [8]) >> (uint_64)(int_64)8)
	if ( (int_64)($11 == 0) ){ goto $label$6 }
	*(($10 + [32])) = (int_64)1
	*($10 + [24]) = *($8)
	CALL eosio_assert([1], [1376])
	*($12 + [96]) = (($12 + [48]) + [40])
	*($12 + [92]) = ($12 + [48])
	*($12 + [88]) = ($12 + [48])
	*($12 + [104]) = ($12 + [88])
	*($12 + [116]) = $2
	*($12 + [112]) = $10
	*($12 + [120]) = ($10 + [24])
	*($12 + [124]) = $7
	CALL $110(($12 + [112]), ($12 + [104]))
	CALL db_update_i64(*($10 + [44]), (int_64)0, ($12 + [48]), [40])
	if ( (uint_64)($9 <= *((($12 + [8]) + [16]))) ){ goto $label$5 }
	*(($12 + [24])) = ((int_64)$9 + (int_64)1)
	$7 = *($12 + [32])
	if ( $7 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$8
	CALL $111(($12 + [32]), ($12 + [112]), ($12 + [48]), ($12 + [88]))
	
.LABEL $label$7
	$10 = *($12 + [112])
	*($12 + [112]) = [0]
	if ( ($10 == 0) ){ goto $label$5 }
	CALL $162($10)
	goto $label$5 
	
.LABEL $label$6
	*(($10 + [32])) = (int_64)0
	*($2) = *($8)
	CALL eosio_assert([1], [1376])
	*($12 + [96]) = (($12 + [48]) + [40])
	*($12 + [92]) = ($12 + [48])
	*($12 + [88]) = ($12 + [48])
	*($12 + [104]) = ($12 + [88])
	*($12 + [116]) = $2
	*($12 + [112]) = $10
	*($12 + [120]) = ($10 + [24])
	*($12 + [124]) = $7
	CALL $110(($12 + [112]), ($12 + [104]))
	CALL db_update_i64(*($10 + [44]), (int_64)0, ($12 + [48]), [40])
	if ( (uint_64)($9 <= *((($12 + [8]) + [16]))) ){ goto $label$5 }
	*(($12 + [24])) = ((int_64)$9 + (int_64)1)
	$7 = *($12 + [32])
	if ( $7 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = *($12 + [32])
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = ($12 + [36])
	$10 = *($8)
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$17 }
	
.LOOP $label$18:
	$10 = ($10 + [-24])
	$2 = *($10)
	*($10) = [0]
	if ( ($2 == 0) ){ goto $label$19 }
	CALL $162($2)
	
.LABEL $label$19
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$18 }
	$10 = *(($12 + [32]))
	goto $label$16 
	
.LABEL $label$17
	$10 = $7
	
.LABEL $label$16
	*($8) = $7
	CALL $162($10)
	
.LABEL $label$3
	$11 = *($1)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$3 == (int_64)$11), [1376])
	$2 = $13
	$10 = ($2 + [-16])
	*([0] + [4]) = $10
	CALL eosio_assert([1], [1440])
	CALL memcpy($10, $1, [8])
	CALL eosio_assert([1], [1440])
	CALL memcpy(($2 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $10, [16])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$20 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$20
	*([0] + [4]) = ($12 + [128])
}

void .FUNC $124 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $124($0, *($1))
	CALL $124($0, *($1 + [4]))
	CALL $162($1)
	
.LABEL $label$1
}

void .FUNC _ZN5sicbo8presolveEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [160])
	*([0] + [4]) = $13
	CALL require_auth(*($0))
	$10 = (int_64)0
	$12 = (int_64)59
	$7 = [32]
	$8 = (int_64)0
	
.LOOP $label$1:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$2 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$5 = ($5 + [165])
	goto $label$3 
	
.LABEL $label$4
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$1 }
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [16]
	$11 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$10 > (uint_64)(int_64)4) ){ goto $label$10 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$5 = ($5 + [165])
	goto $label$8 
	
.LABEL $label$10
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$6
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$5 }
	$10 = CALL current_time()
	*($13 + [152]) = ((int_64)$11 + (int_64)$8)
	*($13 + [144]) = ((int_64)((int_64)((uint_64)$10 / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$1)
	$10 = CALL current_time()
	*(($13 + [108])) = [0]
	*(($13 + [112])) = [0]
	*($13 + [92]) = [0]
	*($13 + [96]) = [0]
	*($13 + [100]) = [0]
	*($13 + [104]) = [0]
	*($13 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$10 / (uint_64)(int_64)1000000)) + [60])
	*($13 + [116]) = [0]
	*(($13 + [120])) = [0]
	*(($13 + [124])) = [0]
	*($13 + [128]) = [0]
	*(($13 + [132])) = [0]
	*(($13 + [136])) = [0]
	$6 = ($13 + [116])
	$11 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [1472]
	$8 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$16 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$5 = ($5 + [165])
	goto $label$14 
	
.LABEL $label$16
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$12
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$12 | (int_64)$8)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$11 }
	*($13 + [72]) = $8
	*($13 + [64]) = $11
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [16]
	$8 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$10 > (uint_64)(int_64)4) ){ goto $label$22 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$5 = ($5 + [165])
	goto $label$20 
	
.LABEL $label$22
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$18
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$12 | (int_64)$8)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$17 }
	*($13 + [56]) = $8
	*(($13 + [36])) = *(($3 + [12]))
	*(($13 + [32])) = *(($3 + [8]))
	*((($13 + [8]) + [20])) = *(($3 + [4]))
	*($13 + [16]) = $2
	*($13 + [8]) = $1
	*($13 + [24]) = *($3)
	CALL $173(($13 + [40]), $4)
	CALL $134($6, ($13 + [64]), $0, ($13 + [56]), ($13 + [8]))
	if ( ((*($13 + [40]) & [1]) == 0) ){ goto $label$23 }
	CALL $162(*(($13 + [48])))
	
.LABEL $label$23
	*((($13 + [80]) + [20])) = [1]
	$10 = *($0)
	CALL $63(($13 + [8]), ($13 + [80]))
	$7 = *($13 + [8])
	CALL send_deferred(($13 + [144]), $10, $7, (*($13 + [12]) - $7), [0])
	$7 = *($13 + [8])
	if ( ($7 == 0) ){ goto $label$24 }
	*($13 + [12]) = $7
	CALL $162($7)
	
.LABEL $label$24
	CALL $64(($13 + [80]))
	*([0] + [4]) = ($13 + [160])
}

void .FUNC _ZN5sicbo5solveEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_64 $22
	int_64 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	float_64 $28
	int_32 $29
	int_64 $30
	int_64 $31
	int_64 $32
	int_32 $33
	int_32 $34
	$34 = (*([0] + [4]) - [448])
	*([0] + [4]) = $34
	*($34 + [360]) = $1
	CALL require_auth(*($0))
	*($34 + [352]) = (int_64)0
	*($34 + [344]) = (int_64)0
	*($34 + [336]) = (int_64)1398362884
	*($34 + [328]) = (int_64)0
	CALL eosio_assert([1], [896])
	$25 = [0]
	$1 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$29 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$29 = [0]
	
.LABEL $label$1
	CALL eosio_assert($29, [960])
	*(($25 = (($34 + [328]) + [8]))) = *($3 + [8])
	*($34 + [328]) = (int_64)0
	*($34 + [320]) = (int_64)0
	CALL $173(($34 + [288]), $4)
	CALL _ZN5sicbo12_split_extraENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPN5eosio5assetEPySA_NS7_11symbol_typeESA_(($34 + [304]), $0, ($34 + [288]), ($34 + [328]), ($34 + [352]), ($34 + [344]), *($3 + [8]), ($34 + [320]))
	if ( ((*($34 + [288]) & [1]) == 0) ){ goto $label$6 }
	CALL $162(*($34 + [296]))
	
.LABEL $label$6
	$31 = *($34 + [320])
	$1 = *($34 + [328])
	CALL __multi3(($34 + [48]), $1, (int_64)$1 >> (int_64)63), $31, (int_64)$31 >> (int_64)63))
	$32 = *($25)
	$1 = *((($34 + [48]) + [8]))
	$14 = *($34 + [48])
	CALL eosio_assert(( (uint_64)($14 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ), [2384])
	CALL eosio_assert(( ((uint_64)$14 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ), [2416])
	$25 = ($3 + [8])
	CALL eosio_assert(((int_64)$32 == (int_64)*($25)), [2448])
	CALL eosio_assert(((int_64)*($3) >= (int_64)$14), [2512])
	$1 = *($25)
	if ( ((int_64)$1 != (int_64)1397703940) ){ goto $label$19 }
	$32 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $31) * (float_64)(float_64)1e6))
	CALL eosio_assert((uint_64)(((int_64)$32 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$1 = (int_64)5459781
	$25 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	
.LOOP $label$22:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$22 }
	
.LABEL $label$21
	$29 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$20 }
	goto $label$17 
	
.LABEL $label$19
	if ( ((int_64)$1 != (int_64)340414906884) ){ goto $label$16 }
	$11 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $31) * (float_64)(float_64)1e9))
	CALL eosio_assert((uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$1 = (int_64)1329745730
	$25 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$29 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$23 }
	goto $label$14 
	
.LABEL $label$18
	$29 = [0]
	
.LABEL $label$17
	CALL eosio_assert($29, [960])
	CALL eosio_assert(((int_64)*(($34 + [336])) == (int_64)1397703940), [2448])
	CALL eosio_assert(((int_64)*($34 + [328]) <= (int_64)$32), [2544])
	goto $label$7 
	
.LABEL $label$16
	if ( ((int_64)$1 != (int_64)297481618436) ){ goto $label$13 }
	$11 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $31) * (float_64)(float_64)1e9))
	CALL eosio_assert((uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$1 = (int_64)1162037572
	$25 = [0]
	
.LOOP $label$26:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	
.LOOP $label$28:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$28 }
	
.LABEL $label$27
	$29 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$26 }
	goto $label$11 
	
.LABEL $label$15
	$29 = [0]
	
.LABEL $label$14
	CALL eosio_assert($29, [960])
	CALL eosio_assert(((int_64)$32 == (int_64)340414906884), [2448])
	CALL eosio_assert(((int_64)$14 <= (int_64)$11), [2544])
	goto $label$7 
	
.LABEL $label$13
	if ( ((int_64)$1 != (int_64)293455873288) ){ goto $label$10 }
	$11 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $31) * (float_64)(float_64)1e10))
	CALL eosio_assert((uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$1 = (int_64)1146312005
	$25 = [0]
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	
.LOOP $label$31:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$31 }
	
.LABEL $label$30
	$29 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$29 }
	goto $label$8 
	
.LABEL $label$12
	$29 = [0]
	
.LABEL $label$11
	CALL eosio_assert($29, [960])
	CALL eosio_assert(((int_64)$32 == (int_64)297481618436), [2448])
	CALL eosio_assert(((int_64)$14 <= (int_64)$11), [2544])
	goto $label$7 
	
.LABEL $label$10
	CALL eosio_assert([0], [2304])
	goto $label$7 
	
.LABEL $label$9
	$29 = [0]
	
.LABEL $label$8
	CALL eosio_assert($29, [960])
	CALL eosio_assert(((int_64)$32 == (int_64)293455873288), [2448])
	CALL eosio_assert(((int_64)$14 <= (int_64)$11), [2544])
	
.LABEL $label$7
	if ( ((int_64)*($34 + [328]) < (int_64)1) ){ goto $label$33 }
	$1 = *($34 + [352])
	*($34 + [176]) = ((int_64)((int_64)((int_64)((int_64)(uint_64)$1 >> (uint_64)(int_64)20) & (int_64)16777215) * (int_64)((int_64)$1 & (int_64)1048575)) + (int_64)(uint_64)$1 >> (uint_64)(int_64)38)) + (int_64)(CASTING int_64)(int_32 ((int_32)CALL tapos_block_num() * (int_32)CALL $fimport$32())))
	CALL sha512(($34 + [176]), [4], ($34 + [368]))
	$25 = [0]
	
.LOOP $label$34:
	*((($34 + [224]) + $25)) = *((($34 + [368]) + $25))
	$25 = ($25 + [2])
	if ( ((int_32)$25 != (int_32)[60]) ){ goto $label$34 }
	CALL eosio_assert([1], [896])
	$1 = (int_64)5462355
	$25 = [0]
	
.LOOP $label$37:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$36 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$38 }
	
.LOOP $label$39:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$36 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$39 }
	
.LABEL $label$38
	$29 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$36
	$29 = [0]
	
.LABEL $label$35
	CALL eosio_assert($29, [960])
	$13 = *(($3 + [8]))
	CALL eosio_assert([1], [896])
	$1 = (int_64)5462355
	$25 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$43 }
	
.LOOP $label$44:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$44 }
	
.LABEL $label$43
	$29 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	$29 = [0]
	
.LABEL $label$40
	CALL eosio_assert($29, [960])
	$15 = ($3 + [8])
	$5 = *($15)
	$1 = $5
	$32 = (int_64)0
	$11 = (int_64)0
	if ( (int_64)($31 == 0) ){ goto $label$45 }
	$10 = ($0 + [12])
	$8 = ($0 + [48])
	$7 = ($0 + [24])
	$9 = (($34 + [112]) | [4])
	$6 = (($34 + [304]) | [4])
	$17 = (($34 + [368]) + [16])
	$18 = (($34 + [368]) + [20])
	$19 = ($34 + [396])
	$20 = ($0 + [56])
	$21 = ($0 + [52])
	$33 = [0]
	$11 = (int_64)0
	$32 = (int_64)0
	
.LOOP $label$46:
	$25 = (($34 + [224]) + ((int_32)$33 * (int_32)[6]))
	$29 = (((uint_32)(*(($25 + [2])) + [2]) % (uint_32)[6]) + [1])
	*((($34 + [128]) + [4])) = $29
	$26 = (((uint_32)(*(($25 + [4])) + [3]) % (uint_32)[6]) + [1])
	*((($34 + [128]) + [8])) = $26
	$25 = (((uint_32)(*($25) + [1]) % (uint_32)[6]) + [1])
	*($34 + [128]) = $25
	*($34 + [216]) = (CASTING uint_64)(uint_32 ($26 + ((int_32)($29 + ((int_32)$25 * (int_32)[10])) * (int_32)[10])))
	CALL _ZN5sicbo11_getWinsMapEPi(($34 + [112]), $25, ($34 + [128]))
	*(($16 = (($34 + [176]) + [8]))) = (int_64)1398362884
	*($34 + [176]) = (int_64)0
	CALL eosio_assert([1], [896])
	$1 = (uint_64)*($16) >> (uint_64)(int_64)8)
	$25 = [0]
	
.LOOP $label$48:
	$29 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$47 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$49 }
	
.LOOP $label$50:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$47 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$50 }
	
.LABEL $label$49
	$29 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$48 }
	
.LABEL $label$47
	CALL eosio_assert($29, [960])
	$1 = *($15)
	*($16) = $1
	*($34 + [176]) = (int_64)0
	$29 = *($34 + [304])
	if ( ((int_32)$29 == (int_32)$6) ){ goto $label$51 }
	
.LOOP $label$52:
	$12 = $29
	$26 = *($34 + [116])
	if ( ($26 == 0) ){ goto $label$53 }
	$1 = *($12 + [24])
	$29 = *($12 + [16])
	$24 = $9
	$25 = $26
	
.LOOP $label$55:
	if ( ((int_32)*($25 + [16]) >= (int_32)$29) ){ goto $label$56 }
	$25 = *($25 + [4])
	if ( $25 ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	$24 = $25
	$27 = *($25)
	$25 = $27
	if ( $27 ){ goto $label$55 }
	
.LABEL $label$54
	if ( ((int_32)$24 == (int_32)$9) ){ goto $label$53 }
	$27 = $9
	if ( ((int_32)$29 < (int_32)*($24 + [16])) ){ goto $label$53 }
	
.LOOP $label$58:
	$25 = *($26 + [16])
	if ( ((int_32)$29 >= (int_32)$25) ){ goto $label$60 }
	$27 = $26
	$25 = *($26)
	if ( $25 ){ goto $label$59 }
	goto $label$57 
	
.LABEL $label$60
	if ( ((int_32)$25 >= (int_32)$29) ){ goto $label$57 }
	$27 = ($26 + [4])
	$25 = *($26 + [4])
	if ( ($25 == 0) ){ goto $label$57 }
	
.LABEL $label$59
	$26 = $25
	goto $label$58 
	
.LABEL $label$57
	$25 = *($27)
	if ( $25 ){ goto $label$61 }
	*(($25 = CALL $161([24]))) = (int_64)0
	*($25 + [8]) = $26
	*($27) = $25
	*($25 + [20]) = [0]
	*($25 + [16]) = $29
	$26 = $25
	$24 = *(*($34 + [112]))
	if ( ($24 == 0) ){ goto $label$62 }
	*($34 + [112]) = $24
	$26 = *($27)
	
.LABEL $label$62
	CALL $122(*($34 + [116]), $26)
	*(($26 = (($34 + [112]) + [8]))) = (*($26) + [1])
	
.LABEL $label$61
	if ( (*(($25 + [20])) == 0) ){ goto $label$67 }
	$25 = *($10)
	if ( ($25 == 0) ){ goto $label$66 }
	$26 = $10
	
.LOOP $label$68:
	$27 = *($25 + [16])
	if ( ((int_32)$29 >= (int_32)$27) ){ goto $label$70 }
	$27 = *($25)
	if ( $27 ){ goto $label$69 }
	goto $label$65 
	
.LABEL $label$70
	if ( ((int_32)$27 >= (int_32)$29) ){ goto $label$64 }
	$26 = ($25 + [4])
	$27 = *($25 + [4])
	if ( ($27 == 0) ){ goto $label$64 }
	$25 = $26
	
.LABEL $label$69
	$26 = $25
	$25 = $27
	goto $label$68 
	
.LABEL $label$67
	$28 = (float_64)0
	goto $label$63 
	
.LABEL $label$66
	$25 = $10
	$26 = $10
	goto $label$64 
	
.LABEL $label$65
	$26 = $25
	
.LABEL $label$64
	$28 = (CASTING float_64)(int_64 $1)
	$27 = *($26)
	if ( $27 ){ goto $label$71 }
	*(($27 = CALL $161([32]))) = (int_64)0
	*($27 + [8]) = $25
	*($26) = $27
	*($27 + [24]) = (int_64)0
	*($27 + [16]) = $29
	$25 = $27
	$29 = ($0 + [8])
	$24 = *(*($29))
	if ( ($24 == 0) ){ goto $label$72 }
	*($29) = $24
	$25 = *($26)
	
.LABEL $label$72
	CALL $122(*(($0 + [12])), $25)
	*(($25 = ($0 + [16]))) = (*($25) + [1])
	
.LABEL $label$71
	$28 = ((float_64)$28 * (float_64)((float_64)*(($27 + [24])) + (float_64)(float_64)1))
	
.LABEL $label$63
	*($34 + [176]) = (Rounds 0)(((float_64)$28 + (float_64)(CASTING float_64)(int_64 *($34 + [176]))))
	
.LABEL $label$53
	$25 = *($12 + [4])
	if ( ($25 == 0) ){ goto $label$74 }
	
.LOOP $label$75:
	$29 = $25
	$25 = *($29)
	if ( $25 ){ goto $label$75 }
	goto $label$73 
	
.LABEL $label$74
	$29 = *($12 + [8])
	if ( ((int_32)*($29) == (int_32)$12) ){ goto $label$73 }
	$26 = ($12 + [8])
	
.LOOP $label$76:
	$25 = *($26)
	$26 = ($25 + [8])
	$29 = *($25 + [8])
	if ( ((int_32)$25 != (int_32)*($29)) ){ goto $label$76 }
	
.LABEL $label$73
	if ( ((int_32)$29 != (int_32)$6) ){ goto $label$52 }
	$1 = *($16)
	
.LABEL $label$51
	CALL eosio_assert(((int_64)$1 == (int_64)$13), [1712])
	$11 = ((int_64)*($34 + [176]) + (int_64)$11)
	CALL eosio_assert(((int_64)$11 > (int_64)-4611686018427387904), [1760])
	CALL eosio_assert(((int_64)$11 < (int_64)4611686018427387904), [1792])
	$1 = *($0)
	*($34 + [368]) = $0
	*((($34 + [368]) + [8])) = ($34 + [344])
	*((($34 + [368]) + [12])) = ($34 + [352])
	*($17) = ($34 + [328])
	*($18) = ($34 + [216])
	*((($34 + [368]) + [24])) = ($34 + [176])
	*($34 + [372]) = ($34 + [360])
	*($19) = $4
	*($34 + [440]) = $1
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$3()), [1872])
	*($34 + [80]) = $7
	*((($34 + [80]) + [8])) = ($34 + [440])
	*($34 + [84]) = ($34 + [368])
	$25 = CALL $161([96])
	CALL $55($25)
	*($25 + [80]) = $7
	CALL $123(($34 + [80]), $25)
	*($34 + [104]) = $25
	$1 = *($25)
	*($34 + [80]) = $1
	$26 = *($25 + [84])
	*($34 + [436]) = $26
	$29 = *($21)
	if ( ((uint_32)$29 >= (uint_32)*($20)) ){ goto $label$78 }
	*($29 + [8]) = $1
	*($29 + [16]) = $26
	*($34 + [104]) = [0]
	*($29) = $25
	*($21) = ($29 + [24])
	goto $label$77 
	
.LABEL $label$78
	CALL $57($8, ($34 + [104]), ($34 + [80]), ($34 + [436]))
	
.LABEL $label$77
	$25 = *($34 + [104])
	*($34 + [104]) = [0]
	if ( ($25 == 0) ){ goto $label$79 }
	CALL $162($25)
	
.LABEL $label$79
	*($34 + [216]) = (int_64)0
	$1 = *($34 + [328])
	$30 = *((($34 + [328]) + [8]))
	CALL eosio_assert(((int_64)*($16) == (int_64)$30), [1600])
	$1 = (int_64)
	CALL eosio_assert(((int_64)$1($1 - *($34 + [176]))) > (int_64)-4611686018427387904), [1648])
	CALL eosio_assert(((int_64)$1 < (int_64)4611686018427387904), [1680])
	CALL eosio_assert(((int_64)$30 == (int_64)$5), [1712])
	$32 = ((int_64)$1 + (int_64)$32)
	CALL eosio_assert(((int_64)$32 > (int_64)-4611686018427387904), [1760])
	CALL eosio_assert(((int_64)$32 < (int_64)4611686018427387904), [1792])
	CALL $124(($34 + [112]), *($34 + [116]))
	$33 = ($33 + [1])
	if ( (uint_64)((CASTING uint_64)(uint_32 $33) <= $31) ){ goto $label$46 }
	$1 = *(($3 + [8]))
	
.LABEL $label$45
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	*($34 + [440]) = $1)
	$25 = [0]
	*(($34 + [208])) = [0]
	$30 = *($0)
	*($34 + [176]) = $30
	*($34 + [184]) = $1
	*($34 + [192]) = (int_64)-1
	*($34 + [200]) = (int_64)0
	$29 = CALL db_find_i64($30, $1, (int_64)-3020376800539705344, *($34 + [360]))
	if ( ((int_32)$29 < (int_32)[0]) ){ goto $label$80 }
	$25 = CALL $115(($34 + [176]), $29)
	CALL eosio_assert(((int_32)*($25 + [16]) == (int_32)($34 + [176])), [1136])
	
.LABEL $label$80
	if ( ((int_64)$32 < (int_64)0) ){ goto $label$82 }
	if ( ($25 == 0) ){ goto $label$81 }
	if ( ((uint_64)*($25 + [8]) > (uint_64)(int_64)9) ){ goto $label$81 }
	CALL eosio_assert([1], [608])
	CALL eosio_assert([1], [656])
	$29 = CALL db_next_i64(*($25 + [20]), ($34 + [368]))
	if ( ((int_32)$29 < (int_32)[0]) ){ goto $label$83 }
	CALL $115(($34 + [176]), $29)
	
.LABEL $label$83
	CALL $116(($34 + [176]), $25)
	goto $label$81 
	
.LABEL $label$82
	*($34 + [80]) = ((int_64)(CASTING uint_64)(uint_32 ((float_64)((float_64)(CASTING float_64)(int_64 $32) / (float_64)(CASTING float_64)(int_64 *($3))) < (float_64)(float_64)-10)) << (int_64)32)
	if ( ($25 == 0) ){ goto $label$87 }
	$1 = *($25 + [8])
	if ( ((uint_32)(CASTING uint_32)(uint_64 $1) > (uint_32)[9]) ){ goto $label$86 }
	if ( ((uint_32)(CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)) >= (uint_32)[3]) ){ goto $label$86 }
	*($34 + [372]) = $0
	*($34 + [384]) = $3
	*($34 + [368]) = ($34 + [80])
	*($34 + [376]) = ($34 + [440])
	*($34 + [380]) = ($34 + [360])
	CALL eosio_assert([1], [1216])
	CALL $125(($34 + [176]), $25, ($34 + [368]))
	goto $label$81 
	
.LABEL $label$87
	$30 = *($0)
	CALL eosio_assert(((int_64)*($34 + [176]) == (int_64)CALL $fimport$3()), [1872])
	*(($25 = CALL $161([32])) + [16]) = ($34 + [176])
	*($25) = *($34 + [360])
	*($25 + [8]) = ((int_64)*($34 + [80]) + (int_64)1)
	CALL eosio_assert([1], [1440])
	CALL memcpy(($34 + [368]), $25, [8])
	CALL eosio_assert([1], [1440])
	CALL memcpy((($34 + [368]) | [8]), ($25 + [8]), [8])
	$1 = *($25)
	$26 = CALL db_store_i64(*((($34 + [176]) + [8])), (int_64)-3020376800539705344, $30, $1, ($34 + [368]), [16])
	*($25 + [20]) = $26
	$29 = (($34 + [176]) + [16])
	if ( (uint_64)($1 <= *($29)) ){ goto $label$88 }
	*($29) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$88
	*($34 + [128]) = $25
	$1 = *($25)
	*($34 + [368]) = $1
	*($34 + [112]) = $26
	$27 = ($34 + [204])
	$29 = *($27)
	if ( ((uint_32)$29 >= (uint_32)*((($34 + [176]) + [32]))) ){ goto $label$85 }
	*($29 + [8]) = $1
	*($29 + [16]) = $26
	*($34 + [128]) = [0]
	*($29) = $25
	*($27) = ($29 + [24])
	goto $label$84 
	
.LABEL $label$86
	CALL eosio_assert([0], [2576])
	goto $label$81 
	
.LABEL $label$85
	CALL $117(($34 + [200]), ($34 + [128]), ($34 + [368]), ($34 + [112]))
	
.LABEL $label$84
	$25 = *($34 + [128])
	*($34 + [128]) = [0]
	if ( ($25 == 0) ){ goto $label$81 }
	CALL $162($25)
	
.LABEL $label$81
	$1 = *($34 + [344])
	if ( (int_64)($1 == 0) ){ goto $label$89 }
	if ( ((int_64)$1 == (int_64)*($34 + [360])) ){ goto $label$89 }
	CALL eosio_assert([1], [896])
	$1 = (int_64)5462355
	$25 = [0]
	
.LOOP $label$92:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$91 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$93 }
	
.LOOP $label$94:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$91 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$94 }
	
.LABEL $label$93
	$29 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$92 }
	goto $label$90 
	
.LABEL $label$91
	$29 = [0]
	
.LABEL $label$90
	CALL eosio_assert($29, [960])
	$30 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $14) * (float_64)(float_64)0.002))
	$31 = *(($3 + [8]))
	$26 = ((int_64)$31 == (int_64)1397703940)
	if ( ($26 == 0) ){ goto $label$107 }
	$14 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 *($34 + [320])) * (float_64)(float_64)1e4))
	CALL eosio_assert((uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$1 = (int_64)5459781
	$25 = [0]
	
.LOOP $label$108:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$106 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$109 }
	
.LOOP $label$110:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$106 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$110 }
	
.LABEL $label$109
	$29 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$108 }
	goto $label$105 
	
.LABEL $label$107
	$26 = ((int_64)$31 == (int_64)340414906884)
	if ( ($26 == 0) ){ goto $label$104 }
	$14 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 *($34 + [320])) * (float_64)(float_64)1e7))
	CALL eosio_assert((uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$1 = (int_64)1329745730
	$25 = [0]
	
.LOOP $label$111:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$103 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$112 }
	
.LOOP $label$113:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$103 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$113 }
	
.LABEL $label$112
	$29 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$111 }
	goto $label$102 
	
.LABEL $label$106
	$29 = [0]
	
.LABEL $label$105
	CALL eosio_assert($29, [960])
	CALL eosio_assert($26, [2448])
	CALL eosio_assert(((int_64)$30 < (int_64)$14), [2608])
	goto $label$95 
	
.LABEL $label$104
	$26 = ((int_64)$31 == (int_64)297481618436)
	if ( ($26 == 0) ){ goto $label$101 }
	$14 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 *($34 + [320])) * (float_64)(float_64)1e7))
	CALL eosio_assert((uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$1 = (int_64)1162037572
	$25 = [0]
	
.LOOP $label$114:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$100 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$115 }
	
.LOOP $label$116:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$100 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$116 }
	
.LABEL $label$115
	$29 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$114 }
	goto $label$99 
	
.LABEL $label$103
	$29 = [0]
	
.LABEL $label$102
	CALL eosio_assert($29, [960])
	CALL eosio_assert($26, [2448])
	CALL eosio_assert(((int_64)$30 < (int_64)$14), [2608])
	goto $label$95 
	
.LABEL $label$101
	$26 = ((int_64)$31 == (int_64)293455873288)
	if ( ($26 == 0) ){ goto $label$98 }
	$14 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 *($34 + [320])) * (float_64)(float_64)1e11))
	CALL eosio_assert((uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$1 = (int_64)1146312005
	$25 = [0]
	
.LOOP $label$117:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$97 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$118 }
	
.LOOP $label$119:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$97 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$119 }
	
.LABEL $label$118
	$29 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$117 }
	goto $label$96 
	
.LABEL $label$100
	$29 = [0]
	
.LABEL $label$99
	CALL eosio_assert($29, [960])
	CALL eosio_assert($26, [2448])
	CALL eosio_assert(((int_64)$30 < (int_64)$14), [2608])
	goto $label$95 
	
.LABEL $label$98
	CALL eosio_assert([0], [2304])
	goto $label$95 
	
.LABEL $label$97
	$29 = [0]
	
.LABEL $label$96
	CALL eosio_assert($29, [960])
	CALL eosio_assert($26, [2448])
	CALL eosio_assert(((int_64)$30 < (int_64)$14), [2608])
	
.LABEL $label$95
	*($34 + [112]) = *($34 + [360])
	$1 = *($34 + [344])
	$14 = CALL current_time()
	*($34 + [168]) = $31
	$22 = *($34 + [344])
	$23 = *($34 + [360])
	*($34 + [160]) = $30
	CALL $126(($34 + [128]), ($34 + [112]))
	$25 = CALL $169(($34 + [128]), [0], [2624])
	$29 = ($25 + [8])
	*((($34 + [80]) + [8])) = *($29)
	*($34 + [80]) = *($25)
	*($25) = [0]
	*(($25 + [4])) = [0]
	*($29) = [0]
	$25 = CALL $167(($34 + [80]), [2720])
	$29 = ($25 + [8])
	*((($34 + [368]) + [8])) = *($29)
	*($34 + [368]) = *($25)
	*($25) = [0]
	*(($25 + [4])) = [0]
	*($29) = [0]
	*((($34 + [32]) + [8])) = *($34 + [168])
	*($34 + [32]) = *($34 + [160])
	CALL _ZN5sicbo11transfer_toEyN5eosio5assetERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEo($0, $22, ($34 + [32]), ($34 + [368]), ((int_64)$23 + (int_64)((int_64)((uint_64)$14 / (uint_64)(int_64)1000000) & (int_64)4294967295)), $1)
	if ( ((*($34 + [368]) & [1]) == 0) ){ goto $label$120 }
	CALL $162(*($34 + [376]))
	
.LABEL $label$120
	if ( ((*($34 + [80]) & [1]) == 0) ){ goto $label$121 }
	CALL $162(*($34 + [88]))
	
.LABEL $label$121
	if ( ((*($34 + [128]) & [1]) == 0) ){ goto $label$122 }
	CALL $162(*($34 + [136]))
	
.LABEL $label$122
	CALL eosio_assert(((int_64)$31 == (int_64)$5), [1600])
	$32 = (int_64)
	CALL eosio_assert(((int_64)$32($32 - $30)) > (int_64)-4611686018427387904), [1648])
	CALL eosio_assert(((int_64)$32 < (int_64)4611686018427387904), [1680])
	
.LABEL $label$89
	*($34 + [152]) = $5
	*((($34 + [16]) + [8])) = $5
	*($34 + [144]) = $32
	*($34 + [16]) = $32
	CALL _ZN5sicbo6moddivEN5eosio5assetE($0, ($34 + [16]))
	$1 = *(($3 + [8]))
	if ( ((int_64)$1 != (int_64)1397703940) ){ goto $label$124 }
	$5 = *($0)
	$1 = (int_64)0
	$30 = (int_64)59
	$25 = [2736]
	$31 = (int_64)0
	
.LOOP $label$125:
	if ( ((uint_64)$1 > (uint_64)(int_64)8) ){ goto $label$130 }
	$29 = *($25)
	if ( ((uint_32)(($29 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$129 }
	$29 = ($29 + [165])
	goto $label$128 
	
.LABEL $label$130
	$32 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$127 }
	goto $label$126 
	
.LABEL $label$129
	$29 = ( ($29 + [208]) ? [0] : ((($29 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$128
	$32 = (int_64)((int_64)(CASTING uint_64)(uint_32 $29) << (int_64)56) >> (int_64)56)
	
.LABEL $label$127
	$32 = ((int_64)((int_64)$32 & (int_64)31) << (int_64)((int_64)$30 & (int_64)4294967295))
	
.LABEL $label$126
	$25 = ($25 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$31 = ((int_64)$32 | (int_64)$31)
	$30 = ((int_64)$30 + (int_64)-5)
	if ( ((int_64)$30 != (int_64)-6) ){ goto $label$125 }
	$1 = (int_64)0
	*($34 + [128]) = (int_64)0
	*($34 + [136]) = ((int_64)$31 + (int_64)$5)
	$32 = *($34 + [360])
	$31 = *($34 + [128])
	$30 = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) | (int_64)((int_64)$32 << (int_64)32))
	$32 = ((int_64)$30 + (int_64)$31)
	*($34 + [128]) = $32
	*($34 + [136]) = ((int_64)*($34 + [136]) + (int_64)( (int_64)1 ? (CASTING uint_64)(uint_32 (uint_64)($32 <= $30)) : (uint_64)($32 <= $31) ))
	$32 = CALL current_time()
	*(($34 + [396])) = [0]
	*(($34 + [400])) = [0]
	*($34 + [380]) = [0]
	*($34 + [384]) = [0]
	*($34 + [388]) = [0]
	*($34 + [392]) = [0]
	*($34 + [368]) = ((CASTING uint_32)(uint_64 ((uint_64)$32 / (uint_64)(int_64)1000000)) + [60])
	*($34 + [404]) = [0]
	*(($34 + [408])) = [0]
	*(($34 + [412])) = [0]
	*($34 + [416]) = [0]
	*(($34 + [420])) = [0]
	*(($34 + [424])) = [0]
	$26 = ($34 + [404])
	$5 = *($0)
	$30 = (int_64)59
	$25 = [1472]
	$31 = (int_64)0
	
.LOOP $label$131:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$136 }
	$29 = *($25)
	if ( ((uint_32)(($29 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$135 }
	$29 = ($29 + [165])
	goto $label$134 
	
.LABEL $label$136
	$32 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$133 }
	goto $label$132 
	
.LABEL $label$135
	$29 = ( ($29 + [208]) ? [0] : ((($29 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$134
	$32 = (int_64)((int_64)(CASTING uint_64)(uint_32 $29) << (int_64)56) >> (int_64)56)
	
.LABEL $label$133
	$32 = ((int_64)((int_64)$32 & (int_64)31) << (int_64)((int_64)$30 & (int_64)4294967295))
	
.LABEL $label$132
	$25 = ($25 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$31 = ((int_64)$32 | (int_64)$31)
	$30 = ((int_64)$30 + (int_64)-5)
	if ( ((int_64)$30 != (int_64)-6) ){ goto $label$131 }
	*($34 + [120]) = $31
	*($34 + [112]) = $5
	$1 = (int_64)0
	$32 = (int_64)59
	$25 = [2368]
	$31 = (int_64)0
	
.LOOP $label$137:
	$30 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$138 }
	$29 = *($25)
	if ( ((uint_32)(($29 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$140 }
	$29 = ($29 + [165])
	goto $label$139 
	
.LABEL $label$140
	$29 = ( ($29 + [208]) ? [0] : ((($29 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$139
	$30 = ((int_64)(CASTING uint_64)(uint_32 ($29 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$138
	$25 = ($25 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$31 = ((int_64)$30 | (int_64)$31)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$137 }
	*($34 + [216]) = $31
	$1 = (int_64)0
	$30 = (int_64)59
	$25 = [2736]
	$31 = (int_64)0
	
.LOOP $label$141:
	if ( ((uint_64)$1 > (uint_64)(int_64)8) ){ goto $label$146 }
	$29 = *($25)
	if ( ((uint_32)(($29 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$145 }
	$29 = ($29 + [165])
	goto $label$144 
	
.LABEL $label$146
	$32 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$143 }
	goto $label$142 
	
.LABEL $label$145
	$29 = ( ($29 + [208]) ? [0] : ((($29 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$144
	$32 = (int_64)((int_64)(CASTING uint_64)(uint_32 $29) << (int_64)56) >> (int_64)56)
	
.LABEL $label$143
	$32 = ((int_64)((int_64)$32 & (int_64)31) << (int_64)((int_64)$30 & (int_64)4294967295))
	
.LABEL $label$142
	$25 = ($25 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$31 = ((int_64)$32 | (int_64)$31)
	$30 = ((int_64)$30 + (int_64)-5)
	if ( ((int_64)$30 != (int_64)-6) ){ goto $label$141 }
	*($34 + [104]) = $31
	$1 = (int_64)0
	$32 = (int_64)59
	$25 = [32]
	$31 = (int_64)0
	
.LOOP $label$147:
	$30 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$148 }
	$29 = *($25)
	if ( ((uint_32)(($29 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$150 }
	$29 = ($29 + [165])
	goto $label$149 
	
.LABEL $label$150
	$29 = ( ($29 + [208]) ? [0] : ((($29 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$149
	$30 = ((int_64)(CASTING uint_64)(uint_32 ($29 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$148
	$25 = ($25 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$31 = ((int_64)$30 | (int_64)$31)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$147 }
	*($34 + [80]) = $31
	*($34 + [96]) = *($3)
	*($34 + [88]) = *($34 + [360])
	CALL $127($26, ($34 + [112]), ($34 + [216]), ($34 + [104]), ($34 + [80]))
	$1 = *($0)
	*(($34 + [388])) = [0]
	CALL $63(($34 + [80]), ($34 + [368]))
	$25 = *($34 + [80])
	CALL send_deferred(($34 + [128]), $1, $25, (*($34 + [84]) - $25), [0])
	$25 = *($34 + [80])
	if ( ($25 == 0) ){ goto $label$151 }
	*($34 + [84]) = $25
	CALL $162($25)
	
.LABEL $label$151
	CALL $64(($34 + [368]))
	goto $label$123 
	
.LABEL $label$124
	if ( ((int_64)$1 != (int_64)293455873288) ){ goto $label$123 }
	$5 = *($0)
	$1 = (int_64)0
	$30 = (int_64)59
	$25 = [2736]
	$31 = (int_64)0
	
.LOOP $label$152:
	if ( ((uint_64)$1 > (uint_64)(int_64)8) ){ goto $label$157 }
	$29 = *($25)
	if ( ((uint_32)(($29 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$156 }
	$29 = ($29 + [165])
	goto $label$155 
	
.LABEL $label$157
	$32 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$154 }
	goto $label$153 
	
.LABEL $label$156
	$29 = ( ($29 + [208]) ? [0] : ((($29 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$155
	$32 = (int_64)((int_64)(CASTING uint_64)(uint_32 $29) << (int_64)56) >> (int_64)56)
	
.LABEL $label$154
	$32 = ((int_64)((int_64)$32 & (int_64)31) << (int_64)((int_64)$30 & (int_64)4294967295))
	
.LABEL $label$153
	$25 = ($25 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$31 = ((int_64)$32 | (int_64)$31)
	$30 = ((int_64)$30 + (int_64)-5)
	if ( ((int_64)$30 != (int_64)-6) ){ goto $label$152 }
	$1 = (int_64)0
	*($34 + [128]) = (int_64)0
	*($34 + [136]) = ((int_64)$31 + (int_64)$5)
	$32 = *($34 + [360])
	$31 = *($34 + [128])
	$30 = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) | (int_64)((int_64)$32 << (int_64)32))
	$32 = ((int_64)$30 + (int_64)$31)
	*($34 + [128]) = $32
	*($34 + [136]) = ((int_64)*($34 + [136]) + (int_64)( (int_64)1 ? (CASTING uint_64)(uint_32 (uint_64)($32 <= $30)) : (uint_64)($32 <= $31) ))
	$32 = CALL current_time()
	*(($34 + [396])) = [0]
	*(($34 + [400])) = [0]
	*($34 + [380]) = [0]
	*($34 + [384]) = [0]
	*($34 + [388]) = [0]
	*($34 + [392]) = [0]
	*($34 + [368]) = ((CASTING uint_32)(uint_64 ((uint_64)$32 / (uint_64)(int_64)1000000)) + [60])
	*($34 + [404]) = [0]
	*(($34 + [408])) = [0]
	*(($34 + [412])) = [0]
	*($34 + [416]) = [0]
	*(($34 + [420])) = [0]
	*(($34 + [424])) = [0]
	$26 = ($34 + [404])
	$5 = *($0)
	$30 = (int_64)59
	$25 = [1472]
	$31 = (int_64)0
	
.LOOP $label$158:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$163 }
	$29 = *($25)
	if ( ((uint_32)(($29 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$162 }
	$29 = ($29 + [165])
	goto $label$161 
	
.LABEL $label$163
	$32 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$160 }
	goto $label$159 
	
.LABEL $label$162
	$29 = ( ($29 + [208]) ? [0] : ((($29 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$161
	$32 = (int_64)((int_64)(CASTING uint_64)(uint_32 $29) << (int_64)56) >> (int_64)56)
	
.LABEL $label$160
	$32 = ((int_64)((int_64)$32 & (int_64)31) << (int_64)((int_64)$30 & (int_64)4294967295))
	
.LABEL $label$159
	$25 = ($25 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$31 = ((int_64)$32 | (int_64)$31)
	$30 = ((int_64)$30 + (int_64)-5)
	if ( ((int_64)$30 != (int_64)-6) ){ goto $label$158 }
	*($34 + [120]) = $31
	*($34 + [112]) = $5
	$1 = (int_64)0
	$32 = (int_64)59
	$25 = [2368]
	$31 = (int_64)0
	
.LOOP $label$164:
	$30 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$165 }
	$29 = *($25)
	if ( ((uint_32)(($29 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$167 }
	$29 = ($29 + [165])
	goto $label$166 
	
.LABEL $label$167
	$29 = ( ($29 + [208]) ? [0] : ((($29 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$166
	$30 = ((int_64)(CASTING uint_64)(uint_32 ($29 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$165
	$25 = ($25 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$31 = ((int_64)$30 | (int_64)$31)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$164 }
	*($34 + [216]) = $31
	$1 = (int_64)0
	$30 = (int_64)59
	$25 = [2736]
	$31 = (int_64)0
	
.LOOP $label$168:
	if ( ((uint_64)$1 > (uint_64)(int_64)8) ){ goto $label$173 }
	$29 = *($25)
	if ( ((uint_32)(($29 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$172 }
	$29 = ($29 + [165])
	goto $label$171 
	
.LABEL $label$173
	$32 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$170 }
	goto $label$169 
	
.LABEL $label$172
	$29 = ( ($29 + [208]) ? [0] : ((($29 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$171
	$32 = (int_64)((int_64)(CASTING uint_64)(uint_32 $29) << (int_64)56) >> (int_64)56)
	
.LABEL $label$170
	$32 = ((int_64)((int_64)$32 & (int_64)31) << (int_64)((int_64)$30 & (int_64)4294967295))
	
.LABEL $label$169
	$25 = ($25 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$31 = ((int_64)$32 | (int_64)$31)
	$30 = ((int_64)$30 + (int_64)-5)
	if ( ((int_64)$30 != (int_64)-6) ){ goto $label$168 }
	*($34 + [104]) = $31
	$1 = (int_64)0
	$32 = (int_64)59
	$25 = [32]
	$31 = (int_64)0
	
.LOOP $label$174:
	$30 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$175 }
	$29 = *($25)
	if ( ((uint_32)(($29 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$177 }
	$29 = ($29 + [165])
	goto $label$176 
	
.LABEL $label$177
	$29 = ( ($29 + [208]) ? [0] : ((($29 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$176
	$30 = ((int_64)(CASTING uint_64)(uint_32 ($29 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$175
	$25 = ($25 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$31 = ((int_64)$30 | (int_64)$31)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$174 }
	*($34 + [80]) = $31
	*($34 + [88]) = *($34 + [360])
	*($34 + [96]) = ((int_64)*($3) / (int_64)20000)
	CALL $127($26, ($34 + [112]), ($34 + [216]), ($34 + [104]), ($34 + [80]))
	$1 = *($0)
	*(($34 + [388])) = [0]
	CALL $63(($34 + [80]), ($34 + [368]))
	$25 = *($34 + [80])
	CALL send_deferred(($34 + [128]), $1, $25, (*($34 + [84]) - $25), [0])
	$25 = *($34 + [80])
	if ( ($25 == 0) ){ goto $label$178 }
	*($34 + [84]) = $25
	CALL $162($25)
	
.LABEL $label$178
	CALL $64(($34 + [368]))
	
.LABEL $label$123
	if ( ((int_64)$11 < (int_64)1) ){ goto $label$179 }
	$5 = *($0)
	$1 = (int_64)0
	$30 = (int_64)59
	$25 = [2752]
	$31 = (int_64)0
	
.LOOP $label$180:
	if ( ((uint_64)$1 > (uint_64)(int_64)6) ){ goto $label$185 }
	$29 = *($25)
	if ( ((uint_32)(($29 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$184 }
	$29 = ($29 + [165])
	goto $label$183 
	
.LABEL $label$185
	$32 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$182 }
	goto $label$181 
	
.LABEL $label$184
	$29 = ( ($29 + [208]) ? [0] : ((($29 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$183
	$32 = (int_64)((int_64)(CASTING uint_64)(uint_32 $29) << (int_64)56) >> (int_64)56)
	
.LABEL $label$182
	$32 = ((int_64)((int_64)$32 & (int_64)31) << (int_64)((int_64)$30 & (int_64)4294967295))
	
.LABEL $label$181
	$25 = ($25 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$31 = ((int_64)$32 | (int_64)$31)
	$30 = ((int_64)$30 + (int_64)-5)
	if ( ((int_64)$30 != (int_64)-6) ){ goto $label$180 }
	$32 = *($34 + [360])
	$1 = CALL current_time()
	*($34 + [72]) = $13
	$30 = *($34 + [360])
	*($34 + [64]) = $11
	*(($34 + [376])) = [0]
	*($34 + [368]) = (int_64)0
	$1 = ((uint_64)$1 / (uint_64)(int_64)1000000)
	$25 = CALL strlen([2288])
	if ( ((uint_32)$25 >= (uint_32)[-16]) ){ goto $label$32 }
	$1 = ((int_64)((int_64)$1 & (int_64)4294967295) | (int_64)((int_64)$32 << (int_64)32))
	$32 = ((int_64)$31 + (int_64)$5)
	if ( ((uint_32)$25 >= (uint_32)[11]) ){ goto $label$188 }
	*($34 + [368]) = ($25 << [1])
	$29 = (($34 + [368]) | [1])
	if ( $25 ){ goto $label$187 }
	goto $label$186 
	
.LABEL $label$188
	$26 = (($25 + [16]) & [-16])
	$29 = CALL $161($26)
	*($34 + [368]) = ($26 | [1])
	*($34 + [376]) = $29
	*($34 + [372]) = $25
	
.LABEL $label$187
	CALL memcpy($29, [2288], $25)
	
.LABEL $label$186
	*(($29 + $25)) = [0]
	*(($34 + [8])) = *((($34 + [64]) + [8]))
	*($34) = *($34 + [64])
	CALL _ZN5sicbo11transfer_toEyN5eosio5assetERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEo($0, $30, $34, ($34 + [368]), $1, $32)
	if ( ((*($34 + [368]) & [1]) == 0) ){ goto $label$179 }
	CALL $162(*($34 + [376]))
	
.LABEL $label$179
	$26 = *($34 + [200])
	if ( ($26 == 0) ){ goto $label$33 }
	$27 = ($34 + [204])
	$25 = *($27)
	if ( ((int_32)$25 == (int_32)$26) ){ goto $label$190 }
	
.LOOP $label$191:
	$25 = ($25 + [-24])
	$29 = *($25)
	*($25) = [0]
	if ( ($29 == 0) ){ goto $label$192 }
	CALL $162($29)
	
.LABEL $label$192
	if ( ((int_32)$26 != (int_32)$25) ){ goto $label$191 }
	$25 = *(($34 + [200]))
	goto $label$189 
	
.LABEL $label$190
	$25 = $26
	
.LABEL $label$189
	*($27) = $26
	CALL $162($25)
	
.LABEL $label$33
	CALL $128(($34 + [304]), *($34 + [308]))
	*([0] + [4]) = ($34 + [448])
	return (unreachable)
	
.LABEL $label$32
	CALL $163(($34 + [368]))
}

void .FUNC _ZN5sicbo7actdrawEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [80])
	*([0] + [4]) = $10
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [2368]
	$8 = (int_64)0
	
.LOOP $label$1:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$2 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$4 = ($4 + [165])
	goto $label$3 
	
.LABEL $label$4
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($8)
	$7 = *($2 + [8])
	CALL eosio_assert(((int_64)$7 == (int_64)1397703940), [2304])
	*(($10 + [72])) = [0]
	*($10 + [56]) = (int_64)-1
	*($10 + [64]) = (int_64)0
	$6 = *($0)
	*($10 + [40]) = $6
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	*($10 + [48]) = $7)
	$5 = CALL db_find_i64($6, $7, (int_64)5455799419163115520, $7)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $75(($10 + [40]), $5)
	CALL eosio_assert(((int_32)*($5 + [64]) == (int_32)($10 + [40])), [1136])
	*($10 + [32]) = $2
	CALL eosio_assert([1], [1216])
	CALL $120(($10 + [40]), $5, ($10 + [32]))
	
.LABEL $label$5
	*(($5 = (($10 + [16]) + [8]))) = *(($2 + [8]))
	*($10 + [16]) = *($2)
	$7 = CALL current_time()
	*(($10 + [8])) = *($5)
	*($10) = *($10 + [16])
	CALL _ZN5sicbo11transfer_toEyN5eosio5assetERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEo($0, $1, $10, $3, ((int_64)((int_64)((uint_64)$7 / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$1), (int_64)0)
	$2 = *($10 + [64])
	if ( ($2 == 0) ){ goto $label$6 }
	$0 = ($10 + [68])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $162($4)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$9 }
	$5 = *(($10 + [64]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	*($0) = $2
	CALL $162($5)
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [80])
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [896])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [960])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [64]) = $0
	$1 = ($0 + $2)
	*($5 + [72]) = $1
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [992])
	CALL memcpy(($5 + [8]), $0, [8])
	$4 = ($0 + [8])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [992])
	CALL memcpy((($5 + [8]) + [8]), $4, [8])
	$4 = ($0 + [16])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [992])
	CALL memcpy((($5 + [8]) + [16]), $4, [8])
	*($5 + [68]) = ($0 + [24])
	CALL $51(($5 + [64]), (($5 + [8]) + [24]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $119(($5 + [64]), ($5 + [8]))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $162(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [80])
	return [1]
}

void .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_32 $20
	$20 = (*([0] + [4]) - [288])
	*([0] + [4]) = $20
	$7 = *(($1 + [20]))
	$1 = *($1 + [16])
	$16 = CALL current_time()
	*(($20 + [236])) = [0]
	*(($20 + [240])) = [0]
	*($20 + [220]) = [0]
	*($20 + [224]) = [0]
	*($20 + [228]) = [0]
	*($20 + [232]) = [0]
	*($20 + [208]) = ((CASTING uint_32)(uint_64 ((uint_64)$16 / (uint_64)(int_64)1000000)) + [60])
	*($20 + [244]) = [0]
	*(($20 + [248])) = [0]
	*(($20 + [252])) = [0]
	*($20 + [256]) = [0]
	*(($20 + [260])) = [0]
	*(($20 + [264])) = [0]
	*($20 + [108]) = $1
	*($20 + [104]) = $1
	*($20 + [112]) = $7
	CALL $140(($20 + [104]), ($20 + [208]))
	CALL $142(CALL $141(CALL $141(($20 + [104]), ($20 + [232])), ($20 + [244])), ($20 + [256]))
	*(($20 + [200])) = [0]
	*($20 + [192]) = (int_64)0
	$1 = CALL strlen([3488])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($20 + [192]) = ($1 << [1])
	$7 = (($20 + [192]) | [1])
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$14 = (($1 + [16]) & [-16])
	$7 = CALL $161($14)
	*($20 + [192]) = ($14 | [1])
	*($20 + [200]) = $7
	*($20 + [196]) = $1
	
.LABEL $label$3
	CALL memcpy($7, [3488], $1)
	
.LABEL $label$2
	*(($7 + $1)) = [0]
	$2 = *((($20 + [208]) + [40]))
	$14 = *(($20 + [244]))
	if ( ((int_32)$14 == (int_32)$2) ){ goto $label$5 }
	$5 = ($20 + [32])
	$4 = ($20 + [16])
	$3 = (($20 + [104]) + [16])
	$9 = (($20 + [152]) + [8])
	$10 = ($20 + [128])
	$11 = (($20 + [64]) + [28])
	$13 = ($20 + [40])
	$12 = (($20 + [64]) + [20])
	
.LOOP $label$6:
	$6 = CALL $143(($20 + [152]), $14)
	$19 = *($9)
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [16]
	$17 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$16 > (uint_64)(int_64)4) ){ goto $label$12 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$7 = ($7 + [165])
	goto $label$10 
	
.LABEL $label$12
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$8
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$7 }
	if ( ((int_64)$19 != (int_64)$17) ){ goto $label$13 }
	CALL $144(($20 + [104]), $6)
	$16 = *($10)
	if ( ((int_64)$16 > (int_64)297481618435) ){ goto $label$18 }
	if ( ((int_64)$16 == (int_64)1397703940) ){ goto $label$16 }
	if ( ((int_64)$16 != (int_64)293455873288) ){ goto $label$17 }
	$8 = *((($20 + [104]) + [8]))
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [1472]
	$17 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$24 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$7 = ($7 + [165])
	goto $label$22 
	
.LABEL $label$24
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$20
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$19 }
	*((($20 + [48]) + [8])) = $17
	*($20 + [48]) = $8
	$16 = (int_64)0
	$18 = (int_64)59
	$1 = [304]
	$17 = (int_64)0
	
.LOOP $label$25:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$26 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$7 = ($7 + [165])
	goto $label$27 
	
.LABEL $label$28
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$26
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$15 | (int_64)$17)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$25 }
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [320]
	$19 = (int_64)0
	
.LOOP $label$29:
	if ( ((uint_64)$16 > (uint_64)(int_64)7) ){ goto $label$34 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$7 = ($7 + [165])
	goto $label$32 
	
.LABEL $label$34
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$33
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$31
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$30
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$19 = ((int_64)$18 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$29 }
	*($4) = *($3)
	*($20) = $8
	*(($20 + [8])) = *($20 + [104])
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL $173($5, ($20 + [192]))
	CALL $93(($20 + [272]), CALL $103(($20 + [64]), ($20 + [48]), $17, $19, $20))
	$1 = *($20 + [272])
	CALL send_inline($1, (*($20 + [276]) - $1))
	$1 = *($20 + [272])
	if ( ($1 == 0) ){ goto $label$35 }
	*($20 + [276]) = $1
	CALL $162($1)
	
.LABEL $label$35
	$1 = *($11)
	if ( ($1 == 0) ){ goto $label$36 }
	*((($20 + [64]) + [32])) = $1
	CALL $162($1)
	
.LABEL $label$36
	$1 = *((($20 + [64]) + [16]))
	if ( ($1 == 0) ){ goto $label$37 }
	*($12) = $1
	CALL $162($1)
	
.LABEL $label$37
	if ( ((*($5) & [1]) == 0) ){ goto $label$14 }
	CALL $162(*($13))
	goto $label$14 
	
.LABEL $label$18
	if ( ((int_64)$16 == (int_64)297481618436) ){ goto $label$15 }
	if ( ((int_64)$16 != (int_64)340414906884) ){ goto $label$17 }
	$8 = *((($20 + [104]) + [8]))
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [1472]
	$17 = (int_64)0
	
.LOOP $label$38:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$43 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$7 = ($7 + [165])
	goto $label$41 
	
.LABEL $label$43
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$42
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$40
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$39
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$38 }
	*((($20 + [48]) + [8])) = $17
	*($20 + [48]) = $8
	$16 = (int_64)0
	$18 = (int_64)59
	$1 = [272]
	$17 = (int_64)0
	
.LOOP $label$44:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$45 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$7 = ($7 + [165])
	goto $label$46 
	
.LABEL $label$47
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$45
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$15 | (int_64)$17)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$44 }
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [320]
	$19 = (int_64)0
	
.LOOP $label$48:
	if ( ((uint_64)$16 > (uint_64)(int_64)7) ){ goto $label$53 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$7 = ($7 + [165])
	goto $label$51 
	
.LABEL $label$53
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$50
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$49
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$19 = ((int_64)$18 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$48 }
	*($4) = *($3)
	*($20) = $8
	*(($20 + [8])) = *($20 + [104])
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL $173($5, ($20 + [192]))
	CALL $93(($20 + [272]), CALL $103(($20 + [64]), ($20 + [48]), $17, $19, $20))
	$1 = *($20 + [272])
	CALL send_inline($1, (*($20 + [276]) - $1))
	$1 = *($20 + [272])
	if ( ($1 == 0) ){ goto $label$54 }
	*($20 + [276]) = $1
	CALL $162($1)
	
.LABEL $label$54
	$1 = *($11)
	if ( ($1 == 0) ){ goto $label$55 }
	*((($20 + [64]) + [32])) = $1
	CALL $162($1)
	
.LABEL $label$55
	$1 = *((($20 + [64]) + [16]))
	if ( ($1 == 0) ){ goto $label$56 }
	*($12) = $1
	CALL $162($1)
	
.LABEL $label$56
	if ( ((*($5) & [1]) == 0) ){ goto $label$14 }
	CALL $162(*($13))
	goto $label$14 
	
.LABEL $label$17
	CALL eosio_assert([0], [2304])
	goto $label$14 
	
.LABEL $label$16
	$8 = *((($20 + [104]) + [8]))
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [1472]
	$17 = (int_64)0
	
.LOOP $label$57:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$62 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$61 }
	$7 = ($7 + [165])
	goto $label$60 
	
.LABEL $label$62
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$61
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$60
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$59
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$58
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$57 }
	*((($20 + [48]) + [8])) = $17
	*($20 + [48]) = $8
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [256]
	$17 = (int_64)0
	
.LOOP $label$63:
	if ( ((uint_64)$16 > (uint_64)(int_64)10) ){ goto $label$68 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$67 }
	$7 = ($7 + [165])
	goto $label$66 
	
.LABEL $label$68
	$18 = (int_64)0
	if ( ((int_64)$16 == (int_64)11) ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$67
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$66
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$65
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$64
	$1 = ($1 + [1])
	$15 = ((int_64)$15 + (int_64)-5)
	$17 = ((int_64)$18 | (int_64)$17)
	$16 = ((int_64)$16 + (int_64)1)
	if ( ((int_64)$16 != (int_64)13) ){ goto $label$63 }
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [320]
	$19 = (int_64)0
	
.LOOP $label$69:
	if ( ((uint_64)$16 > (uint_64)(int_64)7) ){ goto $label$74 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$73 }
	$7 = ($7 + [165])
	goto $label$72 
	
.LABEL $label$74
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$71 }
	goto $label$70 
	
.LABEL $label$73
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$72
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$71
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$70
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$19 = ((int_64)$18 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$69 }
	*($4) = *($3)
	*($20) = $8
	*(($20 + [8])) = *($20 + [104])
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL $173($5, ($20 + [192]))
	CALL $93(($20 + [272]), CALL $103(($20 + [64]), ($20 + [48]), $17, $19, $20))
	$1 = *($20 + [272])
	CALL send_inline($1, (*($20 + [276]) - $1))
	$1 = *($20 + [272])
	if ( ($1 == 0) ){ goto $label$75 }
	*($20 + [276]) = $1
	CALL $162($1)
	
.LABEL $label$75
	$1 = *($11)
	if ( ($1 == 0) ){ goto $label$76 }
	*((($20 + [64]) + [32])) = $1
	CALL $162($1)
	
.LABEL $label$76
	$1 = *((($20 + [64]) + [16]))
	if ( ($1 == 0) ){ goto $label$77 }
	*($12) = $1
	CALL $162($1)
	
.LABEL $label$77
	if ( ((*($5) & [1]) == 0) ){ goto $label$14 }
	CALL $162(*($13))
	goto $label$14 
	
.LABEL $label$15
	$8 = *((($20 + [104]) + [8]))
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [1472]
	$17 = (int_64)0
	
.LOOP $label$78:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$83 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$82 }
	$7 = ($7 + [165])
	goto $label$81 
	
.LABEL $label$83
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$82
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$81
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$80
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$79
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$78 }
	*((($20 + [48]) + [8])) = $17
	*($20 + [48]) = $8
	$16 = (int_64)0
	$18 = (int_64)59
	$1 = [288]
	$17 = (int_64)0
	
.LOOP $label$84:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$85 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$87 }
	$7 = ($7 + [165])
	goto $label$86 
	
.LABEL $label$87
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$86
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$85
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$15 | (int_64)$17)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$84 }
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [320]
	$19 = (int_64)0
	
.LOOP $label$88:
	if ( ((uint_64)$16 > (uint_64)(int_64)7) ){ goto $label$93 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$92 }
	$7 = ($7 + [165])
	goto $label$91 
	
.LABEL $label$93
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$92
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$91
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$90
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$89
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$19 = ((int_64)$18 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$88 }
	*($4) = *($3)
	*($20) = $8
	*(($20 + [8])) = *($20 + [104])
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL $173($5, ($20 + [192]))
	CALL $93(($20 + [272]), CALL $103(($20 + [64]), ($20 + [48]), $17, $19, $20))
	$1 = *($20 + [272])
	CALL send_inline($1, (*($20 + [276]) - $1))
	$1 = *($20 + [272])
	if ( ($1 == 0) ){ goto $label$94 }
	*($20 + [276]) = $1
	CALL $162($1)
	
.LABEL $label$94
	$1 = *($11)
	if ( ($1 == 0) ){ goto $label$95 }
	*((($20 + [64]) + [32])) = $1
	CALL $162($1)
	
.LABEL $label$95
	$1 = *((($20 + [64]) + [16]))
	if ( ($1 == 0) ){ goto $label$96 }
	*($12) = $1
	CALL $162($1)
	
.LABEL $label$96
	if ( ((*($5) & [1]) == 0) ){ goto $label$14 }
	CALL $162(*($13))
	
.LABEL $label$14
	if ( ((*((($20 + [104]) + [32])) & [1]) == 0) ){ goto $label$13 }
	CALL $162(*((($20 + [104]) + [40])))
	
.LABEL $label$13
	$1 = *((($20 + [152]) + [28]))
	if ( ($1 == 0) ){ goto $label$97 }
	*((($20 + [152]) + [32])) = $1
	CALL $162($1)
	
.LABEL $label$97
	$1 = *((($20 + [152]) + [16]))
	if ( ($1 == 0) ){ goto $label$98 }
	*((($20 + [152]) + [20])) = $1
	CALL $162($1)
	
.LABEL $label$98
	$14 = ($14 + [40])
	if ( ((int_32)$14 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ((*($20 + [192]) & [1]) == 0) ){ goto $label$99 }
	CALL $162(*($20 + [200]))
	
.LABEL $label$99
	CALL $64(($20 + [208]))
	*([0] + [4]) = ($20 + [288])
	return (unreachable)
	
.LABEL $label$1
	CALL $163(($20 + [192]))
}

int_32 .FUNC $11 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [248]))
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = ($0 + [252])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $162($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$4 = *(($0 + [248]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*($3) = $1
	CALL $162($4)
	
.LABEL $label$1
	$1 = *(($0 + [208]))
	if ( ($1 == 0) ){ goto $label$6 }
	$3 = ($0 + [212])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $162($2)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$4 = *(($0 + [208]))
	goto $label$7 
	
.LABEL $label$8
	$4 = $1
	
.LABEL $label$7
	*($3) = $1
	CALL $162($4)
	
.LABEL $label$6
	$1 = *(($0 + [168]))
	if ( ($1 == 0) ){ goto $label$11 }
	$3 = ($0 + [172])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	CALL $162($2)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$14 }
	$4 = *(($0 + [168]))
	goto $label$12 
	
.LABEL $label$13
	$4 = $1
	
.LABEL $label$12
	*($3) = $1
	CALL $162($4)
	
.LABEL $label$11
	$1 = *(($0 + [128]))
	if ( ($1 == 0) ){ goto $label$16 }
	$3 = ($0 + [132])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$20 }
	CALL $162($2)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$19 }
	$4 = *(($0 + [128]))
	goto $label$17 
	
.LABEL $label$18
	$4 = $1
	
.LABEL $label$17
	*($3) = $1
	CALL $162($4)
	
.LABEL $label$16
	$1 = *(($0 + [88]))
	if ( ($1 == 0) ){ goto $label$21 }
	$3 = ($0 + [92])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$23 }
	
.LOOP $label$24:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$25 }
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$26 }
	CALL $162(*(($2 + [16])))
	
.LABEL $label$26
	CALL $162($2)
	
.LABEL $label$25
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$24 }
	$4 = *(($0 + [88]))
	goto $label$22 
	
.LABEL $label$23
	$4 = $1
	
.LABEL $label$22
	*($3) = $1
	CALL $162($4)
	
.LABEL $label$21
	$1 = *(($0 + [48]))
	if ( ($1 == 0) ){ goto $label$27 }
	$3 = ($0 + [52])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$29 }
	
.LOOP $label$30:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$31 }
	CALL $162($2)
	
.LABEL $label$31
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$30 }
	$4 = *(($0 + [48]))
	goto $label$28 
	
.LABEL $label$29
	$4 = $1
	
.LABEL $label$28
	*($3) = $1
	CALL $162($4)
	
.LABEL $label$27
	CALL $139(($0 + [8]), *(($0 + [12])))
	return $0
}

void .FUNC _ZN5sicbo8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_32 $19
	$19 = (*([0] + [4]) - [352])
	*([0] + [4]) = $19
	$16 = *($0)
	if ( ((int_64)$16 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$16 != (int_64)$2) ){ goto $label$1 }
	$11 = *($4)
	$12 = ($11 & [1])
	if ( $12 ){ goto $label$3 }
	if ( uint_32($11 >> [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($4 + [4]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( $12 ){ goto $label$5 }
	$12 = uint_32($11 >> [1])
	$10 = ($4 + [1])
	goto $label$4 
	
.LABEL $label$5
	$12 = *($4 + [4])
	$10 = *($4 + [8])
	
.LABEL $label$4
	$11 = CALL strlen([2848])
	if ( ($11 == 0) ){ goto $label$6 }
	if ( ((int_32)$12 < (int_32)$11) ){ goto $label$1 }
	$7 = ($10 + $12)
	$8 = $10
	
.LOOP $label$7:
	$12 = (($12 - $11) + [1])
	if ( ($12 == 0) ){ goto $label$1 }
	$12 = CALL memchr($8, [45], $12)
	if ( ($12 == 0) ){ goto $label$1 }
	if ( (CALL memcmp($12, [2848], $11) == 0) ){ goto $label$8 }
	$8 = ($12 + [1])
	$12 = ($7 - $8)
	if ( ((int_32)$12 >= (int_32)$11) ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$8
	if ( ((int_32)$12 == (int_32)$7) ){ goto $label$1 }
	if ( ((int_32)($12 - $10) == (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$6
	$18 = *($3 + [8])
	if ( ((int_64)$18 != (int_64)1397703940) ){ goto $label$9 }
	$11 = *($4)
	if ( ($11 & [1]) ){ goto $label$11 }
	$12 = uint_32($11 >> [1])
	$10 = ($4 + [1])
	goto $label$10 
	
.LABEL $label$11
	$12 = *($4 + [4])
	$10 = *($4 + [8])
	
.LABEL $label$10
	$11 = CALL strlen([3088])
	if ( ($11 == 0) ){ goto $label$12 }
	if ( ((int_32)$12 < (int_32)$11) ){ goto $label$9 }
	$7 = ($10 + $12)
	$8 = $10
	
.LOOP $label$13:
	$12 = (($12 - $11) + [1])
	if ( ($12 == 0) ){ goto $label$9 }
	$12 = CALL memchr($8, [100], $12)
	if ( ($12 == 0) ){ goto $label$9 }
	if ( (CALL memcmp($12, [3088], $11) == 0) ){ goto $label$14 }
	$8 = ($12 + [1])
	$12 = ($7 - $8)
	if ( ((int_32)$12 >= (int_32)$11) ){ goto $label$13 }
	goto $label$9 
	
.LABEL $label$14
	if ( ((int_32)$12 == (int_32)$7) ){ goto $label$9 }
	if ( ((int_32)($12 - $10) == (int_32)[-1]) ){ goto $label$9 }
	
.LABEL $label$12
	CALL $173(($19 + [160]), $4)
	$8 = *($19 + [160])
	$7 = (($19 + [160]) | [1])
	$4 = *($19 + [168])
	$10 = *($19 + [164])
	$11 = [0]
	$12 = CALL strlen([2848])
	if ( ($12 == 0) ){ goto $label$15 }
	$8 = ( $10 ? uint_32($8 >> [1]) : $11 )
	$11 = ($8 & [1])
	$3 = ( $4 ? $7 : $11 )
	$4 = ($3 + $8)
	$11 = $4
	if ( ((int_32)$8 < (int_32)$12) ){ goto $label$16 }
	$11 = $3
	
.LOOP $label$18:
	$8 = (($8 - $12) + [1])
	if ( ($8 == 0) ){ goto $label$17 }
	$11 = CALL memchr($11, [45], $8)
	if ( ($11 == 0) ){ goto $label$17 }
	if ( (CALL memcmp($11, [2848], $12) == 0) ){ goto $label$16 }
	$11 = ($11 + [1])
	$8 = ($4 - $11)
	if ( ((int_32)$8 >= (int_32)$12) ){ goto $label$18 }
	
.LABEL $label$17
	$11 = $4
	
.LABEL $label$16
	$11 = ( [-1] ? ($11 - $3) : ((int_32)$11 == (int_32)$4) )
	
.LABEL $label$15
	CALL $174(($19 + [336]), ($19 + [160]), [0], $11, ($19 + [160]))
	if ( ((*($19 + [336]) & [1]) == 0) ){ goto $label$19 }
	CALL $162(*($19 + [344]))
	
.LABEL $label$19
	$8 = *($19 + [160])
	$3 = ($19 + [168])
	$4 = *($3)
	$13 = *($19 + [164])
	$10 = [0]
	$11 = [0]
	$12 = CALL strlen([2848])
	if ( ($12 == 0) ){ goto $label$20 }
	$8 = ( $13 ? uint_32($8 >> [1]) : $11 )
	$11 = ($8 & [1])
	$5 = ( $4 ? $7 : $11 )
	$4 = ($5 + $8)
	$11 = $4
	if ( ((int_32)$8 < (int_32)$12) ){ goto $label$21 }
	$11 = $5
	
.LOOP $label$23:
	$8 = (($8 - $12) + [1])
	if ( ($8 == 0) ){ goto $label$22 }
	$11 = CALL memchr($11, [45], $8)
	if ( ($11 == 0) ){ goto $label$22 }
	if ( (CALL memcmp($11, [2848], $12) == 0) ){ goto $label$21 }
	$11 = ($11 + [1])
	$8 = ($4 - $11)
	if ( ((int_32)$8 >= (int_32)$12) ){ goto $label$23 }
	
.LABEL $label$22
	$11 = $4
	
.LABEL $label$21
	$11 = ( [-1] ? ($11 - $5) : ((int_32)$11 == (int_32)$4) )
	
.LABEL $label$20
	CALL $164(($19 + [160]), CALL $171(($19 + [160]), [0], ($11 + [1])))
	$11 = *($19 + [160])
	$8 = *($3)
	$4 = *($19 + [164])
	$12 = CALL strlen([2848])
	if ( ($12 == 0) ){ goto $label$24 }
	$8 = ( $4 ? uint_32($11 >> [1]) : $3 )
	$3 = ($11 & [1])
	$10 = ( $8 ? $7 : $3 )
	$4 = ($10 + $8)
	$11 = $4
	if ( ((int_32)$8 < (int_32)$12) ){ goto $label$25 }
	$11 = $10
	
.LOOP $label$27:
	$8 = (($8 - $12) + [1])
	if ( ($8 == 0) ){ goto $label$26 }
	$11 = CALL memchr($11, [45], $8)
	if ( ($11 == 0) ){ goto $label$26 }
	if ( (CALL memcmp($11, [2848], $12) == 0) ){ goto $label$25 }
	$11 = ($11 + [1])
	$8 = ($4 - $11)
	if ( ((int_32)$8 >= (int_32)$12) ){ goto $label$27 }
	
.LABEL $label$26
	$11 = $4
	
.LABEL $label$25
	$10 = ( [-1] ? ($11 - $10) : ((int_32)$11 == (int_32)$4) )
	
.LABEL $label$24
	CALL $174(($19 + [144]), ($19 + [160]), [0], $10, ($19 + [160]))
	$8 = *($19 + [160])
	$4 = *(($19 + [168]))
	$10 = *($19 + [164])
	$11 = [0]
	$12 = CALL strlen([2848])
	if ( ($12 == 0) ){ goto $label$28 }
	$8 = ( $10 ? uint_32($8 >> [1]) : $11 )
	$11 = ($8 & [1])
	$3 = ( $4 ? $7 : $11 )
	$4 = ($3 + $8)
	$11 = $4
	if ( ((int_32)$8 < (int_32)$12) ){ goto $label$29 }
	$11 = $3
	
.LOOP $label$31:
	$8 = (($8 - $12) + [1])
	if ( ($8 == 0) ){ goto $label$30 }
	$11 = CALL memchr($11, [45], $8)
	if ( ($11 == 0) ){ goto $label$30 }
	if ( (CALL memcmp($11, [2848], $12) == 0) ){ goto $label$29 }
	$11 = ($11 + [1])
	$8 = ($4 - $11)
	if ( ((int_32)$8 >= (int_32)$12) ){ goto $label$31 }
	
.LABEL $label$30
	$11 = $4
	
.LABEL $label$29
	$11 = ( [-1] ? ($11 - $3) : ((int_32)$11 == (int_32)$4) )
	
.LABEL $label$28
	CALL $164(($19 + [160]), CALL $171(($19 + [160]), [0], ($11 + [1])))
	$11 = ( *($19 + [152]) ? (($19 + [144]) | [1]) : (*($19 + [144]) & [1]) )
	$12 = [-1]
	
.LOOP $label$32:
	$8 = ($11 + $12)
	$4 = ($12 + [1])
	$12 = $4
	if ( *(($8 + [1])) ){ goto $label$32 }
	$17 = (CASTING uint_64)(uint_32 $4)
	$16 = (int_64)0
	$18 = (int_64)59
	$14 = (int_64)0
	
.LOOP $label$33:
	$15 = (int_64)0
	if ( ((uint_64)$16 >= (uint_64)$17) ){ goto $label$34 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$36 }
	$12 = ($12 + [165])
	goto $label$35 
	
.LABEL $label$36
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$35
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$34
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$38 }
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$18 & (int_64)4294967295))
	goto $label$37 
	
.LABEL $label$38
	$15 = ((int_64)$15 & (int_64)15)
	
.LABEL $label$37
	$11 = ($11 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$33 }
	CALL eosio_assert(CALL $fimport$19($14), [3104])
	CALL eosio_assert(((int_64)$14 == (int_64)$1), [3136])
	$8 = *($19 + [160])
	$3 = ($19 + [168])
	$4 = *($3)
	$13 = *($19 + [164])
	$10 = [0]
	$11 = [0]
	$12 = CALL strlen([2848])
	if ( ($12 == 0) ){ goto $label$39 }
	$8 = ( $13 ? uint_32($8 >> [1]) : $11 )
	$11 = ($8 & [1])
	$5 = ( $4 ? $7 : $11 )
	$4 = ($5 + $8)
	$11 = $4
	if ( ((int_32)$8 < (int_32)$12) ){ goto $label$40 }
	$11 = $5
	
.LOOP $label$42:
	$8 = (($8 - $12) + [1])
	if ( ($8 == 0) ){ goto $label$41 }
	$11 = CALL memchr($11, [45], $8)
	if ( ($11 == 0) ){ goto $label$41 }
	if ( (CALL memcmp($11, [2848], $12) == 0) ){ goto $label$40 }
	$11 = ($11 + [1])
	$8 = ($4 - $11)
	if ( ((int_32)$8 >= (int_32)$12) ){ goto $label$42 }
	
.LABEL $label$41
	$11 = $4
	
.LABEL $label$40
	$11 = ( [-1] ? ($11 - $5) : ((int_32)$11 == (int_32)$4) )
	
.LABEL $label$39
	CALL $174(($19 + [64]), ($19 + [160]), [0], $11, ($19 + [160]))
	$11 = *($19 + [160])
	$8 = *($3)
	$4 = *($19 + [164])
	$12 = CALL strlen([2848])
	if ( ($12 == 0) ){ goto $label$43 }
	$8 = ( $4 ? uint_32($11 >> [1]) : $10 )
	$10 = ($11 & [1])
	$7 = ( $8 ? $7 : $10 )
	$4 = ($7 + $8)
	$11 = $4
	if ( ((int_32)$8 < (int_32)$12) ){ goto $label$44 }
	$11 = $7
	
.LOOP $label$46:
	$8 = (($8 - $12) + [1])
	if ( ($8 == 0) ){ goto $label$45 }
	$11 = CALL memchr($11, [45], $8)
	if ( ($11 == 0) ){ goto $label$45 }
	if ( (CALL memcmp($11, [2848], $12) == 0) ){ goto $label$44 }
	$11 = ($11 + [1])
	$8 = ($4 - $11)
	if ( ((int_32)$8 >= (int_32)$12) ){ goto $label$46 }
	
.LABEL $label$45
	$11 = $4
	
.LABEL $label$44
	$10 = ( [-1] ? ($11 - $7) : ((int_32)$11 == (int_32)$4) )
	
.LABEL $label$43
	$7 = [1]
	$11 = [0]
	CALL $164(($19 + [160]), CALL $171(($19 + [160]), [0], ($10 + [1])))
	CALL $173(($19 + [320]), ($19 + [64]))
	$8 = (($19 + [320]) | [1])
	$4 = ($19 + [328])
	
.LOOP $label$48:
	$12 = ($12 & [1])
	$12 = *($19 + [320])
	if ( ((uint_32)$11 >= (uint_32)( *($19 + [324]) ? uint_32($12 >> [1]) : $12 )) ){ goto $label$47 }
	$12 = (( *($4) ? $8 : $12 ) + $11)
	$11 = ($11 + [1])
	if ( CALL isdigit(*($12)) ){ goto $label$48 }
	$7 = [0]
	
.LABEL $label$47
	CALL eosio_assert($7, [3168])
	if ( ((*($19 + [320]) & [1]) == 0) ){ goto $label$49 }
	CALL $162(*(($19 + [328])))
	
.LABEL $label$49
	$8 = CALL atoi(( *($19 + [72]) ? (($19 + [64]) | [1]) : (*($19 + [64]) & [1]) ))
	CALL eosio_assert((($8 & [252]) <= [4]), [3200])
	CALL eosio_assert([1], [3200])
	$9 = *($0)
	$16 = (int_64)0
	$15 = (int_64)59
	$11 = [1472]
	$17 = (int_64)0
	
.LOOP $label$50:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$55 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$54 }
	$12 = ($12 + [165])
	goto $label$53 
	
.LABEL $label$55
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$54
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$53
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$52
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$51
	$11 = ($11 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$50 }
	$16 = (int_64)0
	$18 = (int_64)59
	$11 = [2368]
	$1 = (int_64)0
	
.LOOP $label$56:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$57 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$12 = ($12 + [165])
	goto $label$58 
	
.LABEL $label$59
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$57
	$11 = ($11 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$1 = ((int_64)$15 | (int_64)$1)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$56 }
	$16 = (int_64)0
	$15 = (int_64)59
	$11 = [3232]
	$2 = (int_64)0
	
.LOOP $label$60:
	if ( ((uint_64)$16 > (uint_64)(int_64)3) ){ goto $label$65 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$64 }
	$12 = ($12 + [165])
	goto $label$63 
	
.LABEL $label$65
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$64
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$63
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$62
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$61
	$11 = ($11 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$2 = ((int_64)$18 | (int_64)$2)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$60 }
	*(($12 = ($19 + [104]))) = [0]
	*($19 + [16]) = $8
	*($19 + [8]) = $14
	*($19 + [96]) = (int_64)0
	*($19 + [88]) = $2
	*($19 + [80]) = $1
	*(($11 = CALL $161([16]))) = $9
	*($11 + [8]) = $17
	*(($8 = ($19 + [112]))) = [0]
	$4 = ($11 + [16])
	*($12) = $4
	*(($19 + [100])) = $4
	*($19 + [96]) = $11
	*($19 + [108]) = [0]
	*(($19 + [116])) = [0]
	CALL $54(($19 + [108]), [9])
	$11 = *($19 + [108])
	$12 = (*($8) - $11)
	CALL eosio_assert(((int_32)$12 > (int_32)[7]), [1440])
	CALL memcpy($11, ($19 + [8]), [8])
	CALL eosio_assert(((int_32)($12 + [-8]) > (int_32)[0]), [1440])
	CALL memcpy(($11 + [8]), (($19 + [8]) + [8]), [1])
	CALL $93(($19 + [200]), ($19 + [80]))
	$11 = *($19 + [200])
	CALL send_inline($11, (*($19 + [204]) - $11))
	$11 = *($19 + [200])
	if ( ($11 == 0) ){ goto $label$66 }
	*($19 + [204]) = $11
	CALL $162($11)
	
.LABEL $label$66
	$11 = *($19 + [108])
	if ( ($11 == 0) ){ goto $label$67 }
	*(($19 + [112])) = $11
	CALL $162($11)
	
.LABEL $label$67
	$11 = *($19 + [96])
	if ( ($11 == 0) ){ goto $label$68 }
	*(($19 + [100])) = $11
	CALL $162($11)
	
.LABEL $label$68
	CALL eosio_assert([1], [896])
	$16 = (int_64)5462355
	$11 = [0]
	
.LOOP $label$71:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$70 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$72 }
	
.LOOP $label$73:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$70 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$73 }
	
.LABEL $label$72
	$12 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$71 }
	goto $label$69 
	
.LABEL $label$70
	$12 = [0]
	
.LABEL $label$69
	CALL eosio_assert($12, [960])
	$9 = *($0)
	$16 = (int_64)0
	$15 = (int_64)59
	$11 = [1472]
	$17 = (int_64)0
	
.LOOP $label$74:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$79 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$78 }
	$12 = ($12 + [165])
	goto $label$77 
	
.LABEL $label$79
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$78
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$77
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$76
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$75
	$11 = ($11 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$74 }
	$16 = (int_64)0
	$18 = (int_64)59
	$11 = [272]
	$1 = (int_64)0
	
.LOOP $label$80:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$81 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$83 }
	$12 = ($12 + [165])
	goto $label$82 
	
.LABEL $label$83
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$82
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$81
	$11 = ($11 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$1 = ((int_64)$15 | (int_64)$1)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$80 }
	$16 = (int_64)0
	$15 = (int_64)59
	$11 = [3248]
	$2 = (int_64)0
	
.LOOP $label$84:
	if ( ((uint_64)$16 > (uint_64)(int_64)4) ){ goto $label$89 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$88 }
	$12 = ($12 + [165])
	goto $label$87 
	
.LABEL $label$89
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$86 }
	goto $label$85 
	
.LABEL $label$88
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$87
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$86
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$85
	$11 = ($11 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$2 = ((int_64)$18 | (int_64)$2)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$84 }
	*(($8 = (($19 + [8]) + [16]))) = (int_64)340414906884
	*($19 + [16]) = (int_64)10000
	*($19 + [8]) = $14
	*($19 + [88]) = $2
	*($19 + [80]) = $1
	*(($11 = CALL $161([16]))) = $9
	*($11 + [8]) = $17
	*(($12 = ($19 + [112]))) = [0]
	$4 = ($11 + [16])
	*((($19 + [80]) + [24])) = $4
	*(($19 + [100])) = $4
	*($19 + [96]) = $11
	*($19 + [108]) = [0]
	*(($19 + [116])) = [0]
	CALL $54(($19 + [108]), [24])
	$11 = *($19 + [108])
	$12 = (*($12) - $11)
	CALL eosio_assert(((int_32)$12 > (int_32)[7]), [1440])
	CALL memcpy($11, ($19 + [8]), [8])
	CALL eosio_assert(((int_32)($12 + [-8]) > (int_32)[7]), [1440])
	CALL memcpy(($11 + [8]), (($19 + [8]) + [8]), [8])
	CALL eosio_assert(((int_32)($12 + [-16]) > (int_32)[7]), [1440])
	CALL memcpy(($11 + [16]), $8, [8])
	CALL $93(($19 + [200]), ($19 + [80]))
	$11 = *($19 + [200])
	CALL send_inline($11, (*($19 + [204]) - $11))
	$11 = *($19 + [200])
	if ( ($11 == 0) ){ goto $label$90 }
	*($19 + [204]) = $11
	CALL $162($11)
	
.LABEL $label$90
	$11 = *($19 + [108])
	if ( ($11 == 0) ){ goto $label$91 }
	*(($19 + [112])) = $11
	CALL $162($11)
	
.LABEL $label$91
	$11 = *($19 + [96])
	if ( ($11 == 0) ){ goto $label$92 }
	*(($19 + [100])) = $11
	CALL $162($11)
	
.LABEL $label$92
	if ( ((*($19 + [64]) & [1]) == 0) ){ goto $label$93 }
	CALL $162(*(($19 + [72])))
	
.LABEL $label$93
	if ( ((*($19 + [144]) & [1]) == 0) ){ goto $label$94 }
	CALL $162(*(($19 + [152])))
	
.LABEL $label$94
	if ( ((*($19 + [160]) & [1]) == 0) ){ goto $label$1 }
	CALL $162(*(($19 + [168])))
	goto $label$1 
	
.LABEL $label$9
	*($19 + [312]) = (int_64)0
	CALL $173(($19 + [296]), $4)
	CALL _ZN5sicbo14_split_batchidENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPy($19, ($19 + [296]), ($19 + [312]))
	if ( ((*($19 + [296]) & [1]) == 0) ){ goto $label$95 }
	CALL $162(*($19 + [304]))
	
.LABEL $label$95
	$12 = [0]
	$15 = *($3)
	if ( ((uint_64)((int_64)$15 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$96 }
	$16 = (uint_64)$18 >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$98:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$97 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$99 }
	
.LOOP $label$100:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$97 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$100 }
	
.LABEL $label$99
	$12 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$98 }
	goto $label$96 
	
.LABEL $label$97
	$12 = [0]
	
.LABEL $label$96
	CALL eosio_assert($12, [3264])
	$8 = ((int_64)$18 == (int_64)1397703940)
	if ( ($8 == 0) ){ goto $label$113 }
	$14 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 *($19 + [312])) * (float_64)(float_64)1e3))
	CALL eosio_assert((uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$16 = (int_64)5459781
	$11 = [0]
	
.LOOP $label$114:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$112 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$115 }
	
.LOOP $label$116:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$112 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$116 }
	
.LABEL $label$115
	$12 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$114 }
	goto $label$111 
	
.LABEL $label$113
	$8 = ((int_64)$18 == (int_64)340414906884)
	if ( ($8 == 0) ){ goto $label$110 }
	$14 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 *($19 + [312])) * (float_64)(float_64)1e6))
	CALL eosio_assert((uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$16 = (int_64)1329745730
	$11 = [0]
	
.LOOP $label$117:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$109 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$118 }
	
.LOOP $label$119:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$109 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$119 }
	
.LABEL $label$118
	$12 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$117 }
	goto $label$108 
	
.LABEL $label$112
	$12 = [0]
	
.LABEL $label$111
	CALL eosio_assert($12, [960])
	CALL eosio_assert($8, [2448])
	CALL eosio_assert(((int_64)$15 >= (int_64)$14), [3296])
	goto $label$101 
	
.LABEL $label$110
	$8 = ((int_64)$18 == (int_64)297481618436)
	if ( ($8 == 0) ){ goto $label$107 }
	$14 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 *($19 + [312])) * (float_64)(float_64)1e5))
	CALL eosio_assert((uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$16 = (int_64)1162037572
	$11 = [0]
	
.LOOP $label$120:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$106 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$121 }
	
.LOOP $label$122:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$106 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$122 }
	
.LABEL $label$121
	$12 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$120 }
	goto $label$105 
	
.LABEL $label$109
	$12 = [0]
	
.LABEL $label$108
	CALL eosio_assert($12, [960])
	CALL eosio_assert($8, [2448])
	CALL eosio_assert(((int_64)$15 >= (int_64)$14), [3344])
	goto $label$101 
	
.LABEL $label$107
	$8 = ((int_64)$18 == (int_64)293455873288)
	if ( ($8 == 0) ){ goto $label$104 }
	$14 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 *($19 + [312])) * (float_64)(float_64)1e7))
	CALL eosio_assert((uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$16 = (int_64)1146312005
	$11 = [0]
	
.LOOP $label$123:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$103 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$124 }
	
.LOOP $label$125:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$103 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$125 }
	
.LABEL $label$124
	$12 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$123 }
	goto $label$102 
	
.LABEL $label$106
	$12 = [0]
	
.LABEL $label$105
	CALL eosio_assert($12, [960])
	CALL eosio_assert($8, [2448])
	CALL eosio_assert(((int_64)$15 >= (int_64)$14), [3392])
	goto $label$101 
	
.LABEL $label$104
	CALL eosio_assert([0], [2304])
	goto $label$101 
	
.LABEL $label$103
	$12 = [0]
	
.LABEL $label$102
	CALL eosio_assert($12, [960])
	CALL eosio_assert($8, [2448])
	CALL eosio_assert(((int_64)$15 >= (int_64)$14), [3440])
	
.LABEL $label$101
	CALL $173(($19 + [280]), $4)
	$8 = *($19 + [280])
	$13 = (($19 + [280]) | [1])
	$7 = *($19 + [288])
	$5 = *($19 + [284])
	$10 = [0]
	$11 = [0]
	$12 = CALL strlen([2848])
	if ( ($12 == 0) ){ goto $label$126 }
	$8 = ( $5 ? uint_32($8 >> [1]) : $11 )
	$11 = ($8 & [1])
	$6 = ( $7 ? $13 : $11 )
	$7 = ($6 + $8)
	$11 = $7
	if ( ((int_32)$8 < (int_32)$12) ){ goto $label$127 }
	$11 = $6
	
.LOOP $label$129:
	$8 = (($8 - $12) + [1])
	if ( ($8 == 0) ){ goto $label$128 }
	$11 = CALL memchr($11, [45], $8)
	if ( ($11 == 0) ){ goto $label$128 }
	if ( (CALL memcmp($11, [2848], $12) == 0) ){ goto $label$127 }
	$11 = ($11 + [1])
	$8 = ($7 - $11)
	if ( ((int_32)$8 >= (int_32)$12) ){ goto $label$129 }
	
.LABEL $label$128
	$11 = $7
	
.LABEL $label$127
	$11 = ( [-1] ? ($11 - $6) : ((int_32)$11 == (int_32)$7) )
	
.LABEL $label$126
	CALL $171(($19 + [280]), [0], ($11 + [1]))
	$11 = *($19 + [280])
	$8 = *((($19 + [280]) + [8]))
	$7 = *($19 + [284])
	$12 = CALL strlen([2848])
	if ( ($12 == 0) ){ goto $label$130 }
	$8 = ( $7 ? uint_32($11 >> [1]) : $5 )
	$5 = ($11 & [1])
	$10 = ( $8 ? $13 : $5 )
	$7 = ($10 + $8)
	$11 = $7
	if ( ((int_32)$8 < (int_32)$12) ){ goto $label$131 }
	$11 = $10
	
.LOOP $label$133:
	$8 = (($8 - $12) + [1])
	if ( ($8 == 0) ){ goto $label$132 }
	$11 = CALL memchr($11, [45], $8)
	if ( ($11 == 0) ){ goto $label$132 }
	if ( (CALL memcmp($11, [2848], $12) == 0) ){ goto $label$131 }
	$11 = ($11 + [1])
	$8 = ($7 - $11)
	if ( ((int_32)$8 >= (int_32)$12) ){ goto $label$133 }
	
.LABEL $label$132
	$11 = $7
	
.LABEL $label$131
	$10 = ( [-1] ? ($11 - $10) : ((int_32)$11 == (int_32)$7) )
	
.LABEL $label$130
	$11 = [0]
	CALL $174(($19 + [264]), ($19 + [280]), [0], $10, ($19 + [280]))
	CALL $173(($19 + [248]), ($19 + [264]))
	$13 = [1]
	$7 = (($19 + [248]) | [1])
	$10 = (($19 + [248]) + [8])
	
.LOOP $label$135:
	$8 = ($12 & [1])
	$12 = *($19 + [248])
	if ( ((uint_32)$11 >= (uint_32)( *($19 + [252]) ? uint_32($12 >> [1]) : $8 )) ){ goto $label$134 }
	$12 = (( *($10) ? $7 : $8 ) + $11)
	$11 = ($11 + [1])
	if ( CALL isdigit(*($12)) ){ goto $label$135 }
	$13 = [0]
	$12 = *($19 + [248])
	
.LABEL $label$134
	if ( (($12 & [1]) == 0) ){ goto $label$136 }
	CALL $162(*(($19 + [256])))
	
.LABEL $label$136
	if ( ($13 == 0) ){ goto $label$137 }
	$9 = CALL atoll(( *($19 + [272]) ? (($19 + [264]) | [1]) : (*($19 + [264]) & [1]) ))
	*($19 + [240]) = ($0 + [24])
	*($19 + [8]) = $9
	CALL $138(($19 + [80]), ($19 + [240]), ($19 + [8]))
	$11 = [0]
	$12 = *($19 + [84])
	if ( ($12 == 0) ){ goto $label$138 }
	$11 = ( $12 ? [0] : ((int_64)*($19 + [8]) == (int_64)*($12 + [24])) )
	
.LABEL $label$138
	CALL eosio_assert(($11 == 0), [2128])
	*((($19 + [200]) + [32])) = [0]
	$16 = (uint_64)$18 >> (uint_64)(int_64)8
	*($19 + [208]) = $16)
	*($19 + [216]) = (int_64)-1
	*($19 + [224]) = (int_64)0
	$18 = *($0)
	*($19 + [200]) = $18
	$11 = CALL db_find_i64($18, $16, (int_64)-3020376800539705344, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$139 }
	$11 = CALL $115(($19 + [200]), $11)
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)($19 + [200])), [1136])
	$18 = *($11 + [8])
	if ( ((uint_32)(CASTING uint_32)(uint_64 $18) > (uint_32)[9]) ){ goto $label$140 }
	if ( ((CASTING uint_32)(uint_64 (uint_64)$18 >> (uint_64)(int_64)32)) <= [3]) ){ goto $label$139 }
	
.LABEL $label$140
	CALL eosio_assert([0], [2576])
	
.LABEL $label$139
	*((($19 + [160]) + [32])) = [0]
	*($19 + [176]) = (int_64)-1
	*($19 + [184]) = (int_64)0
	$18 = *($0)
	*($19 + [160]) = $18
	*($19 + [168]) = $16
	$11 = CALL db_find_i64($18, $16, (int_64)-5918304704032407552, $16)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$141 }
	$11 = CALL $108(($19 + [160]), $11)
	CALL eosio_assert(((int_32)*($11 + [40]) == (int_32)($19 + [160])), [1136])
	if ( (int_64)(*($11 + [32]) == 0) ){ goto $label$141 }
	CALL eosio_assert([0], [2816])
	
.LABEL $label$141
	$16 = (int_64)0
	$18 = (int_64)59
	$11 = [32]
	$14 = (int_64)0
	
.LOOP $label$142:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$143 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$145 }
	$12 = ($12 + [165])
	goto $label$144 
	
.LABEL $label$145
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$144
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$143
	$11 = ($11 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$142 }
	$16 = (int_64)0
	$15 = (int_64)59
	$11 = [352]
	$17 = (int_64)0
	
.LOOP $label$146:
	if ( ((uint_64)$16 > (uint_64)(int_64)7) ){ goto $label$151 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$150 }
	$12 = ($12 + [165])
	goto $label$149 
	
.LABEL $label$151
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$148 }
	goto $label$147 
	
.LABEL $label$150
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$149
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$148
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$147
	$11 = ($11 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$146 }
	*($19 + [144]) = $9
	*($19 + [152]) = ((int_64)((int_64)$17 + (int_64)$14) + (int_64)$9 >> (int_64)63))
	$16 = CALL current_time()
	*(($19 + [108])) = [0]
	*(($19 + [112])) = [0]
	*($19 + [92]) = [0]
	*($19 + [96]) = [0]
	*($19 + [100]) = [0]
	*($19 + [104]) = [0]
	*($19 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$16 / (uint_64)(int_64)1000000)) + [60])
	*($19 + [116]) = [0]
	*(($19 + [120])) = [0]
	*(($19 + [124])) = [0]
	*($19 + [128]) = [0]
	*(($19 + [132])) = [0]
	*(($19 + [136])) = [0]
	$8 = ($19 + [116])
	$17 = *($0)
	$16 = (int_64)0
	$15 = (int_64)59
	$11 = [1472]
	$14 = (int_64)0
	
.LOOP $label$152:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$157 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$156 }
	$12 = ($12 + [165])
	goto $label$155 
	
.LABEL $label$157
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$154 }
	goto $label$153 
	
.LABEL $label$156
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$155
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$154
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$153
	$11 = ($11 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$14 = ((int_64)$18 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$152 }
	*($19 + [72]) = $14
	*($19 + [64]) = $17
	$16 = (int_64)0
	$15 = (int_64)59
	$11 = [352]
	$14 = (int_64)0
	
.LOOP $label$158:
	if ( ((uint_64)$16 > (uint_64)(int_64)7) ){ goto $label$163 }
	$12 = *($11)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$162 }
	$12 = ($12 + [165])
	goto $label$161 
	
.LABEL $label$163
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$160 }
	goto $label$159 
	
.LABEL $label$162
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$161
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$160
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$159
	$11 = ($11 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$14 = ((int_64)$18 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$158 }
	*($19 + [56]) = $14
	*(($19 + [36])) = *(($3 + [12]))
	*(($19 + [32])) = *(($3 + [8]))
	*((($19 + [8]) + [20])) = *(($3 + [4]))
	*($19 + [16]) = $2
	*($19 + [8]) = $1
	*($19 + [24]) = *($3)
	CALL $173(($19 + [40]), $4)
	CALL $134($8, ($19 + [64]), $0, ($19 + [56]), ($19 + [8]))
	if ( ((*($19 + [40]) & [1]) == 0) ){ goto $label$164 }
	CALL $162(*(($19 + [48])))
	
.LABEL $label$164
	*((($19 + [80]) + [20])) = [1]
	$16 = *($0)
	CALL $63(($19 + [8]), ($19 + [80]))
	$11 = *($19 + [8])
	CALL send_deferred(($19 + [144]), $16, $11, (*($19 + [12]) - $11), [0])
	$11 = *($19 + [8])
	if ( ($11 == 0) ){ goto $label$165 }
	*($19 + [12]) = $11
	CALL $162($11)
	
.LABEL $label$165
	CALL $64(($19 + [80]))
	$8 = *($19 + [184])
	if ( ($8 == 0) ){ goto $label$166 }
	$4 = ($19 + [188])
	$11 = *($4)
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$168 }
	
.LOOP $label$169:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$170 }
	CALL $162($12)
	
.LABEL $label$170
	if ( ((int_32)$8 != (int_32)$11) ){ goto $label$169 }
	$11 = *(($19 + [184]))
	goto $label$167 
	
.LABEL $label$168
	$11 = $8
	
.LABEL $label$167
	*($4) = $8
	CALL $162($11)
	
.LABEL $label$166
	$8 = *($19 + [224])
	if ( ($8 == 0) ){ goto $label$137 }
	$4 = ($19 + [228])
	$11 = *($4)
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$172 }
	
.LOOP $label$173:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$174 }
	CALL $162($12)
	
.LABEL $label$174
	if ( ((int_32)$8 != (int_32)$11) ){ goto $label$173 }
	$11 = *(($19 + [224]))
	goto $label$171 
	
.LABEL $label$172
	$11 = $8
	
.LABEL $label$171
	*($4) = $8
	CALL $162($11)
	
.LABEL $label$137
	if ( ((*($19 + [264]) & [1]) == 0) ){ goto $label$175 }
	CALL $162(*($19 + [272]))
	
.LABEL $label$175
	if ( ((*($19 + [280]) & [1]) == 0) ){ goto $label$1 }
	CALL $162(*(($19 + [288])))
	
.LABEL $label$1
	*([0] + [4]) = ($19 + [352])
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [896])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [960])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $135(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $136(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $162(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

void .FUNC _ZN5sicbo8maintainEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [128])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	$4 = *($1 + [8])
	*((($6 + [8]) + [32])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$3 = *($0)
	*($6 + [8]) = $3
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	*($6 + [16]) = $4)
	$0 = CALL db_find_i64($3, $4, (int_64)-5918304704032407552, $4)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $108(($6 + [8]), $0)
	CALL eosio_assert(((int_32)*($0 + [40]) == (int_32)($6 + [8])), [1136])
	CALL eosio_assert([1], [1216])
	CALL eosio_assert(((int_32)*($0 + [40]) == (int_32)($6 + [8])), [1264])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)CALL $fimport$3()), [1312])
	*($0 + [16]) = (int_64)0
	*($0 + [24]) = (int_64)0
	*($0 + [32]) = (int_64)0
	$4 = *($0 + [8])
	CALL eosio_assert([1], [1376])
	*($6 + [96]) = (($6 + [48]) + [40])
	*($6 + [92]) = ($6 + [48])
	*($6 + [88]) = ($6 + [48])
	*($6 + [104]) = ($6 + [88])
	*($6 + [116]) = ($0 + [16])
	*($6 + [112]) = $0
	*($6 + [120]) = ($0 + [24])
	*($6 + [124]) = ($0 + [32])
	CALL $110(($6 + [112]), ($6 + [104]))
	CALL db_update_i64(*($0 + [44]), (int_64)0, ($6 + [48]), [40])
	$0 = (($6 + [8]) + [16])
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( (uint_64)($4) <= *($0)) ){ goto $label$1 }
	*($0) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$1
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$5 = ($6 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $162($1)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($6 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($5) = $2
	CALL $162($0)
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [128])
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [80])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	CALL $118(($6 + [16]), $4, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	*(($1 = (($6 + [32]) + [8]))) = *((($6 + [16]) + [8]))
	*($6 + [32]) = *($6 + [16])
	*((($6 + [48]) + [8])) = *($1)
	*($6 + [48]) = *($6 + [32])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	$3 = *((($6 + [48]) + [8]))
	*((($6 + [64]) + [8])) = $3
	*(($6 + [8])) = $3
	$3 = *($6 + [48])
	*($6 + [64]) = $3
	*($6) = $3
	CALL void $1((int_32 $6), (int_32 $5))
	*([0] + [4]) = ($6 + [80])
	return [1]
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC $116 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [688])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [736])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [800])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $162($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $162($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $117 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $161(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $172($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $162($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $162($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $114 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [1264])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1312])
	$5 = *($1 + [8])
	$2 = *($2)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)$5), [1600])
	$3 = (int_64)
	*($1) = $3(*($1) - *($2)))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [1648])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1680])
	CALL eosio_assert([1], [896])
	$3 = (uint_64)$5 >> (uint_64)(int_64)8)
	$5 = (int_64)5462355
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [960])
	$5 = (int_64)0
	$4 = *($1)
	if ( ((int_64)$4 < (int_64)1) ){ goto $label$6 }
	$5 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $4) * (float_64)(float_64)0.5))
	
.LABEL $label$6
	*($1 + [16]) = $5
	*(($1 + [24])) = (int_64)1398362884
	CALL eosio_assert(((int_64)$3 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)), [1376])
	$6 = $8
	$2 = ($6 + [-64])
	*([0] + [4]) = $2
	*($7 + [12]) = $2
	*($7 + [8]) = $2
	*($7 + [16]) = $6
	*($7 + [24]) = ($7 + [8])
	*($7 + [36]) = ($1 + [16])
	*($7 + [32]) = $1
	*($7 + [40]) = ($1 + [32])
	*($7 + [44]) = ($1 + [48])
	CALL $107(($7 + [32]), ($7 + [24]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [64])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$7
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [864])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $161([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [992])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [992])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $117(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $162($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $112 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = *($0)
	$9 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $161(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $172($0)
	
.LABEL $label$1
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$9 = ($8 + ((int_32)$9 * (int_32)[40]))
	$8 = CALL $103($9, $1, *($2), *($3), $4)
	$6 = ($8 + [40])
	$7 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$6 }
	$4 = ([0] - $7)
	$7 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($7 + [-12]))
	*(($8 + [-40])) = *(($7 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($2 = ($8 + [-16]))) = [0]
	$3 = ($7 + [-4])
	*($1) = *($3)
	*(($8 + [-20])) = *($7)
	$1 = ($7 + [4])
	*($2) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($3) = (int_64)0
	*(($2 = ($8 + [-4]))) = [0]
	$3 = ($7 + [8])
	*($1) = *($3)
	*(($8 + [-8])) = *(($7 + [12]))
	$8 = ($7 + [16])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$9 = ($9 + [-40])
	$8 = $9
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $4) != (int_32)[-20]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $7
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	$9 = ([0] - $1)
	$7 = ($7 + [-24])
	
.LOOP $label$9:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $162($8)
	
.LABEL $label$10
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$11 }
	*(($7 + [4])) = $8
	CALL $162($8)
	
.LABEL $label$11
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $162($1)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [992])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [992])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $111 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $161(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $172($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $162($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $162($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $118 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [896])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [960])
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [992])
	CALL memcpy($0, $1, [8])
	CALL eosio_assert(((int_32)($2 & [-8]) != (int_32)[8]), [992])
	CALL memcpy(($0 + [8]), ($1 + [8]), [8])
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*((($4 + [32]) + [12])) = *(($1 + [20]))
	*(($3 = (($4 + [32]) + [8]))) = *(($1 + [16]))
	*($4 + [32]) = *($1 + [8])
	*($4 + [36]) = *(($1 + [12]))
	$2 = *($1)
	CALL $173(($4 + [16]), ($1 + [24]))
	*((($4 + [48]) + [8])) = *($3)
	*($4 + [48]) = *($4 + [32])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($3 = (($4 + [80]) + [8]))) = *((($4 + [48]) + [8]))
	*($4 + [80]) = *($4 + [48])
	CALL $173(($4 + [64]), ($4 + [16]))
	*(($4 + [8])) = *($3)
	*($4) = *($4 + [80])
	CALL void $0((int_32 $2), (int_64 $4), (int_32 ($4 + [64])), (int_32 $1))
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $162(*($4 + [72]))
	
.LABEL $label$2
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $162(*($4 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [96])
}

void .FUNC _ZN5sicbo9arenadrawEyyh (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	float_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [288])
	*([0] + [4]) = $17
	*($17 + [88]) = $2
	CALL require_auth($1)
	$4 = *(($0 + [128]))
	$9 = *(($0 + [132]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$12 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( (int_64)(*(*($12)) == 0) ){ goto $label$1 }
	$9 = $12
	$8 = ($12 + [-24])
	$12 = $8
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$8 = ($0 + [104])
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$4 }
	$12 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [72]) == (int_32)$8), [1136])
	goto $label$3 
	
.LABEL $label$4
	$12 = [0]
	$9 = CALL db_find_i64(*(($0 + [104])), *(($0 + [112])), (int_64)3879062980018000896, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$3 }
	$12 = CALL $58($8, $9)
	CALL eosio_assert(((int_32)*($12 + [72]) == (int_32)$8), [1136])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [2000])
	CALL eosio_assert(*($12 + [16]), [1568])
	$2 = *($12 + [8])
	$4 = *(($0 + [168]))
	$9 = *(($0 + [172]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$5 }
	$12 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$6:
	if ( ((int_64)*(*($12)) == (int_64)$2) ){ goto $label$5 }
	$9 = $12
	$8 = ($12 + [-24])
	$12 = $8
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$5 = ($0 + [144])
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$8 }
	$9 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [120]) == (int_32)$5), [1136])
	goto $label$7 
	
.LABEL $label$8
	$9 = [0]
	$12 = CALL db_find_i64(*(($0 + [144])), *(($0 + [152])), (int_64)3879063041846280192, $2)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$7 }
	$9 = CALL $71($5, $12)
	CALL eosio_assert(((int_32)*($9 + [120]) == (int_32)$5), [1136])
	
.LABEL $label$7
	$12 = [0]
	$6 = ((int_32)$9 != (int_32)[0])
	CALL eosio_assert($6, [2016])
	CALL eosio_assert((((int_32)$3 == (int_32)[1]) | ((int_32)$3 == (int_32)[10])), [2048])
	CALL eosio_assert(((uint_64)((uint_64)((int_64)((int_64)((int_64)((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000) + (int_64)1) & (int_64)4294967295) + (int_64)28800) % (uint_64)(int_64)86400) > (uint_64)(int_64)28799), [1568])
	CALL eosio_assert((*($9 + [56]) <= (CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000))), [2080])
	CALL eosio_assert(((uint_32)(*($9 + [56]) + [900]) > (uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000)) + [3])), [2112])
	*($17 + [80]) = ($0 + [224])
	CALL $91(($17 + [96]), ($17 + [80]), ($17 + [88]))
	$8 = [0]
	$4 = *($17 + [100])
	if ( ($4 == 0) ){ goto $label$9 }
	$8 = ( $4 ? [0] : ((int_64)*($17 + [88]) == (int_64)*($4 + [8])) )
	
.LABEL $label$9
	CALL eosio_assert(($8 == 0), [2128])
	CALL eosio_assert([1], [896])
	$2 = (int_64)5462355
	
.LOOP $label$11:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$8 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	CALL eosio_assert($8, [960])
	$10 = *($9 + [40])
	if ( ($3 == 0) ){ goto $label$15 }
	$15 = ((int_64)$10 + (int_64)(CASTING uint_64)(uint_32 ($3 + [-1])))
	$2 = (int_64)0
	$12 = $3
	
.LOOP $label$16:
	$2 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $2) + (float_64)((float_64)((float_64)((float_64)(CASTING float_64)(uint_64 $10) * (float_64)(float_64)0.01) + (float_64)(float_64)10) * (float_64)(float_64)1e4)))
	$10 = ((int_64)$10 + (int_64)1)
	$12 = ($12 + [-1])
	if ( $12 ){ goto $label$16 }
	$10 = ((int_64)$15 + (int_64)1)
	$11 = (CASTING float_64)(int_64 $2)
	goto $label$14 
	
.LABEL $label$15
	$11 = (float_64)0
	
.LABEL $label$14
	$7 = (Rounds 0)(((float_64)( (float_64)0.9 ? (float_64)1 : ((int_32)$3 == (int_32)[10]) ) * (float_64)$11))
	$16 = *($0)
	$2 = (int_64)0
	$13 = (int_64)59
	$12 = [1472]
	$14 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$22 }
	$8 = *($12)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$8 = ($8 + [165])
	goto $label$20 
	
.LABEL $label$22
	$15 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$18
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$17 }
	*($17 + [248]) = $14
	*($17 + [240]) = $16
	$2 = (int_64)0
	$15 = (int_64)59
	$12 = [272]
	$14 = (int_64)0
	
.LOOP $label$23:
	$13 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$24 }
	$8 = *($12)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$8 = ($8 + [165])
	goto $label$25 
	
.LABEL $label$26
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$24
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$23 }
	$2 = (int_64)0
	$13 = (int_64)59
	$12 = [2160]
	$16 = (int_64)0
	
.LOOP $label$27:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$32 }
	$8 = *($12)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$8 = ($8 + [165])
	goto $label$30 
	
.LABEL $label$32
	$15 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$31
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$29
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$28
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$16 = ((int_64)$15 | (int_64)$16)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$27 }
	*(($17 + [224])) = [0]
	*($17 + [216]) = (int_64)0
	$12 = CALL strlen([2176])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$33 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$36 }
	*($17 + [216]) = ($12 << [1])
	$8 = (($17 + [216]) | [1])
	if ( $12 ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	$4 = (($12 + [16]) & [-16])
	$8 = CALL $161($4)
	*($17 + [216]) = ($4 | [1])
	*($17 + [224]) = $8
	*($17 + [220]) = $12
	
.LABEL $label$35
	CALL memcpy($8, [2176], $12)
	
.LABEL $label$34
	*(($8 + $12)) = [0]
	*(($17 + [16])) = (int_64)340414906884
	*(($17 + [28])) = *($17 + [220])
	*($17 + [8]) = $7
	$12 = ($17 + [224])
	*(($17 + [32])) = *($12)
	*($17) = $1
	*($17 + [24]) = *($17 + [216])
	*($17 + [216]) = [0]
	*($17 + [220]) = [0]
	*($12) = [0]
	$12 = CALL $92(($17 + [96]), ($17 + [240]), $14, $16, $17)
	CALL $93(($17 + [64]), $12)
	$8 = *($17 + [64])
	CALL send_inline($8, (*($17 + [68]) - $8))
	$8 = *($17 + [64])
	if ( ($8 == 0) ){ goto $label$37 }
	*($17 + [68]) = $8
	CALL $162($8)
	
.LABEL $label$37
	$8 = *($12 + [28])
	if ( ($8 == 0) ){ goto $label$38 }
	*(($12 + [32])) = $8
	CALL $162($8)
	
.LABEL $label$38
	$8 = *($12 + [16])
	if ( ($8 == 0) ){ goto $label$39 }
	*(($12 + [20])) = $8
	CALL $162($8)
	
.LABEL $label$39
	if ( ((*(($17 + [24])) & [1]) == 0) ){ goto $label$40 }
	CALL $162(*(($17 + [32])))
	
.LABEL $label$40
	if ( ((*($17 + [216]) & [1]) == 0) ){ goto $label$41 }
	CALL $162(*(($17 + [224])))
	
.LABEL $label$41
	$2 = CALL current_time()
	*($17 + [72]) = $1
	*($17 + [64]) = ((int_64)((uint_64)$2 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$2 = CALL current_time()
	*(($17 + [28])) = [0]
	*(($17 + [32])) = [0]
	*($17 + [12]) = [0]
	*($17 + [16]) = [0]
	*($17 + [20]) = [0]
	*($17 + [24]) = [0]
	*($17) = ((CASTING uint_32)(uint_64 ((uint_64)$2 / (uint_64)(int_64)1000000)) + [60])
	*($17 + [36]) = [0]
	*(($17 + [40])) = [0]
	*(($17 + [44])) = [0]
	*($17 + [48]) = [0]
	*(($17 + [52])) = [0]
	*(($17 + [56])) = [0]
	$4 = ($17 + [36])
	$16 = *($0)
	$2 = (int_64)0
	$13 = (int_64)59
	$12 = [1472]
	$14 = (int_64)0
	
.LOOP $label$42:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$47 }
	$8 = *($12)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$46 }
	$8 = ($8 + [165])
	goto $label$45 
	
.LABEL $label$47
	$15 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$46
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$45
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$44
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$43
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$42 }
	*($17 + [248]) = $14
	*($17 + [240]) = $16
	$2 = (int_64)0
	$13 = (int_64)59
	$12 = [512]
	$14 = (int_64)0
	
.LOOP $label$48:
	if ( ((uint_64)$2 > (uint_64)(int_64)9) ){ goto $label$53 }
	$8 = *($12)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$8 = ($8 + [165])
	goto $label$51 
	
.LABEL $label$53
	$15 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$50
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$49
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$48 }
	*($17 + [216]) = $14
	*($17 + [96]) = $1
	*($17 + [112]) = $3
	$8 = ($9 + [40])
	*($17 + [120]) = *($8)
	*($17 + [104]) = *($17 + [88])
	CALL $94($4, ($17 + [240]), $0, ($17 + [216]), ($17 + [96]))
	$2 = *($0)
	*(($17 + [20])) = [1]
	CALL $63(($17 + [96]), $17)
	$12 = *($17 + [96])
	CALL send_deferred(($17 + [64]), $2, $12, (*($17 + [100]) - $12), [0])
	$12 = *($17 + [96])
	if ( ($12 == 0) ){ goto $label$54 }
	*($17 + [100]) = $12
	CALL $162($12)
	
.LABEL $label$54
	CALL eosio_assert($6, [1216])
	CALL eosio_assert(((int_32)*($9 + [120]) == (int_32)$5), [1264])
	CALL eosio_assert(((int_64)*(($0 + [144])) == (int_64)CALL $fimport$3()), [1312])
	*($9 + [40]) = $10
	$2 = *($9)
	CALL eosio_assert([1], [1376])
	*($17 + [224]) = (($17 + [96]) + [116])
	*($17 + [220]) = ($17 + [96])
	*($17 + [216]) = ($17 + [96])
	*($17 + [232]) = ($17 + [216])
	*($17 + [244]) = ($9 + [8])
	*($17 + [240]) = $9
	*($17 + [248]) = ($9 + [24])
	*($17 + [252]) = $8
	*($17 + [256]) = ($9 + [48])
	*($17 + [260]) = ($9 + [56])
	*($17 + [264]) = ($9 + [60])
	*($17 + [268]) = ($9 + [64])
	*($17 + [272]) = ($9 + [72])
	*($17 + [276]) = ($9 + [80])
	*($17 + [280]) = ($9 + [88])
	*($17 + [284]) = ($9 + [104])
	CALL $76(($17 + [240]), ($17 + [232]))
	CALL db_update_i64(*($9 + [124]), (int_64)0, ($17 + [96]), [116])
	$12 = ($0 + [160])
	if ( (uint_64)($2 <= *($12)) ){ goto $label$55 }
	*($12) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$55
	CALL $64($17)
	*([0] + [4]) = ($17 + [288])
	return (unreachable)
	
.LABEL $label$33
	CALL $163(($17 + [216]))
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$3 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$3 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$2
	CALL read_action_data($3, $1)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [992])
	CALL memcpy(($5 + [8]), $3, [1])
	CALL eosio_assert(((int_32)$1 != (int_32)[1]), [992])
	CALL memcpy((($5 + [8]) | [1]), ($3 + [1]), [1])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($3)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *($5 + [9])
	$6 = *($5 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL void $1((int_32 ($6 & [255])), (int_32 ($3 & [255])), (int_32 $4))
	*([0] + [4]) = ($5 + [16])
	return [1]
}

void .FUNC _ZN5sicbo10unlockuserEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	$4 = *($2 + [8])
	*(($7 + [32])) = [0]
	*($7 + [16]) = (int_64)-1
	*($7 + [24]) = (int_64)0
	$5 = *($0)
	*($7) = $5
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	*($7 + [8]) = $4)
	$0 = CALL db_find_i64($5, $4, (int_64)-3020376800539705344, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $115($7, $0)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)$7), [1136])
	CALL eosio_assert([1], [608])
	CALL eosio_assert([1], [656])
	$2 = CALL db_next_i64(*($0 + [20]), ($7 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	CALL $115($7, $2)
	
.LABEL $label$2
	CALL $116($7, $0)
	
.LABEL $label$1
	$3 = *($7 + [24])
	if ( ($3 == 0) ){ goto $label$3 }
	$6 = ($7 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $162($2)
	
.LABEL $label$7
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($7 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $3
	
.LABEL $label$4
	*($6) = $3
	CALL $162($0)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC _ZN5sicbo11setmaintainEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [128])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	$5 = *($1 + [8])
	$6 = [0]
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$2 = *($0)
	*($7 + [8]) = $2
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	*($7 + [16]) = $5)
	$4 = CALL db_find_i64($2, $5, (int_64)-5918304704032407552, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $108(($7 + [8]), $4) + [40]) == (int_32)($7 + [8])), [1136])
	$4 = *($7 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$3 = *($0)
	CALL eosio_assert(((int_64)$2 == (int_64)CALL $fimport$3()), [1872])
	*(($0 = CALL $161([56])) + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [896])
	$5 = (int_64)5462355
	
.LOOP $label$5:
	$4 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($4, [960])
	*($0 + [40]) = ($7 + [8])
	*(($6 = ($0 + [8]))) = *(($1 + [8]))
	*($0) = *($1)
	*($7 + [96]) = (($7 + [48]) + [40])
	*($7 + [92]) = ($7 + [48])
	*($7 + [88]) = ($7 + [48])
	*($7 + [104]) = ($7 + [88])
	*($7 + [116]) = ($0 + [16])
	*($7 + [112]) = $0
	*($7 + [120]) = ($0 + [24])
	*($7 + [124]) = ($0 + [32])
	CALL $110(($7 + [112]), ($7 + [104]))
	$5 = (uint_64)*($6) >> (uint_64)(int_64)8
	$4 = CALL db_store_i64(*((($7 + [8]) + [8])), (int_64)-5918304704032407552, $3, $5), ($7 + [48]), [40]
	*($0 + [44]) = $4)
	$1 = (($7 + [8]) + [16])
	if ( (uint_64)($5 <= *($1)) ){ goto $label$8 }
	*($1) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$8
	*($7 + [112]) = $0
	$5 = (uint_64)*($6) >> (uint_64)(int_64)8
	*($7 + [48]) = $5)
	*($7 + [88]) = $4
	$1 = ($7 + [36])
	$6 = *($1)
	if ( ((uint_32)$6 >= (uint_32)*((($7 + [8]) + [32]))) ){ goto $label$10 }
	*($6 + [8]) = $5
	*($6 + [16]) = $4
	*($7 + [112]) = [0]
	*($6) = $0
	*($1) = ($6 + [24])
	goto $label$9 
	
.LABEL $label$10
	CALL $111(($7 + [32]), ($7 + [112]), ($7 + [48]), ($7 + [88]))
	
.LABEL $label$9
	$6 = *($7 + [112])
	*($7 + [112]) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $162($6)
	
.LABEL $label$11
	$4 = *($7 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = ($7 + [36])
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	CALL $162($0)
	
.LABEL $label$15
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$14 }
	$6 = *(($7 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $4
	
.LABEL $label$12
	*($1) = $4
	CALL $162($6)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [128])
}

void .FUNC _ZN5sicbo12senddividendEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [272])
	*([0] + [4]) = $9
	CALL require_auth(*($0))
	$2 = *($1 + [8])
	*((($9 + [40]) + [32])) = [0]
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	*($9 + [48]) = $2)
	*($9 + [56]) = (int_64)-1
	*($9 + [64]) = (int_64)0
	$6 = *($0)
	*($9 + [40]) = $6
	$8 = CALL db_find_i64($6, $2, (int_64)5455799419163115520, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $75(($9 + [40]), $8)
	CALL eosio_assert(((int_32)*($8 + [64]) == (int_32)($9 + [40])), [1136])
	*($9 + [80]) = $1
	CALL eosio_assert([1], [1216])
	CALL $114(($9 + [40]), $8, ($9 + [80]))
	
.LABEL $label$1
	*(($9 + [32])) = [0]
	*($9 + [16]) = (int_64)-1
	*($9 + [24]) = (int_64)0
	$6 = *($0)
	*($9) = $6
	*($9 + [8]) = $2
	$8 = CALL db_find_i64($6, $2, (int_64)-5918304704032407552, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	$8 = CALL $108($9, $8)
	CALL eosio_assert(((int_32)*($8 + [40]) == (int_32)$9), [1136])
	CALL eosio_assert([1], [1216])
	CALL eosio_assert(((int_32)*($8 + [40]) == (int_32)$9), [1264])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$3()), [1312])
	$2 = *($8 + [8])
	CALL eosio_assert(((int_64)*(($1 + [8])) == (int_64)$2), [1600])
	$6 = (int_64)
	*($8) = $6(*($8) - *($1)))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [1648])
	CALL eosio_assert(((int_64)*($8) < (int_64)4611686018427387904), [1680])
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$2) == (int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8)), [1376])
	*($9 + [208]) = (($9 + [80]) + [40])
	*($9 + [204]) = ($9 + [80])
	*($9 + [200]) = ($9 + [80])
	*($9 + [216]) = ($9 + [200])
	*($9 + [228]) = ($8 + [16])
	*($9 + [224]) = $8
	*($9 + [232]) = ($8 + [24])
	*($9 + [236]) = ($8 + [32])
	CALL $110(($9 + [224]), ($9 + [216]))
	CALL db_update_i64(*($8 + [44]), (int_64)0, ($9 + [80]), [40])
	$8 = ($9 + [16])
	if ( (uint_64)($2 <= *($8)) ){ goto $label$2 }
	*($8) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$2
	if ( ((int_64)*(($1 + [8])) != (int_64)1397703940) ){ goto $label$3 }
	$3 = *(($0 + [128]))
	$7 = *(($0 + [132]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$8 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$5:
	if ( (int_64)(*(*($8)) == 0) ){ goto $label$4 }
	$7 = $8
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = ($0 + [104])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$7 }
	$5 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [72]) == (int_32)$8), [1136])
	goto $label$6 
	
.LABEL $label$7
	$5 = CALL $58($8, CALL $fimport$6(*(($0 + [104])), *(($0 + [112])), (int_64)3879062980018000896, (int_64)0))
	CALL eosio_assert(((int_32)*($5 + [72]) == (int_32)$8), [1136])
	
.LABEL $label$6
	$2 = *($5 + [8])
	$3 = *(($0 + [168]))
	$7 = *(($0 + [172]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$8 }
	$8 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$9:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$8 }
	$7 = $8
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	$5 = ($0 + [144])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$11 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [120]) == (int_32)$5), [1136])
	goto $label$10 
	
.LABEL $label$11
	$8 = [0]
	$7 = CALL db_find_i64(*(($0 + [144])), *(($0 + [152])), (int_64)3879063041846280192, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$10 }
	$8 = CALL $71($5, $7)
	CALL eosio_assert(((int_32)*($8 + [120]) == (int_32)$5), [1136])
	
.LABEL $label$10
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [1216])
	CALL eosio_assert(((int_32)*($8 + [120]) == (int_32)$5), [1264])
	CALL eosio_assert(((int_64)*(($0 + [144])) == (int_64)CALL $fimport$3()), [1312])
	$2 = *($8)
	CALL eosio_assert(((int_64)*(($1 + [8])) == (int_64)*(($8 + [32]))), [1600])
	$6 = (int_64)
	*($8 + [24]) = $6(*($8 + [24]) - *($1)))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [1648])
	CALL eosio_assert(((int_64)*($8 + [24]) < (int_64)4611686018427387904), [1680])
	CALL eosio_assert(((int_64)$2 == (int_64)*($8)), [1376])
	*($9 + [208]) = (($9 + [80]) + [116])
	*($9 + [204]) = ($9 + [80])
	*($9 + [200]) = ($9 + [80])
	*($9 + [216]) = ($9 + [200])
	*($9 + [228]) = ($8 + [8])
	*($9 + [224]) = $8
	*($9 + [232]) = ($8 + [24])
	*($9 + [236]) = ($8 + [40])
	*($9 + [240]) = ($8 + [48])
	*($9 + [244]) = ($8 + [56])
	*($9 + [248]) = ($8 + [60])
	*($9 + [252]) = ($8 + [64])
	*($9 + [256]) = ($8 + [72])
	*($9 + [260]) = ($8 + [80])
	*($9 + [264]) = ($8 + [88])
	*($9 + [268]) = ($8 + [104])
	CALL $76(($9 + [224]), ($9 + [216]))
	CALL db_update_i64(*($8 + [124]), (int_64)0, ($9 + [80]), [116])
	$8 = ($0 + [160])
	if ( (uint_64)($2 <= *($8)) ){ goto $label$3 }
	*($8) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$0 = *($9 + [24])
	if ( ($0 == 0) ){ goto $label$12 }
	$7 = ($9 + [28])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$14 }
	
.LOOP $label$15:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$16 }
	CALL $162($5)
	
.LABEL $label$16
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$15 }
	$8 = *(($9 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$8 = $0
	
.LABEL $label$13
	*($7) = $0
	CALL $162($8)
	
.LABEL $label$12
	$0 = *($9 + [64])
	if ( ($0 == 0) ){ goto $label$17 }
	$7 = ($9 + [68])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$19 }
	
.LOOP $label$20:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$21 }
	CALL $162($5)
	
.LABEL $label$21
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$20 }
	$8 = *(($9 + [64]))
	goto $label$18 
	
.LABEL $label$19
	$8 = $0
	
.LABEL $label$18
	*($7) = $0
	CALL $162($8)
	
.LABEL $label$17
	*([0] + [4]) = ($9 + [272])
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [896])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [960])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [992])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [992])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [992])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

void .FUNC _ZN5sicbo10startarenaEN5eosio5assetEmh (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [272])
	*([0] + [4]) = $11
	*($11 + [60]) = $2
	*($11 + [59]) = $3
	CALL require_auth(*($0))
	$5 = *(($0 + [128]))
	$10 = *(($0 + [132]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$1 }
	$2 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$2:
	if ( (int_64)(*(*($2)) == 0) ){ goto $label$1 }
	$10 = $2
	$7 = ($2 + [-24])
	$2 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [104])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$15 }
	$6 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$4), [1136])
	if ( $6 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$2 = CALL db_find_i64(*(($0 + [104])), *(($0 + [112])), (int_64)3879062980018000896, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$13 }
	$6 = CALL $58($4, $2)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$4), [1136])
	
.LABEL $label$14
	if ( ($3 == 0) ){ goto $label$16 }
	if ( ((int_64)*($6 + [32]) != (int_64)0) ){ goto $label$16 }
	CALL eosio_assert([0], [2224])
	
.LABEL $label$16
	$8 = *($6 + [8])
	$5 = *(($0 + [168]))
	$10 = *(($0 + [172]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$17 }
	$2 = ($10 + [-24])
	$3 = ([0] - $5)
	
.LOOP $label$18:
	if ( ((int_64)*(*($2)) == (int_64)$8) ){ goto $label$17 }
	$10 = $2
	$7 = ($2 + [-24])
	$2 = $7
	if ( ((int_32)($7 + $3) != (int_32)[-24]) ){ goto $label$18 }
	
.LABEL $label$17
	$7 = ($0 + [144])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$12 }
	$2 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [120]) == (int_32)$7), [1136])
	goto $label$8 
	
.LABEL $label$13
	$9 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$3()), [1872])
	*(($2 = CALL $161([88])) + [72]) = $4
	*($2 + [8]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [16]) = (int_64)1
	*($2 + [24]) = (int_64)1
	*($2 + [40]) = (int_64)0
	*($11 + [24]) = (($11 + [64]) + [72])
	*($11 + [20]) = ($11 + [64])
	*($11 + [16]) = ($11 + [64])
	*($11 + [192]) = ($11 + [16])
	*($11 + [212]) = ($2 + [8])
	*($11 + [208]) = $2
	*($11 + [216]) = ($2 + [16])
	*($11 + [220]) = ($2 + [24])
	*($11 + [224]) = ($2 + [32])
	*($11 + [228]) = ($2 + [40])
	*($11 + [232]) = ($2 + [48])
	*($11 + [236]) = ($2 + [56])
	*($11 + [240]) = ($2 + [64])
	CALL $59(($11 + [208]), ($11 + [192]))
	$8 = *($2)
	$10 = CALL db_store_i64(*(($0 + [112])), (int_64)3879062980018000896, $9, $8, ($11 + [64]), [72])
	*($2 + [76]) = $10
	$7 = ($0 + [120])
	if ( (uint_64)($8 <= *($7)) ){ goto $label$19 }
	*($7) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$19
	*($11 + [208]) = $2
	$8 = *($2)
	*($11 + [64]) = $8
	*($11 + [16]) = $10
	$6 = ($0 + [132])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [136]))) ){ goto $label$11 }
	*($7 + [8]) = $8
	*($7 + [16]) = $10
	*($11 + [208]) = [0]
	*($7) = $2
	*($6) = ($7 + [24])
	goto $label$10 
	
.LABEL $label$12
	$2 = CALL db_find_i64(*(($0 + [144])), *(($0 + [152])), (int_64)3879063041846280192, $8)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL $71($7, $2)
	CALL eosio_assert(((int_32)*($2 + [120]) == (int_32)$7), [1136])
	goto $label$8 
	
.LABEL $label$11
	CALL $61(($0 + [128]), ($11 + [208]), ($11 + [64]), ($11 + [16]))
	
.LABEL $label$10
	$2 = *($11 + [208])
	$7 = [0]
	*($11 + [208]) = [0]
	if ( ($2 == 0) ){ goto $label$20 }
	CALL $162($2)
	
.LABEL $label$20
	$8 = *($1 + [8])
	*((($11 + [16]) + [32])) = [0]
	*($11 + [32]) = (int_64)-1
	*($11 + [40]) = (int_64)0
	$9 = *($0)
	*($11 + [16]) = $9
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($11 + [24]) = $8)
	$2 = CALL db_find_i64($9, $8, (int_64)5455799419163115520, $8)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$21 }
	$7 = CALL $75(($11 + [16]), $2)
	CALL eosio_assert(((int_32)*($7 + [64]) == (int_32)($11 + [16])), [1136])
	
.LABEL $label$21
	$9 = *($0)
	CALL eosio_assert(((int_64)*($0 + [144]) == (int_64)CALL $fimport$3()), [1872])
	$2 = CALL $161([136])
	CALL $72($2)
	*($2 + [120]) = ($0 + [144])
	*($2) = (int_64)0
	*(($2 + [20])) = *(($1 + [12]))
	*(($2 + [16])) = *(($1 + [8]))
	*(($2 + [12])) = *(($1 + [4]))
	*($2 + [8]) = *($1)
	*(($2 + [32])) = *(($7 + [8]))
	*($2 + [24]) = *($7)
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = (int_64)0
	$8 = CALL current_time()
	*($2 + [60]) = [0]
	*($2 + [64]) = (int_64)1
	*($2 + [72]) = (int_64)0
	*($2 + [96]) = (int_64)340414906884
	*($2 + [112]) = (int_64)1397703940
	*($2 + [56]) = ((CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000)) + *($11 + [60]))
	*($11 + [200]) = (($11 + [64]) + [116])
	*($11 + [196]) = ($11 + [64])
	*($11 + [192]) = ($11 + [64])
	*($11 + [8]) = ($11 + [192])
	*($11 + [212]) = ($2 + [8])
	*($11 + [208]) = $2
	*($11 + [216]) = ($2 + [24])
	*($11 + [220]) = ($2 + [40])
	*($11 + [224]) = ($2 + [48])
	*($11 + [228]) = ($2 + [56])
	*($11 + [232]) = ($2 + [60])
	*($11 + [236]) = ($2 + [64])
	*($11 + [240]) = ($2 + [72])
	*($11 + [244]) = ($2 + [80])
	*($11 + [248]) = ($2 + [88])
	*($11 + [252]) = ($2 + [104])
	CALL $76(($11 + [208]), ($11 + [8]))
	$8 = *($2)
	$10 = CALL db_store_i64(*(($0 + [152])), (int_64)3879063041846280192, $9, $8, ($11 + [64]), [116])
	*($2 + [124]) = $10
	$7 = ($0 + [160])
	if ( (uint_64)($8 <= *($7)) ){ goto $label$22 }
	*($7) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	*($11 + [208]) = $2
	$8 = *($2)
	*($11 + [64]) = $8
	*($11 + [192]) = $10
	$6 = ($0 + [172])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [176]))) ){ goto $label$24 }
	*($7 + [8]) = $8
	*($7 + [16]) = $10
	*($11 + [208]) = [0]
	*($7) = $2
	*($6) = ($7 + [24])
	goto $label$23 
	
.LABEL $label$24
	CALL $74(($0 + [168]), ($11 + [208]), ($11 + [64]), ($11 + [192]))
	
.LABEL $label$23
	$2 = *($11 + [208])
	*($11 + [208]) = [0]
	if ( ($2 == 0) ){ goto $label$25 }
	CALL $162($2)
	
.LABEL $label$25
	$8 = CALL current_time()
	CALL _ZN5sicbo10arenadelayEy($0, (CASTING uint_64)(uint_32 ((*($11 + [60]) + (CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000))) + [900])))
	CALL _ZN5sicbo11arenapnrdlyEv($0)
	$0 = *($11 + [40])
	if ( ($0 == 0) ){ goto $label$3 }
	$10 = ($11 + [44])
	$2 = *($10)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$7 }
	
.LOOP $label$26:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$27 }
	CALL $162($7)
	
.LABEL $label$27
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$26 }
	$2 = *(($11 + [40]))
	goto $label$6 
	
.LABEL $label$9
	$2 = [0]
	
.LABEL $label$8
	*($11 + [12]) = $2
	*($11 + [8]) = $7
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [2192])
	if ( ((int_64)*($2 + [64]) != (int_64)2) ){ goto $label$31 }
	CALL eosio_assert([1], [1216])
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$4), [1264])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$3()), [1312])
	*($6 + [40]) = (int_64)0
	*($6 + [8]) = ((int_64)*($6 + [8]) + (int_64)1)
	$8 = *($6)
	CALL eosio_assert([1], [1376])
	*($11 + [24]) = (($11 + [64]) + [72])
	*($11 + [20]) = ($11 + [64])
	*($11 + [16]) = ($11 + [64])
	*($11 + [192]) = ($11 + [16])
	*($11 + [212]) = ($6 + [8])
	*($11 + [208]) = $6
	*($11 + [216]) = ($6 + [16])
	*($11 + [220]) = ($6 + [24])
	*($11 + [224]) = ($6 + [32])
	*($11 + [228]) = ($6 + [40])
	*($11 + [232]) = ($6 + [48])
	*($11 + [236]) = ($6 + [56])
	*($11 + [240]) = ($6 + [64])
	CALL $59(($11 + [208]), ($11 + [192]))
	CALL db_update_i64(*($6 + [76]), (int_64)0, ($11 + [64]), [72])
	$2 = ($0 + [120])
	if ( (uint_64)($8 <= *($2)) ){ goto $label$32 }
	*($2) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$32
	$8 = *($1 + [8])
	*((($11 + [64]) + [32])) = [0]
	*($11 + [80]) = (int_64)-1
	*($11 + [88]) = (int_64)0
	$9 = *($0)
	*($11 + [64]) = $9
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($11 + [72]) = $8)
	$2 = CALL db_find_i64($9, $8, (int_64)5455799419163115520, $8)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$30 }
	$2 = CALL $75(($11 + [64]), $2)
	CALL eosio_assert(((int_32)*($2 + [64]) == (int_32)($11 + [64])), [1136])
	*($11 + [4]) = $2
	*($11) = ($11 + [64])
	goto $label$29 
	
.LABEL $label$31
	$10 = *($2 + [56])
	$8 = CALL current_time()
	$9 = *($6 + [16])
	if ( ((uint_32)($10 + [900]) >= (uint_32)((CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000)) + [1])) ){ goto $label$33 }
	if ( (int_64)($9 == 0) ){ goto $label$28 }
	CALL _ZN5sicbo11arenasettleEv($0)
	goto $label$3 
	
.LABEL $label$33
	if ( ((int_64)$9 == (int_64)0) ){ goto $label$28 }
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [1216])
	CALL eosio_assert(((int_32)*($2 + [120]) == (int_32)$7), [1264])
	CALL eosio_assert(((int_64)*(($0 + [144])) == (int_64)CALL $fimport$3()), [1312])
	$8 = *($2)
	CALL eosio_assert(((int_64)*($1 + [8]) == (int_64)*(($2 + [16]))), [1712])
	$9 = ((int_64)*($2 + [8]) + (int_64)*($1))
	*($2 + [8]) = $9
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [1760])
	CALL eosio_assert(((int_64)*($2 + [8]) < (int_64)4611686018427387904), [1792])
	CALL eosio_assert(((int_64)$8 == (int_64)*($2)), [1376])
	*($11 + [24]) = (($11 + [64]) + [116])
	*($11 + [20]) = ($11 + [64])
	*($11 + [16]) = ($11 + [64])
	*($11 + [192]) = ($11 + [16])
	*($11 + [212]) = ($2 + [8])
	*($11 + [208]) = $2
	*($11 + [216]) = ($2 + [24])
	*($11 + [220]) = ($2 + [40])
	*($11 + [224]) = ($2 + [48])
	*($11 + [228]) = ($2 + [56])
	*($11 + [232]) = ($2 + [60])
	*($11 + [236]) = ($2 + [64])
	*($11 + [240]) = ($2 + [72])
	*($11 + [244]) = ($2 + [80])
	*($11 + [248]) = ($2 + [88])
	*($11 + [252]) = ($2 + [104])
	CALL $76(($11 + [208]), ($11 + [192]))
	CALL db_update_i64(*($2 + [124]), (int_64)0, ($11 + [64]), [116])
	$2 = ($0 + [160])
	if ( (uint_64)($8 <= *($2)) ){ goto $label$3 }
	*($2) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$30
	*($11 + [4]) = [0]
	*($11) = ($11 + [64])
	
.LABEL $label$29
	$8 = *($0)
	*($11 + [212]) = $1
	*($11 + [208]) = $0
	*($11 + [216]) = $11
	*($11 + [220]) = ($11 + [60])
	*($11 + [192]) = $8
	CALL eosio_assert(((int_64)*(($0 + [144])) == (int_64)CALL $fimport$3()), [1872])
	*($11 + [16]) = $7
	*($11 + [20]) = ($11 + [208])
	*($11 + [24]) = ($11 + [192])
	$2 = CALL $161([136])
	CALL $72($2)
	*($2 + [120]) = $7
	CALL $98(($11 + [16]), $2)
	*($11 + [264]) = $2
	$8 = *($2)
	*($11 + [16]) = $8
	$10 = *($2 + [124])
	*($11 + [260]) = $10
	$6 = ($0 + [172])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [176]))) ){ goto $label$35 }
	*($7 + [8]) = $8
	*($7 + [16]) = $10
	*($11 + [264]) = [0]
	*($7) = $2
	*($6) = ($7 + [24])
	goto $label$34 
	
.LABEL $label$35
	CALL $74(($0 + [168]), ($11 + [264]), ($11 + [16]), ($11 + [260]))
	
.LABEL $label$34
	$2 = *($11 + [264])
	*($11 + [264]) = [0]
	if ( ($2 == 0) ){ goto $label$36 }
	CALL $162($2)
	
.LABEL $label$36
	$8 = CALL current_time()
	CALL _ZN5sicbo10arenadelayEy($0, (CASTING uint_64)(uint_32 ((*($11 + [60]) + (CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000))) + [900])))
	CALL _ZN5sicbo11arenapnrdlyEv($0)
	$0 = *($11 + [88])
	if ( ($0 == 0) ){ goto $label$3 }
	$10 = ($11 + [92])
	$2 = *($10)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$5 }
	
.LOOP $label$37:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$38 }
	CALL $162($7)
	
.LABEL $label$38
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$37 }
	$2 = *(($11 + [88]))
	goto $label$4 
	
.LABEL $label$28
	*($11 + [68]) = $1
	*($11 + [72]) = $0
	*($11 + [64]) = ($11 + [8])
	*($11 + [76]) = ($11 + [60])
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [1216])
	CALL $99($7, $2, ($11 + [64]))
	*($11 + [64]) = ($11 + [59])
	CALL eosio_assert([1], [1216])
	CALL $100($4, $6, ($11 + [64]))
	CALL _ZN5sicbo10arenadelayEy($0, (CASTING uint_64)(uint_32 (*(*($11 + [12]) + [56]) + [900])))
	CALL _ZN5sicbo11arenapnrdlyEv($0)
	goto $label$3 
	
.LABEL $label$7
	$2 = $0
	
.LABEL $label$6
	*($10) = $0
	CALL $162($2)
	goto $label$3 
	
.LABEL $label$5
	$2 = $0
	
.LABEL $label$4
	*($10) = $0
	CALL $162($2)
	
.LABEL $label$3
	*([0] + [4]) = ($11 + [272])
}

void .FUNC _ZN5sicbo10setdivpoolEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [176])
	*([0] + [4]) = $12
	CALL require_auth($1)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [2240]
	$9 = (int_64)0
	
.LOOP $label$1:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	$6 = [1]
	if ( ((int_64)$9 == (int_64)$1) ){ goto $label$5 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [2256]
	$9 = (int_64)0
	
.LOOP $label$6:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$7 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$3 = ($3 + [165])
	goto $label$8 
	
.LABEL $label$9
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$7
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$6 }
	$6 = ((int_64)$9 == (int_64)$1)
	
.LABEL $label$5
	CALL eosio_assert($6, [2272])
	*(($6 = (($12 + [144]) + [8]))) = *(($2 + [8]))
	$8 = *($2)
	*((($12 + [8]) + [12])) = *((($12 + [144]) + [12]))
	*((($12 + [8]) + [8])) = *($6)
	*($12 + [144]) = $8
	*($12 + [12]) = *($12 + [148])
	*($12 + [8]) = *($12 + [144])
	CALL _ZN5sicbo6moddivEN5eosio5assetE($0, ($12 + [8]))
	*((($12 + [128]) + [8])) = [0]
	*($12 + [128]) = (int_64)0
	$6 = CALL strlen([2288])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$14 }
	*($12 + [128]) = ($6 << [1])
	$3 = (($12 + [128]) | [1])
	if ( $6 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$5 = (($6 + [16]) & [-16])
	$3 = CALL $161($5)
	*($12 + [128]) = ($5 | [1])
	*($12 + [136]) = $3
	*($12 + [132]) = $6
	
.LABEL $label$13
	CALL memcpy($3, [2288], $6)
	
.LABEL $label$12
	*(($3 + $6)) = [0]
	$8 = *($2)
	if ( ((int_64)$8 >= (int_64)0) ){ goto $label$10 }
	*($2) = (int_64))((int_64)0 - $8)
	$8 = *($2 + [8])
	if ( ((int_64)$8 != (int_64)1397703940) ){ goto $label$15 }
	$4 = *($0)
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [1472]
	$9 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$21 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$3 = ($3 + [165])
	goto $label$19 
	
.LABEL $label$21
	$7 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$17
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$16 }
	*($12 + [80]) = $9
	*($12 + [72]) = $4
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [256]
	$9 = (int_64)0
	
.LOOP $label$22:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$27 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$3 = ($3 + [165])
	goto $label$25 
	
.LABEL $label$27
	$7 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$23
	$6 = ($6 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$9 = ((int_64)$7 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$22 }
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [320]
	$11 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$33 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$3 = ($3 + [165])
	goto $label$31 
	
.LABEL $label$33
	$7 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$29
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$11 = ((int_64)$7 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$28 }
	*(($12 + [52])) = *(($2 + [12]))
	*(($12 + [48])) = *(($2 + [8]))
	*(($12 + [44])) = *(($2 + [4]))
	*($12 + [32]) = $1
	*($12 + [24]) = $4
	*($12 + [40]) = *($2)
	CALL $173(($12 + [56]), ($12 + [128]))
	$6 = CALL $103(($12 + [88]), ($12 + [72]), $9, $11, ($12 + [24]))
	CALL $93(($12 + [160]), $6)
	$3 = *($12 + [160])
	CALL send_inline($3, (*($12 + [164]) - $3))
	$3 = *($12 + [160])
	if ( ($3 == 0) ){ goto $label$34 }
	*($12 + [164]) = $3
	CALL $162($3)
	
.LABEL $label$34
	$3 = *($6 + [28])
	if ( ($3 == 0) ){ goto $label$35 }
	*(($6 + [32])) = $3
	CALL $162($3)
	
.LABEL $label$35
	$3 = *($6 + [16])
	if ( ($3 == 0) ){ goto $label$36 }
	*(($6 + [20])) = $3
	CALL $162($3)
	
.LABEL $label$36
	if ( ((*($12 + [56]) & [1]) == 0) ){ goto $label$10 }
	CALL $162(*(($12 + [64])))
	goto $label$10 
	
.LABEL $label$15
	if ( ((int_64)$8 != (int_64)340414906884) ){ goto $label$37 }
	$4 = *($0)
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [1472]
	$9 = (int_64)0
	
.LOOP $label$38:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$43 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$3 = ($3 + [165])
	goto $label$41 
	
.LABEL $label$43
	$7 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$42
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$40
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$39
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$38 }
	*($12 + [80]) = $9
	*($12 + [72]) = $4
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [272]
	$9 = (int_64)0
	
.LOOP $label$44:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$45 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$3 = ($3 + [165])
	goto $label$46 
	
.LABEL $label$47
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$45
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$44 }
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [320]
	$11 = (int_64)0
	
.LOOP $label$48:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$53 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$3 = ($3 + [165])
	goto $label$51 
	
.LABEL $label$53
	$7 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$50
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$49
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$11 = ((int_64)$7 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$48 }
	*(($12 + [52])) = *(($2 + [12]))
	*(($12 + [48])) = *(($2 + [8]))
	*(($12 + [44])) = *(($2 + [4]))
	*($12 + [32]) = $1
	*($12 + [24]) = $4
	*($12 + [40]) = *($2)
	CALL $173(($12 + [56]), ($12 + [128]))
	$6 = CALL $103(($12 + [88]), ($12 + [72]), $9, $11, ($12 + [24]))
	CALL $93(($12 + [160]), $6)
	$3 = *($12 + [160])
	CALL send_inline($3, (*($12 + [164]) - $3))
	$3 = *($12 + [160])
	if ( ($3 == 0) ){ goto $label$54 }
	*($12 + [164]) = $3
	CALL $162($3)
	
.LABEL $label$54
	$3 = *($6 + [28])
	if ( ($3 == 0) ){ goto $label$55 }
	*(($6 + [32])) = $3
	CALL $162($3)
	
.LABEL $label$55
	$3 = *($6 + [16])
	if ( ($3 == 0) ){ goto $label$56 }
	*(($6 + [20])) = $3
	CALL $162($3)
	
.LABEL $label$56
	if ( ((*($12 + [56]) & [1]) == 0) ){ goto $label$10 }
	CALL $162(*(($12 + [64])))
	goto $label$10 
	
.LABEL $label$37
	if ( ((int_64)$8 != (int_64)297481618436) ){ goto $label$57 }
	$4 = *($0)
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [1472]
	$9 = (int_64)0
	
.LOOP $label$58:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$63 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$62 }
	$3 = ($3 + [165])
	goto $label$61 
	
.LABEL $label$63
	$7 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$62
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$61
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$60
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$59
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$58 }
	*($12 + [80]) = $9
	*($12 + [72]) = $4
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [288]
	$9 = (int_64)0
	
.LOOP $label$64:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$65 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$67 }
	$3 = ($3 + [165])
	goto $label$66 
	
.LABEL $label$67
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$66
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$65
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$64 }
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [320]
	$11 = (int_64)0
	
.LOOP $label$68:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$73 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$72 }
	$3 = ($3 + [165])
	goto $label$71 
	
.LABEL $label$73
	$7 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$72
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$71
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$70
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$69
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$11 = ((int_64)$7 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$68 }
	*(($12 + [52])) = *(($2 + [12]))
	*(($12 + [48])) = *(($2 + [8]))
	*(($12 + [44])) = *(($2 + [4]))
	*($12 + [32]) = $1
	*($12 + [24]) = $4
	*($12 + [40]) = *($2)
	CALL $173(($12 + [56]), ($12 + [128]))
	$6 = CALL $103(($12 + [88]), ($12 + [72]), $9, $11, ($12 + [24]))
	CALL $93(($12 + [160]), $6)
	$3 = *($12 + [160])
	CALL send_inline($3, (*($12 + [164]) - $3))
	$3 = *($12 + [160])
	if ( ($3 == 0) ){ goto $label$74 }
	*($12 + [164]) = $3
	CALL $162($3)
	
.LABEL $label$74
	$3 = *($6 + [28])
	if ( ($3 == 0) ){ goto $label$75 }
	*(($6 + [32])) = $3
	CALL $162($3)
	
.LABEL $label$75
	$3 = *($6 + [16])
	if ( ($3 == 0) ){ goto $label$76 }
	*(($6 + [20])) = $3
	CALL $162($3)
	
.LABEL $label$76
	if ( ((*($12 + [56]) & [1]) == 0) ){ goto $label$10 }
	CALL $162(*(($12 + [64])))
	goto $label$10 
	
.LABEL $label$57
	if ( ((int_64)$8 != (int_64)293455873288) ){ goto $label$77 }
	$4 = *($0)
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [1472]
	$9 = (int_64)0
	
.LOOP $label$78:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$83 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$82 }
	$3 = ($3 + [165])
	goto $label$81 
	
.LABEL $label$83
	$7 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$82
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$81
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$80
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$79
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$78 }
	*($12 + [80]) = $9
	*($12 + [72]) = $4
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [304]
	$9 = (int_64)0
	
.LOOP $label$84:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$85 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$87 }
	$3 = ($3 + [165])
	goto $label$86 
	
.LABEL $label$87
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$86
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$85
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$84 }
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [320]
	$11 = (int_64)0
	
.LOOP $label$88:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$93 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$92 }
	$3 = ($3 + [165])
	goto $label$91 
	
.LABEL $label$93
	$7 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$92
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$91
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$90
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$89
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$11 = ((int_64)$7 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$88 }
	*(($12 + [52])) = *(($2 + [12]))
	*(($12 + [48])) = *(($2 + [8]))
	*(($12 + [44])) = *(($2 + [4]))
	*($12 + [32]) = $1
	*($12 + [24]) = $4
	*($12 + [40]) = *($2)
	CALL $173(($12 + [56]), ($12 + [128]))
	$6 = CALL $103(($12 + [88]), ($12 + [72]), $9, $11, ($12 + [24]))
	CALL $93(($12 + [160]), $6)
	$3 = *($12 + [160])
	CALL send_inline($3, (*($12 + [164]) - $3))
	$3 = *($12 + [160])
	if ( ($3 == 0) ){ goto $label$94 }
	*($12 + [164]) = $3
	CALL $162($3)
	
.LABEL $label$94
	$3 = *($6 + [28])
	if ( ($3 == 0) ){ goto $label$95 }
	*(($6 + [32])) = $3
	CALL $162($3)
	
.LABEL $label$95
	$3 = *($6 + [16])
	if ( ($3 == 0) ){ goto $label$96 }
	*(($6 + [20])) = $3
	CALL $162($3)
	
.LABEL $label$96
	if ( ((*($12 + [56]) & [1]) == 0) ){ goto $label$10 }
	CALL $162(*(($12 + [64])))
	goto $label$10 
	
.LABEL $label$77
	CALL eosio_assert([0], [2304])
	goto $label$10 
	
.LABEL $label$11
	CALL $163(($12 + [128]))
	
.LABEL $label$10
	if ( ((*($12 + [128]) & [1]) == 0) ){ goto $label$97 }
	CALL $162(*($12 + [136]))
	
.LABEL $label$97
	*([0] + [4]) = ($12 + [176])
	(unreachable)
}

void .FUNC _ZN5sicbo9stoparenaEhh (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [192])
	*([0] + [4]) = $12
	CALL require_auth(*($0))
	$8 = *(($0 + [128]))
	$10 = *(($0 + [132]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$1 }
	$9 = ($10 + [-24])
	$11 = ([0] - $8)
	
.LOOP $label$2:
	if ( (int_64)(*(*($9)) == 0) ){ goto $label$1 }
	$10 = $9
	$4 = ($9 + [-24])
	$9 = $4
	if ( ((int_32)($4 + $11) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [104])
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$4 }
	$11 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [72]) == (int_32)$3), [1136])
	goto $label$3 
	
.LABEL $label$4
	$11 = [0]
	$9 = CALL db_find_i64(*(($0 + [104])), *(($0 + [112])), (int_64)3879062980018000896, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$3 }
	$11 = CALL $58($3, $9)
	CALL eosio_assert(((int_32)*($11 + [72]) == (int_32)$3), [1136])
	
.LABEL $label$3
	$5 = ((int_32)$11 != (int_32)[0])
	CALL eosio_assert($5, [1200])
	$6 = *($11 + [8])
	$7 = *(($0 + [168]))
	$10 = *(($0 + [172]))
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$5 }
	$9 = ($10 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$6:
	if ( ((int_64)*(*($9)) == (int_64)$6) ){ goto $label$5 }
	$10 = $9
	$4 = ($9 + [-24])
	$9 = $4
	if ( ((int_32)($4 + $8) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$4 = ($0 + [144])
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$8 }
	$9 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [120]) == (int_32)$4), [1136])
	goto $label$7 
	
.LABEL $label$8
	$9 = [0]
	$10 = CALL db_find_i64(*(($0 + [144])), *(($0 + [152])), (int_64)3879063041846280192, $6)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$7 }
	$9 = CALL $71($4, $10)
	CALL eosio_assert(((int_32)*($9 + [120]) == (int_32)$4), [1136])
	
.LABEL $label$7
	$10 = ((int_32)$9 != (int_32)[0])
	CALL eosio_assert($10, [2192])
	if ( ($2 == 0) ){ goto $label$10 }
	if ( (int_64)(*($11 + [16]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert($5, [1216])
	CALL eosio_assert(((int_32)*($11 + [72]) == (int_32)$3), [1264])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$3()), [1312])
	*($11 + [16]) = (int_64)0
	*($11 + [32]) = (CASTING uint_64)(uint_32 ((int_32)$2 != (int_32)[0]))
	$6 = *($11)
	CALL eosio_assert([1], [1376])
	*($12 + [128]) = ($12 + [72])
	*($12 + [124]) = $12
	*($12 + [120]) = $12
	*($12 + [136]) = ($12 + [120])
	*($12 + [148]) = ($11 + [8])
	*($12 + [144]) = $11
	*($12 + [152]) = ($11 + [16])
	*($12 + [156]) = ($11 + [24])
	*($12 + [160]) = ($11 + [32])
	*($12 + [164]) = ($11 + [40])
	*($12 + [168]) = ($11 + [48])
	*($12 + [172]) = ($11 + [56])
	*($12 + [176]) = ($11 + [64])
	CALL $59(($12 + [144]), ($12 + [136]))
	CALL db_update_i64(*($11 + [76]), (int_64)0, $12, [72])
	$11 = ($0 + [120])
	if ( (uint_64)($6 <= *($11)) ){ goto $label$11 }
	*($11) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	CALL eosio_assert($10, [1216])
	CALL eosio_assert(((int_32)*($9 + [120]) == (int_32)$4), [1264])
	CALL eosio_assert(((int_64)*(($0 + [144])) == (int_64)CALL $fimport$3()), [1312])
	$6 = *($9)
	*($9 + [60]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$6 == (int_64)*($9)), [1376])
	*($12 + [128]) = ($12 + [116])
	*($12 + [124]) = $12
	*($12 + [120]) = $12
	*($12 + [136]) = ($12 + [120])
	*($12 + [148]) = ($9 + [8])
	*($12 + [144]) = $9
	*($12 + [152]) = ($9 + [24])
	*($12 + [156]) = ($9 + [40])
	*($12 + [160]) = ($9 + [48])
	*($12 + [164]) = ($9 + [56])
	*($12 + [168]) = ($9 + [60])
	*($12 + [172]) = ($9 + [64])
	*($12 + [176]) = ($9 + [72])
	*($12 + [180]) = ($9 + [80])
	*($12 + [184]) = ($9 + [88])
	*($12 + [188]) = ($9 + [104])
	CALL $76(($12 + [144]), ($12 + [136]))
	CALL db_update_i64(*($9 + [124]), (int_64)0, $12, [116])
	$9 = ($0 + [160])
	if ( (uint_64)($6 <= *($9)) ){ goto $label$9 }
	*($9) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($12 + [192])
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [96])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = [0]
	$4 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($6 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $3)
	
.LABEL $label$1
	*($8 + [32]) = (int_64)1398362884
	*($8 + [24]) = (int_64)0
	CALL eosio_assert([1], [896])
	$5 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$6 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$6 = [0]
	
.LABEL $label$4
	CALL eosio_assert($6, [960])
	*($8 + [44]) = [0]
	*($8 + [40]) = [0]
	*($8 + [84]) = $4
	*($8 + [80]) = $4
	*($8 + [88]) = ($4 + $3)
	*($8 + [48]) = ($8 + [80])
	*($8 + [64]) = ($8 + [24])
	CALL $97(($8 + [64]), ($8 + [48]))
	if ( ($3 <= [513]) ){ goto $label$9 }
	CALL free($4)
	
.LABEL $label$9
	*(($1 = (($8 + [48]) + [8]))) = *((($8 + [24]) + [8]))
	*($8 + [48]) = *($8 + [24])
	$4 = *(($8 + [44]))
	$6 = *(($8 + [40]))
	*((($8 + [64]) + [8])) = *($1)
	*($8 + [64]) = *($8 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$10 }
	$7 = *((*($1) + $7))
	
.LABEL $label$10
	$5 = *((($8 + [64]) + [8]))
	*((($8 + [80]) + [8])) = $5
	*((($8 + [8]) + [8])) = $5
	$5 = *($8 + [64])
	*($8 + [80]) = $5
	*($8 + [8]) = $5
	CALL void $1((int_32 ($8 + [8])), (int_32 $6), (int_32 ($4 & [255])), (int_32 $7))
	*([0] + [4]) = ($8 + [96])
	return [1]
}

int_32 .FUNC $101 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [124]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1072])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)3879063041846280192)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1008])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1008])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $71(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $100 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = (*([0] + [4]) - [64])
	$7 = $6
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1264])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1312])
	*($1 + [16]) = (int_64)1
	$5 = ($1 + [32])
	$4 = ($1 + [16])
	$3 = *($1)
	if ( (*(*($2)) == 0) ){ goto $label$1 }
	*($5) = (int_64)0
	
.LABEL $label$1
	CALL eosio_assert([1], [1376])
	$2 = $6
	$6 = ($2 + [-80])
	*([0] + [4]) = $6
	*($7 + [4]) = $6
	*($7) = $6
	*($7 + [8]) = ($2 + [-8])
	*($7 + [16]) = $7
	*($7 + [32]) = $4
	*($7 + [40]) = $5
	*($7 + [24]) = $1
	*($7 + [28]) = ($1 + [8])
	*($7 + [36]) = ($1 + [24])
	*($7 + [44]) = ($1 + [40])
	*($7 + [48]) = ($1 + [48])
	*($7 + [52]) = ($1 + [56])
	*($7 + [56]) = ($1 + [64])
	CALL $59(($7 + [24]), ($7 + [16]))
	CALL db_update_i64(*($1 + [76]), (int_64)0, $6, [72])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$2 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [64])
}

int_32 .FUNC $103 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $161([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $54($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $104(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

void .FUNC _ZN5sicbo6moddivEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	$3 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	*($7 + [48]) = $3)
	*(($4 = ($7 + [40]))) = [0]
	*($7 + [16]) = $3
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($0)
	*($7 + [8]) = $5
	$2 = CALL db_find_i64($5, $3, (int_64)5455799419163115520, $3)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $75(($7 + [8]), $2)
	CALL eosio_assert(((int_32)*($2 + [64]) == (int_32)($7 + [8])), [1136])
	*($7 + [68]) = $0
	*($7 + [64]) = $1
	*($7 + [72]) = ($7 + [48])
	CALL eosio_assert([1], [1216])
	CALL $105(($7 + [8]), $2, ($7 + [64]))
	$2 = *($7 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$3 = *($0)
	*($7) = $1
	*($7 + [88]) = $3
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$3()), [1872])
	*($7 + [68]) = $7
	*($7 + [64]) = ($7 + [8])
	*($7 + [72]) = ($7 + [88])
	$0 = CALL $161([80])
	CALL $78($0)
	*($0 + [64]) = ($7 + [8])
	CALL $106(($7 + [64]), $0)
	*($7 + [80]) = $0
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8
	*($7 + [64]) = $3)
	$2 = *($0 + [68])
	*($7 + [60]) = $2
	$6 = ($7 + [36])
	$1 = *($6)
	if ( ((uint_32)$1 >= (uint_32)*($4)) ){ goto $label$5 }
	*($1 + [8]) = $3
	*($1 + [16]) = $2
	*($7 + [80]) = [0]
	*($1) = $0
	*($6) = ($1 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $80(($7 + [32]), ($7 + [80]), ($7 + [64]), ($7 + [60]))
	
.LABEL $label$4
	$0 = *($7 + [80])
	*($7 + [80]) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL $162($0)
	
.LABEL $label$6
	$2 = *($7 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = ($7 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $162($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$9 }
	$0 = *(($7 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$0 = $2
	
.LABEL $label$7
	*($4) = $2
	CALL $162($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [96])
}

void .FUNC $105 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [176])
	$13 = $14
	*([0] + [4]) = $14
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [1264])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1312])
	$3 = *($2 + [4])
	$7 = *($1 + [8])
	$8 = *($2)
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)$7), [1712])
	$9 = ((int_64)*($1) + (int_64)*($8))
	*($1) = $9
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [1760])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1792])
	CALL eosio_assert([1], [896])
	$4 = (uint_64)$7 >> (uint_64)(int_64)8)
	$7 = (int_64)5462355
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [960])
	$7 = *(($1 + [8]))
	$9 = *($1)
	if ( ((int_64)$9 < (int_64)1) ){ goto $label$7 }
	$9 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $9) * (float_64)(float_64)0.5))
	goto $label$6 
	
.LABEL $label$7
	$9 = (int_64)0
	
.LABEL $label$6
	*($1 + [16]) = $9
	*(($1 + [24])) = $7
	$8 = *($2 + [8])
	$7 = *($8)
	$9 = *($3)
	*($13 + [72]) = $9
	*($13 + [80]) = $7
	*($13 + [88]) = (int_64)-1
	$5 = [0]
	*($13 + [96]) = [0]
	*(($13 + [100])) = [0]
	*(($13 + [104])) = [0]
	$8 = CALL db_find_i64($9, $7, (int_64)-5918304704032407552, *($8))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$8 }
	$5 = CALL $108(($13 + [72]), $8)
	CALL eosio_assert(((int_32)*($5 + [40]) == (int_32)($13 + [72])), [1136])
	
.LABEL $label$8
	$9 = ( (int_64)2000000 ? (int_64)2000000000 : ((int_64)*(*($2) + [8]) == (int_64)1397703940) )
	$7 = *($1)
	if ( ($5 == 0) ){ goto $label$20 }
	$7 = (int_64)
	if ( ((int_64)$7($7 - *($5))) < (int_64)1) ){ goto $label$13 }
	if ( ((uint_64)$7 <= (uint_64)$9) ){ goto $label$13 }
	$7 = (int_64)0
	$9 = (int_64)59
	$8 = [2352]
	$10 = (int_64)0
	
.LOOP $label$21:
	$11 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$22 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$6 = ($6 + [165])
	goto $label$23 
	
.LABEL $label$24
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$22
	$8 = ($8 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$21 }
	$7 = *(($1 + [8]))
	*((($13 + [56]) + [8])) = $7
	*($13 + [56]) = *($1)
	CALL eosio_assert(((int_64)$7 == (int_64)*($5 + [8])), [1600])
	$7 = (int_64)
	*($13 + [56]) = $7(*($13 + [56]) - *($5)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1648])
	CALL eosio_assert(((int_64)$7 < (int_64)4611686018427387904), [1680])
	*((($13 + [112]) + [8])) = [0]
	*($13 + [112]) = (int_64)0
	$8 = CALL strlen([2288])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$19 }
	*($13 + [112]) = ($8 << [1])
	$6 = (($13 + [112]) | [1])
	if ( $8 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	if ( ((uint_64)$7 <= (uint_64)$9) ){ goto $label$13 }
	$7 = (int_64)0
	$9 = (int_64)59
	$8 = [2352]
	$10 = (int_64)0
	
.LOOP $label$25:
	$11 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$26 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$6 = ($6 + [165])
	goto $label$27 
	
.LABEL $label$28
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$26
	$8 = ($8 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$25 }
	*((($13 + [40]) + [8])) = *(($1 + [8]))
	*($13 + [40]) = *($1)
	*((($13 + [112]) + [8])) = [0]
	*($13 + [112]) = (int_64)0
	$8 = CALL strlen([2288])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$16 }
	*($13 + [112]) = ($8 << [1])
	$6 = (($13 + [112]) | [1])
	if ( $8 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$19
	$2 = (($8 + [16]) & [-16])
	$6 = CALL $161($2)
	*($13 + [112]) = ($2 | [1])
	*($13 + [120]) = $6
	*($13 + [116]) = $8
	
.LABEL $label$18
	CALL memcpy($6, [2288], $8)
	
.LABEL $label$17
	*(($6 + $8)) = [0]
	$7 = (int_64)0
	$9 = (int_64)59
	$8 = [2352]
	$12 = (int_64)0
	
.LOOP $label$29:
	$11 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$30 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$6 = ($6 + [165])
	goto $label$31 
	
.LABEL $label$32
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$30
	$8 = ($8 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$29 }
	$7 = CALL current_time()
	*((($13 + [24]) + [8])) = *((($13 + [56]) + [8]))
	*($13 + [24]) = *($13 + [56])
	CALL _ZN5sicbo11transfer_toEyN5eosio5assetERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEo($3, $10, ($13 + [24]), ($13 + [112]), ((int_64)((int_64)((uint_64)$7 / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$12), (int_64)0)
	if ( ((*($13 + [112]) & [1]) == 0) ){ goto $label$33 }
	CALL $162(*($13 + [120]))
	
.LABEL $label$33
	CALL eosio_assert([1], [1216])
	CALL eosio_assert(((int_32)*(($5 + [40])) == (int_32)($13 + [72])), [1264])
	CALL eosio_assert(((int_64)*($13 + [72]) == (int_64)CALL $fimport$3()), [1312])
	$8 = ($5 + [8])
	$7 = *($8)
	*($8) = *(($1 + [8]))
	*($5) = *($1)
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$7) == (int_64)(uint_64)*($8) >> (uint_64)(int_64)8)), [1376])
	*($13 + [48]) = (($13 + [112]) + [40])
	*($13 + [44]) = ($13 + [112])
	*($13 + [40]) = ($13 + [112])
	*($13 + [152]) = ($13 + [40])
	*($13 + [164]) = ($5 + [16])
	*($13 + [160]) = $5
	*($13 + [168]) = ($5 + [24])
	*($13 + [172]) = ($5 + [32])
	CALL $110(($13 + [160]), ($13 + [152]))
	CALL db_update_i64(*(($5 + [44])), (int_64)0, ($13 + [112]), [40])
	$8 = (($13 + [72]) + [16])
	if ( (uint_64)($7 <= *($8)) ){ goto $label$13 }
	*($8) = ((int_64)$7 + (int_64)1)
	$5 = *($13 + [96])
	if ( $5 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$16
	$5 = (($8 + [16]) & [-16])
	$6 = CALL $161($5)
	*($13 + [112]) = ($5 | [1])
	*($13 + [120]) = $6
	*($13 + [116]) = $8
	
.LABEL $label$15
	CALL memcpy($6, [2288], $8)
	
.LABEL $label$14
	*(($6 + $8)) = [0]
	$7 = (int_64)0
	$9 = (int_64)59
	$8 = [2352]
	$12 = (int_64)0
	
.LOOP $label$34:
	$11 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$35 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$6 = ($6 + [165])
	goto $label$36 
	
.LABEL $label$37
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$35
	$8 = ($8 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$34 }
	$7 = CALL current_time()
	*((($13 + [8]) + [8])) = *((($13 + [40]) + [8]))
	*($13 + [8]) = *($13 + [40])
	CALL _ZN5sicbo11transfer_toEyN5eosio5assetERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEo($3, $10, ($13 + [8]), ($13 + [112]), ((int_64)((int_64)((uint_64)$7 / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$12), (int_64)0)
	if ( ((*($13 + [112]) & [1]) == 0) ){ goto $label$38 }
	CALL $162(*($13 + [120]))
	
.LABEL $label$38
	$9 = *($3)
	CALL eosio_assert(((int_64)*($13 + [72]) == (int_64)CALL $fimport$3()), [1872])
	*(($6 = CALL $161([56])) + [8]) = (int_64)1398362884
	*($6) = (int_64)0
	CALL eosio_assert([1], [896])
	$7 = (int_64)5462355
	$8 = [0]
	
.LOOP $label$41:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$40 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$42 }
	
.LOOP $label$43:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$40 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$43 }
	
.LABEL $label$42
	$5 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$40
	$5 = [0]
	
.LABEL $label$39
	CALL eosio_assert($5, [960])
	*($6 + [40]) = ($13 + [72])
	*(($8 = ($6 + [8]))) = *(($1 + [8]))
	*($6) = *($1)
	*($13 + [64]) = (($13 + [112]) + [40])
	*($13 + [60]) = ($13 + [112])
	*($13 + [56]) = ($13 + [112])
	*($13 + [152]) = ($13 + [56])
	*($13 + [164]) = ($6 + [16])
	*($13 + [160]) = $6
	*($13 + [168]) = ($6 + [24])
	*($13 + [172]) = ($6 + [32])
	CALL $110(($13 + [160]), ($13 + [152]))
	$7 = (uint_64)*($8) >> (uint_64)(int_64)8
	$5 = CALL db_store_i64(*((($13 + [72]) + [8])), (int_64)-5918304704032407552, $9, $7), ($13 + [112]), [40]
	*($6 + [44]) = $5)
	$2 = (($13 + [72]) + [16])
	if ( (uint_64)($7 <= *($2)) ){ goto $label$44 }
	*($2) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$44
	*($13 + [160]) = $6
	$7 = (uint_64)*($8) >> (uint_64)(int_64)8
	*($13 + [112]) = $7)
	*($13 + [56]) = $5
	$2 = ($13 + [100])
	$8 = *($2)
	if ( ((uint_32)$8 >= (uint_32)*((($13 + [72]) + [32]))) ){ goto $label$46 }
	*($8 + [8]) = $7
	*($8 + [16]) = $5
	*($13 + [160]) = [0]
	*($8) = $6
	*($2) = ($8 + [24])
	goto $label$45 
	
.LABEL $label$46
	CALL $111(($13 + [96]), ($13 + [160]), ($13 + [112]), ($13 + [56]))
	
.LABEL $label$45
	$8 = *($13 + [160])
	*($13 + [160]) = [0]
	if ( ($8 == 0) ){ goto $label$13 }
	CALL $162($8)
	
.LABEL $label$13
	$5 = *($13 + [96])
	if ( ($5 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$2 = ($13 + [100])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$48 }
	
.LOOP $label$49:
	$8 = ($8 + [-24])
	$6 = *($8)
	*($8) = [0]
	if ( ($6 == 0) ){ goto $label$50 }
	CALL $162($6)
	
.LABEL $label$50
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$49 }
	$8 = *(($13 + [96]))
	goto $label$47 
	
.LABEL $label$48
	$8 = $5
	
.LABEL $label$47
	*($2) = $5
	CALL $162($8)
	
.LABEL $label$11
	CALL eosio_assert(((int_64)$4 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)), [1376])
	$6 = $14
	$8 = ($6 + [-64])
	*([0] + [4]) = $8
	*($13 + [76]) = $8
	*($13 + [72]) = $8
	*($13 + [80]) = $6
	*($13 + [160]) = ($13 + [72])
	*($13 + [116]) = ($1 + [16])
	*($13 + [112]) = $1
	*($13 + [120]) = ($1 + [32])
	*($13 + [124]) = ($1 + [48])
	CALL $107(($13 + [112]), ($13 + [160]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $8, [64])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$51 }
	*(($0 + [16])) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$51
	*([0] + [4]) = ($13 + [176])
	return (unreachable)
	
.LABEL $label$10
	CALL $163(($13 + [112]))
	
.LABEL $label$9
	CALL $163(($13 + [112]))
	(unreachable)
}

void .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1440])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $96(*($1), ($0 + [32]))
}

void .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), $0, [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((int_32)(*($2 + [8]) - $1) > (int_32)[7]), [1440])
	CALL memcpy(*($2 + [4]), ($0 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0)
	$3 = *($0 + [4])
	$5 = *($3)
	*($1) = *($5)
	*(($1 + [8])) = *(($5 + [8]))
	CALL eosio_assert([1], [896])
	$4 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [960])
	$4 = *($1 + [8])
	$7 = *($1)
	if ( ((int_64)$7 < (int_64)1) ){ goto $label$7 }
	$7 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $7) * (float_64)(float_64)0.5))
	goto $label$6 
	
.LABEL $label$7
	$7 = (int_64)0
	
.LABEL $label$6
	*($1 + [16]) = $7
	*(($1 + [24])) = $4
	*(($1 + [40])) = *(*($3) + [8])
	*(($1 + [56])) = *(*($3) + [8])
	$6 = $9
	$5 = ($6 + [-64])
	*([0] + [4]) = $5
	*($8 + [12]) = $5
	*($8 + [8]) = $5
	*($8 + [16]) = $6
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($1 + [16])
	*($8 + [32]) = $1
	*($8 + [40]) = ($1 + [32])
	*($8 + [44]) = ($1 + [48])
	CALL $107(($8 + [32]), ($8 + [24]))
	$4 = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8
	*($1 + [68]) = CALL db_store_i64(*($2 + [8]), (int_64)5455799419163115520, *(*($0 + [8])), $4), $5, [64])
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$8 }
	*(($2 + [16])) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$8
	*([0] + [4]) = ($8 + [48])
}

void .FUNC _ZN5sicbo11transfer_toEyN5eosio5assetERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEo (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4, int_64 $5)
{
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [160])
	*([0] + [4]) = $12
	*($12 + [152]) = $5
	*($12 + [144]) = $4
	$4 = *($2 + [8])
	if ( ((int_64)$4 != (int_64)1397703940) ){ goto $label$2 }
	$4 = CALL current_time()
	*(($12 + [108])) = [0]
	*(($12 + [112])) = [0]
	*($12 + [92]) = [0]
	*($12 + [96]) = [0]
	*($12 + [100]) = [0]
	*($12 + [104]) = [0]
	*($12 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [116]) = [0]
	*(($12 + [120])) = [0]
	*(($12 + [124])) = [0]
	*($12 + [128]) = [0]
	*(($12 + [132])) = [0]
	*(($12 + [136])) = [0]
	$7 = ($12 + [116])
	$6 = *($0)
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [1472]
	$11 = (int_64)0
	
.LOOP $label$3:
	if ( ((uint_64)$4 > (uint_64)(int_64)5) ){ goto $label$8 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$8 = ($8 + [165])
	goto $label$6 
	
.LABEL $label$8
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$4
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$3 }
	*($12 + [72]) = $11
	*($12 + [64]) = $6
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [256]
	$11 = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_64)$4 > (uint_64)(int_64)10) ){ goto $label$14 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$8 = ($8 + [165])
	goto $label$12 
	
.LABEL $label$14
	$5 = (int_64)0
	if ( ((int_64)$4 == (int_64)11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$10
	$9 = ($9 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$11 = ((int_64)$5 | (int_64)$11)
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$9 }
	*($12 + [56]) = $11
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [320]
	$11 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$20 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$8 = ($8 + [165])
	goto $label$18 
	
.LABEL $label$20
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$16
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$15 }
	*($12 + [48]) = $11
	*(($12 + [28])) = *(($2 + [12]))
	*(($12 + [24])) = *(($2 + [8]))
	*(($12 + [20])) = *(($2 + [4]))
	*($12 + [8]) = $1
	*($12) = $6
	*($12 + [16]) = *($2)
	CALL $173(($12 + [32]), $3)
	CALL $112($7, ($12 + [64]), ($12 + [56]), ($12 + [48]), $12)
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$21 }
	CALL $162(*(($12 + [40])))
	
.LABEL $label$21
	*((($12 + [80]) + [20])) = [0]
	$4 = *($0)
	CALL $63($12, ($12 + [80]))
	$9 = *($12)
	CALL send_deferred(($12 + [144]), $4, $9, (*($12 + [4]) - $9), [0])
	$9 = *($12)
	if ( ($9 == 0) ){ goto $label$22 }
	*($12 + [4]) = $9
	CALL $162($9)
	
.LABEL $label$22
	CALL $64(($12 + [80]))
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_64)$4 != (int_64)340414906884) ){ goto $label$23 }
	$4 = CALL current_time()
	*(($12 + [108])) = [0]
	*(($12 + [112])) = [0]
	*($12 + [92]) = [0]
	*($12 + [96]) = [0]
	*($12 + [100]) = [0]
	*($12 + [104]) = [0]
	*($12 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [116]) = [0]
	*(($12 + [120])) = [0]
	*(($12 + [124])) = [0]
	*($12 + [128]) = [0]
	*(($12 + [132])) = [0]
	*(($12 + [136])) = [0]
	$7 = ($12 + [116])
	$6 = *($0)
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [1472]
	$11 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$4 > (uint_64)(int_64)5) ){ goto $label$29 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$8 = ($8 + [165])
	goto $label$27 
	
.LABEL $label$29
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$25
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$24 }
	*($12 + [72]) = $11
	*($12 + [64]) = $6
	$4 = (int_64)0
	$5 = (int_64)59
	$9 = [272]
	$11 = (int_64)0
	
.LOOP $label$30:
	$10 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$31 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$8 = ($8 + [165])
	goto $label$32 
	
.LABEL $label$33
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$31
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$30 }
	*($12 + [56]) = $11
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [320]
	$11 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$39 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$8 = ($8 + [165])
	goto $label$37 
	
.LABEL $label$39
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$35
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$34 }
	*($12 + [48]) = $11
	*(($12 + [28])) = *(($2 + [12]))
	*(($12 + [24])) = *(($2 + [8]))
	*(($12 + [20])) = *(($2 + [4]))
	*($12 + [8]) = $1
	*($12) = $6
	*($12 + [16]) = *($2)
	CALL $173(($12 + [32]), $3)
	CALL $112($7, ($12 + [64]), ($12 + [56]), ($12 + [48]), $12)
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$40 }
	CALL $162(*(($12 + [40])))
	
.LABEL $label$40
	*((($12 + [80]) + [20])) = [0]
	$4 = *($0)
	CALL $63($12, ($12 + [80]))
	$9 = *($12)
	CALL send_deferred(($12 + [144]), $4, $9, (*($12 + [4]) - $9), [0])
	$9 = *($12)
	if ( ($9 == 0) ){ goto $label$41 }
	*($12 + [4]) = $9
	CALL $162($9)
	
.LABEL $label$41
	CALL $64(($12 + [80]))
	goto $label$1 
	
.LABEL $label$23
	if ( ((int_64)$4 != (int_64)297481618436) ){ goto $label$42 }
	$4 = CALL current_time()
	*(($12 + [108])) = [0]
	*(($12 + [112])) = [0]
	*($12 + [92]) = [0]
	*($12 + [96]) = [0]
	*($12 + [100]) = [0]
	*($12 + [104]) = [0]
	*($12 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [116]) = [0]
	*(($12 + [120])) = [0]
	*(($12 + [124])) = [0]
	*($12 + [128]) = [0]
	*(($12 + [132])) = [0]
	*(($12 + [136])) = [0]
	$7 = ($12 + [116])
	$6 = *($0)
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [1472]
	$11 = (int_64)0
	
.LOOP $label$43:
	if ( ((uint_64)$4 > (uint_64)(int_64)5) ){ goto $label$48 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$8 = ($8 + [165])
	goto $label$46 
	
.LABEL $label$48
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$47
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$45
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$44
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$43 }
	*($12 + [72]) = $11
	*($12 + [64]) = $6
	$4 = (int_64)0
	$5 = (int_64)59
	$9 = [288]
	$11 = (int_64)0
	
.LOOP $label$49:
	$10 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$50 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$8 = ($8 + [165])
	goto $label$51 
	
.LABEL $label$52
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$50
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$49 }
	*($12 + [56]) = $11
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [320]
	$11 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$58 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$8 = ($8 + [165])
	goto $label$56 
	
.LABEL $label$58
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$54
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$53 }
	*($12 + [48]) = $11
	*(($12 + [28])) = *(($2 + [12]))
	*(($12 + [24])) = *(($2 + [8]))
	*(($12 + [20])) = *(($2 + [4]))
	*($12 + [8]) = $1
	*($12) = $6
	*($12 + [16]) = *($2)
	CALL $173(($12 + [32]), $3)
	CALL $112($7, ($12 + [64]), ($12 + [56]), ($12 + [48]), $12)
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$59 }
	CALL $162(*(($12 + [40])))
	
.LABEL $label$59
	*((($12 + [80]) + [20])) = [0]
	$4 = *($0)
	CALL $63($12, ($12 + [80]))
	$9 = *($12)
	CALL send_deferred(($12 + [144]), $4, $9, (*($12 + [4]) - $9), [0])
	$9 = *($12)
	if ( ($9 == 0) ){ goto $label$60 }
	*($12 + [4]) = $9
	CALL $162($9)
	
.LABEL $label$60
	CALL $64(($12 + [80]))
	goto $label$1 
	
.LABEL $label$42
	if ( ((int_64)$4 != (int_64)293455873288) ){ goto $label$61 }
	$4 = CALL current_time()
	*(($12 + [108])) = [0]
	*(($12 + [112])) = [0]
	*($12 + [92]) = [0]
	*($12 + [96]) = [0]
	*($12 + [100]) = [0]
	*($12 + [104]) = [0]
	*($12 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [116]) = [0]
	*(($12 + [120])) = [0]
	*(($12 + [124])) = [0]
	*($12 + [128]) = [0]
	*(($12 + [132])) = [0]
	*(($12 + [136])) = [0]
	$7 = ($12 + [116])
	$6 = *($0)
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [1472]
	$11 = (int_64)0
	
.LOOP $label$62:
	if ( ((uint_64)$4 > (uint_64)(int_64)5) ){ goto $label$67 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$66 }
	$8 = ($8 + [165])
	goto $label$65 
	
.LABEL $label$67
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$64 }
	goto $label$63 
	
.LABEL $label$66
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$65
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$64
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$63
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$62 }
	*($12 + [72]) = $11
	*($12 + [64]) = $6
	$4 = (int_64)0
	$5 = (int_64)59
	$9 = [304]
	$11 = (int_64)0
	
.LOOP $label$68:
	$10 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$69 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$71 }
	$8 = ($8 + [165])
	goto $label$70 
	
.LABEL $label$71
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$70
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$69
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$68 }
	*($12 + [56]) = $11
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [320]
	$11 = (int_64)0
	
.LOOP $label$72:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$77 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$76 }
	$8 = ($8 + [165])
	goto $label$75 
	
.LABEL $label$77
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$74 }
	goto $label$73 
	
.LABEL $label$76
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$75
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$74
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$73
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$72 }
	*($12 + [48]) = $11
	*(($12 + [28])) = *(($2 + [12]))
	*(($12 + [24])) = *(($2 + [8]))
	*(($12 + [20])) = *(($2 + [4]))
	*($12 + [8]) = $1
	*($12) = $6
	*($12 + [16]) = *($2)
	CALL $173(($12 + [32]), $3)
	CALL $112($7, ($12 + [64]), ($12 + [56]), ($12 + [48]), $12)
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$78 }
	CALL $162(*(($12 + [40])))
	
.LABEL $label$78
	*((($12 + [80]) + [20])) = [0]
	$4 = *($0)
	CALL $63($12, ($12 + [80]))
	$9 = *($12)
	CALL send_deferred(($12 + [144]), $4, $9, (*($12 + [4]) - $9), [0])
	$9 = *($12)
	if ( ($9 == 0) ){ goto $label$79 }
	*($12 + [4]) = $9
	CALL $162($9)
	
.LABEL $label$79
	CALL $64(($12 + [80]))
	goto $label$1 
	
.LABEL $label$61
	CALL eosio_assert([0], [2304])
	
.LABEL $label$1
	*([0] + [4]) = ($12 + [160])
}

int_32 .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [864])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $161([56])) + [8]) = (int_64)1398362884
	*($4) = (int_64)0
	CALL eosio_assert([1], [896])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [960])
	*($4 + [40]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($4 + [16])
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + [24])
	*($8 + [44]) = ($4 + [32])
	CALL $113(($8 + [32]), ($8 + [24]))
	*($4 + [44]) = $1
	*($8 + [24]) = $4
	$7 = (uint_64)*(($4 + [8])) >> (uint_64)(int_64)8
	*($8 + [32]) = $7)
	$6 = *($4 + [44])
	*($8 + [4]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $111($3, ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $162($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [992])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC _ZN5sicbo5clearEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	CALL require_auth(*($0))
	$6 = CALL db_lowerbound_i64(*($0 + [24]), *(($0 + [32])), (int_64)-4354846489561792512, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$2 = ($0 + [24])
	$6 = CALL $45($2, $6)
	$3 = (CASTING uint_64)(uint_32 $2)
	
.LOOP $label$2:
	$4 = *($6)
	*($8 + [8]) = $3
	if ( ((int_64)$4 == (int_64)*(*(CALL $46(($8 + [8])) + [4]))) ){ goto $label$1 }
	if ( ((uint_64)*($6) >= (uint_64)$1) ){ goto $label$1 }
	$7 = [0]
	$5 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($5, [608])
	CALL eosio_assert($5, [656])
	$5 = CALL db_next_i64(*($6 + [84]), ($8 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $45($2, $5)
	
.LABEL $label$3
	CALL $47($2, $6)
	$6 = $7
	if ( $7 ){ goto $label$2 }
	
.LABEL $label$1
	$6 = CALL db_lowerbound_i64(*($0 + [64]), *(($0 + [72])), (int_64)-4354846573189230592, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$2 = ($0 + [64])
	$6 = CALL $48($2, $6)
	$3 = (CASTING uint_64)(uint_32 $2)
	
.LOOP $label$5:
	$4 = *($6)
	*($8 + [8]) = $3
	if ( ((int_64)$4 == (int_64)*(*(CALL $49(($8 + [8])) + [4]))) ){ goto $label$4 }
	if ( ((uint_64)*($6) >= (uint_64)$1) ){ goto $label$4 }
	$7 = [0]
	$5 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($5, [608])
	CALL eosio_assert($5, [656])
	$5 = CALL db_next_i64(*($6 + [24]), ($8 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$6 }
	$7 = CALL $48($2, $5)
	
.LABEL $label$6
	CALL $50($2, $6)
	$6 = $7
	if ( $7 ){ goto $label$5 }
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [16])
}

void .FUNC _ZN5sicbo11arenapnrdlyEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [160])
	*([0] + [4]) = $13
	CALL require_auth(*($0))
	$1 = *(($0 + [128]))
	$6 = *(($0 + [132]))
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$1 }
	$7 = ($6 + [-24])
	$2 = ([0] - $1)
	
.LOOP $label$2:
	if ( (int_64)(*(*($7)) == 0) ){ goto $label$1 }
	$6 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $2) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = ($0 + [104])
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$4 }
	$6 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$2), [1136])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$7 = CALL db_find_i64(*(($0 + [104])), *(($0 + [112])), (int_64)3879062980018000896, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $58($2, $7)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$2), [1136])
	
.LABEL $label$3
	$1 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($1, [1200])
	$10 = CALL current_time()
	$10 = ((int_64)((uint_64)$10 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = (int_64)
	if ( ((int_64)*($6 + [56]) == (int_64)$3(((int_64)$10 + (int_64)86400) - ((uint_64)((int_64)$10 + (int_64)28800) % (uint_64)(int_64)86400)))) ){ goto $label$5 }
	CALL eosio_assert($1, [1216])
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$2), [1264])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$3()), [1312])
	*($6 + [56]) = $3
	$12 = *($6)
	CALL eosio_assert([1], [1376])
	*($13 + [24]) = (($13 + [32]) + [72])
	*($13 + [20]) = ($13 + [32])
	*($13 + [16]) = ($13 + [32])
	*($13 + [8]) = ($13 + [16])
	*($13 + [116]) = ($6 + [8])
	*($13 + [112]) = $6
	*($13 + [120]) = ($6 + [16])
	*($13 + [124]) = ($6 + [24])
	*($13 + [128]) = ($6 + [32])
	*($13 + [132]) = ($6 + [40])
	*($13 + [136]) = ($6 + [48])
	*($13 + [140]) = ($6 + [56])
	*($13 + [144]) = ($6 + [64])
	CALL $59(($13 + [112]), ($13 + [8]))
	$10 = (int_64)0
	CALL db_update_i64(*($6 + [76]), (int_64)0, ($13 + [32]), [72])
	$7 = ($0 + [120])
	if ( (uint_64)($12 <= *($7)) ){ goto $label$6 }
	*($7) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$12 = (int_64)59
	$7 = [32]
	$8 = (int_64)0
	
.LOOP $label$7:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$8 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$4 = ($4 + [165])
	goto $label$9 
	
.LABEL $label$10
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$8
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$7 }
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [1456]
	$11 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$10 > (uint_64)(int_64)10) ){ goto $label$16 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$4 = ($4 + [165])
	goto $label$14 
	
.LABEL $label$16
	$12 = (int_64)0
	if ( ((int_64)$10 == (int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$12
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)-5)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((int_64)$10 != (int_64)13) ){ goto $label$11 }
	*($13 + [112]) = $3
	*($13 + [120]) = ((int_64)$11 + (int_64)$8)
	$10 = CALL current_time()
	*(($13 + [60])) = [0]
	*(($13 + [64])) = [0]
	*($13 + [44]) = [0]
	*($13 + [48]) = [0]
	*($13 + [52]) = [0]
	*($13 + [56]) = [0]
	*($13 + [32]) = ((CASTING uint_32)(uint_64 ((uint_64)$10 / (uint_64)(int_64)1000000)) + [60])
	*($13 + [68]) = [0]
	*(($13 + [72])) = [0]
	*(($13 + [76])) = [0]
	*($13 + [80]) = [0]
	*(($13 + [84])) = [0]
	*(($13 + [88])) = [0]
	$5 = ($13 + [68])
	$11 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [1472]
	$8 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$22 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$4 = ($4 + [165])
	goto $label$20 
	
.LABEL $label$22
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$18
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$12 | (int_64)$8)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$17 }
	*($13 + [24]) = $8
	*($13 + [16]) = $11
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [544]
	$8 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$10 > (uint_64)(int_64)7) ){ goto $label$28 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$4 = ($4 + [165])
	goto $label$26 
	
.LABEL $label$28
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$24
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$12 | (int_64)$8)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$23 }
	*($13 + [8]) = $8
	CALL $62($5, ($13 + [16]), $0, ($13 + [8]), $13)
	*(($13 + [52])) = (int_64))(((int_64)$3 + (int_64)5) - ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
	$10 = *($0)
	CALL $63(($13 + [16]), ($13 + [32]))
	$7 = *($13 + [16])
	CALL send_deferred(($13 + [112]), $10, $7, (*($13 + [20]) - $7), [0])
	$7 = *($13 + [16])
	if ( ($7 == 0) ){ goto $label$29 }
	*($13 + [20]) = $7
	CALL $162($7)
	
.LABEL $label$29
	CALL $64(($13 + [32]))
	
.LABEL $label$5
	$10 = CALL current_time()
	$10 = ((int_64)((uint_64)$10 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = (int_64)
	if ( ((int_64)*($6 + [64]) == (int_64)$3(((int_64)$10 + (int_64)115200) - ((uint_64)((int_64)$10 + (int_64)28800) % (uint_64)(int_64)86400)))) ){ goto $label$30 }
	CALL eosio_assert($1, [1216])
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$2), [1264])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$3()), [1312])
	*($6 + [64]) = $3
	$12 = *($6)
	CALL eosio_assert([1], [1376])
	*($13 + [24]) = (($13 + [32]) + [72])
	*($13 + [20]) = ($13 + [32])
	*($13 + [16]) = ($13 + [32])
	*($13 + [8]) = ($13 + [16])
	*($13 + [116]) = ($6 + [8])
	*($13 + [112]) = $6
	*($13 + [120]) = ($6 + [16])
	*($13 + [124]) = ($6 + [24])
	*($13 + [128]) = ($6 + [32])
	*($13 + [132]) = ($6 + [40])
	*($13 + [136]) = ($6 + [48])
	*($13 + [140]) = ($6 + [56])
	*($13 + [144]) = ($6 + [64])
	CALL $59(($13 + [112]), ($13 + [8]))
	$10 = (int_64)0
	CALL db_update_i64(*($6 + [76]), (int_64)0, ($13 + [32]), [72])
	$7 = ($0 + [120])
	if ( (uint_64)($12 <= *($7)) ){ goto $label$31 }
	*($7) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$31
	$12 = (int_64)59
	$7 = [32]
	$8 = (int_64)0
	
.LOOP $label$32:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$33 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$35 }
	$4 = ($4 + [165])
	goto $label$34 
	
.LABEL $label$35
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$34
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$33
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$32 }
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [1488]
	$11 = (int_64)0
	
.LOOP $label$36:
	if ( ((uint_64)$10 > (uint_64)(int_64)9) ){ goto $label$41 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$4 = ($4 + [165])
	goto $label$39 
	
.LABEL $label$41
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$38
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$37
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$36 }
	*($13 + [112]) = $3
	*($13 + [120]) = ((int_64)$11 + (int_64)$8)
	$10 = CALL current_time()
	*(($13 + [60])) = [0]
	*(($13 + [64])) = [0]
	*($13 + [44]) = [0]
	*($13 + [48]) = [0]
	*($13 + [52]) = [0]
	*($13 + [56]) = [0]
	*($13 + [32]) = ((CASTING uint_32)(uint_64 ((uint_64)$10 / (uint_64)(int_64)1000000)) + [60])
	*($13 + [68]) = [0]
	*(($13 + [72])) = [0]
	*(($13 + [76])) = [0]
	*($13 + [80]) = [0]
	*(($13 + [84])) = [0]
	*(($13 + [88])) = [0]
	$6 = ($13 + [68])
	$11 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [1472]
	$8 = (int_64)0
	
.LOOP $label$42:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$47 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$46 }
	$4 = ($4 + [165])
	goto $label$45 
	
.LABEL $label$47
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$46
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$45
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$44
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$43
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$12 | (int_64)$8)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$42 }
	*($13 + [24]) = $8
	*($13 + [16]) = $11
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [544]
	$8 = (int_64)0
	
.LOOP $label$48:
	if ( ((uint_64)$10 > (uint_64)(int_64)7) ){ goto $label$53 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$4 = ($4 + [165])
	goto $label$51 
	
.LABEL $label$53
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$50
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$49
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$12 | (int_64)$8)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$48 }
	*($13 + [8]) = $8
	CALL $62($6, ($13 + [16]), $0, ($13 + [8]), $13)
	*(($13 + [52])) = (int_64))(((int_64)$3 + (int_64)5) - ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
	$10 = *($0)
	CALL $63(($13 + [16]), ($13 + [32]))
	$7 = *($13 + [16])
	CALL send_deferred(($13 + [112]), $10, $7, (*($13 + [20]) - $7), [0])
	$7 = *($13 + [16])
	if ( ($7 == 0) ){ goto $label$54 }
	*($13 + [20]) = $7
	CALL $162($7)
	
.LABEL $label$54
	CALL $64(($13 + [32]))
	
.LABEL $label$30
	*([0] + [4]) = ($13 + [160])
}

void .FUNC _ZN5sicbo12arenasetnextEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [144])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	$2 = *(($0 + [128]))
	$6 = *(($0 + [132]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$5 = ($6 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( (int_64)(*(*($5)) == 0) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [104])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [72]) == (int_32)$4), [1136])
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	$6 = CALL db_find_i64(*(($0 + [104])), *(($0 + [112])), (int_64)3879062980018000896, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $58($4, $6)
	CALL eosio_assert(((int_32)*($5 + [72]) == (int_32)$4), [1136])
	
.LABEL $label$3
	$6 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($6, [1200])
	CALL eosio_assert($6, [1216])
	CALL eosio_assert(((int_32)*($5 + [72]) == (int_32)$4), [1264])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$3()), [1312])
	*($5 + [24]) = $1
	$1 = *($5)
	CALL eosio_assert([1], [1376])
	*($7 + [88]) = ($7 + [72])
	*($7 + [84]) = $7
	*($7 + [80]) = $7
	*($7 + [96]) = ($7 + [80])
	*($7 + [108]) = ($5 + [8])
	*($7 + [104]) = $5
	*($7 + [112]) = ($5 + [16])
	*($7 + [116]) = ($5 + [24])
	*($7 + [120]) = ($5 + [32])
	*($7 + [124]) = ($5 + [40])
	*($7 + [128]) = ($5 + [48])
	*($7 + [132]) = ($5 + [56])
	*($7 + [136]) = ($5 + [64])
	CALL $59(($7 + [104]), ($7 + [96]))
	CALL db_update_i64(*($5 + [76]), (int_64)0, $7, [72])
	$5 = ($0 + [120])
	if ( (uint_64)($1 <= *($5)) ){ goto $label$5 }
	*($5) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [144])
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

void .FUNC _ZN5sicbo8arenapnrEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	$1 = *(($0 + [128]))
	$5 = *(($0 + [132]))
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$1 }
	$4 = ($5 + [-24])
	$2 = ([0] - $1)
	
.LOOP $label$2:
	if ( (int_64)(*(*($4)) == 0) ){ goto $label$1 }
	$5 = $4
	$3 = ($4 + [-24])
	$4 = $3
	if ( ((int_32)($3 + $2) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [104])
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$4 }
	$4 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [72]) == (int_32)$3), [1136])
	goto $label$3 
	
.LABEL $label$4
	$4 = [0]
	$5 = CALL db_find_i64(*(($0 + [104])), *(($0 + [112])), (int_64)3879062980018000896, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $58($3, $5)
	CALL eosio_assert(((int_32)*($4 + [72]) == (int_32)$3), [1136])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [1200])
	CALL eosio_assert(*($4 + [16]), [1504])
	$6 = *($4 + [8])
	$1 = *(($0 + [168]))
	$5 = *(($0 + [172]))
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$5 }
	$4 = ($5 + [-24])
	$2 = ([0] - $1)
	
.LOOP $label$6:
	if ( ((int_64)*(*($4)) == (int_64)$6) ){ goto $label$5 }
	$5 = $4
	$3 = ($4 + [-24])
	$4 = $3
	if ( ((int_32)($3 + $2) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$4 = ($0 + [144])
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$3 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [120]) == (int_32)$4), [1136])
	goto $label$7 
	
.LABEL $label$8
	$3 = [0]
	$5 = CALL db_find_i64(*(($0 + [144])), *(($0 + [152])), (int_64)3879063041846280192, $6)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$7 }
	$3 = CALL $71($4, $5)
	CALL eosio_assert(((int_32)*($3 + [120]) == (int_32)$4), [1136])
	
.LABEL $label$7
	$4 = [0]
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [1536])
	if ( ((uint_64)((uint_64)((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)28800) % (uint_64)(int_64)86400) > (uint_64)(int_64)28799) ){ goto $label$10 }
	CALL _ZN5sicbo9stoparenaEhh($0, [0], [1])
	goto $label$9 
	
.LABEL $label$10
	*($7 + [24]) = (int_64)1397703940
	*($7 + [16]) = (int_64)0
	CALL eosio_assert([1], [896])
	$6 = (int_64)5459781
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [960])
	*(($7 + [8])) = *((($7 + [16]) + [8]))
	*($7) = *($7 + [16])
	CALL _ZN5sicbo10startarenaEN5eosio5assetEmh($0, $7, [0], [1])
	
.LABEL $label$9
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	*($8 + [16]) = [0]
	*($8 + [24]) = (int_64)0
	*($8 + [36]) = $1
	*($8 + [32]) = $1
	*($8 + [40]) = ($1 + $3)
	*($8 + [48]) = ($8 + [32])
	*($8 + [56]) = $8
	CALL $81(($8 + [56]), ($8 + [48]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$6 = *(($8 + [24]))
	$3 = *(($8 + [16]))
	$5 = *(($8 + [8]))
	$4 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$7 = *((*($1) + $7))
	
.LABEL $label$5
	CALL void $1((int_32 $4), (int_64 $5), (int_64 ($3 & [255])), (int_32 $6), (int_64 $7))
	*([0] + [4]) = ($8 + [64])
	return [1]
}

void .FUNC _ZN5sicbo11arenasettleEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	float_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [272])
	*([0] + [4]) = $13
	CALL require_auth(*($0))
	$8 = *(($0 + [128]))
	$9 = *(($0 + [132]))
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$1 }
	$7 = ($9 + [-24])
	$1 = ([0] - $8)
	
.LOOP $label$2:
	if ( (int_64)(*(*($7)) == 0) ){ goto $label$1 }
	$9 = $7
	$11 = ($7 + [-24])
	$7 = $11
	if ( ((int_32)($11 + $1) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$7 = ($0 + [104])
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$4 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [72]) == (int_32)$7), [1136])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$11 = CALL db_find_i64(*(($0 + [104])), *(($0 + [112])), (int_64)3879062980018000896, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $58($7, $11)
	CALL eosio_assert(((int_32)*($8 + [72]) == (int_32)$7), [1136])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [1200])
	CALL eosio_assert(*($8 + [16]), [1504])
	$10 = *($8 + [8])
	$3 = *(($0 + [168]))
	$9 = *(($0 + [172]))
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$5 }
	$7 = ($9 + [-24])
	$1 = ([0] - $3)
	
.LOOP $label$6:
	if ( ((int_64)*(*($7)) == (int_64)$10) ){ goto $label$5 }
	$9 = $7
	$11 = ($7 + [-24])
	$7 = $11
	if ( ((int_32)($11 + $1) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$2 = ($0 + [144])
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$8 }
	$9 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [120]) == (int_32)$2), [1136])
	goto $label$7 
	
.LABEL $label$8
	$9 = [0]
	$7 = CALL db_find_i64(*(($0 + [144])), *(($0 + [152])), (int_64)3879063041846280192, $10)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	$9 = CALL $71($2, $7)
	CALL eosio_assert(((int_32)*($9 + [120]) == (int_32)$2), [1136])
	
.LABEL $label$7
	$11 = [0]
	$3 = ((int_32)$9 != (int_32)[0])
	CALL eosio_assert($3, [1536])
	CALL eosio_assert(((uint_64)((uint_64)((int_64)((int_64)((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)28800) % (uint_64)(int_64)86400) > (uint_64)(int_64)28799), [1568])
	if ( ((uint_32)(*($9 + [56]) + [900]) <= (uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [1])) ){ goto $label$10 }
	$7 = (*(($9 + [56])) + [900])
	CALL eosio_assert(((uint_32)$7 > (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000))), [1824])
	CALL _ZN5sicbo10arenadelayEy($0, (CASTING uint_64)(uint_32 $7))
	goto $label$9 
	
.LABEL $label$10
	$1 = ($9 + [16])
	$10 = *($1)
	*((($13 + [40]) + [32])) = [0]
	*($13 + [56]) = (int_64)-1
	*($13 + [64]) = (int_64)0
	$5 = *($0)
	*($13 + [40]) = $5
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	*($13 + [48]) = $10)
	$7 = CALL $75(($13 + [40]), CALL $fimport$6($5, $10, (int_64)5455799419163115520, $10))
	CALL eosio_assert(((int_32)*($7 + [64]) == (int_32)($13 + [40])), [1136])
	$10 = *($7)
	$6 = *($7 + [8])
	CALL eosio_assert(((int_64)*(($9 + [32])) == (int_64)$6), [1600])
	$10 = (int_64)
	CALL eosio_assert(((int_64)$10($10 - *($9 + [24]))) > (int_64)-4611686018427387904), [1648])
	CALL eosio_assert(((int_64)$10 < (int_64)4611686018427387904), [1680])
	$12 = *($9 + [8])
	$5 = *($1)
	CALL eosio_assert(((int_64)$6 == (int_64)$5), [1712])
	$6 = ((int_64)$12 + (int_64)(Rounds 0)(((float_64)(CASTING float_64)(int_64 $10) * (float_64)(float_64)0.1)))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [1760])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [1792])
	CALL eosio_assert([1], [896])
	$10 = (int_64)5462355
	
.LOOP $label$13:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$1 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$1 = [0]
	
.LABEL $label$11
	CALL eosio_assert($1, [960])
	CALL eosio_assert([1], [896])
	$4 = (CASTING float_64)(int_64 $6)
	$12 = (Rounds 0)(((float_64)$4 * (float_64)(float_64)0.7))
	$10 = (int_64)5462355
	
.LOOP $label$18:
	$11 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$1 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$1 = [0]
	
.LABEL $label$16
	CALL eosio_assert($1, [960])
	CALL eosio_assert([1], [896])
	$4 = ((float_64)$4 * (float_64)(float_64)0.1)
	$10 = (int_64)5462355
	
.LOOP $label$22:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	
.LOOP $label$24:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	$7 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$22 }
	
.LABEL $label$21
	CALL eosio_assert($7, [960])
	if ( ((int_64)$12 < (int_64)1) ){ goto $label$26 }
	$10 = (Rounds 0)($4)
	if ( ((int_64)*($9 + [48]) != (int_64)0) ){ goto $label$25 }
	
.LABEL $label$26
	$12 = (int_64)0
	$10 = $6
	
.LABEL $label$25
	CALL eosio_assert($3, [1216])
	CALL eosio_assert(((int_32)*($9 + [120]) == (int_32)$2), [1264])
	CALL eosio_assert(((int_64)*(($0 + [144])) == (int_64)CALL $fimport$3()), [1312])
	*($9 + [104]) = $12
	*(($9 + [112])) = $5
	*($9 + [64]) = (int_64)2
	$6 = *($9)
	CALL eosio_assert([1], [1376])
	*($13 + [208]) = (($13 + [80]) + [116])
	*($13 + [204]) = ($13 + [80])
	*($13 + [200]) = ($13 + [80])
	*($13 + [216]) = ($13 + [200])
	*($13 + [228]) = ($9 + [8])
	*($13 + [224]) = $9
	*($13 + [232]) = ($9 + [24])
	*($13 + [236]) = ($9 + [40])
	*($13 + [240]) = ($9 + [48])
	*($13 + [244]) = ($9 + [56])
	*($13 + [248]) = ($9 + [60])
	*($13 + [252]) = ($9 + [64])
	*($13 + [256]) = ($9 + [72])
	*($13 + [260]) = ($9 + [80])
	*($13 + [264]) = ($9 + [88])
	*($13 + [268]) = ($9 + [104])
	CALL $76(($13 + [224]), ($13 + [216]))
	CALL db_update_i64(*($9 + [124]), (int_64)0, ($13 + [80]), [116])
	$7 = ($0 + [160])
	if ( (uint_64)($6 <= *($7)) ){ goto $label$27 }
	*($7) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$27
	*($13 + [32]) = $5
	*((($13 + [8]) + [8])) = $5
	*($13 + [24]) = $10
	*($13 + [8]) = $10
	CALL _ZN5sicbo10startarenaEN5eosio5assetEmh($0, ($13 + [8]), [60], [0])
	if ( ((int_64)*($8 + [24]) != (int_64)0) ){ goto $label$28 }
	CALL _ZN5sicbo9stoparenaEhh($0, [0], [0])
	
.LABEL $label$28
	$9 = *($13 + [64])
	if ( ($9 == 0) ){ goto $label$9 }
	$0 = ($13 + [68])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$30 }
	
.LOOP $label$31:
	$7 = ($7 + [-24])
	$11 = *($7)
	*($7) = [0]
	if ( ($11 == 0) ){ goto $label$32 }
	CALL $162($11)
	
.LABEL $label$32
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$31 }
	$7 = *(($13 + [64]))
	goto $label$29 
	
.LABEL $label$30
	$7 = $9
	
.LABEL $label$29
	*($0) = $9
	CALL $162($7)
	
.LABEL $label$9
	*([0] + [4]) = ($13 + [272])
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($1 + [4])
	$7 = *($1)
	$6 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($9 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [16]) = (int_64)0
	*($8 + [8]) = (int_64)0
	*($8 + [24]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [992])
	CALL memcpy(($8 + [8]), $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [992])
	$9 = (($8 + [8]) + [8])
	CALL memcpy($9, ($6 + [8]), [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[16]), [992])
	$5 = (($8 + [8]) + [16])
	CALL memcpy($5, ($6 + [16]), [1])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($6)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$6 = *($5)
	$4 = *($9)
	$3 = *($8 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$7 = *((*($1) + $7))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 $4), (int_64 ($6 & [255])), (int_32 $7))
	*([0] + [4]) = ($8 + [32])
	return [1]
}

void .FUNC _ZN5sicbo10arenasolveEyyhy (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	$24 = (*([0] + [4]) - [304])
	*([0] + [4]) = $24
	*($24 + [88]) = $1
	*($24 + [80]) = $2
	CALL require_auth(*($0))
	*($24 + [216]) = ((int_64)((int_64)((int_64)((int_64)(uint_64)$2 >> (uint_64)(int_64)20) & (int_64)16777215) * (int_64)((int_64)$2 & (int_64)1048575)) + (int_64)(uint_64)$2 >> (uint_64)(int_64)38)) + (int_64)(CASTING int_64)(int_32 ((int_32)CALL tapos_block_num() * (int_32)CALL $fimport$32())))
	CALL sha512(($24 + [216]), [4], ($24 + [96]))
	$21 = [0]
	
.LOOP $label$1:
	*((($24 + [16]) + $21)) = *((($24 + [96]) + $21))
	$21 = ($21 + [2])
	if ( ((int_32)$21 != (int_32)[60]) ){ goto $label$1 }
	$14 = *(($0 + [128]))
	$22 = *(($0 + [132]))
	if ( ((int_32)$22 == (int_32)$14) ){ goto $label$2 }
	$21 = ($22 + [-24])
	$8 = ([0] - $14)
	
.LOOP $label$3:
	if ( (int_64)(*(*($21)) == 0) ){ goto $label$2 }
	$22 = $21
	$13 = ($21 + [-24])
	$21 = $13
	if ( ((int_32)($13 + $8) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$5 = ($0 + [104])
	if ( ((int_32)$22 == (int_32)$14) ){ goto $label$5 }
	$21 = *(($22 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [72]) == (int_32)$5), [1136])
	goto $label$4 
	
.LABEL $label$5
	$21 = CALL db_find_i64(*(($0 + [104])), *(($0 + [112])), (int_64)3879062980018000896, (int_64)0)
	if ( ((int_32)$21 <= (int_32)[-1]) ){ goto $label$6 }
	$21 = CALL $58($5, $21)
	CALL eosio_assert(((int_32)*($21 + [72]) == (int_32)$5), [1136])
	goto $label$4 
	
.LABEL $label$6
	$21 = [0]
	
.LABEL $label$4
	*($24 + [12]) = $21
	*($24 + [8]) = $5
	CALL eosio_assert(((int_32)$21 != (int_32)[0]), [1200])
	CALL eosio_assert(*(*($24 + [12]) + [16]), [1504])
	$2 = *(*($24 + [12]) + [8])
	$14 = *(($0 + [168]))
	$22 = *(($0 + [172]))
	if ( ((int_32)$22 == (int_32)$14) ){ goto $label$7 }
	$21 = ($22 + [-24])
	$8 = ([0] - $14)
	
.LOOP $label$8:
	if ( ((int_64)*(*($21)) == (int_64)$2) ){ goto $label$7 }
	$22 = $21
	$13 = ($21 + [-24])
	$21 = $13
	if ( ((int_32)($13 + $8) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	$6 = ($0 + [144])
	if ( ((int_32)$22 == (int_32)$14) ){ goto $label$10 }
	$20 = *(($22 + [-24]))
	CALL eosio_assert(((int_32)*($20 + [120]) == (int_32)$6), [1136])
	goto $label$9 
	
.LABEL $label$10
	$20 = [0]
	$21 = CALL db_find_i64(*(($0 + [144])), *(($0 + [152])), (int_64)3879063041846280192, $2)
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$9 }
	$20 = CALL $71($6, $21)
	CALL eosio_assert(((int_32)*($20 + [120]) == (int_32)$6), [1136])
	
.LABEL $label$9
	$7 = ((int_32)$20 != (int_32)[0])
	CALL eosio_assert($7, [1536])
	if ( ($3 == 0) ){ goto $label$11 }
	$9 = ($0 + [248])
	$8 = ($0 + [224])
	$14 = (($24 + [216]) + [8])
	$16 = ($24 + [108])
	$17 = ($24 + [112])
	$18 = ($0 + [256])
	$19 = ($0 + [252])
	$23 = [0]
	
.LOOP $label$12:
	$10 = (((uint_32)(*($21) + [1]) % (uint_32)[6]) + [1])
	$11 = (((uint_32)(*(($21 + [2])) + [2]) % (uint_32)[6]) + [1])
	$21 = (($24 + [16]) + ((int_32)$23 * (int_32)[6]))
	$12 = (((uint_32)(*(($21 + [4])) + [3]) % (uint_32)[6]) + [1])
	*($24) = (CASTING uint_64)(uint_32 ($12 + ((int_32)($11 + ((int_32)$10 * (int_32)[10])) * (int_32)[10])))
	*($14) = (int_64)1398362884
	*($24 + [216]) = (int_64)0
	CALL eosio_assert([1], [896])
	$2 = (uint_64)*($14) >> (uint_64)(int_64)8)
	$21 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$21 = ($21 + [1])
	if ( ((int_32)$21 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$13 = [1]
	$21 = ($21 + [1])
	if ( ((int_32)$21 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$13 = [0]
	
.LABEL $label$13
	CALL eosio_assert($13, [960])
	*($14) = (int_64)340414906884
	*($24 + [216]) = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(uint_64 $4) * (float_64)(float_64)0.01) + (float_64)(float_64)10) * (float_64)(float_64)1e4))
	$2 = *($0)
	*($24 + [96]) = $0
	*(($15 = (($24 + [96]) + [8]))) = ($24 + [88])
	*($16) = ($24 + [216])
	*($17) = $24
	*($24 + [100]) = ($24 + [80])
	*($24 + [296]) = $2
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$3()), [1872])
	*($24 + [272]) = $8
	*((($24 + [272]) + [8])) = ($24 + [296])
	*($24 + [276]) = ($24 + [96])
	*(($13 = CALL $161([64])) + [32]) = (int_64)1398362884
	*($13 + [24]) = (int_64)0
	CALL eosio_assert([1], [896])
	$4 = ((int_64)$4 + (int_64)1)
	$2 = (int_64)5462355
	$21 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	
.LOOP $label$22:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	$21 = ($21 + [1])
	if ( ((int_32)$21 < (int_32)[7]) ){ goto $label$22 }
	
.LABEL $label$21
	$22 = [1]
	$21 = ($21 + [1])
	if ( ((int_32)$21 < (int_32)[7]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	$22 = [0]
	
.LABEL $label$18
	CALL eosio_assert($22, [960])
	*($13 + [52]) = $8
	*($13 + [48]) = [0]
	CALL $82(($24 + [272]), $13)
	*($24 + [288]) = $13
	$2 = *($13)
	*($24 + [272]) = $2
	$22 = *($13 + [56])
	*($24 + [268]) = $22
	$21 = *($19)
	if ( ((uint_32)$21 >= (uint_32)*($18)) ){ goto $label$24 }
	*($21 + [8]) = $2
	*($21 + [16]) = $22
	*($24 + [288]) = [0]
	*($21) = $13
	*($19) = ($21 + [24])
	goto $label$23 
	
.LABEL $label$24
	CALL $44($9, ($24 + [288]), ($24 + [272]), ($24 + [268]))
	
.LABEL $label$23
	$21 = *($24 + [288])
	*($24 + [288]) = [0]
	if ( ($21 == 0) ){ goto $label$25 }
	CALL $162($21)
	
.LABEL $label$25
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$26 }
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$26 }
	*($16) = $0
	*($15) = ($24 + [8])
	*($24 + [100]) = ($24 + [216])
	*($24 + [96]) = ($24 + [88])
	CALL eosio_assert($7, [1216])
	CALL $83($6, $20, ($24 + [96]))
	
.LABEL $label$26
	$23 = ($23 + [1])
	if ( ((int_32)$23 != (int_32)$3) ){ goto $label$12 }
	
.LABEL $label$11
	CALL eosio_assert($7, [1216])
	CALL eosio_assert(((int_32)*($20 + [120]) == (int_32)$6), [1264])
	CALL eosio_assert(((int_64)*(($0 + [144])) == (int_64)CALL $fimport$3()), [1312])
	$2 = *($20)
	*($20 + [56]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$2 == (int_64)*($20)), [1376])
	*($24 + [280]) = (($24 + [96]) + [116])
	*($24 + [276]) = ($24 + [96])
	*($24 + [272]) = ($24 + [96])
	*($24 + [296]) = ($24 + [272])
	*($24 + [220]) = ($20 + [8])
	*($24 + [216]) = $20
	*($24 + [224]) = ($20 + [24])
	*($24 + [228]) = ($20 + [40])
	*($24 + [232]) = ($20 + [48])
	*($24 + [236]) = ($20 + [56])
	*($24 + [240]) = ($20 + [60])
	*($24 + [244]) = ($20 + [64])
	*($24 + [248]) = ($20 + [72])
	*($24 + [252]) = ($20 + [80])
	*($24 + [256]) = ($20 + [88])
	*($24 + [260]) = ($20 + [104])
	CALL $76(($24 + [216]), ($24 + [296]))
	CALL db_update_i64(*($20 + [124]), (int_64)0, ($24 + [96]), [116])
	$21 = ($0 + [160])
	if ( (uint_64)($2 <= *($21)) ){ goto $label$27 }
	*($21) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$27
	$21 = *($24 + [12])
	CALL eosio_assert(((int_32)$21 != (int_32)[0]), [1216])
	CALL eosio_assert(((int_32)*($21 + [72]) == (int_32)$5), [1264])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$3()), [1312])
	*($21 + [40]) = *($24 + [88])
	$2 = *($21)
	*($21 + [48]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$2 == (int_64)*($21)), [1376])
	*($24 + [280]) = (($24 + [96]) + [72])
	*($24 + [276]) = ($24 + [96])
	*($24 + [272]) = ($24 + [96])
	*($24 + [296]) = ($24 + [272])
	*($24 + [220]) = ($21 + [8])
	*($24 + [216]) = $21
	*($24 + [224]) = ($21 + [16])
	*($24 + [228]) = ($21 + [24])
	*($24 + [232]) = ($21 + [32])
	*($24 + [236]) = ($21 + [40])
	*($24 + [240]) = ($21 + [48])
	*($24 + [244]) = ($21 + [56])
	*($24 + [248]) = ($21 + [64])
	CALL $59(($24 + [216]), ($24 + [296]))
	CALL db_update_i64(*($21 + [76]), (int_64)0, ($24 + [96]), [72])
	$21 = ($0 + [120])
	if ( (uint_64)($2 <= *($21)) ){ goto $label$28 }
	*($21) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$28
	*([0] + [4]) = ($24 + [304])
}