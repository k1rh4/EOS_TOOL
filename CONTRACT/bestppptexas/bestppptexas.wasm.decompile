(data (i32.const 8192) "PPP\00")
(data (i32.const 8196) "unable to find key\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 8301) "max_supply is wrong!\00")
(data (i32.const 8322) "EOS\00")
(data (i32.const 8326) "lvlamount format is wrong!\00")
(data (i32.const 8353) "betamount1 format is wrong!\00")
(data (i32.const 8381) "betamount2 format is wrong!\00")
(data (i32.const 8409) "players format is wrong!\00")
(data (i32.const 8434) "at least one player have not paid coin!\00")
(data (i32.const 8474) "at least one player have not paid right coin!\00")
(data (i32.const 8520) "game:roll\00")
(data (i32.const 8530) "texas ppp\00")
(data (i32.const 8540) "transfer ppp\00")
(data (i32.const 8553) "texas win\00")
(data (i32.const 8563) "p1 transfer in data not erased properly\00")
(data (i32.const 8603) "p2 transfer in data not erased properly\00")
(data (i32.const 8643) "\"game\":\"texas\"\00")
(data (i32.const 8658) "\"roomref\":\00")
(data (i32.const 8669) "\"blinds\":\00")
(data (i32.const 8679) "\"seed\":\00")
(data (i32.const 8687) "no according transfer in!\00")
(data (i32.const 8713) "game hasn\'t end!\00")
(data (i32.const 8730) "transfer in data not erased properly\00")
(data (i32.const 8767) "texas data not erased properly\00")
(data (i32.const 8798) "no coin to refund!\00")
(data (i32.const 8817) "Refunds cannot be made within 180 seconds after transfer!\00")
(data (i32.const 8875) "texas refund\00")
(data (i32.const 8888) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 8952) "string is too long to be a valid symbol_code\00")
(data (i32.const 8997) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9050) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 9099) "invalid symbol name\00")
(data (i32.const 9119) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 9178) "attempt to subtract asset with different symbol\00")
(data (i32.const 9226) "subtraction underflow\00")
(data (i32.const 9248) "subtraction overflow\00")
(data (i32.const 9269) "string is too long to be a valid name\00")
(data (i32.const 9307) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 9374) "character is not in allowed character set for names\00")
(data (i32.const 9426) "attempt to add asset with different symbol\00")
(data (i32.const 9469) "addition underflow\00")
(data (i32.const 9488) "addition overflow\00")
(data (i32.const 9506) "write\00")
(data (i32.const 9512) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 9563) "error reading iterator\00")
(data (i32.const 9586) "read\00")
(data (i32.const 9591) "cannot increment end iterator\00")
(data (i32.const 9621) "cannot create objects in table of another contract\00")
(data (i32.const 9672) "next primary key in table is at autoincrement limit\00")
(data (i32.const 9724) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 9778) "cannot decrement iterator at beginning of table\00")
(data (i32.const 9826) "get\00")
(data (i32.const 9830) "cannot pass end iterator to erase\00")
(data (i32.const 9864) "object passed to erase is not in multi_index\00")
(data (i32.const 9909) "cannot erase objects in table of another contract\00")
(data (i32.const 9959) "attempt to remove object that was not in multi_index\00")
(data (i32.const 10012) "cannot pass end iterator to modify\00")
(data (i32.const 10047) "object passed to modify is not in multi_index\00")
(data (i32.const 10093) "cannot modify objects in table of another contract\00")
(data (i32.const 10144) "updater cannot change primary key when modifying an object\00")
(data (i32.const 18624) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 18640) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 18656) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(import "env" "eosio_assert" (func $fimport$0 (param i32 i32)))
(import "env" "db_find_i64" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "require_auth" (func $fimport$2 (param i64)))
(import "env" "require_recipient" (func $fimport$3 (param i64)))
(import "env" "db_lowerbound_i64" (func $fimport$4 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$5 (param i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$7 (param i32 i32)))
(import "env" "current_receiver" (func $fimport$8 (result i64)))
(import "env" "current_time" (func $fimport$9 (result i64)))
(import "env" "send_deferred" (func $fimport$10 (param i32 i64 i32 i32 i32)))
(import "env" "db_store_i64" (func $fimport$11 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$12 (param i32 i64 i32 i32)))
(import "env" "action_data_size" (func $fimport$13 (result i32)))
(import "env" "read_action_data" (func $fimport$14 (param i32 i32) (result i32)))
(import "env" "db_get_i64" (func $fimport$15 (param i32 i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$16 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$17 (param i64 i64 i64) (result i32)))
(import "env" "db_remove_i64" (func $fimport$18 (param i32)))
(import "env" "abort" (func $fimport$19))
(import "env" "memset" (func $fimport$20 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$21 (param i32 i32 i32) (result i32)))
(import "env" "prints_l" (func $fimport$22 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$23 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$24 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$25 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$26 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$27 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$28 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$29 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$30 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$31 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$32 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$33 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$34 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$35 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$36 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$37 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$38 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$39 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$40 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$41 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $37))
(export "_ZdlPv" (func $78))
(export "_Znwj" (func $76))
(export "_Znaj" (func $77))
(export "_ZdaPv" (func $79))
(export "_ZnwjSt11align_val_t" (func $80))
(export "_ZnajSt11align_val_t" (func $81))
(export "_ZdlPvSt11align_val_t" (func $82))
(export "_ZdaPvSt11align_val_t" (func $83))
(table $0 7 7 anyfunc)
(elem (i32.const 1) $5 $28 $36 $4 $24 $33)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 18672))
(global $global$2 i32 (i32.const 18672))


int_64 .FUNC $98 (float_64 $0, int_32 $1)
{
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	if ( ((int_32)$1 < (int_32)[2047]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	if ( ((int_32)$1 > (int_32)[-1992]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($1 + [-1023])
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 + [969])
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

int_64 .FUNC $99 (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($2) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$3 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$2 > (int_32)[0]) ){ goto $label$3 }
	if ( ((($2 & [2147483647]) | $3) == 0) ){ goto $label$2 }
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$3 }
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
	
.LABEL $label$3
	$4 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $4) ){ goto $label$4 }
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	$4 = [0]
	$6 = $3
	if ( (($2 & [1048576]) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = [0]
	
.LOOP $label$9:
	$2 = uint_32($3 >> [11])
	$4 = ($4 + [-21])
	$6 = ($3 << [21])
	$3 = $6
	if ( ($2 == 0) ){ goto $label$9 }
	if ( ($2 & [1048576]) ){ goto $label$6 }
	
.LABEL $label$7
	$5 = [0]
	
.LOOP $label$10:
	$5 = ($5 + [1])
	$3 = ($2 & [524288])
	$7 = ($2 << [1])
	$2 = $7
	if ( ($3 == 0) ){ goto $label$10 }
	goto $label$5 
	
.LABEL $label$6
	$7 = $2
	
.LABEL $label$5
	$3 = ($6 << $5)
	$4 = (($4 + [1]) - $5)
	$2 = (uint_32($6 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$2 = (($2 & [1048575]) | [1048576])
	$7 = ($4 + [-1023])
	if ( (($7 & [1]) == 0) ){ goto $label$11 }
	$2 = (($2 << [1]) | uint_32($3 >> [31]))
	$3 = ($3 << [1])
	
.LABEL $label$11
	$5 = (uint_32($3 >> [31]) | ($2 << [1]))
	$2 = ((int_32)$5 < (int_32)[2097152])
	$8 = ( [0] ? [2097152] : $2 )
	$5 = ( [0] ? [4194304] : $2 )
	$2 = ($5 | [1048576])
	$5 = ($5 << [1])
	$4 = (( $5 ? ($5 + [-4194304]) : $2 ) | (uint_32($3 >> [30]) & [1]))
	if ( ((int_32)$4 < (int_32)$2) ){ goto $label$12 }
	$8 = ($8 | [1048576])
	$4 = ($4 - $2)
	$5 = ($2 + [1048576])
	
.LABEL $label$12
	$4 = ($5 + [524288])
	$2 = (($4 << [1]) | (uint_32($3 >> [29]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$13 }
	$8 = ($8 + [524288])
	$2 = ($2 - $4)
	$5 = ($5 + [1048576])
	
.LABEL $label$13
	$4 = ($5 + [262144])
	$2 = (($2 << [1]) | (uint_32($3 >> [28]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$14 }
	$8 = ($8 + [262144])
	$2 = ($2 - $4)
	$5 = ($5 + [524288])
	
.LABEL $label$14
	$4 = ($5 + [131072])
	$2 = (($2 << [1]) | (uint_32($3 >> [27]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$15 }
	$8 = ($8 + [131072])
	$2 = ($2 - $4)
	$5 = ($5 + [262144])
	
.LABEL $label$15
	$4 = ($5 + [65536])
	$2 = (($2 << [1]) | (uint_32($3 >> [26]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$16 }
	$8 = ($8 + [65536])
	$2 = ($2 - $4)
	$5 = ($5 + [131072])
	
.LABEL $label$16
	$4 = ($5 + [32768])
	$2 = (($2 << [1]) | (uint_32($3 >> [25]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$17 }
	$8 = ($8 + [32768])
	$2 = ($2 - $4)
	$5 = ($5 + [65536])
	
.LABEL $label$17
	$4 = ($5 + [16384])
	$2 = (($2 << [1]) | (uint_32($3 >> [24]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$18 }
	$8 = ($8 + [16384])
	$2 = ($2 - $4)
	$5 = ($5 + [32768])
	
.LABEL $label$18
	$4 = ($5 + [8192])
	$2 = (($2 << [1]) | (uint_32($3 >> [23]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$19 }
	$8 = ($8 + [8192])
	$2 = ($2 - $4)
	$5 = ($5 + [16384])
	
.LABEL $label$19
	$4 = ($5 + [4096])
	$2 = (($2 << [1]) | (uint_32($3 >> [22]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$20 }
	$8 = ($8 + [4096])
	$2 = ($2 - $4)
	$5 = ($5 + [8192])
	
.LABEL $label$20
	$4 = ($5 + [2048])
	$2 = (($2 << [1]) | (uint_32($3 >> [21]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$21 }
	$8 = ($8 + [2048])
	$2 = ($2 - $4)
	$5 = ($5 + [4096])
	
.LABEL $label$21
	$4 = ($5 + [1024])
	$2 = (($2 << [1]) | (uint_32($3 >> [20]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$22 }
	$8 = ($8 + [1024])
	$2 = ($2 - $4)
	$5 = ($5 + [2048])
	
.LABEL $label$22
	$4 = ($5 + [512])
	$2 = (($2 << [1]) | (uint_32($3 >> [19]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$23 }
	$8 = ($8 + [512])
	$2 = ($2 - $4)
	$5 = ($5 + [1024])
	
.LABEL $label$23
	$4 = ($5 + [256])
	$2 = (($2 << [1]) | (uint_32($3 >> [18]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$24 }
	$8 = ($8 + [256])
	$2 = ($2 - $4)
	$5 = ($5 + [512])
	
.LABEL $label$24
	$4 = ($5 + [128])
	$2 = (($2 << [1]) | (uint_32($3 >> [17]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$25 }
	$8 = ($8 + [128])
	$2 = ($2 - $4)
	$5 = ($5 + [256])
	
.LABEL $label$25
	$4 = ($5 + [64])
	$2 = (($2 << [1]) | (uint_32($3 >> [16]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$26 }
	$8 = ($8 + [64])
	$2 = ($2 - $4)
	$5 = ($5 + [128])
	
.LABEL $label$26
	$4 = ($5 + [32])
	$2 = (($2 << [1]) | (uint_32($3 >> [15]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$27 }
	$8 = ($8 + [32])
	$2 = ($2 - $4)
	$5 = ($5 + [64])
	
.LABEL $label$27
	$4 = ($5 + [16])
	$2 = (($2 << [1]) | (uint_32($3 >> [14]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$28 }
	$8 = ($8 + [16])
	$2 = ($2 - $4)
	$5 = ($5 + [32])
	
.LABEL $label$28
	$4 = ($5 + [8])
	$2 = (($2 << [1]) | (uint_32($3 >> [13]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$29 }
	$8 = ($8 + [8])
	$2 = ($2 - $4)
	$5 = ($5 + [16])
	
.LABEL $label$29
	$4 = ($5 + [4])
	$2 = (($2 << [1]) | (uint_32($3 >> [12]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$30 }
	$8 = ($8 + [4])
	$2 = ($2 - $4)
	$5 = ($5 + [8])
	
.LABEL $label$30
	$4 = ($5 + [2])
	$2 = (($2 << [1]) | (uint_32($3 >> [11]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$31 }
	$8 = ($8 + [2])
	$2 = ($2 - $4)
	$5 = ($5 + [4])
	
.LABEL $label$31
	$2 = ($5 + [1])
	$4 = (($2 << [1]) | (uint_32($3 >> [10]) & [1]))
	if ( ((int_32)$4 < (int_32)$2) ){ goto $label$32 }
	$8 = ($8 + [1])
	$4 = ($4 - $2)
	$5 = ($5 + [2])
	
.LABEL $label$32
	$2 = ($3 << [23])
	$3 = (($4 << [1]) | (uint_32($3 >> [9]) & [1]))
	$9 = uint_32($7 >> [1])
	$4 = [-2147483648]
	$10 = [0]
	$6 = [0]
	
.LOOP $label$33:
	$7 = ($6 + $4)
	if ( ((int_32)$3 > (int_32)$5) ){ goto $label$35 }
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$34 }
	if ( ($2 <= $7) ){ goto $label$34 }
	
.LABEL $label$35
	$3 = (($3 - $5) - ($2 <= $7))
	$6 = ($7 + $4)
	$5 = ($5 + (((int_32)$7 < (int_32)[0]) & ((int_32)$6 > (int_32)[-1])))
	$10 = ($10 + $4)
	$2 = ($2 - $7)
	
.LABEL $label$34
	$3 = (uint_32($2 >> [31]) | ($3 << [1]))
	$2 = ($2 << [1])
	$4 = uint_32($4 >> [1])
	if ( $4 ){ goto $label$33 }
	if ( (($2 | $3) == 0) ){ goto $label$36 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$37 }
	$10 = (($10 & [1]) + $10)
	goto $label$36 
	
.LABEL $label$37
	$8 = ($8 + [1])
	$10 = [0]
	
.LABEL $label$36
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($9 << [20]) + int_32($8 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($8 << [31])))))
	
.LABEL $label$2
	return $0
}

int_64 .FUNC $94 (float_64 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	float_64 $5
	$1 = ($global$0 - [16])
	if ( ((float_64)$0 == (float_64)(float_64)0) ){ goto $label$1 }
	$2 = (CASTING int_64)(float_64 $0)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)52)) & [2047]
	if ( ((uint_32)$3) > (uint_32)[1074]) ){ goto $label$1 }
	$4 = ((int_64)$2 < (int_64)0)
	$5 = (float_64))(( ((float_64)((float_64)$0 + (float_64)(float_64)-4503599627370496) + (float_64)(float_64)4503599627370496) ? ((float_64)((float_64)$0 + (float_64)(float_64)4503599627370496) + (float_64)(float_64)-4503599627370496) : $4 ) - $0)
	if ( ((uint_32)$3 > (uint_32)[1022]) ){ goto $label$2 }
	*($1 + [8]) = $5
	return ( (float_64)-0 ? (float_64)1 : $4 )
	
.LABEL $label$2
	$0 = ((float_64)$5 + (float_64)$0)
	if ( ((int_32)((float_64)$5 < (float_64)(float_64)0) ^ (int_32)[1]) ){ goto $label$1 }
	$0 = ((float_64)$0 + (float_64)(float_64)1)
	
.LABEL $label$1
	return $0
}

int_64 .FUNC $95 (float_64 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	float_64 $4
	$1 = ($global$0 - [16])
	if ( ((float_64)$0 == (float_64)(float_64)0) ){ goto $label$1 }
	$2 = (CASTING int_64)(float_64 $0)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)52)) & [2047]
	if ( ((uint_32)$3) > (uint_32)[1074]) ){ goto $label$1 }
	$4 = (float_64))(( ((float_64)((float_64)$0 + (float_64)(float_64)-4503599627370496) + (float_64)(float_64)4503599627370496) ? ((float_64)((float_64)$0 + (float_64)(float_64)4503599627370496) + (float_64)(float_64)-4503599627370496) : ((int_64)$2 < (int_64)0) ) - $0)
	if ( ((uint_32)$3 > (uint_32)[1022]) ){ goto $label$2 }
	*($1 + [8]) = $4
	return (CASTING float_64)(int_32 (CASTING uint_32)(uint_64 (int_64)$2 >> (int_64)63)))
	
.LABEL $label$2
	$0 = ((float_64)$4 + (float_64)$0)
	if ( ((int_32)((float_64)$4 > (float_64)(float_64)0) ^ (int_32)[1]) ){ goto $label$1 }
	$0 = ((float_64)$0 + (float_64)(float_64)-1)
	
.LABEL $label$1
	return $0
}

int_64 .FUNC $96 (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

int_64 .FUNC $97 (float_64 $0, float_64 $1)
{
	float_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	float_64 $19
	float_64 $20
	$2 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (CASTING int_64)(float_64 $1)
	$4 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	$5 = ($4) & [2147483647]
	if ( (($5) | $6) == 0) ){ goto $label$1 }
	$7 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)32))
	$9 = (CASTING uint_32)(uint_64 $7)
	if ( $9 ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$10 = ($8 & [2147483647])
	if ( ((uint_32)$10 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$9 != (int_32)[0]) & ((int_32)$10 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$5 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$5 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$11 = [0]
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$8 }
	$11 = [2]
	if ( ((uint_32)$5 > (uint_32)[1128267775]) ){ goto $label$8 }
	$11 = [0]
	if ( ($5 <= [1072693248]) ){ goto $label$8 }
	$12 = uint_32($5 >> [20])
	if ( ($5 <= [1094713344]) ){ goto $label$7 }
	$11 = ([1075] - $12)
	$12 = uint_32($6 >> $11)
	$11 = ( ([2] - ($12 & [1])) ? [0] : ((int_32)($12 << $11) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$11 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $12)
	$11 = uint_32($5 >> $6)
	$11 = ( ([2] - ($11 & [1])) ? [0] : ((int_32)($11 << $6) == (int_32)$5) )
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($10 + [-1072693248]) | $9) == 0) ){ goto $label$1 }
	if ( ($10 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$4 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$4 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$4 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$4 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL $99($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$2 = CALL $96($0)
	if ( $9 ){ goto $label$26 }
	if ( ($10 == 0) ){ goto $label$25 }
	if ( ((int_32)($10 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$25 }
	
.LABEL $label$26
	$13 = (float_64)1
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$22 }
	if ( ((int_32)$11 == (int_32)[1]) ){ goto $label$24 }
	if ( $11 ){ goto $label$22 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$25
	$2 = ( ((float_64)(float_64)1 / (float_64)$2) ? $2 : ((int_32)$4 < (int_32)[0]) )
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($11 | ($10 + [-1072693248])) == 0) ){ goto $label$23 }
	return ( !(float_64)$2 ? $2 : ((int_32)$11 == (int_32)[1]) )
	
.LABEL $label$24
	$13 = (float_64)-1
	if ( ((uint_32)$5 >= (uint_32)[1105199105]) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$1 = (float_64)
	return ((float_64)$1($2 - $2)) / (float_64)$1)
	
.LABEL $label$22
	if ( ($5 <= [1105199105]) ){ goto $label$20 }
	
.LABEL $label$21
	if ( ($5 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$10 > (uint_32)[1072693247]) ){ goto $label$19 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$4 < (int_32)[0]) )
	
.LABEL $label$27
	if ( ((uint_32)$10 > (uint_32)[1072693246]) ){ goto $label$18 }
	return ( ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300) ? ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300) : ((int_32)$4 < (int_32)[0]) )
	
.LABEL $label$20
	$5 = [0]
	if ( ((uint_32)$10 > (uint_32)[1048575]) ){ goto $label$29 }
	$2 = ((float_64)$2 * (float_64)(float_64)9007199254740992)
	$10 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $2) >> (uint_64)(int_64)32))
	$4 = [-53]
	goto $label$28 
	
.LABEL $label$29
	$4 = [0]
	
.LABEL $label$28
	$6 = ($10 & [1048575])
	$8 = ($6 | [1072693248])
	$4 = ((int_32($10 >> [20]) + $4) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$16 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$17 }
	$5 = [1]
	goto $label$16 
	
.LABEL $label$19
	return ( (float_64)inf ? (float_64)0 : ((int_32)$4 > (int_32)[0]) )
	
.LABEL $label$18
	if ( ($10 <= [1072693249]) ){ goto $label$15 }
	return ( ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300) ? ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300) : ((int_32)$4 > (int_32)[0]) )
	
.LABEL $label$17
	$8 = ($8 + [-1048576])
	$4 = ($4 + [1])
	
.LABEL $label$16
	$2 = (CASTING float_64)(int_32 $4)
	$16 = ((float_64)*(($6 + [18640])) + (float_64)((float_64)((float_64)(float_64))($2 - (float_64))($0 - $17)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$2 = ((float_64)((float_64)$15 * (float_64)$0) + (float_64)((float_64)$2 * (float_64)(float_64))($16 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $19))
	$0 = ((float_64)$2 * (float_64)$2)
	$20 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($8 >> [1]) | [536870912]) + ($5 << [18])) + [524288])) << (int_64)32))
	$15 = ((float_64)$18 * (float_64)(float_64))((float_64))($17 - ((float_64)$0 * (float_64)$20)) - ((float_64)$0 * (float_64)(float_64))($15 - (float_64))($20 - $16)
	$16 = ((float_64)((float_64)((float_64)$2 + (float_64)$0) * (float_64)$15))
	$19 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$19 + (float_64)(float_64)3) + (float_64)$16)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$18 = ((float_64)(float_64)1 / (float_64)((float_64)$16 + (float_64)$15))
	$16 = *(($6 + [18624]))
	$15 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $2) & (int_64)4294967295)))
	$17 = (float_64)
	$2 = ((float_64)$17($15 - $16)) * (float_64)$18
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $2)) & (int_64)-4294967296)
	$17 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$17 & (int_64)-4294967296))))
	$15 = ((float_64)$0 + (float_64)$2)
	$6 = ($5 << [3])
	$14 = *(($6 + [18656]))
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$14 + (float_64)((float_64)$15)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$14 = (float_64))((float_64))((float_64))($0 + (float_64)$16)))) + (float_64)$2)) & (int_64)-4294967296))) - $2) - $14) - $15)
	goto $label$14 
	
.LABEL $label$15
	$16 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$2 + (float_64)(float_64)-1)
	$2 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$2 + (float_64)$16))) & (int_64)-4294967296)
	$14 = (float_64))($0) - $2)
	
.LABEL $label$14
	$1 = ((float_64)((float_64)(float_64))($16 - $14) * (float_64)$1) + (float_64)((float_64)(float_64))($1 - $15) * (float_64)$0
	$15 = (CASTING float_64)(int_64 ((int_64)$3 & (int_64)-4294967296))
	$2 = ((float_64)$0 * (float_64)$15)
	$0 = ((float_64)$2 + (float_64)$1)
	$3 = (CASTING int_64)(float_64 $0)
	$5 = (CASTING uint_32)(uint_64 $3)))
	$8 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( ((int_32)$8) < (int_32)[1083179008]) ){ goto $label$34 }
	if ( ((($8 + [-1083179008]) | $5) == 0) ){ goto $label$33 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$34
	if ( (($8 & [2147482624]) <= [1083231232]) ){ goto $label$31 }
	if ( ((($8 + [1064252416]) | $5) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$33
	if ( ((int_32)((float_64)((float_64)$1 + (float_64)(float_64)8.008566259537294e-17) > (float_64)(float_64))($0 - $2)) ^ (int_32)[1]) ){ goto $label$31 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$32
	if ( (((int_32)((float_64)$1 <= (float_64)(float_64))($0 - $2)) ^ (int_32)[1]) == 0) ){ goto $label$30 }
	
.LABEL $label$31
	$5 = [0]
	$6 = ($8 & [2147483647])
	if ( ($6 <= [1071644673]) ){ goto $label$35 }
	$4 = (uint_32($6 >> [20]) & [2047])
	$6 = (uint_32([1048576] >> (uint_32($6 >> [20]) + [-1022])) + $8)
	$5 = uint_32((($6 & [1048575]) | [1048576]) >> ([1043] - $4))
	$5 = ( ([0] - $5) ? $5 : ((int_32)$8 < (int_32)[0]) )
	$2 = (float_64)
	$3 = (CASTING int_64)(float_64 ((float_64)$1 + (float_64)$2($2 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (int_32([-1048576] >> ($4 + [-1023])) & $6)) << (int_64)32))))))
	
.LABEL $label$35
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$2 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $2)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)$3 & (int_64)-4294967296))
	$15 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$15 + (float_64)$2 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = ((float_64)(float_64))($1)
	$3 = (CASTING int_64)(float_64 $1 - (float_64))(((float_64)((float_64)$1 * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)) - ((float_64)$0($2 - (float_64))($1 - $15))
	$8 = (($5 << [20]) + (CASTING uint_32)(uint_64 (uint_64)$3 + (float_64)((float_64)$1 * (float_64)$0)))
	if ( ((int_32)$8 + (float_64)(float_64)1)))) >> (uint_64)(int_64)32)))) > (int_32)[1048575]) ){ goto $label$36 }
	return ((float_64)$13 * (float_64)CALL $98($1, $5))
	
.LABEL $label$36
	return ((float_64)$13 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$3 & (int_64)4294967295))))
	
.LABEL $label$30
	return ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $2
}

int_32 .FUNC $90 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$3 }
	$4 = ($0 + [1])
	$5 = [-1]
	$0 = uint_32($3 >> [1])
	if ( ((uint_32)$0 <= (uint_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [8])
	$5 = [-1]
	$0 = *($0 + [4])
	if ( ((uint_32)$0 > (uint_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	$0 = ($0 - $2)
	if ( ($0 == 0) ){ goto $label$4 }
	$0 = CALL $100(($4 + $2), ($1 & [255]), $0)
	return ( ($0 - $4) ? [-1] : $0 )
	
.LABEL $label$4
	return ( ([0] - $4) ? [-1] : [0] )
}

void .FUNC $91 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $92 ()
{
	return [10208]
}

void .FUNC $93 (int_32 $0)
{
}

int_32 .FUNC $38 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [272])
	$global$0 = $3
	*(($4 = $3) + [232]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $105($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [80])) = (int_64)0
	*(($4 + [96])) = (int_64)0
	*(($4 + [112])) = (int_64)0
	*(($4 + [128])) = (int_64)0
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = (int_64)0
	*(($4 + [168])) = (int_64)0
	*(($4 + [176])) = (int_64)0
	*(($4 + [192])) = [0]
	*($4 + [64]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [120]) = (int_64)0
	*($4 + [136]) = (int_64)0
	*($4 + [160]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*(($4 + [204])) = (int_64)0
	*(($4 + [212])) = (int_64)0
	*(($4 + [228])) = [0]
	*($4 + [196 align=4]) = (int_64)0
	*($4 + [220 align=4]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $5)
	*($4 + [256]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $46(($4 + [16]), ($4 + [256]))
	*(($3 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	*(($6 = (($4 + [240]) + [8]))) = *($3)
	*($4 + [240]) = *($4)
	$3 = *($6)
	*((($4 + [256]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [240])
	*($4 + [32]) = $0
	*($4 + [256]) = $0
	*($4 + [260]) = ($4 + [232])
	*($4 + [256]) = ($4 + [16])
	CALL $47(($4 + [256]), ($4 + [64]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $108($2)
	
.LABEL $label$4
	CALL $48(($4 + [64]))
	$global$0 = ($4 + [272])
	return [1]
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $64(*($1), *($0))
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy(($3 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy(($3 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy(($3 + [32]), *($0 + [4]), [8])
	$4 = (*($0 + [4]) + [8])
	*($0 + [4]) = $4
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]), [9586])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*(($3 + [40])) = *($2 + [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($2) = $3
	CALL $74($2, $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $48 (int_32 $0)
{
	int_32 $1
	if ( (*($0 + [156]) & [1]) ){ goto $label$19 }
	if ( (*($0 + [144]) & [1]) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL _ZdlPv(*(($0 + [164])))
	if ( ((*($0 + [144]) & [1]) == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL _ZdlPv(*(($0 + [152])))
	$1 = [1]
	if ( ((*($0 + [132]) & [1]) == 0) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$1 = [1]
	if ( (*($0 + [132]) & [1]) ){ goto $label$15 }
	
.LABEL $label$16
	if ( (*($0 + [120]) & $1) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL _ZdlPv(*(($0 + [140])))
	if ( ((*($0 + [120]) & $1) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL _ZdlPv(*(($0 + [128])))
	$1 = [1]
	if ( ((*($0 + [108]) & [1]) == 0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$1 = [1]
	if ( (*($0 + [108]) & [1]) ){ goto $label$11 }
	
.LABEL $label$12
	if ( (*($0 + [96]) & $1) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL _ZdlPv(*(($0 + [116])))
	if ( ((*($0 + [96]) & $1) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL _ZdlPv(*(($0 + [104])))
	$1 = [1]
	if ( ((*($0 + [84]) & [1]) == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$1 = [1]
	if ( (*($0 + [84]) & [1]) ){ goto $label$7 }
	
.LABEL $label$8
	if ( (*($0 + [72]) & $1) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL _ZdlPv(*(($0 + [92])))
	if ( ((*($0 + [72]) & $1) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv(*(($0 + [80])))
	$1 = [1]
	if ( ((*($0 + [12]) & [1]) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$1 = [1]
	if ( (*($0 + [12]) & [1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( (*($0) & $1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL _ZdlPv(*(($0 + [20])))
	if ( ((*($0) & $1) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*($0 + [8]))
	return $0
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $43 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [32])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $105($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [20])) = $2
	*(($4 + [24])) = ($2 + $7)
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	$3 = ($4 + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $108($2)
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return [1]
}

int_32 .FUNC $42 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $105($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = (int_64)0
	*($4 + [32]) = (int_64)0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [9586])
	CALL memcpy(($4 + [32]), $2, [8])
	CALL eosio_assert(((int_32)($7 & [-8]) != (int_32)[8]), [9586])
	CALL memcpy((($4 + [32]) + [8]), ($2 + [8]), [8])
	*(($4 + [20])) = ($2 + [16])
	*(($4 + [24])) = ($2 + $7)
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *($4 + [40])
	$1 = *($4 + [32])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $108($2)
	
.LABEL $label$6
	$global$0 = ($4 + [48])
	return [1]
}

int_32 .FUNC $41 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [256])
	$global$0 = $3
	*(($4 = $3) + [216]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $105($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [104])) = (int_64)0
	*(($4 + [120])) = (int_64)0
	*(($4 + [136])) = (int_64)0
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = (int_64)0
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = (int_64)0
	*($4 + [72]) = [0]
	*($4 + [64]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [128]) = (int_64)0
	*($4 + [144]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $5)
	*($4 + [240]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $49(($4 + [16]), ($4 + [240]))
	*(($3 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	*(($6 = (($4 + [224]) + [8]))) = *($3)
	*($4 + [224]) = *($4)
	$3 = *($6)
	*((($4 + [240]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [224])
	*($4 + [32]) = $0
	*($4 + [240]) = $0
	*($4 + [244]) = ($4 + [216])
	*($4 + [240]) = ($4 + [16])
	CALL $50(($4 + [240]), ($4 + [64]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$18 }
	$2 = [1]
	if ( (*($4 + [204]) & [1]) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $108($2)
	$2 = [1]
	if ( ((*($4 + [204]) & [1]) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL _ZdlPv(*(($4 + [212])))
	if ( ((*($4 + [192]) & $2) == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( (*($4 + [192]) & $2) ){ goto $label$14 }
	
.LABEL $label$15
	$2 = [1]
	if ( (*($4 + [180]) & [1]) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL _ZdlPv(*(($4 + [200])))
	$2 = [1]
	if ( ((*($4 + [180]) & [1]) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL _ZdlPv(*(($4 + [188])))
	if ( ((*($4 + [168]) & $2) == 0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	if ( (*($4 + [168]) & $2) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = [1]
	if ( (*($4 + [156]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL _ZdlPv(*(($4 + [176])))
	$2 = [1]
	if ( ((*($4 + [156]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL _ZdlPv(*(($4 + [164])))
	if ( ((*($4 + [144]) & $2) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( (*($4 + [144]) & $2) ){ goto $label$6 }
	
.LABEL $label$7
	$2 = [1]
	if ( (*($4 + [64]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL _ZdlPv(*(($4 + [152])))
	$2 = [1]
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [72])))
	$global$0 = ($4 + [256])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [256])
	return $2
}

int_32 .FUNC $40 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $105($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = (int_64)0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [9586])
	CALL memcpy(($4 + [40]), $2, [8])
	*(($4 + [28])) = ($2 + [8])
	*(($4 + [32])) = ($2 + $7)
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($4 + [40])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $108($2)
	
.LABEL $label$6
	$global$0 = ($4 + [48])
	return [1]
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$2 = ($global$0 - [256])
	$global$0 = $2
	$3 = CALL $85(($2 + [240]), $1)
	$4 = CALL $85(($2 + [224]), ($1 + [12]))
	*(($5 = (($2 + [208]) + [8]))) = *(($1 + [32]))
	*(($6 = (($2 + [192]) + [8]))) = *(($1 + [48]))
	*(($7 = (($2 + [176]) + [8]))) = *(($1 + [64]))
	*($2 + [208]) = *($1 + [24])
	*($2 + [192]) = *($1 + [40])
	*($2 + [176]) = *($1 + [56])
	$8 = CALL $85(($2 + [160]), ($1 + [72]))
	$9 = CALL $85(($2 + [144]), ($1 + [84]))
	$10 = CALL $85(($2 + [128]), ($1 + [96]))
	$11 = CALL $85(($2 + [112]), ($1 + [108]))
	$12 = CALL $85(($2 + [96]), ($1 + [120]))
	$13 = CALL $85(($2 + [80]), ($1 + [132]))
	$14 = CALL $85(($2 + [64]), ($1 + [144]))
	$1 = CALL $85(($2 + [48]), ($1 + [156]))
	*((($2 + [32]) + [8])) = *($5)
	*((($2 + [16]) + [8])) = *($6)
	*(($2 + [8])) = *($7)
	*($2 + [32]) = *($2 + [208])
	*($2 + [16]) = *($2 + [192])
	*($2) = *($2 + [176])
	CALL $73($0, $3, $4, ($2 + [32]), ($2 + [16]), $2, $8, $9, $10, $11, $12, $13, $14, $1)
	if ( (*($1) & [1]) ){ goto $label$19 }
	if ( (*($14) & [1]) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL _ZdlPv(*($1 + [8]))
	if ( ((*($14) & [1]) == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL _ZdlPv(*($14 + [8]))
	$1 = [1]
	if ( ((*($13) & [1]) == 0) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$1 = [1]
	if ( (*($13) & [1]) ){ goto $label$15 }
	
.LABEL $label$16
	if ( (*($12) & $1) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL _ZdlPv(*($13 + [8]))
	if ( ((*($12) & $1) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL _ZdlPv(*($12 + [8]))
	$1 = [1]
	if ( ((*($11) & [1]) == 0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$1 = [1]
	if ( (*($11) & [1]) ){ goto $label$11 }
	
.LABEL $label$12
	if ( (*($10) & $1) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL _ZdlPv(*($11 + [8]))
	if ( ((*($10) & $1) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL _ZdlPv(*($10 + [8]))
	$1 = [1]
	if ( ((*($9) & [1]) == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$1 = [1]
	if ( (*($9) & [1]) ){ goto $label$7 }
	
.LABEL $label$8
	if ( (*($8) & $1) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL _ZdlPv(*($9 + [8]))
	if ( ((*($8) & $1) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv(*($8 + [8]))
	$1 = [1]
	if ( ((*($4) & [1]) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$1 = [1]
	if ( (*($4) & [1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( (*($3) & $1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL _ZdlPv(*($4 + [8]))
	if ( ((*($3) & $1) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*($3 + [8]))
	$global$0 = ($2 + [256])
	return 
	
.LABEL $label$1
	$global$0 = ($2 + [256])
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $64(*($1), *($0))
	$3 = *($0)
	CALL $64(*($1), ($3 + [12]))
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy(($3 + [24]), *($0 + [4]), [8])
	$4 = (*($0 + [4]) + [8])
	*($0 + [4]) = $4
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]), [9586])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*(($3 + [32])) = *($2 + [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy(($3 + [40]), *($0 + [4]), [8])
	$4 = (*($0 + [4]) + [8])
	*($0 + [4]) = $4
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]), [9586])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*(($3 + [48])) = *($2 + [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($2 + [8]) = $3
	CALL $72(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $85(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $85(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $3) > (uint_32)[7]), [9586])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*(($0 + [24])) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $64(*($1), ($0 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $8 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL _Znwj([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $11($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $21(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

void .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = [16]
	$4 = ($1 + [16])
	$6 = *($1 + [16])
	$5 = *(($1 + [20]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [4]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = (($7 & [-16]) + $3)
	
.LABEL $label$2
	$6 = *(($1 + [32]))
	$5 = *($1 + [28])
	$3 = (($5 - $3) - $6)
	$7 = ($1 + [28])
	$8 = (CASTING uint_64)(uint_32 ($6 - $5))
	
.LOOP $label$3:
	$3 = ($3 + [-1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	$5 = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $11($0, ([0] - $3))
	$5 = *(($0 + [4]))
	$3 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$3 = [0]
	
.LABEL $label$4
	*($2) = $3
	*($2 + [8]) = $5
	$0 = ($5 - $3)
	CALL eosio_assert(((int_32)$0 > (int_32)[7]), [9506])
	CALL memcpy($3, $1, [8])
	CALL eosio_assert(((int_32)($0 + [-8]) > (int_32)[7]), [9506])
	CALL memcpy(($3 + [8]), ($1 + [8]), [8])
	*($2 + [4]) = ($3 + [16])
	CALL $52(CALL $51($2, $4), $7)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$4 }
	CALL eosio_assert([0], [9269])
	$3 = [12]
	goto $label$3 
	
.LABEL $label$4
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$5:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$7 }
	$7 = [0]
	goto $label$6 
	
.LABEL $label$7
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$8 }
	$7 = ($7 + [-48])
	goto $label$6 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$7 = ($7 + [-91])
	goto $label$6 
	
.LABEL $label$9
	$7 = [0]
	CALL eosio_assert([0], [9374])
	$4 = *($0)
	
.LABEL $label$6
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$1
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$10 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [9307])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [9374])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$10
	return $0
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [9563])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $105($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [36]) = $2
	*($3 + [32]) = $2
	*($3 + [40]) = ($2 + $4)
	*(($5 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = $0
	CALL $59(($3 + [32]), $5)
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $26(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $108($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $4 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12)
{
	CALL require_auth((int_64)4229331772100791680)
	CALL require_recipient($2)
	CALL require_recipient($3)
}

void .FUNC $5 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12, int_32 $13)
{
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_64 $30
	int_64 $31
	int_32 $32
	float_64 $33
	int_64 $34
	int_64 $35
	int_64 $36
	int_64 $37
	int_64 $38
	float_64 $39
	int_32 $40
	int_32 $41
	int_32 $42
	$14 = ($global$0 - [416])
	$global$0 = $14
	CALL require_auth((int_64)4229331772100791680)
	$15 = CALL $1($14)
	$16 = CALL $90($2, [58], [0])
	$17 = CALL $102([8322])
	if ( ($17 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8952])
	goto $label$3 
	
.LABEL $label$4
	if ( ($17 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$18 = (int_64)0
	
.LOOP $label$5:
	$19 = *(($17 + [8321]))
	if ( ((($19 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8997])
	
.LABEL $label$6
	$18 = ((int_64)((int_64)$18 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $19) << (int_64)56) >> (int_64)56))
	$17 = ($17 + [-1])
	if ( $17 ){ goto $label$5 }
	$18 = ((int_64)$18 << (int_64)8)
	goto $label$1 
	
.LABEL $label$2
	$18 = (int_64)0
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)((int_64)$18 | (int_64)4)), [8326])
	$17 = CALL $102([8322])
	if ( ($17 <= [8]) ){ goto $label$10 }
	CALL eosio_assert([0], [8952])
	goto $label$9 
	
.LABEL $label$10
	if ( ($17 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	$18 = (int_64)0
	
.LOOP $label$11:
	$19 = *(($17 + [8321]))
	if ( ((($19 + [-65]) & [255]) <= [26]) ){ goto $label$12 }
	CALL eosio_assert([0], [8997])
	
.LABEL $label$12
	$18 = ((int_64)((int_64)$18 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $19) << (int_64)56) >> (int_64)56))
	$17 = ($17 + [-1])
	if ( $17 ){ goto $label$11 }
	$18 = ((int_64)$18 << (int_64)8)
	goto $label$7 
	
.LABEL $label$8
	$18 = (int_64)0
	
.LABEL $label$7
	CALL eosio_assert(((int_64)*($4 + [8]) == (int_64)((int_64)$18 | (int_64)4)), [8353])
	$17 = CALL $102([8322])
	if ( ($17 <= [8]) ){ goto $label$16 }
	CALL eosio_assert([0], [8952])
	goto $label$15 
	
.LABEL $label$16
	if ( ($17 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$18 = (int_64)0
	
.LOOP $label$17:
	$19 = *(($17 + [8321]))
	if ( ((($19 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	CALL eosio_assert([0], [8997])
	
.LABEL $label$18
	$18 = ((int_64)((int_64)$18 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $19) << (int_64)56) >> (int_64)56))
	$17 = ($17 + [-1])
	if ( $17 ){ goto $label$17 }
	$18 = ((int_64)$18 << (int_64)8)
	goto $label$13 
	
.LABEL $label$14
	$18 = (int_64)0
	
.LABEL $label$13
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)((int_64)$18 | (int_64)4)), [8381])
	$20 = [0]
	CALL eosio_assert(((int_32)$16 > (int_32)[0]), [8409])
	$21 = CALL $86(($14 + [400]), $2, [0], $16, $2)
	$22 = CALL $86(($14 + [384]), $2, ($16 + [1]), [-1], $2)
	$17 = [0]
	$19 = *($14 + [400])
	if ( (( *($21 + [4]) ? uint_32($19 >> [1]) : ($19 & [1]) ) == 0) ){ goto $label$19 }
	$17 = *($14 + [384])
	$17 = ((int_32)( *($22 + [4]) ? uint_32($17 >> [1]) : ($17 & [1]) ) != (int_32)[0])
	
.LABEL $label$19
	CALL eosio_assert($17, [8409])
	$23 = ($21 + [1])
	$17 = ( *($21 + [8]) ? $23 : (*($14 + [400]) & [1]) )
	*($14 + [368]) = $17
	*($14 + [372]) = CALL $102($17)
	*($14 + [8]) = *($14 + [368])
	$24 = CALL $6(($14 + [376]), ($14 + [8]))
	$25 = ($22 + [1])
	$17 = ( *($22 + [8]) ? $25 : (*($14 + [384]) & [1]) )
	*($14 + [352]) = $17
	*($14 + [356]) = CALL $102($17)
	*($14) = *($14 + [352])
	$26 = CALL $6(($14 + [360]), $14)
	*(($14 + [344])) = [0]
	*($14 + [328]) = (int_64)-1
	$18 = *($0)
	*($14 + [312]) = $18
	*($14 + [320]) = $18
	*($14 + [336]) = (int_64)0
	$17 = CALL db_lowerbound_i64($18, $18, (int_64)-3596430306756395008, (int_64)0)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$21 }
	$19 = ($3 + [8])
	$20 = CALL $7(($14 + [312]), $17)
	if ( ((int_64)*($20 + [8]) != (int_64)*($24)) ){ goto $label$22 }
	$27 = [2]
	goto $label$20 
	
.LABEL $label$22
	$27 = [0]
	goto $label$20 
	
.LABEL $label$21
	$27 = [363]
	
.LABEL $label$20
	
.LOOP $label$23:
	goto $label$641 
	
.LABEL $label$643
	CALL eosio_assert(((int_64)*(($20 + [24])) == (int_64)*($19)), [9119])
	if ( ((int_64)*($20 + [16]) != (int_64)*($3)) ){ goto $label$276 }
	goto $label$277 
	
.LABEL $label$642
	$20 = CALL $7(($14 + [312]), $17)
	if ( ((int_64)*($20 + [8]) == (int_64)*($24)) ){ goto $label$275 }
	$27 = [0]
	goto $label$23 
	
.LABEL $label$641
	CALL eosio_assert([1], [9591])
	$17 = CALL db_next_i64(*($20 + [36]), ($14 + [16]))
	if ( ((int_32)$17 > (int_32)[-1]) ){ goto $label$278 }
	$27 = [362]
	goto $label$23 
	
.LABEL $label$640
	$20 = [0]
	$27 = [363]
	goto $label$23 
	
.LABEL $label$639
	$28 = [0]
	goto $label$274 
	
.LABEL $label$638
	$28 = [1]
	$27 = [4]
	goto $label$23 
	
.LABEL $label$637
	$16 = [0]
	$17 = CALL db_lowerbound_i64(*($14 + [312]), *((($14 + [312]) + [8])), (int_64)-3596430306756395008, (int_64)0)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$273 }
	$27 = [5]
	goto $label$23 
	
.LABEL $label$636
	$19 = ($3 + [8])
	$16 = CALL $7(($14 + [312]), $17)
	if ( ((int_64)*($16 + [8]) != (int_64)*($26)) ){ goto $label$270 }
	$27 = [8]
	goto $label$23 
	
.LABEL $label$635
	CALL eosio_assert(((int_64)*(($16 + [24])) == (int_64)*($19)), [9119])
	if ( ((int_64)*($16 + [16]) != (int_64)*($3)) ){ goto $label$271 }
	goto $label$272 
	
.LABEL $label$634
	$16 = CALL $7(($14 + [312]), $17)
	if ( ((int_64)*($16 + [8]) == (int_64)*($26)) ){ goto $label$269 }
	$27 = [6]
	goto $label$23 
	
.LABEL $label$633
	CALL eosio_assert([1], [9591])
	$17 = CALL db_next_i64(*($16 + [36]), ($14 + [16]))
	if ( ((int_32)$17 > (int_32)[-1]) ){ goto $label$279 }
	$27 = [360]
	goto $label$23 
	
.LABEL $label$632
	$16 = [0]
	$27 = [361]
	goto $label$23 
	
.LABEL $label$631
	$29 = [0]
	if ( ($28 == 0) ){ goto $label$267 }
	$27 = [359]
	goto $label$23 
	
.LABEL $label$630
	CALL eosio_assert($29, [8434])
	goto $label$266 
	
.LABEL $label$629
	$29 = [1]
	if ( $28 ){ goto $label$268 }
	$27 = [10]
	goto $label$23 
	
.LABEL $label$628
	CALL eosio_assert([0], [8434])
	$27 = [11]
	goto $label$23 
	
.LABEL $label$627
	$17 = ($3 + [8])
	CALL eosio_assert(((int_64)*(($20 + [24])) == (int_64)*($17)), [9119])
	$19 = [0]
	if ( ((int_64)*($20 + [16]) != (int_64)*($3)) ){ goto $label$265 }
	$27 = [358]
	goto $label$23 
	
.LABEL $label$626
	CALL eosio_assert(((int_64)*(($16 + [24])) == (int_64)*($17)), [9119])
	$19 = ((int_64)*($16 + [16]) == (int_64)*($3))
	$27 = [12]
	goto $label$23 
	
.LABEL $label$625
	CALL eosio_assert($19, [8474])
	$30 = *($17)
	$18 = *($3)
	CALL eosio_assert([1], [9426])
	$31 = ((int_64)$18 + (int_64)*($3))
	CALL eosio_assert(((int_64)$31 > (int_64)-4611686018427387904), [9469])
	CALL eosio_assert(((int_64)$31 < (int_64)4611686018427387904), [9488])
	*($14 + [264]) = (int_64)3617214756542218240
	*($14 + [256]) = (int_64)4229331772100791680
	*((($14 + [296]) + [8])) = [0]
	*($14 + [296]) = (int_64)0
	$17 = CALL $102([8520])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$264 }
	$27 = [13]
	goto $label$23 
	
.LABEL $label$624
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$263 }
	$27 = [356]
	goto $label$23 
	
.LABEL $label$623
	*($14 + [296]) = ($17 << [1])
	$19 = (($14 + [296]) | [1])
	if ( $17 ){ goto $label$261 }
	goto $label$262 
	
.LABEL $label$622
	$32 = (($17 + [16]) & [-16])
	$19 = CALL _Znwj($32)
	*($14 + [296]) = ($32 | [1])
	*($14 + [304]) = $19
	*($14 + [300]) = $17
	$27 = [15]
	goto $label$23 
	
.LABEL $label$621
	CALL memcpy($19, [8520], $17)
	$27 = [16]
	goto $label$23 
	
.LABEL $label$620
	*(($19 + $17)) = [0]
	*(($14 + [40])) = $30
	$17 = ($14 + [304])
	*(($14 + [56])) = *($17)
	*($17) = [0]
	*($14 + [24]) = (int_64)4229331772035754384
	*($14 + [16]) = (int_64)4229331772100791680
	*($14 + [32]) = $31
	*($14 + [48]) = *($14 + [296])
	*($14 + [296]) = (int_64)0
	$17 = CALL $8(($14 + [192]), ($14 + [256]), (int_64)6138663591592764928, (int_64)-3617168760277827584, ($14 + [16]))
	CALL $9(($14 + [176]), $17)
	$19 = *($14 + [176])
	CALL send_inline($19, (*($14 + [180]) - $19))
	$19 = *($14 + [176])
	if ( ($19 == 0) ){ goto $label$260 }
	$27 = [17]
	goto $label$23 
	
.LABEL $label$619
	*($14 + [180]) = $19
	CALL _ZdlPv($19)
	$27 = [18]
	goto $label$23 
	
.LABEL $label$618
	$19 = *($17 + [28])
	if ( ($19 == 0) ){ goto $label$259 }
	$27 = [19]
	goto $label$23 
	
.LABEL $label$617
	*(($17 + [32])) = $19
	CALL _ZdlPv($19)
	$27 = [20]
	goto $label$23 
	
.LABEL $label$616
	$19 = *($17 + [16])
	if ( ($19 == 0) ){ goto $label$258 }
	$27 = [21]
	goto $label$23 
	
.LABEL $label$615
	*(($17 + [20])) = $19
	CALL _ZdlPv($19)
	$27 = [22]
	goto $label$23 
	
.LABEL $label$614
	if ( ((*(($14 + [48])) & [1]) == 0) ){ goto $label$257 }
	$27 = [23]
	goto $label$23 
	
.LABEL $label$613
	CALL _ZdlPv(*(($14 + [56])))
	$27 = [24]
	goto $label$23 
	
.LABEL $label$612
	if ( ((*($14 + [296]) & [1]) == 0) ){ goto $label$256 }
	$27 = [25]
	goto $label$23 
	
.LABEL $label$611
	CALL _ZdlPv(*(($14 + [304])))
	$27 = [26]
	goto $label$23 
	
.LABEL $label$610
	$33 = CALL $94(((float_64)(CASTING float_64)(int_64 *($4)) * (float_64)(float_64)0.0075))
	$17 = CALL $102([8322])
	$19 = ($17 <= [8])
	if ( ((float_64)(float_64)|$33| < (float_64)(float_64)9223372036854775808) ){ goto $label$255 }
	$27 = [355]
	goto $label$23 
	
.LABEL $label$609
	$34 = (int_64)-9223372036854775808
	if ( ($19 == 0) ){ goto $label$253 }
	$27 = [28]
	goto $label$23 
	
.LABEL $label$608
	if ( $17 ){ goto $label$252 }
	$27 = [353]
	goto $label$23 
	
.LABEL $label$607
	$35 = (int_64)0
	goto $label$249 
	
.LABEL $label$606
	$34 = (Rounds 0)($33)
	if ( $19 ){ goto $label$254 }
	$27 = [354]
	goto $label$23 
	
.LABEL $label$605
	CALL eosio_assert([0], [8952])
	$27 = [29]
	goto $label$23 
	
.LABEL $label$604
	$18 = (int_64)0
	$27 = [30]
	goto $label$23 
	
.LABEL $label$603
	$19 = *(($17 + [8321]))
	if ( ((($19 + [-65]) & [255]) <= [26]) ){ goto $label$250 }
	$27 = [352]
	goto $label$23 
	
.LABEL $label$602
	CALL eosio_assert([0], [8997])
	$27 = [31]
	goto $label$23 
	
.LABEL $label$601
	$18 = ((int_64)((int_64)$18 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $19) << (int_64)56) >> (int_64)56))
	$17 = ($17 + [-1])
	if ( $17 ){ goto $label$251 }
	$27 = [32]
	goto $label$23 
	
.LABEL $label$600
	$35 = ((int_64)$18 << (int_64)8)
	$27 = [33]
	goto $label$23 
	
.LABEL $label$599
	CALL eosio_assert((uint_64)(((int_64)$34 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [9050])
	$18 = (uint_64)$35 >> (uint_64)(int_64)8)
	$36 = ((int_64)$35 | (int_64)4)
	$17 = [0]
	$27 = [34]
	goto $label$23 
	
.LABEL $label$598
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$243 }
	$27 = [346]
	goto $label$23 
	
.LABEL $label$597
	$35 = (uint_64)$18 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$18 & (int_64)65280) == (int_64)0) ){ goto $label$25 }
	$27 = [347]
	goto $label$23 
	
.LABEL $label$596
	$18 = $35
	$19 = [1]
	$32 = $17
	$17 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[6]) ){ goto $label$246 }
	goto $label$245 
	
.LABEL $label$595
	$18 = $35
	$27 = [349]
	goto $label$23 
	
.LABEL $label$594
	if ( ((int_64)((int_64)$18 & (int_64)65280) != (int_64)0) ){ goto $label$244 }
	$27 = [350]
	goto $label$23 
	
.LABEL $label$593
	$18 = (uint_64)$18 >> (uint_64)(int_64)8)
	$19 = ((int_32)$17 < (int_32)[6])
	$32 = ($17 + [1])
	$17 = $32
	if ( $19 ){ goto $label$24 }
	$27 = [351]
	goto $label$23 
	
.LABEL $label$592
	$19 = [1]
	$17 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[6]) ){ goto $label$248 }
	goto $label$247 
	
.LABEL $label$591
	$19 = [0]
	$27 = [36]
	goto $label$23 
	
.LABEL $label$590
	CALL eosio_assert($19, [9099])
	$33 = CALL $94(((float_64)(CASTING float_64)(int_64 *($5)) * (float_64)(float_64)0.0075))
	$17 = CALL $102([8322])
	$19 = ($17 <= [8])
	if ( ((float_64)(float_64)|$33| < (float_64)(float_64)9223372036854775808) ){ goto $label$242 }
	$27 = [345]
	goto $label$23 
	
.LABEL $label$589
	$37 = (int_64)-9223372036854775808
	if ( ($19 == 0) ){ goto $label$240 }
	$27 = [38]
	goto $label$23 
	
.LABEL $label$588
	if ( $17 ){ goto $label$239 }
	$27 = [343]
	goto $label$23 
	
.LABEL $label$587
	$35 = (int_64)0
	goto $label$236 
	
.LABEL $label$586
	$37 = (Rounds 0)($33)
	if ( $19 ){ goto $label$241 }
	$27 = [344]
	goto $label$23 
	
.LABEL $label$585
	CALL eosio_assert([0], [8952])
	$27 = [39]
	goto $label$23 
	
.LABEL $label$584
	$18 = (int_64)0
	$27 = [40]
	goto $label$23 
	
.LABEL $label$583
	$19 = *(($17 + [8321]))
	if ( ((($19 + [-65]) & [255]) <= [26]) ){ goto $label$237 }
	$27 = [342]
	goto $label$23 
	
.LABEL $label$582
	CALL eosio_assert([0], [8997])
	$27 = [41]
	goto $label$23 
	
.LABEL $label$581
	$18 = ((int_64)((int_64)$18 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $19) << (int_64)56) >> (int_64)56))
	$17 = ($17 + [-1])
	if ( $17 ){ goto $label$238 }
	$27 = [42]
	goto $label$23 
	
.LABEL $label$580
	$35 = ((int_64)$18 << (int_64)8)
	$27 = [43]
	goto $label$23 
	
.LABEL $label$579
	CALL eosio_assert((uint_64)(((int_64)$37 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [9050])
	$18 = (uint_64)$35 >> (uint_64)(int_64)8)
	$38 = ((int_64)$35 | (int_64)4)
	$17 = [0]
	$27 = [44]
	goto $label$23 
	
.LABEL $label$578
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$230 }
	$27 = [336]
	goto $label$23 
	
.LABEL $label$577
	$35 = (uint_64)$18 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$18 & (int_64)65280) == (int_64)0) ){ goto $label$27 }
	$27 = [337]
	goto $label$23 
	
.LABEL $label$576
	$18 = $35
	$19 = [1]
	$32 = $17
	$17 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[6]) ){ goto $label$233 }
	goto $label$232 
	
.LABEL $label$575
	$18 = $35
	$27 = [339]
	goto $label$23 
	
.LABEL $label$574
	if ( ((int_64)((int_64)$18 & (int_64)65280) != (int_64)0) ){ goto $label$231 }
	$27 = [340]
	goto $label$23 
	
.LABEL $label$573
	$18 = (uint_64)$18 >> (uint_64)(int_64)8)
	$19 = ((int_32)$17 < (int_32)[6])
	$32 = ($17 + [1])
	$17 = $32
	if ( $19 ){ goto $label$26 }
	$27 = [341]
	goto $label$23 
	
.LABEL $label$572
	$19 = [1]
	$17 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[6]) ){ goto $label$235 }
	goto $label$234 
	
.LABEL $label$571
	$19 = [0]
	$27 = [46]
	goto $label$23 
	
.LABEL $label$570
	CALL eosio_assert($19, [9099])
	CALL eosio_assert(((int_64)$38 == (int_64)$36), [9426])
	$37 = ((int_64)$37 + (int_64)$34)
	CALL eosio_assert(((int_64)$37 > (int_64)-4611686018427387904), [9469])
	CALL eosio_assert(((int_64)$37 < (int_64)4611686018427387904), [9488])
	$33 = (CASTING float_64)(int_32 ($15 + [-1]))
	$39 = CALL $95(((float_64)(CASTING float_64)(int_64 ((int_64)*($4) * (int_64)100)) / (float_64)CALL $97((float_64)2, $33)))
	if ( ((float_64)(float_64)|$39| < (float_64)(float_64)9223372036854775808) ){ goto $label$229 }
	$27 = [335]
	goto $label$23 
	
.LABEL $label$569
	$34 = (int_64)-9223372036854775808
	goto $label$228 
	
.LABEL $label$568
	$34 = (Rounds 0)($39)
	$27 = [48]
	goto $label$23 
	
.LABEL $label$567
	$17 = CALL $102([8192])
	if ( ($17 <= [8]) ){ goto $label$227 }
	$27 = [334]
	goto $label$23 
	
.LABEL $label$566
	CALL eosio_assert([0], [8952])
	goto $label$225 
	
.LABEL $label$565
	if ( ($17 == 0) ){ goto $label$226 }
	$27 = [50]
	goto $label$23 
	
.LABEL $label$564
	$18 = (int_64)0
	$27 = [51]
	goto $label$23 
	
.LABEL $label$563
	$19 = *(($17 + [8191]))
	if ( ((($19 + [-65]) & [255]) <= [26]) ){ goto $label$223 }
	$27 = [332]
	goto $label$23 
	
.LABEL $label$562
	CALL eosio_assert([0], [8997])
	$27 = [52]
	goto $label$23 
	
.LABEL $label$561
	$18 = ((int_64)((int_64)$18 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $19) << (int_64)56) >> (int_64)56))
	$17 = ($17 + [-1])
	if ( $17 ){ goto $label$224 }
	$27 = [53]
	goto $label$23 
	
.LABEL $label$560
	$35 = ((int_64)$18 << (int_64)8)
	$27 = [54]
	goto $label$23 
	
.LABEL $label$559
	CALL eosio_assert((uint_64)(((int_64)$34 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [9050])
	$18 = (uint_64)$35 >> (uint_64)(int_64)8)
	$38 = ((int_64)$35 | (int_64)4)
	$17 = [0]
	$27 = [55]
	goto $label$23 
	
.LABEL $label$558
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$216 }
	$27 = [326]
	goto $label$23 
	
.LABEL $label$557
	$35 = (uint_64)$18 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$18 & (int_64)65280) == (int_64)0) ){ goto $label$29 }
	$27 = [327]
	goto $label$23 
	
.LABEL $label$556
	$18 = $35
	$19 = [1]
	$32 = $17
	$17 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[6]) ){ goto $label$219 }
	goto $label$218 
	
.LABEL $label$555
	$18 = $35
	$27 = [329]
	goto $label$23 
	
.LABEL $label$554
	if ( ((int_64)((int_64)$18 & (int_64)65280) != (int_64)0) ){ goto $label$217 }
	$27 = [330]
	goto $label$23 
	
.LABEL $label$553
	$18 = (uint_64)$18 >> (uint_64)(int_64)8)
	$19 = ((int_32)$17 < (int_32)[6])
	$32 = ($17 + [1])
	$17 = $32
	if ( $19 ){ goto $label$28 }
	$27 = [331]
	goto $label$23 
	
.LABEL $label$552
	$19 = [1]
	$17 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[6]) ){ goto $label$221 }
	goto $label$220 
	
.LABEL $label$551
	$19 = [0]
	$27 = [57]
	goto $label$23 
	
.LABEL $label$550
	CALL eosio_assert($19, [9099])
	*($14 + [264]) = (int_64)3617214756542218240
	*($14 + [256]) = (int_64)4229331772105823536
	*(($14 + [304])) = [0]
	*($14 + [296]) = (int_64)0
	$17 = CALL $102([8530])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$215 }
	$27 = [58]
	goto $label$23 
	
.LABEL $label$549
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$214 }
	$27 = [324]
	goto $label$23 
	
.LABEL $label$548
	*($14 + [296]) = ($17 << [1])
	$19 = (($14 + [296]) | [1])
	if ( $17 ){ goto $label$212 }
	goto $label$213 
	
.LABEL $label$547
	$32 = (($17 + [16]) & [-16])
	$19 = CALL _Znwj($32)
	*($14 + [296]) = ($32 | [1])
	*($14 + [304]) = $19
	*($14 + [300]) = $17
	$27 = [60]
	goto $label$23 
	
.LABEL $label$546
	CALL memcpy($19, [8530], $17)
	$27 = [61]
	goto $label$23 
	
.LABEL $label$545
	*(($19 + $17)) = [0]
	*(($14 + [208])) = $38
	$17 = ($14 + [304])
	*(($14 + [224])) = *($17)
	*($17) = [0]
	*($14 + [200]) = $34
	*($14 + [192]) = *($24)
	*($14 + [216]) = *($14 + [296])
	*($14 + [296]) = (int_64)0
	$17 = CALL $10(($14 + [16]), ($14 + [256]), (int_64)4229331772105823536, (int_64)8516769789752901632, ($14 + [192]))
	CALL $9(($14 + [176]), $17)
	$19 = *($14 + [176])
	CALL send_inline($19, (*($14 + [180]) - $19))
	$19 = *($14 + [176])
	if ( ($19 == 0) ){ goto $label$211 }
	$27 = [62]
	goto $label$23 
	
.LABEL $label$544
	*($14 + [180]) = $19
	CALL _ZdlPv($19)
	$27 = [63]
	goto $label$23 
	
.LABEL $label$543
	$19 = *($17 + [28])
	if ( ($19 == 0) ){ goto $label$210 }
	$27 = [64]
	goto $label$23 
	
.LABEL $label$542
	*(($17 + [32])) = $19
	CALL _ZdlPv($19)
	$27 = [65]
	goto $label$23 
	
.LABEL $label$541
	$19 = *($17 + [16])
	if ( ($19 == 0) ){ goto $label$209 }
	$27 = [66]
	goto $label$23 
	
.LABEL $label$540
	*(($17 + [20])) = $19
	CALL _ZdlPv($19)
	$27 = [67]
	goto $label$23 
	
.LABEL $label$539
	if ( ((*(($14 + [216])) & [1]) == 0) ){ goto $label$208 }
	$27 = [68]
	goto $label$23 
	
.LABEL $label$538
	CALL _ZdlPv(*(($14 + [224])))
	$27 = [69]
	goto $label$23 
	
.LABEL $label$537
	if ( ((*($14 + [296]) & [1]) == 0) ){ goto $label$207 }
	$27 = [70]
	goto $label$23 
	
.LABEL $label$536
	CALL _ZdlPv(*(($14 + [304])))
	$27 = [71]
	goto $label$23 
	
.LABEL $label$535
	$33 = CALL $95(((float_64)(CASTING float_64)(int_64 ((int_64)*($5) * (int_64)100)) / (float_64)CALL $97((float_64)2, $33)))
	if ( ((float_64)(float_64)|$33| < (float_64)(float_64)9223372036854775808) ){ goto $label$206 }
	$27 = [323]
	goto $label$23 
	
.LABEL $label$534
	$34 = (int_64)-9223372036854775808
	goto $label$205 
	
.LABEL $label$533
	$34 = (Rounds 0)($33)
	$27 = [73]
	goto $label$23 
	
.LABEL $label$532
	$17 = CALL $102([8192])
	if ( ($17 <= [8]) ){ goto $label$204 }
	$27 = [322]
	goto $label$23 
	
.LABEL $label$531
	CALL eosio_assert([0], [8952])
	goto $label$202 
	
.LABEL $label$530
	if ( ($17 == 0) ){ goto $label$203 }
	$27 = [75]
	goto $label$23 
	
.LABEL $label$529
	$18 = (int_64)0
	$27 = [76]
	goto $label$23 
	
.LABEL $label$528
	$19 = *(($17 + [8191]))
	if ( ((($19 + [-65]) & [255]) <= [26]) ){ goto $label$200 }
	$27 = [320]
	goto $label$23 
	
.LABEL $label$527
	CALL eosio_assert([0], [8997])
	$27 = [77]
	goto $label$23 
	
.LABEL $label$526
	$18 = ((int_64)((int_64)$18 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $19) << (int_64)56) >> (int_64)56))
	$17 = ($17 + [-1])
	if ( $17 ){ goto $label$201 }
	$27 = [78]
	goto $label$23 
	
.LABEL $label$525
	$35 = ((int_64)$18 << (int_64)8)
	$27 = [79]
	goto $label$23 
	
.LABEL $label$524
	CALL eosio_assert((uint_64)(((int_64)$34 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [9050])
	$18 = (uint_64)$35 >> (uint_64)(int_64)8)
	$38 = ((int_64)$35 | (int_64)4)
	$17 = [0]
	$27 = [80]
	goto $label$23 
	
.LABEL $label$523
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$193 }
	$27 = [314]
	goto $label$23 
	
.LABEL $label$522
	$35 = (uint_64)$18 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$18 & (int_64)65280) == (int_64)0) ){ goto $label$31 }
	$27 = [315]
	goto $label$23 
	
.LABEL $label$521
	$18 = $35
	$19 = [1]
	$32 = $17
	$17 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[6]) ){ goto $label$196 }
	goto $label$195 
	
.LABEL $label$520
	$18 = $35
	$27 = [317]
	goto $label$23 
	
.LABEL $label$519
	if ( ((int_64)((int_64)$18 & (int_64)65280) != (int_64)0) ){ goto $label$194 }
	$27 = [318]
	goto $label$23 
	
.LABEL $label$518
	$18 = (uint_64)$18 >> (uint_64)(int_64)8)
	$19 = ((int_32)$17 < (int_32)[6])
	$32 = ($17 + [1])
	$17 = $32
	if ( $19 ){ goto $label$30 }
	$27 = [319]
	goto $label$23 
	
.LABEL $label$517
	$19 = [1]
	$17 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[6]) ){ goto $label$198 }
	goto $label$197 
	
.LABEL $label$516
	$19 = [0]
	$27 = [82]
	goto $label$23 
	
.LABEL $label$515
	CALL eosio_assert($19, [9099])
	*($14 + [264]) = (int_64)3617214756542218240
	*($14 + [256]) = (int_64)4229331772105823536
	*(($14 + [304])) = [0]
	*($14 + [296]) = (int_64)0
	$17 = CALL $102([8540])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$192 }
	$27 = [83]
	goto $label$23 
	
.LABEL $label$514
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$191 }
	$27 = [312]
	goto $label$23 
	
.LABEL $label$513
	*($14 + [296]) = ($17 << [1])
	$19 = (($14 + [296]) | [1])
	if ( $17 ){ goto $label$189 }
	goto $label$190 
	
.LABEL $label$512
	$32 = (($17 + [16]) & [-16])
	$19 = CALL _Znwj($32)
	*($14 + [296]) = ($32 | [1])
	*($14 + [304]) = $19
	*($14 + [300]) = $17
	$27 = [85]
	goto $label$23 
	
.LABEL $label$511
	CALL memcpy($19, [8540], $17)
	$27 = [86]
	goto $label$23 
	
.LABEL $label$510
	*(($19 + $17)) = [0]
	*(($14 + [208])) = $38
	$17 = ($14 + [304])
	*(($14 + [224])) = *($17)
	*($17) = [0]
	*($14 + [200]) = $34
	*($14 + [192]) = *($26)
	*($14 + [216]) = *($14 + [296])
	*($14 + [296]) = (int_64)0
	$17 = CALL $10(($14 + [16]), ($14 + [256]), (int_64)4229331772105823536, (int_64)8516769789752901632, ($14 + [192]))
	CALL $9(($14 + [176]), $17)
	$19 = *($14 + [176])
	CALL send_inline($19, (*($14 + [180]) - $19))
	$19 = *($14 + [176])
	if ( ($19 == 0) ){ goto $label$188 }
	$27 = [87]
	goto $label$23 
	
.LABEL $label$509
	*($14 + [180]) = $19
	CALL _ZdlPv($19)
	$27 = [88]
	goto $label$23 
	
.LABEL $label$508
	$19 = *($17 + [28])
	if ( ($19 == 0) ){ goto $label$187 }
	$27 = [89]
	goto $label$23 
	
.LABEL $label$507
	*(($17 + [32])) = $19
	CALL _ZdlPv($19)
	$27 = [90]
	goto $label$23 
	
.LABEL $label$506
	$19 = *($17 + [16])
	if ( ($19 == 0) ){ goto $label$186 }
	$27 = [91]
	goto $label$23 
	
.LABEL $label$505
	*(($17 + [20])) = $19
	CALL _ZdlPv($19)
	$27 = [92]
	goto $label$23 
	
.LABEL $label$504
	if ( ((*(($14 + [216])) & [1]) == 0) ){ goto $label$185 }
	$27 = [93]
	goto $label$23 
	
.LABEL $label$503
	CALL _ZdlPv(*(($14 + [224])))
	$27 = [94]
	goto $label$23 
	
.LABEL $label$502
	if ( ((*($14 + [296]) & [1]) == 0) ){ goto $label$184 }
	$27 = [95]
	goto $label$23 
	
.LABEL $label$501
	CALL _ZdlPv(*(($14 + [304])))
	$27 = [96]
	goto $label$23 
	
.LABEL $label$500
	$19 = ($17 & [1])
	$17 = *($14 + [400])
	$15 = ($41 & [1])
	$41 = *($6)
	$32 = uint_32($41 >> [1])
	$40 = *($6 + [4])
	$42 = ( $40 ? $32 : $15 )
	if ( ((int_32)$42 != (int_32)( *(($21 + [4])) ? uint_32($17 >> [1]) : $19 )) ){ goto $label$183 }
	$27 = [288]
	goto $label$23 
	
.LABEL $label$499
	$17 = ($6 + [1])
	$19 = ( *(($21 + [8])) ? $23 : $19 )
	if ( $15 ){ goto $label$45 }
	$27 = [308]
	goto $label$23 
	
.LABEL $label$498
	if ( ($42 == 0) ){ goto $label$42 }
	$27 = [309]
	goto $label$23 
	
.LABEL $label$497
	$15 = ([0] - $32)
	$27 = [310]
	goto $label$23 
	
.LABEL $label$496
	if ( ((int_32)*($17) != (int_32)*($19)) ){ goto $label$182 }
	$27 = [311]
	goto $label$23 
	
.LABEL $label$495
	$19 = ($19 + [1])
	$17 = ($17 + [1])
	$15 = ($15 + [1])
	if ( $15 ){ goto $label$40 }
	goto $label$41 
	
.LABEL $label$494
	if ( ($42 == 0) ){ goto $label$44 }
	$27 = [290]
	goto $label$23 
	
.LABEL $label$493
	if ( (CALL $101(( *($6 + [8]) ? $17 : $15 ), $19, $42) == 0) ){ goto $label$43 }
	$27 = [291]
	goto $label$23 
	
.LABEL $label$492
	$41 = *($6)
	$32 = uint_32($41 >> [1])
	$40 = *(($6 + [4]))
	$27 = [97]
	goto $label$23 
	
.LABEL $label$491
	$17 = ($17 & [1])
	$17 = *($14 + [384])
	$15 = ($41 & [1])
	$42 = ( $40 ? $32 : $15 )
	if ( ((int_32)$42 != (int_32)( *($22 + [4]) ? uint_32($17 >> [1]) : $17 )) ){ goto $label$181 }
	$27 = [264]
	goto $label$23 
	
.LABEL $label$490
	$19 = ( *(($22 + [8])) ? $25 : $17 )
	if ( $15 ){ goto $label$59 }
	$27 = [284]
	goto $label$23 
	
.LABEL $label$489
	if ( ($42 == 0) ){ goto $label$56 }
	$27 = [285]
	goto $label$23 
	
.LABEL $label$488
	$15 = ($6 + [1])
	$17 = [0]
	$27 = [286]
	goto $label$23 
	
.LABEL $label$487
	if ( ((int_32)*(($15 + $17)) != (int_32)*(($19 + $17))) ){ goto $label$180 }
	$27 = [287]
	goto $label$23 
	
.LABEL $label$486
	$17 = ($17 + [1])
	if ( ((int_32)$32 != (int_32)$17) ){ goto $label$54 }
	goto $label$55 
	
.LABEL $label$485
	$35 = *($3)
	$18 = *(($3 + [8]))
	CALL eosio_assert(((int_64)*(($5 + [8])) == (int_64)$18), [9426])
	$35 = ((int_64)$35 + (int_64)*($5))
	CALL eosio_assert(((int_64)$35 > (int_64)-4611686018427387904), [9469])
	CALL eosio_assert(((int_64)$35 < (int_64)4611686018427387904), [9488])
	CALL eosio_assert(((int_64)$36 == (int_64)$18), [9178])
	$35 = (int_64)
	CALL eosio_assert(((int_64)$35($35 - $37)) > (int_64)-4611686018427387904), [9226])
	CALL eosio_assert(((int_64)$35 < (int_64)4611686018427387904), [9248])
	*($14 + [264]) = (int_64)3617214756542218240
	*($14 + [256]) = (int_64)4229331772035754384
	*((($14 + [296]) + [8])) = [0]
	*($14 + [296]) = (int_64)0
	$17 = CALL $102([8553])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$39 }
	$27 = [293]
	goto $label$23 
	
.LABEL $label$484
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$38 }
	$27 = [306]
	goto $label$23 
	
.LABEL $label$483
	*($14 + [296]) = ($17 << [1])
	$19 = (($14 + [296]) | [1])
	if ( $17 ){ goto $label$36 }
	goto $label$37 
	
.LABEL $label$482
	$35 = (int_64)0
	goto $label$222 
	
.LABEL $label$481
	$35 = (int_64)0
	goto $label$199 
	
.LABEL $label$480
	if ( ($42 == 0) ){ goto $label$58 }
	$27 = [266]
	goto $label$23 
	
.LABEL $label$479
	if ( (CALL $101(( *($6 + [8]) ? ($6 + [1]) : $15 ), $19, $42) == 0) ){ goto $label$57 }
	$27 = [267]
	goto $label$23 
	
.LABEL $label$478
	$41 = *($6)
	$32 = uint_32($41 >> [1])
	$40 = *(($6 + [4]))
	$27 = [98]
	goto $label$23 
	
.LABEL $label$477
	$17 = ($17 & [1])
	$17 = *($2)
	$15 = ($41 & [1])
	$41 = ( $40 ? $32 : $15 )
	if ( ((int_32)$41 != (int_32)( *($2 + [4]) ? uint_32($17 >> [1]) : $17 )) ){ goto $label$179 }
	$27 = [185]
	goto $label$23 
	
.LABEL $label$476
	$17 = ( *($2 + [8]) ? ($2 + [1]) : $17 )
	$19 = ($6 + [1])
	if ( $15 ){ goto $label$111 }
	$27 = [260]
	goto $label$23 
	
.LABEL $label$475
	if ( ($41 == 0) ){ goto $label$109 }
	$27 = [261]
	goto $label$23 
	
.LABEL $label$474
	$27 = [262]
	goto $label$23 
	
.LABEL $label$473
	if ( ((int_32)*($19) != (int_32)*($17)) ){ goto $label$177 }
	$27 = [263]
	goto $label$23 
	
.LABEL $label$472
	$17 = ($17 + [1])
	$19 = ($19 + [1])
	$32 = ($32 + [-1])
	if ( $32 ){ goto $label$107 }
	goto $label$108 
	
.LABEL $label$471
	$35 = *($3)
	$18 = *(($3 + [8]))
	CALL eosio_assert(((int_64)*(($4 + [8])) == (int_64)$18), [9426])
	$35 = ((int_64)$35 + (int_64)*($4))
	CALL eosio_assert(((int_64)$35 > (int_64)-4611686018427387904), [9469])
	CALL eosio_assert(((int_64)$35 < (int_64)4611686018427387904), [9488])
	CALL eosio_assert(((int_64)$36 == (int_64)$18), [9178])
	$35 = (int_64)
	CALL eosio_assert(((int_64)$35($35 - $37)) > (int_64)-4611686018427387904), [9226])
	CALL eosio_assert(((int_64)$35 < (int_64)4611686018427387904), [9248])
	*($14 + [264]) = (int_64)3617214756542218240
	*($14 + [256]) = (int_64)4229331772035754384
	*((($14 + [296]) + [8])) = [0]
	*($14 + [296]) = (int_64)0
	$17 = CALL $102([8553])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$53 }
	$27 = [269]
	goto $label$23 
	
.LABEL $label$470
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$52 }
	$27 = [282]
	goto $label$23 
	
.LABEL $label$469
	*($14 + [296]) = ($17 << [1])
	$19 = (($14 + [296]) | [1])
	if ( $17 ){ goto $label$50 }
	goto $label$51 
	
.LABEL $label$468
	$32 = (($17 + [16]) & [-16])
	$19 = CALL _Znwj($32)
	*($14 + [296]) = ($32 | [1])
	*($14 + [304]) = $19
	*($14 + [300]) = $17
	$27 = [295]
	goto $label$23 
	
.LABEL $label$467
	CALL memcpy($19, [8553], $17)
	$27 = [296]
	goto $label$23 
	
.LABEL $label$466
	*(($19 + $17)) = [0]
	*(($14 + [40])) = $18
	$17 = ($14 + [304])
	*(($14 + [56])) = *($17)
	*($17) = [0]
	*($14 + [16]) = (int_64)4229331772035754384
	*($14 + [32]) = $35
	*($14 + [24]) = *($24)
	*($14 + [48]) = *($14 + [296])
	*($14 + [296]) = (int_64)0
	$17 = CALL $8(($14 + [192]), ($14 + [256]), (int_64)6138663591592764928, (int_64)-3617168760277827584, ($14 + [16]))
	CALL $9(($14 + [176]), $17)
	$19 = *($14 + [176])
	CALL send_inline($19, (*($14 + [180]) - $19))
	$19 = *($14 + [176])
	if ( ($19 == 0) ){ goto $label$35 }
	$27 = [297]
	goto $label$23 
	
.LABEL $label$465
	*($14 + [180]) = $19
	CALL _ZdlPv($19)
	$27 = [298]
	goto $label$23 
	
.LABEL $label$464
	$19 = *($17 + [28])
	if ( ($19 == 0) ){ goto $label$34 }
	$27 = [299]
	goto $label$23 
	
.LABEL $label$463
	*(($17 + [32])) = $19
	CALL _ZdlPv($19)
	$27 = [300]
	goto $label$23 
	
.LABEL $label$462
	$19 = *($17 + [16])
	if ( ($19 == 0) ){ goto $label$33 }
	$27 = [301]
	goto $label$23 
	
.LABEL $label$461
	*(($17 + [20])) = $19
	CALL _ZdlPv($19)
	$27 = [302]
	goto $label$23 
	
.LABEL $label$460
	if ( ((*(($14 + [48])) & [1]) == 0) ){ goto $label$32 }
	$27 = [303]
	goto $label$23 
	
.LABEL $label$459
	CALL _ZdlPv(*(($14 + [56])))
	$27 = [304]
	goto $label$23 
	
.LABEL $label$458
	if ( ((*($14 + [296]) & [1]) == 0) ){ goto $label$176 }
	$27 = [305]
	goto $label$23 
	
.LABEL $label$457
	CALL _ZdlPv(*(($14 + [304])))
	goto $label$175 
	
.LABEL $label$456
	if ( ($41 == 0) ){ goto $label$110 }
	$27 = [187]
	goto $label$23 
	
.LABEL $label$455
	if ( CALL $101(( *($6 + [8]) ? $19 : $15 ), $17, $41) ){ goto $label$178 }
	$27 = [188]
	goto $label$23 
	
.LABEL $label$454
	$33 = CALL $94((CASTING float_64)(int_64 *($4)))
	$17 = CALL $102([8322])
	$19 = ($17 <= [8])
	$33 = ((float_64)$33 * (float_64)(float_64)0.0075)
	if ( ((float_64)(float_64)|$33| < (float_64)(float_64)9223372036854775808) ){ goto $label$106 }
	$27 = [259]
	goto $label$23 
	
.LABEL $label$453
	$34 = (int_64)-9223372036854775808
	if ( ($19 == 0) ){ goto $label$104 }
	$27 = [190]
	goto $label$23 
	
.LABEL $label$452
	if ( $17 ){ goto $label$103 }
	$27 = [257]
	goto $label$23 
	
.LABEL $label$451
	$35 = (int_64)0
	goto $label$100 
	
.LABEL $label$450
	$32 = (($17 + [16]) & [-16])
	$19 = CALL _Znwj($32)
	*($14 + [296]) = ($32 | [1])
	*($14 + [304]) = $19
	*($14 + [300]) = $17
	$27 = [271]
	goto $label$23 
	
.LABEL $label$449
	CALL memcpy($19, [8553], $17)
	$27 = [272]
	goto $label$23 
	
.LABEL $label$448
	*(($19 + $17)) = [0]
	*(($14 + [40])) = $18
	$17 = ($14 + [304])
	*(($14 + [56])) = *($17)
	*($17) = [0]
	*($14 + [16]) = (int_64)4229331772035754384
	*($14 + [32]) = $35
	*($14 + [24]) = *($26)
	*($14 + [48]) = *($14 + [296])
	*($14 + [296]) = (int_64)0
	$17 = CALL $8(($14 + [192]), ($14 + [256]), (int_64)6138663591592764928, (int_64)-3617168760277827584, ($14 + [16]))
	CALL $9(($14 + [176]), $17)
	$19 = *($14 + [176])
	CALL send_inline($19, (*($14 + [180]) - $19))
	$19 = *($14 + [176])
	if ( ($19 == 0) ){ goto $label$49 }
	$27 = [273]
	goto $label$23 
	
.LABEL $label$447
	*($14 + [180]) = $19
	CALL _ZdlPv($19)
	$27 = [274]
	goto $label$23 
	
.LABEL $label$446
	$19 = *($17 + [28])
	if ( ($19 == 0) ){ goto $label$48 }
	$27 = [275]
	goto $label$23 
	
.LABEL $label$445
	*(($17 + [32])) = $19
	CALL _ZdlPv($19)
	$27 = [276]
	goto $label$23 
	
.LABEL $label$444
	$19 = *($17 + [16])
	if ( ($19 == 0) ){ goto $label$47 }
	$27 = [277]
	goto $label$23 
	
.LABEL $label$443
	*(($17 + [20])) = $19
	CALL _ZdlPv($19)
	$27 = [278]
	goto $label$23 
	
.LABEL $label$442
	if ( ((*(($14 + [48])) & [1]) == 0) ){ goto $label$46 }
	$27 = [279]
	goto $label$23 
	
.LABEL $label$441
	CALL _ZdlPv(*(($14 + [56])))
	$27 = [280]
	goto $label$23 
	
.LABEL $label$440
	if ( ((*($14 + [296]) & [1]) == 0) ){ goto $label$174 }
	$27 = [281]
	goto $label$23 
	
.LABEL $label$439
	CALL _ZdlPv(*(($14 + [304])))
	goto $label$173 
	
.LABEL $label$438
	$34 = (Rounds 0)($33)
	if ( $19 ){ goto $label$105 }
	$27 = [258]
	goto $label$23 
	
.LABEL $label$437
	CALL eosio_assert([0], [8952])
	$27 = [191]
	goto $label$23 
	
.LABEL $label$436
	$18 = (int_64)0
	$27 = [192]
	goto $label$23 
	
.LABEL $label$435
	$19 = *(($17 + [8321]))
	if ( ((($19 + [-65]) & [255]) <= [26]) ){ goto $label$101 }
	$27 = [256]
	goto $label$23 
	
.LABEL $label$434
	CALL eosio_assert([0], [8997])
	$27 = [193]
	goto $label$23 
	
.LABEL $label$433
	$18 = ((int_64)((int_64)$18 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $19) << (int_64)56) >> (int_64)56))
	$17 = ($17 + [-1])
	if ( $17 ){ goto $label$102 }
	$27 = [194]
	goto $label$23 
	
.LABEL $label$432
	$35 = ((int_64)$18 << (int_64)8)
	$27 = [195]
	goto $label$23 
	
.LABEL $label$431
	CALL eosio_assert((uint_64)(((int_64)$34 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [9050])
	$18 = (uint_64)$35 >> (uint_64)(int_64)8)
	$36 = ((int_64)$35 | (int_64)4)
	$17 = [0]
	$27 = [196]
	goto $label$23 
	
.LABEL $label$430
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$94 }
	$27 = [250]
	goto $label$23 
	
.LABEL $label$429
	$35 = (uint_64)$18 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$18 & (int_64)65280) == (int_64)0) ){ goto $label$61 }
	$27 = [251]
	goto $label$23 
	
.LABEL $label$428
	$18 = $35
	$19 = [1]
	$32 = $17
	$17 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[6]) ){ goto $label$97 }
	goto $label$96 
	
.LABEL $label$427
	$18 = $35
	$27 = [253]
	goto $label$23 
	
.LABEL $label$426
	if ( ((int_64)((int_64)$18 & (int_64)65280) != (int_64)0) ){ goto $label$95 }
	$27 = [254]
	goto $label$23 
	
.LABEL $label$425
	$18 = (uint_64)$18 >> (uint_64)(int_64)8)
	$19 = ((int_32)$17 < (int_32)[6])
	$32 = ($17 + [1])
	$17 = $32
	if ( $19 ){ goto $label$60 }
	$27 = [255]
	goto $label$23 
	
.LABEL $label$424
	$19 = [1]
	$17 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[6]) ){ goto $label$99 }
	goto $label$98 
	
.LABEL $label$423
	$19 = [0]
	$27 = [198]
	goto $label$23 
	
.LABEL $label$422
	CALL eosio_assert($19, [9099])
	$33 = CALL $94((CASTING float_64)(int_64 *($5)))
	$17 = CALL $102([8322])
	$19 = ($17 <= [8])
	$33 = ((float_64)$33 * (float_64)(float_64)0.0075)
	if ( ((float_64)(float_64)|$33| < (float_64)(float_64)9223372036854775808) ){ goto $label$93 }
	$27 = [249]
	goto $label$23 
	
.LABEL $label$421
	$37 = (int_64)-9223372036854775808
	if ( ($19 == 0) ){ goto $label$91 }
	$27 = [200]
	goto $label$23 
	
.LABEL $label$420
	if ( $17 ){ goto $label$90 }
	$27 = [247]
	goto $label$23 
	
.LABEL $label$419
	$35 = (int_64)0
	goto $label$87 
	
.LABEL $label$418
	$37 = (Rounds 0)($33)
	if ( $19 ){ goto $label$92 }
	$27 = [248]
	goto $label$23 
	
.LABEL $label$417
	CALL eosio_assert([0], [8952])
	$27 = [201]
	goto $label$23 
	
.LABEL $label$416
	$18 = (int_64)0
	$27 = [202]
	goto $label$23 
	
.LABEL $label$415
	$19 = *(($17 + [8321]))
	if ( ((($19 + [-65]) & [255]) <= [26]) ){ goto $label$88 }
	$27 = [246]
	goto $label$23 
	
.LABEL $label$414
	CALL eosio_assert([0], [8997])
	$27 = [203]
	goto $label$23 
	
.LABEL $label$413
	$18 = ((int_64)((int_64)$18 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $19) << (int_64)56) >> (int_64)56))
	$17 = ($17 + [-1])
	if ( $17 ){ goto $label$89 }
	$27 = [204]
	goto $label$23 
	
.LABEL $label$412
	$35 = ((int_64)$18 << (int_64)8)
	$27 = [205]
	goto $label$23 
	
.LABEL $label$411
	CALL eosio_assert((uint_64)(((int_64)$37 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [9050])
	$18 = (uint_64)$35 >> (uint_64)(int_64)8)
	$38 = ((int_64)$35 | (int_64)4)
	$17 = [0]
	$27 = [206]
	goto $label$23 
	
.LABEL $label$410
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$81 }
	$27 = [240]
	goto $label$23 
	
.LABEL $label$409
	$35 = (uint_64)$18 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$18 & (int_64)65280) == (int_64)0) ){ goto $label$63 }
	$27 = [241]
	goto $label$23 
	
.LABEL $label$408
	$18 = $35
	$19 = [1]
	$32 = $17
	$17 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[6]) ){ goto $label$84 }
	goto $label$83 
	
.LABEL $label$407
	$18 = $35
	$27 = [243]
	goto $label$23 
	
.LABEL $label$406
	if ( ((int_64)((int_64)$18 & (int_64)65280) != (int_64)0) ){ goto $label$82 }
	$27 = [244]
	goto $label$23 
	
.LABEL $label$405
	$18 = (uint_64)$18 >> (uint_64)(int_64)8)
	$19 = ((int_32)$17 < (int_32)[6])
	$32 = ($17 + [1])
	$17 = $32
	if ( $19 ){ goto $label$62 }
	$27 = [245]
	goto $label$23 
	
.LABEL $label$404
	$19 = [1]
	$17 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[6]) ){ goto $label$86 }
	goto $label$85 
	
.LABEL $label$403
	$19 = [0]
	$27 = [208]
	goto $label$23 
	
.LABEL $label$402
	CALL eosio_assert($19, [9099])
	$18 = *($3)
	$35 = *(($3 + [8]))
	CALL eosio_assert(((int_64)$36 == (int_64)$35), [9178])
	$18 = (int_64)
	CALL eosio_assert(((int_64)$18($18 - $34)) > (int_64)-4611686018427387904), [9226])
	CALL eosio_assert(((int_64)$18 < (int_64)4611686018427387904), [9248])
	*($14 + [264]) = (int_64)3617214756542218240
	*($14 + [256]) = (int_64)4229331772035754384
	*((($14 + [296]) + [8])) = [0]
	*($14 + [296]) = (int_64)0
	$17 = CALL $102([8553])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$80 }
	$27 = [209]
	goto $label$23 
	
.LABEL $label$401
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$79 }
	$27 = [238]
	goto $label$23 
	
.LABEL $label$400
	*($14 + [296]) = ($17 << [1])
	$19 = (($14 + [296]) | [1])
	if ( $17 ){ goto $label$77 }
	goto $label$78 
	
.LABEL $label$399
	$32 = (($17 + [16]) & [-16])
	$19 = CALL _Znwj($32)
	*($14 + [296]) = ($32 | [1])
	*($14 + [304]) = $19
	*($14 + [300]) = $17
	$27 = [211]
	goto $label$23 
	
.LABEL $label$398
	CALL memcpy($19, [8553], $17)
	$27 = [212]
	goto $label$23 
	
.LABEL $label$397
	*(($19 + $17)) = [0]
	*(($14 + [40])) = $35
	$17 = ($14 + [304])
	*(($14 + [56])) = *($17)
	*($17) = [0]
	*($14 + [16]) = (int_64)4229331772035754384
	*($14 + [32]) = $18
	*($14 + [24]) = *($24)
	*($14 + [48]) = *($14 + [296])
	*($14 + [296]) = (int_64)0
	$17 = CALL $8(($14 + [192]), ($14 + [256]), (int_64)6138663591592764928, (int_64)-3617168760277827584, ($14 + [16]))
	CALL $9(($14 + [176]), $17)
	$19 = *($14 + [176])
	CALL send_inline($19, (*($14 + [180]) - $19))
	$19 = *($14 + [176])
	if ( ($19 == 0) ){ goto $label$76 }
	$27 = [213]
	goto $label$23 
	
.LABEL $label$396
	*($14 + [180]) = $19
	CALL _ZdlPv($19)
	$27 = [214]
	goto $label$23 
	
.LABEL $label$395
	$19 = *($17 + [28])
	if ( ($19 == 0) ){ goto $label$75 }
	$27 = [215]
	goto $label$23 
	
.LABEL $label$394
	*(($17 + [32])) = $19
	CALL _ZdlPv($19)
	$27 = [216]
	goto $label$23 
	
.LABEL $label$393
	$19 = *($17 + [16])
	if ( ($19 == 0) ){ goto $label$74 }
	$27 = [217]
	goto $label$23 
	
.LABEL $label$392
	*(($17 + [20])) = $19
	CALL _ZdlPv($19)
	$27 = [218]
	goto $label$23 
	
.LABEL $label$391
	if ( ((*(($14 + [48])) & [1]) == 0) ){ goto $label$73 }
	$27 = [219]
	goto $label$23 
	
.LABEL $label$390
	CALL _ZdlPv(*(($14 + [56])))
	$27 = [220]
	goto $label$23 
	
.LABEL $label$389
	if ( ((*($14 + [296]) & [1]) == 0) ){ goto $label$72 }
	$27 = [221]
	goto $label$23 
	
.LABEL $label$388
	CALL _ZdlPv(*(($14 + [304])))
	$27 = [222]
	goto $label$23 
	
.LABEL $label$387
	$18 = *($3)
	$35 = *(($3 + [8]))
	CALL eosio_assert(((int_64)$38 == (int_64)$35), [9178])
	$18 = (int_64)
	CALL eosio_assert(((int_64)$18($18 - $37)) > (int_64)-4611686018427387904), [9226])
	CALL eosio_assert(((int_64)$18 < (int_64)4611686018427387904), [9248])
	*($14 + [264]) = (int_64)3617214756542218240
	*($14 + [256]) = (int_64)4229331772035754384
	*((($14 + [296]) + [8])) = [0]
	*($14 + [296]) = (int_64)0
	$17 = CALL $102([8553])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$71 }
	$27 = [223]
	goto $label$23 
	
.LABEL $label$386
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$70 }
	$27 = [236]
	goto $label$23 
	
.LABEL $label$385
	*($14 + [296]) = ($17 << [1])
	$19 = (($14 + [296]) | [1])
	if ( $17 ){ goto $label$68 }
	goto $label$69 
	
.LABEL $label$384
	$32 = (($17 + [16]) & [-16])
	$19 = CALL _Znwj($32)
	*($14 + [296]) = ($32 | [1])
	*($14 + [304]) = $19
	*($14 + [300]) = $17
	$27 = [225]
	goto $label$23 
	
.LABEL $label$383
	CALL memcpy($19, [8553], $17)
	$27 = [226]
	goto $label$23 
	
.LABEL $label$382
	*(($19 + $17)) = [0]
	*(($14 + [40])) = $35
	$17 = ($14 + [304])
	*(($14 + [56])) = *($17)
	*($17) = [0]
	*($14 + [16]) = (int_64)4229331772035754384
	*($14 + [32]) = $18
	*($14 + [24]) = *($26)
	*($14 + [48]) = *($14 + [296])
	*($14 + [296]) = (int_64)0
	$17 = CALL $8(($14 + [192]), ($14 + [256]), (int_64)6138663591592764928, (int_64)-3617168760277827584, ($14 + [16]))
	CALL $9(($14 + [176]), $17)
	$19 = *($14 + [176])
	CALL send_inline($19, (*($14 + [180]) - $19))
	$19 = *($14 + [176])
	if ( ($19 == 0) ){ goto $label$67 }
	$27 = [227]
	goto $label$23 
	
.LABEL $label$381
	*($14 + [180]) = $19
	CALL _ZdlPv($19)
	$27 = [228]
	goto $label$23 
	
.LABEL $label$380
	$19 = *($17 + [28])
	if ( ($19 == 0) ){ goto $label$66 }
	$27 = [229]
	goto $label$23 
	
.LABEL $label$379
	*(($17 + [32])) = $19
	CALL _ZdlPv($19)
	$27 = [230]
	goto $label$23 
	
.LABEL $label$378
	$19 = *($17 + [16])
	if ( ($19 == 0) ){ goto $label$65 }
	$27 = [231]
	goto $label$23 
	
.LABEL $label$377
	*(($17 + [20])) = $19
	CALL _ZdlPv($19)
	$27 = [232]
	goto $label$23 
	
.LABEL $label$376
	if ( ((*(($14 + [48])) & [1]) == 0) ){ goto $label$64 }
	$27 = [233]
	goto $label$23 
	
.LABEL $label$375
	CALL _ZdlPv(*(($14 + [56])))
	$27 = [234]
	goto $label$23 
	
.LABEL $label$374
	if ( ((*($14 + [296]) & [1]) == 0) ){ goto $label$172 }
	$27 = [235]
	goto $label$23 
	
.LABEL $label$373
	CALL _ZdlPv(*(($14 + [304])))
	$27 = [99]
	goto $label$23 
	
.LABEL $label$372
	$33 = CALL $95(((float_64)(CASTING float_64)(int_64 $31) * (float_64)(float_64)0.0075))
	$17 = CALL $102([8322])
	$19 = ($17 <= [8])
	if ( ((float_64)(float_64)|$33| < (float_64)(float_64)9223372036854775808) ){ goto $label$171 }
	$27 = [184]
	goto $label$23 
	
.LABEL $label$371
	$34 = (int_64)-9223372036854775808
	if ( ($19 == 0) ){ goto $label$169 }
	$27 = [101]
	goto $label$23 
	
.LABEL $label$370
	if ( $17 ){ goto $label$168 }
	$27 = [182]
	goto $label$23 
	
.LABEL $label$369
	$35 = (int_64)0
	goto $label$165 
	
.LABEL $label$368
	$34 = (Rounds 0)($33)
	if ( $19 ){ goto $label$170 }
	$27 = [183]
	goto $label$23 
	
.LABEL $label$367
	CALL eosio_assert([0], [8952])
	$27 = [102]
	goto $label$23 
	
.LABEL $label$366
	$18 = (int_64)0
	$27 = [103]
	goto $label$23 
	
.LABEL $label$365
	$19 = *(($17 + [8321]))
	if ( ((($19 + [-65]) & [255]) <= [26]) ){ goto $label$166 }
	$27 = [181]
	goto $label$23 
	
.LABEL $label$364
	CALL eosio_assert([0], [8997])
	$27 = [104]
	goto $label$23 
	
.LABEL $label$363
	$18 = ((int_64)((int_64)$18 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $19) << (int_64)56) >> (int_64)56))
	$17 = ($17 + [-1])
	if ( $17 ){ goto $label$167 }
	$27 = [105]
	goto $label$23 
	
.LABEL $label$362
	$35 = ((int_64)$18 << (int_64)8)
	$27 = [106]
	goto $label$23 
	
.LABEL $label$361
	CALL eosio_assert((uint_64)(((int_64)$34 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [9050])
	$18 = (uint_64)$35 >> (uint_64)(int_64)8)
	$37 = ((int_64)$35 | (int_64)4)
	$17 = [0]
	$27 = [107]
	goto $label$23 
	
.LABEL $label$360
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$159 }
	$27 = [175]
	goto $label$23 
	
.LABEL $label$359
	$35 = (uint_64)$18 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$18 & (int_64)65280) == (int_64)0) ){ goto $label$113 }
	$27 = [176]
	goto $label$23 
	
.LABEL $label$358
	$18 = $35
	$19 = [1]
	$32 = $17
	$17 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[6]) ){ goto $label$162 }
	goto $label$161 
	
.LABEL $label$357
	$18 = $35
	$27 = [178]
	goto $label$23 
	
.LABEL $label$356
	if ( ((int_64)((int_64)$18 & (int_64)65280) != (int_64)0) ){ goto $label$160 }
	$27 = [179]
	goto $label$23 
	
.LABEL $label$355
	$18 = (uint_64)$18 >> (uint_64)(int_64)8)
	$19 = ((int_32)$17 < (int_32)[6])
	$32 = ($17 + [1])
	$17 = $32
	if ( $19 ){ goto $label$112 }
	$27 = [180]
	goto $label$23 
	
.LABEL $label$354
	$19 = [1]
	$17 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[6]) ){ goto $label$164 }
	goto $label$163 
	
.LABEL $label$353
	$19 = [0]
	$27 = [109]
	goto $label$23 
	
.LABEL $label$352
	CALL eosio_assert($19, [9099])
	*((($14 + [16]) + [24])) = $37
	*(($14 + [56])) = *(($4 + [8]))
	*(($14 + [72])) = *(($5 + [8]))
	*($14 + [24]) = $30
	*($14 + [16]) = $31
	*($14 + [32]) = $34
	*($14 + [48]) = *($4)
	*($14 + [64]) = *($5)
	$19 = CALL $85((($14 + [16]) + [64]), $13)
	*(($32 = (($14 + [192]) + [24]))) = [0]
	*($14 + [200]) = (int_64)5371981454085455872
	*($14 + [192]) = (int_64)4229331771904667808
	*($14 + [208]) = (int_64)0
	*(($17 = CALL _Znwj([16]))) = (int_64)4229331771904667808
	*($17 + [8]) = (int_64)3617214756542218240
	*(($14 + [228])) = [0]
	$2 = ($17 + [16])
	*($32) = $2
	*(($14 + [212])) = $2
	*($14 + [208]) = $17
	*($14 + [220 align=4]) = (int_64)0
	$17 = *($19)
	$19 = ( *(($14 + [84])) ? uint_32($17 >> [1]) : ($17 & [1]) )
	$17 = ($19 + [64])
	$18 = (CASTING uint_64)(uint_32 $19)
	$19 = ($14 + [220])
	$27 = [110]
	goto $label$23 
	
.LABEL $label$351
	$17 = ($17 + [1])
	$18 = (uint_64)$18 >> (uint_64)(int_64)7
	if ( ((int_64)$18) != (int_64)0) ){ goto $label$158 }
	$27 = [111]
	goto $label$23 
	
.LABEL $label$350
	if ( ($17 == 0) ){ goto $label$157 }
	$27 = [112]
	goto $label$23 
	
.LABEL $label$349
	CALL $11($19, $17)
	$19 = *(($14 + [224]))
	$17 = *(($14 + [220]))
	goto $label$156 
	
.LABEL $label$348
	$19 = [0]
	$17 = [0]
	$27 = [113]
	goto $label$23 
	
.LABEL $label$347
	*($14 + [260]) = $17
	*($14 + [256]) = $17
	*($14 + [264]) = $19
	*($14 + [296]) = ($14 + [256])
	*($14 + [176]) = ($14 + [16])
	CALL $12(($14 + [176]), ($14 + [296]))
	CALL $9(($14 + [256]), ($14 + [192]))
	$17 = *($14 + [256])
	CALL send_inline($17, (*($14 + [260]) - $17))
	$17 = *($14 + [256])
	if ( ($17 == 0) ){ goto $label$155 }
	$27 = [114]
	goto $label$23 
	
.LABEL $label$346
	*($14 + [260]) = $17
	CALL _ZdlPv($17)
	$27 = [115]
	goto $label$23 
	
.LABEL $label$345
	$17 = *($14 + [220])
	if ( ($17 == 0) ){ goto $label$154 }
	$27 = [116]
	goto $label$23 
	
.LABEL $label$344
	*(($14 + [224])) = $17
	CALL _ZdlPv($17)
	$27 = [117]
	goto $label$23 
	
.LABEL $label$343
	$17 = *($14 + [208])
	if ( ($17 == 0) ){ goto $label$153 }
	$27 = [118]
	goto $label$23 
	
.LABEL $label$342
	*(($14 + [212])) = $17
	CALL _ZdlPv($17)
	$27 = [119]
	goto $label$23 
	
.LABEL $label$341
	if ( ((*($14 + [80]) & [1]) == 0) ){ goto $label$152 }
	$27 = [120]
	goto $label$23 
	
.LABEL $label$340
	CALL _ZdlPv(*(($14 + [88])))
	$27 = [121]
	goto $label$23 
	
.LABEL $label$339
	*(($32 = ($14 + [288]))) = [0]
	*($14 + [272]) = (int_64)-1
	*($14 + [280]) = (int_64)0
	$18 = *($0)
	*($14 + [256]) = $18
	*($14 + [264]) = $18
	*($14 + [20]) = $1
	*($14 + [24]) = $24
	*($14 + [28]) = $26
	*($14 + [32]) = $3
	*($14 + [36]) = $4
	*($14 + [40]) = $5
	*($14 + [44]) = $6
	*($14 + [48]) = $7
	*($14 + [52]) = $8
	*($14 + [56]) = $9
	*($14 + [60]) = $12
	*($14 + [64]) = $10
	*($14 + [16]) = ($14 + [256])
	*($14 + [176]) = $18
	CALL eosio_assert(((int_64)$18 == (int_64)CALL $fimport$8()), [9621])
	*($14 + [196]) = ($14 + [16])
	*($14 + [192]) = ($14 + [256])
	*($14 + [200]) = ($14 + [176])
	*(($17 = CALL _Znwj([176])) + [16]) = [0]
	*($17 + [8 align=4]) = (int_64)0
	*($17 + [24]) = (int_64)0
	*($17 + [32]) = (int_64)0
	*($17 + [40]) = (int_64)0
	*($17 + [48]) = (int_64)0
	*($17 + [56]) = (int_64)0
	*($17 + [64]) = (int_64)0
	*($17 + [72]) = (int_64)0
	*($17 + [80]) = (int_64)0
	*($17 + [88 align=4]) = (int_64)0
	*($17 + [96 align=4]) = (int_64)0
	*($17 + [104 align=4]) = (int_64)0
	*($17 + [112 align=4]) = (int_64)0
	*($17 + [120 align=4]) = (int_64)0
	*($17 + [128 align=4]) = (int_64)0
	*($17 + [136 align=4]) = (int_64)0
	*($17 + [144 align=4]) = (int_64)0
	*($17 + [152 align=4]) = (int_64)0
	*($17 + [160]) = ($14 + [256])
	CALL $13(($14 + [192]), $17)
	*($14 + [296]) = $17
	$18 = *($17)
	*($14 + [192]) = $18
	$2 = *($17 + [164])
	*($14 + [412]) = $2
	$15 = ($14 + [284])
	$19 = *($15)
	if ( ((uint_32)$19 >= (uint_32)*($32)) ){ goto $label$151 }
	$27 = [173]
	goto $label$23 
	
.LABEL $label$338
	*($19 + [8]) = $18
	*($19 + [16]) = $2
	*($14 + [296]) = [0]
	*($19) = $17
	*($15) = ($19 + [24])
	$17 = *($14 + [296])
	*($14 + [296]) = [0]
	if ( $17 ){ goto $label$148 }
	goto $label$149 
	
.LABEL $label$337
	CALL $14(($14 + [280]), ($14 + [296]), ($14 + [192]), ($14 + [412]))
	$17 = *($14 + [296])
	*($14 + [296]) = [0]
	if ( ($17 == 0) ){ goto $label$150 }
	$27 = [123]
	goto $label$23 
	
.LABEL $label$336
	CALL $15($17)
	CALL _ZdlPv($17)
	$27 = [124]
	goto $label$23 
	
.LABEL $label$335
	if ( ($28 == 0) ){ goto $label$147 }
	$27 = [170]
	goto $label$23 
	
.LABEL $label$334
	CALL eosio_assert([1], [9830])
	CALL eosio_assert([1], [9591])
	$17 = CALL db_next_i64(*($20 + [36]), ($14 + [16]))
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$114 }
	$27 = [171]
	goto $label$23 
	
.LABEL $label$333
	CALL $7(($14 + [312]), $17)
	$27 = [172]
	goto $label$23 
	
.LABEL $label$332
	CALL $16(($14 + [312]), $20)
	CALL eosio_assert([1], [8563])
	$27 = [125]
	goto $label$23 
	
.LABEL $label$331
	if ( ($29 == 0) ){ goto $label$146 }
	$27 = [167]
	goto $label$23 
	
.LABEL $label$330
	CALL eosio_assert([1], [9830])
	CALL eosio_assert([1], [9591])
	$17 = CALL db_next_i64(*($16 + [36]), ($14 + [16]))
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$115 }
	$27 = [168]
	goto $label$23 
	
.LABEL $label$329
	CALL $7(($14 + [312]), $17)
	$27 = [169]
	goto $label$23 
	
.LABEL $label$328
	CALL $16(($14 + [312]), $16)
	CALL eosio_assert([1], [8603])
	$27 = [126]
	goto $label$23 
	
.LABEL $label$327
	$18 = CALL current_time()
	*((($14 + [192]) + [28])) = (int_64)0
	*(($19 = ($14 + [236]))) = (int_64)0
	*(($14 + [244])) = (int_64)0
	*($14 + [204]) = [0]
	*($14 + [208]) = [0]
	*($14 + [212 align=4]) = (int_64)0
	*($14 + [228 align=4]) = (int_64)0
	*($14 + [192]) = ((CASTING uint_32)(uint_64 ((uint_64)$18 / (uint_64)(int_64)1000000)) + [60])
	*($14 + [184]) = (int_64)3617214756542218240
	*($14 + [176]) = *($0)
	*($14 + [296]) = (int_64)-3838636584476511744
	CALL $85(($14 + [16]), $1)
	*((($14 + [16]) + [40])) = *(($3 + [8]))
	*(($14 + [72])) = *(($4 + [8]))
	*(($14 + [88])) = *(($5 + [8]))
	*($14 + [32]) = *($24)
	*($14 + [40]) = *($26)
	*($14 + [48]) = *($3)
	*($14 + [64]) = *($4)
	*($14 + [80]) = *($5)
	CALL $85(($14 + [96]), $6)
	CALL $85(($14 + [108]), $7)
	CALL $85(($14 + [120]), $8)
	CALL $85(($14 + [132]), $9)
	CALL $85(($14 + [144]), $10)
	CALL $85(($14 + [156]), $12)
	$20 = (($14 + [192]) + [40])
	$17 = *($20)
	if ( ((uint_32)$17 >= (uint_32)*($19)) ){ goto $label$145 }
	$27 = [166]
	goto $label$23 
	
.LABEL $label$326
	$18 = *($0)
	*($17 + [8]) = *($14 + [296])
	*($17) = $18
	*($17 + [16 align=4]) = (int_64)0
	*(($3 = ($17 + [24]))) = [0]
	$19 = CALL _Znwj([16])
	*($17 + [16]) = $19
	$32 = ($19 + [16])
	*($3) = $32
	*(($19 + [8])) = *((($14 + [176]) + [8]))
	*($19) = *($14 + [176])
	*(($17 + [20])) = $32
	CALL $17(($17 + [28]), ($14 + [16]))
	*($20) = (*($20) + [40])
	$17 = [1]
	if ( (*($14 + [156]) & [1]) ){ goto $label$142 }
	goto $label$143 
	
.LABEL $label$325
	CALL $18(($14 + [228]), ($14 + [176]), $0, ($14 + [296]), ($14 + [16]))
	$17 = [1]
	if ( ((*($14 + [156]) & [1]) == 0) ){ goto $label$144 }
	$27 = [128]
	goto $label$23 
	
.LABEL $label$324
	CALL _ZdlPv(*(($14 + [164])))
	$27 = [129]
	goto $label$23 
	
.LABEL $label$323
	if ( (*($14 + [144]) & $17) ){ goto $label$141 }
	$27 = [165]
	goto $label$23 
	
.LABEL $label$322
	$17 = [1]
	if ( (*($14 + [132]) & [1]) ){ goto $label$140 }
	$27 = [164]
	goto $label$23 
	
.LABEL $label$321
	if ( (*($14 + [120]) & $17) ){ goto $label$138 }
	$27 = [163]
	goto $label$23 
	
.LABEL $label$320
	$17 = [1]
	if ( (*($14 + [108]) & [1]) ){ goto $label$136 }
	$27 = [162]
	goto $label$23 
	
.LABEL $label$319
	if ( (*($14 + [96]) & $17) ){ goto $label$134 }
	$27 = [161]
	goto $label$23 
	
.LABEL $label$318
	$17 = [1]
	if ( ((*($14 + [16]) & [1]) == 0) ){ goto $label$132 }
	$27 = [135]
	goto $label$23 
	
.LABEL $label$317
	CALL _ZdlPv(*($14 + [24]))
	$27 = [136]
	goto $label$23 
	
.LABEL $label$316
	*(($14 + [212])) = [0]
	*($14 + [24]) = (int_64)0
	*($14 + [16]) = *($16)
	$18 = *($0)
	CALL $19(($14 + [176]), ($14 + [192]))
	$19 = *($14 + [176])
	CALL send_deferred(($14 + [16]), $18, $19, (*($14 + [180]) - $19), $17)
	$17 = *($14 + [176])
	if ( ($17 == 0) ){ goto $label$129 }
	$27 = [137]
	goto $label$23 
	
.LABEL $label$315
	*($14 + [180]) = $17
	CALL _ZdlPv($17)
	$27 = [138]
	goto $label$23 
	
.LABEL $label$314
	CALL $20(($14 + [192]))
	$20 = *($14 + [280])
	if ( ($20 == 0) ){ goto $label$128 }
	$27 = [139]
	goto $label$23 
	
.LABEL $label$313
	$16 = ($14 + [284])
	$17 = *($16)
	if ( ((int_32)$17 == (int_32)$20) ){ goto $label$127 }
	$27 = [140]
	goto $label$23 
	
.LABEL $label$312
	$27 = [141]
	goto $label$23 
	
.LABEL $label$311
	$17 = ($17 + [-24])
	$19 = *($17)
	*($17) = [0]
	if ( ($19 == 0) ){ goto $label$125 }
	$27 = [142]
	goto $label$23 
	
.LABEL $label$310
	CALL $15($19)
	CALL _ZdlPv($19)
	$27 = [143]
	goto $label$23 
	
.LABEL $label$309
	if ( ((int_32)$20 != (int_32)$17) ){ goto $label$126 }
	$27 = [144]
	goto $label$23 
	
.LABEL $label$308
	$17 = *(($14 + [280]))
	goto $label$124 
	
.LABEL $label$307
	CALL _ZdlPv(*(($14 + [152])))
	$17 = [1]
	if ( ((*($14 + [132]) & [1]) == 0) ){ goto $label$139 }
	$27 = [131]
	goto $label$23 
	
.LABEL $label$306
	CALL _ZdlPv(*(($14 + [140])))
	if ( ((*($14 + [120]) & $17) == 0) ){ goto $label$137 }
	$27 = [132]
	goto $label$23 
	
.LABEL $label$305
	CALL _ZdlPv(*(($14 + [128])))
	$17 = [1]
	if ( ((*($14 + [108]) & [1]) == 0) ){ goto $label$135 }
	$27 = [133]
	goto $label$23 
	
.LABEL $label$304
	CALL _ZdlPv(*(($14 + [116])))
	if ( ((*($14 + [96]) & $17) == 0) ){ goto $label$133 }
	$27 = [134]
	goto $label$23 
	
.LABEL $label$303
	CALL _ZdlPv(*(($14 + [104])))
	$17 = [1]
	if ( (*($14 + [16]) & [1]) ){ goto $label$130 }
	goto $label$131 
	
.LABEL $label$302
	$17 = $20
	$27 = [145]
	goto $label$23 
	
.LABEL $label$301
	*($16) = $20
	CALL _ZdlPv($17)
	$27 = [146]
	goto $label$23 
	
.LABEL $label$300
	$20 = *($14 + [336])
	if ( ($20 == 0) ){ goto $label$123 }
	$27 = [147]
	goto $label$23 
	
.LABEL $label$299
	$16 = ($14 + [340])
	$17 = *($16)
	if ( ((int_32)$17 == (int_32)$20) ){ goto $label$122 }
	$27 = [148]
	goto $label$23 
	
.LABEL $label$298
	$27 = [149]
	goto $label$23 
	
.LABEL $label$297
	$17 = ($17 + [-24])
	$19 = *($17)
	*($17) = [0]
	if ( ($19 == 0) ){ goto $label$120 }
	$27 = [150]
	goto $label$23 
	
.LABEL $label$296
	CALL _ZdlPv($19)
	$27 = [151]
	goto $label$23 
	
.LABEL $label$295
	if ( ((int_32)$20 != (int_32)$17) ){ goto $label$121 }
	$27 = [152]
	goto $label$23 
	
.LABEL $label$294
	$17 = *(($14 + [336]))
	goto $label$119 
	
.LABEL $label$293
	$17 = $20
	$27 = [153]
	goto $label$23 
	
.LABEL $label$292
	*($16) = $20
	CALL _ZdlPv($17)
	$27 = [154]
	goto $label$23 
	
.LABEL $label$291
	if ( (*($14 + [384]) & [1]) ){ goto $label$118 }
	$27 = [158]
	goto $label$23 
	
.LABEL $label$290
	if ( (*($14 + [400]) & [1]) ){ goto $label$117 }
	$27 = [157]
	goto $label$23 
	
.LABEL $label$289
	$global$0 = ($14 + [416])
	return (unreachable)
	
.LABEL $label$288
	CALL _ZdlPv(*(($22 + [8])))
	if ( ((*($14 + [400]) & [1]) == 0) ){ goto $label$116 }
	$27 = [156]
	goto $label$23 
	
.LABEL $label$287
	CALL _ZdlPv(*(($21 + [8])))
	$global$0 = ($14 + [416])
	return (unreachable)
	
.LABEL $label$286
	CALL $84(($14 + [296]))
	
.LABEL $label$285
	CALL $84(($14 + [296]))
	
.LABEL $label$284
	CALL $84(($14 + [296]))
	
.LABEL $label$283
	CALL $84(($14 + [296]))
	
.LABEL $label$282
	CALL $84(($14 + [296]))
	
.LABEL $label$281
	CALL $84(($14 + [296]))
	
.LABEL $label$280
	CALL $84(($14 + [296]))
	
.LABEL $label$279
	$27 = [7]
	goto $label$23 
	
.LABEL $label$278
	$27 = [1]
	goto $label$23 
	
.LABEL $label$277
	$27 = [3]
	goto $label$23 
	
.LABEL $label$276
	$27 = [0]
	goto $label$23 
	
.LABEL $label$275
	$27 = [2]
	goto $label$23 
	
.LABEL $label$274
	$27 = [4]
	goto $label$23 
	
.LABEL $label$273
	$27 = [361]
	goto $label$23 
	
.LABEL $label$272
	$27 = [9]
	goto $label$23 
	
.LABEL $label$271
	$27 = [6]
	goto $label$23 
	
.LABEL $label$270
	$27 = [6]
	goto $label$23 
	
.LABEL $label$269
	$27 = [8]
	goto $label$23 
	
.LABEL $label$268
	$27 = [359]
	goto $label$23 
	
.LABEL $label$267
	$27 = [10]
	goto $label$23 
	
.LABEL $label$266
	$27 = [11]
	goto $label$23 
	
.LABEL $label$265
	$27 = [12]
	goto $label$23 
	
.LABEL $label$264
	$27 = [357]
	goto $label$23 
	
.LABEL $label$263
	$27 = [14]
	goto $label$23 
	
.LABEL $label$262
	$27 = [16]
	goto $label$23 
	
.LABEL $label$261
	$27 = [15]
	goto $label$23 
	
.LABEL $label$260
	$27 = [18]
	goto $label$23 
	
.LABEL $label$259
	$27 = [20]
	goto $label$23 
	
.LABEL $label$258
	$27 = [22]
	goto $label$23 
	
.LABEL $label$257
	$27 = [24]
	goto $label$23 
	
.LABEL $label$256
	$27 = [26]
	goto $label$23 
	
.LABEL $label$255
	$27 = [27]
	goto $label$23 
	
.LABEL $label$254
	$27 = [28]
	goto $label$23 
	
.LABEL $label$253
	$27 = [354]
	goto $label$23 
	
.LABEL $label$252
	$27 = [29]
	goto $label$23 
	
.LABEL $label$251
	$27 = [30]
	goto $label$23 
	
.LABEL $label$250
	$27 = [31]
	goto $label$23 
	
.LABEL $label$249
	$27 = [33]
	goto $label$23 
	
.LABEL $label$248
	$27 = [34]
	goto $label$23 
	
.LABEL $label$247
	$27 = [36]
	goto $label$23 
	
.LABEL $label$246
	$27 = [34]
	goto $label$23 
	
.LABEL $label$245
	$27 = [36]
	goto $label$23 
	
.LABEL $label$244
	$27 = [35]
	goto $label$23 
	
.LABEL $label$243
	$27 = [35]
	goto $label$23 
	
.LABEL $label$242
	$27 = [37]
	goto $label$23 
	
.LABEL $label$241
	$27 = [38]
	goto $label$23 
	
.LABEL $label$240
	$27 = [344]
	goto $label$23 
	
.LABEL $label$239
	$27 = [39]
	goto $label$23 
	
.LABEL $label$238
	$27 = [40]
	goto $label$23 
	
.LABEL $label$237
	$27 = [41]
	goto $label$23 
	
.LABEL $label$236
	$27 = [43]
	goto $label$23 
	
.LABEL $label$235
	$27 = [44]
	goto $label$23 
	
.LABEL $label$234
	$27 = [46]
	goto $label$23 
	
.LABEL $label$233
	$27 = [44]
	goto $label$23 
	
.LABEL $label$232
	$27 = [46]
	goto $label$23 
	
.LABEL $label$231
	$27 = [45]
	goto $label$23 
	
.LABEL $label$230
	$27 = [45]
	goto $label$23 
	
.LABEL $label$229
	$27 = [47]
	goto $label$23 
	
.LABEL $label$228
	$27 = [48]
	goto $label$23 
	
.LABEL $label$227
	$27 = [49]
	goto $label$23 
	
.LABEL $label$226
	$27 = [333]
	goto $label$23 
	
.LABEL $label$225
	$27 = [50]
	goto $label$23 
	
.LABEL $label$224
	$27 = [51]
	goto $label$23 
	
.LABEL $label$223
	$27 = [52]
	goto $label$23 
	
.LABEL $label$222
	$27 = [54]
	goto $label$23 
	
.LABEL $label$221
	$27 = [55]
	goto $label$23 
	
.LABEL $label$220
	$27 = [57]
	goto $label$23 
	
.LABEL $label$219
	$27 = [55]
	goto $label$23 
	
.LABEL $label$218
	$27 = [57]
	goto $label$23 
	
.LABEL $label$217
	$27 = [56]
	goto $label$23 
	
.LABEL $label$216
	$27 = [56]
	goto $label$23 
	
.LABEL $label$215
	$27 = [325]
	goto $label$23 
	
.LABEL $label$214
	$27 = [59]
	goto $label$23 
	
.LABEL $label$213
	$27 = [61]
	goto $label$23 
	
.LABEL $label$212
	$27 = [60]
	goto $label$23 
	
.LABEL $label$211
	$27 = [63]
	goto $label$23 
	
.LABEL $label$210
	$27 = [65]
	goto $label$23 
	
.LABEL $label$209
	$27 = [67]
	goto $label$23 
	
.LABEL $label$208
	$27 = [69]
	goto $label$23 
	
.LABEL $label$207
	$27 = [71]
	goto $label$23 
	
.LABEL $label$206
	$27 = [72]
	goto $label$23 
	
.LABEL $label$205
	$27 = [73]
	goto $label$23 
	
.LABEL $label$204
	$27 = [74]
	goto $label$23 
	
.LABEL $label$203
	$27 = [321]
	goto $label$23 
	
.LABEL $label$202
	$27 = [75]
	goto $label$23 
	
.LABEL $label$201
	$27 = [76]
	goto $label$23 
	
.LABEL $label$200
	$27 = [77]
	goto $label$23 
	
.LABEL $label$199
	$27 = [79]
	goto $label$23 
	
.LABEL $label$198
	$27 = [80]
	goto $label$23 
	
.LABEL $label$197
	$27 = [82]
	goto $label$23 
	
.LABEL $label$196
	$27 = [80]
	goto $label$23 
	
.LABEL $label$195
	$27 = [82]
	goto $label$23 
	
.LABEL $label$194
	$27 = [81]
	goto $label$23 
	
.LABEL $label$193
	$27 = [81]
	goto $label$23 
	
.LABEL $label$192
	$27 = [313]
	goto $label$23 
	
.LABEL $label$191
	$27 = [84]
	goto $label$23 
	
.LABEL $label$190
	$27 = [86]
	goto $label$23 
	
.LABEL $label$189
	$27 = [85]
	goto $label$23 
	
.LABEL $label$188
	$27 = [88]
	goto $label$23 
	
.LABEL $label$187
	$27 = [90]
	goto $label$23 
	
.LABEL $label$186
	$27 = [92]
	goto $label$23 
	
.LABEL $label$185
	$27 = [94]
	goto $label$23 
	
.LABEL $label$184
	$27 = [96]
	goto $label$23 
	
.LABEL $label$183
	$27 = [97]
	goto $label$23 
	
.LABEL $label$182
	$27 = [97]
	goto $label$23 
	
.LABEL $label$181
	$27 = [98]
	goto $label$23 
	
.LABEL $label$180
	$27 = [98]
	goto $label$23 
	
.LABEL $label$179
	$27 = [99]
	goto $label$23 
	
.LABEL $label$178
	$27 = [99]
	goto $label$23 
	
.LABEL $label$177
	$27 = [99]
	goto $label$23 
	
.LABEL $label$176
	$27 = [99]
	goto $label$23 
	
.LABEL $label$175
	$27 = [99]
	goto $label$23 
	
.LABEL $label$174
	$27 = [99]
	goto $label$23 
	
.LABEL $label$173
	$27 = [99]
	goto $label$23 
	
.LABEL $label$172
	$27 = [99]
	goto $label$23 
	
.LABEL $label$171
	$27 = [100]
	goto $label$23 
	
.LABEL $label$170
	$27 = [101]
	goto $label$23 
	
.LABEL $label$169
	$27 = [183]
	goto $label$23 
	
.LABEL $label$168
	$27 = [102]
	goto $label$23 
	
.LABEL $label$167
	$27 = [103]
	goto $label$23 
	
.LABEL $label$166
	$27 = [104]
	goto $label$23 
	
.LABEL $label$165
	$27 = [106]
	goto $label$23 
	
.LABEL $label$164
	$27 = [107]
	goto $label$23 
	
.LABEL $label$163
	$27 = [109]
	goto $label$23 
	
.LABEL $label$162
	$27 = [107]
	goto $label$23 
	
.LABEL $label$161
	$27 = [109]
	goto $label$23 
	
.LABEL $label$160
	$27 = [108]
	goto $label$23 
	
.LABEL $label$159
	$27 = [108]
	goto $label$23 
	
.LABEL $label$158
	$27 = [110]
	goto $label$23 
	
.LABEL $label$157
	$27 = [174]
	goto $label$23 
	
.LABEL $label$156
	$27 = [113]
	goto $label$23 
	
.LABEL $label$155
	$27 = [115]
	goto $label$23 
	
.LABEL $label$154
	$27 = [117]
	goto $label$23 
	
.LABEL $label$153
	$27 = [119]
	goto $label$23 
	
.LABEL $label$152
	$27 = [121]
	goto $label$23 
	
.LABEL $label$151
	$27 = [122]
	goto $label$23 
	
.LABEL $label$150
	$27 = [124]
	goto $label$23 
	
.LABEL $label$149
	$27 = [124]
	goto $label$23 
	
.LABEL $label$148
	$27 = [123]
	goto $label$23 
	
.LABEL $label$147
	$27 = [125]
	goto $label$23 
	
.LABEL $label$146
	$27 = [126]
	goto $label$23 
	
.LABEL $label$145
	$27 = [127]
	goto $label$23 
	
.LABEL $label$144
	$27 = [129]
	goto $label$23 
	
.LABEL $label$143
	$27 = [129]
	goto $label$23 
	
.LABEL $label$142
	$27 = [128]
	goto $label$23 
	
.LABEL $label$141
	$27 = [130]
	goto $label$23 
	
.LABEL $label$140
	$27 = [131]
	goto $label$23 
	
.LABEL $label$139
	$27 = [164]
	goto $label$23 
	
.LABEL $label$138
	$27 = [132]
	goto $label$23 
	
.LABEL $label$137
	$27 = [163]
	goto $label$23 
	
.LABEL $label$136
	$27 = [133]
	goto $label$23 
	
.LABEL $label$135
	$27 = [162]
	goto $label$23 
	
.LABEL $label$134
	$27 = [134]
	goto $label$23 
	
.LABEL $label$133
	$27 = [161]
	goto $label$23 
	
.LABEL $label$132
	$27 = [136]
	goto $label$23 
	
.LABEL $label$131
	$27 = [136]
	goto $label$23 
	
.LABEL $label$130
	$27 = [135]
	goto $label$23 
	
.LABEL $label$129
	$27 = [138]
	goto $label$23 
	
.LABEL $label$128
	$27 = [146]
	goto $label$23 
	
.LABEL $label$127
	$27 = [160]
	goto $label$23 
	
.LABEL $label$126
	$27 = [141]
	goto $label$23 
	
.LABEL $label$125
	$27 = [143]
	goto $label$23 
	
.LABEL $label$124
	$27 = [145]
	goto $label$23 
	
.LABEL $label$123
	$27 = [154]
	goto $label$23 
	
.LABEL $label$122
	$27 = [159]
	goto $label$23 
	
.LABEL $label$121
	$27 = [149]
	goto $label$23 
	
.LABEL $label$120
	$27 = [151]
	goto $label$23 
	
.LABEL $label$119
	$27 = [153]
	goto $label$23 
	
.LABEL $label$118
	$27 = [155]
	goto $label$23 
	
.LABEL $label$117
	$27 = [156]
	goto $label$23 
	
.LABEL $label$116
	$27 = [157]
	goto $label$23 
	
.LABEL $label$115
	$27 = [169]
	goto $label$23 
	
.LABEL $label$114
	$27 = [172]
	goto $label$23 
	
.LABEL $label$113
	$27 = [177]
	goto $label$23 
	
.LABEL $label$112
	$27 = [178]
	goto $label$23 
	
.LABEL $label$111
	$27 = [186]
	goto $label$23 
	
.LABEL $label$110
	$27 = [188]
	goto $label$23 
	
.LABEL $label$109
	$27 = [188]
	goto $label$23 
	
.LABEL $label$108
	$27 = [188]
	goto $label$23 
	
.LABEL $label$107
	$27 = [262]
	goto $label$23 
	
.LABEL $label$106
	$27 = [189]
	goto $label$23 
	
.LABEL $label$105
	$27 = [190]
	goto $label$23 
	
.LABEL $label$104
	$27 = [258]
	goto $label$23 
	
.LABEL $label$103
	$27 = [191]
	goto $label$23 
	
.LABEL $label$102
	$27 = [192]
	goto $label$23 
	
.LABEL $label$101
	$27 = [193]
	goto $label$23 
	
.LABEL $label$100
	$27 = [195]
	goto $label$23 
	
.LABEL $label$99
	$27 = [196]
	goto $label$23 
	
.LABEL $label$98
	$27 = [198]
	goto $label$23 
	
.LABEL $label$97
	$27 = [196]
	goto $label$23 
	
.LABEL $label$96
	$27 = [198]
	goto $label$23 
	
.LABEL $label$95
	$27 = [197]
	goto $label$23 
	
.LABEL $label$94
	$27 = [197]
	goto $label$23 
	
.LABEL $label$93
	$27 = [199]
	goto $label$23 
	
.LABEL $label$92
	$27 = [200]
	goto $label$23 
	
.LABEL $label$91
	$27 = [248]
	goto $label$23 
	
.LABEL $label$90
	$27 = [201]
	goto $label$23 
	
.LABEL $label$89
	$27 = [202]
	goto $label$23 
	
.LABEL $label$88
	$27 = [203]
	goto $label$23 
	
.LABEL $label$87
	$27 = [205]
	goto $label$23 
	
.LABEL $label$86
	$27 = [206]
	goto $label$23 
	
.LABEL $label$85
	$27 = [208]
	goto $label$23 
	
.LABEL $label$84
	$27 = [206]
	goto $label$23 
	
.LABEL $label$83
	$27 = [208]
	goto $label$23 
	
.LABEL $label$82
	$27 = [207]
	goto $label$23 
	
.LABEL $label$81
	$27 = [207]
	goto $label$23 
	
.LABEL $label$80
	$27 = [239]
	goto $label$23 
	
.LABEL $label$79
	$27 = [210]
	goto $label$23 
	
.LABEL $label$78
	$27 = [212]
	goto $label$23 
	
.LABEL $label$77
	$27 = [211]
	goto $label$23 
	
.LABEL $label$76
	$27 = [214]
	goto $label$23 
	
.LABEL $label$75
	$27 = [216]
	goto $label$23 
	
.LABEL $label$74
	$27 = [218]
	goto $label$23 
	
.LABEL $label$73
	$27 = [220]
	goto $label$23 
	
.LABEL $label$72
	$27 = [222]
	goto $label$23 
	
.LABEL $label$71
	$27 = [237]
	goto $label$23 
	
.LABEL $label$70
	$27 = [224]
	goto $label$23 
	
.LABEL $label$69
	$27 = [226]
	goto $label$23 
	
.LABEL $label$68
	$27 = [225]
	goto $label$23 
	
.LABEL $label$67
	$27 = [228]
	goto $label$23 
	
.LABEL $label$66
	$27 = [230]
	goto $label$23 
	
.LABEL $label$65
	$27 = [232]
	goto $label$23 
	
.LABEL $label$64
	$27 = [234]
	goto $label$23 
	
.LABEL $label$63
	$27 = [242]
	goto $label$23 
	
.LABEL $label$62
	$27 = [243]
	goto $label$23 
	
.LABEL $label$61
	$27 = [252]
	goto $label$23 
	
.LABEL $label$60
	$27 = [253]
	goto $label$23 
	
.LABEL $label$59
	$27 = [265]
	goto $label$23 
	
.LABEL $label$58
	$27 = [268]
	goto $label$23 
	
.LABEL $label$57
	$27 = [268]
	goto $label$23 
	
.LABEL $label$56
	$27 = [268]
	goto $label$23 
	
.LABEL $label$55
	$27 = [268]
	goto $label$23 
	
.LABEL $label$54
	$27 = [286]
	goto $label$23 
	
.LABEL $label$53
	$27 = [283]
	goto $label$23 
	
.LABEL $label$52
	$27 = [270]
	goto $label$23 
	
.LABEL $label$51
	$27 = [272]
	goto $label$23 
	
.LABEL $label$50
	$27 = [271]
	goto $label$23 
	
.LABEL $label$49
	$27 = [274]
	goto $label$23 
	
.LABEL $label$48
	$27 = [276]
	goto $label$23 
	
.LABEL $label$47
	$27 = [278]
	goto $label$23 
	
.LABEL $label$46
	$27 = [280]
	goto $label$23 
	
.LABEL $label$45
	$27 = [289]
	goto $label$23 
	
.LABEL $label$44
	$27 = [292]
	goto $label$23 
	
.LABEL $label$43
	$27 = [292]
	goto $label$23 
	
.LABEL $label$42
	$27 = [292]
	goto $label$23 
	
.LABEL $label$41
	$27 = [292]
	goto $label$23 
	
.LABEL $label$40
	$27 = [310]
	goto $label$23 
	
.LABEL $label$39
	$27 = [307]
	goto $label$23 
	
.LABEL $label$38
	$27 = [294]
	goto $label$23 
	
.LABEL $label$37
	$27 = [296]
	goto $label$23 
	
.LABEL $label$36
	$27 = [295]
	goto $label$23 
	
.LABEL $label$35
	$27 = [298]
	goto $label$23 
	
.LABEL $label$34
	$27 = [300]
	goto $label$23 
	
.LABEL $label$33
	$27 = [302]
	goto $label$23 
	
.LABEL $label$32
	$27 = [304]
	goto $label$23 
	
.LABEL $label$31
	$27 = [316]
	goto $label$23 
	
.LABEL $label$30
	$27 = [317]
	goto $label$23 
	
.LABEL $label$29
	$27 = [328]
	goto $label$23 
	
.LABEL $label$28
	$27 = [329]
	goto $label$23 
	
.LABEL $label$27
	$27 = [338]
	goto $label$23 
	
.LABEL $label$26
	$27 = [339]
	goto $label$23 
	
.LABEL $label$25
	$27 = [348]
	goto $label$23 
	
.LABEL $label$24
	$27 = [349]
	goto $label$23 
	$27
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $2 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [9512])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
	
.LABEL $label$1
	$5 = [0]
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $3($0, $4)
	CALL eosio_assert(((int_32)*($5 + [40]) == (int_32)$0), [9512])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), $2)
	return $5
}

int_32 .FUNC $3 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [9563])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $105($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	*(($5 = CALL _Znwj([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [32])
	CALL $57(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$6 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $6)
	*($3 + [4]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $58(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $108($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC memory ()
{
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	float_64 $10
	$1 = ($global$0 - [48])
	$global$0 = $1
	$2 = CALL $102([8192])
	if ( ($2 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8952])
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = (int_64)0
	
.LOOP $label$5:
	$4 = *(($2 + [8191]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8997])
	
.LABEL $label$6
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$5 }
	$3 = ((int_64)$3 & (int_64)72057594037927935)
	goto $label$1 
	
.LABEL $label$2
	$3 = (int_64)0
	
.LABEL $label$1
	*(($1 + [40])) = [0]
	*($1 + [16]) = $3
	*($1 + [8]) = (int_64)4229331772105823536
	*($1 + [24]) = (int_64)-1
	$5 = (int_64)0
	*($1 + [32]) = (int_64)0
	$2 = CALL $102([8192])
	if ( ($2 <= [8]) ){ goto $label$9 }
	CALL eosio_assert([0], [8952])
	goto $label$8 
	
.LABEL $label$9
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$3 = (int_64)0
	
.LOOP $label$10:
	$4 = *(($2 + [8191]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$11 }
	CALL eosio_assert([0], [8997])
	
.LABEL $label$11
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$10 }
	$5 = ((int_64)$3 & (int_64)72057594037927935)
	
.LABEL $label$7
	$3 = (int_64)0
	$6 = CALL $2(($1 + [8]), $5, [8196])
	CALL eosio_assert(((int_64)*($6 + [16]) > (int_64)0), [8301])
	$2 = CALL $102([8192])
	if ( ($2 <= [8]) ){ goto $label$14 }
	CALL eosio_assert([0], [8952])
	goto $label$13 
	
.LABEL $label$14
	if ( ($2 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$3 = (int_64)0
	
.LOOP $label$15:
	$4 = *(($2 + [8191]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$16 }
	CALL eosio_assert([0], [8997])
	
.LABEL $label$16
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$15 }
	$3 = ((int_64)$3 & (int_64)72057594037927935)
	
.LABEL $label$12
	CALL eosio_assert([1], [9050])
	$2 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$3 = $5
	$4 = [1]
	$7 = $2
	$2 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$20
	$3 = $5
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$7 = ($2 + [1])
	$2 = $7
	if ( $4 ){ goto $label$21 }
	$4 = [1]
	$2 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	$4 = [0]
	
.LABEL $label$17
	CALL eosio_assert($4, [9099])
	$2 = CALL $102([8192])
	if ( ($2 <= [8]) ){ goto $label$25 }
	CALL eosio_assert([0], [8952])
	goto $label$24 
	
.LABEL $label$25
	if ( ($2 == 0) ){ goto $label$23 }
	
.LABEL $label$24
	$3 = (int_64)0
	
.LOOP $label$26:
	$4 = *(($2 + [8191]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$27 }
	CALL eosio_assert([0], [8997])
	
.LABEL $label$27
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$26 }
	$8 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)4)
	goto $label$22 
	
.LABEL $label$23
	$8 = (int_64)4
	
.LABEL $label$22
	CALL eosio_assert([1], [9050])
	$3 = (uint_64)$8 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$30:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$29 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$31 }
	$3 = $5
	$4 = [1]
	$7 = $2
	$2 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$31
	$3 = $5
	
.LOOP $label$32:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$29 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$7 = ($2 + [1])
	$2 = $7
	if ( $4 ){ goto $label$32 }
	$4 = [1]
	$2 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$29
	$4 = [0]
	
.LABEL $label$28
	CALL eosio_assert($4, [9099])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)$8), [9119])
	$9 = [1]
	$3 = *($6)
	if ( ((int_64)$3 < (int_64)22000000000000) ){ goto $label$33 }
	CALL eosio_assert(((int_64)$8 == (int_64)*(($6 + [8]))), [9178])
	$9 = [1]
	CALL eosio_assert([1], [9226])
	CALL eosio_assert(((int_64)$3 < (int_64)4611708018427387904), [9248])
	$3 = ((int_64)$3 + (int_64)-22000000000000)
	if ( (int_64)($3 == 0) ){ goto $label$33 }
	$10 = ((float_64)(CASTING float_64)(int_64 $3) / (float_64)((float_64)(CASTING float_64)(int_64 *(($6 + [16]))) * (float_64)(float_64)0.05))
	if ( (((float_64)$10 < (float_64)(float_64)4294967296) & ((float_64)$10 >= (float_64)(float_64)0)) ){ goto $label$35 }
	$2 = [0]
	goto $label$34 
	
.LABEL $label$35
	$2 = (CASTING uint_32)(float_64 $10)
	
.LABEL $label$34
	$9 = ($2 + [1])
	
.LABEL $label$33
	$7 = *($1 + [32])
	if ( ($7 == 0) ){ goto $label$36 }
	$6 = ($1 + [36])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$38 }
	
.LOOP $label$39:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$40 }
	CALL _ZdlPv($4)
	
.LABEL $label$40
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$39 }
	$2 = *(($1 + [32]))
	goto $label$37 
	
.LABEL $label$38
	$2 = $7
	
.LABEL $label$37
	*($6) = $7
	CALL _ZdlPv($2)
	
.LABEL $label$36
	$global$0 = ($1 + [48])
	return $9
}

void .FUNC $14 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $91($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $15($1)
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $15 (int_32 $0)
{
	int_32 $1
	if ( (*($0 + [148]) & [1]) ){ goto $label$13 }
	if ( (*($0 + [136]) & [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL _ZdlPv(*(($0 + [156])))
	if ( ((*($0 + [136]) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL _ZdlPv(*(($0 + [144])))
	$1 = [1]
	if ( ((*($0 + [124]) & [1]) == 0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$1 = [1]
	if ( (*($0 + [124]) & [1]) ){ goto $label$9 }
	
.LABEL $label$10
	if ( (*($0 + [112]) & $1) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL _ZdlPv(*(($0 + [132])))
	if ( ((*($0 + [112]) & $1) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv(*(($0 + [120])))
	$1 = [1]
	if ( ((*($0 + [100]) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$1 = [1]
	if ( (*($0 + [100]) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	if ( (*($0 + [88]) & $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL _ZdlPv(*(($0 + [108])))
	if ( ((*($0 + [88]) & $1) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL _ZdlPv(*(($0 + [96])))
	if ( ((*($0 + [8]) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($0 + [8]) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	return $0
	
.LABEL $label$1
	CALL _ZdlPv(*(($0 + [16])))
	return $0
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [9864])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$8()), [9909])
	$2 = *($0 + [24])
	$3 = $2
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$1 }
	$6 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) != (int_64)$6) ){ goto $label$2 }
	$3 = $5
	goto $label$1 
	
.LABEL $label$2
	$7 = ($2 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($5 + [-48])
	$3 = ($5 + [-24])
	$5 = $3
	if ( ((int_64)*(*($8)) != (int_64)$6) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$3 = $2
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)$2), [9959])
	$2 = *($4)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$7 }
	$5 = $3
	
.LOOP $label$8:
	$8 = *($5)
	*($5) = [0]
	$7 = ($5 + [-24])
	$3 = *($7)
	*($7) = $8
	if ( ($3 == 0) ){ goto $label$9 }
	CALL _ZdlPv($3)
	
.LABEL $label$9
	*(($5 + [-8])) = *(($5 + [16]))
	*(($5 + [-16])) = *(($5 + [8]))
	$5 = ($5 + [24])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = ($3 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL _ZdlPv($5)
	
.LABEL $label$11
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($2 + [16]) = [0]
	$3 = *($1)
	$4 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($4 + [32])
	$5 = (CASTING uint_64)(uint_32 $4)
	*($2 + [24]) = ($2 + [16])
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2 + [16]) = $3
	*($2) = $1
	CALL $66($2, ($2 + [24]))
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $11($0, $3)
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$4 = [0]
	$3 = [0]
	
.LABEL $label$2
	*($2 + [4]) = $3
	*($2) = $3
	*($2 + [8]) = $4
	*($2 + [16]) = $2
	*($2 + [24]) = $1
	CALL $67(($2 + [24]), ($2 + [16]))
	$global$0 = ($2 + [32])
}

int_32 .FUNC $10 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL _Znwj([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [24])
	$1 = ( *(($4 + [28])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [24])
	$2 = (CASTING uint_64)(uint_32 $1)
	$6 = ($4 + [24])
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $11($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [8]) = $7
	*($5 + [16]) = $1
	$1 = ($1 - $7)
	CALL eosio_assert(((int_32)$1 > (int_32)[7]), [9506])
	CALL memcpy($7, $4, [8])
	CALL eosio_assert(((int_32)($1 + [-8]) > (int_32)[7]), [9506])
	CALL memcpy(($7 + [8]), ($4 + [8]), [8])
	*($5 + [24]) = *(($4 + [16]))
	CALL eosio_assert(((int_32)($1 + [-16]) > (int_32)[7]), [9506])
	CALL memcpy(($7 + [16]), ($5 + [24]), [8])
	*($5 + [12]) = ($7 + [24])
	CALL $22(($5 + [8]), $6)
	$global$0 = ($5 + [32])
	return $0
}

void .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $91($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [9506])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($4 + [4]), ($0 + [16]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	*($2 + [8]) = *(($0 + [24]))
	CALL eosio_assert(((int_32)(*($4 + [8]) - $3) > (int_32)[7]), [9506])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($4 + [4]), ($0 + [32]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	*($2 + [8]) = *(($0 + [40]))
	CALL eosio_assert(((int_32)(*($4 + [8]) - $3) > (int_32)[7]), [9506])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($4 + [4]), ($0 + [48]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	*($2 + [8]) = *(($0 + [56]))
	CALL eosio_assert(((int_32)(*($4 + [8]) - $3) > (int_32)[7]), [9506])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $22(*($1), ($0 + [64]))
	$global$0 = ($2 + [16])
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-3838636682115022848, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	CALL $34($6, $8)
	*($3 + [4]) = [0]
	*($3) = $6
	$7 = *(*(CALL $60($3) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [16])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [9672])
	*($1) = *(($6 + [16]))
	CALL $87(($1 + [8]), *($5 + [4]))
	*($1 + [24]) = *(*($5 + [8]))
	*($1 + [32]) = *(*($5 + [12]))
	$6 = *($5 + [16])
	*($1 + [40]) = *($6)
	*(($1 + [48])) = *(($6 + [8]))
	$6 = *($5 + [20])
	*($1 + [56]) = *($6)
	*(($1 + [64])) = *(($6 + [8]))
	$6 = *($5 + [24])
	*($1 + [72]) = *($6)
	*(($1 + [80])) = *(($6 + [8]))
	CALL $87(($1 + [88]), *($5 + [28]))
	CALL $87(($1 + [100]), *($5 + [32]))
	CALL $87(($1 + [112]), *($5 + [36]))
	CALL $87(($1 + [124]), *($5 + [40]))
	CALL $87(($1 + [136]), *($5 + [44]))
	CALL $87(($1 + [148]), *($5 + [48]))
	*($3) = [0]
	CALL $61($3, $1)
	$6 = *($3)
	if ( ($6 <= [513]) ){ goto $label$4 }
	$5 = CALL $105($6)
	goto $label$3 
	
.LABEL $label$4
	$5 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$3
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($5 + $6)
	CALL $62($3, $1)
	$7 = *($1)
	*($1 + [164]) = CALL db_store_i64(*($4 + [8]), (int_64)-3838636682115022848, *(*($0 + [8])), $7, $5, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$7 }
	if ( ((uint_64)$7 >= (uint_64)*($4 + [16])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $108($5)
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [16])
}

void .FUNC $75 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12)
{
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$13 = ($global$0 - [208])
	$global$0 = $13
	$0 = *($0 + [4])
	$14 = *($0 + [4])
	$15 = (*($0) + int_32($14 >> [1]))
	$16 = *($0)
	if ( (($14 & [1]) == 0) ){ goto $label$1 }
	$16 = *((*($15) + $16))
	
.LABEL $label$1
	$0 = CALL $85(($13 + [192]), $1)
	*(($14 = (($13 + [176]) + [8]))) = *(($4 + [8]))
	*(($17 = (($13 + [160]) + [8]))) = *(($5 + [8]))
	*(($18 = (($13 + [144]) + [8]))) = *(($6 + [8]))
	*($13 + [176]) = *($4)
	*($13 + [160]) = *($5)
	*($13 + [144]) = *($6)
	$4 = CALL $85(($13 + [128]), $7)
	$5 = CALL $85(($13 + [112]), $8)
	$6 = CALL $85(($13 + [96]), $9)
	$1 = CALL $85(($13 + [80]), $10)
	$7 = CALL $85(($13 + [64]), $11)
	$8 = CALL $85(($13 + [48]), $12)
	*((($13 + [32]) + [8])) = *($14)
	*((($13 + [16]) + [8])) = *($17)
	*(($13 + [8])) = *($18)
	*($13 + [32]) = *($13 + [176])
	*($13 + [16]) = *($13 + [160])
	*($13) = *($13 + [144])
	CALL void $15((int_32 $0), (int_32 $2), (int_64 $3), (int_64 ($13 + [32])), (int_32 ($13 + [16])), (int_32 $13), (int_32 $4), (int_32 $5), (int_32 $6), (int_32 $1), (int_32 $7), (int_32 $8), (int_32 $16))
	if ( (*($8) & [1]) ){ goto $label$14 }
	if ( (*($7) & [1]) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL _ZdlPv(*($8 + [8]))
	if ( ((*($7) & [1]) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL _ZdlPv(*($7 + [8]))
	$7 = [1]
	if ( ((*($1) & [1]) == 0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$7 = [1]
	if ( (*($1) & [1]) ){ goto $label$10 }
	
.LABEL $label$11
	if ( (*($6) & $7) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL _ZdlPv(*($1 + [8]))
	if ( ((*($6) & $7) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL _ZdlPv(*($6 + [8]))
	$6 = [1]
	if ( ((*($5) & [1]) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$6 = [1]
	if ( (*($5) & [1]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( (*($4) & $6) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL _ZdlPv(*($5 + [8]))
	if ( ((*($4) & $6) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*($4 + [8]))
	if ( ((*($0) & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( (*($0) & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($13 + [208])
	return 
	
.LABEL $label$2
	CALL _ZdlPv(*($0 + [8]))
	$global$0 = ($13 + [208])
}

void .FUNC $18 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $91($0)
	
.LABEL $label$1
	*(($6 = ($5 + ((int_32)$6 * (int_32)[40])))) = *($2)
	*($6 + [8]) = *($3)
	*($6 + [16 align=4]) = (int_64)0
	*(($3 = ($6 + [24]))) = [0]
	$2 = CALL _Znwj([16])
	*($6 + [16]) = $2
	$7 = ($2 + [16])
	*($3) = $7
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($6 + [20])) = $7
	CALL $17(($6 + [28]), $4)
	$9 = ($5 + ((int_32)$8 * (int_32)[40]))
	$10 = ($6 + [40])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$11 = ($2 - $7)
	$1 = [0]
	
.LOOP $label$7:
	$8 = ($7 + $1)
	*((($2 = ($6 + $1)) + [-32])) = *(($8 + [-32]))
	*(($2 + [-40])) = *(($8 + [-40]))
	*(($5 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($8 + [-24])
	*($5) = *($4)
	$5 = ($8 + [-16])
	*($3) = *($5)
	*($5) = [0]
	*(($5 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($8 + [-12])
	*($5) = *($3)
	*($4) = (int_64)0
	$8 = ($8 + [-4])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$7 }
	$6 = ($6 + $1)
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$5 = $2
	
.LABEL $label$5
	*($0) = $6
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$8 = *(($2 + [-12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$10
	$8 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$11
	$2 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($2) = [0]
	CALL $53($2, $1)
	$4 = *($2)
	if ( ($4 == 0) ){ goto $label$2 }
	CALL $11($0, $4)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($2 + [4]) = $0
	*($2) = $0
	*($2 + [8]) = $3
	CALL $54($2, $1)
	CALL $56(CALL $55(CALL $55($2, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	$global$0 = ($2 + [16])
}

void .FUNC $58 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $91($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy($1, *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [9586])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [9586])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [9586])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*(($1 + [24])) = *($2 + [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$2 = ($global$0 - [208])
	$global$0 = $2
	$3 = CALL $85(($2 + [192]), $1)
	*(($4 = (($2 + [176]) + [8]))) = *(($1 + [40]))
	*(($5 = (($2 + [160]) + [8]))) = *(($1 + [56]))
	*(($6 = (($2 + [144]) + [8]))) = *(($1 + [72]))
	*($2 + [176]) = *($1 + [32])
	*($2 + [160]) = *($1 + [48])
	*($2 + [144]) = *($1 + [64])
	$7 = *($1 + [24])
	$8 = *($1 + [16])
	$9 = CALL $85(($2 + [128]), ($1 + [80]))
	$10 = CALL $85(($2 + [112]), ($1 + [92]))
	$11 = CALL $85(($2 + [96]), ($1 + [104]))
	$12 = CALL $85(($2 + [80]), ($1 + [116]))
	$13 = CALL $85(($2 + [64]), ($1 + [128]))
	$1 = CALL $85(($2 + [48]), ($1 + [140]))
	*((($2 + [32]) + [8])) = *($4)
	*((($2 + [16]) + [8])) = *($5)
	*(($2 + [8])) = *($6)
	*($2 + [32]) = *($2 + [176])
	*($2 + [16]) = *($2 + [160])
	*($2) = *($2 + [144])
	CALL $75($0, $3, $8, $7, ($2 + [32]), ($2 + [16]), $2, $9, $10, $11, $12, $13, $1)
	if ( (*($1) & [1]) ){ goto $label$13 }
	if ( (*($13) & [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL _ZdlPv(*($1 + [8]))
	if ( ((*($13) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL _ZdlPv(*($13 + [8]))
	$1 = [1]
	if ( ((*($12) & [1]) == 0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$1 = [1]
	if ( (*($12) & [1]) ){ goto $label$9 }
	
.LABEL $label$10
	if ( (*($11) & $1) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL _ZdlPv(*($12 + [8]))
	if ( ((*($11) & $1) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv(*($11 + [8]))
	$1 = [1]
	if ( ((*($10) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$1 = [1]
	if ( (*($10) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	if ( (*($9) & $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL _ZdlPv(*($10 + [8]))
	if ( ((*($9) & $1) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL _ZdlPv(*($9 + [8]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($3) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($2 + [208])
	return 
	
.LABEL $label$1
	CALL _ZdlPv(*($3 + [8]))
	$global$0 = ($2 + [208])
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [9506])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$2 }
	$6 = ($0 + [4])
	
.LOOP $label$3:
	$5 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[7]), [9506])
	CALL memcpy(*($6), $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[7]), [9506])
	CALL memcpy(*($6), ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [9506])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $4) >= (int_32)$6), [9506])
	$4 = ($0 + [4])
	CALL memcpy(*($4), $7, $6)
	*($4) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [9506])
	CALL memcpy(*($0 + [4]), $1, [4])
	$3 = (*($0 + [4]) + [4])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[1]), [9506])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$3 = (*($0 + [4]) + [2])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[3]), [9506])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	$5 = *($1 + [12])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$6 = ((int_64)$5) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $4) > (int_32)[0]), [9506])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($2 + [14]), [1])
	$4 = (*($3) + [1])
	*($3) = $4
	if ( $6 ){ goto $label$1 }
	$7 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($7) - $4) > (int_32)[0]), [9506])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($1 + [16]), [1])
	$4 = (*($3) + [1])
	*($3) = $4
	$5 = *($1 + [20])
	
.LOOP $label$2:
	$6 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$1 = ((int_64)$5) != (int_64)0
	*($2 + [15]) = (($1) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)(*($7) - $4) > (int_32)[0]), [9506])
	CALL memcpy(*($3), ($2 + [15]), [1])
	$4 = (*($3) + [1])
	*($3) = $4
	if ( $1 ){ goto $label$2 }
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [9563])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $105($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [36]) = $2
	*($3 + [32]) = $2
	*($3 + [40]) = ($2 + $4)
	*(($5 = CALL _Znwj([176])) + [16]) = [0]
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88 align=4]) = (int_64)0
	*($5 + [96 align=4]) = (int_64)0
	*($5 + [104 align=4]) = (int_64)0
	*($5 + [112 align=4]) = (int_64)0
	*($5 + [120 align=4]) = (int_64)0
	*($5 + [128 align=4]) = (int_64)0
	*($5 + [136 align=4]) = (int_64)0
	*($5 + [144 align=4]) = (int_64)0
	*($5 + [152 align=4]) = (int_64)0
	*($5 + [160]) = $0
	CALL $63(($3 + [32]), $5)
	*($5 + [164]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $14(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $108($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $15($1)
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [9506])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $7 ){ goto $label$1 }
	$7 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	$5 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[1]), [9506])
	$4 = ($0 + [4])
	CALL memcpy(*($4), $6, [2])
	*($4) = (*($4) + [2])
	CALL $52($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	$4 = *($4)
	goto $label$3 
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [9586])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [9586])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy($0, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [160]) == (int_32)$0), [9864])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$8()), [9909])
	$2 = *($0 + [24])
	$3 = $2
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$1 }
	$6 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) != (int_64)$6) ){ goto $label$2 }
	$3 = $5
	goto $label$1 
	
.LABEL $label$2
	$7 = ($2 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($5 + [-48])
	$3 = ($5 + [-24])
	$5 = $3
	if ( ((int_64)*(*($8)) != (int_64)$6) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$3 = $2
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)$2), [9959])
	$2 = *($4)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$7 }
	$5 = $3
	
.LOOP $label$8:
	$8 = *($5)
	*($5) = [0]
	$7 = ($5 + [-24])
	$3 = *($7)
	*($7) = $8
	if ( ($3 == 0) ){ goto $label$9 }
	CALL $15($3)
	CALL _ZdlPv($3)
	
.LABEL $label$9
	*(($5 + [-8])) = *(($5 + [16]))
	*(($5 + [-16])) = *(($5 + [8]))
	$5 = ($5 + [24])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = ($3 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL $15($5)
	CALL _ZdlPv($5)
	
.LABEL $label$11
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [164]))
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [9563])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $105($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [9586])
	CALL memcpy($5, $2, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [9586])
	CALL memcpy(($5 + [8]), ($2 + [8]), [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $30(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $108($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $28 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [176])
	$global$0 = $5
	*($5 + [128]) = $1
	if ( ((int_64)$1 == (int_64)4229331772100791680) ){ goto $label$1 }
	if ( ((int_64)$2 != (int_64)4229331772100791680) ){ goto $label$1 }
	$6 = CALL $102([8322])
	if ( ($6 <= [8]) ){ goto $label$5 }
	CALL eosio_assert([0], [8952])
	goto $label$4 
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = (int_64)0
	
.LOOP $label$6:
	$7 = *(($6 + [8321]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [8997])
	
.LABEL $label$7
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$6 }
	$2 = ((int_64)$2 << (int_64)8)
	goto $label$2 
	
.LABEL $label$3
	$2 = (int_64)0
	
.LABEL $label$2
	if ( ((int_64)*($3 + [8]) != (int_64)((int_64)$2 | (int_64)4)) ){ goto $label$1 }
	if ( ((int_64)$1 <= (int_64)4229331772100719135) ){ goto $label$10 }
	if ( ((int_64)$1 > (int_64)4229331772100719167) ){ goto $label$9 }
	if ( ((int_64)$1 == (int_64)4229331772100719136) ){ goto $label$8 }
	if ( ((int_64)$1 == (int_64)4229331772100719152) ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$10
	if ( ((int_64)$1 == (int_64)4229331771904512528) ){ goto $label$8 }
	if ( ((int_64)$1 == (int_64)4229331771904512544) ){ goto $label$8 }
	if ( ((int_64)$1 == (int_64)4229331772100719120) ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$9
	if ( ((int_64)$1 == (int_64)4229331772100719184) ){ goto $label$8 }
	if ( ((int_64)$1 != (int_64)4229331772100719168) ){ goto $label$1 }
	
.LABEL $label$8
	$6 = CALL $85(($5 + [112]), $4)
	$7 = CALL $23($6, $6)
	if ( ((*($6) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*($6 + [8]))
	
.LABEL $label$11
	if ( ($7 == 0) ){ goto $label$1 }
	*($5 + [104]) = (int_64)0
	*((($5 + [64]) + [32])) = [0]
	*($5 + [80]) = (int_64)-1
	*($5 + [88]) = (int_64)0
	$2 = *($0)
	*($5 + [64]) = $2
	*($5 + [72]) = $2
	$6 = CALL db_lowerbound_i64($2, $2, (int_64)-5003134532638605312, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$13 }
	$6 = CALL $29(($5 + [64]), $6)
	$1 = *($0)
	CALL eosio_assert([1], [10012])
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)($5 + [64])), [10047])
	CALL eosio_assert(((int_64)*($5 + [64]) == (int_64)CALL $fimport$8()), [10093])
	$8 = ((int_64)*($6 + [8]) + (int_64)1)
	*($6 + [8]) = $8
	$2 = *($6)
	*($5 + [104]) = $8
	CALL eosio_assert(((int_64)$2 == (int_64)*($6)), [10144])
	CALL eosio_assert([1], [9506])
	CALL memcpy(($5 + [16]), $6, [8])
	CALL eosio_assert([1], [9506])
	CALL memcpy((($5 + [16]) | [8]), ($6 + [8]), [8])
	CALL db_update_i64(*($6 + [20]), $1, ($5 + [16]), [16])
	$6 = (($5 + [64]) + [16])
	if ( (uint_64)($2 <= *($6)) ){ goto $label$12 }
	*($6) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$12 
	
.LABEL $label$13
	$1 = *($0)
	CALL eosio_assert(((int_64)*($5 + [64]) == (int_64)CALL $fimport$8()), [9621])
	*(($6 = CALL _Znwj([32])) + [16]) = ($5 + [64])
	*($6 + [8]) = (int_64)0
	*($6) = (int_64)1
	*($5 + [104]) = (int_64)0
	CALL eosio_assert([1], [9506])
	CALL memcpy(($5 + [16]), $6, [8])
	CALL eosio_assert([1], [9506])
	CALL memcpy((($5 + [16]) | [8]), ($6 + [8]), [8])
	$2 = *($6)
	$9 = CALL db_store_i64(*((($5 + [64]) + [8])), (int_64)-5003134532638605312, $1, $2, ($5 + [16]), [16])
	*($6 + [20]) = $9
	$7 = (($5 + [64]) + [16])
	if ( (uint_64)($2 <= *($7)) ){ goto $label$14 }
	*($7) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	*($5) = $6
	$2 = *($6)
	*($5 + [16]) = $2
	*($5 + [144]) = $9
	$10 = ($5 + [92])
	$7 = *($10)
	if ( ((uint_32)$7 >= (uint_32)*(($5 + [96]))) ){ goto $label$16 }
	*($7 + [8]) = $2
	*($7 + [16]) = $9
	*($5) = [0]
	*($7) = $6
	*($10) = ($7 + [24])
	$6 = *($5)
	*($5) = [0]
	if ( $6 ){ goto $label$15 }
	goto $label$12 
	
.LABEL $label$16
	CALL $30(($5 + [88]), $5, ($5 + [16]), ($5 + [144]))
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$12 }
	
.LABEL $label$15
	CALL _ZdlPv($6)
	
.LABEL $label$12
	$7 = [0]
	*(($5 + [48])) = [0]
	*($5 + [32]) = (int_64)-1
	$2 = *($0)
	*($5 + [16]) = $2
	*($5 + [24]) = $2
	*($5 + [40]) = (int_64)0
	$6 = CALL db_lowerbound_i64($2, $2, (int_64)-5003011376160280576, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$19 }
	$9 = ($5 + [16])
	$6 = CALL $25(($5 + [16]), $6)
	if ( ((int_64)*($6 + [8]) == (int_64)*($5 + [128])) ){ goto $label$17 }
	
.LOOP $label$20:
	CALL eosio_assert([1], [9591])
	$6 = CALL db_next_i64(*($6 + [60]), $5)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$18 }
	$6 = CALL $25(($5 + [16]), $6)
	if ( ((int_64)*($6 + [8]) != (int_64)*($5 + [128])) ){ goto $label$20 }
	$7 = [0]
	goto $label$17 
	
.LABEL $label$19
	$7 = [1]
	$9 = ($5 + [16])
	goto $label$17 
	
.LABEL $label$18
	$7 = [1]
	
.LABEL $label$17
	CALL eosio_assert($7, [8713])
	$2 = *($0)
	*($5 + [8]) = $3
	*($5 + [12]) = $4
	*($5 + [4]) = ($5 + [128])
	*($5) = ($5 + [104])
	*($5 + [168]) = $2
	CALL eosio_assert(((int_64)*($5 + [16]) == (int_64)CALL $fimport$8()), [9621])
	*($5 + [148]) = $5
	*($5 + [144]) = ($5 + [16])
	*($5 + [152]) = ($5 + [168])
	*(($6 = CALL _Znwj([72])) + [16]) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [32 align=4]) = (int_64)0
	*($6 + [40]) = [0]
	*($6 + [56]) = $9
	CALL $31(($5 + [144]), $6)
	*($5 + [160]) = $6
	$2 = *($6)
	*($5 + [144]) = $2
	$3 = *($6 + [60])
	*($5 + [140]) = $3
	$0 = ($5 + [44])
	$7 = *($0)
	if ( ((uint_32)$7 >= (uint_32)*(($5 + [48]))) ){ goto $label$23 }
	*($7 + [8]) = $2
	*($7 + [16]) = $3
	*($5 + [160]) = [0]
	*($7) = $6
	*($0) = ($7 + [24])
	$6 = *($5 + [160])
	*($5 + [160]) = [0]
	if ( $6 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	CALL $32(($5 + [40]), ($5 + [160]), ($5 + [144]), ($5 + [140]))
	$6 = *($5 + [160])
	*($5 + [160]) = [0]
	if ( ($6 == 0) ){ goto $label$21 }
	
.LABEL $label$22
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$24 }
	CALL _ZdlPv(*(($6 + [40])))
	
.LABEL $label$24
	CALL _ZdlPv($6)
	
.LABEL $label$21
	$3 = *($5 + [40])
	if ( ($3 == 0) ){ goto $label$25 }
	$0 = ($5 + [44])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$27 }
	
.LOOP $label$28:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$29 }
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$30 }
	CALL _ZdlPv(*(($7 + [40])))
	
.LABEL $label$30
	CALL _ZdlPv($7)
	
.LABEL $label$29
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$28 }
	$6 = *(($5 + [40]))
	goto $label$26 
	
.LABEL $label$27
	$6 = $3
	
.LABEL $label$26
	*($0) = $3
	CALL _ZdlPv($6)
	
.LABEL $label$25
	$3 = *($5 + [88])
	if ( ($3 == 0) ){ goto $label$1 }
	$0 = ($5 + [92])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$32 }
	
.LOOP $label$33:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$34 }
	CALL _ZdlPv($7)
	
.LABEL $label$34
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$33 }
	$6 = *(($5 + [88]))
	goto $label$31 
	
.LABEL $label$32
	$6 = $3
	
.LABEL $label$31
	*($0) = $3
	CALL _ZdlPv($6)
	
.LABEL $label$1
	$global$0 = ($5 + [176])
}

int_32 .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [9506])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$2 }
	$6 = ($0 + [4])
	
.LOOP $label$3:
	$8 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($8) - $4) > (int_32)[7]), [9506])
	CALL memcpy(*($6), $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	CALL eosio_assert(((int_32)(*($8) - $4) > (int_32)[7]), [9506])
	CALL memcpy(*($6), ($7 + [8]), [8])
	*($6) = (*($6) + [8])
	CALL $52(CALL $51($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$2 }
	$4 = *($6)
	goto $label$3 
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $107 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10216]) == 0) ){ goto $label$2 }
	$2 = *([0] + [10220])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [10216]) = [1]
	$2 = ($2 << [16])
	*([0] + [10220]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10220])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [10220]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [10216]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [10216]) = [1]
	$3 = ($3 << [16])
	*([0] + [10220]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10220])
	
.LABEL $label$10
	*([0] + [10220]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

int_32 .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $107($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($9)), [8215])
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$10:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$12 }
	
.LOOP $label$13:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$12 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$13 }
	
.LABEL $label$12
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$14 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$11
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$10 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

void .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($4 + [4]), ($0 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($4 + [4]), ($0 + [16]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	*($2 + [8]) = *(($0 + [24]))
	CALL eosio_assert(((int_32)(*($4 + [8]) - $3) > (int_32)[7]), [9506])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $22(*($1), ($0 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $20 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($1)
	if ( ($2 & [1]) ){ goto $label$5 }
	$3 = uint_32($2 >> [1])
	$4 = ($1 + [1])
	$2 = CALL $102([8643])
	if ( ($2 == 0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$3 = *($1 + [4])
	$4 = *($1 + [8])
	$2 = CALL $102([8643])
	if ( ($2 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = [0]
	if ( ((int_32)$3 < (int_32)$2) ){ goto $label$2 }
	$6 = ($4 + $3)
	$7 = $4
	
.LOOP $label$6:
	$3 = (($3 - $2) + [1])
	if ( ($3 == 0) ){ goto $label$2 }
	$3 = CALL $100($7, [34], $3)
	if ( ($3 == 0) ){ goto $label$2 }
	if ( (CALL $101($3, [8643], $2) == 0) ){ goto $label$7 }
	$7 = ($3 + [1])
	$3 = ($6 - $7)
	if ( ((int_32)$3 >= (int_32)$2) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$7
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)($3 - $4) < (int_32)[0]) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = *($1)
	if ( ($2 & [1]) ){ goto $label$10 }
	$3 = uint_32($2 >> [1])
	$4 = ($1 + [1])
	$2 = CALL $102([8658])
	if ( ($2 == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	$3 = *($1 + [4])
	$4 = *($1 + [8])
	$2 = CALL $102([8658])
	if ( ($2 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	$5 = [0]
	if ( ((int_32)$3 < (int_32)$2) ){ goto $label$2 }
	$6 = ($4 + $3)
	$7 = $4
	
.LOOP $label$11:
	$3 = (($3 - $2) + [1])
	if ( ($3 == 0) ){ goto $label$2 }
	$3 = CALL $100($7, [34], $3)
	if ( ($3 == 0) ){ goto $label$2 }
	if ( (CALL $101($3, [8658], $2) == 0) ){ goto $label$12 }
	$7 = ($3 + [1])
	$3 = ($6 - $7)
	if ( ((int_32)$3 >= (int_32)$2) ){ goto $label$11 }
	goto $label$2 
	
.LABEL $label$12
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)($3 - $4) < (int_32)[0]) ){ goto $label$2 }
	
.LABEL $label$8
	$2 = *($1)
	if ( ($2 & [1]) ){ goto $label$15 }
	$3 = uint_32($2 >> [1])
	$4 = ($1 + [1])
	$2 = CALL $102([8669])
	if ( ($2 == 0) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	$3 = *($1 + [4])
	$4 = *($1 + [8])
	$2 = CALL $102([8669])
	if ( ($2 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$5 = [0]
	if ( ((int_32)$3 < (int_32)$2) ){ goto $label$2 }
	$6 = ($4 + $3)
	$7 = $4
	
.LOOP $label$16:
	$3 = (($3 - $2) + [1])
	if ( ($3 == 0) ){ goto $label$2 }
	$3 = CALL $100($7, [34], $3)
	if ( ($3 == 0) ){ goto $label$2 }
	if ( (CALL $101($3, [8669], $2) == 0) ){ goto $label$17 }
	$7 = ($3 + [1])
	$3 = ($6 - $7)
	if ( ((int_32)$3 >= (int_32)$2) ){ goto $label$16 }
	goto $label$2 
	
.LABEL $label$17
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)($3 - $4) < (int_32)[0]) ){ goto $label$2 }
	
.LABEL $label$13
	$2 = *($1)
	if ( ($2 & [1]) ){ goto $label$20 }
	$3 = uint_32($2 >> [1])
	$6 = ($1 + [1])
	$2 = CALL $102([8679])
	if ( ($2 == 0) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$3 = *($1 + [4])
	$6 = *($1 + [8])
	$2 = CALL $102([8679])
	if ( $2 ){ goto $label$18 }
	
.LABEL $label$19
	return [1]
	
.LABEL $label$18
	if ( ((int_32)$3 < (int_32)$2) ){ goto $label$1 }
	$1 = ($6 + $3)
	$7 = $6
	
.LOOP $label$21:
	$3 = (($3 - $2) + [1])
	if ( ($3 == 0) ){ goto $label$1 }
	$3 = CALL $100($7, [34], $3)
	if ( ($3 == 0) ){ goto $label$1 }
	if ( (CALL $101($3, [8679], $2) == 0) ){ goto $label$22 }
	$7 = ($3 + [1])
	$3 = ($1 - $7)
	if ( ((int_32)$3 >= (int_32)$2) ){ goto $label$21 }
	goto $label$1 
	
.LABEL $label$22
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$1 }
	$5 = [1]
	if ( ((int_32)($3 - $6) <= (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($6) - $5) > (int_32)[0]), [9506])
	CALL memcpy(*($3), ($2 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $8 ){ goto $label$1 }
	$7 = ($3 & [1])
	$3 = *($1)
	$3 = ( *(($1 + [4])) ? uint_32($3 >> [1]) : $7 )
	if ( ($3 == 0) ){ goto $label$2 }
	$8 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) >= (int_32)$3), [9506])
	$5 = ($0 + [4])
	CALL memcpy(*($5), ( $8 ? ($1 + [1]) : $7 ), $3)
	*($5) = (*($5) + $3)
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [9563])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $105($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [36]) = $2
	*($3 + [32]) = $2
	*($3 + [40]) = ($2 + $4)
	*(($5 = CALL _Znwj([72])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [40]) = [0]
	*($5 + [56]) = $0
	CALL $70(($3 + [32]), $5)
	*($5 + [60]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $32(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $108($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($1 + [40])))
	
.LABEL $label$10
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $24 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$3 = ($global$0 - [128])
	$global$0 = $3
	CALL require_auth((int_64)4229331772100791680)
	*(($3 + [72])) = [0]
	*($3 + [56]) = (int_64)-1
	*($3 + [64]) = (int_64)0
	$4 = *($0)
	*($3 + [40]) = $4
	*($3 + [48]) = $4
	$5 = [0]
	$6 = CALL db_find_i64($4, $4, (int_64)-5003011376160280576, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $25(($3 + [40]), $6)
	CALL eosio_assert(((int_32)*($5 + [56]) == (int_32)($3 + [40])), [9512])
	
.LABEL $label$1
	$7 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($7, [8687])
	$9 = *(($3 + [68]))
	$8 = *(($3 + [64]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($9 + [-24])
	$10 = *($6)
	if ( ((int_64)*($10) == (int_64)$2) ){ goto $label$4 }
	$9 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($10 + [56]) == (int_32)($3 + [40])), [9512])
	goto $label$2 
	
.LABEL $label$3
	$10 = [0]
	$6 = CALL db_find_i64(*($3 + [40]), *(($3 + [48])), (int_64)-5003011376160280576, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$10 = CALL $25(($3 + [40]), $6)
	CALL eosio_assert(((int_32)*($10 + [56]) == (int_32)($3 + [40])), [9512])
	
.LABEL $label$2
	$9 = ((int_32)$10 != (int_32)[0])
	CALL eosio_assert($9, [8687])
	*(($11 = ($3 + [32]))) = [0]
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	$2 = *($0)
	*($3) = $2
	*($3 + [8]) = $2
	CALL eosio_assert(((int_64)$2 == (int_64)CALL $fimport$8()), [9621])
	*(($6 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [32]) = $3
	*($6) = *($5)
	*($6 + [8]) = *($5 + [8])
	*($6 + [24]) = *(($5 + [24]))
	*($6 + [16]) = *($5 + [16])
	CALL eosio_assert([1], [9506])
	CALL memcpy(($3 + [80]), $6, [8])
	CALL eosio_assert([1], [9506])
	$12 = (($3 + [80]) | [8])
	CALL memcpy($12, ($6 + [8]), [8])
	CALL eosio_assert([1], [9506])
	$13 = (($3 + [80]) + [16])
	CALL memcpy($13, ($6 + [16]), [8])
	*($3 + [120]) = *($6 + [24])
	CALL eosio_assert([1], [9506])
	$14 = (($3 + [80]) + [24])
	CALL memcpy($14, ($3 + [120]), [8])
	$4 = *($6)
	$15 = CALL db_store_i64(*($3 + [8]), (int_64)-3596430306756395008, $2, $4, ($3 + [80]), [32])
	*($6 + [36]) = $15
	if ( (uint_64)($4 <= *($3 + [16])) ){ goto $label$6 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($3 + [120]) = $6
	$2 = *($6)
	*($3 + [80]) = $2
	*($3 + [116]) = $15
	$16 = ($3 + [28])
	$8 = *($16)
	if ( ((uint_32)$8 >= (uint_32)*($11)) ){ goto $label$9 }
	*($8 + [8]) = $2
	*($8 + [16]) = $15
	*($3 + [120]) = [0]
	*($8) = $6
	*($16) = ($8 + [24])
	$6 = *($3 + [120])
	*($3 + [120]) = [0]
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $26(($3 + [24]), ($3 + [120]), ($3 + [80]), ($3 + [116]))
	$6 = *($3 + [120])
	*($3 + [120]) = [0]
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv($6)
	
.LABEL $label$7
	$4 = *($0)
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$8()), [9621])
	*(($6 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [32]) = $3
	*($6) = *($10)
	*($6 + [8]) = *($10 + [8])
	*($6 + [24]) = *(($10 + [24]))
	*($6 + [16]) = *($10 + [16])
	CALL eosio_assert([1], [9506])
	CALL memcpy(($3 + [80]), $6, [8])
	CALL eosio_assert([1], [9506])
	CALL memcpy($12, ($6 + [8]), [8])
	CALL eosio_assert([1], [9506])
	CALL memcpy($13, ($6 + [16]), [8])
	*($3 + [120]) = *($6 + [24])
	CALL eosio_assert([1], [9506])
	CALL memcpy($14, ($3 + [120]), [8])
	$2 = *($6)
	$0 = CALL db_store_i64(*(($3 + [8])), (int_64)-3596430306756395008, $4, $2, ($3 + [80]), [32])
	*($6 + [36]) = $0
	$8 = ($3 + [16])
	if ( (uint_64)($2 <= *($8)) ){ goto $label$10 }
	*($8) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*($3 + [120]) = $6
	$2 = *($6)
	*($3 + [80]) = $2
	*($3 + [116]) = $0
	$15 = ($3 + [28])
	$8 = *($15)
	if ( ((uint_32)$8 >= (uint_32)*(($3 + [32]))) ){ goto $label$13 }
	*($8 + [8]) = $2
	*($8 + [16]) = $0
	*($3 + [120]) = [0]
	*($8) = $6
	*($15) = ($8 + [24])
	$6 = *($3 + [120])
	$8 = [0]
	*($3 + [120]) = [0]
	if ( $6 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $26(($3 + [24]), ($3 + [120]), ($3 + [80]), ($3 + [116]))
	$6 = *($3 + [120])
	$8 = [0]
	*($3 + [120]) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL _ZdlPv($6)
	
.LABEL $label$11
	CALL eosio_assert($7, [9830])
	CALL eosio_assert($7, [9591])
	$6 = CALL db_next_i64(*($5 + [60]), ($3 + [80]))
	if ( ((int_32)$6 < (int_32)$8) ){ goto $label$14 }
	CALL $25(($3 + [40]), $6)
	
.LABEL $label$14
	CALL $27(($3 + [40]), $5)
	CALL eosio_assert($9, [9830])
	CALL eosio_assert($9, [9591])
	$6 = CALL db_next_i64(*($10 + [60]), ($3 + [80]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$15 }
	CALL $25(($3 + [40]), $6)
	
.LABEL $label$15
	CALL $27(($3 + [40]), $10)
	$10 = *($3 + [24])
	if ( ($10 == 0) ){ goto $label$16 }
	$8 = ($3 + [28])
	$6 = *($8)
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$18 }
	
.LOOP $label$19:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$20 }
	CALL _ZdlPv($9)
	
.LABEL $label$20
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$19 }
	$6 = *(($3 + [24]))
	goto $label$17 
	
.LABEL $label$18
	$6 = $10
	
.LABEL $label$17
	*($8) = $10
	CALL _ZdlPv($6)
	
.LABEL $label$16
	$10 = *($3 + [64])
	if ( ($10 == 0) ){ goto $label$21 }
	$8 = ($3 + [68])
	$6 = *($8)
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$23 }
	
.LOOP $label$24:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$25 }
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$26 }
	CALL _ZdlPv(*(($9 + [40])))
	
.LABEL $label$26
	CALL _ZdlPv($9)
	
.LABEL $label$25
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$24 }
	$6 = *(($3 + [64]))
	goto $label$22 
	
.LABEL $label$23
	$6 = $10
	
.LABEL $label$22
	*($8) = $10
	CALL _ZdlPv($6)
	
.LABEL $label$21
	$global$0 = ($3 + [128])
}

void .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [9864])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$8()), [9909])
	$2 = *($0 + [24])
	$3 = $2
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$1 }
	$6 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) != (int_64)$6) ){ goto $label$2 }
	$3 = $5
	goto $label$1 
	
.LABEL $label$2
	$7 = ($2 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($5 + [-48])
	$3 = ($5 + [-24])
	$5 = $3
	if ( ((int_64)*(*($8)) != (int_64)$6) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$3 = $2
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)$2), [9959])
	$2 = *($4)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$7 }
	$5 = $3
	
.LOOP $label$8:
	$8 = *($5)
	*($5) = [0]
	$7 = ($5 + [-24])
	$3 = *($7)
	*($7) = $8
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($3 + [40])))
	
.LABEL $label$10
	CALL _ZdlPv($3)
	
.LABEL $label$9
	*(($5 + [-8])) = *(($5 + [16]))
	*(($5 + [-16])) = *(($5 + [8]))
	$5 = ($5 + [24])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = ($3 + [-24])
	
.LABEL $label$6
	
.LOOP $label$11:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($5 + [40])))
	
.LABEL $label$13
	CALL _ZdlPv($5)
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$11 }
	
.LABEL $label$5
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [60]))
}

void .FUNC $26 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $91($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($4 + [4]), ($3 + [48]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *(($3 + [56]))
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [9506])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0)
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($4 + [64]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	*($2 + [8]) = *(($4 + [72]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL $22(*($1), ($4 + [80]))
	CALL $22(*($1), ($4 + [92]))
	CALL $22(*($1), ($4 + [104]))
	CALL $22(*($1), ($4 + [116]))
	CALL $22(*($1), ($4 + [128]))
	CALL $22(*($1), ($4 + [140]))
	$global$0 = ($2 + [16])
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	$2 = *($0 + [104])
	$0 = *($0)
	$3 = (CASTING uint_64)(uint_32 ( *(($0 + [108])) ? uint_32($2 >> [1]) : ($2 & [1]) ))
	$2 = *($1)
	$1 = *($2)
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	$4 = *(($0 + [104]))
	$4 = ( *(($0 + [108])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	if ( ($4 == 0) ){ goto $label$2 }
	$1 = ($4 + $1)
	*($2) = $1
	
.LABEL $label$2
	$4 = *($0 + [116])
	$3 = (CASTING uint_64)(uint_32 ( *(($0 + [120])) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($2) = $1
	$4 = *(($0 + [116]))
	$4 = ( *(($0 + [120])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	if ( ($4 == 0) ){ goto $label$4 }
	$1 = ($4 + $1)
	*($2) = $1
	
.LABEL $label$4
	$4 = *($0 + [128])
	$3 = (CASTING uint_64)(uint_32 ( *(($0 + [132])) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$5 }
	*($2) = $1
	$4 = *(($0 + [128]))
	$4 = ( *(($0 + [132])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	if ( ($4 == 0) ){ goto $label$6 }
	$1 = ($4 + $1)
	*($2) = $1
	
.LABEL $label$6
	$4 = *($0 + [140])
	$3 = (CASTING uint_64)(uint_32 ( *(($0 + [144])) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$7 }
	*($2) = $1
	$0 = *(($0 + [140]))
	$0 = ( *(($0 + [144])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	if ( ($0 == 0) ){ goto $label$8 }
	*($2) = ($0 + $1)
	
.LABEL $label$8
}

void .FUNC $108 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [18608])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [18416]
	$3 = (((int_32)$1 * (int_32)[12]) + [18416])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

int_32 .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = [0]
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($2 <= *($5)), [9826])
	$2 = *($6)
	$7 = *($2)
	$2 = ($2 + [1])
	*($6) = $2
	$3 = ($3 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $3)))
	$3 = ($3 + [7])
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $4)
	$7 = *($1)
	$3 = *($1 + [4])
	$5 = ($3 - $7)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$3 }
	CALL $11($1, ($6 - $5))
	$2 = *(($0 + [4]))
	$3 = *(($1 + [4]))
	$7 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$2 }
	$3 = ($7 + $6)
	*(($1 + [4])) = $3
	
.LABEL $label$2
	$2 = ($3 - $7)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $2) >= (uint_32)$2), [9586])
	$3 = ($0 + [4])
	CALL memcpy($7, *($3), $2)
	*($3) = (*($3) + $2)
	return $0
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $65($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $89($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $89($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $84($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $22(*($1), *($0))
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($3 + [16]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($3 + [24]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($3 + [32]), [8])
	$4 = (*($0 + [4]) + [8])
	*($0 + [4]) = $4
	*($2 + [8]) = *(($3 + [40]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($2) = $3
	CALL $69($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$4 = (*($3) + [32])
	*(($3 = *($1))) = $4
	$5 = *($0 + [80])
	$0 = *($0)
	$6 = (CASTING uint_64)(uint_32 ( *(($0 + [84])) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	*($3) = $4
	$5 = *(($0 + [80]))
	$5 = ( *(($0 + [84])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	if ( ($5 == 0) ){ goto $label$2 }
	$4 = ($5 + $4)
	*($3) = $4
	
.LABEL $label$2
	$5 = *($0 + [92])
	$6 = (CASTING uint_64)(uint_32 ( *(($0 + [96])) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	*($3) = $4
	$5 = *(($0 + [92]))
	$5 = ( *(($0 + [96])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	if ( ($5 == 0) ){ goto $label$4 }
	*($3) = ($5 + $4)
	
.LABEL $label$4
	*($2 + [8]) = $0
	CALL $68(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	$2 = (*($0) + [8])
	*($0) = $2
	$3 = *($1 + [8])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *(($1 + [8]))
	$3 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$2 = ($3 + $2)
	*($0) = $2
	
.LABEL $label$2
	$2 = ($2 + [64])
	*($0) = $2
	$3 = *($1 + [88])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [92])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	$3 = *(($1 + [88]))
	$3 = ( *(($1 + [92])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$2 = ($3 + $2)
	*($0) = $2
	
.LABEL $label$4
	$3 = *($1 + [100])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [104])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$5 }
	*($0) = $2
	$3 = *(($1 + [100]))
	$3 = ( *(($1 + [104])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$6 }
	$2 = ($3 + $2)
	*($0) = $2
	
.LABEL $label$6
	$3 = *($1 + [112])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [116])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$7:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$7 }
	*($0) = $2
	$3 = *(($1 + [112]))
	$3 = ( *(($1 + [116])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$8 }
	$2 = ($3 + $2)
	*($0) = $2
	
.LABEL $label$8
	$3 = *($1 + [124])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [128])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	$3 = *(($1 + [124]))
	$3 = ( *(($1 + [128])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$10 }
	$2 = ($3 + $2)
	*($0) = $2
	
.LABEL $label$10
	$3 = *($1 + [136])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [140])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$11:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$11 }
	*($0) = $2
	$3 = *(($1 + [136]))
	$3 = ( *(($1 + [140])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$12 }
	$2 = ($3 + $2)
	*($0) = $2
	
.LABEL $label$12
	$3 = *($1 + [148])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [152])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$13:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$13 }
	*($0) = $2
	$1 = *(($1 + [148]))
	$1 = ( *(($1 + [152])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ($1 == 0) ){ goto $label$14 }
	*($0) = ($1 + $2)
	
.LABEL $label$14
	return $0
}

int_32 .FUNC $60 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [164]), ($1 + [8]))
	CALL eosio_assert(((int_32)uint_32($2 >> [31]) ^ (int_32)[1]), [9778])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-3838636682115022848)
	CALL eosio_assert(((int_32)$2 != (int_32)[-1]), [9724])
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	CALL eosio_assert(((int_32)uint_32($2 >> [31]) ^ (int_32)[1]), [9724])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $34(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy($1, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $64($0, ($1 + [8]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [9586])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [9586])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [9586])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*(($1 + [48])) = *($2 + [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [9586])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*(($1 + [64])) = *($2 + [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [9586])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*(($1 + [80])) = *($2 + [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $64(CALL $64(CALL $64(CALL $64(CALL $64(CALL $64($0, ($1 + [88])), ($1 + [100])), ($1 + [112])), ($1 + [124])), ($1 + [136])), ($1 + [148]))
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), $1, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $22($0, ($1 + [8]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	*($2 + [8]) = *(($1 + [48]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	*($2 + [8]) = *(($1 + [64]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	*($2 + [8]) = *(($1 + [80]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $22(CALL $22(CALL $22(CALL $22(CALL $22(CALL $22($0, ($1 + [88])), ($1 + [100])), ($1 + [112])), ($1 + [124])), ($1 + [136])), ($1 + [148]))
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $101 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_32 .FUNC $100 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $103 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $92())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $104($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $102 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $105 (int_32 $0)
{
	return CALL $106([10224], $0)
}

int_32 .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $105($1)
	
.LABEL $label$2
	*(CALL $92()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $105(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $108($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $88 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL _ZdlPv($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $88($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $86 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $84 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $108($0)
	
.LABEL $label$1
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $103(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [10204])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $103(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy(($3 + [56]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [9586])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*(($3 + [64])) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0)
	CALL $64(*($1), ($4 + [72]))
	CALL $64(*($1), ($4 + [84]))
	CALL $64(*($1), ($4 + [96]))
	CALL $64(*($1), ($4 + [108]))
	CALL $64(*($1), ($4 + [120]))
	CALL $64(*($1), ($4 + [132]))
	CALL $64(*($1), ($4 + [144]))
	CALL $64(*($1), ($4 + [156]))
	$global$0 = ($2 + [16])
}

void .FUNC $73 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12, int_32 $13)
{
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$14 = ($global$0 - [256])
	$global$0 = $14
	$0 = *($0 + [4])
	$15 = *($0 + [4])
	$16 = (*($0) + int_32($15 >> [1]))
	$17 = *($0)
	if ( (($15 & [1]) == 0) ){ goto $label$1 }
	$17 = *((*($16) + $17))
	
.LABEL $label$1
	$0 = CALL $85(($14 + [240]), $1)
	$1 = CALL $85(($14 + [224]), $2)
	*(($15 = (($14 + [208]) + [8]))) = *(($3 + [8]))
	*(($18 = (($14 + [192]) + [8]))) = *(($4 + [8]))
	*(($19 = (($14 + [176]) + [8]))) = *(($5 + [8]))
	*($14 + [208]) = *($3)
	*($14 + [192]) = *($4)
	*($14 + [176]) = *($5)
	$3 = CALL $85(($14 + [160]), $6)
	$4 = CALL $85(($14 + [144]), $7)
	$5 = CALL $85(($14 + [128]), $8)
	$2 = CALL $85(($14 + [112]), $9)
	$6 = CALL $85(($14 + [96]), $10)
	$7 = CALL $85(($14 + [80]), $11)
	$8 = CALL $85(($14 + [64]), $12)
	$9 = CALL $85(($14 + [48]), $13)
	*((($14 + [32]) + [8])) = *($15)
	*((($14 + [16]) + [8])) = *($18)
	*(($14 + [8])) = *($19)
	*($14 + [32]) = *($14 + [208])
	*($14 + [16]) = *($14 + [192])
	*($14) = *($14 + [176])
	CALL void $16((int_32 $0), (int_32 $1), (int_32 ($14 + [32])), (int_32 ($14 + [16])), (int_32 $14), (int_32 $3), (int_32 $4), (int_32 $5), (int_32 $2), (int_32 $6), (int_32 $7), (int_32 $8), (int_32 $9), (int_32 $17))
	if ( (*($9) & [1]) ){ goto $label$20 }
	if ( (*($8) & [1]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL _ZdlPv(*($9 + [8]))
	if ( ((*($8) & [1]) == 0) ){ goto $label$18 }
	
.LABEL $label$19
	CALL _ZdlPv(*($8 + [8]))
	$8 = [1]
	if ( ((*($7) & [1]) == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$8 = [1]
	if ( (*($7) & [1]) ){ goto $label$16 }
	
.LABEL $label$17
	if ( (*($6) & $8) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL _ZdlPv(*($7 + [8]))
	if ( ((*($6) & $8) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL _ZdlPv(*($6 + [8]))
	$6 = [1]
	if ( ((*($2) & [1]) == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$6 = [1]
	if ( (*($2) & [1]) ){ goto $label$12 }
	
.LABEL $label$13
	if ( (*($5) & $6) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL _ZdlPv(*($2 + [8]))
	if ( ((*($5) & $6) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL _ZdlPv(*($5 + [8]))
	$5 = [1]
	if ( ((*($4) & [1]) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = [1]
	if ( (*($4) & [1]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( (*($3) & $5) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL _ZdlPv(*($4 + [8]))
	if ( ((*($3) & $5) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*($3 + [8]))
	$3 = [1]
	if ( ((*($1) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = [1]
	if ( (*($1) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($0) & $3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($1 + [8]))
	if ( ((*($0) & $3) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($0 + [8]))
	$global$0 = ($14 + [256])
	return 
	
.LABEL $label$2
	$global$0 = ($14 + [256])
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy($1, *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [9586])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [9586])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [9586])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*(($1 + [24])) = *($2 + [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $64($0, ($1 + [32]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), $1, [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	*($2 + [8]) = *(($1 + [24]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $22($0, ($1 + [32]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [9506])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $105($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10204])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $105($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

void .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy(($3 + [48]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [9586])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*(($3 + [56])) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [9586])
	CALL memcpy(($4 + [64]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [9586])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*(($4 + [72])) = *($2 + [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL $64(*($1), ($4 + [80]))
	CALL $64(*($1), ($4 + [92]))
	CALL $64(*($1), ($4 + [104]))
	CALL $64(*($1), ($4 + [116]))
	CALL $64(*($1), ($4 + [128]))
	CALL $64(*($1), ($4 + [140]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $39 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [160])
	$global$0 = $3
	*(($4 = $3) + [120]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $105($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [72]) + [24])) = (int_64)0
	*(($4 + [112])) = [0]
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	*($4 + [144]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $44(($4 + [24]), ($4 + [144]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	*(($6 = (($4 + [128]) + [8]))) = *($3)
	*($4 + [128]) = *($4 + [8])
	$3 = *($6)
	*((($4 + [144]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [128])
	*($4 + [40]) = $0
	*($4 + [144]) = $0
	*($4 + [148]) = ($4 + [120])
	*($4 + [144]) = ($4 + [24])
	CALL $45(($4 + [144]), ($4 + [72]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [104]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $108($2)
	$2 = [1]
	if ( ((*($4 + [104]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [112])))
	$global$0 = ($4 + [160])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [160])
	return $2
}

void .FUNC $36 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$global$0 = $2
	CALL require_auth($1)
	*(($2 + [152])) = [0]
	*($2 + [136]) = (int_64)-1
	$3 = *($0)
	*($2 + [120]) = $3
	*($2 + [128]) = $3
	*($2 + [144]) = (int_64)0
	$0 = [0]
	$4 = [0]
	$5 = CALL db_lowerbound_i64($3, $3, (int_64)-5003011376160280576, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $25(($2 + [120]), $5)
	if ( ((int_64)*($0 + [8]) == (int_64)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL eosio_assert([1], [9591])
	$0 = CALL db_next_i64(*($0 + [60]), ($2 + [16]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	$0 = CALL $25(($2 + [120]), $0)
	if ( ((int_64)*($0 + [8]) != (int_64)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$4 = [1]
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [8798])
	CALL eosio_assert(((int_64)*($0 + [16]) > (int_64)0), [8798])
	CALL eosio_assert(((uint_64)(int_64))(((int_64)((uint_64)CALL $fimport$9() / (uint_64)(int_64)1000000) & (int_64)4294967295) - *($0 + [48])) > (uint_64)(int_64)180), [8817])
	$5 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($5, [9830])
	CALL eosio_assert($5, [9591])
	$5 = CALL db_next_i64(*($0 + [60]), ($2 + [16]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	CALL $25(($2 + [120]), $5)
	
.LABEL $label$5
	CALL $27(($2 + [120]), $0)
	CALL eosio_assert($4, [8767])
	*($2 + [72]) = (int_64)3617214756542218240
	*($2 + [64]) = (int_64)4229331772100791680
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	$4 = CALL $102([8875])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$9 }
	$5 = ($0 + [16])
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$12 }
	*($2) = ($4 << [1])
	$0 = ($2 | [1])
	if ( $4 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$6 = (($4 + [16]) & [-16])
	$0 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $0
	*($2 + [4]) = $4
	
.LABEL $label$11
	CALL memcpy($0, [8875], $4)
	
.LABEL $label$10
	*(($0 + $4)) = [0]
	*(($2 + [40])) = *(($5 + [8]))
	$3 = *($5)
	$0 = ($2 + [8])
	*(($2 + [56])) = *($0)
	*($0) = [0]
	*($2 + [24]) = $1
	*($2 + [16]) = (int_64)4229331772100791680
	*($2 + [32]) = $3
	*($2 + [48]) = *($2)
	*($2) = (int_64)0
	$0 = CALL $8(($2 + [80]), ($2 + [64]), (int_64)6138663591592764928, (int_64)-3617168760277827584, ($2 + [16]))
	CALL $9(($2 + [160]), $0)
	$4 = *($2 + [160])
	CALL send_inline($4, (*($2 + [164]) - $4))
	$4 = *($2 + [160])
	if ( ($4 == 0) ){ goto $label$13 }
	*($2 + [164]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$13
	$4 = *($0 + [28])
	if ( ($4 == 0) ){ goto $label$14 }
	*(($0 + [32])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$14
	$4 = *($0 + [16])
	if ( ($4 == 0) ){ goto $label$15 }
	*(($0 + [20])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$15
	if ( (*(($2 + [48])) & [1]) ){ goto $label$17 }
	if ( (*($2) & [1]) ){ goto $label$16 }
	goto $label$8 
	
.LABEL $label$17
	CALL _ZdlPv(*(($2 + [56])))
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$16
	CALL _ZdlPv(*(($2 + [8])))
	$5 = *($2 + [144])
	if ( ($5 == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	CALL $84($2)
	
.LABEL $label$8
	$5 = *($2 + [144])
	if ( $5 ){ goto $label$6 }
	
.LABEL $label$7
	$global$0 = ($2 + [176])
	return 
	
.LABEL $label$6
	$6 = ($2 + [148])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$19 }
	
.LOOP $label$20:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$21 }
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$22 }
	CALL _ZdlPv(*(($4 + [40])))
	
.LABEL $label$22
	CALL _ZdlPv($4)
	
.LABEL $label$21
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$20 }
	$0 = *(($2 + [144]))
	goto $label$18 
	
.LABEL $label$19
	$0 = $5
	
.LABEL $label$18
	*($6) = $5
	CALL _ZdlPv($0)
	$global$0 = ($2 + [176])
	(unreachable)
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [96])
	$global$0 = $3
	CALL memory()
	if ( ((int_64)$2 != (int_64)-6569208335818555392) ){ goto $label$2 }
	CALL eosio_assert(((int_64)$1 == (int_64)6138663577826885632), [8888])
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$7 }
	if ( ((int_64)$2 > (int_64)-3838636559272361985) ){ goto $label$8 }
	if ( ((int_64)$2 == (int_64)-5001342339331915776) ){ goto $label$6 }
	if ( ((int_64)$2 == (int_64)-3838636584476511744) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-3838636584160091648) ){ goto $label$1 }
	*($3 + [76]) = [0]
	*($3 + [72]) = [1]
	*($3 + [24]) = *($3 + [72])
	CALL $38($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$8
	if ( ((int_64)$2 == (int_64)-3838636559272361984) ){ goto $label$4 }
	if ( ((int_64)$2 == (int_64)4930993837989429248) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	
.LABEL $label$7
	if ( ((int_64)$1 != (int_64)6138663591592764928) ){ goto $label$1 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	*($3 + [84]) = [0]
	*($3 + [80]) = [2]
	*($3) = *($3 + [80])
	CALL $39($0, (int_64)6138663591592764928, $3)
	goto $label$1 
	
.LABEL $label$6
	*($3 + [60]) = [0]
	*($3 + [56]) = [3]
	*($3 + [40]) = *($3 + [56])
	CALL $40($1, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [52]) = [0]
	*($3 + [48]) = [4]
	*($3 + [16]) = *($3 + [48])
	CALL $41($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [92]) = [0]
	*($3 + [88]) = [5]
	*($3 + [8]) = *($3 + [88])
	CALL $42($1, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [68]) = [0]
	*($3 + [64]) = [6]
	*($3 + [32]) = *($3 + [64])
	CALL $43($1, $1, ($3 + [32]))
	
.LABEL $label$1
	CALL $93([0])
	$global$0 = ($3 + [96])
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $108($0)
	
.LABEL $label$1
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC $32 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $91($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [40])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $33 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [128])
	$global$0 = $1
	CALL require_auth((int_64)4229331772100791680)
	*((($1 + [80]) + [32])) = [0]
	*($1 + [96]) = (int_64)-1
	$2 = *($0)
	*($1 + [80]) = $2
	*($1 + [88]) = $2
	*($1 + [104]) = (int_64)0
	$3 = CALL db_lowerbound_i64($2, $2, (int_64)-5003011376160280576, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $25(($1 + [80]), $3)
	$4 = ($1 + [88])
	
.LOOP $label$2:
	CALL eosio_assert([1], [9830])
	CALL eosio_assert([1], [9591])
	$5 = CALL db_next_i64(*($3 + [60]), ($1 + [40]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	CALL $25(($1 + [80]), $5)
	
.LABEL $label$3
	CALL $27(($1 + [80]), $3)
	CALL eosio_assert([1], [8730])
	$3 = CALL db_lowerbound_i64(*($1 + [80]), *($4), (int_64)-5003011376160280576, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $25(($1 + [80]), $3)
	goto $label$2 
	
.LABEL $label$1
	*((($1 + [40]) + [32])) = [0]
	*($1 + [56]) = (int_64)-1
	$2 = *($0)
	*($1 + [40]) = $2
	*($1 + [48]) = $2
	*($1 + [64]) = (int_64)0
	$3 = CALL db_lowerbound_i64($2, $2, (int_64)-3596430306756395008, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	$3 = CALL $7(($1 + [40]), $3)
	$4 = ($1 + [48])
	
.LOOP $label$5:
	CALL eosio_assert([1], [9830])
	CALL eosio_assert([1], [9591])
	$5 = CALL db_next_i64(*($3 + [36]), $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$6 }
	CALL $7(($1 + [40]), $5)
	
.LABEL $label$6
	CALL $16(($1 + [40]), $3)
	CALL eosio_assert([1], [8730])
	$3 = CALL db_lowerbound_i64(*($1 + [40]), *($4), (int_64)-3596430306756395008, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	$3 = CALL $7(($1 + [40]), $3)
	goto $label$5 
	
.LABEL $label$4
	*(($1 + [32])) = [0]
	*($1 + [16]) = (int_64)-1
	$2 = *($0)
	*($1) = $2
	*($1 + [8]) = $2
	*($1 + [24]) = (int_64)0
	$3 = CALL db_lowerbound_i64($2, $2, (int_64)-3838636682115022848, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$7 }
	$3 = CALL $34($1, $3)
	$4 = ($1 + [8])
	
.LOOP $label$8:
	CALL eosio_assert([1], [9830])
	CALL eosio_assert([1], [9591])
	$5 = CALL db_next_i64(*($3 + [164]), ($1 + [120]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$9 }
	CALL $34($1, $5)
	
.LABEL $label$9
	CALL $35($1, $3)
	CALL eosio_assert([1], [8767])
	$3 = CALL db_lowerbound_i64(*($1), *($4), (int_64)-3838636682115022848, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$7 }
	$3 = CALL $34($1, $3)
	goto $label$8 
	
.LABEL $label$7
	$4 = *($1 + [24])
	if ( ($4 == 0) ){ goto $label$10 }
	$0 = ($1 + [28])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$12 }
	
.LOOP $label$13:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$14 }
	CALL $15($5)
	CALL _ZdlPv($5)
	
.LABEL $label$14
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$13 }
	$3 = *(($1 + [24]))
	goto $label$11 
	
.LABEL $label$12
	$3 = $4
	
.LABEL $label$11
	*($0) = $4
	CALL _ZdlPv($3)
	
.LABEL $label$10
	$4 = *($1 + [64])
	if ( ($4 == 0) ){ goto $label$15 }
	$0 = ($1 + [68])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$17 }
	
.LOOP $label$18:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$19 }
	CALL _ZdlPv($5)
	
.LABEL $label$19
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$18 }
	$3 = *(($1 + [64]))
	goto $label$16 
	
.LABEL $label$17
	$3 = $4
	
.LABEL $label$16
	*($0) = $4
	CALL _ZdlPv($3)
	
.LABEL $label$15
	$4 = *($1 + [104])
	if ( ($4 == 0) ){ goto $label$20 }
	$0 = ($1 + [108])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$22 }
	
.LOOP $label$23:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$24 }
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$25 }
	CALL _ZdlPv(*(($5 + [40])))
	
.LABEL $label$25
	CALL _ZdlPv($5)
	
.LABEL $label$24
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$23 }
	$3 = *(($1 + [104]))
	goto $label$21 
	
.LABEL $label$22
	$3 = $4
	
.LABEL $label$21
	*($0) = $4
	CALL _ZdlPv($3)
	
.LABEL $label$20
	$global$0 = ($1 + [128])
}

void .FUNC $30 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $91($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$5 = *($0)
	$6 = *($4 + [8])
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [16]) = *($6)
	CALL $87(($1 + [32]), *($4 + [12]))
	*($1 + [48]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$4 = *($1 + [32])
	$6 = ( *(($1 + [36])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($6 + [40])
	$7 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$2 = CALL $105($4)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	CALL $71($3, $1)
	$7 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($5 + [8]), (int_64)-5003011376160280576, *(*($0 + [8])), $7, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$7 >= (uint_64)*($5 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $108($2)
	if ( (uint_64)($7 <= *($5 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [16])
}